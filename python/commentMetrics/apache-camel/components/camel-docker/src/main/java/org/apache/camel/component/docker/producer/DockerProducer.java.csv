# id;timestamp;commentText;codeText;commentWords;codeWords
DockerProducer -> private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message);1424675020;Produce a attach container request__@param client_@param message_@return;private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Attach Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        AttachContainerCmd attachContainerCmd = client.attachContainerCmd(containerId)___        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)___        if (followStream != null) {_            attachContainerCmd.withFollowStream(followStream)__        }_        _        Boolean logs = DockerHelper.getProperty(DockerConstants.DOCKER_LOGS, configuration, message, Boolean.class)___        if (logs != null) {_            attachContainerCmd.withLogs(logs)__        }_        _        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)___        if (stdErr != null) {_            attachContainerCmd.withStdErr(stdErr)__        }_        _        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)___        if (stdOut != null) {_            attachContainerCmd.withStdOut(stdOut)__        }___        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)___        if (timestamps != null) {_            attachContainerCmd.withTimestamps(timestamps)__        }__        return attachContainerCmd___    };produce,a,attach,container,request,param,client,param,message,return;private,attach,container,cmd,execute,attach,container,request,docker,client,client,message,message,logger,debug,executing,docker,attach,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,attach,container,cmd,attach,container,cmd,client,attach,container,cmd,container,id,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,attach,container,cmd,with,follow,stream,follow,stream,boolean,logs,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,logs,null,attach,container,cmd,with,logs,logs,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,attach,container,cmd,with,std,err,std,err,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,attach,container,cmd,with,std,out,std,out,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,attach,container,cmd,with,timestamps,timestamps,return,attach,container,cmd
DockerProducer -> private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message);1424675476;Produce a attach container request__@param client_@param message_@return;private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Attach Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        AttachContainerCmd attachContainerCmd = client.attachContainerCmd(containerId)___        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)___        if (followStream != null) {_            attachContainerCmd.withFollowStream(followStream)__        }__        Boolean logs = DockerHelper.getProperty(DockerConstants.DOCKER_LOGS, configuration, message, Boolean.class)___        if (logs != null) {_            attachContainerCmd.withLogs(logs)__        }__        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)___        if (stdErr != null) {_            attachContainerCmd.withStdErr(stdErr)__        }__        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)___        if (stdOut != null) {_            attachContainerCmd.withStdOut(stdOut)__        }___        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)___        if (timestamps != null) {_            attachContainerCmd.withTimestamps(timestamps)__        }__        return attachContainerCmd___    };produce,a,attach,container,request,param,client,param,message,return;private,attach,container,cmd,execute,attach,container,request,docker,client,client,message,message,logger,debug,executing,docker,attach,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,attach,container,cmd,attach,container,cmd,client,attach,container,cmd,container,id,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,attach,container,cmd,with,follow,stream,follow,stream,boolean,logs,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,logs,null,attach,container,cmd,with,logs,logs,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,attach,container,cmd,with,std,err,std,err,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,attach,container,cmd,with,std,out,std,out,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,attach,container,cmd,with,timestamps,timestamps,return,attach,container,cmd
DockerProducer -> private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message);1424877876;Produce a attach container request__@param client_@param message_@return;private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Attach Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        AttachContainerCmd attachContainerCmd = client.attachContainerCmd(containerId)___        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)___        if (followStream != null) {_            attachContainerCmd.withFollowStream(followStream)__        }__        Boolean logs = DockerHelper.getProperty(DockerConstants.DOCKER_LOGS, configuration, message, Boolean.class)___        if (logs != null) {_            attachContainerCmd.withLogs(logs)__        }__        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)___        if (stdErr != null) {_            attachContainerCmd.withStdErr(stdErr)__        }__        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)___        if (stdOut != null) {_            attachContainerCmd.withStdOut(stdOut)__        }___        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)___        if (timestamps != null) {_            attachContainerCmd.withTimestamps(timestamps)__        }__        return attachContainerCmd___    };produce,a,attach,container,request,param,client,param,message,return;private,attach,container,cmd,execute,attach,container,request,docker,client,client,message,message,logger,debug,executing,docker,attach,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,attach,container,cmd,attach,container,cmd,client,attach,container,cmd,container,id,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,attach,container,cmd,with,follow,stream,follow,stream,boolean,logs,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,logs,null,attach,container,cmd,with,logs,logs,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,attach,container,cmd,with,std,err,std,err,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,attach,container,cmd,with,std,out,std,out,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,attach,container,cmd,with,timestamps,timestamps,return,attach,container,cmd
DockerProducer -> private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message);1429199966;Produce a attach container request__@param client_@param message_@return;private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Attach Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        AttachContainerCmd attachContainerCmd = client.attachContainerCmd(containerId)___        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)___        if (followStream != null) {_            attachContainerCmd.withFollowStream(followStream)__        }__        Boolean logs = DockerHelper.getProperty(DockerConstants.DOCKER_LOGS, configuration, message, Boolean.class)___        if (logs != null) {_            attachContainerCmd.withLogs(logs)__        }__        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)___        if (stdErr != null) {_            attachContainerCmd.withStdErr(stdErr)__        }__        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)___        if (stdOut != null) {_            attachContainerCmd.withStdOut(stdOut)__        }___        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)___        if (timestamps != null) {_            attachContainerCmd.withTimestamps(timestamps)__        }__        return attachContainerCmd___    };produce,a,attach,container,request,param,client,param,message,return;private,attach,container,cmd,execute,attach,container,request,docker,client,client,message,message,logger,debug,executing,docker,attach,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,attach,container,cmd,attach,container,cmd,client,attach,container,cmd,container,id,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,attach,container,cmd,with,follow,stream,follow,stream,boolean,logs,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,logs,null,attach,container,cmd,with,logs,logs,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,attach,container,cmd,with,std,err,std,err,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,attach,container,cmd,with,std,out,std,out,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,attach,container,cmd,with,timestamps,timestamps,return,attach,container,cmd
DockerProducer -> private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message);1433489320;Produce a attach container request__@param client_@param message_@return;private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Attach Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        AttachContainerCmd attachContainerCmd = client.attachContainerCmd(containerId)___        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)___        if (followStream != null) {_            attachContainerCmd.withFollowStream(followStream)__        }__        Boolean logs = DockerHelper.getProperty(DockerConstants.DOCKER_LOGS, configuration, message, Boolean.class)___        if (logs != null) {_            attachContainerCmd.withLogs(logs)__        }__        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)___        if (stdErr != null) {_            attachContainerCmd.withStdErr(stdErr)__        }__        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)___        if (stdOut != null) {_            attachContainerCmd.withStdOut(stdOut)__        }___        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)___        if (timestamps != null) {_            attachContainerCmd.withTimestamps(timestamps)__        }__        return attachContainerCmd___    };produce,a,attach,container,request,param,client,param,message,return;private,attach,container,cmd,execute,attach,container,request,docker,client,client,message,message,logger,debug,executing,docker,attach,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,attach,container,cmd,attach,container,cmd,client,attach,container,cmd,container,id,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,attach,container,cmd,with,follow,stream,follow,stream,boolean,logs,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,logs,null,attach,container,cmd,with,logs,logs,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,attach,container,cmd,with,std,err,std,err,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,attach,container,cmd,with,std,out,std,out,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,attach,container,cmd,with,timestamps,timestamps,return,attach,container,cmd
DockerProducer -> private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message);1440239526;Produce a attach container request__@param client_@param message_@return;private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Attach Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        AttachContainerCmd attachContainerCmd = client.attachContainerCmd(containerId)___        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)___        if (followStream != null) {_            attachContainerCmd.withFollowStream(followStream)__        }__        Boolean logs = DockerHelper.getProperty(DockerConstants.DOCKER_LOGS, configuration, message, Boolean.class)___        if (logs != null) {_            attachContainerCmd.withLogs(logs)__        }__        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)___        if (stdErr != null) {_            attachContainerCmd.withStdErr(stdErr)__        }__        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)___        if (stdOut != null) {_            attachContainerCmd.withStdOut(stdOut)__        }___        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)___        if (timestamps != null) {_            attachContainerCmd.withTimestamps(timestamps)__        }__        return attachContainerCmd___    };produce,a,attach,container,request,param,client,param,message,return;private,attach,container,cmd,execute,attach,container,request,docker,client,client,message,message,logger,debug,executing,docker,attach,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,attach,container,cmd,attach,container,cmd,client,attach,container,cmd,container,id,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,attach,container,cmd,with,follow,stream,follow,stream,boolean,logs,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,logs,null,attach,container,cmd,with,logs,logs,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,attach,container,cmd,with,std,err,std,err,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,attach,container,cmd,with,std,out,std,out,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,attach,container,cmd,with,timestamps,timestamps,return,attach,container,cmd
DockerProducer -> private PingCmd executePingRequest(DockerClient client, Message message) throws DockerException;1415211488;Executes a ping platform request__@param client_@param message_@return_@throws DockerException;private PingCmd executePingRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Ping Request")__        _        PingCmd pingCmd = client.pingCmd()__        _        return pingCmd___    };executes,a,ping,platform,request,param,client,param,message,return,throws,docker,exception;private,ping,cmd,execute,ping,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,ping,request,ping,cmd,ping,cmd,client,ping,cmd,return,ping,cmd
DockerProducer -> private PingCmd executePingRequest(DockerClient client, Message message) throws DockerException;1415517409;Executes a ping platform request__@param client_@param message_@return_@throws DockerException;private PingCmd executePingRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Ping Request")__        _        PingCmd pingCmd = client.pingCmd()__        _        return pingCmd___    };executes,a,ping,platform,request,param,client,param,message,return,throws,docker,exception;private,ping,cmd,execute,ping,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,ping,request,ping,cmd,ping,cmd,client,ping,cmd,return,ping,cmd
DockerProducer -> private PingCmd executePingRequest(DockerClient client, Message message) throws DockerException;1423234542;Executes a ping platform request__@param client_@param message_@return_@throws DockerException;private PingCmd executePingRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Ping Request")__        _        PingCmd pingCmd = client.pingCmd()__        _        return pingCmd___    };executes,a,ping,platform,request,param,client,param,message,return,throws,docker,exception;private,ping,cmd,execute,ping,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,ping,request,ping,cmd,ping,cmd,client,ping,cmd,return,ping,cmd
DockerProducer -> private CreateContainerCmd executeCreateContainerRequest(DockerClient client, Message message);1424675020;Produce a create container request__@param client_@param message_@return;private CreateContainerCmd executeCreateContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Create Container Request")___        String image = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE, configuration, message, String.class)___        ObjectHelper.notNull(image, "Image must be specified")___        CreateContainerCmd createContainerCmd = client.createContainerCmd(image)___        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null) {_            createContainerCmd.withAttachStderr(attachStdErr)__        }_        _        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        if (attachStdIn != null) {_            createContainerCmd.withAttachStdin(attachStdIn)__        }__        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null) {_            createContainerCmd.withAttachStdout(attachStdOut)__        }_        _        Capability[] capAdd = DockerHelper.getArrayProperty(DockerConstants.DOCKER_CAP_ADD, message, Capability.class)___        if (capAdd != null) {_            createContainerCmd.withCapAdd(capAdd)__        }__        Capability[] capDrop = DockerHelper.getArrayProperty(DockerConstants.DOCKER_CAP_DROP, message, Capability.class)___        if (capDrop != null) {_            createContainerCmd.withCapDrop(capDrop)__        }_        _        String[] cmd = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmd != null) {_            createContainerCmd.withCmd(cmd)__        }_        _        Integer cpuShares = DockerHelper.getProperty(DockerConstants.DOCKER_CPU_SHARES, configuration, message, Integer.class)___        if (cpuShares != null) {_            createContainerCmd.withCpuShares(cpuShares)__        }_        _        Boolean disableNetwork = DockerHelper.getProperty(DockerConstants.DOCKER_DISABLE_NETWORK, configuration, message, Boolean.class)___        if (disableNetwork != null) {_            createContainerCmd.withDisableNetwork(disableNetwork)__        }_        _        String[] dns = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_DNS, message)___        if (dns != null) {_            createContainerCmd.withDns(dns)__        }__        String[] env = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_ENV, message)___        if (env != null) {_            createContainerCmd.withEnv(env)__        }_        _        String[] entrypoint = DockerHelper.getArrayProperty(DockerConstants.DOCKER_ENTRYPOINT, message, String.class)___        if (entrypoint != null) {_            createContainerCmd.withEntrypoint(entrypoint)__        }__        ExposedPort[] exposedPorts = DockerHelper.getArrayProperty(DockerConstants.DOCKER_EXPOSED_PORTS, message, ExposedPort.class)___        if (exposedPorts != null) {_            createContainerCmd.withExposedPorts(exposedPorts)__        }_        _        HostConfig hostConfig = DockerHelper.getProperty(DockerConstants.DOCKER_HOST_CONFIG, configuration, message, HostConfig.class)___        if (hostConfig != null) {_            createContainerCmd.withHostConfig(hostConfig)__        }__        String hostName = DockerHelper.getProperty(DockerConstants.DOCKER_HOSTNAME, configuration, message, String.class)___        if (hostName != null) {_            createContainerCmd.withHostName(hostName)__        }_        _        Long memoryLimit = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_LIMIT, configuration, message, Long.class)___        if (memoryLimit != null) {_            createContainerCmd.withMemoryLimit(memoryLimit)__        }__        Long memorySwap = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_SWAP, configuration, message, Long.class)___        if (memorySwap != null) {_            createContainerCmd.withMemorySwap(memorySwap)__        }__        String name = DockerHelper.getProperty(DockerConstants.DOCKER_NAME, configuration, message, String.class)___        if (name != null) {_            createContainerCmd.withName(name)__        }__        String[] portSpecs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_PORT_SPECS, message)___        if (portSpecs != null) {_            createContainerCmd.withPortSpecs(portSpecs)__        }__        Boolean stdInOpen = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_OPEN, configuration, message, Boolean.class)___        if (stdInOpen != null) {_            createContainerCmd.withStdinOpen(stdInOpen)__        }__        Boolean stdInOnce = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_ONCE, configuration, message, Boolean.class)___        if (stdInOnce != null) {_            createContainerCmd.withStdInOnce(stdInOnce)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            createContainerCmd.withTty(tty)__        }_        _        String user = DockerHelper.getProperty(DockerConstants.DOCKER_USER, configuration, message, String.class)___        if (user != null) {_            createContainerCmd.withUser(user)__        }__        Volume[] volume = DockerHelper.getArrayProperty(DockerConstants.DOCKER_VOLUMES, message, Volume.class)___        if (volume != null) {_            createContainerCmd.withVolumes(volume)__        }__        String[] volumesFrom = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_VOLUMES_FROM, message)___        if (volumesFrom != null) {_            createContainerCmd.withVolumesFrom(volumesFrom)__        }_        _        String workingDir = DockerHelper.getProperty(DockerConstants.DOCKER_WORKING_DIR, configuration, message, String.class)___        if (workingDir != null) {_            createContainerCmd.withWorkingDir(workingDir)__        }__        return createContainerCmd___    };produce,a,create,container,request,param,client,param,message,return;private,create,container,cmd,execute,create,container,request,docker,client,client,message,message,logger,debug,executing,docker,create,container,request,string,image,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,image,image,must,be,specified,create,container,cmd,create,container,cmd,client,create,container,cmd,image,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,create,container,cmd,with,attach,stderr,attach,std,err,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,in,null,create,container,cmd,with,attach,stdin,attach,std,in,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,create,container,cmd,with,attach,stdout,attach,std,out,capability,cap,add,docker,helper,get,array,property,docker,constants,message,capability,class,if,cap,add,null,create,container,cmd,with,cap,add,cap,add,capability,cap,drop,docker,helper,get,array,property,docker,constants,message,capability,class,if,cap,drop,null,create,container,cmd,with,cap,drop,cap,drop,string,cmd,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmd,null,create,container,cmd,with,cmd,cmd,integer,cpu,shares,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,cpu,shares,null,create,container,cmd,with,cpu,shares,cpu,shares,boolean,disable,network,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,disable,network,null,create,container,cmd,with,disable,network,disable,network,string,dns,docker,helper,parse,delimited,string,header,docker,constants,message,if,dns,null,create,container,cmd,with,dns,dns,string,env,docker,helper,parse,delimited,string,header,docker,constants,message,if,env,null,create,container,cmd,with,env,env,string,entrypoint,docker,helper,get,array,property,docker,constants,message,string,class,if,entrypoint,null,create,container,cmd,with,entrypoint,entrypoint,exposed,port,exposed,ports,docker,helper,get,array,property,docker,constants,message,exposed,port,class,if,exposed,ports,null,create,container,cmd,with,exposed,ports,exposed,ports,host,config,host,config,docker,helper,get,property,docker,constants,configuration,message,host,config,class,if,host,config,null,create,container,cmd,with,host,config,host,config,string,host,name,docker,helper,get,property,docker,constants,configuration,message,string,class,if,host,name,null,create,container,cmd,with,host,name,host,name,long,memory,limit,docker,helper,get,property,docker,constants,configuration,message,long,class,if,memory,limit,null,create,container,cmd,with,memory,limit,memory,limit,long,memory,swap,docker,helper,get,property,docker,constants,configuration,message,long,class,if,memory,swap,null,create,container,cmd,with,memory,swap,memory,swap,string,name,docker,helper,get,property,docker,constants,configuration,message,string,class,if,name,null,create,container,cmd,with,name,name,string,port,specs,docker,helper,parse,delimited,string,header,docker,constants,message,if,port,specs,null,create,container,cmd,with,port,specs,port,specs,boolean,std,in,open,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,open,null,create,container,cmd,with,stdin,open,std,in,open,boolean,std,in,once,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,once,null,create,container,cmd,with,std,in,once,std,in,once,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,create,container,cmd,with,tty,tty,string,user,docker,helper,get,property,docker,constants,configuration,message,string,class,if,user,null,create,container,cmd,with,user,user,volume,volume,docker,helper,get,array,property,docker,constants,message,volume,class,if,volume,null,create,container,cmd,with,volumes,volume,string,volumes,from,docker,helper,parse,delimited,string,header,docker,constants,message,if,volumes,from,null,create,container,cmd,with,volumes,from,volumes,from,string,working,dir,docker,helper,get,property,docker,constants,configuration,message,string,class,if,working,dir,null,create,container,cmd,with,working,dir,working,dir,return,create,container,cmd
DockerProducer -> private CreateContainerCmd executeCreateContainerRequest(DockerClient client, Message message);1424675476;Produce a create container request__@param client_@param message_@return;private CreateContainerCmd executeCreateContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Create Container Request")___        String image = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE, configuration, message, String.class)___        ObjectHelper.notNull(image, "Image must be specified")___        CreateContainerCmd createContainerCmd = client.createContainerCmd(image)___        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null) {_            createContainerCmd.withAttachStderr(attachStdErr)__        }__        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        if (attachStdIn != null) {_            createContainerCmd.withAttachStdin(attachStdIn)__        }__        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null) {_            createContainerCmd.withAttachStdout(attachStdOut)__        }__        Capability[] capAdd = DockerHelper.getArrayProperty(DockerConstants.DOCKER_CAP_ADD, message, Capability.class)___        if (capAdd != null) {_            createContainerCmd.withCapAdd(capAdd)__        }__        Capability[] capDrop = DockerHelper.getArrayProperty(DockerConstants.DOCKER_CAP_DROP, message, Capability.class)___        if (capDrop != null) {_            createContainerCmd.withCapDrop(capDrop)__        }__        String[] cmd = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmd != null) {_            createContainerCmd.withCmd(cmd)__        }__        Integer cpuShares = DockerHelper.getProperty(DockerConstants.DOCKER_CPU_SHARES, configuration, message, Integer.class)___        if (cpuShares != null) {_            createContainerCmd.withCpuShares(cpuShares)__        }__        Boolean disableNetwork = DockerHelper.getProperty(DockerConstants.DOCKER_DISABLE_NETWORK, configuration, message, Boolean.class)___        if (disableNetwork != null) {_            createContainerCmd.withDisableNetwork(disableNetwork)__        }__        String[] dns = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_DNS, message)___        if (dns != null) {_            createContainerCmd.withDns(dns)__        }__        String[] env = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_ENV, message)___        if (env != null) {_            createContainerCmd.withEnv(env)__        }__        String[] entrypoint = DockerHelper.getArrayProperty(DockerConstants.DOCKER_ENTRYPOINT, message, String.class)___        if (entrypoint != null) {_            createContainerCmd.withEntrypoint(entrypoint)__        }__        ExposedPort[] exposedPorts = DockerHelper.getArrayProperty(DockerConstants.DOCKER_EXPOSED_PORTS, message, ExposedPort.class)___        if (exposedPorts != null) {_            createContainerCmd.withExposedPorts(exposedPorts)__        }__        HostConfig hostConfig = DockerHelper.getProperty(DockerConstants.DOCKER_HOST_CONFIG, configuration, message, HostConfig.class)___        if (hostConfig != null) {_            createContainerCmd.withHostConfig(hostConfig)__        }__        String hostName = DockerHelper.getProperty(DockerConstants.DOCKER_HOSTNAME, configuration, message, String.class)___        if (hostName != null) {_            createContainerCmd.withHostName(hostName)__        }__        Long memoryLimit = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_LIMIT, configuration, message, Long.class)___        if (memoryLimit != null) {_            createContainerCmd.withMemoryLimit(memoryLimit)__        }__        Long memorySwap = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_SWAP, configuration, message, Long.class)___        if (memorySwap != null) {_            createContainerCmd.withMemorySwap(memorySwap)__        }__        String name = DockerHelper.getProperty(DockerConstants.DOCKER_NAME, configuration, message, String.class)___        if (name != null) {_            createContainerCmd.withName(name)__        }__        String[] portSpecs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_PORT_SPECS, message)___        if (portSpecs != null) {_            createContainerCmd.withPortSpecs(portSpecs)__        }__        Boolean stdInOpen = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_OPEN, configuration, message, Boolean.class)___        if (stdInOpen != null) {_            createContainerCmd.withStdinOpen(stdInOpen)__        }__        Boolean stdInOnce = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_ONCE, configuration, message, Boolean.class)___        if (stdInOnce != null) {_            createContainerCmd.withStdInOnce(stdInOnce)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            createContainerCmd.withTty(tty)__        }__        String user = DockerHelper.getProperty(DockerConstants.DOCKER_USER, configuration, message, String.class)___        if (user != null) {_            createContainerCmd.withUser(user)__        }__        Volume[] volume = DockerHelper.getArrayProperty(DockerConstants.DOCKER_VOLUMES, message, Volume.class)___        if (volume != null) {_            createContainerCmd.withVolumes(volume)__        }__        String[] volumesFrom = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_VOLUMES_FROM, message)___        if (volumesFrom != null) {_            createContainerCmd.withVolumesFrom(volumesFrom)__        }__        String workingDir = DockerHelper.getProperty(DockerConstants.DOCKER_WORKING_DIR, configuration, message, String.class)___        if (workingDir != null) {_            createContainerCmd.withWorkingDir(workingDir)__        }__        return createContainerCmd___    };produce,a,create,container,request,param,client,param,message,return;private,create,container,cmd,execute,create,container,request,docker,client,client,message,message,logger,debug,executing,docker,create,container,request,string,image,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,image,image,must,be,specified,create,container,cmd,create,container,cmd,client,create,container,cmd,image,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,create,container,cmd,with,attach,stderr,attach,std,err,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,in,null,create,container,cmd,with,attach,stdin,attach,std,in,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,create,container,cmd,with,attach,stdout,attach,std,out,capability,cap,add,docker,helper,get,array,property,docker,constants,message,capability,class,if,cap,add,null,create,container,cmd,with,cap,add,cap,add,capability,cap,drop,docker,helper,get,array,property,docker,constants,message,capability,class,if,cap,drop,null,create,container,cmd,with,cap,drop,cap,drop,string,cmd,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmd,null,create,container,cmd,with,cmd,cmd,integer,cpu,shares,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,cpu,shares,null,create,container,cmd,with,cpu,shares,cpu,shares,boolean,disable,network,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,disable,network,null,create,container,cmd,with,disable,network,disable,network,string,dns,docker,helper,parse,delimited,string,header,docker,constants,message,if,dns,null,create,container,cmd,with,dns,dns,string,env,docker,helper,parse,delimited,string,header,docker,constants,message,if,env,null,create,container,cmd,with,env,env,string,entrypoint,docker,helper,get,array,property,docker,constants,message,string,class,if,entrypoint,null,create,container,cmd,with,entrypoint,entrypoint,exposed,port,exposed,ports,docker,helper,get,array,property,docker,constants,message,exposed,port,class,if,exposed,ports,null,create,container,cmd,with,exposed,ports,exposed,ports,host,config,host,config,docker,helper,get,property,docker,constants,configuration,message,host,config,class,if,host,config,null,create,container,cmd,with,host,config,host,config,string,host,name,docker,helper,get,property,docker,constants,configuration,message,string,class,if,host,name,null,create,container,cmd,with,host,name,host,name,long,memory,limit,docker,helper,get,property,docker,constants,configuration,message,long,class,if,memory,limit,null,create,container,cmd,with,memory,limit,memory,limit,long,memory,swap,docker,helper,get,property,docker,constants,configuration,message,long,class,if,memory,swap,null,create,container,cmd,with,memory,swap,memory,swap,string,name,docker,helper,get,property,docker,constants,configuration,message,string,class,if,name,null,create,container,cmd,with,name,name,string,port,specs,docker,helper,parse,delimited,string,header,docker,constants,message,if,port,specs,null,create,container,cmd,with,port,specs,port,specs,boolean,std,in,open,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,open,null,create,container,cmd,with,stdin,open,std,in,open,boolean,std,in,once,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,once,null,create,container,cmd,with,std,in,once,std,in,once,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,create,container,cmd,with,tty,tty,string,user,docker,helper,get,property,docker,constants,configuration,message,string,class,if,user,null,create,container,cmd,with,user,user,volume,volume,docker,helper,get,array,property,docker,constants,message,volume,class,if,volume,null,create,container,cmd,with,volumes,volume,string,volumes,from,docker,helper,parse,delimited,string,header,docker,constants,message,if,volumes,from,null,create,container,cmd,with,volumes,from,volumes,from,string,working,dir,docker,helper,get,property,docker,constants,configuration,message,string,class,if,working,dir,null,create,container,cmd,with,working,dir,working,dir,return,create,container,cmd
DockerProducer -> private CreateContainerCmd executeCreateContainerRequest(DockerClient client, Message message);1424877876;Produce a create container request__@param client_@param message_@return;private CreateContainerCmd executeCreateContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Create Container Request")___        String image = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE, configuration, message, String.class)___        ObjectHelper.notNull(image, "Image must be specified")___        CreateContainerCmd createContainerCmd = client.createContainerCmd(image)___        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null) {_            createContainerCmd.withAttachStderr(attachStdErr)__        }__        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        if (attachStdIn != null) {_            createContainerCmd.withAttachStdin(attachStdIn)__        }__        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null) {_            createContainerCmd.withAttachStdout(attachStdOut)__        }__        Capability[] capAdd = DockerHelper.getArrayProperty(DockerConstants.DOCKER_CAP_ADD, message, Capability.class)___        if (capAdd != null) {_            createContainerCmd.withCapAdd(capAdd)__        }__        Capability[] capDrop = DockerHelper.getArrayProperty(DockerConstants.DOCKER_CAP_DROP, message, Capability.class)___        if (capDrop != null) {_            createContainerCmd.withCapDrop(capDrop)__        }__        String[] cmd = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmd != null) {_            createContainerCmd.withCmd(cmd)__        }__        Integer cpuShares = DockerHelper.getProperty(DockerConstants.DOCKER_CPU_SHARES, configuration, message, Integer.class)___        if (cpuShares != null) {_            createContainerCmd.withCpuShares(cpuShares)__        }__        Boolean disableNetwork = DockerHelper.getProperty(DockerConstants.DOCKER_DISABLE_NETWORK, configuration, message, Boolean.class)___        if (disableNetwork != null) {_            createContainerCmd.withDisableNetwork(disableNetwork)__        }__        String[] dns = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_DNS, message)___        if (dns != null) {_            createContainerCmd.withDns(dns)__        }__        String[] env = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_ENV, message)___        if (env != null) {_            createContainerCmd.withEnv(env)__        }__        String[] entrypoint = DockerHelper.getArrayProperty(DockerConstants.DOCKER_ENTRYPOINT, message, String.class)___        if (entrypoint != null) {_            createContainerCmd.withEntrypoint(entrypoint)__        }__        ExposedPort[] exposedPorts = DockerHelper.getArrayProperty(DockerConstants.DOCKER_EXPOSED_PORTS, message, ExposedPort.class)___        if (exposedPorts != null) {_            createContainerCmd.withExposedPorts(exposedPorts)__        }__        HostConfig hostConfig = DockerHelper.getProperty(DockerConstants.DOCKER_HOST_CONFIG, configuration, message, HostConfig.class)___        if (hostConfig != null) {_            createContainerCmd.withHostConfig(hostConfig)__        }__        String hostName = DockerHelper.getProperty(DockerConstants.DOCKER_HOSTNAME, configuration, message, String.class)___        if (hostName != null) {_            createContainerCmd.withHostName(hostName)__        }__        Long memoryLimit = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_LIMIT, configuration, message, Long.class)___        if (memoryLimit != null) {_            createContainerCmd.withMemoryLimit(memoryLimit)__        }__        Long memorySwap = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_SWAP, configuration, message, Long.class)___        if (memorySwap != null) {_            createContainerCmd.withMemorySwap(memorySwap)__        }__        String name = DockerHelper.getProperty(DockerConstants.DOCKER_NAME, configuration, message, String.class)___        if (name != null) {_            createContainerCmd.withName(name)__        }__        String[] portSpecs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_PORT_SPECS, message)___        if (portSpecs != null) {_            createContainerCmd.withPortSpecs(portSpecs)__        }__        Boolean stdInOpen = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_OPEN, configuration, message, Boolean.class)___        if (stdInOpen != null) {_            createContainerCmd.withStdinOpen(stdInOpen)__        }__        Boolean stdInOnce = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_ONCE, configuration, message, Boolean.class)___        if (stdInOnce != null) {_            createContainerCmd.withStdInOnce(stdInOnce)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            createContainerCmd.withTty(tty)__        }__        String user = DockerHelper.getProperty(DockerConstants.DOCKER_USER, configuration, message, String.class)___        if (user != null) {_            createContainerCmd.withUser(user)__        }__        Volume[] volume = DockerHelper.getArrayProperty(DockerConstants.DOCKER_VOLUMES, message, Volume.class)___        if (volume != null) {_            createContainerCmd.withVolumes(volume)__        }__        String[] volumesFrom = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_VOLUMES_FROM, message)___        if (volumesFrom != null) {_            createContainerCmd.withVolumesFrom(volumesFrom)__        }__        String workingDir = DockerHelper.getProperty(DockerConstants.DOCKER_WORKING_DIR, configuration, message, String.class)___        if (workingDir != null) {_            createContainerCmd.withWorkingDir(workingDir)__        }__        return createContainerCmd___    };produce,a,create,container,request,param,client,param,message,return;private,create,container,cmd,execute,create,container,request,docker,client,client,message,message,logger,debug,executing,docker,create,container,request,string,image,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,image,image,must,be,specified,create,container,cmd,create,container,cmd,client,create,container,cmd,image,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,create,container,cmd,with,attach,stderr,attach,std,err,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,in,null,create,container,cmd,with,attach,stdin,attach,std,in,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,create,container,cmd,with,attach,stdout,attach,std,out,capability,cap,add,docker,helper,get,array,property,docker,constants,message,capability,class,if,cap,add,null,create,container,cmd,with,cap,add,cap,add,capability,cap,drop,docker,helper,get,array,property,docker,constants,message,capability,class,if,cap,drop,null,create,container,cmd,with,cap,drop,cap,drop,string,cmd,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmd,null,create,container,cmd,with,cmd,cmd,integer,cpu,shares,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,cpu,shares,null,create,container,cmd,with,cpu,shares,cpu,shares,boolean,disable,network,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,disable,network,null,create,container,cmd,with,disable,network,disable,network,string,dns,docker,helper,parse,delimited,string,header,docker,constants,message,if,dns,null,create,container,cmd,with,dns,dns,string,env,docker,helper,parse,delimited,string,header,docker,constants,message,if,env,null,create,container,cmd,with,env,env,string,entrypoint,docker,helper,get,array,property,docker,constants,message,string,class,if,entrypoint,null,create,container,cmd,with,entrypoint,entrypoint,exposed,port,exposed,ports,docker,helper,get,array,property,docker,constants,message,exposed,port,class,if,exposed,ports,null,create,container,cmd,with,exposed,ports,exposed,ports,host,config,host,config,docker,helper,get,property,docker,constants,configuration,message,host,config,class,if,host,config,null,create,container,cmd,with,host,config,host,config,string,host,name,docker,helper,get,property,docker,constants,configuration,message,string,class,if,host,name,null,create,container,cmd,with,host,name,host,name,long,memory,limit,docker,helper,get,property,docker,constants,configuration,message,long,class,if,memory,limit,null,create,container,cmd,with,memory,limit,memory,limit,long,memory,swap,docker,helper,get,property,docker,constants,configuration,message,long,class,if,memory,swap,null,create,container,cmd,with,memory,swap,memory,swap,string,name,docker,helper,get,property,docker,constants,configuration,message,string,class,if,name,null,create,container,cmd,with,name,name,string,port,specs,docker,helper,parse,delimited,string,header,docker,constants,message,if,port,specs,null,create,container,cmd,with,port,specs,port,specs,boolean,std,in,open,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,open,null,create,container,cmd,with,stdin,open,std,in,open,boolean,std,in,once,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,once,null,create,container,cmd,with,std,in,once,std,in,once,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,create,container,cmd,with,tty,tty,string,user,docker,helper,get,property,docker,constants,configuration,message,string,class,if,user,null,create,container,cmd,with,user,user,volume,volume,docker,helper,get,array,property,docker,constants,message,volume,class,if,volume,null,create,container,cmd,with,volumes,volume,string,volumes,from,docker,helper,parse,delimited,string,header,docker,constants,message,if,volumes,from,null,create,container,cmd,with,volumes,from,volumes,from,string,working,dir,docker,helper,get,property,docker,constants,configuration,message,string,class,if,working,dir,null,create,container,cmd,with,working,dir,working,dir,return,create,container,cmd
DockerProducer -> private CreateContainerCmd executeCreateContainerRequest(DockerClient client, Message message);1429199966;Produce a create container request__@param client_@param message_@return;private CreateContainerCmd executeCreateContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Create Container Request")___        String image = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE, configuration, message, String.class)___        ObjectHelper.notNull(image, "Image must be specified")___        CreateContainerCmd createContainerCmd = client.createContainerCmd(image)___        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null) {_            createContainerCmd.withAttachStderr(attachStdErr)__        }__        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        if (attachStdIn != null) {_            createContainerCmd.withAttachStdin(attachStdIn)__        }__        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null) {_            createContainerCmd.withAttachStdout(attachStdOut)__        }__        Capability[] capAdd = DockerHelper.getArrayProperty(DockerConstants.DOCKER_CAP_ADD, message, Capability.class)___        if (capAdd != null) {_            createContainerCmd.withCapAdd(capAdd)__        }__        Capability[] capDrop = DockerHelper.getArrayProperty(DockerConstants.DOCKER_CAP_DROP, message, Capability.class)___        if (capDrop != null) {_            createContainerCmd.withCapDrop(capDrop)__        }__        String[] cmd = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmd != null) {_            createContainerCmd.withCmd(cmd)__        }__        Integer cpuShares = DockerHelper.getProperty(DockerConstants.DOCKER_CPU_SHARES, configuration, message, Integer.class)___        if (cpuShares != null) {_            createContainerCmd.withCpuShares(cpuShares)__        }__        Boolean disableNetwork = DockerHelper.getProperty(DockerConstants.DOCKER_DISABLE_NETWORK, configuration, message, Boolean.class)___        if (disableNetwork != null) {_            createContainerCmd.withDisableNetwork(disableNetwork)__        }__        String[] dns = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_DNS, message)___        if (dns != null) {_            createContainerCmd.withDns(dns)__        }__        String[] env = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_ENV, message)___        if (env != null) {_            createContainerCmd.withEnv(env)__        }__        String[] entrypoint = DockerHelper.getArrayProperty(DockerConstants.DOCKER_ENTRYPOINT, message, String.class)___        if (entrypoint != null) {_            createContainerCmd.withEntrypoint(entrypoint)__        }__        ExposedPort[] exposedPorts = DockerHelper.getArrayProperty(DockerConstants.DOCKER_EXPOSED_PORTS, message, ExposedPort.class)___        if (exposedPorts != null) {_            createContainerCmd.withExposedPorts(exposedPorts)__        }__        HostConfig hostConfig = DockerHelper.getProperty(DockerConstants.DOCKER_HOST_CONFIG, configuration, message, HostConfig.class)___        if (hostConfig != null) {_            createContainerCmd.withHostConfig(hostConfig)__        }__        String hostName = DockerHelper.getProperty(DockerConstants.DOCKER_HOSTNAME, configuration, message, String.class)___        if (hostName != null) {_            createContainerCmd.withHostName(hostName)__        }__        Long memoryLimit = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_LIMIT, configuration, message, Long.class)___        if (memoryLimit != null) {_            createContainerCmd.withMemoryLimit(memoryLimit)__        }__        Long memorySwap = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_SWAP, configuration, message, Long.class)___        if (memorySwap != null) {_            createContainerCmd.withMemorySwap(memorySwap)__        }__        String name = DockerHelper.getProperty(DockerConstants.DOCKER_NAME, configuration, message, String.class)___        if (name != null) {_            createContainerCmd.withName(name)__        }__        String[] portSpecs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_PORT_SPECS, message)___        if (portSpecs != null) {_            createContainerCmd.withPortSpecs(portSpecs)__        }__        Boolean stdInOpen = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_OPEN, configuration, message, Boolean.class)___        if (stdInOpen != null) {_            createContainerCmd.withStdinOpen(stdInOpen)__        }__        Boolean stdInOnce = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_ONCE, configuration, message, Boolean.class)___        if (stdInOnce != null) {_            createContainerCmd.withStdInOnce(stdInOnce)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            createContainerCmd.withTty(tty)__        }__        String user = DockerHelper.getProperty(DockerConstants.DOCKER_USER, configuration, message, String.class)___        if (user != null) {_            createContainerCmd.withUser(user)__        }__        Volume[] volume = DockerHelper.getArrayProperty(DockerConstants.DOCKER_VOLUMES, message, Volume.class)___        if (volume != null) {_            createContainerCmd.withVolumes(volume)__        }__        VolumesFrom[] volumesFrom = DockerHelper.getArrayProperty(DockerConstants.DOCKER_VOLUMES_FROM, message, VolumesFrom.class)___        if (volumesFrom != null) {_            createContainerCmd.withVolumesFrom(volumesFrom)__        }__        String workingDir = DockerHelper.getProperty(DockerConstants.DOCKER_WORKING_DIR, configuration, message, String.class)___        if (workingDir != null) {_            createContainerCmd.withWorkingDir(workingDir)__        }__        return createContainerCmd___    };produce,a,create,container,request,param,client,param,message,return;private,create,container,cmd,execute,create,container,request,docker,client,client,message,message,logger,debug,executing,docker,create,container,request,string,image,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,image,image,must,be,specified,create,container,cmd,create,container,cmd,client,create,container,cmd,image,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,create,container,cmd,with,attach,stderr,attach,std,err,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,in,null,create,container,cmd,with,attach,stdin,attach,std,in,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,create,container,cmd,with,attach,stdout,attach,std,out,capability,cap,add,docker,helper,get,array,property,docker,constants,message,capability,class,if,cap,add,null,create,container,cmd,with,cap,add,cap,add,capability,cap,drop,docker,helper,get,array,property,docker,constants,message,capability,class,if,cap,drop,null,create,container,cmd,with,cap,drop,cap,drop,string,cmd,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmd,null,create,container,cmd,with,cmd,cmd,integer,cpu,shares,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,cpu,shares,null,create,container,cmd,with,cpu,shares,cpu,shares,boolean,disable,network,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,disable,network,null,create,container,cmd,with,disable,network,disable,network,string,dns,docker,helper,parse,delimited,string,header,docker,constants,message,if,dns,null,create,container,cmd,with,dns,dns,string,env,docker,helper,parse,delimited,string,header,docker,constants,message,if,env,null,create,container,cmd,with,env,env,string,entrypoint,docker,helper,get,array,property,docker,constants,message,string,class,if,entrypoint,null,create,container,cmd,with,entrypoint,entrypoint,exposed,port,exposed,ports,docker,helper,get,array,property,docker,constants,message,exposed,port,class,if,exposed,ports,null,create,container,cmd,with,exposed,ports,exposed,ports,host,config,host,config,docker,helper,get,property,docker,constants,configuration,message,host,config,class,if,host,config,null,create,container,cmd,with,host,config,host,config,string,host,name,docker,helper,get,property,docker,constants,configuration,message,string,class,if,host,name,null,create,container,cmd,with,host,name,host,name,long,memory,limit,docker,helper,get,property,docker,constants,configuration,message,long,class,if,memory,limit,null,create,container,cmd,with,memory,limit,memory,limit,long,memory,swap,docker,helper,get,property,docker,constants,configuration,message,long,class,if,memory,swap,null,create,container,cmd,with,memory,swap,memory,swap,string,name,docker,helper,get,property,docker,constants,configuration,message,string,class,if,name,null,create,container,cmd,with,name,name,string,port,specs,docker,helper,parse,delimited,string,header,docker,constants,message,if,port,specs,null,create,container,cmd,with,port,specs,port,specs,boolean,std,in,open,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,open,null,create,container,cmd,with,stdin,open,std,in,open,boolean,std,in,once,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,once,null,create,container,cmd,with,std,in,once,std,in,once,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,create,container,cmd,with,tty,tty,string,user,docker,helper,get,property,docker,constants,configuration,message,string,class,if,user,null,create,container,cmd,with,user,user,volume,volume,docker,helper,get,array,property,docker,constants,message,volume,class,if,volume,null,create,container,cmd,with,volumes,volume,volumes,from,volumes,from,docker,helper,get,array,property,docker,constants,message,volumes,from,class,if,volumes,from,null,create,container,cmd,with,volumes,from,volumes,from,string,working,dir,docker,helper,get,property,docker,constants,configuration,message,string,class,if,working,dir,null,create,container,cmd,with,working,dir,working,dir,return,create,container,cmd
DockerProducer -> private CreateContainerCmd executeCreateContainerRequest(DockerClient client, Message message);1433489320;Produce a create container request__@param client_@param message_@return;private CreateContainerCmd executeCreateContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Create Container Request")___        String image = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE, configuration, message, String.class)___        ObjectHelper.notNull(image, "Image must be specified")___        CreateContainerCmd createContainerCmd = client.createContainerCmd(image)___        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null) {_            createContainerCmd.withAttachStderr(attachStdErr)__        }__        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        if (attachStdIn != null) {_            createContainerCmd.withAttachStdin(attachStdIn)__        }__        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null) {_            createContainerCmd.withAttachStdout(attachStdOut)__        }__        Capability[] capAdd = DockerHelper.getArrayProperty(DockerConstants.DOCKER_CAP_ADD, message, Capability.class)___        if (capAdd != null) {_            createContainerCmd.withCapAdd(capAdd)__        }__        Capability[] capDrop = DockerHelper.getArrayProperty(DockerConstants.DOCKER_CAP_DROP, message, Capability.class)___        if (capDrop != null) {_            createContainerCmd.withCapDrop(capDrop)__        }__        String[] cmd = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmd != null) {_            createContainerCmd.withCmd(cmd)__        }__        Integer cpuShares = DockerHelper.getProperty(DockerConstants.DOCKER_CPU_SHARES, configuration, message, Integer.class)___        if (cpuShares != null) {_            createContainerCmd.withCpuShares(cpuShares)__        }__        Boolean disableNetwork = DockerHelper.getProperty(DockerConstants.DOCKER_DISABLE_NETWORK, configuration, message, Boolean.class)___        if (disableNetwork != null) {_            createContainerCmd.withNetworkDisabled(disableNetwork)__        }__        String[] dns = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_DNS, message)___        if (dns != null) {_            createContainerCmd.withDns(dns)__        }__        String[] env = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_ENV, message)___        if (env != null) {_            createContainerCmd.withEnv(env)__        }__        String[] entrypoint = DockerHelper.getArrayProperty(DockerConstants.DOCKER_ENTRYPOINT, message, String.class)___        if (entrypoint != null) {_            createContainerCmd.withEntrypoint(entrypoint)__        }__        ExposedPort[] exposedPorts = DockerHelper.getArrayProperty(DockerConstants.DOCKER_EXPOSED_PORTS, message, ExposedPort.class)___        if (exposedPorts != null) {_            createContainerCmd.withExposedPorts(exposedPorts)__        }__        HostConfig hostConfig = DockerHelper.getProperty(DockerConstants.DOCKER_HOST_CONFIG, configuration, message, HostConfig.class)___        if (hostConfig != null) {_            createContainerCmd.withHostConfig(hostConfig)__        }__        String hostName = DockerHelper.getProperty(DockerConstants.DOCKER_HOSTNAME, configuration, message, String.class)___        if (hostName != null) {_            createContainerCmd.withHostName(hostName)__        }__        Long memoryLimit = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_LIMIT, configuration, message, Long.class)___        if (memoryLimit != null) {_            createContainerCmd.withMemoryLimit(memoryLimit)__        }__        Long memorySwap = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_SWAP, configuration, message, Long.class)___        if (memorySwap != null) {_            createContainerCmd.withMemorySwap(memorySwap)__        }__        String name = DockerHelper.getProperty(DockerConstants.DOCKER_NAME, configuration, message, String.class)___        if (name != null) {_            createContainerCmd.withName(name)__        }__        String[] portSpecs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_PORT_SPECS, message)___        if (portSpecs != null) {_            createContainerCmd.withPortSpecs(portSpecs)__        }__        Boolean stdInOpen = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_OPEN, configuration, message, Boolean.class)___        if (stdInOpen != null) {_            createContainerCmd.withStdinOpen(stdInOpen)__        }__        Boolean stdInOnce = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_ONCE, configuration, message, Boolean.class)___        if (stdInOnce != null) {_            createContainerCmd.withStdInOnce(stdInOnce)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            createContainerCmd.withTty(tty)__        }__        String user = DockerHelper.getProperty(DockerConstants.DOCKER_USER, configuration, message, String.class)___        if (user != null) {_            createContainerCmd.withUser(user)__        }__        Volume[] volume = DockerHelper.getArrayProperty(DockerConstants.DOCKER_VOLUMES, message, Volume.class)___        if (volume != null) {_            createContainerCmd.withVolumes(volume)__        }__        VolumesFrom[] volumesFrom = DockerHelper.getArrayProperty(DockerConstants.DOCKER_VOLUMES_FROM, message, VolumesFrom.class)___        if (volumesFrom != null) {_            createContainerCmd.withVolumesFrom(volumesFrom)__        }__        String workingDir = DockerHelper.getProperty(DockerConstants.DOCKER_WORKING_DIR, configuration, message, String.class)___        if (workingDir != null) {_            createContainerCmd.withWorkingDir(workingDir)__        }__        return createContainerCmd___    };produce,a,create,container,request,param,client,param,message,return;private,create,container,cmd,execute,create,container,request,docker,client,client,message,message,logger,debug,executing,docker,create,container,request,string,image,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,image,image,must,be,specified,create,container,cmd,create,container,cmd,client,create,container,cmd,image,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,create,container,cmd,with,attach,stderr,attach,std,err,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,in,null,create,container,cmd,with,attach,stdin,attach,std,in,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,create,container,cmd,with,attach,stdout,attach,std,out,capability,cap,add,docker,helper,get,array,property,docker,constants,message,capability,class,if,cap,add,null,create,container,cmd,with,cap,add,cap,add,capability,cap,drop,docker,helper,get,array,property,docker,constants,message,capability,class,if,cap,drop,null,create,container,cmd,with,cap,drop,cap,drop,string,cmd,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmd,null,create,container,cmd,with,cmd,cmd,integer,cpu,shares,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,cpu,shares,null,create,container,cmd,with,cpu,shares,cpu,shares,boolean,disable,network,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,disable,network,null,create,container,cmd,with,network,disabled,disable,network,string,dns,docker,helper,parse,delimited,string,header,docker,constants,message,if,dns,null,create,container,cmd,with,dns,dns,string,env,docker,helper,parse,delimited,string,header,docker,constants,message,if,env,null,create,container,cmd,with,env,env,string,entrypoint,docker,helper,get,array,property,docker,constants,message,string,class,if,entrypoint,null,create,container,cmd,with,entrypoint,entrypoint,exposed,port,exposed,ports,docker,helper,get,array,property,docker,constants,message,exposed,port,class,if,exposed,ports,null,create,container,cmd,with,exposed,ports,exposed,ports,host,config,host,config,docker,helper,get,property,docker,constants,configuration,message,host,config,class,if,host,config,null,create,container,cmd,with,host,config,host,config,string,host,name,docker,helper,get,property,docker,constants,configuration,message,string,class,if,host,name,null,create,container,cmd,with,host,name,host,name,long,memory,limit,docker,helper,get,property,docker,constants,configuration,message,long,class,if,memory,limit,null,create,container,cmd,with,memory,limit,memory,limit,long,memory,swap,docker,helper,get,property,docker,constants,configuration,message,long,class,if,memory,swap,null,create,container,cmd,with,memory,swap,memory,swap,string,name,docker,helper,get,property,docker,constants,configuration,message,string,class,if,name,null,create,container,cmd,with,name,name,string,port,specs,docker,helper,parse,delimited,string,header,docker,constants,message,if,port,specs,null,create,container,cmd,with,port,specs,port,specs,boolean,std,in,open,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,open,null,create,container,cmd,with,stdin,open,std,in,open,boolean,std,in,once,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,once,null,create,container,cmd,with,std,in,once,std,in,once,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,create,container,cmd,with,tty,tty,string,user,docker,helper,get,property,docker,constants,configuration,message,string,class,if,user,null,create,container,cmd,with,user,user,volume,volume,docker,helper,get,array,property,docker,constants,message,volume,class,if,volume,null,create,container,cmd,with,volumes,volume,volumes,from,volumes,from,docker,helper,get,array,property,docker,constants,message,volumes,from,class,if,volumes,from,null,create,container,cmd,with,volumes,from,volumes,from,string,working,dir,docker,helper,get,property,docker,constants,configuration,message,string,class,if,working,dir,null,create,container,cmd,with,working,dir,working,dir,return,create,container,cmd
DockerProducer -> private CreateContainerCmd executeCreateContainerRequest(DockerClient client, Message message);1440239526;Produce a create container request__@param client_@param message_@return;private CreateContainerCmd executeCreateContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Create Container Request")___        String image = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE, configuration, message, String.class)___        ObjectHelper.notNull(image, "Image must be specified")___        CreateContainerCmd createContainerCmd = client.createContainerCmd(image)___        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null) {_            createContainerCmd.withAttachStderr(attachStdErr)__        }__        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        if (attachStdIn != null) {_            createContainerCmd.withAttachStdin(attachStdIn)__        }__        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null) {_            createContainerCmd.withAttachStdout(attachStdOut)__        }__        Capability[] capAdd = DockerHelper.getArrayProperty(DockerConstants.DOCKER_CAP_ADD, message, Capability.class)___        if (capAdd != null) {_            createContainerCmd.withCapAdd(capAdd)__        }__        Capability[] capDrop = DockerHelper.getArrayProperty(DockerConstants.DOCKER_CAP_DROP, message, Capability.class)___        if (capDrop != null) {_            createContainerCmd.withCapDrop(capDrop)__        }__        String[] cmd = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmd != null) {_            createContainerCmd.withCmd(cmd)__        }__        Integer cpuShares = DockerHelper.getProperty(DockerConstants.DOCKER_CPU_SHARES, configuration, message, Integer.class)___        if (cpuShares != null) {_            createContainerCmd.withCpuShares(cpuShares)__        }__        Boolean disableNetwork = DockerHelper.getProperty(DockerConstants.DOCKER_DISABLE_NETWORK, configuration, message, Boolean.class)___        if (disableNetwork != null) {_            createContainerCmd.withNetworkDisabled(disableNetwork)__        }__        String[] dns = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_DNS, message)___        if (dns != null) {_            createContainerCmd.withDns(dns)__        }_        _        String domainName = DockerHelper.getProperty(DockerConstants.DOCKER_DOMAIN_NAME, configuration, message, String.class)___        if (domainName != null) {_            createContainerCmd.withDomainName(domainName)__        }__        String[] env = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_ENV, message)___        if (env != null) {_            createContainerCmd.withEnv(env)__        }__        String[] entrypoint = DockerHelper.getArrayProperty(DockerConstants.DOCKER_ENTRYPOINT, message, String.class)___        if (entrypoint != null) {_            createContainerCmd.withEntrypoint(entrypoint)__        }__        ExposedPort[] exposedPorts = DockerHelper.getArrayProperty(DockerConstants.DOCKER_EXPOSED_PORTS, message, ExposedPort.class)___        if (exposedPorts != null) {_            createContainerCmd.withExposedPorts(exposedPorts)__        }__        HostConfig hostConfig = DockerHelper.getProperty(DockerConstants.DOCKER_HOST_CONFIG, configuration, message, HostConfig.class)___        if (hostConfig != null) {_            createContainerCmd.withHostConfig(hostConfig)__        }__        String hostName = DockerHelper.getProperty(DockerConstants.DOCKER_HOSTNAME, configuration, message, String.class)___        if (hostName != null) {_            createContainerCmd.withHostName(hostName)__        }__        Long memoryLimit = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_LIMIT, configuration, message, Long.class)___        if (memoryLimit != null) {_            createContainerCmd.withMemoryLimit(memoryLimit)__        }__        Long memorySwap = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_SWAP, configuration, message, Long.class)___        if (memorySwap != null) {_            createContainerCmd.withMemorySwap(memorySwap)__        }__        String name = DockerHelper.getProperty(DockerConstants.DOCKER_NAME, configuration, message, String.class)___        if (name != null) {_            createContainerCmd.withName(name)__        }__        String[] portSpecs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_PORT_SPECS, message)___        if (portSpecs != null) {_            createContainerCmd.withPortSpecs(portSpecs)__        }__        Boolean stdInOpen = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_OPEN, configuration, message, Boolean.class)___        if (stdInOpen != null) {_            createContainerCmd.withStdinOpen(stdInOpen)__        }__        Boolean stdInOnce = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_ONCE, configuration, message, Boolean.class)___        if (stdInOnce != null) {_            createContainerCmd.withStdInOnce(stdInOnce)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            createContainerCmd.withTty(tty)__        }__        String user = DockerHelper.getProperty(DockerConstants.DOCKER_USER, configuration, message, String.class)___        if (user != null) {_            createContainerCmd.withUser(user)__        }__        Volume[] volume = DockerHelper.getArrayProperty(DockerConstants.DOCKER_VOLUMES, message, Volume.class)___        if (volume != null) {_            createContainerCmd.withVolumes(volume)__        }__        VolumesFrom[] volumesFrom = DockerHelper.getArrayProperty(DockerConstants.DOCKER_VOLUMES_FROM, message, VolumesFrom.class)___        if (volumesFrom != null) {_            createContainerCmd.withVolumesFrom(volumesFrom)__        }__        String workingDir = DockerHelper.getProperty(DockerConstants.DOCKER_WORKING_DIR, configuration, message, String.class)___        if (workingDir != null) {_            createContainerCmd.withWorkingDir(workingDir)__        }__        return createContainerCmd___    };produce,a,create,container,request,param,client,param,message,return;private,create,container,cmd,execute,create,container,request,docker,client,client,message,message,logger,debug,executing,docker,create,container,request,string,image,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,image,image,must,be,specified,create,container,cmd,create,container,cmd,client,create,container,cmd,image,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,create,container,cmd,with,attach,stderr,attach,std,err,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,in,null,create,container,cmd,with,attach,stdin,attach,std,in,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,create,container,cmd,with,attach,stdout,attach,std,out,capability,cap,add,docker,helper,get,array,property,docker,constants,message,capability,class,if,cap,add,null,create,container,cmd,with,cap,add,cap,add,capability,cap,drop,docker,helper,get,array,property,docker,constants,message,capability,class,if,cap,drop,null,create,container,cmd,with,cap,drop,cap,drop,string,cmd,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmd,null,create,container,cmd,with,cmd,cmd,integer,cpu,shares,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,cpu,shares,null,create,container,cmd,with,cpu,shares,cpu,shares,boolean,disable,network,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,disable,network,null,create,container,cmd,with,network,disabled,disable,network,string,dns,docker,helper,parse,delimited,string,header,docker,constants,message,if,dns,null,create,container,cmd,with,dns,dns,string,domain,name,docker,helper,get,property,docker,constants,configuration,message,string,class,if,domain,name,null,create,container,cmd,with,domain,name,domain,name,string,env,docker,helper,parse,delimited,string,header,docker,constants,message,if,env,null,create,container,cmd,with,env,env,string,entrypoint,docker,helper,get,array,property,docker,constants,message,string,class,if,entrypoint,null,create,container,cmd,with,entrypoint,entrypoint,exposed,port,exposed,ports,docker,helper,get,array,property,docker,constants,message,exposed,port,class,if,exposed,ports,null,create,container,cmd,with,exposed,ports,exposed,ports,host,config,host,config,docker,helper,get,property,docker,constants,configuration,message,host,config,class,if,host,config,null,create,container,cmd,with,host,config,host,config,string,host,name,docker,helper,get,property,docker,constants,configuration,message,string,class,if,host,name,null,create,container,cmd,with,host,name,host,name,long,memory,limit,docker,helper,get,property,docker,constants,configuration,message,long,class,if,memory,limit,null,create,container,cmd,with,memory,limit,memory,limit,long,memory,swap,docker,helper,get,property,docker,constants,configuration,message,long,class,if,memory,swap,null,create,container,cmd,with,memory,swap,memory,swap,string,name,docker,helper,get,property,docker,constants,configuration,message,string,class,if,name,null,create,container,cmd,with,name,name,string,port,specs,docker,helper,parse,delimited,string,header,docker,constants,message,if,port,specs,null,create,container,cmd,with,port,specs,port,specs,boolean,std,in,open,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,open,null,create,container,cmd,with,stdin,open,std,in,open,boolean,std,in,once,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,once,null,create,container,cmd,with,std,in,once,std,in,once,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,create,container,cmd,with,tty,tty,string,user,docker,helper,get,property,docker,constants,configuration,message,string,class,if,user,null,create,container,cmd,with,user,user,volume,volume,docker,helper,get,array,property,docker,constants,message,volume,class,if,volume,null,create,container,cmd,with,volumes,volume,volumes,from,volumes,from,docker,helper,get,array,property,docker,constants,message,volumes,from,class,if,volumes,from,null,create,container,cmd,with,volumes,from,volumes,from,string,working,dir,docker,helper,get,property,docker,constants,configuration,message,string,class,if,working,dir,null,create,container,cmd,with,working,dir,working,dir,return,create,container,cmd
DockerProducer -> private CreateContainerCmd executeCreateContainerRequest(DockerClient client, Message message);1474362454;Produce a create container request__@param client_@param message_@return;private CreateContainerCmd executeCreateContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Create Container Request")___        String image = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE, configuration, message, String.class)___        ObjectHelper.notNull(image, "Image must be specified")___        CreateContainerCmd createContainerCmd = client.createContainerCmd(image)___        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null) {_            createContainerCmd.withAttachStderr(attachStdErr)__        }__        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        if (attachStdIn != null) {_            createContainerCmd.withAttachStdin(attachStdIn)__        }__        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null) {_            createContainerCmd.withAttachStdout(attachStdOut)__        }__        Capability[] capAdd = DockerHelper.getArrayProperty(DockerConstants.DOCKER_CAP_ADD, message, Capability.class)___        if (capAdd != null) {_            createContainerCmd.withCapAdd(capAdd)__        }__        Capability[] capDrop = DockerHelper.getArrayProperty(DockerConstants.DOCKER_CAP_DROP, message, Capability.class)___        if (capDrop != null) {_            createContainerCmd.withCapDrop(capDrop)__        }__        String[] cmd = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmd != null) {_            createContainerCmd.withCmd(cmd)__        }__        Integer cpuShares = DockerHelper.getProperty(DockerConstants.DOCKER_CPU_SHARES, configuration, message, Integer.class)___        if (cpuShares != null) {_            createContainerCmd.withCpuShares(cpuShares)__        }__        Boolean disableNetwork = DockerHelper.getProperty(DockerConstants.DOCKER_DISABLE_NETWORK, configuration, message, Boolean.class)___        if (disableNetwork != null) {_            createContainerCmd.withNetworkDisabled(disableNetwork)__        }__        String[] dns = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_DNS, message)___        if (dns != null) {_            createContainerCmd.withDns(dns)__        }__        String domainName = DockerHelper.getProperty(DockerConstants.DOCKER_DOMAIN_NAME, configuration, message, String.class)___        if (domainName != null) {_            createContainerCmd.withDomainName(domainName)__        }__        String[] env = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_ENV, message)___        if (env != null) {_            createContainerCmd.withEnv(env)__        }__        String[] entrypoint = DockerHelper.getArrayProperty(DockerConstants.DOCKER_ENTRYPOINT, message, String.class)___        if (entrypoint != null) {_            createContainerCmd.withEntrypoint(entrypoint)__        }__        ExposedPort[] exposedPorts = DockerHelper.getArrayProperty(DockerConstants.DOCKER_EXPOSED_PORTS, message, ExposedPort.class)___        if (exposedPorts != null) {_            createContainerCmd.withExposedPorts(exposedPorts)__        }__        HostConfig hostConfig = DockerHelper.getProperty(DockerConstants.DOCKER_HOST_CONFIG, configuration, message, HostConfig.class)___        if (hostConfig != null) {_            createContainerCmd.withHostConfig(hostConfig)__        }__        String hostName = DockerHelper.getProperty(DockerConstants.DOCKER_HOSTNAME, configuration, message, String.class)___        if (hostName != null) {_            createContainerCmd.withHostName(hostName)__        }__        Long memoryLimit = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_LIMIT, configuration, message, Long.class)___        if (memoryLimit != null) {_            createContainerCmd.withMemory(memoryLimit)__        }__        Long memorySwap = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_SWAP, configuration, message, Long.class)___        if (memorySwap != null) {_            createContainerCmd.withMemorySwap(memorySwap)__        }__        String name = DockerHelper.getProperty(DockerConstants.DOCKER_NAME, configuration, message, String.class)___        if (name != null) {_            createContainerCmd.withName(name)__        }__        String[] portSpecs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_PORT_SPECS, message)___        if (portSpecs != null) {_            createContainerCmd.withPortSpecs(portSpecs)__        }__        Boolean stdInOpen = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_OPEN, configuration, message, Boolean.class)___        if (stdInOpen != null) {_            createContainerCmd.withStdinOpen(stdInOpen)__        }__        Boolean stdInOnce = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_ONCE, configuration, message, Boolean.class)___        if (stdInOnce != null) {_            createContainerCmd.withStdInOnce(stdInOnce)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            createContainerCmd.withTty(tty)__        }__        String user = DockerHelper.getProperty(DockerConstants.DOCKER_USER, configuration, message, String.class)___        if (user != null) {_            createContainerCmd.withUser(user)__        }__        Volume[] volume = DockerHelper.getArrayProperty(DockerConstants.DOCKER_VOLUMES, message, Volume.class)___        if (volume != null) {_            createContainerCmd.withVolumes(volume)__        }__        VolumesFrom[] volumesFrom = DockerHelper.getArrayProperty(DockerConstants.DOCKER_VOLUMES_FROM, message, VolumesFrom.class)___        if (volumesFrom != null) {_            createContainerCmd.withVolumesFrom(volumesFrom)__        }__        String workingDir = DockerHelper.getProperty(DockerConstants.DOCKER_WORKING_DIR, configuration, message, String.class)___        if (workingDir != null) {_            createContainerCmd.withWorkingDir(workingDir)__        }__        return createContainerCmd___    };produce,a,create,container,request,param,client,param,message,return;private,create,container,cmd,execute,create,container,request,docker,client,client,message,message,logger,debug,executing,docker,create,container,request,string,image,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,image,image,must,be,specified,create,container,cmd,create,container,cmd,client,create,container,cmd,image,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,create,container,cmd,with,attach,stderr,attach,std,err,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,in,null,create,container,cmd,with,attach,stdin,attach,std,in,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,create,container,cmd,with,attach,stdout,attach,std,out,capability,cap,add,docker,helper,get,array,property,docker,constants,message,capability,class,if,cap,add,null,create,container,cmd,with,cap,add,cap,add,capability,cap,drop,docker,helper,get,array,property,docker,constants,message,capability,class,if,cap,drop,null,create,container,cmd,with,cap,drop,cap,drop,string,cmd,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmd,null,create,container,cmd,with,cmd,cmd,integer,cpu,shares,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,cpu,shares,null,create,container,cmd,with,cpu,shares,cpu,shares,boolean,disable,network,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,disable,network,null,create,container,cmd,with,network,disabled,disable,network,string,dns,docker,helper,parse,delimited,string,header,docker,constants,message,if,dns,null,create,container,cmd,with,dns,dns,string,domain,name,docker,helper,get,property,docker,constants,configuration,message,string,class,if,domain,name,null,create,container,cmd,with,domain,name,domain,name,string,env,docker,helper,parse,delimited,string,header,docker,constants,message,if,env,null,create,container,cmd,with,env,env,string,entrypoint,docker,helper,get,array,property,docker,constants,message,string,class,if,entrypoint,null,create,container,cmd,with,entrypoint,entrypoint,exposed,port,exposed,ports,docker,helper,get,array,property,docker,constants,message,exposed,port,class,if,exposed,ports,null,create,container,cmd,with,exposed,ports,exposed,ports,host,config,host,config,docker,helper,get,property,docker,constants,configuration,message,host,config,class,if,host,config,null,create,container,cmd,with,host,config,host,config,string,host,name,docker,helper,get,property,docker,constants,configuration,message,string,class,if,host,name,null,create,container,cmd,with,host,name,host,name,long,memory,limit,docker,helper,get,property,docker,constants,configuration,message,long,class,if,memory,limit,null,create,container,cmd,with,memory,memory,limit,long,memory,swap,docker,helper,get,property,docker,constants,configuration,message,long,class,if,memory,swap,null,create,container,cmd,with,memory,swap,memory,swap,string,name,docker,helper,get,property,docker,constants,configuration,message,string,class,if,name,null,create,container,cmd,with,name,name,string,port,specs,docker,helper,parse,delimited,string,header,docker,constants,message,if,port,specs,null,create,container,cmd,with,port,specs,port,specs,boolean,std,in,open,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,open,null,create,container,cmd,with,stdin,open,std,in,open,boolean,std,in,once,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,once,null,create,container,cmd,with,std,in,once,std,in,once,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,create,container,cmd,with,tty,tty,string,user,docker,helper,get,property,docker,constants,configuration,message,string,class,if,user,null,create,container,cmd,with,user,user,volume,volume,docker,helper,get,array,property,docker,constants,message,volume,class,if,volume,null,create,container,cmd,with,volumes,volume,volumes,from,volumes,from,docker,helper,get,array,property,docker,constants,message,volumes,from,class,if,volumes,from,null,create,container,cmd,with,volumes,from,volumes,from,string,working,dir,docker,helper,get,property,docker,constants,configuration,message,string,class,if,working,dir,null,create,container,cmd,with,working,dir,working,dir,return,create,container,cmd
DockerProducer -> private CreateContainerCmd executeCreateContainerRequest(DockerClient client, Message message);1531637865;Produce a create container request__@param client_@param message_@return;private CreateContainerCmd executeCreateContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Create Container Request")___        String image = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE, configuration, message, String.class)___        ObjectHelper.notNull(image, "Image must be specified")___        CreateContainerCmd createContainerCmd = client.createContainerCmd(image)___        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null) {_            createContainerCmd.withAttachStderr(attachStdErr)__        }__        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        if (attachStdIn != null) {_            createContainerCmd.withAttachStdin(attachStdIn)__        }__        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null) {_            createContainerCmd.withAttachStdout(attachStdOut)__        }__        Capability[] capAdd = DockerHelper.getArrayProperty(DockerConstants.DOCKER_CAP_ADD, message, Capability.class)___        if (capAdd != null) {_            createContainerCmd.withCapAdd(capAdd)__        }__        Capability[] capDrop = DockerHelper.getArrayProperty(DockerConstants.DOCKER_CAP_DROP, message, Capability.class)___        if (capDrop != null) {_            createContainerCmd.withCapDrop(capDrop)__        }__        String[] cmd = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmd != null) {_            createContainerCmd.withCmd(cmd)__        }__        Integer cpuShares = DockerHelper.getProperty(DockerConstants.DOCKER_CPU_SHARES, configuration, message, Integer.class)___        if (cpuShares != null) {_            createContainerCmd.withCpuShares(cpuShares)__        }__        Boolean disableNetwork = DockerHelper.getProperty(DockerConstants.DOCKER_DISABLE_NETWORK, configuration, message, Boolean.class)___        if (disableNetwork != null) {_            createContainerCmd.withNetworkDisabled(disableNetwork)__        }__        String[] dns = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_DNS, message)___        if (dns != null) {_            createContainerCmd.withDns(dns)__        }__        String domainName = DockerHelper.getProperty(DockerConstants.DOCKER_DOMAIN_NAME, configuration, message, String.class)___        if (domainName != null) {_            createContainerCmd.withDomainName(domainName)__        }__        String[] env = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_ENV, message)___        if (env != null) {_            createContainerCmd.withEnv(env)__        }__        String[] entrypoint = DockerHelper.getArrayProperty(DockerConstants.DOCKER_ENTRYPOINT, message, String.class)___        if (entrypoint != null) {_            createContainerCmd.withEntrypoint(entrypoint)__        }__        ExposedPort[] exposedPorts = DockerHelper.getArrayProperty(DockerConstants.DOCKER_EXPOSED_PORTS, message, ExposedPort.class)___        if (exposedPorts != null) {_            createContainerCmd.withExposedPorts(exposedPorts)__        }__        HostConfig hostConfig = DockerHelper.getProperty(DockerConstants.DOCKER_HOST_CONFIG, configuration, message, HostConfig.class)___        if (hostConfig != null) {_            createContainerCmd.withHostConfig(hostConfig)__        }__        String hostName = DockerHelper.getProperty(DockerConstants.DOCKER_HOSTNAME, configuration, message, String.class)___        if (hostName != null) {_            createContainerCmd.withHostName(hostName)__        }__        Long memoryLimit = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_LIMIT, configuration, message, Long.class)___        if (memoryLimit != null) {_            createContainerCmd.withMemory(memoryLimit)__        }__        Long memorySwap = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_SWAP, configuration, message, Long.class)___        if (memorySwap != null) {_            createContainerCmd.withMemorySwap(memorySwap)__        }__        String name = DockerHelper.getProperty(DockerConstants.DOCKER_NAME, configuration, message, String.class)___        if (name != null) {_            createContainerCmd.withName(name)__        }__        String[] portSpecs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_PORT_SPECS, message)___        if (portSpecs != null) {_            createContainerCmd.withPortSpecs(portSpecs)__        }__        Boolean stdInOpen = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_OPEN, configuration, message, Boolean.class)___        if (stdInOpen != null) {_            createContainerCmd.withStdinOpen(stdInOpen)__        }__        Boolean stdInOnce = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_ONCE, configuration, message, Boolean.class)___        if (stdInOnce != null) {_            createContainerCmd.withStdInOnce(stdInOnce)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            createContainerCmd.withTty(tty)__        }__        String user = DockerHelper.getProperty(DockerConstants.DOCKER_USER, configuration, message, String.class)___        if (user != null) {_            createContainerCmd.withUser(user)__        }__        Volume[] volume = DockerHelper.getArrayProperty(DockerConstants.DOCKER_VOLUMES, message, Volume.class)___        if (volume != null) {_            createContainerCmd.withVolumes(volume)__        }__        VolumesFrom[] volumesFrom = DockerHelper.getArrayProperty(DockerConstants.DOCKER_VOLUMES_FROM, message, VolumesFrom.class)___        if (volumesFrom != null) {_            createContainerCmd.withVolumesFrom(volumesFrom)__        }__        String workingDir = DockerHelper.getProperty(DockerConstants.DOCKER_WORKING_DIR, configuration, message, String.class)___        if (workingDir != null) {_            createContainerCmd.withWorkingDir(workingDir)__        }__        return createContainerCmd___    };produce,a,create,container,request,param,client,param,message,return;private,create,container,cmd,execute,create,container,request,docker,client,client,message,message,logger,debug,executing,docker,create,container,request,string,image,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,image,image,must,be,specified,create,container,cmd,create,container,cmd,client,create,container,cmd,image,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,create,container,cmd,with,attach,stderr,attach,std,err,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,in,null,create,container,cmd,with,attach,stdin,attach,std,in,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,create,container,cmd,with,attach,stdout,attach,std,out,capability,cap,add,docker,helper,get,array,property,docker,constants,message,capability,class,if,cap,add,null,create,container,cmd,with,cap,add,cap,add,capability,cap,drop,docker,helper,get,array,property,docker,constants,message,capability,class,if,cap,drop,null,create,container,cmd,with,cap,drop,cap,drop,string,cmd,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmd,null,create,container,cmd,with,cmd,cmd,integer,cpu,shares,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,cpu,shares,null,create,container,cmd,with,cpu,shares,cpu,shares,boolean,disable,network,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,disable,network,null,create,container,cmd,with,network,disabled,disable,network,string,dns,docker,helper,parse,delimited,string,header,docker,constants,message,if,dns,null,create,container,cmd,with,dns,dns,string,domain,name,docker,helper,get,property,docker,constants,configuration,message,string,class,if,domain,name,null,create,container,cmd,with,domain,name,domain,name,string,env,docker,helper,parse,delimited,string,header,docker,constants,message,if,env,null,create,container,cmd,with,env,env,string,entrypoint,docker,helper,get,array,property,docker,constants,message,string,class,if,entrypoint,null,create,container,cmd,with,entrypoint,entrypoint,exposed,port,exposed,ports,docker,helper,get,array,property,docker,constants,message,exposed,port,class,if,exposed,ports,null,create,container,cmd,with,exposed,ports,exposed,ports,host,config,host,config,docker,helper,get,property,docker,constants,configuration,message,host,config,class,if,host,config,null,create,container,cmd,with,host,config,host,config,string,host,name,docker,helper,get,property,docker,constants,configuration,message,string,class,if,host,name,null,create,container,cmd,with,host,name,host,name,long,memory,limit,docker,helper,get,property,docker,constants,configuration,message,long,class,if,memory,limit,null,create,container,cmd,with,memory,memory,limit,long,memory,swap,docker,helper,get,property,docker,constants,configuration,message,long,class,if,memory,swap,null,create,container,cmd,with,memory,swap,memory,swap,string,name,docker,helper,get,property,docker,constants,configuration,message,string,class,if,name,null,create,container,cmd,with,name,name,string,port,specs,docker,helper,parse,delimited,string,header,docker,constants,message,if,port,specs,null,create,container,cmd,with,port,specs,port,specs,boolean,std,in,open,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,open,null,create,container,cmd,with,stdin,open,std,in,open,boolean,std,in,once,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,once,null,create,container,cmd,with,std,in,once,std,in,once,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,create,container,cmd,with,tty,tty,string,user,docker,helper,get,property,docker,constants,configuration,message,string,class,if,user,null,create,container,cmd,with,user,user,volume,volume,docker,helper,get,array,property,docker,constants,message,volume,class,if,volume,null,create,container,cmd,with,volumes,volume,volumes,from,volumes,from,docker,helper,get,array,property,docker,constants,message,volumes,from,class,if,volumes,from,null,create,container,cmd,with,volumes,from,volumes,from,string,working,dir,docker,helper,get,property,docker,constants,configuration,message,string,class,if,working,dir,null,create,container,cmd,with,working,dir,working,dir,return,create,container,cmd
DockerProducer -> private CreateContainerCmd executeCreateContainerRequest(DockerClient client, Message message);1540108163;Produce a create container request__@param client_@param message_@return;private CreateContainerCmd executeCreateContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Create Container Request")___        String image = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE, configuration, message, String.class)___        ObjectHelper.notNull(image, "Image must be specified")___        CreateContainerCmd createContainerCmd = client.createContainerCmd(image)___        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null) {_            createContainerCmd.withAttachStderr(attachStdErr)__        }__        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        if (attachStdIn != null) {_            createContainerCmd.withAttachStdin(attachStdIn)__        }__        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null) {_            createContainerCmd.withAttachStdout(attachStdOut)__        }__        Capability[] capAdd = DockerHelper.getArrayProperty(DockerConstants.DOCKER_CAP_ADD, message, Capability.class)___        if (capAdd != null) {_            createContainerCmd.withCapAdd(capAdd)__        }__        Capability[] capDrop = DockerHelper.getArrayProperty(DockerConstants.DOCKER_CAP_DROP, message, Capability.class)___        if (capDrop != null) {_            createContainerCmd.withCapDrop(capDrop)__        }__        String[] cmd = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmd != null) {_            createContainerCmd.withCmd(cmd)__        }__        Integer cpuShares = DockerHelper.getProperty(DockerConstants.DOCKER_CPU_SHARES, configuration, message, Integer.class)___        if (cpuShares != null) {_            createContainerCmd.withCpuShares(cpuShares)__        }__        Boolean disableNetwork = DockerHelper.getProperty(DockerConstants.DOCKER_DISABLE_NETWORK, configuration, message, Boolean.class)___        if (disableNetwork != null) {_            createContainerCmd.withNetworkDisabled(disableNetwork)__        }__        String[] dns = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_DNS, message)___        if (dns != null) {_            createContainerCmd.withDns(dns)__        }__        String domainName = DockerHelper.getProperty(DockerConstants.DOCKER_DOMAIN_NAME, configuration, message, String.class)___        if (domainName != null) {_            createContainerCmd.withDomainName(domainName)__        }__        String[] env = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_ENV, message)___        if (env != null) {_            createContainerCmd.withEnv(env)__        }__        String[] entrypoint = DockerHelper.getArrayProperty(DockerConstants.DOCKER_ENTRYPOINT, message, String.class)___        if (entrypoint != null) {_            createContainerCmd.withEntrypoint(entrypoint)__        }__        ExposedPort[] exposedPorts = DockerHelper.getArrayProperty(DockerConstants.DOCKER_EXPOSED_PORTS, message, ExposedPort.class)___        if (exposedPorts != null) {_            createContainerCmd.withExposedPorts(exposedPorts)__        }__        HostConfig hostConfig = DockerHelper.getProperty(DockerConstants.DOCKER_HOST_CONFIG, configuration, message, HostConfig.class)___        if (hostConfig != null) {_            createContainerCmd.withHostConfig(hostConfig)__        }__        String hostName = DockerHelper.getProperty(DockerConstants.DOCKER_HOSTNAME, configuration, message, String.class)___        if (hostName != null) {_            createContainerCmd.withHostName(hostName)__        }__        Long memoryLimit = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_LIMIT, configuration, message, Long.class)___        if (memoryLimit != null) {_            createContainerCmd.withMemory(memoryLimit)__        }__        Long memorySwap = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_SWAP, configuration, message, Long.class)___        if (memorySwap != null) {_            createContainerCmd.withMemorySwap(memorySwap)__        }__        String name = DockerHelper.getProperty(DockerConstants.DOCKER_NAME, configuration, message, String.class)___        if (name != null) {_            createContainerCmd.withName(name)__        }__        String[] portSpecs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_PORT_SPECS, message)___        if (portSpecs != null) {_            createContainerCmd.withPortSpecs(portSpecs)__        }__        Boolean stdInOpen = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_OPEN, configuration, message, Boolean.class)___        if (stdInOpen != null) {_            createContainerCmd.withStdinOpen(stdInOpen)__        }__        Boolean stdInOnce = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_ONCE, configuration, message, Boolean.class)___        if (stdInOnce != null) {_            createContainerCmd.withStdInOnce(stdInOnce)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            createContainerCmd.withTty(tty)__        }__        String user = DockerHelper.getProperty(DockerConstants.DOCKER_USER, configuration, message, String.class)___        if (user != null) {_            createContainerCmd.withUser(user)__        }__        Volume[] volume = DockerHelper.getArrayProperty(DockerConstants.DOCKER_VOLUMES, message, Volume.class)___        if (volume != null) {_            createContainerCmd.withVolumes(volume)__        }__        VolumesFrom[] volumesFrom = DockerHelper.getArrayProperty(DockerConstants.DOCKER_VOLUMES_FROM, message, VolumesFrom.class)___        if (volumesFrom != null) {_            createContainerCmd.withVolumesFrom(volumesFrom)__        }__        String workingDir = DockerHelper.getProperty(DockerConstants.DOCKER_WORKING_DIR, configuration, message, String.class)___        if (workingDir != null) {_            createContainerCmd.withWorkingDir(workingDir)__        }__        return createContainerCmd___    };produce,a,create,container,request,param,client,param,message,return;private,create,container,cmd,execute,create,container,request,docker,client,client,message,message,logger,debug,executing,docker,create,container,request,string,image,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,image,image,must,be,specified,create,container,cmd,create,container,cmd,client,create,container,cmd,image,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,create,container,cmd,with,attach,stderr,attach,std,err,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,in,null,create,container,cmd,with,attach,stdin,attach,std,in,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,create,container,cmd,with,attach,stdout,attach,std,out,capability,cap,add,docker,helper,get,array,property,docker,constants,message,capability,class,if,cap,add,null,create,container,cmd,with,cap,add,cap,add,capability,cap,drop,docker,helper,get,array,property,docker,constants,message,capability,class,if,cap,drop,null,create,container,cmd,with,cap,drop,cap,drop,string,cmd,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmd,null,create,container,cmd,with,cmd,cmd,integer,cpu,shares,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,cpu,shares,null,create,container,cmd,with,cpu,shares,cpu,shares,boolean,disable,network,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,disable,network,null,create,container,cmd,with,network,disabled,disable,network,string,dns,docker,helper,parse,delimited,string,header,docker,constants,message,if,dns,null,create,container,cmd,with,dns,dns,string,domain,name,docker,helper,get,property,docker,constants,configuration,message,string,class,if,domain,name,null,create,container,cmd,with,domain,name,domain,name,string,env,docker,helper,parse,delimited,string,header,docker,constants,message,if,env,null,create,container,cmd,with,env,env,string,entrypoint,docker,helper,get,array,property,docker,constants,message,string,class,if,entrypoint,null,create,container,cmd,with,entrypoint,entrypoint,exposed,port,exposed,ports,docker,helper,get,array,property,docker,constants,message,exposed,port,class,if,exposed,ports,null,create,container,cmd,with,exposed,ports,exposed,ports,host,config,host,config,docker,helper,get,property,docker,constants,configuration,message,host,config,class,if,host,config,null,create,container,cmd,with,host,config,host,config,string,host,name,docker,helper,get,property,docker,constants,configuration,message,string,class,if,host,name,null,create,container,cmd,with,host,name,host,name,long,memory,limit,docker,helper,get,property,docker,constants,configuration,message,long,class,if,memory,limit,null,create,container,cmd,with,memory,memory,limit,long,memory,swap,docker,helper,get,property,docker,constants,configuration,message,long,class,if,memory,swap,null,create,container,cmd,with,memory,swap,memory,swap,string,name,docker,helper,get,property,docker,constants,configuration,message,string,class,if,name,null,create,container,cmd,with,name,name,string,port,specs,docker,helper,parse,delimited,string,header,docker,constants,message,if,port,specs,null,create,container,cmd,with,port,specs,port,specs,boolean,std,in,open,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,open,null,create,container,cmd,with,stdin,open,std,in,open,boolean,std,in,once,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,once,null,create,container,cmd,with,std,in,once,std,in,once,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,create,container,cmd,with,tty,tty,string,user,docker,helper,get,property,docker,constants,configuration,message,string,class,if,user,null,create,container,cmd,with,user,user,volume,volume,docker,helper,get,array,property,docker,constants,message,volume,class,if,volume,null,create,container,cmd,with,volumes,volume,volumes,from,volumes,from,docker,helper,get,array,property,docker,constants,message,volumes,from,class,if,volumes,from,null,create,container,cmd,with,volumes,from,volumes,from,string,working,dir,docker,helper,get,property,docker,constants,configuration,message,string,class,if,working,dir,null,create,container,cmd,with,working,dir,working,dir,return,create,container,cmd
DockerProducer -> private ExecCreateCmd executeExecCreateRequest(DockerClient client, Message message);1424675020;Produces a exec create request__@param client_@param message_@return;private ExecCreateCmd executeExecCreateRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Exec Create Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        ExecCreateCmd execCreateCmd = client.execCreateCmd(containerId)___        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null) {_            execCreateCmd.withAttachStderr(attachStdErr)__        }_        _        if (attachStdIn != null) {_            execCreateCmd.withAttachStdin(attachStdIn)__        }__        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null) {_            execCreateCmd.withAttachStdout(attachStdOut)__        }_        _        String[] cmd = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmd != null) {_            execCreateCmd.withCmd(cmd)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            execCreateCmd.withTty(tty)__        }__        return execCreateCmd___    };produces,a,exec,create,request,param,client,param,message,return;private,exec,create,cmd,execute,exec,create,request,docker,client,client,message,message,logger,debug,executing,docker,exec,create,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,exec,create,cmd,exec,create,cmd,client,exec,create,cmd,container,id,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,exec,create,cmd,with,attach,stderr,attach,std,err,if,attach,std,in,null,exec,create,cmd,with,attach,stdin,attach,std,in,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,exec,create,cmd,with,attach,stdout,attach,std,out,string,cmd,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmd,null,exec,create,cmd,with,cmd,cmd,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,exec,create,cmd,with,tty,tty,return,exec,create,cmd
DockerProducer -> private ExecCreateCmd executeExecCreateRequest(DockerClient client, Message message);1424675476;Produces a exec create request__@param client_@param message_@return;private ExecCreateCmd executeExecCreateRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Exec Create Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        ExecCreateCmd execCreateCmd = client.execCreateCmd(containerId)___        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null) {_            execCreateCmd.withAttachStderr(attachStdErr)__        }__        if (attachStdIn != null) {_            execCreateCmd.withAttachStdin(attachStdIn)__        }__        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null) {_            execCreateCmd.withAttachStdout(attachStdOut)__        }__        String[] cmd = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmd != null) {_            execCreateCmd.withCmd(cmd)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            execCreateCmd.withTty(tty)__        }__        return execCreateCmd___    };produces,a,exec,create,request,param,client,param,message,return;private,exec,create,cmd,execute,exec,create,request,docker,client,client,message,message,logger,debug,executing,docker,exec,create,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,exec,create,cmd,exec,create,cmd,client,exec,create,cmd,container,id,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,exec,create,cmd,with,attach,stderr,attach,std,err,if,attach,std,in,null,exec,create,cmd,with,attach,stdin,attach,std,in,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,exec,create,cmd,with,attach,stdout,attach,std,out,string,cmd,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmd,null,exec,create,cmd,with,cmd,cmd,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,exec,create,cmd,with,tty,tty,return,exec,create,cmd
DockerProducer -> private ExecCreateCmd executeExecCreateRequest(DockerClient client, Message message);1424877876;Produces a exec create request__@param client_@param message_@return;private ExecCreateCmd executeExecCreateRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Exec Create Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        ExecCreateCmd execCreateCmd = client.execCreateCmd(containerId)___        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null) {_            execCreateCmd.withAttachStderr(attachStdErr)__        }__        if (attachStdIn != null) {_            execCreateCmd.withAttachStdin(attachStdIn)__        }__        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null) {_            execCreateCmd.withAttachStdout(attachStdOut)__        }__        String[] cmd = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmd != null) {_            execCreateCmd.withCmd(cmd)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            execCreateCmd.withTty(tty)__        }__        return execCreateCmd___    };produces,a,exec,create,request,param,client,param,message,return;private,exec,create,cmd,execute,exec,create,request,docker,client,client,message,message,logger,debug,executing,docker,exec,create,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,exec,create,cmd,exec,create,cmd,client,exec,create,cmd,container,id,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,exec,create,cmd,with,attach,stderr,attach,std,err,if,attach,std,in,null,exec,create,cmd,with,attach,stdin,attach,std,in,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,exec,create,cmd,with,attach,stdout,attach,std,out,string,cmd,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmd,null,exec,create,cmd,with,cmd,cmd,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,exec,create,cmd,with,tty,tty,return,exec,create,cmd
DockerProducer -> private ExecCreateCmd executeExecCreateRequest(DockerClient client, Message message);1429199966;Produces a exec create request__@param client_@param message_@return;private ExecCreateCmd executeExecCreateRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Exec Create Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        ExecCreateCmd execCreateCmd = client.execCreateCmd(containerId)___        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null) {_            execCreateCmd.withAttachStderr(attachStdErr)__        }__        if (attachStdIn != null) {_            execCreateCmd.withAttachStdin(attachStdIn)__        }__        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null) {_            execCreateCmd.withAttachStdout(attachStdOut)__        }__        String[] cmd = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmd != null) {_            execCreateCmd.withCmd(cmd)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            execCreateCmd.withTty(tty)__        }__        return execCreateCmd___    };produces,a,exec,create,request,param,client,param,message,return;private,exec,create,cmd,execute,exec,create,request,docker,client,client,message,message,logger,debug,executing,docker,exec,create,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,exec,create,cmd,exec,create,cmd,client,exec,create,cmd,container,id,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,exec,create,cmd,with,attach,stderr,attach,std,err,if,attach,std,in,null,exec,create,cmd,with,attach,stdin,attach,std,in,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,exec,create,cmd,with,attach,stdout,attach,std,out,string,cmd,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmd,null,exec,create,cmd,with,cmd,cmd,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,exec,create,cmd,with,tty,tty,return,exec,create,cmd
DockerProducer -> private ExecCreateCmd executeExecCreateRequest(DockerClient client, Message message);1433489320;Produces a exec create request__@param client_@param message_@return;private ExecCreateCmd executeExecCreateRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Exec Create Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        ExecCreateCmd execCreateCmd = client.execCreateCmd(containerId)___        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null) {_            execCreateCmd.withAttachStderr(attachStdErr)__        }__        if (attachStdIn != null) {_            execCreateCmd.withAttachStdin(attachStdIn)__        }__        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null) {_            execCreateCmd.withAttachStdout(attachStdOut)__        }__        String[] cmd = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmd != null) {_            execCreateCmd.withCmd(cmd)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            execCreateCmd.withTty(tty)__        }__        return execCreateCmd___    };produces,a,exec,create,request,param,client,param,message,return;private,exec,create,cmd,execute,exec,create,request,docker,client,client,message,message,logger,debug,executing,docker,exec,create,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,exec,create,cmd,exec,create,cmd,client,exec,create,cmd,container,id,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,exec,create,cmd,with,attach,stderr,attach,std,err,if,attach,std,in,null,exec,create,cmd,with,attach,stdin,attach,std,in,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,exec,create,cmd,with,attach,stdout,attach,std,out,string,cmd,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmd,null,exec,create,cmd,with,cmd,cmd,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,exec,create,cmd,with,tty,tty,return,exec,create,cmd
DockerProducer -> private ExecCreateCmd executeExecCreateRequest(DockerClient client, Message message);1440239526;Produces a exec create request__@param client_@param message_@return;private ExecCreateCmd executeExecCreateRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Exec Create Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        ExecCreateCmd execCreateCmd = client.execCreateCmd(containerId)___        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null) {_            execCreateCmd.withAttachStderr(attachStdErr)__        }__        if (attachStdIn != null) {_            execCreateCmd.withAttachStdin(attachStdIn)__        }__        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null) {_            execCreateCmd.withAttachStdout(attachStdOut)__        }__        String[] cmd = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmd != null) {_            execCreateCmd.withCmd(cmd)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            execCreateCmd.withTty(tty)__        }__        return execCreateCmd___    };produces,a,exec,create,request,param,client,param,message,return;private,exec,create,cmd,execute,exec,create,request,docker,client,client,message,message,logger,debug,executing,docker,exec,create,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,exec,create,cmd,exec,create,cmd,client,exec,create,cmd,container,id,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,exec,create,cmd,with,attach,stderr,attach,std,err,if,attach,std,in,null,exec,create,cmd,with,attach,stdin,attach,std,in,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,exec,create,cmd,with,attach,stdout,attach,std,out,string,cmd,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmd,null,exec,create,cmd,with,cmd,cmd,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,exec,create,cmd,with,tty,tty,return,exec,create,cmd
DockerProducer -> private ExecCreateCmd executeExecCreateRequest(DockerClient client, Message message);1474362454;Produces a exec create request__@param client_@param message_@return;private ExecCreateCmd executeExecCreateRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Exec Create Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        ExecCreateCmd execCreateCmd = client.execCreateCmd(containerId)___        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null) {_            execCreateCmd.withAttachStderr(attachStdErr)__        }__        if (attachStdIn != null) {_            execCreateCmd.withAttachStdin(attachStdIn)__        }__        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null) {_            execCreateCmd.withAttachStdout(attachStdOut)__        }__        String[] cmd = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmd != null) {_            execCreateCmd.withCmd(cmd)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            execCreateCmd.withTty(tty)__        }__        return execCreateCmd___    };produces,a,exec,create,request,param,client,param,message,return;private,exec,create,cmd,execute,exec,create,request,docker,client,client,message,message,logger,debug,executing,docker,exec,create,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,exec,create,cmd,exec,create,cmd,client,exec,create,cmd,container,id,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,exec,create,cmd,with,attach,stderr,attach,std,err,if,attach,std,in,null,exec,create,cmd,with,attach,stdin,attach,std,in,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,exec,create,cmd,with,attach,stdout,attach,std,out,string,cmd,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmd,null,exec,create,cmd,with,cmd,cmd,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,exec,create,cmd,with,tty,tty,return,exec,create,cmd
DockerProducer -> private ExecCreateCmd executeExecCreateRequest(DockerClient client, Message message);1531637865;Produces a exec create request__@param client_@param message_@return;private ExecCreateCmd executeExecCreateRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Exec Create Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        ExecCreateCmd execCreateCmd = client.execCreateCmd(containerId)___        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null) {_            execCreateCmd.withAttachStderr(attachStdErr)__        }__        if (attachStdIn != null) {_            execCreateCmd.withAttachStdin(attachStdIn)__        }__        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null) {_            execCreateCmd.withAttachStdout(attachStdOut)__        }__        String[] cmd = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmd != null) {_            execCreateCmd.withCmd(cmd)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            execCreateCmd.withTty(tty)__        }__        return execCreateCmd___    };produces,a,exec,create,request,param,client,param,message,return;private,exec,create,cmd,execute,exec,create,request,docker,client,client,message,message,logger,debug,executing,docker,exec,create,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,exec,create,cmd,exec,create,cmd,client,exec,create,cmd,container,id,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,exec,create,cmd,with,attach,stderr,attach,std,err,if,attach,std,in,null,exec,create,cmd,with,attach,stdin,attach,std,in,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,exec,create,cmd,with,attach,stdout,attach,std,out,string,cmd,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmd,null,exec,create,cmd,with,cmd,cmd,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,exec,create,cmd,with,tty,tty,return,exec,create,cmd
DockerProducer -> private ExecCreateCmd executeExecCreateRequest(DockerClient client, Message message);1540108163;Produces a exec create request__@param client_@param message_@return;private ExecCreateCmd executeExecCreateRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Exec Create Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        ExecCreateCmd execCreateCmd = client.execCreateCmd(containerId)___        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null) {_            execCreateCmd.withAttachStderr(attachStdErr)__        }__        if (attachStdIn != null) {_            execCreateCmd.withAttachStdin(attachStdIn)__        }__        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null) {_            execCreateCmd.withAttachStdout(attachStdOut)__        }__        String[] cmd = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmd != null) {_            execCreateCmd.withCmd(cmd)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            execCreateCmd.withTty(tty)__        }__        return execCreateCmd___    };produces,a,exec,create,request,param,client,param,message,return;private,exec,create,cmd,execute,exec,create,request,docker,client,client,message,message,logger,debug,executing,docker,exec,create,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,exec,create,cmd,exec,create,cmd,client,exec,create,cmd,container,id,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,exec,create,cmd,with,attach,stderr,attach,std,err,if,attach,std,in,null,exec,create,cmd,with,attach,stdin,attach,std,in,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,exec,create,cmd,with,attach,stdout,attach,std,out,string,cmd,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmd,null,exec,create,cmd,with,cmd,cmd,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,exec,create,cmd,with,tty,tty,return,exec,create,cmd
DockerProducer -> private ContainerDiffCmd executeDiffContainerRequest(DockerClient client, Message message);1424675020;Produces a diff container request__@param client_@param message_@return;private ContainerDiffCmd executeDiffContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Diff Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        ContainerDiffCmd diffContainerCmd = client.containerDiffCmd(containerId)___        String containerIdDiff = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID_DIFF, configuration, message, String.class)___        if (containerIdDiff != null) {_            diffContainerCmd.withContainerId(containerIdDiff)__        }__        return diffContainerCmd___    };produces,a,diff,container,request,param,client,param,message,return;private,container,diff,cmd,execute,diff,container,request,docker,client,client,message,message,logger,debug,executing,docker,diff,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,container,diff,cmd,diff,container,cmd,client,container,diff,cmd,container,id,string,container,id,diff,docker,helper,get,property,docker,constants,configuration,message,string,class,if,container,id,diff,null,diff,container,cmd,with,container,id,container,id,diff,return,diff,container,cmd
DockerProducer -> private ContainerDiffCmd executeDiffContainerRequest(DockerClient client, Message message);1424675476;Produces a diff container request__@param client_@param message_@return;private ContainerDiffCmd executeDiffContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Diff Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        ContainerDiffCmd diffContainerCmd = client.containerDiffCmd(containerId)___        String containerIdDiff = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID_DIFF, configuration, message, String.class)___        if (containerIdDiff != null) {_            diffContainerCmd.withContainerId(containerIdDiff)__        }__        return diffContainerCmd___    };produces,a,diff,container,request,param,client,param,message,return;private,container,diff,cmd,execute,diff,container,request,docker,client,client,message,message,logger,debug,executing,docker,diff,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,container,diff,cmd,diff,container,cmd,client,container,diff,cmd,container,id,string,container,id,diff,docker,helper,get,property,docker,constants,configuration,message,string,class,if,container,id,diff,null,diff,container,cmd,with,container,id,container,id,diff,return,diff,container,cmd
DockerProducer -> private ContainerDiffCmd executeDiffContainerRequest(DockerClient client, Message message);1424877876;Produces a diff container request__@param client_@param message_@return;private ContainerDiffCmd executeDiffContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Diff Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        ContainerDiffCmd diffContainerCmd = client.containerDiffCmd(containerId)___        String containerIdDiff = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID_DIFF, configuration, message, String.class)___        if (containerIdDiff != null) {_            diffContainerCmd.withContainerId(containerIdDiff)__        }__        return diffContainerCmd___    };produces,a,diff,container,request,param,client,param,message,return;private,container,diff,cmd,execute,diff,container,request,docker,client,client,message,message,logger,debug,executing,docker,diff,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,container,diff,cmd,diff,container,cmd,client,container,diff,cmd,container,id,string,container,id,diff,docker,helper,get,property,docker,constants,configuration,message,string,class,if,container,id,diff,null,diff,container,cmd,with,container,id,container,id,diff,return,diff,container,cmd
DockerProducer -> private ContainerDiffCmd executeDiffContainerRequest(DockerClient client, Message message);1429199966;Produces a diff container request__@param client_@param message_@return;private ContainerDiffCmd executeDiffContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Diff Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        ContainerDiffCmd diffContainerCmd = client.containerDiffCmd(containerId)___        String containerIdDiff = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID_DIFF, configuration, message, String.class)___        if (containerIdDiff != null) {_            diffContainerCmd.withContainerId(containerIdDiff)__        }__        return diffContainerCmd___    };produces,a,diff,container,request,param,client,param,message,return;private,container,diff,cmd,execute,diff,container,request,docker,client,client,message,message,logger,debug,executing,docker,diff,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,container,diff,cmd,diff,container,cmd,client,container,diff,cmd,container,id,string,container,id,diff,docker,helper,get,property,docker,constants,configuration,message,string,class,if,container,id,diff,null,diff,container,cmd,with,container,id,container,id,diff,return,diff,container,cmd
DockerProducer -> private ContainerDiffCmd executeDiffContainerRequest(DockerClient client, Message message);1433489320;Produces a diff container request__@param client_@param message_@return;private ContainerDiffCmd executeDiffContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Diff Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        ContainerDiffCmd diffContainerCmd = client.containerDiffCmd(containerId)___        String containerIdDiff = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID_DIFF, configuration, message, String.class)___        if (containerIdDiff != null) {_            diffContainerCmd.withContainerId(containerIdDiff)__        }__        return diffContainerCmd___    };produces,a,diff,container,request,param,client,param,message,return;private,container,diff,cmd,execute,diff,container,request,docker,client,client,message,message,logger,debug,executing,docker,diff,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,container,diff,cmd,diff,container,cmd,client,container,diff,cmd,container,id,string,container,id,diff,docker,helper,get,property,docker,constants,configuration,message,string,class,if,container,id,diff,null,diff,container,cmd,with,container,id,container,id,diff,return,diff,container,cmd
DockerProducer -> private ContainerDiffCmd executeDiffContainerRequest(DockerClient client, Message message);1440239526;Produces a diff container request__@param client_@param message_@return;private ContainerDiffCmd executeDiffContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Diff Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        ContainerDiffCmd diffContainerCmd = client.containerDiffCmd(containerId)___        String containerIdDiff = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID_DIFF, configuration, message, String.class)___        if (containerIdDiff != null) {_            diffContainerCmd.withContainerId(containerIdDiff)__        }__        return diffContainerCmd___    };produces,a,diff,container,request,param,client,param,message,return;private,container,diff,cmd,execute,diff,container,request,docker,client,client,message,message,logger,debug,executing,docker,diff,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,container,diff,cmd,diff,container,cmd,client,container,diff,cmd,container,id,string,container,id,diff,docker,helper,get,property,docker,constants,configuration,message,string,class,if,container,id,diff,null,diff,container,cmd,with,container,id,container,id,diff,return,diff,container,cmd
DockerProducer -> private ContainerDiffCmd executeDiffContainerRequest(DockerClient client, Message message);1474362454;Produces a diff container request__@param client_@param message_@return;private ContainerDiffCmd executeDiffContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Diff Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        ContainerDiffCmd diffContainerCmd = client.containerDiffCmd(containerId)___        String containerIdDiff = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID_DIFF, configuration, message, String.class)___        if (containerIdDiff != null) {_            diffContainerCmd.withContainerId(containerIdDiff)__        }__        return diffContainerCmd___    };produces,a,diff,container,request,param,client,param,message,return;private,container,diff,cmd,execute,diff,container,request,docker,client,client,message,message,logger,debug,executing,docker,diff,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,container,diff,cmd,diff,container,cmd,client,container,diff,cmd,container,id,string,container,id,diff,docker,helper,get,property,docker,constants,configuration,message,string,class,if,container,id,diff,null,diff,container,cmd,with,container,id,container,id,diff,return,diff,container,cmd
DockerProducer -> private ContainerDiffCmd executeDiffContainerRequest(DockerClient client, Message message);1531637865;Produces a diff container request__@param client_@param message_@return;private ContainerDiffCmd executeDiffContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Diff Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        ContainerDiffCmd diffContainerCmd = client.containerDiffCmd(containerId)___        String containerIdDiff = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID_DIFF, configuration, message, String.class)___        if (containerIdDiff != null) {_            diffContainerCmd.withContainerId(containerIdDiff)__        }__        return diffContainerCmd___    };produces,a,diff,container,request,param,client,param,message,return;private,container,diff,cmd,execute,diff,container,request,docker,client,client,message,message,logger,debug,executing,docker,diff,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,container,diff,cmd,diff,container,cmd,client,container,diff,cmd,container,id,string,container,id,diff,docker,helper,get,property,docker,constants,configuration,message,string,class,if,container,id,diff,null,diff,container,cmd,with,container,id,container,id,diff,return,diff,container,cmd
DockerProducer -> private ContainerDiffCmd executeDiffContainerRequest(DockerClient client, Message message);1540108163;Produces a diff container request__@param client_@param message_@return;private ContainerDiffCmd executeDiffContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Diff Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        ContainerDiffCmd diffContainerCmd = client.containerDiffCmd(containerId)___        String containerIdDiff = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID_DIFF, configuration, message, String.class)___        if (containerIdDiff != null) {_            diffContainerCmd.withContainerId(containerIdDiff)__        }__        return diffContainerCmd___    };produces,a,diff,container,request,param,client,param,message,return;private,container,diff,cmd,execute,diff,container,request,docker,client,client,message,message,logger,debug,executing,docker,diff,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,container,diff,cmd,diff,container,cmd,client,container,diff,cmd,container,id,string,container,id,diff,docker,helper,get,property,docker,constants,configuration,message,string,class,if,container,id,diff,null,diff,container,cmd,with,container,id,container,id,diff,return,diff,container,cmd
DockerProducer -> private ExecStartCmd executeExecStartRequest(DockerClient client, Message message);1424675020;Produces a exec start request__@param client_@param message_@return;private ExecStartCmd executeExecStartRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Exec Create Request")___        String execId = DockerHelper.getProperty(DockerConstants.DOCKER_EXEC_ID, configuration, message, String.class)___        ObjectHelper.notNull(execId, "Exec ID must be specified")___        ExecStartCmd execStartCmd = client.execStartCmd(execId)___        Boolean detach = DockerHelper.getProperty(DockerConstants.DOCKER_DETACH, configuration, message, Boolean.class)___        if (detach != null) {_            execStartCmd.withDetach(detach)__        }_        _        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            execStartCmd.withTty(tty)__        }__        return execStartCmd___    };produces,a,exec,start,request,param,client,param,message,return;private,exec,start,cmd,execute,exec,start,request,docker,client,client,message,message,logger,debug,executing,docker,exec,create,request,string,exec,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,exec,id,exec,id,must,be,specified,exec,start,cmd,exec,start,cmd,client,exec,start,cmd,exec,id,boolean,detach,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,detach,null,exec,start,cmd,with,detach,detach,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,exec,start,cmd,with,tty,tty,return,exec,start,cmd
DockerProducer -> private ExecStartCmd executeExecStartRequest(DockerClient client, Message message);1424675476;Produces a exec start request__@param client_@param message_@return;private ExecStartCmd executeExecStartRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Exec Create Request")___        String execId = DockerHelper.getProperty(DockerConstants.DOCKER_EXEC_ID, configuration, message, String.class)___        ObjectHelper.notNull(execId, "Exec ID must be specified")___        ExecStartCmd execStartCmd = client.execStartCmd(execId)___        Boolean detach = DockerHelper.getProperty(DockerConstants.DOCKER_DETACH, configuration, message, Boolean.class)___        if (detach != null) {_            execStartCmd.withDetach(detach)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            execStartCmd.withTty(tty)__        }__        return execStartCmd___    };produces,a,exec,start,request,param,client,param,message,return;private,exec,start,cmd,execute,exec,start,request,docker,client,client,message,message,logger,debug,executing,docker,exec,create,request,string,exec,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,exec,id,exec,id,must,be,specified,exec,start,cmd,exec,start,cmd,client,exec,start,cmd,exec,id,boolean,detach,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,detach,null,exec,start,cmd,with,detach,detach,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,exec,start,cmd,with,tty,tty,return,exec,start,cmd
DockerProducer -> private ExecStartCmd executeExecStartRequest(DockerClient client, Message message);1424877876;Produces a exec start request__@param client_@param message_@return;private ExecStartCmd executeExecStartRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Exec Create Request")___        String execId = DockerHelper.getProperty(DockerConstants.DOCKER_EXEC_ID, configuration, message, String.class)___        ObjectHelper.notNull(execId, "Exec ID must be specified")___        ExecStartCmd execStartCmd = client.execStartCmd(execId)___        Boolean detach = DockerHelper.getProperty(DockerConstants.DOCKER_DETACH, configuration, message, Boolean.class)___        if (detach != null) {_            execStartCmd.withDetach(detach)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            execStartCmd.withTty(tty)__        }__        return execStartCmd___    };produces,a,exec,start,request,param,client,param,message,return;private,exec,start,cmd,execute,exec,start,request,docker,client,client,message,message,logger,debug,executing,docker,exec,create,request,string,exec,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,exec,id,exec,id,must,be,specified,exec,start,cmd,exec,start,cmd,client,exec,start,cmd,exec,id,boolean,detach,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,detach,null,exec,start,cmd,with,detach,detach,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,exec,start,cmd,with,tty,tty,return,exec,start,cmd
DockerProducer -> private ExecStartCmd executeExecStartRequest(DockerClient client, Message message);1429199966;Produces a exec start request__@param client_@param message_@return;private ExecStartCmd executeExecStartRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Exec Create Request")___        String execId = DockerHelper.getProperty(DockerConstants.DOCKER_EXEC_ID, configuration, message, String.class)___        ObjectHelper.notNull(execId, "Exec ID must be specified")___        ExecStartCmd execStartCmd = client.execStartCmd(execId)___        Boolean detach = DockerHelper.getProperty(DockerConstants.DOCKER_DETACH, configuration, message, Boolean.class)___        if (detach != null) {_            execStartCmd.withDetach(detach)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            execStartCmd.withTty(tty)__        }__        return execStartCmd___    };produces,a,exec,start,request,param,client,param,message,return;private,exec,start,cmd,execute,exec,start,request,docker,client,client,message,message,logger,debug,executing,docker,exec,create,request,string,exec,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,exec,id,exec,id,must,be,specified,exec,start,cmd,exec,start,cmd,client,exec,start,cmd,exec,id,boolean,detach,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,detach,null,exec,start,cmd,with,detach,detach,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,exec,start,cmd,with,tty,tty,return,exec,start,cmd
DockerProducer -> private ExecStartCmd executeExecStartRequest(DockerClient client, Message message);1433489320;Produces a exec start request__@param client_@param message_@return;private ExecStartCmd executeExecStartRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Exec Create Request")___        String execId = DockerHelper.getProperty(DockerConstants.DOCKER_EXEC_ID, configuration, message, String.class)___        ObjectHelper.notNull(execId, "Exec ID must be specified")___        ExecStartCmd execStartCmd = client.execStartCmd(execId)___        Boolean detach = DockerHelper.getProperty(DockerConstants.DOCKER_DETACH, configuration, message, Boolean.class)___        if (detach != null) {_            execStartCmd.withDetach(detach)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            execStartCmd.withTty(tty)__        }__        return execStartCmd___    };produces,a,exec,start,request,param,client,param,message,return;private,exec,start,cmd,execute,exec,start,request,docker,client,client,message,message,logger,debug,executing,docker,exec,create,request,string,exec,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,exec,id,exec,id,must,be,specified,exec,start,cmd,exec,start,cmd,client,exec,start,cmd,exec,id,boolean,detach,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,detach,null,exec,start,cmd,with,detach,detach,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,exec,start,cmd,with,tty,tty,return,exec,start,cmd
DockerProducer -> private ExecStartCmd executeExecStartRequest(DockerClient client, Message message);1440239526;Produces a exec start request__@param client_@param message_@return;private ExecStartCmd executeExecStartRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Exec Create Request")___        String execId = DockerHelper.getProperty(DockerConstants.DOCKER_EXEC_ID, configuration, message, String.class)___        ObjectHelper.notNull(execId, "Exec ID must be specified")___        ExecStartCmd execStartCmd = client.execStartCmd(execId)___        Boolean detach = DockerHelper.getProperty(DockerConstants.DOCKER_DETACH, configuration, message, Boolean.class)___        if (detach != null) {_            execStartCmd.withDetach(detach)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            execStartCmd.withTty(tty)__        }__        return execStartCmd___    };produces,a,exec,start,request,param,client,param,message,return;private,exec,start,cmd,execute,exec,start,request,docker,client,client,message,message,logger,debug,executing,docker,exec,create,request,string,exec,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,exec,id,exec,id,must,be,specified,exec,start,cmd,exec,start,cmd,client,exec,start,cmd,exec,id,boolean,detach,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,detach,null,exec,start,cmd,with,detach,detach,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,exec,start,cmd,with,tty,tty,return,exec,start,cmd
DockerProducer -> private CreateImageCmd executeCreateImageRequest(DockerClient client, Message message);1424675020;Performs a create image request__@param client_@param message_@return;private CreateImageCmd executeCreateImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Create Image Request")___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        InputStream inputStream = message.getBody(InputStream.class)__       _        if(repository == null || inputStream == null) {_            throw new IllegalArgumentException("Inputstream must be present on message body and repository must be specified")__        }_        _        CreateImageCmd createImageCmd = client.createImageCmd(repository, inputStream)___        return createImageCmd___    };performs,a,create,image,request,param,client,param,message,return;private,create,image,cmd,execute,create,image,request,docker,client,client,message,message,logger,debug,executing,docker,create,image,request,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,input,stream,input,stream,message,get,body,input,stream,class,if,repository,null,input,stream,null,throw,new,illegal,argument,exception,inputstream,must,be,present,on,message,body,and,repository,must,be,specified,create,image,cmd,create,image,cmd,client,create,image,cmd,repository,input,stream,return,create,image,cmd
DockerProducer -> private CreateImageCmd executeCreateImageRequest(DockerClient client, Message message);1424675476;Performs a create image request__@param client_@param message_@return;private CreateImageCmd executeCreateImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Create Image Request")___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        InputStream inputStream = message.getBody(InputStream.class)___        if (repository == null || inputStream == null) {_            throw new IllegalArgumentException("Inputstream must be present on message body and repository must be specified")__        }__        CreateImageCmd createImageCmd = client.createImageCmd(repository, inputStream)___        return createImageCmd___    };performs,a,create,image,request,param,client,param,message,return;private,create,image,cmd,execute,create,image,request,docker,client,client,message,message,logger,debug,executing,docker,create,image,request,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,input,stream,input,stream,message,get,body,input,stream,class,if,repository,null,input,stream,null,throw,new,illegal,argument,exception,inputstream,must,be,present,on,message,body,and,repository,must,be,specified,create,image,cmd,create,image,cmd,client,create,image,cmd,repository,input,stream,return,create,image,cmd
DockerProducer -> private CreateImageCmd executeCreateImageRequest(DockerClient client, Message message);1424877876;Performs a create image request__@param client_@param message_@return;private CreateImageCmd executeCreateImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Create Image Request")___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        InputStream inputStream = message.getBody(InputStream.class)___        if (repository == null || inputStream == null) {_            throw new IllegalArgumentException("Inputstream must be present on message body and repository must be specified")__        }__        CreateImageCmd createImageCmd = client.createImageCmd(repository, inputStream)___        return createImageCmd___    };performs,a,create,image,request,param,client,param,message,return;private,create,image,cmd,execute,create,image,request,docker,client,client,message,message,logger,debug,executing,docker,create,image,request,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,input,stream,input,stream,message,get,body,input,stream,class,if,repository,null,input,stream,null,throw,new,illegal,argument,exception,inputstream,must,be,present,on,message,body,and,repository,must,be,specified,create,image,cmd,create,image,cmd,client,create,image,cmd,repository,input,stream,return,create,image,cmd
DockerProducer -> private CreateImageCmd executeCreateImageRequest(DockerClient client, Message message);1429199966;Performs a create image request__@param client_@param message_@return;private CreateImageCmd executeCreateImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Create Image Request")___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        InputStream inputStream = message.getBody(InputStream.class)___        if (repository == null || inputStream == null) {_            throw new IllegalArgumentException("Inputstream must be present on message body and repository must be specified")__        }__        CreateImageCmd createImageCmd = client.createImageCmd(repository, inputStream)___        return createImageCmd___    };performs,a,create,image,request,param,client,param,message,return;private,create,image,cmd,execute,create,image,request,docker,client,client,message,message,logger,debug,executing,docker,create,image,request,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,input,stream,input,stream,message,get,body,input,stream,class,if,repository,null,input,stream,null,throw,new,illegal,argument,exception,inputstream,must,be,present,on,message,body,and,repository,must,be,specified,create,image,cmd,create,image,cmd,client,create,image,cmd,repository,input,stream,return,create,image,cmd
DockerProducer -> private CreateImageCmd executeCreateImageRequest(DockerClient client, Message message);1433489320;Performs a create image request__@param client_@param message_@return;private CreateImageCmd executeCreateImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Create Image Request")___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        InputStream inputStream = message.getBody(InputStream.class)___        if (repository == null || inputStream == null) {_            throw new IllegalArgumentException("Inputstream must be present on message body and repository must be specified")__        }__        CreateImageCmd createImageCmd = client.createImageCmd(repository, inputStream)___        return createImageCmd___    };performs,a,create,image,request,param,client,param,message,return;private,create,image,cmd,execute,create,image,request,docker,client,client,message,message,logger,debug,executing,docker,create,image,request,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,input,stream,input,stream,message,get,body,input,stream,class,if,repository,null,input,stream,null,throw,new,illegal,argument,exception,inputstream,must,be,present,on,message,body,and,repository,must,be,specified,create,image,cmd,create,image,cmd,client,create,image,cmd,repository,input,stream,return,create,image,cmd
DockerProducer -> private CreateImageCmd executeCreateImageRequest(DockerClient client, Message message);1440239526;Performs a create image request__@param client_@param message_@return;private CreateImageCmd executeCreateImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Create Image Request")___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        InputStream inputStream = message.getBody(InputStream.class)___        if (repository == null || inputStream == null) {_            throw new IllegalArgumentException("Inputstream must be present on message body and repository must be specified")__        }__        CreateImageCmd createImageCmd = client.createImageCmd(repository, inputStream)___        return createImageCmd___    };performs,a,create,image,request,param,client,param,message,return;private,create,image,cmd,execute,create,image,request,docker,client,client,message,message,logger,debug,executing,docker,create,image,request,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,input,stream,input,stream,message,get,body,input,stream,class,if,repository,null,input,stream,null,throw,new,illegal,argument,exception,inputstream,must,be,present,on,message,body,and,repository,must,be,specified,create,image,cmd,create,image,cmd,client,create,image,cmd,repository,input,stream,return,create,image,cmd
DockerProducer -> private CreateImageCmd executeCreateImageRequest(DockerClient client, Message message);1474362454;Performs a create image request__@param client_@param message_@return;private CreateImageCmd executeCreateImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Create Image Request")___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        InputStream inputStream = message.getBody(InputStream.class)___        if (repository == null || inputStream == null) {_            throw new IllegalArgumentException("Inputstream must be present on message body and repository must be specified")__        }__        CreateImageCmd createImageCmd = client.createImageCmd(repository, inputStream)___        return createImageCmd___    };performs,a,create,image,request,param,client,param,message,return;private,create,image,cmd,execute,create,image,request,docker,client,client,message,message,logger,debug,executing,docker,create,image,request,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,input,stream,input,stream,message,get,body,input,stream,class,if,repository,null,input,stream,null,throw,new,illegal,argument,exception,inputstream,must,be,present,on,message,body,and,repository,must,be,specified,create,image,cmd,create,image,cmd,client,create,image,cmd,repository,input,stream,return,create,image,cmd
DockerProducer -> private CreateImageCmd executeCreateImageRequest(DockerClient client, Message message);1531637865;Performs a create image request__@param client_@param message_@return;private CreateImageCmd executeCreateImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Create Image Request")___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        InputStream inputStream = message.getBody(InputStream.class)___        if (repository == null || inputStream == null) {_            throw new IllegalArgumentException("Inputstream must be present on message body and repository must be specified")__        }__        CreateImageCmd createImageCmd = client.createImageCmd(repository, inputStream)___        return createImageCmd___    };performs,a,create,image,request,param,client,param,message,return;private,create,image,cmd,execute,create,image,request,docker,client,client,message,message,logger,debug,executing,docker,create,image,request,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,input,stream,input,stream,message,get,body,input,stream,class,if,repository,null,input,stream,null,throw,new,illegal,argument,exception,inputstream,must,be,present,on,message,body,and,repository,must,be,specified,create,image,cmd,create,image,cmd,client,create,image,cmd,repository,input,stream,return,create,image,cmd
DockerProducer -> private CreateImageCmd executeCreateImageRequest(DockerClient client, Message message);1540108163;Performs a create image request__@param client_@param message_@return;private CreateImageCmd executeCreateImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Create Image Request")___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        InputStream inputStream = message.getBody(InputStream.class)___        if (repository == null || inputStream == null) {_            throw new IllegalArgumentException("Inputstream must be present on message body and repository must be specified")__        }__        CreateImageCmd createImageCmd = client.createImageCmd(repository, inputStream)___        return createImageCmd___    };performs,a,create,image,request,param,client,param,message,return;private,create,image,cmd,execute,create,image,request,docker,client,client,message,message,logger,debug,executing,docker,create,image,request,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,input,stream,input,stream,message,get,body,input,stream,class,if,repository,null,input,stream,null,throw,new,illegal,argument,exception,inputstream,must,be,present,on,message,body,and,repository,must,be,specified,create,image,cmd,create,image,cmd,client,create,image,cmd,repository,input,stream,return,create,image,cmd
DockerProducer -> private SearchImagesCmd executeSearchImageRequest(DockerClient client, Message message) throws DockerException;1415211488;Produces a search image request__@param client_@param message_@return_@throws DockerException;private SearchImagesCmd executeSearchImageRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Search Image Request")__        _        String term = DockerHelper.getProperty(DockerConstants.DOCKER_TERM, configuration, message, String.class)__        _        SearchImagesCmd searchImagesCmd = client.searchImagesCmd(term)__        _        return searchImagesCmd___    };produces,a,search,image,request,param,client,param,message,return,throws,docker,exception;private,search,images,cmd,execute,search,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,search,image,request,string,term,docker,helper,get,property,docker,constants,configuration,message,string,class,search,images,cmd,search,images,cmd,client,search,images,cmd,term,return,search,images,cmd
DockerProducer -> private SearchImagesCmd executeSearchImageRequest(DockerClient client, Message message) throws DockerException;1415517409;Produces a search image request__@param client_@param message_@return_@throws DockerException;private SearchImagesCmd executeSearchImageRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Search Image Request")__        _        String term = DockerHelper.getProperty(DockerConstants.DOCKER_TERM, configuration, message, String.class)__        _        SearchImagesCmd searchImagesCmd = client.searchImagesCmd(term)__        _        return searchImagesCmd___    };produces,a,search,image,request,param,client,param,message,return,throws,docker,exception;private,search,images,cmd,execute,search,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,search,image,request,string,term,docker,helper,get,property,docker,constants,configuration,message,string,class,search,images,cmd,search,images,cmd,client,search,images,cmd,term,return,search,images,cmd
DockerProducer -> private SearchImagesCmd executeSearchImageRequest(DockerClient client, Message message) throws DockerException;1423234542;Produces a search image request__@param client_@param message_@return_@throws DockerException;private SearchImagesCmd executeSearchImageRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Search Image Request")__        _        String term = DockerHelper.getProperty(DockerConstants.DOCKER_TERM, configuration, message, String.class)__        _        SearchImagesCmd searchImagesCmd = client.searchImagesCmd(term)__        _        return searchImagesCmd___    };produces,a,search,image,request,param,client,param,message,return,throws,docker,exception;private,search,images,cmd,execute,search,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,search,image,request,string,term,docker,helper,get,property,docker,constants,configuration,message,string,class,search,images,cmd,search,images,cmd,client,search,images,cmd,term,return,search,images,cmd
DockerProducer -> private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message) throws DockerException;1415211488;Produce a log container request__@param client_@param message_@return_@throws DockerException;private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Log Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        LogContainerCmd logContainerCmd = client.logContainerCmd(containerId)___        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)__        _        if (stdOut != null && stdOut) {_            logContainerCmd.withStdOut(stdOut)__        }_        _        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)__        _        if (stdErr != null && stdErr) {_            logContainerCmd.withStdErr(stdErr)__        }_        _        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)__        _        if (timestamps != null && timestamps) {_            logContainerCmd.withTimestamps(timestamps)__        }       _        _        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)__        _        if (followStream != null && followStream) {_            logContainerCmd.withFollowStream(followStream)__        }    _        _        Boolean tailAll = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL_ALL, configuration, message, Boolean.class)__        _        if (tailAll != null && tailAll) {_            logContainerCmd.withTailAll()__        }_        _        Integer tail = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL, configuration, message, Integer.class)__        _        if (tailAll != null) {_            logContainerCmd.withTail(tail)__        }_        _        return logContainerCmd___    };produce,a,log,container,request,param,client,param,message,return,throws,docker,exception;private,log,container,cmd,execute,log,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,log,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,log,container,cmd,log,container,cmd,client,log,container,cmd,container,id,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,std,out,log,container,cmd,with,std,out,std,out,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,std,err,log,container,cmd,with,std,err,std,err,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,timestamps,log,container,cmd,with,timestamps,timestamps,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,follow,stream,log,container,cmd,with,follow,stream,follow,stream,boolean,tail,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tail,all,null,tail,all,log,container,cmd,with,tail,all,integer,tail,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,tail,all,null,log,container,cmd,with,tail,tail,return,log,container,cmd
DockerProducer -> private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message) throws DockerException;1415517409;Produce a log container request__@param client_@param message_@return_@throws DockerException;private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Log Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        LogContainerCmd logContainerCmd = client.logContainerCmd(containerId)___        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)__        _        if (stdOut != null && stdOut) {_            logContainerCmd.withStdOut(stdOut)__        }_        _        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)__        _        if (stdErr != null && stdErr) {_            logContainerCmd.withStdErr(stdErr)__        }_        _        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)__        _        if (timestamps != null && timestamps) {_            logContainerCmd.withTimestamps(timestamps)__        }       _        _        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)__        _        if (followStream != null && followStream) {_            logContainerCmd.withFollowStream(followStream)__        }    _        _        Boolean tailAll = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL_ALL, configuration, message, Boolean.class)__        _        if (tailAll != null && tailAll) {_            logContainerCmd.withTailAll()__        }_        _        Integer tail = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL, configuration, message, Integer.class)__        _        if (tailAll != null) {_            logContainerCmd.withTail(tail)__        }_        _        return logContainerCmd___    };produce,a,log,container,request,param,client,param,message,return,throws,docker,exception;private,log,container,cmd,execute,log,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,log,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,log,container,cmd,log,container,cmd,client,log,container,cmd,container,id,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,std,out,log,container,cmd,with,std,out,std,out,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,std,err,log,container,cmd,with,std,err,std,err,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,timestamps,log,container,cmd,with,timestamps,timestamps,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,follow,stream,log,container,cmd,with,follow,stream,follow,stream,boolean,tail,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tail,all,null,tail,all,log,container,cmd,with,tail,all,integer,tail,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,tail,all,null,log,container,cmd,with,tail,tail,return,log,container,cmd
DockerProducer -> private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message) throws DockerException;1423234542;Produce a log container request__@param client_@param message_@return_@throws DockerException;private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Log Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        LogContainerCmd logContainerCmd = client.logContainerCmd(containerId)___        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)__        _        if (stdOut != null && stdOut) {_            logContainerCmd.withStdOut(stdOut)__        }_        _        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)__        _        if (stdErr != null && stdErr) {_            logContainerCmd.withStdErr(stdErr)__        }_        _        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)__        _        if (timestamps != null && timestamps) {_            logContainerCmd.withTimestamps(timestamps)__        }       _        _        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)__        _        if (followStream != null && followStream) {_            logContainerCmd.withFollowStream(followStream)__        }    _        _        Boolean tailAll = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL_ALL, configuration, message, Boolean.class)__        _        if (tailAll != null && tailAll) {_            logContainerCmd.withTailAll()__        }_        _        Integer tail = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL, configuration, message, Integer.class)__        _        if (tailAll != null) {_            logContainerCmd.withTail(tail)__        }_        _        return logContainerCmd___    };produce,a,log,container,request,param,client,param,message,return,throws,docker,exception;private,log,container,cmd,execute,log,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,log,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,log,container,cmd,log,container,cmd,client,log,container,cmd,container,id,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,std,out,log,container,cmd,with,std,out,std,out,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,std,err,log,container,cmd,with,std,err,std,err,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,timestamps,log,container,cmd,with,timestamps,timestamps,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,follow,stream,log,container,cmd,with,follow,stream,follow,stream,boolean,tail,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tail,all,null,tail,all,log,container,cmd,with,tail,all,integer,tail,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,tail,all,null,log,container,cmd,with,tail,tail,return,log,container,cmd
DockerProducer -> private CopyFileFromContainerCmd executeCopyFileContainerRequest(DockerClient client, Message message) throws DockerException;1415211488;Produces a copy file/folder from container request__@param client_@param message_@return_@throws DockerException;private CopyFileFromContainerCmd executeCopyFileContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Copy File/Folder Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        String resource = DockerHelper.getProperty(DockerConstants.DOCKER_RESOURCE, configuration, message, String.class)___        CopyFileFromContainerCmd copyFileContainerCmd = client.copyFileFromContainerCmd(containerId, resource)___        String hostPath = DockerHelper.getProperty(DockerConstants.DOCKER_HOST_PATH, configuration, message, String.class)__        _        if (hostPath != null) {_            copyFileContainerCmd.withHostPath(hostPath)__        }_             _        return copyFileContainerCmd___    };produces,a,copy,file,folder,from,container,request,param,client,param,message,return,throws,docker,exception;private,copy,file,from,container,cmd,execute,copy,file,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,copy,file,folder,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,string,resource,docker,helper,get,property,docker,constants,configuration,message,string,class,copy,file,from,container,cmd,copy,file,container,cmd,client,copy,file,from,container,cmd,container,id,resource,string,host,path,docker,helper,get,property,docker,constants,configuration,message,string,class,if,host,path,null,copy,file,container,cmd,with,host,path,host,path,return,copy,file,container,cmd
DockerProducer -> private CopyFileFromContainerCmd executeCopyFileContainerRequest(DockerClient client, Message message) throws DockerException;1415517409;Produces a copy file/folder from container request__@param client_@param message_@return_@throws DockerException;private CopyFileFromContainerCmd executeCopyFileContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Copy File/Folder Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        String resource = DockerHelper.getProperty(DockerConstants.DOCKER_RESOURCE, configuration, message, String.class)___        CopyFileFromContainerCmd copyFileContainerCmd = client.copyFileFromContainerCmd(containerId, resource)___        String hostPath = DockerHelper.getProperty(DockerConstants.DOCKER_HOST_PATH, configuration, message, String.class)__        _        if (hostPath != null) {_            copyFileContainerCmd.withHostPath(hostPath)__        }_             _        return copyFileContainerCmd___    };produces,a,copy,file,folder,from,container,request,param,client,param,message,return,throws,docker,exception;private,copy,file,from,container,cmd,execute,copy,file,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,copy,file,folder,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,string,resource,docker,helper,get,property,docker,constants,configuration,message,string,class,copy,file,from,container,cmd,copy,file,container,cmd,client,copy,file,from,container,cmd,container,id,resource,string,host,path,docker,helper,get,property,docker,constants,configuration,message,string,class,if,host,path,null,copy,file,container,cmd,with,host,path,host,path,return,copy,file,container,cmd
DockerProducer -> private CopyFileFromContainerCmd executeCopyFileContainerRequest(DockerClient client, Message message) throws DockerException;1423234542;Produces a copy file/folder from container request__@param client_@param message_@return_@throws DockerException;private CopyFileFromContainerCmd executeCopyFileContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Copy File/Folder Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        String resource = DockerHelper.getProperty(DockerConstants.DOCKER_RESOURCE, configuration, message, String.class)___        CopyFileFromContainerCmd copyFileContainerCmd = client.copyFileFromContainerCmd(containerId, resource)___        String hostPath = DockerHelper.getProperty(DockerConstants.DOCKER_HOST_PATH, configuration, message, String.class)__        _        if (hostPath != null) {_            copyFileContainerCmd.withHostPath(hostPath)__        }_             _        return copyFileContainerCmd___    };produces,a,copy,file,folder,from,container,request,param,client,param,message,return,throws,docker,exception;private,copy,file,from,container,cmd,execute,copy,file,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,copy,file,folder,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,string,resource,docker,helper,get,property,docker,constants,configuration,message,string,class,copy,file,from,container,cmd,copy,file,container,cmd,client,copy,file,from,container,cmd,container,id,resource,string,host,path,docker,helper,get,property,docker,constants,configuration,message,string,class,if,host,path,null,copy,file,container,cmd,with,host,path,host,path,return,copy,file,container,cmd
DockerProducer -> private TagImageCmd executeTagImageRequest(DockerClient client, Message message) throws DockerException;1415211488;Produces a tag image request__@param client_@param message_@return_@throws DockerException;private TagImageCmd executeTagImageRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Tag Image Request")__        _        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)__        _        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)__   _        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)__       _        TagImageCmd tagImageCmd = client.tagImageCmd(imageId, repository, tag)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)__        _        if (force != null && force) {_            tagImageCmd.withForce()__        }_             _        return tagImageCmd___    };produces,a,tag,image,request,param,client,param,message,return,throws,docker,exception;private,tag,image,cmd,execute,tag,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,tag,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,tag,image,cmd,tag,image,cmd,client,tag,image,cmd,image,id,repository,tag,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,force,tag,image,cmd,with,force,return,tag,image,cmd
DockerProducer -> private TagImageCmd executeTagImageRequest(DockerClient client, Message message) throws DockerException;1415517409;Produces a tag image request__@param client_@param message_@return_@throws DockerException;private TagImageCmd executeTagImageRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Tag Image Request")__        _        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)__        _        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)__   _        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)__       _        TagImageCmd tagImageCmd = client.tagImageCmd(imageId, repository, tag)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)__        _        if (force != null && force) {_            tagImageCmd.withForce()__        }_             _        return tagImageCmd___    };produces,a,tag,image,request,param,client,param,message,return,throws,docker,exception;private,tag,image,cmd,execute,tag,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,tag,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,tag,image,cmd,tag,image,cmd,client,tag,image,cmd,image,id,repository,tag,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,force,tag,image,cmd,with,force,return,tag,image,cmd
DockerProducer -> private TagImageCmd executeTagImageRequest(DockerClient client, Message message) throws DockerException;1423234542;Produces a tag image request__@param client_@param message_@return_@throws DockerException;private TagImageCmd executeTagImageRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Tag Image Request")__        _        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)__        _        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)__   _        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)__       _        TagImageCmd tagImageCmd = client.tagImageCmd(imageId, repository, tag)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)__        _        if (force != null && force) {_            tagImageCmd.withForce()__        }_             _        return tagImageCmd___    };produces,a,tag,image,request,param,client,param,message,return,throws,docker,exception;private,tag,image,cmd,execute,tag,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,tag,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,tag,image,cmd,tag,image,cmd,client,tag,image,cmd,image,id,repository,tag,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,force,tag,image,cmd,with,force,return,tag,image,cmd
DockerProducer -> private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message);1424675020;Produce a wait container request__@param client_@param message_@return;private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Wait Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        WaitContainerCmd waitContainerCmd = client.waitContainerCmd(containerId)___        return waitContainerCmd___    };produce,a,wait,container,request,param,client,param,message,return;private,wait,container,cmd,execute,wait,container,request,docker,client,client,message,message,logger,debug,executing,docker,wait,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,wait,container,cmd,wait,container,cmd,client,wait,container,cmd,container,id,return,wait,container,cmd
DockerProducer -> private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message);1424675476;Produce a wait container request__@param client_@param message_@return;private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Wait Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        WaitContainerCmd waitContainerCmd = client.waitContainerCmd(containerId)___        return waitContainerCmd___    };produce,a,wait,container,request,param,client,param,message,return;private,wait,container,cmd,execute,wait,container,request,docker,client,client,message,message,logger,debug,executing,docker,wait,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,wait,container,cmd,wait,container,cmd,client,wait,container,cmd,container,id,return,wait,container,cmd
DockerProducer -> private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message);1424877876;Produce a wait container request__@param client_@param message_@return;private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Wait Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        WaitContainerCmd waitContainerCmd = client.waitContainerCmd(containerId)___        return waitContainerCmd___    };produce,a,wait,container,request,param,client,param,message,return;private,wait,container,cmd,execute,wait,container,request,docker,client,client,message,message,logger,debug,executing,docker,wait,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,wait,container,cmd,wait,container,cmd,client,wait,container,cmd,container,id,return,wait,container,cmd
DockerProducer -> private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message);1429199966;Produce a wait container request__@param client_@param message_@return;private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Wait Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        WaitContainerCmd waitContainerCmd = client.waitContainerCmd(containerId)___        return waitContainerCmd___    };produce,a,wait,container,request,param,client,param,message,return;private,wait,container,cmd,execute,wait,container,request,docker,client,client,message,message,logger,debug,executing,docker,wait,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,wait,container,cmd,wait,container,cmd,client,wait,container,cmd,container,id,return,wait,container,cmd
DockerProducer -> private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message);1433489320;Produce a wait container request__@param client_@param message_@return;private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Wait Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        WaitContainerCmd waitContainerCmd = client.waitContainerCmd(containerId)___        return waitContainerCmd___    };produce,a,wait,container,request,param,client,param,message,return;private,wait,container,cmd,execute,wait,container,request,docker,client,client,message,message,logger,debug,executing,docker,wait,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,wait,container,cmd,wait,container,cmd,client,wait,container,cmd,container,id,return,wait,container,cmd
DockerProducer -> private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message);1440239526;Produce a wait container request__@param client_@param message_@return;private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Wait Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        WaitContainerCmd waitContainerCmd = client.waitContainerCmd(containerId)___        return waitContainerCmd___    };produce,a,wait,container,request,param,client,param,message,return;private,wait,container,cmd,execute,wait,container,request,docker,client,client,message,message,logger,debug,executing,docker,wait,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,wait,container,cmd,wait,container,cmd,client,wait,container,cmd,container,id,return,wait,container,cmd
DockerProducer -> private RestartContainerCmd executeRestartContainerRequest(DockerClient client, Message message) throws DockerException;1415211488;Produces a restart container request__@param client_@param message_@return_@throws DockerException;private RestartContainerCmd executeRestartContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Restart Container Request")__   _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        _        RestartContainerCmd restartContainerCmd = client.restartContainerCmd(containerId)___        Integer timeout = DockerHelper.getProperty(DockerConstants.DOCKER_TIMEOUT, configuration, message, Integer.class)__        _        if (timeout != null) {_            restartContainerCmd.withtTimeout(timeout)__        }_             _        return restartContainerCmd___    };produces,a,restart,container,request,param,client,param,message,return,throws,docker,exception;private,restart,container,cmd,execute,restart,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,restart,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,restart,container,cmd,restart,container,cmd,client,restart,container,cmd,container,id,integer,timeout,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,timeout,null,restart,container,cmd,witht,timeout,timeout,return,restart,container,cmd
DockerProducer -> private RestartContainerCmd executeRestartContainerRequest(DockerClient client, Message message) throws DockerException;1415517409;Produces a restart container request__@param client_@param message_@return_@throws DockerException;private RestartContainerCmd executeRestartContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Restart Container Request")__   _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        _        RestartContainerCmd restartContainerCmd = client.restartContainerCmd(containerId)___        Integer timeout = DockerHelper.getProperty(DockerConstants.DOCKER_TIMEOUT, configuration, message, Integer.class)__        _        if (timeout != null) {_            restartContainerCmd.withtTimeout(timeout)__        }_             _        return restartContainerCmd___    };produces,a,restart,container,request,param,client,param,message,return,throws,docker,exception;private,restart,container,cmd,execute,restart,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,restart,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,restart,container,cmd,restart,container,cmd,client,restart,container,cmd,container,id,integer,timeout,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,timeout,null,restart,container,cmd,witht,timeout,timeout,return,restart,container,cmd
DockerProducer -> private RestartContainerCmd executeRestartContainerRequest(DockerClient client, Message message) throws DockerException;1423234542;Produces a restart container request__@param client_@param message_@return_@throws DockerException;private RestartContainerCmd executeRestartContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Restart Container Request")__   _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        _        RestartContainerCmd restartContainerCmd = client.restartContainerCmd(containerId)___        Integer timeout = DockerHelper.getProperty(DockerConstants.DOCKER_TIMEOUT, configuration, message, Integer.class)__        _        if (timeout != null) {_            restartContainerCmd.withtTimeout(timeout)__        }_             _        return restartContainerCmd___    };produces,a,restart,container,request,param,client,param,message,return,throws,docker,exception;private,restart,container,cmd,execute,restart,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,restart,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,restart,container,cmd,restart,container,cmd,client,restart,container,cmd,container,id,integer,timeout,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,timeout,null,restart,container,cmd,witht,timeout,timeout,return,restart,container,cmd
DockerProducer -> private RestartContainerCmd executeRestartContainerRequest(DockerClient client, Message message) throws DockerException;1424675020;Produces a restart container request__@param client_@param message_@return_@throws DockerException;private RestartContainerCmd executeRestartContainerRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Restart Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        RestartContainerCmd restartContainerCmd = client.restartContainerCmd(containerId)___        Integer timeout = DockerHelper.getProperty(DockerConstants.DOCKER_TIMEOUT, configuration, message, Integer.class)___        if (timeout != null) {_            restartContainerCmd.withtTimeout(timeout)__        }__        return restartContainerCmd___    };produces,a,restart,container,request,param,client,param,message,return,throws,docker,exception;private,restart,container,cmd,execute,restart,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,restart,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,restart,container,cmd,restart,container,cmd,client,restart,container,cmd,container,id,integer,timeout,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,timeout,null,restart,container,cmd,witht,timeout,timeout,return,restart,container,cmd
DockerProducer -> private RestartContainerCmd executeRestartContainerRequest(DockerClient client, Message message) throws DockerException;1424675476;Produces a restart container request__@param client_@param message_@return_@throws DockerException;private RestartContainerCmd executeRestartContainerRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Restart Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        RestartContainerCmd restartContainerCmd = client.restartContainerCmd(containerId)___        Integer timeout = DockerHelper.getProperty(DockerConstants.DOCKER_TIMEOUT, configuration, message, Integer.class)___        if (timeout != null) {_            restartContainerCmd.withtTimeout(timeout)__        }__        return restartContainerCmd___    };produces,a,restart,container,request,param,client,param,message,return,throws,docker,exception;private,restart,container,cmd,execute,restart,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,restart,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,restart,container,cmd,restart,container,cmd,client,restart,container,cmd,container,id,integer,timeout,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,timeout,null,restart,container,cmd,witht,timeout,timeout,return,restart,container,cmd
DockerProducer -> private RestartContainerCmd executeRestartContainerRequest(DockerClient client, Message message) throws DockerException;1424877876;Produces a restart container request__@param client_@param message_@return_@throws DockerException;private RestartContainerCmd executeRestartContainerRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Restart Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        RestartContainerCmd restartContainerCmd = client.restartContainerCmd(containerId)___        Integer timeout = DockerHelper.getProperty(DockerConstants.DOCKER_TIMEOUT, configuration, message, Integer.class)___        if (timeout != null) {_            restartContainerCmd.withtTimeout(timeout)__        }__        return restartContainerCmd___    };produces,a,restart,container,request,param,client,param,message,return,throws,docker,exception;private,restart,container,cmd,execute,restart,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,restart,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,restart,container,cmd,restart,container,cmd,client,restart,container,cmd,container,id,integer,timeout,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,timeout,null,restart,container,cmd,witht,timeout,timeout,return,restart,container,cmd
DockerProducer -> private RestartContainerCmd executeRestartContainerRequest(DockerClient client, Message message) throws DockerException;1429199966;Produces a restart container request__@param client_@param message_@return_@throws DockerException;private RestartContainerCmd executeRestartContainerRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Restart Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        RestartContainerCmd restartContainerCmd = client.restartContainerCmd(containerId)___        Integer timeout = DockerHelper.getProperty(DockerConstants.DOCKER_TIMEOUT, configuration, message, Integer.class)___        if (timeout != null) {_            restartContainerCmd.withtTimeout(timeout)__        }__        return restartContainerCmd___    };produces,a,restart,container,request,param,client,param,message,return,throws,docker,exception;private,restart,container,cmd,execute,restart,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,restart,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,restart,container,cmd,restart,container,cmd,client,restart,container,cmd,container,id,integer,timeout,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,timeout,null,restart,container,cmd,witht,timeout,timeout,return,restart,container,cmd
DockerProducer -> private RestartContainerCmd executeRestartContainerRequest(DockerClient client, Message message) throws DockerException;1433489320;Produces a restart container request__@param client_@param message_@return_@throws DockerException;private RestartContainerCmd executeRestartContainerRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Restart Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        RestartContainerCmd restartContainerCmd = client.restartContainerCmd(containerId)___        Integer timeout = DockerHelper.getProperty(DockerConstants.DOCKER_TIMEOUT, configuration, message, Integer.class)___        if (timeout != null) {_            restartContainerCmd.withtTimeout(timeout)__        }__        return restartContainerCmd___    };produces,a,restart,container,request,param,client,param,message,return,throws,docker,exception;private,restart,container,cmd,execute,restart,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,restart,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,restart,container,cmd,restart,container,cmd,client,restart,container,cmd,container,id,integer,timeout,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,timeout,null,restart,container,cmd,witht,timeout,timeout,return,restart,container,cmd
DockerProducer -> private RestartContainerCmd executeRestartContainerRequest(DockerClient client, Message message) throws DockerException;1440239526;Produces a restart container request__@param client_@param message_@return_@throws DockerException;private RestartContainerCmd executeRestartContainerRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Restart Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        RestartContainerCmd restartContainerCmd = client.restartContainerCmd(containerId)___        Integer timeout = DockerHelper.getProperty(DockerConstants.DOCKER_TIMEOUT, configuration, message, Integer.class)___        if (timeout != null) {_            restartContainerCmd.withtTimeout(timeout)__        }__        return restartContainerCmd___    };produces,a,restart,container,request,param,client,param,message,return,throws,docker,exception;private,restart,container,cmd,execute,restart,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,restart,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,restart,container,cmd,restart,container,cmd,client,restart,container,cmd,container,id,integer,timeout,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,timeout,null,restart,container,cmd,witht,timeout,timeout,return,restart,container,cmd
DockerProducer -> private RestartContainerCmd executeRestartContainerRequest(DockerClient client, Message message) throws DockerException;1474362454;Produces a restart container request__@param client_@param message_@return_@throws DockerException;private RestartContainerCmd executeRestartContainerRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Restart Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        RestartContainerCmd restartContainerCmd = client.restartContainerCmd(containerId)___        Integer timeout = DockerHelper.getProperty(DockerConstants.DOCKER_TIMEOUT, configuration, message, Integer.class)___        if (timeout != null) {_            restartContainerCmd.withtTimeout(timeout)__        }__        return restartContainerCmd___    };produces,a,restart,container,request,param,client,param,message,return,throws,docker,exception;private,restart,container,cmd,execute,restart,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,restart,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,restart,container,cmd,restart,container,cmd,client,restart,container,cmd,container,id,integer,timeout,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,timeout,null,restart,container,cmd,witht,timeout,timeout,return,restart,container,cmd
DockerProducer -> private RestartContainerCmd executeRestartContainerRequest(DockerClient client, Message message) throws DockerException;1531637865;Produces a restart container request__@param client_@param message_@return_@throws DockerException;private RestartContainerCmd executeRestartContainerRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Restart Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        RestartContainerCmd restartContainerCmd = client.restartContainerCmd(containerId)___        Integer timeout = DockerHelper.getProperty(DockerConstants.DOCKER_TIMEOUT, configuration, message, Integer.class)___        if (timeout != null) {_            restartContainerCmd.withtTimeout(timeout)__        }__        return restartContainerCmd___    };produces,a,restart,container,request,param,client,param,message,return,throws,docker,exception;private,restart,container,cmd,execute,restart,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,restart,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,restart,container,cmd,restart,container,cmd,client,restart,container,cmd,container,id,integer,timeout,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,timeout,null,restart,container,cmd,witht,timeout,timeout,return,restart,container,cmd
DockerProducer -> private RestartContainerCmd executeRestartContainerRequest(DockerClient client, Message message) throws DockerException;1540108163;Produces a restart container request__@param client_@param message_@return_@throws DockerException;private RestartContainerCmd executeRestartContainerRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Restart Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        RestartContainerCmd restartContainerCmd = client.restartContainerCmd(containerId)___        Integer timeout = DockerHelper.getProperty(DockerConstants.DOCKER_TIMEOUT, configuration, message, Integer.class)___        if (timeout != null) {_            restartContainerCmd.withtTimeout(timeout)__        }__        return restartContainerCmd___    };produces,a,restart,container,request,param,client,param,message,return,throws,docker,exception;private,restart,container,cmd,execute,restart,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,restart,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,restart,container,cmd,restart,container,cmd,client,restart,container,cmd,container,id,integer,timeout,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,timeout,null,restart,container,cmd,witht,timeout,timeout,return,restart,container,cmd
DockerProducer -> private StartContainerCmd executeStartContainerRequest(DockerClient client, Message message) throws DockerException;1415211488;Produce a start container request__@param client_@param message_@return_@throws DockerException;private StartContainerCmd executeStartContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Start Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        _        StartContainerCmd startContainerCmd = client.startContainerCmd(containerId)__        _        Bind[] binds = DockerHelper.getArrayProperty(DockerConstants.DOCKER_BINDS, message, Bind.class)___        if (binds != null) {_            startContainerCmd.withBinds(binds)__        }_        _        Link[] links = DockerHelper.getArrayProperty(DockerConstants.DOCKER_LINKS, message, Link.class)___        if (links != null) {_            startContainerCmd.withLinks(links)__        }_        _        LxcConf[] lxcConf = DockerHelper.getArrayProperty(DockerConstants.DOCKER_LXC_CONF, message, LxcConf.class)___        if (lxcConf != null) {_            startContainerCmd.withLxcConf(lxcConf)__        }_        _        Ports ports = DockerHelper.getProperty(DockerConstants.DOCKER_PORT_BINDINGS, configuration, message, Ports.class)___        if (ports != null) {_            startContainerCmd.withPortBindings(ports)__        }_        _        Boolean privileged = DockerHelper.getProperty(DockerConstants.DOCKER_PRIVILEGED, configuration, message, Boolean.class)___        if (privileged != null && privileged) {_            startContainerCmd.withPrivileged(privileged)__        }_        _        Boolean publishAllPorts = DockerHelper.getProperty(DockerConstants.DOCKER_PUBLISH_ALL_PORTS, configuration, message, Boolean.class)___        if (publishAllPorts != null && publishAllPorts) {_            startContainerCmd.withPublishAllPorts(publishAllPorts)__        }_        _        String[] dns = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_DNS, message)___        if (dns != null) {_            startContainerCmd.withDns(dns)__        }_        _        String[] dnsSearch = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_DNS_SEARCH, message)___        if (dnsSearch != null) {_            startContainerCmd.withDnsSearch(dnsSearch)__        }_        _        String volumesFrom = DockerHelper.getProperty(DockerConstants.DOCKER_VOLUMES_FROM, configuration, message, String.class)___        if (volumesFrom != null) {_            startContainerCmd.withVolumesFrom(volumesFrom)__        }__        String networkMode = DockerHelper.getProperty(DockerConstants.DOCKER_NETWORK_MODE, configuration, message, String.class)___        if (networkMode != null) {_            startContainerCmd.withNetworkMode(networkMode)__        }__        Device[] devices = DockerHelper.getArrayProperty(DockerConstants.DOCKER_DEVICES, message, Device.class)___        if (devices != null) {_            startContainerCmd.withDevices(devices)__        }_        _        RestartPolicy restartPolicy = DockerHelper.getProperty(DockerConstants.DOCKER_RESTART_POLICY, configuration, message, RestartPolicy.class)___        if (restartPolicy != null) {_            startContainerCmd.withRestartPolicy(restartPolicy)__        }_        _        String[] capAdd = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CAP_ADD, message)___        if (capAdd != null) {_            startContainerCmd.withCapAdd(capAdd)__        }_        _        String[] capDrop = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CAP_DROP, message)___        if (capDrop != null) {_            startContainerCmd.withCapDrop(capDrop)__        }_        _        return startContainerCmd___    };produce,a,start,container,request,param,client,param,message,return,throws,docker,exception;private,start,container,cmd,execute,start,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,start,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,start,container,cmd,start,container,cmd,client,start,container,cmd,container,id,bind,binds,docker,helper,get,array,property,docker,constants,message,bind,class,if,binds,null,start,container,cmd,with,binds,binds,link,links,docker,helper,get,array,property,docker,constants,message,link,class,if,links,null,start,container,cmd,with,links,links,lxc,conf,lxc,conf,docker,helper,get,array,property,docker,constants,message,lxc,conf,class,if,lxc,conf,null,start,container,cmd,with,lxc,conf,lxc,conf,ports,ports,docker,helper,get,property,docker,constants,configuration,message,ports,class,if,ports,null,start,container,cmd,with,port,bindings,ports,boolean,privileged,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,privileged,null,privileged,start,container,cmd,with,privileged,privileged,boolean,publish,all,ports,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,publish,all,ports,null,publish,all,ports,start,container,cmd,with,publish,all,ports,publish,all,ports,string,dns,docker,helper,parse,delimited,string,header,docker,constants,message,if,dns,null,start,container,cmd,with,dns,dns,string,dns,search,docker,helper,parse,delimited,string,header,docker,constants,message,if,dns,search,null,start,container,cmd,with,dns,search,dns,search,string,volumes,from,docker,helper,get,property,docker,constants,configuration,message,string,class,if,volumes,from,null,start,container,cmd,with,volumes,from,volumes,from,string,network,mode,docker,helper,get,property,docker,constants,configuration,message,string,class,if,network,mode,null,start,container,cmd,with,network,mode,network,mode,device,devices,docker,helper,get,array,property,docker,constants,message,device,class,if,devices,null,start,container,cmd,with,devices,devices,restart,policy,restart,policy,docker,helper,get,property,docker,constants,configuration,message,restart,policy,class,if,restart,policy,null,start,container,cmd,with,restart,policy,restart,policy,string,cap,add,docker,helper,parse,delimited,string,header,docker,constants,message,if,cap,add,null,start,container,cmd,with,cap,add,cap,add,string,cap,drop,docker,helper,parse,delimited,string,header,docker,constants,message,if,cap,drop,null,start,container,cmd,with,cap,drop,cap,drop,return,start,container,cmd
DockerProducer -> private StartContainerCmd executeStartContainerRequest(DockerClient client, Message message) throws DockerException;1415517409;Produce a start container request__@param client_@param message_@return_@throws DockerException;private StartContainerCmd executeStartContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Start Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        _        StartContainerCmd startContainerCmd = client.startContainerCmd(containerId)__        _        Bind[] binds = DockerHelper.getArrayProperty(DockerConstants.DOCKER_BINDS, message, Bind.class)___        if (binds != null) {_            startContainerCmd.withBinds(binds)__        }_        _        Link[] links = DockerHelper.getArrayProperty(DockerConstants.DOCKER_LINKS, message, Link.class)___        if (links != null) {_            startContainerCmd.withLinks(links)__        }_        _        LxcConf[] lxcConf = DockerHelper.getArrayProperty(DockerConstants.DOCKER_LXC_CONF, message, LxcConf.class)___        if (lxcConf != null) {_            startContainerCmd.withLxcConf(lxcConf)__        }_        _        Ports ports = DockerHelper.getProperty(DockerConstants.DOCKER_PORT_BINDINGS, configuration, message, Ports.class)___        if (ports != null) {_            startContainerCmd.withPortBindings(ports)__        }_        _        Boolean privileged = DockerHelper.getProperty(DockerConstants.DOCKER_PRIVILEGED, configuration, message, Boolean.class)___        if (privileged != null && privileged) {_            startContainerCmd.withPrivileged(privileged)__        }_        _        Boolean publishAllPorts = DockerHelper.getProperty(DockerConstants.DOCKER_PUBLISH_ALL_PORTS, configuration, message, Boolean.class)___        if (publishAllPorts != null && publishAllPorts) {_            startContainerCmd.withPublishAllPorts(publishAllPorts)__        }_        _        String[] dns = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_DNS, message)___        if (dns != null) {_            startContainerCmd.withDns(dns)__        }_        _        String[] dnsSearch = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_DNS_SEARCH, message)___        if (dnsSearch != null) {_            startContainerCmd.withDnsSearch(dnsSearch)__        }_        _        String volumesFrom = DockerHelper.getProperty(DockerConstants.DOCKER_VOLUMES_FROM, configuration, message, String.class)___        if (volumesFrom != null) {_            startContainerCmd.withVolumesFrom(volumesFrom)__        }__        String networkMode = DockerHelper.getProperty(DockerConstants.DOCKER_NETWORK_MODE, configuration, message, String.class)___        if (networkMode != null) {_            startContainerCmd.withNetworkMode(networkMode)__        }__        Device[] devices = DockerHelper.getArrayProperty(DockerConstants.DOCKER_DEVICES, message, Device.class)___        if (devices != null) {_            startContainerCmd.withDevices(devices)__        }_        _        RestartPolicy restartPolicy = DockerHelper.getProperty(DockerConstants.DOCKER_RESTART_POLICY, configuration, message, RestartPolicy.class)___        if (restartPolicy != null) {_            startContainerCmd.withRestartPolicy(restartPolicy)__        }_        _        String[] capAdd = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CAP_ADD, message)___        if (capAdd != null) {_            startContainerCmd.withCapAdd(capAdd)__        }_        _        String[] capDrop = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CAP_DROP, message)___        if (capDrop != null) {_            startContainerCmd.withCapDrop(capDrop)__        }_        _        return startContainerCmd___    };produce,a,start,container,request,param,client,param,message,return,throws,docker,exception;private,start,container,cmd,execute,start,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,start,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,start,container,cmd,start,container,cmd,client,start,container,cmd,container,id,bind,binds,docker,helper,get,array,property,docker,constants,message,bind,class,if,binds,null,start,container,cmd,with,binds,binds,link,links,docker,helper,get,array,property,docker,constants,message,link,class,if,links,null,start,container,cmd,with,links,links,lxc,conf,lxc,conf,docker,helper,get,array,property,docker,constants,message,lxc,conf,class,if,lxc,conf,null,start,container,cmd,with,lxc,conf,lxc,conf,ports,ports,docker,helper,get,property,docker,constants,configuration,message,ports,class,if,ports,null,start,container,cmd,with,port,bindings,ports,boolean,privileged,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,privileged,null,privileged,start,container,cmd,with,privileged,privileged,boolean,publish,all,ports,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,publish,all,ports,null,publish,all,ports,start,container,cmd,with,publish,all,ports,publish,all,ports,string,dns,docker,helper,parse,delimited,string,header,docker,constants,message,if,dns,null,start,container,cmd,with,dns,dns,string,dns,search,docker,helper,parse,delimited,string,header,docker,constants,message,if,dns,search,null,start,container,cmd,with,dns,search,dns,search,string,volumes,from,docker,helper,get,property,docker,constants,configuration,message,string,class,if,volumes,from,null,start,container,cmd,with,volumes,from,volumes,from,string,network,mode,docker,helper,get,property,docker,constants,configuration,message,string,class,if,network,mode,null,start,container,cmd,with,network,mode,network,mode,device,devices,docker,helper,get,array,property,docker,constants,message,device,class,if,devices,null,start,container,cmd,with,devices,devices,restart,policy,restart,policy,docker,helper,get,property,docker,constants,configuration,message,restart,policy,class,if,restart,policy,null,start,container,cmd,with,restart,policy,restart,policy,string,cap,add,docker,helper,parse,delimited,string,header,docker,constants,message,if,cap,add,null,start,container,cmd,with,cap,add,cap,add,string,cap,drop,docker,helper,parse,delimited,string,header,docker,constants,message,if,cap,drop,null,start,container,cmd,with,cap,drop,cap,drop,return,start,container,cmd
DockerProducer -> private StartContainerCmd executeStartContainerRequest(DockerClient client, Message message) throws DockerException;1423234542;Produce a start container request__@param client_@param message_@return_@throws DockerException;private StartContainerCmd executeStartContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Start Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        _        StartContainerCmd startContainerCmd = client.startContainerCmd(containerId)__        _        Bind[] binds = DockerHelper.getArrayProperty(DockerConstants.DOCKER_BINDS, message, Bind.class)___        if (binds != null) {_            startContainerCmd.withBinds(binds)__        }_        _        Link[] links = DockerHelper.getArrayProperty(DockerConstants.DOCKER_LINKS, message, Link.class)___        if (links != null) {_            startContainerCmd.withLinks(links)__        }_        _        LxcConf[] lxcConf = DockerHelper.getArrayProperty(DockerConstants.DOCKER_LXC_CONF, message, LxcConf.class)___        if (lxcConf != null) {_            startContainerCmd.withLxcConf(lxcConf)__        }_        _        Ports ports = DockerHelper.getProperty(DockerConstants.DOCKER_PORT_BINDINGS, configuration, message, Ports.class)___        if (ports != null) {_            startContainerCmd.withPortBindings(ports)__        }_        _        Boolean privileged = DockerHelper.getProperty(DockerConstants.DOCKER_PRIVILEGED, configuration, message, Boolean.class)___        if (privileged != null && privileged) {_            startContainerCmd.withPrivileged(privileged)__        }_        _        Boolean publishAllPorts = DockerHelper.getProperty(DockerConstants.DOCKER_PUBLISH_ALL_PORTS, configuration, message, Boolean.class)___        if (publishAllPorts != null && publishAllPorts) {_            startContainerCmd.withPublishAllPorts(publishAllPorts)__        }_        _        String[] dns = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_DNS, message)___        if (dns != null) {_            startContainerCmd.withDns(dns)__        }_        _        String[] dnsSearch = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_DNS_SEARCH, message)___        if (dnsSearch != null) {_            startContainerCmd.withDnsSearch(dnsSearch)__        }_        _        String volumesFrom = DockerHelper.getProperty(DockerConstants.DOCKER_VOLUMES_FROM, configuration, message, String.class)___        if (volumesFrom != null) {_            startContainerCmd.withVolumesFrom(volumesFrom)__        }__        String networkMode = DockerHelper.getProperty(DockerConstants.DOCKER_NETWORK_MODE, configuration, message, String.class)___        if (networkMode != null) {_            startContainerCmd.withNetworkMode(networkMode)__        }__        Device[] devices = DockerHelper.getArrayProperty(DockerConstants.DOCKER_DEVICES, message, Device.class)___        if (devices != null) {_            startContainerCmd.withDevices(devices)__        }_        _        RestartPolicy restartPolicy = DockerHelper.getProperty(DockerConstants.DOCKER_RESTART_POLICY, configuration, message, RestartPolicy.class)___        if (restartPolicy != null) {_            startContainerCmd.withRestartPolicy(restartPolicy)__        }_        _        String[] capAdd = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CAP_ADD, message)__        if (capAdd != null) {_            List<Capability> caps = new ArrayList<Capability>()__            for (String s : capAdd) {_                Capability cap = Capability.valueOf(s)__                caps.add(cap)__            }_            Capability[] array = caps.toArray(new Capability[caps.size()])__            startContainerCmd.withCapAdd(array)__        }_        _        String[] capDrop = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CAP_DROP, message)__        if (capDrop != null) {_            if (capAdd != null) {_                List<Capability> caps = new ArrayList<Capability>()__                for (String s : capDrop) {_                    Capability cap = Capability.valueOf(s)__                    caps.add(cap)__                }_                Capability[] array = caps.toArray(new Capability[caps.size()])__                startContainerCmd.withCapDrop(array)__            }_        }_        _        return startContainerCmd___    };produce,a,start,container,request,param,client,param,message,return,throws,docker,exception;private,start,container,cmd,execute,start,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,start,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,start,container,cmd,start,container,cmd,client,start,container,cmd,container,id,bind,binds,docker,helper,get,array,property,docker,constants,message,bind,class,if,binds,null,start,container,cmd,with,binds,binds,link,links,docker,helper,get,array,property,docker,constants,message,link,class,if,links,null,start,container,cmd,with,links,links,lxc,conf,lxc,conf,docker,helper,get,array,property,docker,constants,message,lxc,conf,class,if,lxc,conf,null,start,container,cmd,with,lxc,conf,lxc,conf,ports,ports,docker,helper,get,property,docker,constants,configuration,message,ports,class,if,ports,null,start,container,cmd,with,port,bindings,ports,boolean,privileged,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,privileged,null,privileged,start,container,cmd,with,privileged,privileged,boolean,publish,all,ports,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,publish,all,ports,null,publish,all,ports,start,container,cmd,with,publish,all,ports,publish,all,ports,string,dns,docker,helper,parse,delimited,string,header,docker,constants,message,if,dns,null,start,container,cmd,with,dns,dns,string,dns,search,docker,helper,parse,delimited,string,header,docker,constants,message,if,dns,search,null,start,container,cmd,with,dns,search,dns,search,string,volumes,from,docker,helper,get,property,docker,constants,configuration,message,string,class,if,volumes,from,null,start,container,cmd,with,volumes,from,volumes,from,string,network,mode,docker,helper,get,property,docker,constants,configuration,message,string,class,if,network,mode,null,start,container,cmd,with,network,mode,network,mode,device,devices,docker,helper,get,array,property,docker,constants,message,device,class,if,devices,null,start,container,cmd,with,devices,devices,restart,policy,restart,policy,docker,helper,get,property,docker,constants,configuration,message,restart,policy,class,if,restart,policy,null,start,container,cmd,with,restart,policy,restart,policy,string,cap,add,docker,helper,parse,delimited,string,header,docker,constants,message,if,cap,add,null,list,capability,caps,new,array,list,capability,for,string,s,cap,add,capability,cap,capability,value,of,s,caps,add,cap,capability,array,caps,to,array,new,capability,caps,size,start,container,cmd,with,cap,add,array,string,cap,drop,docker,helper,parse,delimited,string,header,docker,constants,message,if,cap,drop,null,if,cap,add,null,list,capability,caps,new,array,list,capability,for,string,s,cap,drop,capability,cap,capability,value,of,s,caps,add,cap,capability,array,caps,to,array,new,capability,caps,size,start,container,cmd,with,cap,drop,array,return,start,container,cmd
DockerProducer -> private StopContainerCmd executeStopContainerRequest(DockerClient client, Message message) throws DockerException;1415211488;Produces a stop container request__@param client_@param message_@return_@throws DockerException;private StopContainerCmd executeStopContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Kill Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        _        StopContainerCmd stopContainerCmd = client.stopContainerCmd(containerId)___        Integer timeout = DockerHelper.getProperty(DockerConstants.DOCKER_TIMEOUT, configuration, message, Integer.class)__        _        if (timeout != null) {_            stopContainerCmd.withTimeout(timeout)__        }_             _        return stopContainerCmd___    };produces,a,stop,container,request,param,client,param,message,return,throws,docker,exception;private,stop,container,cmd,execute,stop,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,kill,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,stop,container,cmd,stop,container,cmd,client,stop,container,cmd,container,id,integer,timeout,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,timeout,null,stop,container,cmd,with,timeout,timeout,return,stop,container,cmd
DockerProducer -> private StopContainerCmd executeStopContainerRequest(DockerClient client, Message message) throws DockerException;1415517409;Produces a stop container request__@param client_@param message_@return_@throws DockerException;private StopContainerCmd executeStopContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Kill Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        _        StopContainerCmd stopContainerCmd = client.stopContainerCmd(containerId)___        Integer timeout = DockerHelper.getProperty(DockerConstants.DOCKER_TIMEOUT, configuration, message, Integer.class)__        _        if (timeout != null) {_            stopContainerCmd.withTimeout(timeout)__        }_             _        return stopContainerCmd___    };produces,a,stop,container,request,param,client,param,message,return,throws,docker,exception;private,stop,container,cmd,execute,stop,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,kill,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,stop,container,cmd,stop,container,cmd,client,stop,container,cmd,container,id,integer,timeout,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,timeout,null,stop,container,cmd,with,timeout,timeout,return,stop,container,cmd
DockerProducer -> private StopContainerCmd executeStopContainerRequest(DockerClient client, Message message) throws DockerException;1423234542;Produces a stop container request__@param client_@param message_@return_@throws DockerException;private StopContainerCmd executeStopContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Kill Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        _        StopContainerCmd stopContainerCmd = client.stopContainerCmd(containerId)___        Integer timeout = DockerHelper.getProperty(DockerConstants.DOCKER_TIMEOUT, configuration, message, Integer.class)__        _        if (timeout != null) {_            stopContainerCmd.withTimeout(timeout)__        }_             _        return stopContainerCmd___    };produces,a,stop,container,request,param,client,param,message,return,throws,docker,exception;private,stop,container,cmd,execute,stop,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,kill,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,stop,container,cmd,stop,container,cmd,client,stop,container,cmd,container,id,integer,timeout,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,timeout,null,stop,container,cmd,with,timeout,timeout,return,stop,container,cmd
DockerProducer -> private PushImageCmd executePushImageRequest(DockerClient client, Message message);1424675020;Produces a push image request__@param client_@param message_@return;private PushImageCmd executePushImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Push Image Request")___        String name = DockerHelper.getProperty(DockerConstants.DOCKER_NAME, configuration, message, String.class)___        ObjectHelper.notNull(name, "Image name must be specified")___        PushImageCmd pushImageCmd = client.pushImageCmd(name)___        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            pushImageCmd.withTag(tag)__        }__        AuthConfig authConfig = client.authConfig()___        if (authConfig != null) {_            pushImageCmd.withAuthConfig(authConfig)__        }__        return pushImageCmd___    };produces,a,push,image,request,param,client,param,message,return;private,push,image,cmd,execute,push,image,request,docker,client,client,message,message,logger,debug,executing,docker,push,image,request,string,name,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,name,image,name,must,be,specified,push,image,cmd,push,image,cmd,client,push,image,cmd,name,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,push,image,cmd,with,tag,tag,auth,config,auth,config,client,auth,config,if,auth,config,null,push,image,cmd,with,auth,config,auth,config,return,push,image,cmd
DockerProducer -> private PushImageCmd executePushImageRequest(DockerClient client, Message message);1424675476;Produces a push image request__@param client_@param message_@return;private PushImageCmd executePushImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Push Image Request")___        String name = DockerHelper.getProperty(DockerConstants.DOCKER_NAME, configuration, message, String.class)___        ObjectHelper.notNull(name, "Image name must be specified")___        PushImageCmd pushImageCmd = client.pushImageCmd(name)___        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            pushImageCmd.withTag(tag)__        }__        AuthConfig authConfig = client.authConfig()___        if (authConfig != null) {_            pushImageCmd.withAuthConfig(authConfig)__        }__        return pushImageCmd___    };produces,a,push,image,request,param,client,param,message,return;private,push,image,cmd,execute,push,image,request,docker,client,client,message,message,logger,debug,executing,docker,push,image,request,string,name,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,name,image,name,must,be,specified,push,image,cmd,push,image,cmd,client,push,image,cmd,name,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,push,image,cmd,with,tag,tag,auth,config,auth,config,client,auth,config,if,auth,config,null,push,image,cmd,with,auth,config,auth,config,return,push,image,cmd
DockerProducer -> private PushImageCmd executePushImageRequest(DockerClient client, Message message);1424877876;Produces a push image request__@param client_@param message_@return;private PushImageCmd executePushImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Push Image Request")___        String name = DockerHelper.getProperty(DockerConstants.DOCKER_NAME, configuration, message, String.class)___        ObjectHelper.notNull(name, "Image name must be specified")___        PushImageCmd pushImageCmd = client.pushImageCmd(name)___        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            pushImageCmd.withTag(tag)__        }__        AuthConfig authConfig = client.authConfig()___        if (authConfig != null) {_            pushImageCmd.withAuthConfig(authConfig)__        }__        return pushImageCmd___    };produces,a,push,image,request,param,client,param,message,return;private,push,image,cmd,execute,push,image,request,docker,client,client,message,message,logger,debug,executing,docker,push,image,request,string,name,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,name,image,name,must,be,specified,push,image,cmd,push,image,cmd,client,push,image,cmd,name,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,push,image,cmd,with,tag,tag,auth,config,auth,config,client,auth,config,if,auth,config,null,push,image,cmd,with,auth,config,auth,config,return,push,image,cmd
DockerProducer -> private PushImageCmd executePushImageRequest(DockerClient client, Message message);1429199966;Produces a push image request__@param client_@param message_@return;private PushImageCmd executePushImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Push Image Request")___        String name = DockerHelper.getProperty(DockerConstants.DOCKER_NAME, configuration, message, String.class)___        ObjectHelper.notNull(name, "Image name must be specified")___        PushImageCmd pushImageCmd = client.pushImageCmd(name)___        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            pushImageCmd.withTag(tag)__        }__        AuthConfig authConfig = client.authConfig()___        if (authConfig != null) {_            pushImageCmd.withAuthConfig(authConfig)__        }__        return pushImageCmd___    };produces,a,push,image,request,param,client,param,message,return;private,push,image,cmd,execute,push,image,request,docker,client,client,message,message,logger,debug,executing,docker,push,image,request,string,name,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,name,image,name,must,be,specified,push,image,cmd,push,image,cmd,client,push,image,cmd,name,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,push,image,cmd,with,tag,tag,auth,config,auth,config,client,auth,config,if,auth,config,null,push,image,cmd,with,auth,config,auth,config,return,push,image,cmd
DockerProducer -> private PushImageCmd executePushImageRequest(DockerClient client, Message message);1433489320;Produces a push image request__@param client_@param message_@return;private PushImageCmd executePushImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Push Image Request")___        String name = DockerHelper.getProperty(DockerConstants.DOCKER_NAME, configuration, message, String.class)___        ObjectHelper.notNull(name, "Image name must be specified")___        PushImageCmd pushImageCmd = client.pushImageCmd(name)___        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            pushImageCmd.withTag(tag)__        }__        AuthConfig authConfig = client.authConfig()___        if (authConfig != null) {_            pushImageCmd.withAuthConfig(authConfig)__        }__        return pushImageCmd___    };produces,a,push,image,request,param,client,param,message,return;private,push,image,cmd,execute,push,image,request,docker,client,client,message,message,logger,debug,executing,docker,push,image,request,string,name,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,name,image,name,must,be,specified,push,image,cmd,push,image,cmd,client,push,image,cmd,name,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,push,image,cmd,with,tag,tag,auth,config,auth,config,client,auth,config,if,auth,config,null,push,image,cmd,with,auth,config,auth,config,return,push,image,cmd
DockerProducer -> private PushImageCmd executePushImageRequest(DockerClient client, Message message);1440239526;Produces a push image request__@param client_@param message_@return;private PushImageCmd executePushImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Push Image Request")___        String name = DockerHelper.getProperty(DockerConstants.DOCKER_NAME, configuration, message, String.class)___        ObjectHelper.notNull(name, "Image name must be specified")___        PushImageCmd pushImageCmd = client.pushImageCmd(name)___        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            pushImageCmd.withTag(tag)__        }__        AuthConfig authConfig = client.authConfig()___        if (authConfig != null) {_            pushImageCmd.withAuthConfig(authConfig)__        }__        return pushImageCmd___    };produces,a,push,image,request,param,client,param,message,return;private,push,image,cmd,execute,push,image,request,docker,client,client,message,message,logger,debug,executing,docker,push,image,request,string,name,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,name,image,name,must,be,specified,push,image,cmd,push,image,cmd,client,push,image,cmd,name,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,push,image,cmd,with,tag,tag,auth,config,auth,config,client,auth,config,if,auth,config,null,push,image,cmd,with,auth,config,auth,config,return,push,image,cmd
DockerProducer -> private CopyFileFromContainerCmd executeCopyFileContainerRequest(DockerClient client, Message message);1424675020;Produces a copy file/folder from container request__@param client_@param message_@return;private CopyFileFromContainerCmd executeCopyFileContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Copy File/Folder Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        String resource = DockerHelper.getProperty(DockerConstants.DOCKER_RESOURCE, configuration, message, String.class)___        if (containerId == null || resource == null) {_            throw new IllegalArgumentException("Container ID and Resource must be specified")__        }__        CopyFileFromContainerCmd copyFileContainerCmd = client.copyFileFromContainerCmd(containerId, resource)___        String hostPath = DockerHelper.getProperty(DockerConstants.DOCKER_HOST_PATH, configuration, message, String.class)___        if (hostPath != null) {_            copyFileContainerCmd.withHostPath(hostPath)__        }__        return copyFileContainerCmd___    };produces,a,copy,file,folder,from,container,request,param,client,param,message,return;private,copy,file,from,container,cmd,execute,copy,file,container,request,docker,client,client,message,message,logger,debug,executing,docker,copy,file,folder,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,string,resource,docker,helper,get,property,docker,constants,configuration,message,string,class,if,container,id,null,resource,null,throw,new,illegal,argument,exception,container,id,and,resource,must,be,specified,copy,file,from,container,cmd,copy,file,container,cmd,client,copy,file,from,container,cmd,container,id,resource,string,host,path,docker,helper,get,property,docker,constants,configuration,message,string,class,if,host,path,null,copy,file,container,cmd,with,host,path,host,path,return,copy,file,container,cmd
DockerProducer -> private CopyFileFromContainerCmd executeCopyFileContainerRequest(DockerClient client, Message message);1424675476;Produces a copy file/folder from container request__@param client_@param message_@return;private CopyFileFromContainerCmd executeCopyFileContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Copy File/Folder Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        String resource = DockerHelper.getProperty(DockerConstants.DOCKER_RESOURCE, configuration, message, String.class)___        if (containerId == null || resource == null) {_            throw new IllegalArgumentException("Container ID and Resource must be specified")__        }__        CopyFileFromContainerCmd copyFileContainerCmd = client.copyFileFromContainerCmd(containerId, resource)___        String hostPath = DockerHelper.getProperty(DockerConstants.DOCKER_HOST_PATH, configuration, message, String.class)___        if (hostPath != null) {_            copyFileContainerCmd.withHostPath(hostPath)__        }__        return copyFileContainerCmd___    };produces,a,copy,file,folder,from,container,request,param,client,param,message,return;private,copy,file,from,container,cmd,execute,copy,file,container,request,docker,client,client,message,message,logger,debug,executing,docker,copy,file,folder,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,string,resource,docker,helper,get,property,docker,constants,configuration,message,string,class,if,container,id,null,resource,null,throw,new,illegal,argument,exception,container,id,and,resource,must,be,specified,copy,file,from,container,cmd,copy,file,container,cmd,client,copy,file,from,container,cmd,container,id,resource,string,host,path,docker,helper,get,property,docker,constants,configuration,message,string,class,if,host,path,null,copy,file,container,cmd,with,host,path,host,path,return,copy,file,container,cmd
DockerProducer -> private CopyFileFromContainerCmd executeCopyFileContainerRequest(DockerClient client, Message message);1424877876;Produces a copy file/folder from container request__@param client_@param message_@return;private CopyFileFromContainerCmd executeCopyFileContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Copy File/Folder Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        String resource = DockerHelper.getProperty(DockerConstants.DOCKER_RESOURCE, configuration, message, String.class)___        if (containerId == null || resource == null) {_            throw new IllegalArgumentException("Container ID and Resource must be specified")__        }__        CopyFileFromContainerCmd copyFileContainerCmd = client.copyFileFromContainerCmd(containerId, resource)___        String hostPath = DockerHelper.getProperty(DockerConstants.DOCKER_HOST_PATH, configuration, message, String.class)___        if (hostPath != null) {_            copyFileContainerCmd.withHostPath(hostPath)__        }__        return copyFileContainerCmd___    };produces,a,copy,file,folder,from,container,request,param,client,param,message,return;private,copy,file,from,container,cmd,execute,copy,file,container,request,docker,client,client,message,message,logger,debug,executing,docker,copy,file,folder,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,string,resource,docker,helper,get,property,docker,constants,configuration,message,string,class,if,container,id,null,resource,null,throw,new,illegal,argument,exception,container,id,and,resource,must,be,specified,copy,file,from,container,cmd,copy,file,container,cmd,client,copy,file,from,container,cmd,container,id,resource,string,host,path,docker,helper,get,property,docker,constants,configuration,message,string,class,if,host,path,null,copy,file,container,cmd,with,host,path,host,path,return,copy,file,container,cmd
DockerProducer -> private CopyFileFromContainerCmd executeCopyFileContainerRequest(DockerClient client, Message message);1429199966;Produces a copy file/folder from container request__@param client_@param message_@return;private CopyFileFromContainerCmd executeCopyFileContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Copy File/Folder Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        String resource = DockerHelper.getProperty(DockerConstants.DOCKER_RESOURCE, configuration, message, String.class)___        if (containerId == null || resource == null) {_            throw new IllegalArgumentException("Container ID and Resource must be specified")__        }__        CopyFileFromContainerCmd copyFileContainerCmd = client.copyFileFromContainerCmd(containerId, resource)___        String hostPath = DockerHelper.getProperty(DockerConstants.DOCKER_HOST_PATH, configuration, message, String.class)___        if (hostPath != null) {_            copyFileContainerCmd.withHostPath(hostPath)__        }__        return copyFileContainerCmd___    };produces,a,copy,file,folder,from,container,request,param,client,param,message,return;private,copy,file,from,container,cmd,execute,copy,file,container,request,docker,client,client,message,message,logger,debug,executing,docker,copy,file,folder,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,string,resource,docker,helper,get,property,docker,constants,configuration,message,string,class,if,container,id,null,resource,null,throw,new,illegal,argument,exception,container,id,and,resource,must,be,specified,copy,file,from,container,cmd,copy,file,container,cmd,client,copy,file,from,container,cmd,container,id,resource,string,host,path,docker,helper,get,property,docker,constants,configuration,message,string,class,if,host,path,null,copy,file,container,cmd,with,host,path,host,path,return,copy,file,container,cmd
DockerProducer -> private CopyFileFromContainerCmd executeCopyFileContainerRequest(DockerClient client, Message message);1433489320;Produces a copy file/folder from container request__@param client_@param message_@return;private CopyFileFromContainerCmd executeCopyFileContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Copy File/Folder Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        String resource = DockerHelper.getProperty(DockerConstants.DOCKER_RESOURCE, configuration, message, String.class)___        if (containerId == null || resource == null) {_            throw new IllegalArgumentException("Container ID and Resource must be specified")__        }__        CopyFileFromContainerCmd copyFileContainerCmd = client.copyFileFromContainerCmd(containerId, resource)___        String hostPath = DockerHelper.getProperty(DockerConstants.DOCKER_HOST_PATH, configuration, message, String.class)___        if (hostPath != null) {_            copyFileContainerCmd.withHostPath(hostPath)__        }__        return copyFileContainerCmd___    };produces,a,copy,file,folder,from,container,request,param,client,param,message,return;private,copy,file,from,container,cmd,execute,copy,file,container,request,docker,client,client,message,message,logger,debug,executing,docker,copy,file,folder,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,string,resource,docker,helper,get,property,docker,constants,configuration,message,string,class,if,container,id,null,resource,null,throw,new,illegal,argument,exception,container,id,and,resource,must,be,specified,copy,file,from,container,cmd,copy,file,container,cmd,client,copy,file,from,container,cmd,container,id,resource,string,host,path,docker,helper,get,property,docker,constants,configuration,message,string,class,if,host,path,null,copy,file,container,cmd,with,host,path,host,path,return,copy,file,container,cmd
DockerProducer -> private CopyFileFromContainerCmd executeCopyFileContainerRequest(DockerClient client, Message message);1440239526;Produces a copy file/folder from container request__@param client_@param message_@return;private CopyFileFromContainerCmd executeCopyFileContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Copy File/Folder Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        String resource = DockerHelper.getProperty(DockerConstants.DOCKER_RESOURCE, configuration, message, String.class)___        if (containerId == null || resource == null) {_            throw new IllegalArgumentException("Container ID and Resource must be specified")__        }__        CopyFileFromContainerCmd copyFileContainerCmd = client.copyFileFromContainerCmd(containerId, resource)___        String hostPath = DockerHelper.getProperty(DockerConstants.DOCKER_HOST_PATH, configuration, message, String.class)___        if (hostPath != null) {_            copyFileContainerCmd.withHostPath(hostPath)__        }__        return copyFileContainerCmd___    };produces,a,copy,file,folder,from,container,request,param,client,param,message,return;private,copy,file,from,container,cmd,execute,copy,file,container,request,docker,client,client,message,message,logger,debug,executing,docker,copy,file,folder,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,string,resource,docker,helper,get,property,docker,constants,configuration,message,string,class,if,container,id,null,resource,null,throw,new,illegal,argument,exception,container,id,and,resource,must,be,specified,copy,file,from,container,cmd,copy,file,container,cmd,client,copy,file,from,container,cmd,container,id,resource,string,host,path,docker,helper,get,property,docker,constants,configuration,message,string,class,if,host,path,null,copy,file,container,cmd,with,host,path,host,path,return,copy,file,container,cmd
DockerProducer -> private CopyFileFromContainerCmd executeCopyFileContainerRequest(DockerClient client, Message message);1474362454;Produces a copy file/folder from container request__@param client_@param message_@return;private CopyFileFromContainerCmd executeCopyFileContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Copy File/Folder Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        String resource = DockerHelper.getProperty(DockerConstants.DOCKER_RESOURCE, configuration, message, String.class)___        if (containerId == null || resource == null) {_            throw new IllegalArgumentException("Container ID and Resource must be specified")__        }__        CopyFileFromContainerCmd copyFileContainerCmd = client.copyFileFromContainerCmd(containerId, resource)___        String hostPath = DockerHelper.getProperty(DockerConstants.DOCKER_HOST_PATH, configuration, message, String.class)___        if (hostPath != null) {_            copyFileContainerCmd.withHostPath(hostPath)__        }__        return copyFileContainerCmd___    };produces,a,copy,file,folder,from,container,request,param,client,param,message,return;private,copy,file,from,container,cmd,execute,copy,file,container,request,docker,client,client,message,message,logger,debug,executing,docker,copy,file,folder,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,string,resource,docker,helper,get,property,docker,constants,configuration,message,string,class,if,container,id,null,resource,null,throw,new,illegal,argument,exception,container,id,and,resource,must,be,specified,copy,file,from,container,cmd,copy,file,container,cmd,client,copy,file,from,container,cmd,container,id,resource,string,host,path,docker,helper,get,property,docker,constants,configuration,message,string,class,if,host,path,null,copy,file,container,cmd,with,host,path,host,path,return,copy,file,container,cmd
DockerProducer -> private CopyFileFromContainerCmd executeCopyFileContainerRequest(DockerClient client, Message message);1531637865;Produces a copy file/folder from container request__@param client_@param message_@return;private CopyFileFromContainerCmd executeCopyFileContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Copy File/Folder Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        String resource = DockerHelper.getProperty(DockerConstants.DOCKER_RESOURCE, configuration, message, String.class)___        if (containerId == null || resource == null) {_            throw new IllegalArgumentException("Container ID and Resource must be specified")__        }__        CopyFileFromContainerCmd copyFileContainerCmd = client.copyFileFromContainerCmd(containerId, resource)___        String hostPath = DockerHelper.getProperty(DockerConstants.DOCKER_HOST_PATH, configuration, message, String.class)___        if (hostPath != null) {_            copyFileContainerCmd.withHostPath(hostPath)__        }__        return copyFileContainerCmd___    };produces,a,copy,file,folder,from,container,request,param,client,param,message,return;private,copy,file,from,container,cmd,execute,copy,file,container,request,docker,client,client,message,message,logger,debug,executing,docker,copy,file,folder,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,string,resource,docker,helper,get,property,docker,constants,configuration,message,string,class,if,container,id,null,resource,null,throw,new,illegal,argument,exception,container,id,and,resource,must,be,specified,copy,file,from,container,cmd,copy,file,container,cmd,client,copy,file,from,container,cmd,container,id,resource,string,host,path,docker,helper,get,property,docker,constants,configuration,message,string,class,if,host,path,null,copy,file,container,cmd,with,host,path,host,path,return,copy,file,container,cmd
DockerProducer -> private CopyFileFromContainerCmd executeCopyFileContainerRequest(DockerClient client, Message message);1540108163;Produces a copy file/folder from container request__@param client_@param message_@return;private CopyFileFromContainerCmd executeCopyFileContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Copy File/Folder Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        String resource = DockerHelper.getProperty(DockerConstants.DOCKER_RESOURCE, configuration, message, String.class)___        if (containerId == null || resource == null) {_            throw new IllegalArgumentException("Container ID and Resource must be specified")__        }__        CopyFileFromContainerCmd copyFileContainerCmd = client.copyFileFromContainerCmd(containerId, resource)___        String hostPath = DockerHelper.getProperty(DockerConstants.DOCKER_HOST_PATH, configuration, message, String.class)___        if (hostPath != null) {_            copyFileContainerCmd.withHostPath(hostPath)__        }__        return copyFileContainerCmd___    };produces,a,copy,file,folder,from,container,request,param,client,param,message,return;private,copy,file,from,container,cmd,execute,copy,file,container,request,docker,client,client,message,message,logger,debug,executing,docker,copy,file,folder,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,string,resource,docker,helper,get,property,docker,constants,configuration,message,string,class,if,container,id,null,resource,null,throw,new,illegal,argument,exception,container,id,and,resource,must,be,specified,copy,file,from,container,cmd,copy,file,container,cmd,client,copy,file,from,container,cmd,container,id,resource,string,host,path,docker,helper,get,property,docker,constants,configuration,message,string,class,if,host,path,null,copy,file,container,cmd,with,host,path,host,path,return,copy,file,container,cmd
DockerProducer -> private RemoveContainerCmd executeRemoveContainerRequest(DockerClient client, Message message) throws DockerException;1415211488;Produces a remove container request__@param client_@param message_@return_@throws DockerException;private RemoveContainerCmd executeRemoveContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Remove Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        RemoveContainerCmd removeContainerCmd = client.removeContainerCmd(containerId)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)__        _        if (force != null && force) {_            removeContainerCmd.withForce(force)__        }_        _        Boolean removeVolumes = DockerHelper.getProperty(DockerConstants.DOCKER_REMOVE_VOLUMES, configuration, message, Boolean.class)__        _        if (removeVolumes != null && removeVolumes) {_            removeContainerCmd.withRemoveVolumes(removeVolumes)__        }_        _        return removeContainerCmd___    };produces,a,remove,container,request,param,client,param,message,return,throws,docker,exception;private,remove,container,cmd,execute,remove,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,remove,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,remove,container,cmd,remove,container,cmd,client,remove,container,cmd,container,id,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,force,remove,container,cmd,with,force,force,boolean,remove,volumes,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,remove,volumes,null,remove,volumes,remove,container,cmd,with,remove,volumes,remove,volumes,return,remove,container,cmd
DockerProducer -> private RemoveContainerCmd executeRemoveContainerRequest(DockerClient client, Message message) throws DockerException;1415517409;Produces a remove container request__@param client_@param message_@return_@throws DockerException;private RemoveContainerCmd executeRemoveContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Remove Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        RemoveContainerCmd removeContainerCmd = client.removeContainerCmd(containerId)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)__        _        if (force != null && force) {_            removeContainerCmd.withForce(force)__        }_        _        Boolean removeVolumes = DockerHelper.getProperty(DockerConstants.DOCKER_REMOVE_VOLUMES, configuration, message, Boolean.class)__        _        if (removeVolumes != null && removeVolumes) {_            removeContainerCmd.withRemoveVolumes(removeVolumes)__        }_        _        return removeContainerCmd___    };produces,a,remove,container,request,param,client,param,message,return,throws,docker,exception;private,remove,container,cmd,execute,remove,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,remove,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,remove,container,cmd,remove,container,cmd,client,remove,container,cmd,container,id,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,force,remove,container,cmd,with,force,force,boolean,remove,volumes,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,remove,volumes,null,remove,volumes,remove,container,cmd,with,remove,volumes,remove,volumes,return,remove,container,cmd
DockerProducer -> private RemoveContainerCmd executeRemoveContainerRequest(DockerClient client, Message message) throws DockerException;1423234542;Produces a remove container request__@param client_@param message_@return_@throws DockerException;private RemoveContainerCmd executeRemoveContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Remove Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        RemoveContainerCmd removeContainerCmd = client.removeContainerCmd(containerId)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)__        _        if (force != null && force) {_            removeContainerCmd.withForce(force)__        }_        _        Boolean removeVolumes = DockerHelper.getProperty(DockerConstants.DOCKER_REMOVE_VOLUMES, configuration, message, Boolean.class)__        _        if (removeVolumes != null && removeVolumes) {_            removeContainerCmd.withRemoveVolumes(removeVolumes)__        }_        _        return removeContainerCmd___    };produces,a,remove,container,request,param,client,param,message,return,throws,docker,exception;private,remove,container,cmd,execute,remove,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,remove,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,remove,container,cmd,remove,container,cmd,client,remove,container,cmd,container,id,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,force,remove,container,cmd,with,force,force,boolean,remove,volumes,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,remove,volumes,null,remove,volumes,remove,container,cmd,with,remove,volumes,remove,volumes,return,remove,container,cmd
DockerProducer -> private PauseContainerCmd executePauseContainerRequest(DockerClient client, Message message) throws DockerException;1415211488;Produces a pause container request__@param client_@param message_@return_@throws DockerException;private PauseContainerCmd executePauseContainerRequest(DockerClient client, Message message) throws DockerException {_            _        LOGGER.debug("Executing Docker Pause Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        _        PauseContainerCmd pauseContainerCmd = client.pauseContainerCmd(containerId)__        _        return pauseContainerCmd___    };produces,a,pause,container,request,param,client,param,message,return,throws,docker,exception;private,pause,container,cmd,execute,pause,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,pause,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,pause,container,cmd,pause,container,cmd,client,pause,container,cmd,container,id,return,pause,container,cmd
DockerProducer -> private PauseContainerCmd executePauseContainerRequest(DockerClient client, Message message) throws DockerException;1415517409;Produces a pause container request__@param client_@param message_@return_@throws DockerException;private PauseContainerCmd executePauseContainerRequest(DockerClient client, Message message) throws DockerException {_            _        LOGGER.debug("Executing Docker Pause Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        _        PauseContainerCmd pauseContainerCmd = client.pauseContainerCmd(containerId)__        _        return pauseContainerCmd___    };produces,a,pause,container,request,param,client,param,message,return,throws,docker,exception;private,pause,container,cmd,execute,pause,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,pause,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,pause,container,cmd,pause,container,cmd,client,pause,container,cmd,container,id,return,pause,container,cmd
DockerProducer -> private PauseContainerCmd executePauseContainerRequest(DockerClient client, Message message) throws DockerException;1423234542;Produces a pause container request__@param client_@param message_@return_@throws DockerException;private PauseContainerCmd executePauseContainerRequest(DockerClient client, Message message) throws DockerException {_            _        LOGGER.debug("Executing Docker Pause Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        _        PauseContainerCmd pauseContainerCmd = client.pauseContainerCmd(containerId)__        _        return pauseContainerCmd___    };produces,a,pause,container,request,param,client,param,message,return,throws,docker,exception;private,pause,container,cmd,execute,pause,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,pause,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,pause,container,cmd,pause,container,cmd,client,pause,container,cmd,container,id,return,pause,container,cmd
DockerProducer -> private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message);1424675020;Produce a log container request__@param client_@param message_@return;private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Log Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        LogContainerCmd logContainerCmd = client.logContainerCmd(containerId)__        _        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)___        if (followStream != null) {_            logContainerCmd.withFollowStream(followStream)__        }_        _        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)___        if (stdErr != null) {_            logContainerCmd.withStdErr(stdErr)__        }__        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)___        if (stdOut != null) {_            logContainerCmd.withStdOut(stdOut)__        }_        _        Integer tail = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL, configuration, message, Integer.class)___        if (tail != null) {_            logContainerCmd.withTail(tail)__        }_        _        Boolean tailAll = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL_ALL, configuration, message, Boolean.class)___        if (tailAll != null && tailAll) {_            logContainerCmd.withTailAll()__        }__        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)___        if (timestamps != null) {_            logContainerCmd.withTimestamps(timestamps)__        }__        return logContainerCmd___    };produce,a,log,container,request,param,client,param,message,return;private,log,container,cmd,execute,log,container,request,docker,client,client,message,message,logger,debug,executing,docker,log,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,log,container,cmd,log,container,cmd,client,log,container,cmd,container,id,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,log,container,cmd,with,follow,stream,follow,stream,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,log,container,cmd,with,std,err,std,err,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,log,container,cmd,with,std,out,std,out,integer,tail,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,tail,null,log,container,cmd,with,tail,tail,boolean,tail,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tail,all,null,tail,all,log,container,cmd,with,tail,all,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,log,container,cmd,with,timestamps,timestamps,return,log,container,cmd
DockerProducer -> private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message);1424675476;Produce a log container request__@param client_@param message_@return;private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Log Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        LogContainerCmd logContainerCmd = client.logContainerCmd(containerId)___        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)___        if (followStream != null) {_            logContainerCmd.withFollowStream(followStream)__        }__        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)___        if (stdErr != null) {_            logContainerCmd.withStdErr(stdErr)__        }__        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)___        if (stdOut != null) {_            logContainerCmd.withStdOut(stdOut)__        }__        Integer tail = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL, configuration, message, Integer.class)___        if (tail != null) {_            logContainerCmd.withTail(tail)__        }__        Boolean tailAll = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL_ALL, configuration, message, Boolean.class)___        if (tailAll != null && tailAll) {_            logContainerCmd.withTailAll()__        }__        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)___        if (timestamps != null) {_            logContainerCmd.withTimestamps(timestamps)__        }__        return logContainerCmd___    };produce,a,log,container,request,param,client,param,message,return;private,log,container,cmd,execute,log,container,request,docker,client,client,message,message,logger,debug,executing,docker,log,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,log,container,cmd,log,container,cmd,client,log,container,cmd,container,id,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,log,container,cmd,with,follow,stream,follow,stream,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,log,container,cmd,with,std,err,std,err,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,log,container,cmd,with,std,out,std,out,integer,tail,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,tail,null,log,container,cmd,with,tail,tail,boolean,tail,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tail,all,null,tail,all,log,container,cmd,with,tail,all,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,log,container,cmd,with,timestamps,timestamps,return,log,container,cmd
DockerProducer -> private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message);1424877876;Produce a log container request__@param client_@param message_@return;private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Log Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        LogContainerCmd logContainerCmd = client.logContainerCmd(containerId)___        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)___        if (followStream != null) {_            logContainerCmd.withFollowStream(followStream)__        }__        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)___        if (stdErr != null) {_            logContainerCmd.withStdErr(stdErr)__        }__        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)___        if (stdOut != null) {_            logContainerCmd.withStdOut(stdOut)__        }__        Integer tail = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL, configuration, message, Integer.class)___        if (tail != null) {_            logContainerCmd.withTail(tail)__        }__        Boolean tailAll = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL_ALL, configuration, message, Boolean.class)___        if (tailAll != null && tailAll) {_            logContainerCmd.withTailAll()__        }__        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)___        if (timestamps != null) {_            logContainerCmd.withTimestamps(timestamps)__        }__        return logContainerCmd___    };produce,a,log,container,request,param,client,param,message,return;private,log,container,cmd,execute,log,container,request,docker,client,client,message,message,logger,debug,executing,docker,log,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,log,container,cmd,log,container,cmd,client,log,container,cmd,container,id,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,log,container,cmd,with,follow,stream,follow,stream,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,log,container,cmd,with,std,err,std,err,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,log,container,cmd,with,std,out,std,out,integer,tail,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,tail,null,log,container,cmd,with,tail,tail,boolean,tail,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tail,all,null,tail,all,log,container,cmd,with,tail,all,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,log,container,cmd,with,timestamps,timestamps,return,log,container,cmd
DockerProducer -> private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message);1429199966;Produce a log container request__@param client_@param message_@return;private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Log Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        LogContainerCmd logContainerCmd = client.logContainerCmd(containerId)___        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)___        if (followStream != null) {_            logContainerCmd.withFollowStream(followStream)__        }__        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)___        if (stdErr != null) {_            logContainerCmd.withStdErr(stdErr)__        }__        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)___        if (stdOut != null) {_            logContainerCmd.withStdOut(stdOut)__        }__        Integer tail = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL, configuration, message, Integer.class)___        if (tail != null) {_            logContainerCmd.withTail(tail)__        }__        Boolean tailAll = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL_ALL, configuration, message, Boolean.class)___        if (tailAll != null && tailAll) {_            logContainerCmd.withTailAll()__        }__        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)___        if (timestamps != null) {_            logContainerCmd.withTimestamps(timestamps)__        }__        return logContainerCmd___    };produce,a,log,container,request,param,client,param,message,return;private,log,container,cmd,execute,log,container,request,docker,client,client,message,message,logger,debug,executing,docker,log,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,log,container,cmd,log,container,cmd,client,log,container,cmd,container,id,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,log,container,cmd,with,follow,stream,follow,stream,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,log,container,cmd,with,std,err,std,err,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,log,container,cmd,with,std,out,std,out,integer,tail,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,tail,null,log,container,cmd,with,tail,tail,boolean,tail,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tail,all,null,tail,all,log,container,cmd,with,tail,all,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,log,container,cmd,with,timestamps,timestamps,return,log,container,cmd
DockerProducer -> private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message);1433489320;Produce a log container request__@param client_@param message_@return;private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Log Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        LogContainerCmd logContainerCmd = client.logContainerCmd(containerId)___        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)___        if (followStream != null) {_            logContainerCmd.withFollowStream(followStream)__        }__        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)___        if (stdErr != null) {_            logContainerCmd.withStdErr(stdErr)__        }__        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)___        if (stdOut != null) {_            logContainerCmd.withStdOut(stdOut)__        }__        Integer tail = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL, configuration, message, Integer.class)___        if (tail != null) {_            logContainerCmd.withTail(tail)__        }__        Boolean tailAll = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL_ALL, configuration, message, Boolean.class)___        if (tailAll != null && tailAll) {_            logContainerCmd.withTailAll()__        }__        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)___        if (timestamps != null) {_            logContainerCmd.withTimestamps(timestamps)__        }__        return logContainerCmd___    };produce,a,log,container,request,param,client,param,message,return;private,log,container,cmd,execute,log,container,request,docker,client,client,message,message,logger,debug,executing,docker,log,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,log,container,cmd,log,container,cmd,client,log,container,cmd,container,id,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,log,container,cmd,with,follow,stream,follow,stream,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,log,container,cmd,with,std,err,std,err,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,log,container,cmd,with,std,out,std,out,integer,tail,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,tail,null,log,container,cmd,with,tail,tail,boolean,tail,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tail,all,null,tail,all,log,container,cmd,with,tail,all,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,log,container,cmd,with,timestamps,timestamps,return,log,container,cmd
DockerProducer -> private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message);1440239526;Produce a log container request__@param client_@param message_@return;private LogContainerCmd executeLogContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Log Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        LogContainerCmd logContainerCmd = client.logContainerCmd(containerId)___        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)___        if (followStream != null) {_            logContainerCmd.withFollowStream(followStream)__        }__        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)___        if (stdErr != null) {_            logContainerCmd.withStdErr(stdErr)__        }__        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)___        if (stdOut != null) {_            logContainerCmd.withStdOut(stdOut)__        }__        Integer tail = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL, configuration, message, Integer.class)___        if (tail != null) {_            logContainerCmd.withTail(tail)__        }__        Boolean tailAll = DockerHelper.getProperty(DockerConstants.DOCKER_TAIL_ALL, configuration, message, Boolean.class)___        if (tailAll != null && tailAll) {_            logContainerCmd.withTailAll()__        }__        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)___        if (timestamps != null) {_            logContainerCmd.withTimestamps(timestamps)__        }__        return logContainerCmd___    };produce,a,log,container,request,param,client,param,message,return;private,log,container,cmd,execute,log,container,request,docker,client,client,message,message,logger,debug,executing,docker,log,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,log,container,cmd,log,container,cmd,client,log,container,cmd,container,id,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,log,container,cmd,with,follow,stream,follow,stream,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,log,container,cmd,with,std,err,std,err,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,log,container,cmd,with,std,out,std,out,integer,tail,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,tail,null,log,container,cmd,with,tail,tail,boolean,tail,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tail,all,null,tail,all,log,container,cmd,with,tail,all,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,log,container,cmd,with,timestamps,timestamps,return,log,container,cmd
DockerProducer -> private ContainerDiffCmd executeDiffContainerRequest(DockerClient client, Message message) throws DockerException;1415211488;Produces a diff container request__@param client_@param message_@return_@throws DockerException;private ContainerDiffCmd executeDiffContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Diff Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ContainerDiffCmd diffContainerCmd = client.containerDiffCmd(containerId)__        _        return diffContainerCmd___    };produces,a,diff,container,request,param,client,param,message,return,throws,docker,exception;private,container,diff,cmd,execute,diff,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,diff,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,container,diff,cmd,diff,container,cmd,client,container,diff,cmd,container,id,return,diff,container,cmd
DockerProducer -> private ContainerDiffCmd executeDiffContainerRequest(DockerClient client, Message message) throws DockerException;1415517409;Produces a diff container request__@param client_@param message_@return_@throws DockerException;private ContainerDiffCmd executeDiffContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Diff Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ContainerDiffCmd diffContainerCmd = client.containerDiffCmd(containerId)__        _        return diffContainerCmd___    };produces,a,diff,container,request,param,client,param,message,return,throws,docker,exception;private,container,diff,cmd,execute,diff,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,diff,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,container,diff,cmd,diff,container,cmd,client,container,diff,cmd,container,id,return,diff,container,cmd
DockerProducer -> private ContainerDiffCmd executeDiffContainerRequest(DockerClient client, Message message) throws DockerException;1423234542;Produces a diff container request__@param client_@param message_@return_@throws DockerException;private ContainerDiffCmd executeDiffContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Diff Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ContainerDiffCmd diffContainerCmd = client.containerDiffCmd(containerId)__        _        return diffContainerCmd___    };produces,a,diff,container,request,param,client,param,message,return,throws,docker,exception;private,container,diff,cmd,execute,diff,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,diff,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,container,diff,cmd,diff,container,cmd,client,container,diff,cmd,container,id,return,diff,container,cmd
DockerProducer -> private TopContainerCmd executeTopContainerRequest(DockerClient client, Message message) throws DockerException;1415211488;Produces a top container request__@param client_@param message_@return_@throws DockerException;private TopContainerCmd executeTopContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Top Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        _        TopContainerCmd topContainerCmd = client.topContainerCmd(containerId)___        String psArgs = DockerHelper.getProperty(DockerConstants.DOCKER_PS_ARGS, configuration, message, String.class)__        _        if (psArgs != null) {_            topContainerCmd.withPsArgs(psArgs)__        }_             _        return topContainerCmd___    };produces,a,top,container,request,param,client,param,message,return,throws,docker,exception;private,top,container,cmd,execute,top,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,top,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,top,container,cmd,top,container,cmd,client,top,container,cmd,container,id,string,ps,args,docker,helper,get,property,docker,constants,configuration,message,string,class,if,ps,args,null,top,container,cmd,with,ps,args,ps,args,return,top,container,cmd
DockerProducer -> private TopContainerCmd executeTopContainerRequest(DockerClient client, Message message) throws DockerException;1415517409;Produces a top container request__@param client_@param message_@return_@throws DockerException;private TopContainerCmd executeTopContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Top Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        _        TopContainerCmd topContainerCmd = client.topContainerCmd(containerId)___        String psArgs = DockerHelper.getProperty(DockerConstants.DOCKER_PS_ARGS, configuration, message, String.class)__        _        if (psArgs != null) {_            topContainerCmd.withPsArgs(psArgs)__        }_             _        return topContainerCmd___    };produces,a,top,container,request,param,client,param,message,return,throws,docker,exception;private,top,container,cmd,execute,top,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,top,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,top,container,cmd,top,container,cmd,client,top,container,cmd,container,id,string,ps,args,docker,helper,get,property,docker,constants,configuration,message,string,class,if,ps,args,null,top,container,cmd,with,ps,args,ps,args,return,top,container,cmd
DockerProducer -> private TopContainerCmd executeTopContainerRequest(DockerClient client, Message message) throws DockerException;1423234542;Produces a top container request__@param client_@param message_@return_@throws DockerException;private TopContainerCmd executeTopContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Top Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        _        TopContainerCmd topContainerCmd = client.topContainerCmd(containerId)___        String psArgs = DockerHelper.getProperty(DockerConstants.DOCKER_PS_ARGS, configuration, message, String.class)__        _        if (psArgs != null) {_            topContainerCmd.withPsArgs(psArgs)__        }_             _        return topContainerCmd___    };produces,a,top,container,request,param,client,param,message,return,throws,docker,exception;private,top,container,cmd,execute,top,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,top,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,top,container,cmd,top,container,cmd,client,top,container,cmd,container,id,string,ps,args,docker,helper,get,property,docker,constants,configuration,message,string,class,if,ps,args,null,top,container,cmd,with,ps,args,ps,args,return,top,container,cmd
DockerProducer -> private CommitCmd executeCommitContainerRequest(DockerClient client, Message message) throws DockerException;1415211488;Produces a commit container request__@param client_@param message_@return_@throws DockerException;private CommitCmd executeCommitContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Commit Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        _        CommitCmd commitCmd = client.commitCmd(containerId)__ _        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        if (repository != null) {_            commitCmd.withRepository(repository)__        }_        _        String msg = DockerHelper.getProperty(DockerConstants.DOCKER_MESSAGE, configuration, message, String.class)___        if (message != null) {_            commitCmd.withMessage(msg)__        }_        _        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            commitCmd.withTag(tag)__        }_        _        String author = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (author != null) {_            commitCmd.withAuthor(tag)__        }       __        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        if (attachStdIn != null && attachStdIn) {_            commitCmd.withAttachStdin()__        }   _        _        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null && attachStdOut) {_            commitCmd.withAttachStdout()__        }   __        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null && attachStdErr) {_            commitCmd.withAttachStderr()__        }   _               _        String[] cmds = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmds != null) {_            commitCmd.withCmd(cmds)__        }_        _        Boolean disableNetwork = DockerHelper.getProperty(DockerConstants.DOCKER_DISABLE_NETWORK, configuration, message, Boolean.class)___        if (disableNetwork != null && disableNetwork) {_            commitCmd.withDisableNetwork(disableNetwork)__        }   _        _        Boolean pause = DockerHelper.getProperty(DockerConstants.DOCKER_PAUSE, configuration, message, Boolean.class)___        if (pause != null && pause) {_            commitCmd.withPause(pause)__        }          _        _        String[] envs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_ENV, message)___        if (envs != null) {_            commitCmd.withEnv(envs)__        }_ _        ExposedPorts exposedPorts = DockerHelper.getProperty(DockerConstants.DOCKER_EXPOSED_PORTS, configuration, message, ExposedPorts.class)___        if (exposedPorts != null) {_            commitCmd.withExposedPorts(exposedPorts)__        }  _        _        String hostname = DockerHelper.getProperty(DockerConstants.DOCKER_HOSTNAME, configuration, message, String.class)___        if (hostname != null) {_            commitCmd.withHostname(hostname)__        }_        _        Integer memory = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY, configuration, message, Integer.class)___        if (memory != null) {_            commitCmd.withMemory(memory)__        }__        Integer memorySwap = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_SWAP, configuration, message, Integer.class)___        if (memorySwap != null) {_            commitCmd.withMemorySwap(memorySwap)__        }_        _        Boolean openStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_OPEN_STD_IN, configuration, message, Boolean.class)___        if (openStdIn != null && openStdIn) {_            commitCmd.withOpenStdin(openStdIn)__        }  _        _        String[] portSpecs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_PORT_SPECS, message)___        if (portSpecs != null) {_            commitCmd.withPortSpecs(portSpecs)__        }_        _        Boolean stdInOnce = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_ONCE, configuration, message, Boolean.class)___        if (stdInOnce != null && stdInOnce) {_            commitCmd.withStdinOnce(stdInOnce)__        }  _        _        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null && tty) {_            commitCmd.withTty(tty)__        }_        _        String user = DockerHelper.getProperty(DockerConstants.DOCKER_USER, configuration, message, String.class)___        if (user != null) {_            commitCmd.withUser(user)__        }_        _        Volumes volumes = DockerHelper.getProperty(DockerConstants.DOCKER_VOLUMES, configuration, message, Volumes.class)___        if (volumes != null) {_            commitCmd.withVolumes(volumes)__        }_        _        String workingDir = DockerHelper.getProperty(DockerConstants.DOCKER_HOSTNAME, configuration, message, String.class)___        if (workingDir != null) {_            commitCmd.withWorkingDir(workingDir)__        }_        _        _        return commitCmd___    };produces,a,commit,container,request,param,client,param,message,return,throws,docker,exception;private,commit,cmd,execute,commit,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,commit,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,commit,cmd,commit,cmd,client,commit,cmd,container,id,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,if,repository,null,commit,cmd,with,repository,repository,string,msg,docker,helper,get,property,docker,constants,configuration,message,string,class,if,message,null,commit,cmd,with,message,msg,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,commit,cmd,with,tag,tag,string,author,docker,helper,get,property,docker,constants,configuration,message,string,class,if,author,null,commit,cmd,with,author,tag,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,in,null,attach,std,in,commit,cmd,with,attach,stdin,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,attach,std,out,commit,cmd,with,attach,stdout,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,attach,std,err,commit,cmd,with,attach,stderr,string,cmds,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmds,null,commit,cmd,with,cmd,cmds,boolean,disable,network,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,disable,network,null,disable,network,commit,cmd,with,disable,network,disable,network,boolean,pause,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,pause,null,pause,commit,cmd,with,pause,pause,string,envs,docker,helper,parse,delimited,string,header,docker,constants,message,if,envs,null,commit,cmd,with,env,envs,exposed,ports,exposed,ports,docker,helper,get,property,docker,constants,configuration,message,exposed,ports,class,if,exposed,ports,null,commit,cmd,with,exposed,ports,exposed,ports,string,hostname,docker,helper,get,property,docker,constants,configuration,message,string,class,if,hostname,null,commit,cmd,with,hostname,hostname,integer,memory,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,memory,null,commit,cmd,with,memory,memory,integer,memory,swap,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,memory,swap,null,commit,cmd,with,memory,swap,memory,swap,boolean,open,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,open,std,in,null,open,std,in,commit,cmd,with,open,stdin,open,std,in,string,port,specs,docker,helper,parse,delimited,string,header,docker,constants,message,if,port,specs,null,commit,cmd,with,port,specs,port,specs,boolean,std,in,once,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,once,null,std,in,once,commit,cmd,with,stdin,once,std,in,once,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,tty,commit,cmd,with,tty,tty,string,user,docker,helper,get,property,docker,constants,configuration,message,string,class,if,user,null,commit,cmd,with,user,user,volumes,volumes,docker,helper,get,property,docker,constants,configuration,message,volumes,class,if,volumes,null,commit,cmd,with,volumes,volumes,string,working,dir,docker,helper,get,property,docker,constants,configuration,message,string,class,if,working,dir,null,commit,cmd,with,working,dir,working,dir,return,commit,cmd
DockerProducer -> private CommitCmd executeCommitContainerRequest(DockerClient client, Message message) throws DockerException;1415517409;Produces a commit container request__@param client_@param message_@return_@throws DockerException;private CommitCmd executeCommitContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Commit Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        _        CommitCmd commitCmd = client.commitCmd(containerId)__ _        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        if (repository != null) {_            commitCmd.withRepository(repository)__        }_        _        String msg = DockerHelper.getProperty(DockerConstants.DOCKER_MESSAGE, configuration, message, String.class)___        if (message != null) {_            commitCmd.withMessage(msg)__        }_        _        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            commitCmd.withTag(tag)__        }_        _        String author = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (author != null) {_            commitCmd.withAuthor(tag)__        }       __        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        if (attachStdIn != null && attachStdIn) {_            commitCmd.withAttachStdin()__        }   _        _        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null && attachStdOut) {_            commitCmd.withAttachStdout()__        }   __        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null && attachStdErr) {_            commitCmd.withAttachStderr()__        }   _               _        String[] cmds = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmds != null) {_            commitCmd.withCmd(cmds)__        }_        _        Boolean disableNetwork = DockerHelper.getProperty(DockerConstants.DOCKER_DISABLE_NETWORK, configuration, message, Boolean.class)___        if (disableNetwork != null && disableNetwork) {_            commitCmd.withDisableNetwork(disableNetwork)__        }   _        _        Boolean pause = DockerHelper.getProperty(DockerConstants.DOCKER_PAUSE, configuration, message, Boolean.class)___        if (pause != null && pause) {_            commitCmd.withPause(pause)__        }          _        _        String[] envs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_ENV, message)___        if (envs != null) {_            commitCmd.withEnv(envs)__        }_ _        ExposedPorts exposedPorts = DockerHelper.getProperty(DockerConstants.DOCKER_EXPOSED_PORTS, configuration, message, ExposedPorts.class)___        if (exposedPorts != null) {_            commitCmd.withExposedPorts(exposedPorts)__        }  _        _        String hostname = DockerHelper.getProperty(DockerConstants.DOCKER_HOSTNAME, configuration, message, String.class)___        if (hostname != null) {_            commitCmd.withHostname(hostname)__        }_        _        Integer memory = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY, configuration, message, Integer.class)___        if (memory != null) {_            commitCmd.withMemory(memory)__        }__        Integer memorySwap = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_SWAP, configuration, message, Integer.class)___        if (memorySwap != null) {_            commitCmd.withMemorySwap(memorySwap)__        }_        _        Boolean openStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_OPEN_STD_IN, configuration, message, Boolean.class)___        if (openStdIn != null && openStdIn) {_            commitCmd.withOpenStdin(openStdIn)__        }  _        _        String[] portSpecs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_PORT_SPECS, message)___        if (portSpecs != null) {_            commitCmd.withPortSpecs(portSpecs)__        }_        _        Boolean stdInOnce = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_ONCE, configuration, message, Boolean.class)___        if (stdInOnce != null && stdInOnce) {_            commitCmd.withStdinOnce(stdInOnce)__        }  _        _        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null && tty) {_            commitCmd.withTty(tty)__        }_        _        String user = DockerHelper.getProperty(DockerConstants.DOCKER_USER, configuration, message, String.class)___        if (user != null) {_            commitCmd.withUser(user)__        }_        _        Volumes volumes = DockerHelper.getProperty(DockerConstants.DOCKER_VOLUMES, configuration, message, Volumes.class)___        if (volumes != null) {_            commitCmd.withVolumes(volumes)__        }_        _        String workingDir = DockerHelper.getProperty(DockerConstants.DOCKER_HOSTNAME, configuration, message, String.class)___        if (workingDir != null) {_            commitCmd.withWorkingDir(workingDir)__        }_        _        _        return commitCmd___    };produces,a,commit,container,request,param,client,param,message,return,throws,docker,exception;private,commit,cmd,execute,commit,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,commit,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,commit,cmd,commit,cmd,client,commit,cmd,container,id,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,if,repository,null,commit,cmd,with,repository,repository,string,msg,docker,helper,get,property,docker,constants,configuration,message,string,class,if,message,null,commit,cmd,with,message,msg,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,commit,cmd,with,tag,tag,string,author,docker,helper,get,property,docker,constants,configuration,message,string,class,if,author,null,commit,cmd,with,author,tag,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,in,null,attach,std,in,commit,cmd,with,attach,stdin,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,attach,std,out,commit,cmd,with,attach,stdout,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,attach,std,err,commit,cmd,with,attach,stderr,string,cmds,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmds,null,commit,cmd,with,cmd,cmds,boolean,disable,network,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,disable,network,null,disable,network,commit,cmd,with,disable,network,disable,network,boolean,pause,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,pause,null,pause,commit,cmd,with,pause,pause,string,envs,docker,helper,parse,delimited,string,header,docker,constants,message,if,envs,null,commit,cmd,with,env,envs,exposed,ports,exposed,ports,docker,helper,get,property,docker,constants,configuration,message,exposed,ports,class,if,exposed,ports,null,commit,cmd,with,exposed,ports,exposed,ports,string,hostname,docker,helper,get,property,docker,constants,configuration,message,string,class,if,hostname,null,commit,cmd,with,hostname,hostname,integer,memory,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,memory,null,commit,cmd,with,memory,memory,integer,memory,swap,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,memory,swap,null,commit,cmd,with,memory,swap,memory,swap,boolean,open,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,open,std,in,null,open,std,in,commit,cmd,with,open,stdin,open,std,in,string,port,specs,docker,helper,parse,delimited,string,header,docker,constants,message,if,port,specs,null,commit,cmd,with,port,specs,port,specs,boolean,std,in,once,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,once,null,std,in,once,commit,cmd,with,stdin,once,std,in,once,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,tty,commit,cmd,with,tty,tty,string,user,docker,helper,get,property,docker,constants,configuration,message,string,class,if,user,null,commit,cmd,with,user,user,volumes,volumes,docker,helper,get,property,docker,constants,configuration,message,volumes,class,if,volumes,null,commit,cmd,with,volumes,volumes,string,working,dir,docker,helper,get,property,docker,constants,configuration,message,string,class,if,working,dir,null,commit,cmd,with,working,dir,working,dir,return,commit,cmd
DockerProducer -> private CommitCmd executeCommitContainerRequest(DockerClient client, Message message) throws DockerException;1423234542;Produces a commit container request__@param client_@param message_@return_@throws DockerException;private CommitCmd executeCommitContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Commit Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        _        CommitCmd commitCmd = client.commitCmd(containerId)__ _        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        if (repository != null) {_            commitCmd.withRepository(repository)__        }_        _        String msg = DockerHelper.getProperty(DockerConstants.DOCKER_MESSAGE, configuration, message, String.class)___        if (message != null) {_            commitCmd.withMessage(msg)__        }_        _        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            commitCmd.withTag(tag)__        }_        _        String author = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (author != null) {_            commitCmd.withAuthor(tag)__        }       __        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        if (attachStdIn != null && attachStdIn) {_            commitCmd.withAttachStdin()__        }   _        _        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null && attachStdOut) {_            commitCmd.withAttachStdout()__        }   __        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null && attachStdErr) {_            commitCmd.withAttachStderr()__        }   _               _        String[] cmds = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmds != null) {_            commitCmd.withCmd(cmds)__        }_        _        Boolean disableNetwork = DockerHelper.getProperty(DockerConstants.DOCKER_DISABLE_NETWORK, configuration, message, Boolean.class)___        if (disableNetwork != null && disableNetwork) {_            commitCmd.withDisableNetwork(disableNetwork)__        }   _        _        Boolean pause = DockerHelper.getProperty(DockerConstants.DOCKER_PAUSE, configuration, message, Boolean.class)___        if (pause != null && pause) {_            commitCmd.withPause(pause)__        }          _        _        String[] envs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_ENV, message)___        if (envs != null) {_            commitCmd.withEnv(envs)__        }_ _        ExposedPorts exposedPorts = DockerHelper.getProperty(DockerConstants.DOCKER_EXPOSED_PORTS, configuration, message, ExposedPorts.class)___        if (exposedPorts != null) {_            commitCmd.withExposedPorts(exposedPorts)__        }  _        _        String hostname = DockerHelper.getProperty(DockerConstants.DOCKER_HOSTNAME, configuration, message, String.class)___        if (hostname != null) {_            commitCmd.withHostname(hostname)__        }_        _        Integer memory = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY, configuration, message, Integer.class)___        if (memory != null) {_            commitCmd.withMemory(memory)__        }__        Integer memorySwap = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_SWAP, configuration, message, Integer.class)___        if (memorySwap != null) {_            commitCmd.withMemorySwap(memorySwap)__        }_        _        Boolean openStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_OPEN_STD_IN, configuration, message, Boolean.class)___        if (openStdIn != null && openStdIn) {_            commitCmd.withOpenStdin(openStdIn)__        }  _        _        String[] portSpecs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_PORT_SPECS, message)___        if (portSpecs != null) {_            commitCmd.withPortSpecs(portSpecs)__        }_        _        Boolean stdInOnce = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_ONCE, configuration, message, Boolean.class)___        if (stdInOnce != null && stdInOnce) {_            commitCmd.withStdinOnce(stdInOnce)__        }  _        _        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null && tty) {_            commitCmd.withTty(tty)__        }_        _        String user = DockerHelper.getProperty(DockerConstants.DOCKER_USER, configuration, message, String.class)___        if (user != null) {_            commitCmd.withUser(user)__        }_        _        Volumes volumes = DockerHelper.getProperty(DockerConstants.DOCKER_VOLUMES, configuration, message, Volumes.class)___        if (volumes != null) {_            commitCmd.withVolumes(volumes)__        }_        _        String workingDir = DockerHelper.getProperty(DockerConstants.DOCKER_HOSTNAME, configuration, message, String.class)___        if (workingDir != null) {_            commitCmd.withWorkingDir(workingDir)__        }_        _        _        return commitCmd___    };produces,a,commit,container,request,param,client,param,message,return,throws,docker,exception;private,commit,cmd,execute,commit,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,commit,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,commit,cmd,commit,cmd,client,commit,cmd,container,id,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,if,repository,null,commit,cmd,with,repository,repository,string,msg,docker,helper,get,property,docker,constants,configuration,message,string,class,if,message,null,commit,cmd,with,message,msg,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,commit,cmd,with,tag,tag,string,author,docker,helper,get,property,docker,constants,configuration,message,string,class,if,author,null,commit,cmd,with,author,tag,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,in,null,attach,std,in,commit,cmd,with,attach,stdin,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,attach,std,out,commit,cmd,with,attach,stdout,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,attach,std,err,commit,cmd,with,attach,stderr,string,cmds,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmds,null,commit,cmd,with,cmd,cmds,boolean,disable,network,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,disable,network,null,disable,network,commit,cmd,with,disable,network,disable,network,boolean,pause,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,pause,null,pause,commit,cmd,with,pause,pause,string,envs,docker,helper,parse,delimited,string,header,docker,constants,message,if,envs,null,commit,cmd,with,env,envs,exposed,ports,exposed,ports,docker,helper,get,property,docker,constants,configuration,message,exposed,ports,class,if,exposed,ports,null,commit,cmd,with,exposed,ports,exposed,ports,string,hostname,docker,helper,get,property,docker,constants,configuration,message,string,class,if,hostname,null,commit,cmd,with,hostname,hostname,integer,memory,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,memory,null,commit,cmd,with,memory,memory,integer,memory,swap,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,memory,swap,null,commit,cmd,with,memory,swap,memory,swap,boolean,open,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,open,std,in,null,open,std,in,commit,cmd,with,open,stdin,open,std,in,string,port,specs,docker,helper,parse,delimited,string,header,docker,constants,message,if,port,specs,null,commit,cmd,with,port,specs,port,specs,boolean,std,in,once,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,once,null,std,in,once,commit,cmd,with,stdin,once,std,in,once,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,tty,commit,cmd,with,tty,tty,string,user,docker,helper,get,property,docker,constants,configuration,message,string,class,if,user,null,commit,cmd,with,user,user,volumes,volumes,docker,helper,get,property,docker,constants,configuration,message,volumes,class,if,volumes,null,commit,cmd,with,volumes,volumes,string,working,dir,docker,helper,get,property,docker,constants,configuration,message,string,class,if,working,dir,null,commit,cmd,with,working,dir,working,dir,return,commit,cmd
DockerProducer -> private CommitCmd executeCommitContainerRequest(DockerClient client, Message message) throws DockerException;1424675020;Produces a commit container request__@param client_@param message_@return_@throws DockerException;private CommitCmd executeCommitContainerRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Commit Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")__        _        CommitCmd commitCmd = client.commitCmd(containerId)__        _        String author = DockerHelper.getProperty(DockerConstants.DOCKER_AUTHOR, configuration, message, String.class)___        if (author != null) {_            commitCmd.withAuthor(author)__        }_        _        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null) {_            commitCmd.withAttachStderr(attachStdErr)__        }__        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        if (attachStdIn != null) {_            commitCmd.withAttachStdin(attachStdIn)__        }__        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null) {_            commitCmd.withAttachStdout(attachStdOut)__        }__        String[] cmds = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmds != null) {_            commitCmd.withCmd(cmds)__        }__        Boolean disableNetwork = DockerHelper.getProperty(DockerConstants.DOCKER_DISABLE_NETWORK, configuration, message, Boolean.class)___        if (disableNetwork != null) {_            commitCmd.withDisableNetwork(disableNetwork)__        }__        String[] envs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_ENV, message)___        if (envs != null) {_            commitCmd.withEnv(envs)__        }_        _        ExposedPorts exposedPorts = DockerHelper.getProperty(DockerConstants.DOCKER_EXPOSED_PORTS, configuration, message, ExposedPorts.class)___        if (exposedPorts != null) {_            commitCmd.withExposedPorts(exposedPorts)__        }__        String hostname = DockerHelper.getProperty(DockerConstants.DOCKER_HOSTNAME, configuration, message, String.class)___        if (hostname != null) {_            commitCmd.withHostname(hostname)__        }__        Integer memory = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY, configuration, message, Integer.class)___        if (memory != null) {_            commitCmd.withMemory(memory)__        }__        Integer memorySwap = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_SWAP, configuration, message, Integer.class)___        if (memorySwap != null) {_            commitCmd.withMemorySwap(memorySwap)__        }__        String msg = DockerHelper.getProperty(DockerConstants.DOCKER_MESSAGE, configuration, message, String.class)___        if (msg != null) {_            commitCmd.withMessage(msg)__        }__        Boolean openStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_OPEN_STD_IN, configuration, message, Boolean.class)___        if (openStdIn != null) {_            commitCmd.withOpenStdin(openStdIn)__        }_        _        Boolean pause = DockerHelper.getProperty(DockerConstants.DOCKER_PAUSE, configuration, message, Boolean.class)___        if (pause != null) {_            commitCmd.withPause(pause)__        }__        String[] portSpecs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_PORT_SPECS, message)___        if (portSpecs != null) {_            commitCmd.withPortSpecs(portSpecs)__        }_        _        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        if (repository != null) {_            commitCmd.withRepository(repository)__        }_        _        Boolean stdInOnce = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_ONCE, configuration, message, Boolean.class)___        if (stdInOnce != null) {_            commitCmd.withStdinOnce(stdInOnce)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            commitCmd.withTag(tag)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            commitCmd.withTty(tty)__        }__        String user = DockerHelper.getProperty(DockerConstants.DOCKER_USER, configuration, message, String.class)___        if (user != null) {_            commitCmd.withUser(user)__        }__        Volumes volumes = DockerHelper.getProperty(DockerConstants.DOCKER_VOLUMES, configuration, message, Volumes.class)___        if (volumes != null) {_            commitCmd.withVolumes(volumes)__        }__        String workingDir = DockerHelper.getProperty(DockerConstants.DOCKER_WORKING_DIR, configuration, message, String.class)___        if (workingDir != null) {_            commitCmd.withWorkingDir(workingDir)__        }__        return commitCmd___    };produces,a,commit,container,request,param,client,param,message,return,throws,docker,exception;private,commit,cmd,execute,commit,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,commit,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,commit,cmd,commit,cmd,client,commit,cmd,container,id,string,author,docker,helper,get,property,docker,constants,configuration,message,string,class,if,author,null,commit,cmd,with,author,author,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,commit,cmd,with,attach,stderr,attach,std,err,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,in,null,commit,cmd,with,attach,stdin,attach,std,in,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,commit,cmd,with,attach,stdout,attach,std,out,string,cmds,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmds,null,commit,cmd,with,cmd,cmds,boolean,disable,network,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,disable,network,null,commit,cmd,with,disable,network,disable,network,string,envs,docker,helper,parse,delimited,string,header,docker,constants,message,if,envs,null,commit,cmd,with,env,envs,exposed,ports,exposed,ports,docker,helper,get,property,docker,constants,configuration,message,exposed,ports,class,if,exposed,ports,null,commit,cmd,with,exposed,ports,exposed,ports,string,hostname,docker,helper,get,property,docker,constants,configuration,message,string,class,if,hostname,null,commit,cmd,with,hostname,hostname,integer,memory,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,memory,null,commit,cmd,with,memory,memory,integer,memory,swap,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,memory,swap,null,commit,cmd,with,memory,swap,memory,swap,string,msg,docker,helper,get,property,docker,constants,configuration,message,string,class,if,msg,null,commit,cmd,with,message,msg,boolean,open,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,open,std,in,null,commit,cmd,with,open,stdin,open,std,in,boolean,pause,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,pause,null,commit,cmd,with,pause,pause,string,port,specs,docker,helper,parse,delimited,string,header,docker,constants,message,if,port,specs,null,commit,cmd,with,port,specs,port,specs,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,if,repository,null,commit,cmd,with,repository,repository,boolean,std,in,once,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,once,null,commit,cmd,with,stdin,once,std,in,once,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,commit,cmd,with,tag,tag,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,commit,cmd,with,tty,tty,string,user,docker,helper,get,property,docker,constants,configuration,message,string,class,if,user,null,commit,cmd,with,user,user,volumes,volumes,docker,helper,get,property,docker,constants,configuration,message,volumes,class,if,volumes,null,commit,cmd,with,volumes,volumes,string,working,dir,docker,helper,get,property,docker,constants,configuration,message,string,class,if,working,dir,null,commit,cmd,with,working,dir,working,dir,return,commit,cmd
DockerProducer -> private CommitCmd executeCommitContainerRequest(DockerClient client, Message message) throws DockerException;1424675476;Produces a commit container request__@param client_@param message_@return_@throws DockerException;private CommitCmd executeCommitContainerRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Commit Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        CommitCmd commitCmd = client.commitCmd(containerId)___        String author = DockerHelper.getProperty(DockerConstants.DOCKER_AUTHOR, configuration, message, String.class)___        if (author != null) {_            commitCmd.withAuthor(author)__        }__        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null) {_            commitCmd.withAttachStderr(attachStdErr)__        }__        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        if (attachStdIn != null) {_            commitCmd.withAttachStdin(attachStdIn)__        }__        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null) {_            commitCmd.withAttachStdout(attachStdOut)__        }__        String[] cmds = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmds != null) {_            commitCmd.withCmd(cmds)__        }__        Boolean disableNetwork = DockerHelper.getProperty(DockerConstants.DOCKER_DISABLE_NETWORK, configuration, message, Boolean.class)___        if (disableNetwork != null) {_            commitCmd.withDisableNetwork(disableNetwork)__        }__        String[] envs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_ENV, message)___        if (envs != null) {_            commitCmd.withEnv(envs)__        }__        ExposedPorts exposedPorts = DockerHelper.getProperty(DockerConstants.DOCKER_EXPOSED_PORTS, configuration, message, ExposedPorts.class)___        if (exposedPorts != null) {_            commitCmd.withExposedPorts(exposedPorts)__        }__        String hostname = DockerHelper.getProperty(DockerConstants.DOCKER_HOSTNAME, configuration, message, String.class)___        if (hostname != null) {_            commitCmd.withHostname(hostname)__        }__        Integer memory = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY, configuration, message, Integer.class)___        if (memory != null) {_            commitCmd.withMemory(memory)__        }__        Integer memorySwap = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_SWAP, configuration, message, Integer.class)___        if (memorySwap != null) {_            commitCmd.withMemorySwap(memorySwap)__        }__        String msg = DockerHelper.getProperty(DockerConstants.DOCKER_MESSAGE, configuration, message, String.class)___        if (msg != null) {_            commitCmd.withMessage(msg)__        }__        Boolean openStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_OPEN_STD_IN, configuration, message, Boolean.class)___        if (openStdIn != null) {_            commitCmd.withOpenStdin(openStdIn)__        }__        Boolean pause = DockerHelper.getProperty(DockerConstants.DOCKER_PAUSE, configuration, message, Boolean.class)___        if (pause != null) {_            commitCmd.withPause(pause)__        }__        String[] portSpecs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_PORT_SPECS, message)___        if (portSpecs != null) {_            commitCmd.withPortSpecs(portSpecs)__        }__        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        if (repository != null) {_            commitCmd.withRepository(repository)__        }__        Boolean stdInOnce = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_ONCE, configuration, message, Boolean.class)___        if (stdInOnce != null) {_            commitCmd.withStdinOnce(stdInOnce)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            commitCmd.withTag(tag)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            commitCmd.withTty(tty)__        }__        String user = DockerHelper.getProperty(DockerConstants.DOCKER_USER, configuration, message, String.class)___        if (user != null) {_            commitCmd.withUser(user)__        }__        Volumes volumes = DockerHelper.getProperty(DockerConstants.DOCKER_VOLUMES, configuration, message, Volumes.class)___        if (volumes != null) {_            commitCmd.withVolumes(volumes)__        }__        String workingDir = DockerHelper.getProperty(DockerConstants.DOCKER_WORKING_DIR, configuration, message, String.class)___        if (workingDir != null) {_            commitCmd.withWorkingDir(workingDir)__        }__        return commitCmd___    };produces,a,commit,container,request,param,client,param,message,return,throws,docker,exception;private,commit,cmd,execute,commit,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,commit,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,commit,cmd,commit,cmd,client,commit,cmd,container,id,string,author,docker,helper,get,property,docker,constants,configuration,message,string,class,if,author,null,commit,cmd,with,author,author,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,commit,cmd,with,attach,stderr,attach,std,err,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,in,null,commit,cmd,with,attach,stdin,attach,std,in,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,commit,cmd,with,attach,stdout,attach,std,out,string,cmds,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmds,null,commit,cmd,with,cmd,cmds,boolean,disable,network,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,disable,network,null,commit,cmd,with,disable,network,disable,network,string,envs,docker,helper,parse,delimited,string,header,docker,constants,message,if,envs,null,commit,cmd,with,env,envs,exposed,ports,exposed,ports,docker,helper,get,property,docker,constants,configuration,message,exposed,ports,class,if,exposed,ports,null,commit,cmd,with,exposed,ports,exposed,ports,string,hostname,docker,helper,get,property,docker,constants,configuration,message,string,class,if,hostname,null,commit,cmd,with,hostname,hostname,integer,memory,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,memory,null,commit,cmd,with,memory,memory,integer,memory,swap,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,memory,swap,null,commit,cmd,with,memory,swap,memory,swap,string,msg,docker,helper,get,property,docker,constants,configuration,message,string,class,if,msg,null,commit,cmd,with,message,msg,boolean,open,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,open,std,in,null,commit,cmd,with,open,stdin,open,std,in,boolean,pause,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,pause,null,commit,cmd,with,pause,pause,string,port,specs,docker,helper,parse,delimited,string,header,docker,constants,message,if,port,specs,null,commit,cmd,with,port,specs,port,specs,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,if,repository,null,commit,cmd,with,repository,repository,boolean,std,in,once,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,once,null,commit,cmd,with,stdin,once,std,in,once,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,commit,cmd,with,tag,tag,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,commit,cmd,with,tty,tty,string,user,docker,helper,get,property,docker,constants,configuration,message,string,class,if,user,null,commit,cmd,with,user,user,volumes,volumes,docker,helper,get,property,docker,constants,configuration,message,volumes,class,if,volumes,null,commit,cmd,with,volumes,volumes,string,working,dir,docker,helper,get,property,docker,constants,configuration,message,string,class,if,working,dir,null,commit,cmd,with,working,dir,working,dir,return,commit,cmd
DockerProducer -> private CommitCmd executeCommitContainerRequest(DockerClient client, Message message) throws DockerException;1424877876;Produces a commit container request__@param client_@param message_@return_@throws DockerException;private CommitCmd executeCommitContainerRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Commit Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        CommitCmd commitCmd = client.commitCmd(containerId)___        String author = DockerHelper.getProperty(DockerConstants.DOCKER_AUTHOR, configuration, message, String.class)___        if (author != null) {_            commitCmd.withAuthor(author)__        }__        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null) {_            commitCmd.withAttachStderr(attachStdErr)__        }__        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        if (attachStdIn != null) {_            commitCmd.withAttachStdin(attachStdIn)__        }__        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null) {_            commitCmd.withAttachStdout(attachStdOut)__        }__        String[] cmds = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmds != null) {_            commitCmd.withCmd(cmds)__        }__        Boolean disableNetwork = DockerHelper.getProperty(DockerConstants.DOCKER_DISABLE_NETWORK, configuration, message, Boolean.class)___        if (disableNetwork != null) {_            commitCmd.withDisableNetwork(disableNetwork)__        }__        String[] envs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_ENV, message)___        if (envs != null) {_            commitCmd.withEnv(envs)__        }__        ExposedPorts exposedPorts = DockerHelper.getProperty(DockerConstants.DOCKER_EXPOSED_PORTS, configuration, message, ExposedPorts.class)___        if (exposedPorts != null) {_            commitCmd.withExposedPorts(exposedPorts)__        }__        String hostname = DockerHelper.getProperty(DockerConstants.DOCKER_HOSTNAME, configuration, message, String.class)___        if (hostname != null) {_            commitCmd.withHostname(hostname)__        }__        Integer memory = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY, configuration, message, Integer.class)___        if (memory != null) {_            commitCmd.withMemory(memory)__        }__        Integer memorySwap = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_SWAP, configuration, message, Integer.class)___        if (memorySwap != null) {_            commitCmd.withMemorySwap(memorySwap)__        }__        String msg = DockerHelper.getProperty(DockerConstants.DOCKER_MESSAGE, configuration, message, String.class)___        if (msg != null) {_            commitCmd.withMessage(msg)__        }__        Boolean openStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_OPEN_STD_IN, configuration, message, Boolean.class)___        if (openStdIn != null) {_            commitCmd.withOpenStdin(openStdIn)__        }__        Boolean pause = DockerHelper.getProperty(DockerConstants.DOCKER_PAUSE, configuration, message, Boolean.class)___        if (pause != null) {_            commitCmd.withPause(pause)__        }__        String[] portSpecs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_PORT_SPECS, message)___        if (portSpecs != null) {_            commitCmd.withPortSpecs(portSpecs)__        }__        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        if (repository != null) {_            commitCmd.withRepository(repository)__        }__        Boolean stdInOnce = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_ONCE, configuration, message, Boolean.class)___        if (stdInOnce != null) {_            commitCmd.withStdinOnce(stdInOnce)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            commitCmd.withTag(tag)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            commitCmd.withTty(tty)__        }__        String user = DockerHelper.getProperty(DockerConstants.DOCKER_USER, configuration, message, String.class)___        if (user != null) {_            commitCmd.withUser(user)__        }__        Volumes volumes = DockerHelper.getProperty(DockerConstants.DOCKER_VOLUMES, configuration, message, Volumes.class)___        if (volumes != null) {_            commitCmd.withVolumes(volumes)__        }__        String workingDir = DockerHelper.getProperty(DockerConstants.DOCKER_WORKING_DIR, configuration, message, String.class)___        if (workingDir != null) {_            commitCmd.withWorkingDir(workingDir)__        }__        return commitCmd___    };produces,a,commit,container,request,param,client,param,message,return,throws,docker,exception;private,commit,cmd,execute,commit,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,commit,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,commit,cmd,commit,cmd,client,commit,cmd,container,id,string,author,docker,helper,get,property,docker,constants,configuration,message,string,class,if,author,null,commit,cmd,with,author,author,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,commit,cmd,with,attach,stderr,attach,std,err,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,in,null,commit,cmd,with,attach,stdin,attach,std,in,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,commit,cmd,with,attach,stdout,attach,std,out,string,cmds,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmds,null,commit,cmd,with,cmd,cmds,boolean,disable,network,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,disable,network,null,commit,cmd,with,disable,network,disable,network,string,envs,docker,helper,parse,delimited,string,header,docker,constants,message,if,envs,null,commit,cmd,with,env,envs,exposed,ports,exposed,ports,docker,helper,get,property,docker,constants,configuration,message,exposed,ports,class,if,exposed,ports,null,commit,cmd,with,exposed,ports,exposed,ports,string,hostname,docker,helper,get,property,docker,constants,configuration,message,string,class,if,hostname,null,commit,cmd,with,hostname,hostname,integer,memory,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,memory,null,commit,cmd,with,memory,memory,integer,memory,swap,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,memory,swap,null,commit,cmd,with,memory,swap,memory,swap,string,msg,docker,helper,get,property,docker,constants,configuration,message,string,class,if,msg,null,commit,cmd,with,message,msg,boolean,open,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,open,std,in,null,commit,cmd,with,open,stdin,open,std,in,boolean,pause,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,pause,null,commit,cmd,with,pause,pause,string,port,specs,docker,helper,parse,delimited,string,header,docker,constants,message,if,port,specs,null,commit,cmd,with,port,specs,port,specs,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,if,repository,null,commit,cmd,with,repository,repository,boolean,std,in,once,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,once,null,commit,cmd,with,stdin,once,std,in,once,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,commit,cmd,with,tag,tag,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,commit,cmd,with,tty,tty,string,user,docker,helper,get,property,docker,constants,configuration,message,string,class,if,user,null,commit,cmd,with,user,user,volumes,volumes,docker,helper,get,property,docker,constants,configuration,message,volumes,class,if,volumes,null,commit,cmd,with,volumes,volumes,string,working,dir,docker,helper,get,property,docker,constants,configuration,message,string,class,if,working,dir,null,commit,cmd,with,working,dir,working,dir,return,commit,cmd
DockerProducer -> private CommitCmd executeCommitContainerRequest(DockerClient client, Message message) throws DockerException;1429199966;Produces a commit container request__@param client_@param message_@return_@throws DockerException;private CommitCmd executeCommitContainerRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Commit Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        CommitCmd commitCmd = client.commitCmd(containerId)___        String author = DockerHelper.getProperty(DockerConstants.DOCKER_AUTHOR, configuration, message, String.class)___        if (author != null) {_            commitCmd.withAuthor(author)__        }__        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null) {_            commitCmd.withAttachStderr(attachStdErr)__        }__        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        if (attachStdIn != null) {_            commitCmd.withAttachStdin(attachStdIn)__        }__        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null) {_            commitCmd.withAttachStdout(attachStdOut)__        }__        String[] cmds = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmds != null) {_            commitCmd.withCmd(cmds)__        }__        Boolean disableNetwork = DockerHelper.getProperty(DockerConstants.DOCKER_DISABLE_NETWORK, configuration, message, Boolean.class)___        if (disableNetwork != null) {_            commitCmd.withDisableNetwork(disableNetwork)__        }__        String[] envs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_ENV, message)___        if (envs != null) {_            commitCmd.withEnv(envs)__        }__        ExposedPorts exposedPorts = DockerHelper.getProperty(DockerConstants.DOCKER_EXPOSED_PORTS, configuration, message, ExposedPorts.class)___        if (exposedPorts != null) {_            commitCmd.withExposedPorts(exposedPorts)__        }__        String hostname = DockerHelper.getProperty(DockerConstants.DOCKER_HOSTNAME, configuration, message, String.class)___        if (hostname != null) {_            commitCmd.withHostname(hostname)__        }__        Integer memory = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY, configuration, message, Integer.class)___        if (memory != null) {_            commitCmd.withMemory(memory)__        }__        Integer memorySwap = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_SWAP, configuration, message, Integer.class)___        if (memorySwap != null) {_            commitCmd.withMemorySwap(memorySwap)__        }__        String msg = DockerHelper.getProperty(DockerConstants.DOCKER_MESSAGE, configuration, message, String.class)___        if (msg != null) {_            commitCmd.withMessage(msg)__        }__        Boolean openStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_OPEN_STD_IN, configuration, message, Boolean.class)___        if (openStdIn != null) {_            commitCmd.withOpenStdin(openStdIn)__        }__        Boolean pause = DockerHelper.getProperty(DockerConstants.DOCKER_PAUSE, configuration, message, Boolean.class)___        if (pause != null) {_            commitCmd.withPause(pause)__        }__        String[] portSpecs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_PORT_SPECS, message)___        if (portSpecs != null) {_            commitCmd.withPortSpecs(portSpecs)__        }__        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        if (repository != null) {_            commitCmd.withRepository(repository)__        }__        Boolean stdInOnce = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_ONCE, configuration, message, Boolean.class)___        if (stdInOnce != null) {_            commitCmd.withStdinOnce(stdInOnce)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            commitCmd.withTag(tag)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            commitCmd.withTty(tty)__        }__        String user = DockerHelper.getProperty(DockerConstants.DOCKER_USER, configuration, message, String.class)___        if (user != null) {_            commitCmd.withUser(user)__        }__        Volumes volumes = DockerHelper.getProperty(DockerConstants.DOCKER_VOLUMES, configuration, message, Volumes.class)___        if (volumes != null) {_            commitCmd.withVolumes(volumes)__        }__        String workingDir = DockerHelper.getProperty(DockerConstants.DOCKER_WORKING_DIR, configuration, message, String.class)___        if (workingDir != null) {_            commitCmd.withWorkingDir(workingDir)__        }__        return commitCmd___    };produces,a,commit,container,request,param,client,param,message,return,throws,docker,exception;private,commit,cmd,execute,commit,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,commit,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,commit,cmd,commit,cmd,client,commit,cmd,container,id,string,author,docker,helper,get,property,docker,constants,configuration,message,string,class,if,author,null,commit,cmd,with,author,author,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,commit,cmd,with,attach,stderr,attach,std,err,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,in,null,commit,cmd,with,attach,stdin,attach,std,in,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,commit,cmd,with,attach,stdout,attach,std,out,string,cmds,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmds,null,commit,cmd,with,cmd,cmds,boolean,disable,network,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,disable,network,null,commit,cmd,with,disable,network,disable,network,string,envs,docker,helper,parse,delimited,string,header,docker,constants,message,if,envs,null,commit,cmd,with,env,envs,exposed,ports,exposed,ports,docker,helper,get,property,docker,constants,configuration,message,exposed,ports,class,if,exposed,ports,null,commit,cmd,with,exposed,ports,exposed,ports,string,hostname,docker,helper,get,property,docker,constants,configuration,message,string,class,if,hostname,null,commit,cmd,with,hostname,hostname,integer,memory,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,memory,null,commit,cmd,with,memory,memory,integer,memory,swap,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,memory,swap,null,commit,cmd,with,memory,swap,memory,swap,string,msg,docker,helper,get,property,docker,constants,configuration,message,string,class,if,msg,null,commit,cmd,with,message,msg,boolean,open,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,open,std,in,null,commit,cmd,with,open,stdin,open,std,in,boolean,pause,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,pause,null,commit,cmd,with,pause,pause,string,port,specs,docker,helper,parse,delimited,string,header,docker,constants,message,if,port,specs,null,commit,cmd,with,port,specs,port,specs,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,if,repository,null,commit,cmd,with,repository,repository,boolean,std,in,once,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,once,null,commit,cmd,with,stdin,once,std,in,once,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,commit,cmd,with,tag,tag,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,commit,cmd,with,tty,tty,string,user,docker,helper,get,property,docker,constants,configuration,message,string,class,if,user,null,commit,cmd,with,user,user,volumes,volumes,docker,helper,get,property,docker,constants,configuration,message,volumes,class,if,volumes,null,commit,cmd,with,volumes,volumes,string,working,dir,docker,helper,get,property,docker,constants,configuration,message,string,class,if,working,dir,null,commit,cmd,with,working,dir,working,dir,return,commit,cmd
DockerProducer -> private CommitCmd executeCommitContainerRequest(DockerClient client, Message message) throws DockerException;1433489320;Produces a commit container request__@param client_@param message_@return_@throws DockerException;private CommitCmd executeCommitContainerRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Commit Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        CommitCmd commitCmd = client.commitCmd(containerId)___        String author = DockerHelper.getProperty(DockerConstants.DOCKER_AUTHOR, configuration, message, String.class)___        if (author != null) {_            commitCmd.withAuthor(author)__        }__        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null) {_            commitCmd.withAttachStderr(attachStdErr)__        }__        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        if (attachStdIn != null) {_            commitCmd.withAttachStdin(attachStdIn)__        }__        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null) {_            commitCmd.withAttachStdout(attachStdOut)__        }__        String[] cmds = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmds != null) {_            commitCmd.withCmd(cmds)__        }__        Boolean disableNetwork = DockerHelper.getProperty(DockerConstants.DOCKER_DISABLE_NETWORK, configuration, message, Boolean.class)___        if (disableNetwork != null) {_            commitCmd.withDisableNetwork(disableNetwork)__        }__        String[] envs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_ENV, message)___        if (envs != null) {_            commitCmd.withEnv(envs)__        }__        ExposedPorts exposedPorts = DockerHelper.getProperty(DockerConstants.DOCKER_EXPOSED_PORTS, configuration, message, ExposedPorts.class)___        if (exposedPorts != null) {_            commitCmd.withExposedPorts(exposedPorts)__        }__        String hostname = DockerHelper.getProperty(DockerConstants.DOCKER_HOSTNAME, configuration, message, String.class)___        if (hostname != null) {_            commitCmd.withHostname(hostname)__        }__        Integer memory = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY, configuration, message, Integer.class)___        if (memory != null) {_            commitCmd.withMemory(memory)__        }__        Integer memorySwap = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_SWAP, configuration, message, Integer.class)___        if (memorySwap != null) {_            commitCmd.withMemorySwap(memorySwap)__        }__        String msg = DockerHelper.getProperty(DockerConstants.DOCKER_MESSAGE, configuration, message, String.class)___        if (msg != null) {_            commitCmd.withMessage(msg)__        }__        Boolean openStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_OPEN_STD_IN, configuration, message, Boolean.class)___        if (openStdIn != null) {_            commitCmd.withOpenStdin(openStdIn)__        }__        Boolean pause = DockerHelper.getProperty(DockerConstants.DOCKER_PAUSE, configuration, message, Boolean.class)___        if (pause != null) {_            commitCmd.withPause(pause)__        }__        String[] portSpecs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_PORT_SPECS, message)___        if (portSpecs != null) {_            commitCmd.withPortSpecs(portSpecs)__        }__        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        if (repository != null) {_            commitCmd.withRepository(repository)__        }__        Boolean stdInOnce = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_ONCE, configuration, message, Boolean.class)___        if (stdInOnce != null) {_            commitCmd.withStdinOnce(stdInOnce)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            commitCmd.withTag(tag)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            commitCmd.withTty(tty)__        }__        String user = DockerHelper.getProperty(DockerConstants.DOCKER_USER, configuration, message, String.class)___        if (user != null) {_            commitCmd.withUser(user)__        }__        Volumes volumes = DockerHelper.getProperty(DockerConstants.DOCKER_VOLUMES, configuration, message, Volumes.class)___        if (volumes != null) {_            commitCmd.withVolumes(volumes)__        }__        String workingDir = DockerHelper.getProperty(DockerConstants.DOCKER_WORKING_DIR, configuration, message, String.class)___        if (workingDir != null) {_            commitCmd.withWorkingDir(workingDir)__        }__        return commitCmd___    };produces,a,commit,container,request,param,client,param,message,return,throws,docker,exception;private,commit,cmd,execute,commit,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,commit,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,commit,cmd,commit,cmd,client,commit,cmd,container,id,string,author,docker,helper,get,property,docker,constants,configuration,message,string,class,if,author,null,commit,cmd,with,author,author,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,commit,cmd,with,attach,stderr,attach,std,err,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,in,null,commit,cmd,with,attach,stdin,attach,std,in,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,commit,cmd,with,attach,stdout,attach,std,out,string,cmds,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmds,null,commit,cmd,with,cmd,cmds,boolean,disable,network,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,disable,network,null,commit,cmd,with,disable,network,disable,network,string,envs,docker,helper,parse,delimited,string,header,docker,constants,message,if,envs,null,commit,cmd,with,env,envs,exposed,ports,exposed,ports,docker,helper,get,property,docker,constants,configuration,message,exposed,ports,class,if,exposed,ports,null,commit,cmd,with,exposed,ports,exposed,ports,string,hostname,docker,helper,get,property,docker,constants,configuration,message,string,class,if,hostname,null,commit,cmd,with,hostname,hostname,integer,memory,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,memory,null,commit,cmd,with,memory,memory,integer,memory,swap,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,memory,swap,null,commit,cmd,with,memory,swap,memory,swap,string,msg,docker,helper,get,property,docker,constants,configuration,message,string,class,if,msg,null,commit,cmd,with,message,msg,boolean,open,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,open,std,in,null,commit,cmd,with,open,stdin,open,std,in,boolean,pause,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,pause,null,commit,cmd,with,pause,pause,string,port,specs,docker,helper,parse,delimited,string,header,docker,constants,message,if,port,specs,null,commit,cmd,with,port,specs,port,specs,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,if,repository,null,commit,cmd,with,repository,repository,boolean,std,in,once,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,once,null,commit,cmd,with,stdin,once,std,in,once,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,commit,cmd,with,tag,tag,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,commit,cmd,with,tty,tty,string,user,docker,helper,get,property,docker,constants,configuration,message,string,class,if,user,null,commit,cmd,with,user,user,volumes,volumes,docker,helper,get,property,docker,constants,configuration,message,volumes,class,if,volumes,null,commit,cmd,with,volumes,volumes,string,working,dir,docker,helper,get,property,docker,constants,configuration,message,string,class,if,working,dir,null,commit,cmd,with,working,dir,working,dir,return,commit,cmd
DockerProducer -> private CommitCmd executeCommitContainerRequest(DockerClient client, Message message) throws DockerException;1440239526;Produces a commit container request__@param client_@param message_@return_@throws DockerException;private CommitCmd executeCommitContainerRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Commit Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        CommitCmd commitCmd = client.commitCmd(containerId)___        String author = DockerHelper.getProperty(DockerConstants.DOCKER_AUTHOR, configuration, message, String.class)___        if (author != null) {_            commitCmd.withAuthor(author)__        }__        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null) {_            commitCmd.withAttachStderr(attachStdErr)__        }__        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        if (attachStdIn != null) {_            commitCmd.withAttachStdin(attachStdIn)__        }__        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null) {_            commitCmd.withAttachStdout(attachStdOut)__        }__        String[] cmds = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmds != null) {_            commitCmd.withCmd(cmds)__        }__        Boolean disableNetwork = DockerHelper.getProperty(DockerConstants.DOCKER_DISABLE_NETWORK, configuration, message, Boolean.class)___        if (disableNetwork != null) {_            commitCmd.withDisableNetwork(disableNetwork)__        }__        String[] envs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_ENV, message)___        if (envs != null) {_            commitCmd.withEnv(envs)__        }__        ExposedPorts exposedPorts = DockerHelper.getProperty(DockerConstants.DOCKER_EXPOSED_PORTS, configuration, message, ExposedPorts.class)___        if (exposedPorts != null) {_            commitCmd.withExposedPorts(exposedPorts)__        }__        String hostname = DockerHelper.getProperty(DockerConstants.DOCKER_HOSTNAME, configuration, message, String.class)___        if (hostname != null) {_            commitCmd.withHostname(hostname)__        }__        Integer memory = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY, configuration, message, Integer.class)___        if (memory != null) {_            commitCmd.withMemory(memory)__        }__        Integer memorySwap = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_SWAP, configuration, message, Integer.class)___        if (memorySwap != null) {_            commitCmd.withMemorySwap(memorySwap)__        }__        String msg = DockerHelper.getProperty(DockerConstants.DOCKER_MESSAGE, configuration, message, String.class)___        if (msg != null) {_            commitCmd.withMessage(msg)__        }__        Boolean openStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_OPEN_STD_IN, configuration, message, Boolean.class)___        if (openStdIn != null) {_            commitCmd.withOpenStdin(openStdIn)__        }__        Boolean pause = DockerHelper.getProperty(DockerConstants.DOCKER_PAUSE, configuration, message, Boolean.class)___        if (pause != null) {_            commitCmd.withPause(pause)__        }__        String[] portSpecs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_PORT_SPECS, message)___        if (portSpecs != null) {_            commitCmd.withPortSpecs(portSpecs)__        }__        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        if (repository != null) {_            commitCmd.withRepository(repository)__        }__        Boolean stdInOnce = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_ONCE, configuration, message, Boolean.class)___        if (stdInOnce != null) {_            commitCmd.withStdinOnce(stdInOnce)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            commitCmd.withTag(tag)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            commitCmd.withTty(tty)__        }__        String user = DockerHelper.getProperty(DockerConstants.DOCKER_USER, configuration, message, String.class)___        if (user != null) {_            commitCmd.withUser(user)__        }__        Volumes volumes = DockerHelper.getProperty(DockerConstants.DOCKER_VOLUMES, configuration, message, Volumes.class)___        if (volumes != null) {_            commitCmd.withVolumes(volumes)__        }__        String workingDir = DockerHelper.getProperty(DockerConstants.DOCKER_WORKING_DIR, configuration, message, String.class)___        if (workingDir != null) {_            commitCmd.withWorkingDir(workingDir)__        }__        return commitCmd___    };produces,a,commit,container,request,param,client,param,message,return,throws,docker,exception;private,commit,cmd,execute,commit,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,commit,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,commit,cmd,commit,cmd,client,commit,cmd,container,id,string,author,docker,helper,get,property,docker,constants,configuration,message,string,class,if,author,null,commit,cmd,with,author,author,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,commit,cmd,with,attach,stderr,attach,std,err,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,in,null,commit,cmd,with,attach,stdin,attach,std,in,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,commit,cmd,with,attach,stdout,attach,std,out,string,cmds,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmds,null,commit,cmd,with,cmd,cmds,boolean,disable,network,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,disable,network,null,commit,cmd,with,disable,network,disable,network,string,envs,docker,helper,parse,delimited,string,header,docker,constants,message,if,envs,null,commit,cmd,with,env,envs,exposed,ports,exposed,ports,docker,helper,get,property,docker,constants,configuration,message,exposed,ports,class,if,exposed,ports,null,commit,cmd,with,exposed,ports,exposed,ports,string,hostname,docker,helper,get,property,docker,constants,configuration,message,string,class,if,hostname,null,commit,cmd,with,hostname,hostname,integer,memory,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,memory,null,commit,cmd,with,memory,memory,integer,memory,swap,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,memory,swap,null,commit,cmd,with,memory,swap,memory,swap,string,msg,docker,helper,get,property,docker,constants,configuration,message,string,class,if,msg,null,commit,cmd,with,message,msg,boolean,open,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,open,std,in,null,commit,cmd,with,open,stdin,open,std,in,boolean,pause,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,pause,null,commit,cmd,with,pause,pause,string,port,specs,docker,helper,parse,delimited,string,header,docker,constants,message,if,port,specs,null,commit,cmd,with,port,specs,port,specs,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,if,repository,null,commit,cmd,with,repository,repository,boolean,std,in,once,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,once,null,commit,cmd,with,stdin,once,std,in,once,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,commit,cmd,with,tag,tag,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,commit,cmd,with,tty,tty,string,user,docker,helper,get,property,docker,constants,configuration,message,string,class,if,user,null,commit,cmd,with,user,user,volumes,volumes,docker,helper,get,property,docker,constants,configuration,message,volumes,class,if,volumes,null,commit,cmd,with,volumes,volumes,string,working,dir,docker,helper,get,property,docker,constants,configuration,message,string,class,if,working,dir,null,commit,cmd,with,working,dir,working,dir,return,commit,cmd
DockerProducer -> private CommitCmd executeCommitContainerRequest(DockerClient client, Message message) throws DockerException;1474362454;Produces a commit container request__@param client_@param message_@return_@throws DockerException;private CommitCmd executeCommitContainerRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Commit Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        CommitCmd commitCmd = client.commitCmd(containerId)___        String author = DockerHelper.getProperty(DockerConstants.DOCKER_AUTHOR, configuration, message, String.class)___        if (author != null) {_            commitCmd.withAuthor(author)__        }__        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null) {_            commitCmd.withAttachStderr(attachStdErr)__        }__        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        if (attachStdIn != null) {_            commitCmd.withAttachStdin(attachStdIn)__        }__        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null) {_            commitCmd.withAttachStdout(attachStdOut)__        }__        String[] cmds = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmds != null) {_            commitCmd.withCmd(cmds)__        }__        Boolean disableNetwork = DockerHelper.getProperty(DockerConstants.DOCKER_DISABLE_NETWORK, configuration, message, Boolean.class)___        if (disableNetwork != null) {_            commitCmd.withDisableNetwork(disableNetwork)__        }__        String[] envs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_ENV, message)___        if (envs != null) {_            commitCmd.withEnv(envs)__        }__        ExposedPorts exposedPorts = DockerHelper.getProperty(DockerConstants.DOCKER_EXPOSED_PORTS, configuration, message, ExposedPorts.class)___        if (exposedPorts != null) {_            commitCmd.withExposedPorts(exposedPorts)__        }__        String hostname = DockerHelper.getProperty(DockerConstants.DOCKER_HOSTNAME, configuration, message, String.class)___        if (hostname != null) {_            commitCmd.withHostname(hostname)__        }__        Integer memory = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY, configuration, message, Integer.class)___        if (memory != null) {_            commitCmd.withMemory(memory)__        }__        Integer memorySwap = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_SWAP, configuration, message, Integer.class)___        if (memorySwap != null) {_            commitCmd.withMemorySwap(memorySwap)__        }__        String msg = DockerHelper.getProperty(DockerConstants.DOCKER_MESSAGE, configuration, message, String.class)___        if (msg != null) {_            commitCmd.withMessage(msg)__        }__        Boolean openStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_OPEN_STD_IN, configuration, message, Boolean.class)___        if (openStdIn != null) {_            commitCmd.withOpenStdin(openStdIn)__        }__        Boolean pause = DockerHelper.getProperty(DockerConstants.DOCKER_PAUSE, configuration, message, Boolean.class)___        if (pause != null) {_            commitCmd.withPause(pause)__        }__        String[] portSpecs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_PORT_SPECS, message)___        if (portSpecs != null) {_            commitCmd.withPortSpecs(portSpecs)__        }__        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        if (repository != null) {_            commitCmd.withRepository(repository)__        }__        Boolean stdInOnce = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_ONCE, configuration, message, Boolean.class)___        if (stdInOnce != null) {_            commitCmd.withStdinOnce(stdInOnce)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            commitCmd.withTag(tag)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            commitCmd.withTty(tty)__        }__        String user = DockerHelper.getProperty(DockerConstants.DOCKER_USER, configuration, message, String.class)___        if (user != null) {_            commitCmd.withUser(user)__        }__        Volumes volumes = DockerHelper.getProperty(DockerConstants.DOCKER_VOLUMES, configuration, message, Volumes.class)___        if (volumes != null) {_            commitCmd.withVolumes(volumes)__        }__        String workingDir = DockerHelper.getProperty(DockerConstants.DOCKER_WORKING_DIR, configuration, message, String.class)___        if (workingDir != null) {_            commitCmd.withWorkingDir(workingDir)__        }__        return commitCmd___    };produces,a,commit,container,request,param,client,param,message,return,throws,docker,exception;private,commit,cmd,execute,commit,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,commit,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,commit,cmd,commit,cmd,client,commit,cmd,container,id,string,author,docker,helper,get,property,docker,constants,configuration,message,string,class,if,author,null,commit,cmd,with,author,author,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,commit,cmd,with,attach,stderr,attach,std,err,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,in,null,commit,cmd,with,attach,stdin,attach,std,in,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,commit,cmd,with,attach,stdout,attach,std,out,string,cmds,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmds,null,commit,cmd,with,cmd,cmds,boolean,disable,network,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,disable,network,null,commit,cmd,with,disable,network,disable,network,string,envs,docker,helper,parse,delimited,string,header,docker,constants,message,if,envs,null,commit,cmd,with,env,envs,exposed,ports,exposed,ports,docker,helper,get,property,docker,constants,configuration,message,exposed,ports,class,if,exposed,ports,null,commit,cmd,with,exposed,ports,exposed,ports,string,hostname,docker,helper,get,property,docker,constants,configuration,message,string,class,if,hostname,null,commit,cmd,with,hostname,hostname,integer,memory,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,memory,null,commit,cmd,with,memory,memory,integer,memory,swap,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,memory,swap,null,commit,cmd,with,memory,swap,memory,swap,string,msg,docker,helper,get,property,docker,constants,configuration,message,string,class,if,msg,null,commit,cmd,with,message,msg,boolean,open,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,open,std,in,null,commit,cmd,with,open,stdin,open,std,in,boolean,pause,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,pause,null,commit,cmd,with,pause,pause,string,port,specs,docker,helper,parse,delimited,string,header,docker,constants,message,if,port,specs,null,commit,cmd,with,port,specs,port,specs,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,if,repository,null,commit,cmd,with,repository,repository,boolean,std,in,once,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,once,null,commit,cmd,with,stdin,once,std,in,once,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,commit,cmd,with,tag,tag,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,commit,cmd,with,tty,tty,string,user,docker,helper,get,property,docker,constants,configuration,message,string,class,if,user,null,commit,cmd,with,user,user,volumes,volumes,docker,helper,get,property,docker,constants,configuration,message,volumes,class,if,volumes,null,commit,cmd,with,volumes,volumes,string,working,dir,docker,helper,get,property,docker,constants,configuration,message,string,class,if,working,dir,null,commit,cmd,with,working,dir,working,dir,return,commit,cmd
DockerProducer -> private CommitCmd executeCommitContainerRequest(DockerClient client, Message message) throws DockerException;1531637865;Produces a commit container request__@param client_@param message_@return_@throws DockerException;private CommitCmd executeCommitContainerRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Commit Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        CommitCmd commitCmd = client.commitCmd(containerId)___        String author = DockerHelper.getProperty(DockerConstants.DOCKER_AUTHOR, configuration, message, String.class)___        if (author != null) {_            commitCmd.withAuthor(author)__        }__        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null) {_            commitCmd.withAttachStderr(attachStdErr)__        }__        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        if (attachStdIn != null) {_            commitCmd.withAttachStdin(attachStdIn)__        }__        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null) {_            commitCmd.withAttachStdout(attachStdOut)__        }__        String[] cmds = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmds != null) {_            commitCmd.withCmd(cmds)__        }__        Boolean disableNetwork = DockerHelper.getProperty(DockerConstants.DOCKER_DISABLE_NETWORK, configuration, message, Boolean.class)___        if (disableNetwork != null) {_            commitCmd.withDisableNetwork(disableNetwork)__        }__        String[] envs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_ENV, message)___        if (envs != null) {_            commitCmd.withEnv(envs)__        }__        ExposedPorts exposedPorts = DockerHelper.getProperty(DockerConstants.DOCKER_EXPOSED_PORTS, configuration, message, ExposedPorts.class)___        if (exposedPorts != null) {_            commitCmd.withExposedPorts(exposedPorts)__        }__        String hostname = DockerHelper.getProperty(DockerConstants.DOCKER_HOSTNAME, configuration, message, String.class)___        if (hostname != null) {_            commitCmd.withHostname(hostname)__        }__        Integer memory = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY, configuration, message, Integer.class)___        if (memory != null) {_            commitCmd.withMemory(memory)__        }__        Integer memorySwap = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_SWAP, configuration, message, Integer.class)___        if (memorySwap != null) {_            commitCmd.withMemorySwap(memorySwap)__        }__        String msg = DockerHelper.getProperty(DockerConstants.DOCKER_MESSAGE, configuration, message, String.class)___        if (msg != null) {_            commitCmd.withMessage(msg)__        }__        Boolean openStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_OPEN_STD_IN, configuration, message, Boolean.class)___        if (openStdIn != null) {_            commitCmd.withOpenStdin(openStdIn)__        }__        Boolean pause = DockerHelper.getProperty(DockerConstants.DOCKER_PAUSE, configuration, message, Boolean.class)___        if (pause != null) {_            commitCmd.withPause(pause)__        }__        String[] portSpecs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_PORT_SPECS, message)___        if (portSpecs != null) {_            commitCmd.withPortSpecs(portSpecs)__        }__        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        if (repository != null) {_            commitCmd.withRepository(repository)__        }__        Boolean stdInOnce = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_ONCE, configuration, message, Boolean.class)___        if (stdInOnce != null) {_            commitCmd.withStdinOnce(stdInOnce)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            commitCmd.withTag(tag)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            commitCmd.withTty(tty)__        }__        String user = DockerHelper.getProperty(DockerConstants.DOCKER_USER, configuration, message, String.class)___        if (user != null) {_            commitCmd.withUser(user)__        }__        Volumes volumes = DockerHelper.getProperty(DockerConstants.DOCKER_VOLUMES, configuration, message, Volumes.class)___        if (volumes != null) {_            commitCmd.withVolumes(volumes)__        }__        String workingDir = DockerHelper.getProperty(DockerConstants.DOCKER_WORKING_DIR, configuration, message, String.class)___        if (workingDir != null) {_            commitCmd.withWorkingDir(workingDir)__        }__        return commitCmd___    };produces,a,commit,container,request,param,client,param,message,return,throws,docker,exception;private,commit,cmd,execute,commit,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,commit,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,commit,cmd,commit,cmd,client,commit,cmd,container,id,string,author,docker,helper,get,property,docker,constants,configuration,message,string,class,if,author,null,commit,cmd,with,author,author,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,commit,cmd,with,attach,stderr,attach,std,err,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,in,null,commit,cmd,with,attach,stdin,attach,std,in,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,commit,cmd,with,attach,stdout,attach,std,out,string,cmds,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmds,null,commit,cmd,with,cmd,cmds,boolean,disable,network,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,disable,network,null,commit,cmd,with,disable,network,disable,network,string,envs,docker,helper,parse,delimited,string,header,docker,constants,message,if,envs,null,commit,cmd,with,env,envs,exposed,ports,exposed,ports,docker,helper,get,property,docker,constants,configuration,message,exposed,ports,class,if,exposed,ports,null,commit,cmd,with,exposed,ports,exposed,ports,string,hostname,docker,helper,get,property,docker,constants,configuration,message,string,class,if,hostname,null,commit,cmd,with,hostname,hostname,integer,memory,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,memory,null,commit,cmd,with,memory,memory,integer,memory,swap,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,memory,swap,null,commit,cmd,with,memory,swap,memory,swap,string,msg,docker,helper,get,property,docker,constants,configuration,message,string,class,if,msg,null,commit,cmd,with,message,msg,boolean,open,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,open,std,in,null,commit,cmd,with,open,stdin,open,std,in,boolean,pause,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,pause,null,commit,cmd,with,pause,pause,string,port,specs,docker,helper,parse,delimited,string,header,docker,constants,message,if,port,specs,null,commit,cmd,with,port,specs,port,specs,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,if,repository,null,commit,cmd,with,repository,repository,boolean,std,in,once,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,once,null,commit,cmd,with,stdin,once,std,in,once,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,commit,cmd,with,tag,tag,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,commit,cmd,with,tty,tty,string,user,docker,helper,get,property,docker,constants,configuration,message,string,class,if,user,null,commit,cmd,with,user,user,volumes,volumes,docker,helper,get,property,docker,constants,configuration,message,volumes,class,if,volumes,null,commit,cmd,with,volumes,volumes,string,working,dir,docker,helper,get,property,docker,constants,configuration,message,string,class,if,working,dir,null,commit,cmd,with,working,dir,working,dir,return,commit,cmd
DockerProducer -> private CommitCmd executeCommitContainerRequest(DockerClient client, Message message) throws DockerException;1540108163;Produces a commit container request__@param client_@param message_@return_@throws DockerException;private CommitCmd executeCommitContainerRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Commit Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        CommitCmd commitCmd = client.commitCmd(containerId)___        String author = DockerHelper.getProperty(DockerConstants.DOCKER_AUTHOR, configuration, message, String.class)___        if (author != null) {_            commitCmd.withAuthor(author)__        }__        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null) {_            commitCmd.withAttachStderr(attachStdErr)__        }__        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        if (attachStdIn != null) {_            commitCmd.withAttachStdin(attachStdIn)__        }__        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null) {_            commitCmd.withAttachStdout(attachStdOut)__        }__        String[] cmds = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmds != null) {_            commitCmd.withCmd(cmds)__        }__        Boolean disableNetwork = DockerHelper.getProperty(DockerConstants.DOCKER_DISABLE_NETWORK, configuration, message, Boolean.class)___        if (disableNetwork != null) {_            commitCmd.withDisableNetwork(disableNetwork)__        }__        String[] envs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_ENV, message)___        if (envs != null) {_            commitCmd.withEnv(envs)__        }__        ExposedPorts exposedPorts = DockerHelper.getProperty(DockerConstants.DOCKER_EXPOSED_PORTS, configuration, message, ExposedPorts.class)___        if (exposedPorts != null) {_            commitCmd.withExposedPorts(exposedPorts)__        }__        String hostname = DockerHelper.getProperty(DockerConstants.DOCKER_HOSTNAME, configuration, message, String.class)___        if (hostname != null) {_            commitCmd.withHostname(hostname)__        }__        Integer memory = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY, configuration, message, Integer.class)___        if (memory != null) {_            commitCmd.withMemory(memory)__        }__        Integer memorySwap = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_SWAP, configuration, message, Integer.class)___        if (memorySwap != null) {_            commitCmd.withMemorySwap(memorySwap)__        }__        String msg = DockerHelper.getProperty(DockerConstants.DOCKER_MESSAGE, configuration, message, String.class)___        if (msg != null) {_            commitCmd.withMessage(msg)__        }__        Boolean openStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_OPEN_STD_IN, configuration, message, Boolean.class)___        if (openStdIn != null) {_            commitCmd.withOpenStdin(openStdIn)__        }__        Boolean pause = DockerHelper.getProperty(DockerConstants.DOCKER_PAUSE, configuration, message, Boolean.class)___        if (pause != null) {_            commitCmd.withPause(pause)__        }__        String[] portSpecs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_PORT_SPECS, message)___        if (portSpecs != null) {_            commitCmd.withPortSpecs(portSpecs)__        }__        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        if (repository != null) {_            commitCmd.withRepository(repository)__        }__        Boolean stdInOnce = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_ONCE, configuration, message, Boolean.class)___        if (stdInOnce != null) {_            commitCmd.withStdinOnce(stdInOnce)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            commitCmd.withTag(tag)__        }__        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null) {_            commitCmd.withTty(tty)__        }__        String user = DockerHelper.getProperty(DockerConstants.DOCKER_USER, configuration, message, String.class)___        if (user != null) {_            commitCmd.withUser(user)__        }__        Volumes volumes = DockerHelper.getProperty(DockerConstants.DOCKER_VOLUMES, configuration, message, Volumes.class)___        if (volumes != null) {_            commitCmd.withVolumes(volumes)__        }__        String workingDir = DockerHelper.getProperty(DockerConstants.DOCKER_WORKING_DIR, configuration, message, String.class)___        if (workingDir != null) {_            commitCmd.withWorkingDir(workingDir)__        }__        return commitCmd___    };produces,a,commit,container,request,param,client,param,message,return,throws,docker,exception;private,commit,cmd,execute,commit,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,commit,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,commit,cmd,commit,cmd,client,commit,cmd,container,id,string,author,docker,helper,get,property,docker,constants,configuration,message,string,class,if,author,null,commit,cmd,with,author,author,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,commit,cmd,with,attach,stderr,attach,std,err,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,in,null,commit,cmd,with,attach,stdin,attach,std,in,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,commit,cmd,with,attach,stdout,attach,std,out,string,cmds,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmds,null,commit,cmd,with,cmd,cmds,boolean,disable,network,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,disable,network,null,commit,cmd,with,disable,network,disable,network,string,envs,docker,helper,parse,delimited,string,header,docker,constants,message,if,envs,null,commit,cmd,with,env,envs,exposed,ports,exposed,ports,docker,helper,get,property,docker,constants,configuration,message,exposed,ports,class,if,exposed,ports,null,commit,cmd,with,exposed,ports,exposed,ports,string,hostname,docker,helper,get,property,docker,constants,configuration,message,string,class,if,hostname,null,commit,cmd,with,hostname,hostname,integer,memory,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,memory,null,commit,cmd,with,memory,memory,integer,memory,swap,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,memory,swap,null,commit,cmd,with,memory,swap,memory,swap,string,msg,docker,helper,get,property,docker,constants,configuration,message,string,class,if,msg,null,commit,cmd,with,message,msg,boolean,open,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,open,std,in,null,commit,cmd,with,open,stdin,open,std,in,boolean,pause,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,pause,null,commit,cmd,with,pause,pause,string,port,specs,docker,helper,parse,delimited,string,header,docker,constants,message,if,port,specs,null,commit,cmd,with,port,specs,port,specs,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,if,repository,null,commit,cmd,with,repository,repository,boolean,std,in,once,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,once,null,commit,cmd,with,stdin,once,std,in,once,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,commit,cmd,with,tag,tag,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,commit,cmd,with,tty,tty,string,user,docker,helper,get,property,docker,constants,configuration,message,string,class,if,user,null,commit,cmd,with,user,user,volumes,volumes,docker,helper,get,property,docker,constants,configuration,message,volumes,class,if,volumes,null,commit,cmd,with,volumes,volumes,string,working,dir,docker,helper,get,property,docker,constants,configuration,message,string,class,if,working,dir,null,commit,cmd,with,working,dir,working,dir,return,commit,cmd
DockerProducer -> private ListImagesCmd executeListImagesRequest(DockerClient client, Message message);1424675020;Performs a list images request__@param client_@param message_@return;private ListImagesCmd executeListImagesRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Images List Request")___        ListImagesCmd listImagesCmd = client.listImagesCmd()___        String filter = DockerHelper.getProperty(DockerConstants.DOCKER_FILTER, configuration, message, String.class)___        if (filter != null) {_            listImagesCmd.withFilters(filter)__        }__        Boolean showAll = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_ALL, configuration, message, Boolean.class)___        if (showAll != null) {_            listImagesCmd.withShowAll(showAll)__        }__        return listImagesCmd___    };performs,a,list,images,request,param,client,param,message,return;private,list,images,cmd,execute,list,images,request,docker,client,client,message,message,logger,debug,executing,docker,images,list,request,list,images,cmd,list,images,cmd,client,list,images,cmd,string,filter,docker,helper,get,property,docker,constants,configuration,message,string,class,if,filter,null,list,images,cmd,with,filters,filter,boolean,show,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,all,null,list,images,cmd,with,show,all,show,all,return,list,images,cmd
DockerProducer -> private ListImagesCmd executeListImagesRequest(DockerClient client, Message message);1424675476;Performs a list images request__@param client_@param message_@return;private ListImagesCmd executeListImagesRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Images List Request")___        ListImagesCmd listImagesCmd = client.listImagesCmd()___        String filter = DockerHelper.getProperty(DockerConstants.DOCKER_FILTER, configuration, message, String.class)___        if (filter != null) {_            listImagesCmd.withFilters(filter)__        }__        Boolean showAll = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_ALL, configuration, message, Boolean.class)___        if (showAll != null) {_            listImagesCmd.withShowAll(showAll)__        }__        return listImagesCmd___    };performs,a,list,images,request,param,client,param,message,return;private,list,images,cmd,execute,list,images,request,docker,client,client,message,message,logger,debug,executing,docker,images,list,request,list,images,cmd,list,images,cmd,client,list,images,cmd,string,filter,docker,helper,get,property,docker,constants,configuration,message,string,class,if,filter,null,list,images,cmd,with,filters,filter,boolean,show,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,all,null,list,images,cmd,with,show,all,show,all,return,list,images,cmd
DockerProducer -> private ListImagesCmd executeListImagesRequest(DockerClient client, Message message);1424877876;Performs a list images request__@param client_@param message_@return;private ListImagesCmd executeListImagesRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Images List Request")___        ListImagesCmd listImagesCmd = client.listImagesCmd()___        String filter = DockerHelper.getProperty(DockerConstants.DOCKER_FILTER, configuration, message, String.class)___        if (filter != null) {_            listImagesCmd.withFilters(filter)__        }__        Boolean showAll = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_ALL, configuration, message, Boolean.class)___        if (showAll != null) {_            listImagesCmd.withShowAll(showAll)__        }__        return listImagesCmd___    };performs,a,list,images,request,param,client,param,message,return;private,list,images,cmd,execute,list,images,request,docker,client,client,message,message,logger,debug,executing,docker,images,list,request,list,images,cmd,list,images,cmd,client,list,images,cmd,string,filter,docker,helper,get,property,docker,constants,configuration,message,string,class,if,filter,null,list,images,cmd,with,filters,filter,boolean,show,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,all,null,list,images,cmd,with,show,all,show,all,return,list,images,cmd
DockerProducer -> private ListImagesCmd executeListImagesRequest(DockerClient client, Message message);1429199966;Performs a list images request__@param client_@param message_@return;private ListImagesCmd executeListImagesRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Images List Request")___        ListImagesCmd listImagesCmd = client.listImagesCmd()___        String filter = DockerHelper.getProperty(DockerConstants.DOCKER_FILTER, configuration, message, String.class)___        if (filter != null) {_            listImagesCmd.withFilters(filter)__        }__        Boolean showAll = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_ALL, configuration, message, Boolean.class)___        if (showAll != null) {_            listImagesCmd.withShowAll(showAll)__        }__        return listImagesCmd___    };performs,a,list,images,request,param,client,param,message,return;private,list,images,cmd,execute,list,images,request,docker,client,client,message,message,logger,debug,executing,docker,images,list,request,list,images,cmd,list,images,cmd,client,list,images,cmd,string,filter,docker,helper,get,property,docker,constants,configuration,message,string,class,if,filter,null,list,images,cmd,with,filters,filter,boolean,show,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,all,null,list,images,cmd,with,show,all,show,all,return,list,images,cmd
DockerProducer -> private ListImagesCmd executeListImagesRequest(DockerClient client, Message message);1433489320;Performs a list images request__@param client_@param message_@return;private ListImagesCmd executeListImagesRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Images List Request")___        ListImagesCmd listImagesCmd = client.listImagesCmd()___        String filter = DockerHelper.getProperty(DockerConstants.DOCKER_FILTER, configuration, message, String.class)___        if (filter != null) {_            listImagesCmd.withFilters(filter)__        }__        Boolean showAll = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_ALL, configuration, message, Boolean.class)___        if (showAll != null) {_            listImagesCmd.withShowAll(showAll)__        }__        return listImagesCmd___    };performs,a,list,images,request,param,client,param,message,return;private,list,images,cmd,execute,list,images,request,docker,client,client,message,message,logger,debug,executing,docker,images,list,request,list,images,cmd,list,images,cmd,client,list,images,cmd,string,filter,docker,helper,get,property,docker,constants,configuration,message,string,class,if,filter,null,list,images,cmd,with,filters,filter,boolean,show,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,all,null,list,images,cmd,with,show,all,show,all,return,list,images,cmd
DockerProducer -> private ListImagesCmd executeListImagesRequest(DockerClient client, Message message);1440239526;Performs a list images request__@param client_@param message_@return;private ListImagesCmd executeListImagesRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Images List Request")___        ListImagesCmd listImagesCmd = client.listImagesCmd()___        String filter = DockerHelper.getProperty(DockerConstants.DOCKER_FILTER, configuration, message, String.class)___        if (filter != null) {_            listImagesCmd.withFilters(filter)__        }__        Boolean showAll = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_ALL, configuration, message, Boolean.class)___        if (showAll != null) {_            listImagesCmd.withShowAll(showAll)__        }__        return listImagesCmd___    };performs,a,list,images,request,param,client,param,message,return;private,list,images,cmd,execute,list,images,request,docker,client,client,message,message,logger,debug,executing,docker,images,list,request,list,images,cmd,list,images,cmd,client,list,images,cmd,string,filter,docker,helper,get,property,docker,constants,configuration,message,string,class,if,filter,null,list,images,cmd,with,filters,filter,boolean,show,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,all,null,list,images,cmd,with,show,all,show,all,return,list,images,cmd
DockerProducer -> private ListImagesCmd executeListImagesRequest(DockerClient client, Message message);1474362454;Performs a list images request__@param client_@param message_@return;private ListImagesCmd executeListImagesRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Images List Request")___        ListImagesCmd listImagesCmd = client.listImagesCmd()___        String filter = DockerHelper.getProperty(DockerConstants.DOCKER_FILTER, configuration, message, String.class)___        if (filter != null) {_            listImagesCmd.withLabelFilter(filter)__        }__        Boolean showAll = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_ALL, configuration, message, Boolean.class)___        if (showAll != null) {_            listImagesCmd.withShowAll(showAll)__        }__        return listImagesCmd___    };performs,a,list,images,request,param,client,param,message,return;private,list,images,cmd,execute,list,images,request,docker,client,client,message,message,logger,debug,executing,docker,images,list,request,list,images,cmd,list,images,cmd,client,list,images,cmd,string,filter,docker,helper,get,property,docker,constants,configuration,message,string,class,if,filter,null,list,images,cmd,with,label,filter,filter,boolean,show,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,all,null,list,images,cmd,with,show,all,show,all,return,list,images,cmd
DockerProducer -> private ListImagesCmd executeListImagesRequest(DockerClient client, Message message);1531637865;Performs a list images request__@param client_@param message_@return;private ListImagesCmd executeListImagesRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Images List Request")___        ListImagesCmd listImagesCmd = client.listImagesCmd()___        String filter = DockerHelper.getProperty(DockerConstants.DOCKER_FILTER, configuration, message, String.class)___        if (filter != null) {_            listImagesCmd.withLabelFilter(filter)__        }__        Boolean showAll = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_ALL, configuration, message, Boolean.class)___        if (showAll != null) {_            listImagesCmd.withShowAll(showAll)__        }__        return listImagesCmd___    };performs,a,list,images,request,param,client,param,message,return;private,list,images,cmd,execute,list,images,request,docker,client,client,message,message,logger,debug,executing,docker,images,list,request,list,images,cmd,list,images,cmd,client,list,images,cmd,string,filter,docker,helper,get,property,docker,constants,configuration,message,string,class,if,filter,null,list,images,cmd,with,label,filter,filter,boolean,show,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,all,null,list,images,cmd,with,show,all,show,all,return,list,images,cmd
DockerProducer -> private ListImagesCmd executeListImagesRequest(DockerClient client, Message message);1540108163;Performs a list images request__@param client_@param message_@return;private ListImagesCmd executeListImagesRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Images List Request")___        ListImagesCmd listImagesCmd = client.listImagesCmd()___        String filter = DockerHelper.getProperty(DockerConstants.DOCKER_FILTER, configuration, message, String.class)___        if (filter != null) {_            listImagesCmd.withLabelFilter(filter)__        }__        Boolean showAll = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_ALL, configuration, message, Boolean.class)___        if (showAll != null) {_            listImagesCmd.withShowAll(showAll)__        }__        return listImagesCmd___    };performs,a,list,images,request,param,client,param,message,return;private,list,images,cmd,execute,list,images,request,docker,client,client,message,message,logger,debug,executing,docker,images,list,request,list,images,cmd,list,images,cmd,client,list,images,cmd,string,filter,docker,helper,get,property,docker,constants,configuration,message,string,class,if,filter,null,list,images,cmd,with,label,filter,filter,boolean,show,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,all,null,list,images,cmd,with,show,all,show,all,return,list,images,cmd
DockerProducer -> private CreateImageCmd executeCreateImageRequest(DockerClient client, Message message) throws DockerException;1415211488;Performs a create image request__@param client_@param message_@return_@throws DockerException;private CreateImageCmd executeCreateImageRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Create Image Request")__        _        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)__        _        InputStream inputStream = message.getBody(InputStream.class)__        _        CreateImageCmd createImageCmd = client.createImageCmd(repository, inputStream)__        _        return createImageCmd___    };performs,a,create,image,request,param,client,param,message,return,throws,docker,exception;private,create,image,cmd,execute,create,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,create,image,request,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,input,stream,input,stream,message,get,body,input,stream,class,create,image,cmd,create,image,cmd,client,create,image,cmd,repository,input,stream,return,create,image,cmd
DockerProducer -> private CreateImageCmd executeCreateImageRequest(DockerClient client, Message message) throws DockerException;1415517409;Performs a create image request__@param client_@param message_@return_@throws DockerException;private CreateImageCmd executeCreateImageRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Create Image Request")__        _        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)__        _        InputStream inputStream = message.getBody(InputStream.class)__        _        CreateImageCmd createImageCmd = client.createImageCmd(repository, inputStream)__        _        return createImageCmd___    };performs,a,create,image,request,param,client,param,message,return,throws,docker,exception;private,create,image,cmd,execute,create,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,create,image,request,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,input,stream,input,stream,message,get,body,input,stream,class,create,image,cmd,create,image,cmd,client,create,image,cmd,repository,input,stream,return,create,image,cmd
DockerProducer -> private CreateImageCmd executeCreateImageRequest(DockerClient client, Message message) throws DockerException;1423234542;Performs a create image request__@param client_@param message_@return_@throws DockerException;private CreateImageCmd executeCreateImageRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Create Image Request")__        _        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)__        _        InputStream inputStream = message.getBody(InputStream.class)__        _        CreateImageCmd createImageCmd = client.createImageCmd(repository, inputStream)__        _        return createImageCmd___    };performs,a,create,image,request,param,client,param,message,return,throws,docker,exception;private,create,image,cmd,execute,create,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,create,image,request,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,input,stream,input,stream,message,get,body,input,stream,class,create,image,cmd,create,image,cmd,client,create,image,cmd,repository,input,stream,return,create,image,cmd
DockerProducer -> private ListImagesCmd executeListImagesRequest(DockerClient client, Message message) throws DockerException;1415211488;Performs a list images request__@param client_@param message_@return_@throws DockerException;private ListImagesCmd executeListImagesRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Images List Request")__        _        ListImagesCmd listImagesCmd = client.listImagesCmd()__        _        String filter = DockerHelper.getProperty(DockerConstants.DOCKER_FILTER, configuration, message, String.class)__        _        if (filter != null) {_            listImagesCmd.withFilter(filter)__        }_        _        Boolean showAll = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_ALL, configuration, message, Boolean.class)__        _        if (showAll != null && showAll) {_            listImagesCmd.withShowAll(showAll)__        }__        return listImagesCmd___    };performs,a,list,images,request,param,client,param,message,return,throws,docker,exception;private,list,images,cmd,execute,list,images,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,images,list,request,list,images,cmd,list,images,cmd,client,list,images,cmd,string,filter,docker,helper,get,property,docker,constants,configuration,message,string,class,if,filter,null,list,images,cmd,with,filter,filter,boolean,show,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,all,null,show,all,list,images,cmd,with,show,all,show,all,return,list,images,cmd
DockerProducer -> private ListImagesCmd executeListImagesRequest(DockerClient client, Message message) throws DockerException;1415517409;Performs a list images request__@param client_@param message_@return_@throws DockerException;private ListImagesCmd executeListImagesRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Images List Request")__        _        ListImagesCmd listImagesCmd = client.listImagesCmd()__        _        String filter = DockerHelper.getProperty(DockerConstants.DOCKER_FILTER, configuration, message, String.class)__        _        if (filter != null) {_            listImagesCmd.withFilter(filter)__        }_        _        Boolean showAll = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_ALL, configuration, message, Boolean.class)__        _        if (showAll != null && showAll) {_            listImagesCmd.withShowAll(showAll)__        }__        return listImagesCmd___    };performs,a,list,images,request,param,client,param,message,return,throws,docker,exception;private,list,images,cmd,execute,list,images,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,images,list,request,list,images,cmd,list,images,cmd,client,list,images,cmd,string,filter,docker,helper,get,property,docker,constants,configuration,message,string,class,if,filter,null,list,images,cmd,with,filter,filter,boolean,show,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,all,null,show,all,list,images,cmd,with,show,all,show,all,return,list,images,cmd
DockerProducer -> private ListImagesCmd executeListImagesRequest(DockerClient client, Message message) throws DockerException;1423234542;Performs a list images request__@param client_@param message_@return_@throws DockerException;private ListImagesCmd executeListImagesRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Images List Request")__        _        ListImagesCmd listImagesCmd = client.listImagesCmd()__        _        String filter = DockerHelper.getProperty(DockerConstants.DOCKER_FILTER, configuration, message, String.class)__        _        if (filter != null) {_            listImagesCmd.withFilters(filter)__        }_        _        Boolean showAll = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_ALL, configuration, message, Boolean.class)__        _        if (showAll != null && showAll) {_            listImagesCmd.withShowAll(showAll)__        }__        return listImagesCmd___    };performs,a,list,images,request,param,client,param,message,return,throws,docker,exception;private,list,images,cmd,execute,list,images,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,images,list,request,list,images,cmd,list,images,cmd,client,list,images,cmd,string,filter,docker,helper,get,property,docker,constants,configuration,message,string,class,if,filter,null,list,images,cmd,with,filters,filter,boolean,show,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,all,null,show,all,list,images,cmd,with,show,all,show,all,return,list,images,cmd
DockerProducer -> private UnpauseContainerCmd executeUnpauseContainerRequest(DockerClient client, Message message) throws DockerException;1415211488;Produces a unpause container request__@param client_@param message_@return_@throws DockerException;private UnpauseContainerCmd executeUnpauseContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Unpause Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        _        UnpauseContainerCmd unpauseContainerCmd = client.unpauseContainerCmd(containerId)__        _        return unpauseContainerCmd___    };produces,a,unpause,container,request,param,client,param,message,return,throws,docker,exception;private,unpause,container,cmd,execute,unpause,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,unpause,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,unpause,container,cmd,unpause,container,cmd,client,unpause,container,cmd,container,id,return,unpause,container,cmd
DockerProducer -> private UnpauseContainerCmd executeUnpauseContainerRequest(DockerClient client, Message message) throws DockerException;1415517409;Produces a unpause container request__@param client_@param message_@return_@throws DockerException;private UnpauseContainerCmd executeUnpauseContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Unpause Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        _        UnpauseContainerCmd unpauseContainerCmd = client.unpauseContainerCmd(containerId)__        _        return unpauseContainerCmd___    };produces,a,unpause,container,request,param,client,param,message,return,throws,docker,exception;private,unpause,container,cmd,execute,unpause,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,unpause,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,unpause,container,cmd,unpause,container,cmd,client,unpause,container,cmd,container,id,return,unpause,container,cmd
DockerProducer -> private UnpauseContainerCmd executeUnpauseContainerRequest(DockerClient client, Message message) throws DockerException;1423234542;Produces a unpause container request__@param client_@param message_@return_@throws DockerException;private UnpauseContainerCmd executeUnpauseContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Unpause Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        _        UnpauseContainerCmd unpauseContainerCmd = client.unpauseContainerCmd(containerId)__        _        return unpauseContainerCmd___    };produces,a,unpause,container,request,param,client,param,message,return,throws,docker,exception;private,unpause,container,cmd,execute,unpause,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,unpause,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,unpause,container,cmd,unpause,container,cmd,client,unpause,container,cmd,container,id,return,unpause,container,cmd
DockerProducer -> private ListContainersCmd executeListContainersRequest(DockerClient client, Message message) throws DockerException;1415211488;Produces a list containers request__@param client_@param message_@return_@throws DockerException;private ListContainersCmd executeListContainersRequest(DockerClient client, Message message) throws DockerException {_  _        LOGGER.debug("Executing Docker List Container Request")__        _        ListContainersCmd listContainersCmd = client.listContainersCmd()__ _        Boolean showSize = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_SIZE, configuration, message, Boolean.class)__        if (showSize != null && showSize) {_            listContainersCmd.withShowSize(showSize)__        }_        _        Boolean showAll = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_ALL, configuration, message, Boolean.class)__        if (showAll != null && showAll) {_            listContainersCmd.withShowAll(showAll)__        }_       _        String before = DockerHelper.getProperty(DockerConstants.DOCKER_BEFORE, configuration, message, String.class)__        if (before != null) {_            listContainersCmd.withBefore(before)__        }_        _        Integer limit = DockerHelper.getProperty(DockerConstants.DOCKER_LIMIT, configuration, message, Integer.class)__        if (limit != null) {_            listContainersCmd.withLimit(limit)__        }_        _        String since = DockerHelper.getProperty(DockerConstants.DOCKER_SINCE, configuration, message, String.class)__        if (since != null) {_            listContainersCmd.withSince(since)__        }__        return listContainersCmd___    };produces,a,list,containers,request,param,client,param,message,return,throws,docker,exception;private,list,containers,cmd,execute,list,containers,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,list,container,request,list,containers,cmd,list,containers,cmd,client,list,containers,cmd,boolean,show,size,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,size,null,show,size,list,containers,cmd,with,show,size,show,size,boolean,show,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,all,null,show,all,list,containers,cmd,with,show,all,show,all,string,before,docker,helper,get,property,docker,constants,configuration,message,string,class,if,before,null,list,containers,cmd,with,before,before,integer,limit,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,limit,null,list,containers,cmd,with,limit,limit,string,since,docker,helper,get,property,docker,constants,configuration,message,string,class,if,since,null,list,containers,cmd,with,since,since,return,list,containers,cmd
DockerProducer -> private ListContainersCmd executeListContainersRequest(DockerClient client, Message message) throws DockerException;1415517409;Produces a list containers request__@param client_@param message_@return_@throws DockerException;private ListContainersCmd executeListContainersRequest(DockerClient client, Message message) throws DockerException {_  _        LOGGER.debug("Executing Docker List Container Request")__        _        ListContainersCmd listContainersCmd = client.listContainersCmd()__ _        Boolean showSize = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_SIZE, configuration, message, Boolean.class)__        if (showSize != null && showSize) {_            listContainersCmd.withShowSize(showSize)__        }_        _        Boolean showAll = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_ALL, configuration, message, Boolean.class)__        if (showAll != null && showAll) {_            listContainersCmd.withShowAll(showAll)__        }_       _        String before = DockerHelper.getProperty(DockerConstants.DOCKER_BEFORE, configuration, message, String.class)__        if (before != null) {_            listContainersCmd.withBefore(before)__        }_        _        Integer limit = DockerHelper.getProperty(DockerConstants.DOCKER_LIMIT, configuration, message, Integer.class)__        if (limit != null) {_            listContainersCmd.withLimit(limit)__        }_        _        String since = DockerHelper.getProperty(DockerConstants.DOCKER_SINCE, configuration, message, String.class)__        if (since != null) {_            listContainersCmd.withSince(since)__        }__        return listContainersCmd___    };produces,a,list,containers,request,param,client,param,message,return,throws,docker,exception;private,list,containers,cmd,execute,list,containers,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,list,container,request,list,containers,cmd,list,containers,cmd,client,list,containers,cmd,boolean,show,size,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,size,null,show,size,list,containers,cmd,with,show,size,show,size,boolean,show,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,all,null,show,all,list,containers,cmd,with,show,all,show,all,string,before,docker,helper,get,property,docker,constants,configuration,message,string,class,if,before,null,list,containers,cmd,with,before,before,integer,limit,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,limit,null,list,containers,cmd,with,limit,limit,string,since,docker,helper,get,property,docker,constants,configuration,message,string,class,if,since,null,list,containers,cmd,with,since,since,return,list,containers,cmd
DockerProducer -> private ListContainersCmd executeListContainersRequest(DockerClient client, Message message) throws DockerException;1423234542;Produces a list containers request__@param client_@param message_@return_@throws DockerException;private ListContainersCmd executeListContainersRequest(DockerClient client, Message message) throws DockerException {_  _        LOGGER.debug("Executing Docker List Container Request")__        _        ListContainersCmd listContainersCmd = client.listContainersCmd()__ _        Boolean showSize = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_SIZE, configuration, message, Boolean.class)__        if (showSize != null && showSize) {_            listContainersCmd.withShowSize(showSize)__        }_        _        Boolean showAll = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_ALL, configuration, message, Boolean.class)__        if (showAll != null && showAll) {_            listContainersCmd.withShowAll(showAll)__        }_       _        String before = DockerHelper.getProperty(DockerConstants.DOCKER_BEFORE, configuration, message, String.class)__        if (before != null) {_            listContainersCmd.withBefore(before)__        }_        _        Integer limit = DockerHelper.getProperty(DockerConstants.DOCKER_LIMIT, configuration, message, Integer.class)__        if (limit != null) {_            listContainersCmd.withLimit(limit)__        }_        _        String since = DockerHelper.getProperty(DockerConstants.DOCKER_SINCE, configuration, message, String.class)__        if (since != null) {_            listContainersCmd.withSince(since)__        }__        return listContainersCmd___    };produces,a,list,containers,request,param,client,param,message,return,throws,docker,exception;private,list,containers,cmd,execute,list,containers,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,list,container,request,list,containers,cmd,list,containers,cmd,client,list,containers,cmd,boolean,show,size,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,size,null,show,size,list,containers,cmd,with,show,size,show,size,boolean,show,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,all,null,show,all,list,containers,cmd,with,show,all,show,all,string,before,docker,helper,get,property,docker,constants,configuration,message,string,class,if,before,null,list,containers,cmd,with,before,before,integer,limit,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,limit,null,list,containers,cmd,with,limit,limit,string,since,docker,helper,get,property,docker,constants,configuration,message,string,class,if,since,null,list,containers,cmd,with,since,since,return,list,containers,cmd
DockerProducer -> private TopContainerCmd executeTopContainerRequest(DockerClient client, Message message);1424675020;Produces a top container request__@param client_@param message_@return;private TopContainerCmd executeTopContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Top Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        TopContainerCmd topContainerCmd = client.topContainerCmd(containerId)___        String psArgs = DockerHelper.getProperty(DockerConstants.DOCKER_PS_ARGS, configuration, message, String.class)___        if (psArgs != null) {_            topContainerCmd.withPsArgs(psArgs)__        }__        return topContainerCmd___    };produces,a,top,container,request,param,client,param,message,return;private,top,container,cmd,execute,top,container,request,docker,client,client,message,message,logger,debug,executing,docker,top,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,top,container,cmd,top,container,cmd,client,top,container,cmd,container,id,string,ps,args,docker,helper,get,property,docker,constants,configuration,message,string,class,if,ps,args,null,top,container,cmd,with,ps,args,ps,args,return,top,container,cmd
DockerProducer -> private TopContainerCmd executeTopContainerRequest(DockerClient client, Message message);1424675476;Produces a top container request__@param client_@param message_@return;private TopContainerCmd executeTopContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Top Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        TopContainerCmd topContainerCmd = client.topContainerCmd(containerId)___        String psArgs = DockerHelper.getProperty(DockerConstants.DOCKER_PS_ARGS, configuration, message, String.class)___        if (psArgs != null) {_            topContainerCmd.withPsArgs(psArgs)__        }__        return topContainerCmd___    };produces,a,top,container,request,param,client,param,message,return;private,top,container,cmd,execute,top,container,request,docker,client,client,message,message,logger,debug,executing,docker,top,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,top,container,cmd,top,container,cmd,client,top,container,cmd,container,id,string,ps,args,docker,helper,get,property,docker,constants,configuration,message,string,class,if,ps,args,null,top,container,cmd,with,ps,args,ps,args,return,top,container,cmd
DockerProducer -> private TopContainerCmd executeTopContainerRequest(DockerClient client, Message message);1424877876;Produces a top container request__@param client_@param message_@return;private TopContainerCmd executeTopContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Top Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        TopContainerCmd topContainerCmd = client.topContainerCmd(containerId)___        String psArgs = DockerHelper.getProperty(DockerConstants.DOCKER_PS_ARGS, configuration, message, String.class)___        if (psArgs != null) {_            topContainerCmd.withPsArgs(psArgs)__        }__        return topContainerCmd___    };produces,a,top,container,request,param,client,param,message,return;private,top,container,cmd,execute,top,container,request,docker,client,client,message,message,logger,debug,executing,docker,top,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,top,container,cmd,top,container,cmd,client,top,container,cmd,container,id,string,ps,args,docker,helper,get,property,docker,constants,configuration,message,string,class,if,ps,args,null,top,container,cmd,with,ps,args,ps,args,return,top,container,cmd
DockerProducer -> private TopContainerCmd executeTopContainerRequest(DockerClient client, Message message);1429199966;Produces a top container request__@param client_@param message_@return;private TopContainerCmd executeTopContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Top Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        TopContainerCmd topContainerCmd = client.topContainerCmd(containerId)___        String psArgs = DockerHelper.getProperty(DockerConstants.DOCKER_PS_ARGS, configuration, message, String.class)___        if (psArgs != null) {_            topContainerCmd.withPsArgs(psArgs)__        }__        return topContainerCmd___    };produces,a,top,container,request,param,client,param,message,return;private,top,container,cmd,execute,top,container,request,docker,client,client,message,message,logger,debug,executing,docker,top,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,top,container,cmd,top,container,cmd,client,top,container,cmd,container,id,string,ps,args,docker,helper,get,property,docker,constants,configuration,message,string,class,if,ps,args,null,top,container,cmd,with,ps,args,ps,args,return,top,container,cmd
DockerProducer -> private TopContainerCmd executeTopContainerRequest(DockerClient client, Message message);1433489320;Produces a top container request__@param client_@param message_@return;private TopContainerCmd executeTopContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Top Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        TopContainerCmd topContainerCmd = client.topContainerCmd(containerId)___        String psArgs = DockerHelper.getProperty(DockerConstants.DOCKER_PS_ARGS, configuration, message, String.class)___        if (psArgs != null) {_            topContainerCmd.withPsArgs(psArgs)__        }__        return topContainerCmd___    };produces,a,top,container,request,param,client,param,message,return;private,top,container,cmd,execute,top,container,request,docker,client,client,message,message,logger,debug,executing,docker,top,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,top,container,cmd,top,container,cmd,client,top,container,cmd,container,id,string,ps,args,docker,helper,get,property,docker,constants,configuration,message,string,class,if,ps,args,null,top,container,cmd,with,ps,args,ps,args,return,top,container,cmd
DockerProducer -> private TopContainerCmd executeTopContainerRequest(DockerClient client, Message message);1440239526;Produces a top container request__@param client_@param message_@return;private TopContainerCmd executeTopContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Top Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        TopContainerCmd topContainerCmd = client.topContainerCmd(containerId)___        String psArgs = DockerHelper.getProperty(DockerConstants.DOCKER_PS_ARGS, configuration, message, String.class)___        if (psArgs != null) {_            topContainerCmd.withPsArgs(psArgs)__        }__        return topContainerCmd___    };produces,a,top,container,request,param,client,param,message,return;private,top,container,cmd,execute,top,container,request,docker,client,client,message,message,logger,debug,executing,docker,top,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,top,container,cmd,top,container,cmd,client,top,container,cmd,container,id,string,ps,args,docker,helper,get,property,docker,constants,configuration,message,string,class,if,ps,args,null,top,container,cmd,with,ps,args,ps,args,return,top,container,cmd
DockerProducer -> private TopContainerCmd executeTopContainerRequest(DockerClient client, Message message);1474362454;Produces a top container request__@param client_@param message_@return;private TopContainerCmd executeTopContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Top Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        TopContainerCmd topContainerCmd = client.topContainerCmd(containerId)___        String psArgs = DockerHelper.getProperty(DockerConstants.DOCKER_PS_ARGS, configuration, message, String.class)___        if (psArgs != null) {_            topContainerCmd.withPsArgs(psArgs)__        }__        return topContainerCmd___    };produces,a,top,container,request,param,client,param,message,return;private,top,container,cmd,execute,top,container,request,docker,client,client,message,message,logger,debug,executing,docker,top,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,top,container,cmd,top,container,cmd,client,top,container,cmd,container,id,string,ps,args,docker,helper,get,property,docker,constants,configuration,message,string,class,if,ps,args,null,top,container,cmd,with,ps,args,ps,args,return,top,container,cmd
DockerProducer -> private TopContainerCmd executeTopContainerRequest(DockerClient client, Message message);1531637865;Produces a top container request__@param client_@param message_@return;private TopContainerCmd executeTopContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Top Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        TopContainerCmd topContainerCmd = client.topContainerCmd(containerId)___        String psArgs = DockerHelper.getProperty(DockerConstants.DOCKER_PS_ARGS, configuration, message, String.class)___        if (psArgs != null) {_            topContainerCmd.withPsArgs(psArgs)__        }__        return topContainerCmd___    };produces,a,top,container,request,param,client,param,message,return;private,top,container,cmd,execute,top,container,request,docker,client,client,message,message,logger,debug,executing,docker,top,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,top,container,cmd,top,container,cmd,client,top,container,cmd,container,id,string,ps,args,docker,helper,get,property,docker,constants,configuration,message,string,class,if,ps,args,null,top,container,cmd,with,ps,args,ps,args,return,top,container,cmd
DockerProducer -> private TopContainerCmd executeTopContainerRequest(DockerClient client, Message message);1540108163;Produces a top container request__@param client_@param message_@return;private TopContainerCmd executeTopContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Top Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        TopContainerCmd topContainerCmd = client.topContainerCmd(containerId)___        String psArgs = DockerHelper.getProperty(DockerConstants.DOCKER_PS_ARGS, configuration, message, String.class)___        if (psArgs != null) {_            topContainerCmd.withPsArgs(psArgs)__        }__        return topContainerCmd___    };produces,a,top,container,request,param,client,param,message,return;private,top,container,cmd,execute,top,container,request,docker,client,client,message,message,logger,debug,executing,docker,top,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,top,container,cmd,top,container,cmd,client,top,container,cmd,container,id,string,ps,args,docker,helper,get,property,docker,constants,configuration,message,string,class,if,ps,args,null,top,container,cmd,with,ps,args,ps,args,return,top,container,cmd
DockerProducer -> private InspectContainerCmd executeInspectContainerRequest(DockerClient client, Message message);1424675020;Produce a inspect container request__@param client_@param message_@return;private InspectContainerCmd executeInspectContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Inspect Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        InspectContainerCmd inspectContainerCmd = client.inspectContainerCmd(containerId)___        return inspectContainerCmd___    };produce,a,inspect,container,request,param,client,param,message,return;private,inspect,container,cmd,execute,inspect,container,request,docker,client,client,message,message,logger,debug,executing,docker,inspect,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,inspect,container,cmd,inspect,container,cmd,client,inspect,container,cmd,container,id,return,inspect,container,cmd
DockerProducer -> private InspectContainerCmd executeInspectContainerRequest(DockerClient client, Message message);1424675476;Produce a inspect container request__@param client_@param message_@return;private InspectContainerCmd executeInspectContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Inspect Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        InspectContainerCmd inspectContainerCmd = client.inspectContainerCmd(containerId)___        return inspectContainerCmd___    };produce,a,inspect,container,request,param,client,param,message,return;private,inspect,container,cmd,execute,inspect,container,request,docker,client,client,message,message,logger,debug,executing,docker,inspect,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,inspect,container,cmd,inspect,container,cmd,client,inspect,container,cmd,container,id,return,inspect,container,cmd
DockerProducer -> private InspectContainerCmd executeInspectContainerRequest(DockerClient client, Message message);1424877876;Produce a inspect container request__@param client_@param message_@return;private InspectContainerCmd executeInspectContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Inspect Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        InspectContainerCmd inspectContainerCmd = client.inspectContainerCmd(containerId)___        return inspectContainerCmd___    };produce,a,inspect,container,request,param,client,param,message,return;private,inspect,container,cmd,execute,inspect,container,request,docker,client,client,message,message,logger,debug,executing,docker,inspect,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,inspect,container,cmd,inspect,container,cmd,client,inspect,container,cmd,container,id,return,inspect,container,cmd
DockerProducer -> private InspectContainerCmd executeInspectContainerRequest(DockerClient client, Message message);1429199966;Produce a inspect container request__@param client_@param message_@return;private InspectContainerCmd executeInspectContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Inspect Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        InspectContainerCmd inspectContainerCmd = client.inspectContainerCmd(containerId)___        return inspectContainerCmd___    };produce,a,inspect,container,request,param,client,param,message,return;private,inspect,container,cmd,execute,inspect,container,request,docker,client,client,message,message,logger,debug,executing,docker,inspect,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,inspect,container,cmd,inspect,container,cmd,client,inspect,container,cmd,container,id,return,inspect,container,cmd
DockerProducer -> private InspectContainerCmd executeInspectContainerRequest(DockerClient client, Message message);1433489320;Produce a inspect container request__@param client_@param message_@return;private InspectContainerCmd executeInspectContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Inspect Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        InspectContainerCmd inspectContainerCmd = client.inspectContainerCmd(containerId)___        return inspectContainerCmd___    };produce,a,inspect,container,request,param,client,param,message,return;private,inspect,container,cmd,execute,inspect,container,request,docker,client,client,message,message,logger,debug,executing,docker,inspect,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,inspect,container,cmd,inspect,container,cmd,client,inspect,container,cmd,container,id,return,inspect,container,cmd
DockerProducer -> private InspectContainerCmd executeInspectContainerRequest(DockerClient client, Message message);1440239526;Produce a inspect container request__@param client_@param message_@return;private InspectContainerCmd executeInspectContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Inspect Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        InspectContainerCmd inspectContainerCmd = client.inspectContainerCmd(containerId)___        return inspectContainerCmd___    };produce,a,inspect,container,request,param,client,param,message,return;private,inspect,container,cmd,execute,inspect,container,request,docker,client,client,message,message,logger,debug,executing,docker,inspect,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,inspect,container,cmd,inspect,container,cmd,client,inspect,container,cmd,container,id,return,inspect,container,cmd
DockerProducer -> private InspectContainerCmd executeInspectContainerRequest(DockerClient client, Message message);1474362454;Produce a inspect container request__@param client_@param message_@return;private InspectContainerCmd executeInspectContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Inspect Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        InspectContainerCmd inspectContainerCmd = client.inspectContainerCmd(containerId)___        return inspectContainerCmd___    };produce,a,inspect,container,request,param,client,param,message,return;private,inspect,container,cmd,execute,inspect,container,request,docker,client,client,message,message,logger,debug,executing,docker,inspect,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,inspect,container,cmd,inspect,container,cmd,client,inspect,container,cmd,container,id,return,inspect,container,cmd
DockerProducer -> private InspectContainerCmd executeInspectContainerRequest(DockerClient client, Message message);1531637865;Produce a inspect container request__@param client_@param message_@return;private InspectContainerCmd executeInspectContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Inspect Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        InspectContainerCmd inspectContainerCmd = client.inspectContainerCmd(containerId)___        return inspectContainerCmd___    };produce,a,inspect,container,request,param,client,param,message,return;private,inspect,container,cmd,execute,inspect,container,request,docker,client,client,message,message,logger,debug,executing,docker,inspect,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,inspect,container,cmd,inspect,container,cmd,client,inspect,container,cmd,container,id,return,inspect,container,cmd
DockerProducer -> private InspectContainerCmd executeInspectContainerRequest(DockerClient client, Message message);1540108163;Produce a inspect container request__@param client_@param message_@return;private InspectContainerCmd executeInspectContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Inspect Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        InspectContainerCmd inspectContainerCmd = client.inspectContainerCmd(containerId)___        return inspectContainerCmd___    };produce,a,inspect,container,request,param,client,param,message,return;private,inspect,container,cmd,execute,inspect,container,request,docker,client,client,message,message,logger,debug,executing,docker,inspect,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,inspect,container,cmd,inspect,container,cmd,client,inspect,container,cmd,container,id,return,inspect,container,cmd
DockerProducer -> private CreateContainerCmd executeCreateContainerRequest(DockerClient client, Message message) throws DockerException;1415211488;Produce a create container request__@param client_@param message_@return_@throws DockerException;private CreateContainerCmd executeCreateContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker List Container Request")__        _        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)__        _        CreateContainerCmd createContainerCmd = client.createContainerCmd(imageId)__        _        String name = DockerHelper.getProperty(DockerConstants.DOCKER_NAME, configuration, message, String.class)___        if (name != null) {_            createContainerCmd.withName(name)__        }__        ExposedPort[] exposedPorts = DockerHelper.getArrayProperty(DockerConstants.DOCKER_EXPOSED_PORTS, message, ExposedPort.class)___        if (exposedPorts != null) {_            createContainerCmd.withExposedPorts(exposedPorts)__        }_        _        String workingDir = DockerHelper.getProperty(DockerConstants.DOCKER_WORKING_DIR, configuration, message, String.class)___        if (workingDir != null) {_            createContainerCmd.withWorkingDir(workingDir)__        }  _        _        Boolean disabledNetwork = DockerHelper.getProperty(DockerConstants.DOCKER_DISABLE_NETWORK, configuration, message, Boolean.class)___        if (disabledNetwork != null && disabledNetwork) {_            createContainerCmd.withDisableNetwork(disabledNetwork)__        }_        _        String hostName = DockerHelper.getProperty(DockerConstants.DOCKER_HOSTNAME, configuration, message, String.class)___        if (hostName != null) {_            createContainerCmd.withHostName(hostName)__        }  _        _        String[] portSpecs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_PORT_SPECS, message)___        if (portSpecs != null) {_            createContainerCmd.withPortSpecs(portSpecs)__        }_        _        String user = DockerHelper.getProperty(DockerConstants.DOCKER_USER, configuration, message, String.class)___        if (hostName != null) {_            createContainerCmd.withUser(user)__        }  _        _        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null && tty) {_            createContainerCmd.withTty(tty)__        }_        _        Boolean stdInOpen = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_OPEN, configuration, message, Boolean.class)___        if (stdInOpen != null && stdInOpen) {_            createContainerCmd.withStdinOpen(stdInOpen)__        }_        _        Boolean stdInOnce = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_ONCE, configuration, message, Boolean.class)___        if (stdInOnce != null && stdInOnce) {_            createContainerCmd.withStdInOnce(stdInOnce)__        }_        _        Long memoryLimit = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_LIMIT, configuration, message, Long.class)___        if (memoryLimit != null) {_            createContainerCmd.withMemoryLimit(memoryLimit)__        }__        Long memorySwap = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_SWAP, configuration, message, Long.class)___        if (memorySwap != null) {_            createContainerCmd.withMemorySwap(memorySwap)__        }_        _        Integer cpuShares = DockerHelper.getProperty(DockerConstants.DOCKER_CPU_SHARES, configuration, message, Integer.class)___        if (cpuShares != null) {_            createContainerCmd.withCpuShares(cpuShares)__        }_        _        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        if (attachStdIn != null && attachStdIn) {_            createContainerCmd.withAttachStdin(attachStdIn)__        }_  _        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null && attachStdOut) {_            createContainerCmd.withAttachStdout(attachStdOut)__        }_        _        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null && attachStdErr) {_            createContainerCmd.withAttachStderr(attachStdErr)__        }_        _        String[] env = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_ENV, message)___        if (env != null) {_            createContainerCmd.withEnv(env)__        }_        _        String[] cmd = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmd != null) {_            createContainerCmd.withCmd(env)__        }_        _        String[] dns = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_DNS, message)___        if (dns != null) {_            createContainerCmd.withDns(dns)__        }_        _        String image = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE, configuration, message, String.class)___        if (image != null) {_            createContainerCmd.withImage(image)__        }_        _        Volume[] volume = DockerHelper.getArrayProperty(DockerConstants.DOCKER_VOLUMES, message, Volume.class)___        if (volume != null) {_            createContainerCmd.withVolumes(volume)__        }_        _        String[] volumesFrom = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_VOLUMES_FROM, message)___        if (volumesFrom != null) {_            createContainerCmd.withVolumesFrom(volumesFrom)__        }_        _        return createContainerCmd___    };produce,a,create,container,request,param,client,param,message,return,throws,docker,exception;private,create,container,cmd,execute,create,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,list,container,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,create,container,cmd,create,container,cmd,client,create,container,cmd,image,id,string,name,docker,helper,get,property,docker,constants,configuration,message,string,class,if,name,null,create,container,cmd,with,name,name,exposed,port,exposed,ports,docker,helper,get,array,property,docker,constants,message,exposed,port,class,if,exposed,ports,null,create,container,cmd,with,exposed,ports,exposed,ports,string,working,dir,docker,helper,get,property,docker,constants,configuration,message,string,class,if,working,dir,null,create,container,cmd,with,working,dir,working,dir,boolean,disabled,network,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,disabled,network,null,disabled,network,create,container,cmd,with,disable,network,disabled,network,string,host,name,docker,helper,get,property,docker,constants,configuration,message,string,class,if,host,name,null,create,container,cmd,with,host,name,host,name,string,port,specs,docker,helper,parse,delimited,string,header,docker,constants,message,if,port,specs,null,create,container,cmd,with,port,specs,port,specs,string,user,docker,helper,get,property,docker,constants,configuration,message,string,class,if,host,name,null,create,container,cmd,with,user,user,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,tty,create,container,cmd,with,tty,tty,boolean,std,in,open,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,open,null,std,in,open,create,container,cmd,with,stdin,open,std,in,open,boolean,std,in,once,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,once,null,std,in,once,create,container,cmd,with,std,in,once,std,in,once,long,memory,limit,docker,helper,get,property,docker,constants,configuration,message,long,class,if,memory,limit,null,create,container,cmd,with,memory,limit,memory,limit,long,memory,swap,docker,helper,get,property,docker,constants,configuration,message,long,class,if,memory,swap,null,create,container,cmd,with,memory,swap,memory,swap,integer,cpu,shares,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,cpu,shares,null,create,container,cmd,with,cpu,shares,cpu,shares,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,in,null,attach,std,in,create,container,cmd,with,attach,stdin,attach,std,in,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,attach,std,out,create,container,cmd,with,attach,stdout,attach,std,out,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,attach,std,err,create,container,cmd,with,attach,stderr,attach,std,err,string,env,docker,helper,parse,delimited,string,header,docker,constants,message,if,env,null,create,container,cmd,with,env,env,string,cmd,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmd,null,create,container,cmd,with,cmd,env,string,dns,docker,helper,parse,delimited,string,header,docker,constants,message,if,dns,null,create,container,cmd,with,dns,dns,string,image,docker,helper,get,property,docker,constants,configuration,message,string,class,if,image,null,create,container,cmd,with,image,image,volume,volume,docker,helper,get,array,property,docker,constants,message,volume,class,if,volume,null,create,container,cmd,with,volumes,volume,string,volumes,from,docker,helper,parse,delimited,string,header,docker,constants,message,if,volumes,from,null,create,container,cmd,with,volumes,from,volumes,from,return,create,container,cmd
DockerProducer -> private CreateContainerCmd executeCreateContainerRequest(DockerClient client, Message message) throws DockerException;1415517409;Produce a create container request__@param client_@param message_@return_@throws DockerException;private CreateContainerCmd executeCreateContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker List Container Request")__        _        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)__        _        CreateContainerCmd createContainerCmd = client.createContainerCmd(imageId)__        _        String name = DockerHelper.getProperty(DockerConstants.DOCKER_NAME, configuration, message, String.class)___        if (name != null) {_            createContainerCmd.withName(name)__        }__        ExposedPort[] exposedPorts = DockerHelper.getArrayProperty(DockerConstants.DOCKER_EXPOSED_PORTS, message, ExposedPort.class)___        if (exposedPorts != null) {_            createContainerCmd.withExposedPorts(exposedPorts)__        }_        _        String workingDir = DockerHelper.getProperty(DockerConstants.DOCKER_WORKING_DIR, configuration, message, String.class)___        if (workingDir != null) {_            createContainerCmd.withWorkingDir(workingDir)__        }  _        _        Boolean disabledNetwork = DockerHelper.getProperty(DockerConstants.DOCKER_DISABLE_NETWORK, configuration, message, Boolean.class)___        if (disabledNetwork != null && disabledNetwork) {_            createContainerCmd.withDisableNetwork(disabledNetwork)__        }_        _        String hostName = DockerHelper.getProperty(DockerConstants.DOCKER_HOSTNAME, configuration, message, String.class)___        if (hostName != null) {_            createContainerCmd.withHostName(hostName)__        }  _        _        String[] portSpecs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_PORT_SPECS, message)___        if (portSpecs != null) {_            createContainerCmd.withPortSpecs(portSpecs)__        }_        _        String user = DockerHelper.getProperty(DockerConstants.DOCKER_USER, configuration, message, String.class)___        if (hostName != null) {_            createContainerCmd.withUser(user)__        }  _        _        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null && tty) {_            createContainerCmd.withTty(tty)__        }_        _        Boolean stdInOpen = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_OPEN, configuration, message, Boolean.class)___        if (stdInOpen != null && stdInOpen) {_            createContainerCmd.withStdinOpen(stdInOpen)__        }_        _        Boolean stdInOnce = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_ONCE, configuration, message, Boolean.class)___        if (stdInOnce != null && stdInOnce) {_            createContainerCmd.withStdInOnce(stdInOnce)__        }_        _        Long memoryLimit = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_LIMIT, configuration, message, Long.class)___        if (memoryLimit != null) {_            createContainerCmd.withMemoryLimit(memoryLimit)__        }__        Long memorySwap = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_SWAP, configuration, message, Long.class)___        if (memorySwap != null) {_            createContainerCmd.withMemorySwap(memorySwap)__        }_        _        Integer cpuShares = DockerHelper.getProperty(DockerConstants.DOCKER_CPU_SHARES, configuration, message, Integer.class)___        if (cpuShares != null) {_            createContainerCmd.withCpuShares(cpuShares)__        }_        _        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        if (attachStdIn != null && attachStdIn) {_            createContainerCmd.withAttachStdin(attachStdIn)__        }_  _        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null && attachStdOut) {_            createContainerCmd.withAttachStdout(attachStdOut)__        }_        _        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null && attachStdErr) {_            createContainerCmd.withAttachStderr(attachStdErr)__        }_        _        String[] env = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_ENV, message)___        if (env != null) {_            createContainerCmd.withEnv(env)__        }_        _        String[] cmd = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmd != null) {_            createContainerCmd.withCmd(env)__        }_        _        String[] dns = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_DNS, message)___        if (dns != null) {_            createContainerCmd.withDns(dns)__        }_        _        String image = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE, configuration, message, String.class)___        if (image != null) {_            createContainerCmd.withImage(image)__        }_        _        Volume[] volume = DockerHelper.getArrayProperty(DockerConstants.DOCKER_VOLUMES, message, Volume.class)___        if (volume != null) {_            createContainerCmd.withVolumes(volume)__        }_        _        String[] volumesFrom = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_VOLUMES_FROM, message)___        if (volumesFrom != null) {_            createContainerCmd.withVolumesFrom(volumesFrom)__        }_        _        return createContainerCmd___    };produce,a,create,container,request,param,client,param,message,return,throws,docker,exception;private,create,container,cmd,execute,create,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,list,container,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,create,container,cmd,create,container,cmd,client,create,container,cmd,image,id,string,name,docker,helper,get,property,docker,constants,configuration,message,string,class,if,name,null,create,container,cmd,with,name,name,exposed,port,exposed,ports,docker,helper,get,array,property,docker,constants,message,exposed,port,class,if,exposed,ports,null,create,container,cmd,with,exposed,ports,exposed,ports,string,working,dir,docker,helper,get,property,docker,constants,configuration,message,string,class,if,working,dir,null,create,container,cmd,with,working,dir,working,dir,boolean,disabled,network,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,disabled,network,null,disabled,network,create,container,cmd,with,disable,network,disabled,network,string,host,name,docker,helper,get,property,docker,constants,configuration,message,string,class,if,host,name,null,create,container,cmd,with,host,name,host,name,string,port,specs,docker,helper,parse,delimited,string,header,docker,constants,message,if,port,specs,null,create,container,cmd,with,port,specs,port,specs,string,user,docker,helper,get,property,docker,constants,configuration,message,string,class,if,host,name,null,create,container,cmd,with,user,user,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,tty,create,container,cmd,with,tty,tty,boolean,std,in,open,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,open,null,std,in,open,create,container,cmd,with,stdin,open,std,in,open,boolean,std,in,once,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,once,null,std,in,once,create,container,cmd,with,std,in,once,std,in,once,long,memory,limit,docker,helper,get,property,docker,constants,configuration,message,long,class,if,memory,limit,null,create,container,cmd,with,memory,limit,memory,limit,long,memory,swap,docker,helper,get,property,docker,constants,configuration,message,long,class,if,memory,swap,null,create,container,cmd,with,memory,swap,memory,swap,integer,cpu,shares,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,cpu,shares,null,create,container,cmd,with,cpu,shares,cpu,shares,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,in,null,attach,std,in,create,container,cmd,with,attach,stdin,attach,std,in,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,attach,std,out,create,container,cmd,with,attach,stdout,attach,std,out,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,attach,std,err,create,container,cmd,with,attach,stderr,attach,std,err,string,env,docker,helper,parse,delimited,string,header,docker,constants,message,if,env,null,create,container,cmd,with,env,env,string,cmd,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmd,null,create,container,cmd,with,cmd,env,string,dns,docker,helper,parse,delimited,string,header,docker,constants,message,if,dns,null,create,container,cmd,with,dns,dns,string,image,docker,helper,get,property,docker,constants,configuration,message,string,class,if,image,null,create,container,cmd,with,image,image,volume,volume,docker,helper,get,array,property,docker,constants,message,volume,class,if,volume,null,create,container,cmd,with,volumes,volume,string,volumes,from,docker,helper,parse,delimited,string,header,docker,constants,message,if,volumes,from,null,create,container,cmd,with,volumes,from,volumes,from,return,create,container,cmd
DockerProducer -> private CreateContainerCmd executeCreateContainerRequest(DockerClient client, Message message) throws DockerException;1423234542;Produce a create container request__@param client_@param message_@return_@throws DockerException;private CreateContainerCmd executeCreateContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker List Container Request")__        _        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)__        _        CreateContainerCmd createContainerCmd = client.createContainerCmd(imageId)__        _        String name = DockerHelper.getProperty(DockerConstants.DOCKER_NAME, configuration, message, String.class)___        if (name != null) {_            createContainerCmd.withName(name)__        }__        ExposedPort[] exposedPorts = DockerHelper.getArrayProperty(DockerConstants.DOCKER_EXPOSED_PORTS, message, ExposedPort.class)___        if (exposedPorts != null) {_            createContainerCmd.withExposedPorts(exposedPorts)__        }_        _        String workingDir = DockerHelper.getProperty(DockerConstants.DOCKER_WORKING_DIR, configuration, message, String.class)___        if (workingDir != null) {_            createContainerCmd.withWorkingDir(workingDir)__        }  _        _        Boolean disabledNetwork = DockerHelper.getProperty(DockerConstants.DOCKER_DISABLE_NETWORK, configuration, message, Boolean.class)___        if (disabledNetwork != null && disabledNetwork) {_            createContainerCmd.withDisableNetwork(disabledNetwork)__        }_        _        String hostName = DockerHelper.getProperty(DockerConstants.DOCKER_HOSTNAME, configuration, message, String.class)___        if (hostName != null) {_            createContainerCmd.withHostName(hostName)__        }  _        _        String[] portSpecs = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_PORT_SPECS, message)___        if (portSpecs != null) {_            createContainerCmd.withPortSpecs(portSpecs)__        }_        _        String user = DockerHelper.getProperty(DockerConstants.DOCKER_USER, configuration, message, String.class)___        if (hostName != null) {_            createContainerCmd.withUser(user)__        }  _        _        Boolean tty = DockerHelper.getProperty(DockerConstants.DOCKER_TTY, configuration, message, Boolean.class)___        if (tty != null && tty) {_            createContainerCmd.withTty(tty)__        }_        _        Boolean stdInOpen = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_OPEN, configuration, message, Boolean.class)___        if (stdInOpen != null && stdInOpen) {_            createContainerCmd.withStdinOpen(stdInOpen)__        }_        _        Boolean stdInOnce = DockerHelper.getProperty(DockerConstants.DOCKER_STD_IN_ONCE, configuration, message, Boolean.class)___        if (stdInOnce != null && stdInOnce) {_            createContainerCmd.withStdInOnce(stdInOnce)__        }_        _        Long memoryLimit = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_LIMIT, configuration, message, Long.class)___        if (memoryLimit != null) {_            createContainerCmd.withMemoryLimit(memoryLimit)__        }__        Long memorySwap = DockerHelper.getProperty(DockerConstants.DOCKER_MEMORY_SWAP, configuration, message, Long.class)___        if (memorySwap != null) {_            createContainerCmd.withMemorySwap(memorySwap)__        }_        _        Integer cpuShares = DockerHelper.getProperty(DockerConstants.DOCKER_CPU_SHARES, configuration, message, Integer.class)___        if (cpuShares != null) {_            createContainerCmd.withCpuShares(cpuShares)__        }_        _        Boolean attachStdIn = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_IN, configuration, message, Boolean.class)___        if (attachStdIn != null && attachStdIn) {_            createContainerCmd.withAttachStdin(attachStdIn)__        }_  _        Boolean attachStdOut = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_OUT, configuration, message, Boolean.class)___        if (attachStdOut != null && attachStdOut) {_            createContainerCmd.withAttachStdout(attachStdOut)__        }_        _        Boolean attachStdErr = DockerHelper.getProperty(DockerConstants.DOCKER_ATTACH_STD_ERR, configuration, message, Boolean.class)___        if (attachStdErr != null && attachStdErr) {_            createContainerCmd.withAttachStderr(attachStdErr)__        }_        _        String[] env = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_ENV, message)___        if (env != null) {_            createContainerCmd.withEnv(env)__        }_        _        String[] cmd = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_CMD, message)___        if (cmd != null) {_            createContainerCmd.withCmd(env)__        }_        _        String[] dns = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_DNS, message)___        if (dns != null) {_            createContainerCmd.withDns(dns)__        }_        _        String image = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE, configuration, message, String.class)___        if (image != null) {_            createContainerCmd.withImage(image)__        }_        _        Volume[] volume = DockerHelper.getArrayProperty(DockerConstants.DOCKER_VOLUMES, message, Volume.class)___        if (volume != null) {_            createContainerCmd.withVolumes(volume)__        }_        _        String[] volumesFrom = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_VOLUMES_FROM, message)___        if (volumesFrom != null) {_            createContainerCmd.withVolumesFrom(volumesFrom)__        }_        _        return createContainerCmd___    };produce,a,create,container,request,param,client,param,message,return,throws,docker,exception;private,create,container,cmd,execute,create,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,list,container,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,create,container,cmd,create,container,cmd,client,create,container,cmd,image,id,string,name,docker,helper,get,property,docker,constants,configuration,message,string,class,if,name,null,create,container,cmd,with,name,name,exposed,port,exposed,ports,docker,helper,get,array,property,docker,constants,message,exposed,port,class,if,exposed,ports,null,create,container,cmd,with,exposed,ports,exposed,ports,string,working,dir,docker,helper,get,property,docker,constants,configuration,message,string,class,if,working,dir,null,create,container,cmd,with,working,dir,working,dir,boolean,disabled,network,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,disabled,network,null,disabled,network,create,container,cmd,with,disable,network,disabled,network,string,host,name,docker,helper,get,property,docker,constants,configuration,message,string,class,if,host,name,null,create,container,cmd,with,host,name,host,name,string,port,specs,docker,helper,parse,delimited,string,header,docker,constants,message,if,port,specs,null,create,container,cmd,with,port,specs,port,specs,string,user,docker,helper,get,property,docker,constants,configuration,message,string,class,if,host,name,null,create,container,cmd,with,user,user,boolean,tty,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,tty,null,tty,create,container,cmd,with,tty,tty,boolean,std,in,open,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,open,null,std,in,open,create,container,cmd,with,stdin,open,std,in,open,boolean,std,in,once,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,in,once,null,std,in,once,create,container,cmd,with,std,in,once,std,in,once,long,memory,limit,docker,helper,get,property,docker,constants,configuration,message,long,class,if,memory,limit,null,create,container,cmd,with,memory,limit,memory,limit,long,memory,swap,docker,helper,get,property,docker,constants,configuration,message,long,class,if,memory,swap,null,create,container,cmd,with,memory,swap,memory,swap,integer,cpu,shares,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,cpu,shares,null,create,container,cmd,with,cpu,shares,cpu,shares,boolean,attach,std,in,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,in,null,attach,std,in,create,container,cmd,with,attach,stdin,attach,std,in,boolean,attach,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,out,null,attach,std,out,create,container,cmd,with,attach,stdout,attach,std,out,boolean,attach,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,attach,std,err,null,attach,std,err,create,container,cmd,with,attach,stderr,attach,std,err,string,env,docker,helper,parse,delimited,string,header,docker,constants,message,if,env,null,create,container,cmd,with,env,env,string,cmd,docker,helper,parse,delimited,string,header,docker,constants,message,if,cmd,null,create,container,cmd,with,cmd,env,string,dns,docker,helper,parse,delimited,string,header,docker,constants,message,if,dns,null,create,container,cmd,with,dns,dns,string,image,docker,helper,get,property,docker,constants,configuration,message,string,class,if,image,null,create,container,cmd,with,image,image,volume,volume,docker,helper,get,array,property,docker,constants,message,volume,class,if,volume,null,create,container,cmd,with,volumes,volume,string,volumes,from,docker,helper,parse,delimited,string,header,docker,constants,message,if,volumes,from,null,create,container,cmd,with,volumes,from,volumes,from,return,create,container,cmd
DockerProducer -> private AuthCmd executeAuthRequest(DockerClient client, Message message) throws DockerException;1415211488;Produces a Authorization request__@param client_@param message_@return_@throws DockerException;private AuthCmd executeAuthRequest(DockerClient client, Message message) throws DockerException {_     _        LOGGER.debug("Executing Docker Auth Request")__        _        return client.authCmd()__    };produces,a,authorization,request,param,client,param,message,return,throws,docker,exception;private,auth,cmd,execute,auth,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,auth,request,return,client,auth,cmd
DockerProducer -> private AuthCmd executeAuthRequest(DockerClient client, Message message) throws DockerException;1415517409;Produces a Authorization request__@param client_@param message_@return_@throws DockerException;private AuthCmd executeAuthRequest(DockerClient client, Message message) throws DockerException {_     _        LOGGER.debug("Executing Docker Auth Request")__        _        return client.authCmd()__    };produces,a,authorization,request,param,client,param,message,return,throws,docker,exception;private,auth,cmd,execute,auth,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,auth,request,return,client,auth,cmd
DockerProducer -> private AuthCmd executeAuthRequest(DockerClient client, Message message) throws DockerException;1423234542;Produces a Authorization request__@param client_@param message_@return_@throws DockerException;private AuthCmd executeAuthRequest(DockerClient client, Message message) throws DockerException {_     _        LOGGER.debug("Executing Docker Auth Request")__        _        return client.authCmd()__    };produces,a,authorization,request,param,client,param,message,return,throws,docker,exception;private,auth,cmd,execute,auth,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,auth,request,return,client,auth,cmd
DockerProducer -> private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message) throws DockerException;1415211488;Produce a attach container request__@param client_@param message_@return_@throws DockerException;private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Attach Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        AttachContainerCmd attachContainerCmd = client.attachContainerCmd(containerId)___        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)__        _        if (stdOut != null && stdOut) {_            attachContainerCmd.withStdOut(stdOut)__        }_        _        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)__        _        if (stdErr != null && stdErr) {_            attachContainerCmd.withStdErr(stdErr)__        }_        _        Boolean logs = DockerHelper.getProperty(DockerConstants.DOCKER_LOGS, configuration, message, Boolean.class)__        _        if (logs != null && logs) {_            attachContainerCmd.withLogs(logs)__        }_        _        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)__        _        if (timestamps != null && timestamps) {_            attachContainerCmd.withTimestamps(timestamps)__        }       _        _        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)__        _        if (followStream != null && followStream) {_            attachContainerCmd.withFollowStream(followStream)__        }    _        _        return attachContainerCmd___    };produce,a,attach,container,request,param,client,param,message,return,throws,docker,exception;private,attach,container,cmd,execute,attach,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,attach,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,attach,container,cmd,attach,container,cmd,client,attach,container,cmd,container,id,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,std,out,attach,container,cmd,with,std,out,std,out,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,std,err,attach,container,cmd,with,std,err,std,err,boolean,logs,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,logs,null,logs,attach,container,cmd,with,logs,logs,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,timestamps,attach,container,cmd,with,timestamps,timestamps,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,follow,stream,attach,container,cmd,with,follow,stream,follow,stream,return,attach,container,cmd
DockerProducer -> private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message) throws DockerException;1415517409;Produce a attach container request__@param client_@param message_@return_@throws DockerException;private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Attach Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        AttachContainerCmd attachContainerCmd = client.attachContainerCmd(containerId)___        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)__        _        if (stdOut != null && stdOut) {_            attachContainerCmd.withStdOut(stdOut)__        }_        _        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)__        _        if (stdErr != null && stdErr) {_            attachContainerCmd.withStdErr(stdErr)__        }_        _        Boolean logs = DockerHelper.getProperty(DockerConstants.DOCKER_LOGS, configuration, message, Boolean.class)__        _        if (logs != null && logs) {_            attachContainerCmd.withLogs(logs)__        }_        _        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)__        _        if (timestamps != null && timestamps) {_            attachContainerCmd.withTimestamps(timestamps)__        }       _        _        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)__        _        if (followStream != null && followStream) {_            attachContainerCmd.withFollowStream(followStream)__        }    _        _        return attachContainerCmd___    };produce,a,attach,container,request,param,client,param,message,return,throws,docker,exception;private,attach,container,cmd,execute,attach,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,attach,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,attach,container,cmd,attach,container,cmd,client,attach,container,cmd,container,id,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,std,out,attach,container,cmd,with,std,out,std,out,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,std,err,attach,container,cmd,with,std,err,std,err,boolean,logs,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,logs,null,logs,attach,container,cmd,with,logs,logs,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,timestamps,attach,container,cmd,with,timestamps,timestamps,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,follow,stream,attach,container,cmd,with,follow,stream,follow,stream,return,attach,container,cmd
DockerProducer -> private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message) throws DockerException;1423234542;Produce a attach container request__@param client_@param message_@return_@throws DockerException;private AttachContainerCmd executeAttachContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Attach Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        AttachContainerCmd attachContainerCmd = client.attachContainerCmd(containerId)___        Boolean stdOut = DockerHelper.getProperty(DockerConstants.DOCKER_STD_OUT, configuration, message, Boolean.class)__        _        if (stdOut != null && stdOut) {_            attachContainerCmd.withStdOut(stdOut)__        }_        _        Boolean stdErr = DockerHelper.getProperty(DockerConstants.DOCKER_STD_ERR, configuration, message, Boolean.class)__        _        if (stdErr != null && stdErr) {_            attachContainerCmd.withStdErr(stdErr)__        }_        _        Boolean logs = DockerHelper.getProperty(DockerConstants.DOCKER_LOGS, configuration, message, Boolean.class)__        _        if (logs != null && logs) {_            attachContainerCmd.withLogs(logs)__        }_        _        Boolean timestamps = DockerHelper.getProperty(DockerConstants.DOCKER_TIMESTAMPS, configuration, message, Boolean.class)__        _        if (timestamps != null && timestamps) {_            attachContainerCmd.withTimestamps(timestamps)__        }       _        _        Boolean followStream = DockerHelper.getProperty(DockerConstants.DOCKER_FOLLOW_STREAM, configuration, message, Boolean.class)__        _        if (followStream != null && followStream) {_            attachContainerCmd.withFollowStream(followStream)__        }    _        _        return attachContainerCmd___    };produce,a,attach,container,request,param,client,param,message,return,throws,docker,exception;private,attach,container,cmd,execute,attach,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,attach,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,attach,container,cmd,attach,container,cmd,client,attach,container,cmd,container,id,boolean,std,out,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,out,null,std,out,attach,container,cmd,with,std,out,std,out,boolean,std,err,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,std,err,null,std,err,attach,container,cmd,with,std,err,std,err,boolean,logs,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,logs,null,logs,attach,container,cmd,with,logs,logs,boolean,timestamps,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,timestamps,null,timestamps,attach,container,cmd,with,timestamps,timestamps,boolean,follow,stream,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,follow,stream,null,follow,stream,attach,container,cmd,with,follow,stream,follow,stream,return,attach,container,cmd
DockerProducer -> private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message) throws DockerException;1415211488;Produce a wait container request__@param client_@param message_@return_@throws DockerException;private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Wait Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        _        WaitContainerCmd waitContainerCmd = client.waitContainerCmd(containerId)__        _        return waitContainerCmd___    };produce,a,wait,container,request,param,client,param,message,return,throws,docker,exception;private,wait,container,cmd,execute,wait,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,wait,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,wait,container,cmd,wait,container,cmd,client,wait,container,cmd,container,id,return,wait,container,cmd
DockerProducer -> private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message) throws DockerException;1415517409;Produce a wait container request__@param client_@param message_@return_@throws DockerException;private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Wait Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        _        WaitContainerCmd waitContainerCmd = client.waitContainerCmd(containerId)__        _        return waitContainerCmd___    };produce,a,wait,container,request,param,client,param,message,return,throws,docker,exception;private,wait,container,cmd,execute,wait,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,wait,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,wait,container,cmd,wait,container,cmd,client,wait,container,cmd,container,id,return,wait,container,cmd
DockerProducer -> private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message) throws DockerException;1423234542;Produce a wait container request__@param client_@param message_@return_@throws DockerException;private WaitContainerCmd executeWaitContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Wait Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        _        WaitContainerCmd waitContainerCmd = client.waitContainerCmd(containerId)__        _        return waitContainerCmd___    };produce,a,wait,container,request,param,client,param,message,return,throws,docker,exception;private,wait,container,cmd,execute,wait,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,wait,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,wait,container,cmd,wait,container,cmd,client,wait,container,cmd,container,id,return,wait,container,cmd
DockerProducer -> private StopContainerCmd executeStopContainerRequest(DockerClient client, Message message);1424675020;Produces a stop container request__@param client_@param message_@return;private StopContainerCmd executeStopContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Kill Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        StopContainerCmd stopContainerCmd = client.stopContainerCmd(containerId)___        Integer timeout = DockerHelper.getProperty(DockerConstants.DOCKER_TIMEOUT, configuration, message, Integer.class)___        if (timeout != null) {_            stopContainerCmd.withTimeout(timeout)__        }__        return stopContainerCmd___    };produces,a,stop,container,request,param,client,param,message,return;private,stop,container,cmd,execute,stop,container,request,docker,client,client,message,message,logger,debug,executing,docker,kill,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,stop,container,cmd,stop,container,cmd,client,stop,container,cmd,container,id,integer,timeout,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,timeout,null,stop,container,cmd,with,timeout,timeout,return,stop,container,cmd
DockerProducer -> private StopContainerCmd executeStopContainerRequest(DockerClient client, Message message);1424675476;Produces a stop container request__@param client_@param message_@return;private StopContainerCmd executeStopContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Kill Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        StopContainerCmd stopContainerCmd = client.stopContainerCmd(containerId)___        Integer timeout = DockerHelper.getProperty(DockerConstants.DOCKER_TIMEOUT, configuration, message, Integer.class)___        if (timeout != null) {_            stopContainerCmd.withTimeout(timeout)__        }__        return stopContainerCmd___    };produces,a,stop,container,request,param,client,param,message,return;private,stop,container,cmd,execute,stop,container,request,docker,client,client,message,message,logger,debug,executing,docker,kill,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,stop,container,cmd,stop,container,cmd,client,stop,container,cmd,container,id,integer,timeout,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,timeout,null,stop,container,cmd,with,timeout,timeout,return,stop,container,cmd
DockerProducer -> private StopContainerCmd executeStopContainerRequest(DockerClient client, Message message);1424877876;Produces a stop container request__@param client_@param message_@return;private StopContainerCmd executeStopContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Kill Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        StopContainerCmd stopContainerCmd = client.stopContainerCmd(containerId)___        Integer timeout = DockerHelper.getProperty(DockerConstants.DOCKER_TIMEOUT, configuration, message, Integer.class)___        if (timeout != null) {_            stopContainerCmd.withTimeout(timeout)__        }__        return stopContainerCmd___    };produces,a,stop,container,request,param,client,param,message,return;private,stop,container,cmd,execute,stop,container,request,docker,client,client,message,message,logger,debug,executing,docker,kill,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,stop,container,cmd,stop,container,cmd,client,stop,container,cmd,container,id,integer,timeout,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,timeout,null,stop,container,cmd,with,timeout,timeout,return,stop,container,cmd
DockerProducer -> private StopContainerCmd executeStopContainerRequest(DockerClient client, Message message);1429199966;Produces a stop container request__@param client_@param message_@return;private StopContainerCmd executeStopContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Kill Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        StopContainerCmd stopContainerCmd = client.stopContainerCmd(containerId)___        Integer timeout = DockerHelper.getProperty(DockerConstants.DOCKER_TIMEOUT, configuration, message, Integer.class)___        if (timeout != null) {_            stopContainerCmd.withTimeout(timeout)__        }__        return stopContainerCmd___    };produces,a,stop,container,request,param,client,param,message,return;private,stop,container,cmd,execute,stop,container,request,docker,client,client,message,message,logger,debug,executing,docker,kill,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,stop,container,cmd,stop,container,cmd,client,stop,container,cmd,container,id,integer,timeout,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,timeout,null,stop,container,cmd,with,timeout,timeout,return,stop,container,cmd
DockerProducer -> private StopContainerCmd executeStopContainerRequest(DockerClient client, Message message);1433489320;Produces a stop container request__@param client_@param message_@return;private StopContainerCmd executeStopContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Kill Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        StopContainerCmd stopContainerCmd = client.stopContainerCmd(containerId)___        Integer timeout = DockerHelper.getProperty(DockerConstants.DOCKER_TIMEOUT, configuration, message, Integer.class)___        if (timeout != null) {_            stopContainerCmd.withTimeout(timeout)__        }__        return stopContainerCmd___    };produces,a,stop,container,request,param,client,param,message,return;private,stop,container,cmd,execute,stop,container,request,docker,client,client,message,message,logger,debug,executing,docker,kill,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,stop,container,cmd,stop,container,cmd,client,stop,container,cmd,container,id,integer,timeout,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,timeout,null,stop,container,cmd,with,timeout,timeout,return,stop,container,cmd
DockerProducer -> private StopContainerCmd executeStopContainerRequest(DockerClient client, Message message);1440239526;Produces a stop container request__@param client_@param message_@return;private StopContainerCmd executeStopContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Kill Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        StopContainerCmd stopContainerCmd = client.stopContainerCmd(containerId)___        Integer timeout = DockerHelper.getProperty(DockerConstants.DOCKER_TIMEOUT, configuration, message, Integer.class)___        if (timeout != null) {_            stopContainerCmd.withTimeout(timeout)__        }__        return stopContainerCmd___    };produces,a,stop,container,request,param,client,param,message,return;private,stop,container,cmd,execute,stop,container,request,docker,client,client,message,message,logger,debug,executing,docker,kill,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,stop,container,cmd,stop,container,cmd,client,stop,container,cmd,container,id,integer,timeout,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,timeout,null,stop,container,cmd,with,timeout,timeout,return,stop,container,cmd
DockerProducer -> private StopContainerCmd executeStopContainerRequest(DockerClient client, Message message);1474362454;Produces a stop container request__@param client_@param message_@return;private StopContainerCmd executeStopContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Kill Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        StopContainerCmd stopContainerCmd = client.stopContainerCmd(containerId)___        Integer timeout = DockerHelper.getProperty(DockerConstants.DOCKER_TIMEOUT, configuration, message, Integer.class)___        if (timeout != null) {_            stopContainerCmd.withTimeout(timeout)__        }__        return stopContainerCmd___    };produces,a,stop,container,request,param,client,param,message,return;private,stop,container,cmd,execute,stop,container,request,docker,client,client,message,message,logger,debug,executing,docker,kill,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,stop,container,cmd,stop,container,cmd,client,stop,container,cmd,container,id,integer,timeout,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,timeout,null,stop,container,cmd,with,timeout,timeout,return,stop,container,cmd
DockerProducer -> private StopContainerCmd executeStopContainerRequest(DockerClient client, Message message);1531637865;Produces a stop container request__@param client_@param message_@return;private StopContainerCmd executeStopContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Stop Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        StopContainerCmd stopContainerCmd = client.stopContainerCmd(containerId)___        Integer timeout = DockerHelper.getProperty(DockerConstants.DOCKER_TIMEOUT, configuration, message, Integer.class)___        if (timeout != null) {_            stopContainerCmd.withTimeout(timeout)__        }__        return stopContainerCmd___    };produces,a,stop,container,request,param,client,param,message,return;private,stop,container,cmd,execute,stop,container,request,docker,client,client,message,message,logger,debug,executing,docker,stop,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,stop,container,cmd,stop,container,cmd,client,stop,container,cmd,container,id,integer,timeout,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,timeout,null,stop,container,cmd,with,timeout,timeout,return,stop,container,cmd
DockerProducer -> private StopContainerCmd executeStopContainerRequest(DockerClient client, Message message);1540108163;Produces a stop container request__@param client_@param message_@return;private StopContainerCmd executeStopContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Stop Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        StopContainerCmd stopContainerCmd = client.stopContainerCmd(containerId)___        Integer timeout = DockerHelper.getProperty(DockerConstants.DOCKER_TIMEOUT, configuration, message, Integer.class)___        if (timeout != null) {_            stopContainerCmd.withTimeout(timeout)__        }__        return stopContainerCmd___    };produces,a,stop,container,request,param,client,param,message,return;private,stop,container,cmd,execute,stop,container,request,docker,client,client,message,message,logger,debug,executing,docker,stop,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,stop,container,cmd,stop,container,cmd,client,stop,container,cmd,container,id,integer,timeout,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,timeout,null,stop,container,cmd,with,timeout,timeout,return,stop,container,cmd
DockerProducer -> private InfoCmd executeInfoRequest(DockerClient client, Message message);1424675020;Produces a platform information request__@param client_@param message_@return;private InfoCmd executeInfoRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Info Request")___        InfoCmd infoCmd = client.infoCmd()___        return infoCmd___    };produces,a,platform,information,request,param,client,param,message,return;private,info,cmd,execute,info,request,docker,client,client,message,message,logger,debug,executing,docker,info,request,info,cmd,info,cmd,client,info,cmd,return,info,cmd
DockerProducer -> private InfoCmd executeInfoRequest(DockerClient client, Message message);1424675476;Produces a platform information request__@param client_@param message_@return;private InfoCmd executeInfoRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Info Request")___        InfoCmd infoCmd = client.infoCmd()___        return infoCmd___    };produces,a,platform,information,request,param,client,param,message,return;private,info,cmd,execute,info,request,docker,client,client,message,message,logger,debug,executing,docker,info,request,info,cmd,info,cmd,client,info,cmd,return,info,cmd
DockerProducer -> private InfoCmd executeInfoRequest(DockerClient client, Message message);1424877876;Produces a platform information request__@param client_@param message_@return;private InfoCmd executeInfoRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Info Request")___        InfoCmd infoCmd = client.infoCmd()___        return infoCmd___    };produces,a,platform,information,request,param,client,param,message,return;private,info,cmd,execute,info,request,docker,client,client,message,message,logger,debug,executing,docker,info,request,info,cmd,info,cmd,client,info,cmd,return,info,cmd
DockerProducer -> private InfoCmd executeInfoRequest(DockerClient client, Message message);1429199966;Produces a platform information request__@param client_@param message_@return;private InfoCmd executeInfoRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Info Request")___        InfoCmd infoCmd = client.infoCmd()___        return infoCmd___    };produces,a,platform,information,request,param,client,param,message,return;private,info,cmd,execute,info,request,docker,client,client,message,message,logger,debug,executing,docker,info,request,info,cmd,info,cmd,client,info,cmd,return,info,cmd
DockerProducer -> private InfoCmd executeInfoRequest(DockerClient client, Message message);1433489320;Produces a platform information request__@param client_@param message_@return;private InfoCmd executeInfoRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Info Request")___        InfoCmd infoCmd = client.infoCmd()___        return infoCmd___    };produces,a,platform,information,request,param,client,param,message,return;private,info,cmd,execute,info,request,docker,client,client,message,message,logger,debug,executing,docker,info,request,info,cmd,info,cmd,client,info,cmd,return,info,cmd
DockerProducer -> private InfoCmd executeInfoRequest(DockerClient client, Message message);1440239526;Produces a platform information request__@param client_@param message_@return;private InfoCmd executeInfoRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Info Request")___        InfoCmd infoCmd = client.infoCmd()___        return infoCmd___    };produces,a,platform,information,request,param,client,param,message,return;private,info,cmd,execute,info,request,docker,client,client,message,message,logger,debug,executing,docker,info,request,info,cmd,info,cmd,client,info,cmd,return,info,cmd
DockerProducer -> private InfoCmd executeInfoRequest(DockerClient client, Message message);1474362454;Produces a platform information request__@param client_@param message_@return;private InfoCmd executeInfoRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Info Request")___        InfoCmd infoCmd = client.infoCmd()___        return infoCmd___    };produces,a,platform,information,request,param,client,param,message,return;private,info,cmd,execute,info,request,docker,client,client,message,message,logger,debug,executing,docker,info,request,info,cmd,info,cmd,client,info,cmd,return,info,cmd
DockerProducer -> private InfoCmd executeInfoRequest(DockerClient client, Message message);1531637865;Produces a platform information request__@param client_@param message_@return;private InfoCmd executeInfoRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Info Request")___        InfoCmd infoCmd = client.infoCmd()___        return infoCmd___    };produces,a,platform,information,request,param,client,param,message,return;private,info,cmd,execute,info,request,docker,client,client,message,message,logger,debug,executing,docker,info,request,info,cmd,info,cmd,client,info,cmd,return,info,cmd
DockerProducer -> private InfoCmd executeInfoRequest(DockerClient client, Message message);1540108163;Produces a platform information request__@param client_@param message_@return;private InfoCmd executeInfoRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Info Request")___        InfoCmd infoCmd = client.infoCmd()___        return infoCmd___    };produces,a,platform,information,request,param,client,param,message,return;private,info,cmd,execute,info,request,docker,client,client,message,message,logger,debug,executing,docker,info,request,info,cmd,info,cmd,client,info,cmd,return,info,cmd
DockerProducer -> private PullImageCmd executePullImageRequest(DockerClient client, Message message);1424675020;Produces a pull image request__@param client_@param message_@return;private PullImageCmd executePullImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Pull Image Request")___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        ObjectHelper.notNull(repository, "Repository must be specified")___        PullImageCmd pullImageCmd = client.pullImageCmd(repository)___        String registry = DockerHelper.getProperty(DockerConstants.DOCKER_REGISTRY, configuration, message, String.class)__        if (registry != null) {_            pullImageCmd.withRegistry(registry)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)__        if (tag != null) {_            pullImageCmd.withTag(tag)__        }__        AuthConfig authConfig = client.authConfig()___        if (authConfig != null) {_            pullImageCmd.withAuthConfig(authConfig)__        }__        return pullImageCmd___    };produces,a,pull,image,request,param,client,param,message,return;private,pull,image,cmd,execute,pull,image,request,docker,client,client,message,message,logger,debug,executing,docker,pull,image,request,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,repository,repository,must,be,specified,pull,image,cmd,pull,image,cmd,client,pull,image,cmd,repository,string,registry,docker,helper,get,property,docker,constants,configuration,message,string,class,if,registry,null,pull,image,cmd,with,registry,registry,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,pull,image,cmd,with,tag,tag,auth,config,auth,config,client,auth,config,if,auth,config,null,pull,image,cmd,with,auth,config,auth,config,return,pull,image,cmd
DockerProducer -> private PullImageCmd executePullImageRequest(DockerClient client, Message message);1424675476;Produces a pull image request__@param client_@param message_@return;private PullImageCmd executePullImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Pull Image Request")___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        ObjectHelper.notNull(repository, "Repository must be specified")___        PullImageCmd pullImageCmd = client.pullImageCmd(repository)___        String registry = DockerHelper.getProperty(DockerConstants.DOCKER_REGISTRY, configuration, message, String.class)__        if (registry != null) {_            pullImageCmd.withRegistry(registry)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)__        if (tag != null) {_            pullImageCmd.withTag(tag)__        }__        AuthConfig authConfig = client.authConfig()___        if (authConfig != null) {_            pullImageCmd.withAuthConfig(authConfig)__        }__        return pullImageCmd___    };produces,a,pull,image,request,param,client,param,message,return;private,pull,image,cmd,execute,pull,image,request,docker,client,client,message,message,logger,debug,executing,docker,pull,image,request,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,repository,repository,must,be,specified,pull,image,cmd,pull,image,cmd,client,pull,image,cmd,repository,string,registry,docker,helper,get,property,docker,constants,configuration,message,string,class,if,registry,null,pull,image,cmd,with,registry,registry,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,pull,image,cmd,with,tag,tag,auth,config,auth,config,client,auth,config,if,auth,config,null,pull,image,cmd,with,auth,config,auth,config,return,pull,image,cmd
DockerProducer -> private PullImageCmd executePullImageRequest(DockerClient client, Message message);1424877876;Produces a pull image request__@param client_@param message_@return;private PullImageCmd executePullImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Pull Image Request")___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        ObjectHelper.notNull(repository, "Repository must be specified")___        PullImageCmd pullImageCmd = client.pullImageCmd(repository)___        String registry = DockerHelper.getProperty(DockerConstants.DOCKER_REGISTRY, configuration, message, String.class)__        if (registry != null) {_            pullImageCmd.withRegistry(registry)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)__        if (tag != null) {_            pullImageCmd.withTag(tag)__        }__        AuthConfig authConfig = client.authConfig()___        if (authConfig != null) {_            pullImageCmd.withAuthConfig(authConfig)__        }__        return pullImageCmd___    };produces,a,pull,image,request,param,client,param,message,return;private,pull,image,cmd,execute,pull,image,request,docker,client,client,message,message,logger,debug,executing,docker,pull,image,request,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,repository,repository,must,be,specified,pull,image,cmd,pull,image,cmd,client,pull,image,cmd,repository,string,registry,docker,helper,get,property,docker,constants,configuration,message,string,class,if,registry,null,pull,image,cmd,with,registry,registry,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,pull,image,cmd,with,tag,tag,auth,config,auth,config,client,auth,config,if,auth,config,null,pull,image,cmd,with,auth,config,auth,config,return,pull,image,cmd
DockerProducer -> private PullImageCmd executePullImageRequest(DockerClient client, Message message);1429199966;Produces a pull image request__@param client_@param message_@return;private PullImageCmd executePullImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Pull Image Request")___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        ObjectHelper.notNull(repository, "Repository must be specified")___        PullImageCmd pullImageCmd = client.pullImageCmd(repository)___        String registry = DockerHelper.getProperty(DockerConstants.DOCKER_REGISTRY, configuration, message, String.class)__        if (registry != null) {_            pullImageCmd.withRegistry(registry)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)__        if (tag != null) {_            pullImageCmd.withTag(tag)__        }__        AuthConfig authConfig = client.authConfig()___        if (authConfig != null) {_            pullImageCmd.withAuthConfig(authConfig)__        }__        return pullImageCmd___    };produces,a,pull,image,request,param,client,param,message,return;private,pull,image,cmd,execute,pull,image,request,docker,client,client,message,message,logger,debug,executing,docker,pull,image,request,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,repository,repository,must,be,specified,pull,image,cmd,pull,image,cmd,client,pull,image,cmd,repository,string,registry,docker,helper,get,property,docker,constants,configuration,message,string,class,if,registry,null,pull,image,cmd,with,registry,registry,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,pull,image,cmd,with,tag,tag,auth,config,auth,config,client,auth,config,if,auth,config,null,pull,image,cmd,with,auth,config,auth,config,return,pull,image,cmd
DockerProducer -> private PullImageCmd executePullImageRequest(DockerClient client, Message message);1433489320;Produces a pull image request__@param client_@param message_@return;private PullImageCmd executePullImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Pull Image Request")___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        ObjectHelper.notNull(repository, "Repository must be specified")___        PullImageCmd pullImageCmd = client.pullImageCmd(repository)___        String registry = DockerHelper.getProperty(DockerConstants.DOCKER_REGISTRY, configuration, message, String.class)__        if (registry != null) {_            pullImageCmd.withRegistry(registry)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)__        if (tag != null) {_            pullImageCmd.withTag(tag)__        }__        AuthConfig authConfig = client.authConfig()___        if (authConfig != null) {_            pullImageCmd.withAuthConfig(authConfig)__        }__        return pullImageCmd___    };produces,a,pull,image,request,param,client,param,message,return;private,pull,image,cmd,execute,pull,image,request,docker,client,client,message,message,logger,debug,executing,docker,pull,image,request,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,repository,repository,must,be,specified,pull,image,cmd,pull,image,cmd,client,pull,image,cmd,repository,string,registry,docker,helper,get,property,docker,constants,configuration,message,string,class,if,registry,null,pull,image,cmd,with,registry,registry,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,pull,image,cmd,with,tag,tag,auth,config,auth,config,client,auth,config,if,auth,config,null,pull,image,cmd,with,auth,config,auth,config,return,pull,image,cmd
DockerProducer -> private PullImageCmd executePullImageRequest(DockerClient client, Message message);1440239526;Produces a pull image request__@param client_@param message_@return;private PullImageCmd executePullImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Pull Image Request")___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        ObjectHelper.notNull(repository, "Repository must be specified")___        PullImageCmd pullImageCmd = client.pullImageCmd(repository)___        String registry = DockerHelper.getProperty(DockerConstants.DOCKER_REGISTRY, configuration, message, String.class)__        if (registry != null) {_            pullImageCmd.withRegistry(registry)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)__        if (tag != null) {_            pullImageCmd.withTag(tag)__        }__        AuthConfig authConfig = client.authConfig()___        if (authConfig != null) {_            pullImageCmd.withAuthConfig(authConfig)__        }__        return pullImageCmd___    };produces,a,pull,image,request,param,client,param,message,return;private,pull,image,cmd,execute,pull,image,request,docker,client,client,message,message,logger,debug,executing,docker,pull,image,request,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,repository,repository,must,be,specified,pull,image,cmd,pull,image,cmd,client,pull,image,cmd,repository,string,registry,docker,helper,get,property,docker,constants,configuration,message,string,class,if,registry,null,pull,image,cmd,with,registry,registry,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,pull,image,cmd,with,tag,tag,auth,config,auth,config,client,auth,config,if,auth,config,null,pull,image,cmd,with,auth,config,auth,config,return,pull,image,cmd
DockerProducer -> private PingCmd executePingRequest(DockerClient client, Message message);1424675020;Executes a ping platform request__@param client_@param message_@return;private PingCmd executePingRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Ping Request")___        PingCmd pingCmd = client.pingCmd()___        return pingCmd___    };executes,a,ping,platform,request,param,client,param,message,return;private,ping,cmd,execute,ping,request,docker,client,client,message,message,logger,debug,executing,docker,ping,request,ping,cmd,ping,cmd,client,ping,cmd,return,ping,cmd
DockerProducer -> private PingCmd executePingRequest(DockerClient client, Message message);1424675476;Executes a ping platform request__@param client_@param message_@return;private PingCmd executePingRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Ping Request")___        PingCmd pingCmd = client.pingCmd()___        return pingCmd___    };executes,a,ping,platform,request,param,client,param,message,return;private,ping,cmd,execute,ping,request,docker,client,client,message,message,logger,debug,executing,docker,ping,request,ping,cmd,ping,cmd,client,ping,cmd,return,ping,cmd
DockerProducer -> private PingCmd executePingRequest(DockerClient client, Message message);1424877876;Executes a ping platform request__@param client_@param message_@return;private PingCmd executePingRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Ping Request")___        PingCmd pingCmd = client.pingCmd()___        return pingCmd___    };executes,a,ping,platform,request,param,client,param,message,return;private,ping,cmd,execute,ping,request,docker,client,client,message,message,logger,debug,executing,docker,ping,request,ping,cmd,ping,cmd,client,ping,cmd,return,ping,cmd
DockerProducer -> private PingCmd executePingRequest(DockerClient client, Message message);1429199966;Executes a ping platform request__@param client_@param message_@return;private PingCmd executePingRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Ping Request")___        PingCmd pingCmd = client.pingCmd()___        return pingCmd___    };executes,a,ping,platform,request,param,client,param,message,return;private,ping,cmd,execute,ping,request,docker,client,client,message,message,logger,debug,executing,docker,ping,request,ping,cmd,ping,cmd,client,ping,cmd,return,ping,cmd
DockerProducer -> private PingCmd executePingRequest(DockerClient client, Message message);1433489320;Executes a ping platform request__@param client_@param message_@return;private PingCmd executePingRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Ping Request")___        PingCmd pingCmd = client.pingCmd()___        return pingCmd___    };executes,a,ping,platform,request,param,client,param,message,return;private,ping,cmd,execute,ping,request,docker,client,client,message,message,logger,debug,executing,docker,ping,request,ping,cmd,ping,cmd,client,ping,cmd,return,ping,cmd
DockerProducer -> private PingCmd executePingRequest(DockerClient client, Message message);1440239526;Executes a ping platform request__@param client_@param message_@return;private PingCmd executePingRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Ping Request")___        PingCmd pingCmd = client.pingCmd()___        return pingCmd___    };executes,a,ping,platform,request,param,client,param,message,return;private,ping,cmd,execute,ping,request,docker,client,client,message,message,logger,debug,executing,docker,ping,request,ping,cmd,ping,cmd,client,ping,cmd,return,ping,cmd
DockerProducer -> private PingCmd executePingRequest(DockerClient client, Message message);1474362454;Executes a ping platform request__@param client_@param message_@return;private PingCmd executePingRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Ping Request")___        PingCmd pingCmd = client.pingCmd()___        return pingCmd___    };executes,a,ping,platform,request,param,client,param,message,return;private,ping,cmd,execute,ping,request,docker,client,client,message,message,logger,debug,executing,docker,ping,request,ping,cmd,ping,cmd,client,ping,cmd,return,ping,cmd
DockerProducer -> private PingCmd executePingRequest(DockerClient client, Message message);1531637865;Executes a ping platform request__@param client_@param message_@return;private PingCmd executePingRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Ping Request")___        PingCmd pingCmd = client.pingCmd()___        return pingCmd___    };executes,a,ping,platform,request,param,client,param,message,return;private,ping,cmd,execute,ping,request,docker,client,client,message,message,logger,debug,executing,docker,ping,request,ping,cmd,ping,cmd,client,ping,cmd,return,ping,cmd
DockerProducer -> private PingCmd executePingRequest(DockerClient client, Message message);1540108163;Executes a ping platform request__@param client_@param message_@return;private PingCmd executePingRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Ping Request")___        PingCmd pingCmd = client.pingCmd()___        return pingCmd___    };executes,a,ping,platform,request,param,client,param,message,return;private,ping,cmd,execute,ping,request,docker,client,client,message,message,logger,debug,executing,docker,ping,request,ping,cmd,ping,cmd,client,ping,cmd,return,ping,cmd
DockerProducer -> private AuthCmd executeAuthRequest(DockerClient client, Message message);1424675020;Produces a Authorization request__@param client_@param message_@return;private AuthCmd executeAuthRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Auth Request")___        AuthCmd authCmd = client.authCmd()__        _        AuthConfig authConfig = client.authConfig()__        _        if(authCmd != null) {_            authCmd.withAuthConfig(authConfig)__        }__        return authCmd__    };produces,a,authorization,request,param,client,param,message,return;private,auth,cmd,execute,auth,request,docker,client,client,message,message,logger,debug,executing,docker,auth,request,auth,cmd,auth,cmd,client,auth,cmd,auth,config,auth,config,client,auth,config,if,auth,cmd,null,auth,cmd,with,auth,config,auth,config,return,auth,cmd
DockerProducer -> private AuthCmd executeAuthRequest(DockerClient client, Message message);1424675476;Produces a Authorization request__@param client_@param message_@return;private AuthCmd executeAuthRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Auth Request")___        AuthCmd authCmd = client.authCmd()___        AuthConfig authConfig = client.authConfig()___        if (authCmd != null) {_            authCmd.withAuthConfig(authConfig)__        }__        return authCmd__    };produces,a,authorization,request,param,client,param,message,return;private,auth,cmd,execute,auth,request,docker,client,client,message,message,logger,debug,executing,docker,auth,request,auth,cmd,auth,cmd,client,auth,cmd,auth,config,auth,config,client,auth,config,if,auth,cmd,null,auth,cmd,with,auth,config,auth,config,return,auth,cmd
DockerProducer -> private AuthCmd executeAuthRequest(DockerClient client, Message message);1424877876;Produces a Authorization request__@param client_@param message_@return;private AuthCmd executeAuthRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Auth Request")___        AuthCmd authCmd = client.authCmd()___        AuthConfig authConfig = client.authConfig()___        if (authCmd != null) {_            authCmd.withAuthConfig(authConfig)__        }__        return authCmd__    };produces,a,authorization,request,param,client,param,message,return;private,auth,cmd,execute,auth,request,docker,client,client,message,message,logger,debug,executing,docker,auth,request,auth,cmd,auth,cmd,client,auth,cmd,auth,config,auth,config,client,auth,config,if,auth,cmd,null,auth,cmd,with,auth,config,auth,config,return,auth,cmd
DockerProducer -> private AuthCmd executeAuthRequest(DockerClient client, Message message);1429199966;Produces a Authorization request__@param client_@param message_@return;private AuthCmd executeAuthRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Auth Request")___        AuthCmd authCmd = client.authCmd()___        AuthConfig authConfig = client.authConfig()___        if (authCmd != null) {_            authCmd.withAuthConfig(authConfig)__        }__        return authCmd__    };produces,a,authorization,request,param,client,param,message,return;private,auth,cmd,execute,auth,request,docker,client,client,message,message,logger,debug,executing,docker,auth,request,auth,cmd,auth,cmd,client,auth,cmd,auth,config,auth,config,client,auth,config,if,auth,cmd,null,auth,cmd,with,auth,config,auth,config,return,auth,cmd
DockerProducer -> private AuthCmd executeAuthRequest(DockerClient client, Message message);1433489320;Produces a Authorization request__@param client_@param message_@return;private AuthCmd executeAuthRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Auth Request")___        AuthCmd authCmd = client.authCmd()___        AuthConfig authConfig = client.authConfig()___        if (authCmd != null) {_            authCmd.withAuthConfig(authConfig)__        }__        return authCmd__    };produces,a,authorization,request,param,client,param,message,return;private,auth,cmd,execute,auth,request,docker,client,client,message,message,logger,debug,executing,docker,auth,request,auth,cmd,auth,cmd,client,auth,cmd,auth,config,auth,config,client,auth,config,if,auth,cmd,null,auth,cmd,with,auth,config,auth,config,return,auth,cmd
DockerProducer -> private AuthCmd executeAuthRequest(DockerClient client, Message message);1440239526;Produces a Authorization request__@param client_@param message_@return;private AuthCmd executeAuthRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Auth Request")___        AuthCmd authCmd = client.authCmd()___        AuthConfig authConfig = client.authConfig()___        if (authCmd != null) {_            authCmd.withAuthConfig(authConfig)__        }__        return authCmd__    };produces,a,authorization,request,param,client,param,message,return;private,auth,cmd,execute,auth,request,docker,client,client,message,message,logger,debug,executing,docker,auth,request,auth,cmd,auth,cmd,client,auth,cmd,auth,config,auth,config,client,auth,config,if,auth,cmd,null,auth,cmd,with,auth,config,auth,config,return,auth,cmd
DockerProducer -> private AuthCmd executeAuthRequest(DockerClient client, Message message);1474362454;Produces a Authorization request__@param client_@param message_@return;private AuthCmd executeAuthRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Auth Request")___        AuthCmd authCmd = client.authCmd()___        AuthConfig authConfig = client.authConfig()___        if (authCmd != null) {_            authCmd.withAuthConfig(authConfig)__        }__        return authCmd__    };produces,a,authorization,request,param,client,param,message,return;private,auth,cmd,execute,auth,request,docker,client,client,message,message,logger,debug,executing,docker,auth,request,auth,cmd,auth,cmd,client,auth,cmd,auth,config,auth,config,client,auth,config,if,auth,cmd,null,auth,cmd,with,auth,config,auth,config,return,auth,cmd
DockerProducer -> private AuthCmd executeAuthRequest(DockerClient client, Message message);1531637865;Produces a Authorization request__@param client_@param message_@return;private AuthCmd executeAuthRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Auth Request")___        AuthCmd authCmd = client.authCmd()___        AuthConfig authConfig = client.authConfig()___        if (authCmd != null) {_            authCmd.withAuthConfig(authConfig)__        }__        return authCmd__    };produces,a,authorization,request,param,client,param,message,return;private,auth,cmd,execute,auth,request,docker,client,client,message,message,logger,debug,executing,docker,auth,request,auth,cmd,auth,cmd,client,auth,cmd,auth,config,auth,config,client,auth,config,if,auth,cmd,null,auth,cmd,with,auth,config,auth,config,return,auth,cmd
DockerProducer -> private AuthCmd executeAuthRequest(DockerClient client, Message message);1540108163;Produces a Authorization request__@param client_@param message_@return;private AuthCmd executeAuthRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Auth Request")___        AuthCmd authCmd = client.authCmd()___        AuthConfig authConfig = client.authConfig()___        if (authCmd != null) {_            authCmd.withAuthConfig(authConfig)__        }__        return authCmd__    };produces,a,authorization,request,param,client,param,message,return;private,auth,cmd,execute,auth,request,docker,client,client,message,message,logger,debug,executing,docker,auth,request,auth,cmd,auth,cmd,client,auth,cmd,auth,config,auth,config,client,auth,config,if,auth,cmd,null,auth,cmd,with,auth,config,auth,config,return,auth,cmd
DockerProducer -> private StartContainerCmd executeStartContainerRequest(DockerClient client, Message message);1424675020;Produce a start container request__@param client_@param message_@return;private StartContainerCmd executeStartContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Start Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        StartContainerCmd startContainerCmd = client.startContainerCmd(containerId)___        Bind[] binds = DockerHelper.getArrayProperty(DockerConstants.DOCKER_BINDS, message, Bind.class)___        if (binds != null) {_            startContainerCmd.withBinds(binds)__        }_        _        Capability[] capAdd = DockerHelper.getArrayProperty(DockerConstants.DOCKER_CAP_ADD, message, Capability.class)___        if (capAdd != null) {_            startContainerCmd.withCapAdd(capAdd)__        }__        Capability[] capDrop = DockerHelper.getArrayProperty(DockerConstants.DOCKER_CAP_DROP, message, Capability.class)___        if (capDrop != null) {_            startContainerCmd.withCapDrop(capDrop)__        }_        _        Device[] devices = DockerHelper.getArrayProperty(DockerConstants.DOCKER_DEVICES, message, Device.class)___        if (devices != null) {_            startContainerCmd.withDevices(devices)__        }_        _        String[] dns = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_DNS, message)___        if (dns != null) {_            startContainerCmd.withDns(dns)__        }__        String[] dnsSearch = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_DNS_SEARCH, message)___        if (dnsSearch != null) {_            startContainerCmd.withDnsSearch(dnsSearch)__        }__        Link[] links = DockerHelper.getArrayProperty(DockerConstants.DOCKER_LINKS, message, Link.class)___        if (links != null) {_            startContainerCmd.withLinks(links)__        }__        LxcConf[] lxcConf = DockerHelper.getArrayProperty(DockerConstants.DOCKER_LXC_CONF, message, LxcConf.class)___        if (lxcConf != null) {_            startContainerCmd.withLxcConf(lxcConf)__        }_        _        String networkMode = DockerHelper.getProperty(DockerConstants.DOCKER_NETWORK_MODE, configuration, message, String.class)___        if (networkMode != null) {_            startContainerCmd.withNetworkMode(networkMode)__        }__        Ports ports = DockerHelper.getProperty(DockerConstants.DOCKER_PORTS, configuration, message, Ports.class)___        if (ports != null) {_            startContainerCmd.withPortBindings(ports)__        }__        PortBinding[] portBinding = DockerHelper.getArrayProperty(DockerConstants.DOCKER_PORT_BINDINGS, message, PortBinding.class)___        if (portBinding != null) {_            startContainerCmd.withPortBindings(portBinding)__        }__        Boolean privileged = DockerHelper.getProperty(DockerConstants.DOCKER_PRIVILEGED, configuration, message, Boolean.class)___        if (privileged != null) {_            startContainerCmd.withPrivileged(privileged)__        }__        Boolean publishAllPorts = DockerHelper.getProperty(DockerConstants.DOCKER_PUBLISH_ALL_PORTS, configuration, message, Boolean.class)___        if (publishAllPorts != null) {_            startContainerCmd.withPublishAllPorts(publishAllPorts)__        }_        _        RestartPolicy restartPolicy = DockerHelper.getProperty(DockerConstants.DOCKER_RESTART_POLICY, configuration, message, RestartPolicy.class)___        if (restartPolicy != null) {_            startContainerCmd.withRestartPolicy(restartPolicy)__        }__        String volumesFrom = DockerHelper.getProperty(DockerConstants.DOCKER_VOLUMES_FROM, configuration, message, String.class)___        if (volumesFrom != null) {_            startContainerCmd.withVolumesFrom(volumesFrom)__        }__        return startContainerCmd___    };produce,a,start,container,request,param,client,param,message,return;private,start,container,cmd,execute,start,container,request,docker,client,client,message,message,logger,debug,executing,docker,start,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,start,container,cmd,start,container,cmd,client,start,container,cmd,container,id,bind,binds,docker,helper,get,array,property,docker,constants,message,bind,class,if,binds,null,start,container,cmd,with,binds,binds,capability,cap,add,docker,helper,get,array,property,docker,constants,message,capability,class,if,cap,add,null,start,container,cmd,with,cap,add,cap,add,capability,cap,drop,docker,helper,get,array,property,docker,constants,message,capability,class,if,cap,drop,null,start,container,cmd,with,cap,drop,cap,drop,device,devices,docker,helper,get,array,property,docker,constants,message,device,class,if,devices,null,start,container,cmd,with,devices,devices,string,dns,docker,helper,parse,delimited,string,header,docker,constants,message,if,dns,null,start,container,cmd,with,dns,dns,string,dns,search,docker,helper,parse,delimited,string,header,docker,constants,message,if,dns,search,null,start,container,cmd,with,dns,search,dns,search,link,links,docker,helper,get,array,property,docker,constants,message,link,class,if,links,null,start,container,cmd,with,links,links,lxc,conf,lxc,conf,docker,helper,get,array,property,docker,constants,message,lxc,conf,class,if,lxc,conf,null,start,container,cmd,with,lxc,conf,lxc,conf,string,network,mode,docker,helper,get,property,docker,constants,configuration,message,string,class,if,network,mode,null,start,container,cmd,with,network,mode,network,mode,ports,ports,docker,helper,get,property,docker,constants,configuration,message,ports,class,if,ports,null,start,container,cmd,with,port,bindings,ports,port,binding,port,binding,docker,helper,get,array,property,docker,constants,message,port,binding,class,if,port,binding,null,start,container,cmd,with,port,bindings,port,binding,boolean,privileged,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,privileged,null,start,container,cmd,with,privileged,privileged,boolean,publish,all,ports,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,publish,all,ports,null,start,container,cmd,with,publish,all,ports,publish,all,ports,restart,policy,restart,policy,docker,helper,get,property,docker,constants,configuration,message,restart,policy,class,if,restart,policy,null,start,container,cmd,with,restart,policy,restart,policy,string,volumes,from,docker,helper,get,property,docker,constants,configuration,message,string,class,if,volumes,from,null,start,container,cmd,with,volumes,from,volumes,from,return,start,container,cmd
DockerProducer -> private StartContainerCmd executeStartContainerRequest(DockerClient client, Message message);1424675476;Produce a start container request__@param client_@param message_@return;private StartContainerCmd executeStartContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Start Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        StartContainerCmd startContainerCmd = client.startContainerCmd(containerId)___        Bind[] binds = DockerHelper.getArrayProperty(DockerConstants.DOCKER_BINDS, message, Bind.class)___        if (binds != null) {_            startContainerCmd.withBinds(binds)__        }__        Capability[] capAdd = DockerHelper.getArrayProperty(DockerConstants.DOCKER_CAP_ADD, message, Capability.class)___        if (capAdd != null) {_            startContainerCmd.withCapAdd(capAdd)__        }__        Capability[] capDrop = DockerHelper.getArrayProperty(DockerConstants.DOCKER_CAP_DROP, message, Capability.class)___        if (capDrop != null) {_            startContainerCmd.withCapDrop(capDrop)__        }__        Device[] devices = DockerHelper.getArrayProperty(DockerConstants.DOCKER_DEVICES, message, Device.class)___        if (devices != null) {_            startContainerCmd.withDevices(devices)__        }__        String[] dns = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_DNS, message)___        if (dns != null) {_            startContainerCmd.withDns(dns)__        }__        String[] dnsSearch = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_DNS_SEARCH, message)___        if (dnsSearch != null) {_            startContainerCmd.withDnsSearch(dnsSearch)__        }__        Link[] links = DockerHelper.getArrayProperty(DockerConstants.DOCKER_LINKS, message, Link.class)___        if (links != null) {_            startContainerCmd.withLinks(links)__        }__        LxcConf[] lxcConf = DockerHelper.getArrayProperty(DockerConstants.DOCKER_LXC_CONF, message, LxcConf.class)___        if (lxcConf != null) {_            startContainerCmd.withLxcConf(lxcConf)__        }__        String networkMode = DockerHelper.getProperty(DockerConstants.DOCKER_NETWORK_MODE, configuration, message, String.class)___        if (networkMode != null) {_            startContainerCmd.withNetworkMode(networkMode)__        }__        Ports ports = DockerHelper.getProperty(DockerConstants.DOCKER_PORTS, configuration, message, Ports.class)___        if (ports != null) {_            startContainerCmd.withPortBindings(ports)__        }__        PortBinding[] portBinding = DockerHelper.getArrayProperty(DockerConstants.DOCKER_PORT_BINDINGS, message, PortBinding.class)___        if (portBinding != null) {_            startContainerCmd.withPortBindings(portBinding)__        }__        Boolean privileged = DockerHelper.getProperty(DockerConstants.DOCKER_PRIVILEGED, configuration, message, Boolean.class)___        if (privileged != null) {_            startContainerCmd.withPrivileged(privileged)__        }__        Boolean publishAllPorts = DockerHelper.getProperty(DockerConstants.DOCKER_PUBLISH_ALL_PORTS, configuration, message, Boolean.class)___        if (publishAllPorts != null) {_            startContainerCmd.withPublishAllPorts(publishAllPorts)__        }__        RestartPolicy restartPolicy = DockerHelper.getProperty(DockerConstants.DOCKER_RESTART_POLICY, configuration, message, RestartPolicy.class)___        if (restartPolicy != null) {_            startContainerCmd.withRestartPolicy(restartPolicy)__        }__        String volumesFrom = DockerHelper.getProperty(DockerConstants.DOCKER_VOLUMES_FROM, configuration, message, String.class)___        if (volumesFrom != null) {_            startContainerCmd.withVolumesFrom(volumesFrom)__        }__        return startContainerCmd___    };produce,a,start,container,request,param,client,param,message,return;private,start,container,cmd,execute,start,container,request,docker,client,client,message,message,logger,debug,executing,docker,start,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,start,container,cmd,start,container,cmd,client,start,container,cmd,container,id,bind,binds,docker,helper,get,array,property,docker,constants,message,bind,class,if,binds,null,start,container,cmd,with,binds,binds,capability,cap,add,docker,helper,get,array,property,docker,constants,message,capability,class,if,cap,add,null,start,container,cmd,with,cap,add,cap,add,capability,cap,drop,docker,helper,get,array,property,docker,constants,message,capability,class,if,cap,drop,null,start,container,cmd,with,cap,drop,cap,drop,device,devices,docker,helper,get,array,property,docker,constants,message,device,class,if,devices,null,start,container,cmd,with,devices,devices,string,dns,docker,helper,parse,delimited,string,header,docker,constants,message,if,dns,null,start,container,cmd,with,dns,dns,string,dns,search,docker,helper,parse,delimited,string,header,docker,constants,message,if,dns,search,null,start,container,cmd,with,dns,search,dns,search,link,links,docker,helper,get,array,property,docker,constants,message,link,class,if,links,null,start,container,cmd,with,links,links,lxc,conf,lxc,conf,docker,helper,get,array,property,docker,constants,message,lxc,conf,class,if,lxc,conf,null,start,container,cmd,with,lxc,conf,lxc,conf,string,network,mode,docker,helper,get,property,docker,constants,configuration,message,string,class,if,network,mode,null,start,container,cmd,with,network,mode,network,mode,ports,ports,docker,helper,get,property,docker,constants,configuration,message,ports,class,if,ports,null,start,container,cmd,with,port,bindings,ports,port,binding,port,binding,docker,helper,get,array,property,docker,constants,message,port,binding,class,if,port,binding,null,start,container,cmd,with,port,bindings,port,binding,boolean,privileged,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,privileged,null,start,container,cmd,with,privileged,privileged,boolean,publish,all,ports,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,publish,all,ports,null,start,container,cmd,with,publish,all,ports,publish,all,ports,restart,policy,restart,policy,docker,helper,get,property,docker,constants,configuration,message,restart,policy,class,if,restart,policy,null,start,container,cmd,with,restart,policy,restart,policy,string,volumes,from,docker,helper,get,property,docker,constants,configuration,message,string,class,if,volumes,from,null,start,container,cmd,with,volumes,from,volumes,from,return,start,container,cmd
DockerProducer -> private StartContainerCmd executeStartContainerRequest(DockerClient client, Message message);1424877876;Produce a start container request__@param client_@param message_@return;private StartContainerCmd executeStartContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Start Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        StartContainerCmd startContainerCmd = client.startContainerCmd(containerId)___        Bind[] binds = DockerHelper.getArrayProperty(DockerConstants.DOCKER_BINDS, message, Bind.class)___        if (binds != null) {_            startContainerCmd.withBinds(binds)__        }__        Capability[] capAdd = DockerHelper.getArrayProperty(DockerConstants.DOCKER_CAP_ADD, message, Capability.class)___        if (capAdd != null) {_            startContainerCmd.withCapAdd(capAdd)__        }__        Capability[] capDrop = DockerHelper.getArrayProperty(DockerConstants.DOCKER_CAP_DROP, message, Capability.class)___        if (capDrop != null) {_            startContainerCmd.withCapDrop(capDrop)__        }__        Device[] devices = DockerHelper.getArrayProperty(DockerConstants.DOCKER_DEVICES, message, Device.class)___        if (devices != null) {_            startContainerCmd.withDevices(devices)__        }__        String[] dns = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_DNS, message)___        if (dns != null) {_            startContainerCmd.withDns(dns)__        }__        String[] dnsSearch = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_DNS_SEARCH, message)___        if (dnsSearch != null) {_            startContainerCmd.withDnsSearch(dnsSearch)__        }__        Link[] links = DockerHelper.getArrayProperty(DockerConstants.DOCKER_LINKS, message, Link.class)___        if (links != null) {_            startContainerCmd.withLinks(links)__        }__        LxcConf[] lxcConf = DockerHelper.getArrayProperty(DockerConstants.DOCKER_LXC_CONF, message, LxcConf.class)___        if (lxcConf != null) {_            startContainerCmd.withLxcConf(lxcConf)__        }__        String networkMode = DockerHelper.getProperty(DockerConstants.DOCKER_NETWORK_MODE, configuration, message, String.class)___        if (networkMode != null) {_            startContainerCmd.withNetworkMode(networkMode)__        }__        Ports ports = DockerHelper.getProperty(DockerConstants.DOCKER_PORTS, configuration, message, Ports.class)___        if (ports != null) {_            startContainerCmd.withPortBindings(ports)__        }__        PortBinding[] portBinding = DockerHelper.getArrayProperty(DockerConstants.DOCKER_PORT_BINDINGS, message, PortBinding.class)___        if (portBinding != null) {_            startContainerCmd.withPortBindings(portBinding)__        }__        Boolean privileged = DockerHelper.getProperty(DockerConstants.DOCKER_PRIVILEGED, configuration, message, Boolean.class)___        if (privileged != null) {_            startContainerCmd.withPrivileged(privileged)__        }__        Boolean publishAllPorts = DockerHelper.getProperty(DockerConstants.DOCKER_PUBLISH_ALL_PORTS, configuration, message, Boolean.class)___        if (publishAllPorts != null) {_            startContainerCmd.withPublishAllPorts(publishAllPorts)__        }__        RestartPolicy restartPolicy = DockerHelper.getProperty(DockerConstants.DOCKER_RESTART_POLICY, configuration, message, RestartPolicy.class)___        if (restartPolicy != null) {_            startContainerCmd.withRestartPolicy(restartPolicy)__        }__        String volumesFrom = DockerHelper.getProperty(DockerConstants.DOCKER_VOLUMES_FROM, configuration, message, String.class)___        if (volumesFrom != null) {_            startContainerCmd.withVolumesFrom(volumesFrom)__        }__        return startContainerCmd___    };produce,a,start,container,request,param,client,param,message,return;private,start,container,cmd,execute,start,container,request,docker,client,client,message,message,logger,debug,executing,docker,start,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,start,container,cmd,start,container,cmd,client,start,container,cmd,container,id,bind,binds,docker,helper,get,array,property,docker,constants,message,bind,class,if,binds,null,start,container,cmd,with,binds,binds,capability,cap,add,docker,helper,get,array,property,docker,constants,message,capability,class,if,cap,add,null,start,container,cmd,with,cap,add,cap,add,capability,cap,drop,docker,helper,get,array,property,docker,constants,message,capability,class,if,cap,drop,null,start,container,cmd,with,cap,drop,cap,drop,device,devices,docker,helper,get,array,property,docker,constants,message,device,class,if,devices,null,start,container,cmd,with,devices,devices,string,dns,docker,helper,parse,delimited,string,header,docker,constants,message,if,dns,null,start,container,cmd,with,dns,dns,string,dns,search,docker,helper,parse,delimited,string,header,docker,constants,message,if,dns,search,null,start,container,cmd,with,dns,search,dns,search,link,links,docker,helper,get,array,property,docker,constants,message,link,class,if,links,null,start,container,cmd,with,links,links,lxc,conf,lxc,conf,docker,helper,get,array,property,docker,constants,message,lxc,conf,class,if,lxc,conf,null,start,container,cmd,with,lxc,conf,lxc,conf,string,network,mode,docker,helper,get,property,docker,constants,configuration,message,string,class,if,network,mode,null,start,container,cmd,with,network,mode,network,mode,ports,ports,docker,helper,get,property,docker,constants,configuration,message,ports,class,if,ports,null,start,container,cmd,with,port,bindings,ports,port,binding,port,binding,docker,helper,get,array,property,docker,constants,message,port,binding,class,if,port,binding,null,start,container,cmd,with,port,bindings,port,binding,boolean,privileged,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,privileged,null,start,container,cmd,with,privileged,privileged,boolean,publish,all,ports,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,publish,all,ports,null,start,container,cmd,with,publish,all,ports,publish,all,ports,restart,policy,restart,policy,docker,helper,get,property,docker,constants,configuration,message,restart,policy,class,if,restart,policy,null,start,container,cmd,with,restart,policy,restart,policy,string,volumes,from,docker,helper,get,property,docker,constants,configuration,message,string,class,if,volumes,from,null,start,container,cmd,with,volumes,from,volumes,from,return,start,container,cmd
DockerProducer -> private StartContainerCmd executeStartContainerRequest(DockerClient client, Message message);1429199966;Produce a start container request__@param client_@param message_@return;private StartContainerCmd executeStartContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Start Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        StartContainerCmd startContainerCmd = client.startContainerCmd(containerId)___        Bind[] binds = DockerHelper.getArrayProperty(DockerConstants.DOCKER_BINDS, message, Bind.class)___        if (binds != null) {_            startContainerCmd.withBinds(binds)__        }__        Capability[] capAdd = DockerHelper.getArrayProperty(DockerConstants.DOCKER_CAP_ADD, message, Capability.class)___        if (capAdd != null) {_            startContainerCmd.withCapAdd(capAdd)__        }__        Capability[] capDrop = DockerHelper.getArrayProperty(DockerConstants.DOCKER_CAP_DROP, message, Capability.class)___        if (capDrop != null) {_            startContainerCmd.withCapDrop(capDrop)__        }__        Device[] devices = DockerHelper.getArrayProperty(DockerConstants.DOCKER_DEVICES, message, Device.class)___        if (devices != null) {_            startContainerCmd.withDevices(devices)__        }__        String[] dns = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_DNS, message)___        if (dns != null) {_            startContainerCmd.withDns(dns)__        }__        String[] dnsSearch = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_DNS_SEARCH, message)___        if (dnsSearch != null) {_            startContainerCmd.withDnsSearch(dnsSearch)__        }__        Link[] links = DockerHelper.getArrayProperty(DockerConstants.DOCKER_LINKS, message, Link.class)___        if (links != null) {_            startContainerCmd.withLinks(links)__        }__        LxcConf[] lxcConf = DockerHelper.getArrayProperty(DockerConstants.DOCKER_LXC_CONF, message, LxcConf.class)___        if (lxcConf != null) {_            startContainerCmd.withLxcConf(lxcConf)__        }__        String networkMode = DockerHelper.getProperty(DockerConstants.DOCKER_NETWORK_MODE, configuration, message, String.class)___        if (networkMode != null) {_            startContainerCmd.withNetworkMode(networkMode)__        }__        Ports ports = DockerHelper.getProperty(DockerConstants.DOCKER_PORTS, configuration, message, Ports.class)___        if (ports != null) {_            startContainerCmd.withPortBindings(ports)__        }__        PortBinding[] portBinding = DockerHelper.getArrayProperty(DockerConstants.DOCKER_PORT_BINDINGS, message, PortBinding.class)___        if (portBinding != null) {_            startContainerCmd.withPortBindings(portBinding)__        }__        Boolean privileged = DockerHelper.getProperty(DockerConstants.DOCKER_PRIVILEGED, configuration, message, Boolean.class)___        if (privileged != null) {_            startContainerCmd.withPrivileged(privileged)__        }__        Boolean publishAllPorts = DockerHelper.getProperty(DockerConstants.DOCKER_PUBLISH_ALL_PORTS, configuration, message, Boolean.class)___        if (publishAllPorts != null) {_            startContainerCmd.withPublishAllPorts(publishAllPorts)__        }__        RestartPolicy restartPolicy = DockerHelper.getProperty(DockerConstants.DOCKER_RESTART_POLICY, configuration, message, RestartPolicy.class)___        if (restartPolicy != null) {_            startContainerCmd.withRestartPolicy(restartPolicy)__        }__        String volumesFrom = DockerHelper.getProperty(DockerConstants.DOCKER_VOLUMES_FROM, configuration, message, String.class)___        if (volumesFrom != null) {_            startContainerCmd.withVolumesFrom(volumesFrom)__        }__        return startContainerCmd___    };produce,a,start,container,request,param,client,param,message,return;private,start,container,cmd,execute,start,container,request,docker,client,client,message,message,logger,debug,executing,docker,start,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,start,container,cmd,start,container,cmd,client,start,container,cmd,container,id,bind,binds,docker,helper,get,array,property,docker,constants,message,bind,class,if,binds,null,start,container,cmd,with,binds,binds,capability,cap,add,docker,helper,get,array,property,docker,constants,message,capability,class,if,cap,add,null,start,container,cmd,with,cap,add,cap,add,capability,cap,drop,docker,helper,get,array,property,docker,constants,message,capability,class,if,cap,drop,null,start,container,cmd,with,cap,drop,cap,drop,device,devices,docker,helper,get,array,property,docker,constants,message,device,class,if,devices,null,start,container,cmd,with,devices,devices,string,dns,docker,helper,parse,delimited,string,header,docker,constants,message,if,dns,null,start,container,cmd,with,dns,dns,string,dns,search,docker,helper,parse,delimited,string,header,docker,constants,message,if,dns,search,null,start,container,cmd,with,dns,search,dns,search,link,links,docker,helper,get,array,property,docker,constants,message,link,class,if,links,null,start,container,cmd,with,links,links,lxc,conf,lxc,conf,docker,helper,get,array,property,docker,constants,message,lxc,conf,class,if,lxc,conf,null,start,container,cmd,with,lxc,conf,lxc,conf,string,network,mode,docker,helper,get,property,docker,constants,configuration,message,string,class,if,network,mode,null,start,container,cmd,with,network,mode,network,mode,ports,ports,docker,helper,get,property,docker,constants,configuration,message,ports,class,if,ports,null,start,container,cmd,with,port,bindings,ports,port,binding,port,binding,docker,helper,get,array,property,docker,constants,message,port,binding,class,if,port,binding,null,start,container,cmd,with,port,bindings,port,binding,boolean,privileged,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,privileged,null,start,container,cmd,with,privileged,privileged,boolean,publish,all,ports,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,publish,all,ports,null,start,container,cmd,with,publish,all,ports,publish,all,ports,restart,policy,restart,policy,docker,helper,get,property,docker,constants,configuration,message,restart,policy,class,if,restart,policy,null,start,container,cmd,with,restart,policy,restart,policy,string,volumes,from,docker,helper,get,property,docker,constants,configuration,message,string,class,if,volumes,from,null,start,container,cmd,with,volumes,from,volumes,from,return,start,container,cmd
DockerProducer -> private StartContainerCmd executeStartContainerRequest(DockerClient client, Message message);1433489320;Produce a start container request__@param client_@param message_@return;private StartContainerCmd executeStartContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Start Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        StartContainerCmd startContainerCmd = client.startContainerCmd(containerId)___        Bind[] binds = DockerHelper.getArrayProperty(DockerConstants.DOCKER_BINDS, message, Bind.class)___        if (binds != null) {_            startContainerCmd.withBinds(binds)__        }__        Capability[] capAdd = DockerHelper.getArrayProperty(DockerConstants.DOCKER_CAP_ADD, message, Capability.class)___        if (capAdd != null) {_            startContainerCmd.withCapAdd(capAdd)__        }__        Capability[] capDrop = DockerHelper.getArrayProperty(DockerConstants.DOCKER_CAP_DROP, message, Capability.class)___        if (capDrop != null) {_            startContainerCmd.withCapDrop(capDrop)__        }__        Device[] devices = DockerHelper.getArrayProperty(DockerConstants.DOCKER_DEVICES, message, Device.class)___        if (devices != null) {_            startContainerCmd.withDevices(devices)__        }__        String[] dns = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_DNS, message)___        if (dns != null) {_            startContainerCmd.withDns(dns)__        }__        String[] dnsSearch = DockerHelper.parseDelimitedStringHeader(DockerConstants.DOCKER_DNS_SEARCH, message)___        if (dnsSearch != null) {_            startContainerCmd.withDnsSearch(dnsSearch)__        }__        Link[] links = DockerHelper.getArrayProperty(DockerConstants.DOCKER_LINKS, message, Link.class)___        if (links != null) {_            startContainerCmd.withLinks(links)__        }__        LxcConf[] lxcConf = DockerHelper.getArrayProperty(DockerConstants.DOCKER_LXC_CONF, message, LxcConf.class)___        if (lxcConf != null) {_            startContainerCmd.withLxcConf(lxcConf)__        }__        String networkMode = DockerHelper.getProperty(DockerConstants.DOCKER_NETWORK_MODE, configuration, message, String.class)___        if (networkMode != null) {_            startContainerCmd.withNetworkMode(networkMode)__        }__        Ports ports = DockerHelper.getProperty(DockerConstants.DOCKER_PORTS, configuration, message, Ports.class)___        if (ports != null) {_            startContainerCmd.withPortBindings(ports)__        }__        PortBinding[] portBinding = DockerHelper.getArrayProperty(DockerConstants.DOCKER_PORT_BINDINGS, message, PortBinding.class)___        if (portBinding != null) {_            startContainerCmd.withPortBindings(portBinding)__        }__        Boolean privileged = DockerHelper.getProperty(DockerConstants.DOCKER_PRIVILEGED, configuration, message, Boolean.class)___        if (privileged != null) {_            startContainerCmd.withPrivileged(privileged)__        }__        Boolean publishAllPorts = DockerHelper.getProperty(DockerConstants.DOCKER_PUBLISH_ALL_PORTS, configuration, message, Boolean.class)___        if (publishAllPorts != null) {_            startContainerCmd.withPublishAllPorts(publishAllPorts)__        }__        RestartPolicy restartPolicy = DockerHelper.getProperty(DockerConstants.DOCKER_RESTART_POLICY, configuration, message, RestartPolicy.class)___        if (restartPolicy != null) {_            startContainerCmd.withRestartPolicy(restartPolicy)__        }__        String volumesFrom = DockerHelper.getProperty(DockerConstants.DOCKER_VOLUMES_FROM, configuration, message, String.class)___        if (volumesFrom != null) {_            startContainerCmd.withVolumesFrom(volumesFrom)__        }__        return startContainerCmd___    };produce,a,start,container,request,param,client,param,message,return;private,start,container,cmd,execute,start,container,request,docker,client,client,message,message,logger,debug,executing,docker,start,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,start,container,cmd,start,container,cmd,client,start,container,cmd,container,id,bind,binds,docker,helper,get,array,property,docker,constants,message,bind,class,if,binds,null,start,container,cmd,with,binds,binds,capability,cap,add,docker,helper,get,array,property,docker,constants,message,capability,class,if,cap,add,null,start,container,cmd,with,cap,add,cap,add,capability,cap,drop,docker,helper,get,array,property,docker,constants,message,capability,class,if,cap,drop,null,start,container,cmd,with,cap,drop,cap,drop,device,devices,docker,helper,get,array,property,docker,constants,message,device,class,if,devices,null,start,container,cmd,with,devices,devices,string,dns,docker,helper,parse,delimited,string,header,docker,constants,message,if,dns,null,start,container,cmd,with,dns,dns,string,dns,search,docker,helper,parse,delimited,string,header,docker,constants,message,if,dns,search,null,start,container,cmd,with,dns,search,dns,search,link,links,docker,helper,get,array,property,docker,constants,message,link,class,if,links,null,start,container,cmd,with,links,links,lxc,conf,lxc,conf,docker,helper,get,array,property,docker,constants,message,lxc,conf,class,if,lxc,conf,null,start,container,cmd,with,lxc,conf,lxc,conf,string,network,mode,docker,helper,get,property,docker,constants,configuration,message,string,class,if,network,mode,null,start,container,cmd,with,network,mode,network,mode,ports,ports,docker,helper,get,property,docker,constants,configuration,message,ports,class,if,ports,null,start,container,cmd,with,port,bindings,ports,port,binding,port,binding,docker,helper,get,array,property,docker,constants,message,port,binding,class,if,port,binding,null,start,container,cmd,with,port,bindings,port,binding,boolean,privileged,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,privileged,null,start,container,cmd,with,privileged,privileged,boolean,publish,all,ports,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,publish,all,ports,null,start,container,cmd,with,publish,all,ports,publish,all,ports,restart,policy,restart,policy,docker,helper,get,property,docker,constants,configuration,message,restart,policy,class,if,restart,policy,null,start,container,cmd,with,restart,policy,restart,policy,string,volumes,from,docker,helper,get,property,docker,constants,configuration,message,string,class,if,volumes,from,null,start,container,cmd,with,volumes,from,volumes,from,return,start,container,cmd
DockerProducer -> private StartContainerCmd executeStartContainerRequest(DockerClient client, Message message);1440239526;Produce a start container request__@param client_@param message_@return;private StartContainerCmd executeStartContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Start Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        StartContainerCmd startContainerCmd = client.startContainerCmd(containerId)___        return startContainerCmd___    };produce,a,start,container,request,param,client,param,message,return;private,start,container,cmd,execute,start,container,request,docker,client,client,message,message,logger,debug,executing,docker,start,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,start,container,cmd,start,container,cmd,client,start,container,cmd,container,id,return,start,container,cmd
DockerProducer -> private StartContainerCmd executeStartContainerRequest(DockerClient client, Message message);1474362454;Produce a start container request__@param client_@param message_@return;private StartContainerCmd executeStartContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Start Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        StartContainerCmd startContainerCmd = client.startContainerCmd(containerId)___        return startContainerCmd___    };produce,a,start,container,request,param,client,param,message,return;private,start,container,cmd,execute,start,container,request,docker,client,client,message,message,logger,debug,executing,docker,start,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,start,container,cmd,start,container,cmd,client,start,container,cmd,container,id,return,start,container,cmd
DockerProducer -> private StartContainerCmd executeStartContainerRequest(DockerClient client, Message message);1531637865;Produce a start container request__@param client_@param message_@return;private StartContainerCmd executeStartContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Start Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        StartContainerCmd startContainerCmd = client.startContainerCmd(containerId)___        return startContainerCmd___    };produce,a,start,container,request,param,client,param,message,return;private,start,container,cmd,execute,start,container,request,docker,client,client,message,message,logger,debug,executing,docker,start,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,start,container,cmd,start,container,cmd,client,start,container,cmd,container,id,return,start,container,cmd
DockerProducer -> private StartContainerCmd executeStartContainerRequest(DockerClient client, Message message);1540108163;Produce a start container request__@param client_@param message_@return;private StartContainerCmd executeStartContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Start Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        StartContainerCmd startContainerCmd = client.startContainerCmd(containerId)___        return startContainerCmd___    };produce,a,start,container,request,param,client,param,message,return;private,start,container,cmd,execute,start,container,request,docker,client,client,message,message,logger,debug,executing,docker,start,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,start,container,cmd,start,container,cmd,client,start,container,cmd,container,id,return,start,container,cmd
DockerProducer -> private KillContainerCmd executeKillContainerRequest(DockerClient client, Message message);1424675020;Produces a kill container request__@param client_@param message_@return;private KillContainerCmd executeKillContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Kill Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        KillContainerCmd killContainerCmd = client.killContainerCmd(containerId)___        String signal = DockerHelper.getProperty(DockerConstants.DOCKER_SIGNAL, configuration, message, String.class)___        if (signal != null) {_            killContainerCmd.withSignal(signal)__        }__        return killContainerCmd___    };produces,a,kill,container,request,param,client,param,message,return;private,kill,container,cmd,execute,kill,container,request,docker,client,client,message,message,logger,debug,executing,docker,kill,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,kill,container,cmd,kill,container,cmd,client,kill,container,cmd,container,id,string,signal,docker,helper,get,property,docker,constants,configuration,message,string,class,if,signal,null,kill,container,cmd,with,signal,signal,return,kill,container,cmd
DockerProducer -> private KillContainerCmd executeKillContainerRequest(DockerClient client, Message message);1424675476;Produces a kill container request__@param client_@param message_@return;private KillContainerCmd executeKillContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Kill Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        KillContainerCmd killContainerCmd = client.killContainerCmd(containerId)___        String signal = DockerHelper.getProperty(DockerConstants.DOCKER_SIGNAL, configuration, message, String.class)___        if (signal != null) {_            killContainerCmd.withSignal(signal)__        }__        return killContainerCmd___    };produces,a,kill,container,request,param,client,param,message,return;private,kill,container,cmd,execute,kill,container,request,docker,client,client,message,message,logger,debug,executing,docker,kill,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,kill,container,cmd,kill,container,cmd,client,kill,container,cmd,container,id,string,signal,docker,helper,get,property,docker,constants,configuration,message,string,class,if,signal,null,kill,container,cmd,with,signal,signal,return,kill,container,cmd
DockerProducer -> private KillContainerCmd executeKillContainerRequest(DockerClient client, Message message);1424877876;Produces a kill container request__@param client_@param message_@return;private KillContainerCmd executeKillContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Kill Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        KillContainerCmd killContainerCmd = client.killContainerCmd(containerId)___        String signal = DockerHelper.getProperty(DockerConstants.DOCKER_SIGNAL, configuration, message, String.class)___        if (signal != null) {_            killContainerCmd.withSignal(signal)__        }__        return killContainerCmd___    };produces,a,kill,container,request,param,client,param,message,return;private,kill,container,cmd,execute,kill,container,request,docker,client,client,message,message,logger,debug,executing,docker,kill,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,kill,container,cmd,kill,container,cmd,client,kill,container,cmd,container,id,string,signal,docker,helper,get,property,docker,constants,configuration,message,string,class,if,signal,null,kill,container,cmd,with,signal,signal,return,kill,container,cmd
DockerProducer -> private KillContainerCmd executeKillContainerRequest(DockerClient client, Message message);1429199966;Produces a kill container request__@param client_@param message_@return;private KillContainerCmd executeKillContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Kill Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        KillContainerCmd killContainerCmd = client.killContainerCmd(containerId)___        String signal = DockerHelper.getProperty(DockerConstants.DOCKER_SIGNAL, configuration, message, String.class)___        if (signal != null) {_            killContainerCmd.withSignal(signal)__        }__        return killContainerCmd___    };produces,a,kill,container,request,param,client,param,message,return;private,kill,container,cmd,execute,kill,container,request,docker,client,client,message,message,logger,debug,executing,docker,kill,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,kill,container,cmd,kill,container,cmd,client,kill,container,cmd,container,id,string,signal,docker,helper,get,property,docker,constants,configuration,message,string,class,if,signal,null,kill,container,cmd,with,signal,signal,return,kill,container,cmd
DockerProducer -> private KillContainerCmd executeKillContainerRequest(DockerClient client, Message message);1433489320;Produces a kill container request__@param client_@param message_@return;private KillContainerCmd executeKillContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Kill Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        KillContainerCmd killContainerCmd = client.killContainerCmd(containerId)___        String signal = DockerHelper.getProperty(DockerConstants.DOCKER_SIGNAL, configuration, message, String.class)___        if (signal != null) {_            killContainerCmd.withSignal(signal)__        }__        return killContainerCmd___    };produces,a,kill,container,request,param,client,param,message,return;private,kill,container,cmd,execute,kill,container,request,docker,client,client,message,message,logger,debug,executing,docker,kill,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,kill,container,cmd,kill,container,cmd,client,kill,container,cmd,container,id,string,signal,docker,helper,get,property,docker,constants,configuration,message,string,class,if,signal,null,kill,container,cmd,with,signal,signal,return,kill,container,cmd
DockerProducer -> private KillContainerCmd executeKillContainerRequest(DockerClient client, Message message);1440239526;Produces a kill container request__@param client_@param message_@return;private KillContainerCmd executeKillContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Kill Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        KillContainerCmd killContainerCmd = client.killContainerCmd(containerId)___        String signal = DockerHelper.getProperty(DockerConstants.DOCKER_SIGNAL, configuration, message, String.class)___        if (signal != null) {_            killContainerCmd.withSignal(signal)__        }__        return killContainerCmd___    };produces,a,kill,container,request,param,client,param,message,return;private,kill,container,cmd,execute,kill,container,request,docker,client,client,message,message,logger,debug,executing,docker,kill,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,kill,container,cmd,kill,container,cmd,client,kill,container,cmd,container,id,string,signal,docker,helper,get,property,docker,constants,configuration,message,string,class,if,signal,null,kill,container,cmd,with,signal,signal,return,kill,container,cmd
DockerProducer -> private KillContainerCmd executeKillContainerRequest(DockerClient client, Message message);1474362454;Produces a kill container request__@param client_@param message_@return;private KillContainerCmd executeKillContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Kill Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        KillContainerCmd killContainerCmd = client.killContainerCmd(containerId)___        String signal = DockerHelper.getProperty(DockerConstants.DOCKER_SIGNAL, configuration, message, String.class)___        if (signal != null) {_            killContainerCmd.withSignal(signal)__        }__        return killContainerCmd___    };produces,a,kill,container,request,param,client,param,message,return;private,kill,container,cmd,execute,kill,container,request,docker,client,client,message,message,logger,debug,executing,docker,kill,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,kill,container,cmd,kill,container,cmd,client,kill,container,cmd,container,id,string,signal,docker,helper,get,property,docker,constants,configuration,message,string,class,if,signal,null,kill,container,cmd,with,signal,signal,return,kill,container,cmd
DockerProducer -> private KillContainerCmd executeKillContainerRequest(DockerClient client, Message message);1531637865;Produces a kill container request__@param client_@param message_@return;private KillContainerCmd executeKillContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Kill Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        KillContainerCmd killContainerCmd = client.killContainerCmd(containerId)___        String signal = DockerHelper.getProperty(DockerConstants.DOCKER_SIGNAL, configuration, message, String.class)___        if (signal != null) {_            killContainerCmd.withSignal(signal)__        }__        return killContainerCmd___    };produces,a,kill,container,request,param,client,param,message,return;private,kill,container,cmd,execute,kill,container,request,docker,client,client,message,message,logger,debug,executing,docker,kill,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,kill,container,cmd,kill,container,cmd,client,kill,container,cmd,container,id,string,signal,docker,helper,get,property,docker,constants,configuration,message,string,class,if,signal,null,kill,container,cmd,with,signal,signal,return,kill,container,cmd
DockerProducer -> private KillContainerCmd executeKillContainerRequest(DockerClient client, Message message);1540108163;Produces a kill container request__@param client_@param message_@return;private KillContainerCmd executeKillContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Kill Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        KillContainerCmd killContainerCmd = client.killContainerCmd(containerId)___        String signal = DockerHelper.getProperty(DockerConstants.DOCKER_SIGNAL, configuration, message, String.class)___        if (signal != null) {_            killContainerCmd.withSignal(signal)__        }__        return killContainerCmd___    };produces,a,kill,container,request,param,client,param,message,return;private,kill,container,cmd,execute,kill,container,request,docker,client,client,message,message,logger,debug,executing,docker,kill,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,kill,container,cmd,kill,container,cmd,client,kill,container,cmd,container,id,string,signal,docker,helper,get,property,docker,constants,configuration,message,string,class,if,signal,null,kill,container,cmd,with,signal,signal,return,kill,container,cmd
DockerProducer -> private PauseContainerCmd executePauseContainerRequest(DockerClient client, Message message);1424675020;Produces a pause container request__@param client_@param message_@return;private PauseContainerCmd executePauseContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Pause Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        PauseContainerCmd pauseContainerCmd = client.pauseContainerCmd(containerId)___        return pauseContainerCmd___    };produces,a,pause,container,request,param,client,param,message,return;private,pause,container,cmd,execute,pause,container,request,docker,client,client,message,message,logger,debug,executing,docker,pause,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,pause,container,cmd,pause,container,cmd,client,pause,container,cmd,container,id,return,pause,container,cmd
DockerProducer -> private PauseContainerCmd executePauseContainerRequest(DockerClient client, Message message);1424675476;Produces a pause container request__@param client_@param message_@return;private PauseContainerCmd executePauseContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Pause Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        PauseContainerCmd pauseContainerCmd = client.pauseContainerCmd(containerId)___        return pauseContainerCmd___    };produces,a,pause,container,request,param,client,param,message,return;private,pause,container,cmd,execute,pause,container,request,docker,client,client,message,message,logger,debug,executing,docker,pause,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,pause,container,cmd,pause,container,cmd,client,pause,container,cmd,container,id,return,pause,container,cmd
DockerProducer -> private PauseContainerCmd executePauseContainerRequest(DockerClient client, Message message);1424877876;Produces a pause container request__@param client_@param message_@return;private PauseContainerCmd executePauseContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Pause Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        PauseContainerCmd pauseContainerCmd = client.pauseContainerCmd(containerId)___        return pauseContainerCmd___    };produces,a,pause,container,request,param,client,param,message,return;private,pause,container,cmd,execute,pause,container,request,docker,client,client,message,message,logger,debug,executing,docker,pause,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,pause,container,cmd,pause,container,cmd,client,pause,container,cmd,container,id,return,pause,container,cmd
DockerProducer -> private PauseContainerCmd executePauseContainerRequest(DockerClient client, Message message);1429199966;Produces a pause container request__@param client_@param message_@return;private PauseContainerCmd executePauseContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Pause Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        PauseContainerCmd pauseContainerCmd = client.pauseContainerCmd(containerId)___        return pauseContainerCmd___    };produces,a,pause,container,request,param,client,param,message,return;private,pause,container,cmd,execute,pause,container,request,docker,client,client,message,message,logger,debug,executing,docker,pause,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,pause,container,cmd,pause,container,cmd,client,pause,container,cmd,container,id,return,pause,container,cmd
DockerProducer -> private PauseContainerCmd executePauseContainerRequest(DockerClient client, Message message);1433489320;Produces a pause container request__@param client_@param message_@return;private PauseContainerCmd executePauseContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Pause Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        PauseContainerCmd pauseContainerCmd = client.pauseContainerCmd(containerId)___        return pauseContainerCmd___    };produces,a,pause,container,request,param,client,param,message,return;private,pause,container,cmd,execute,pause,container,request,docker,client,client,message,message,logger,debug,executing,docker,pause,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,pause,container,cmd,pause,container,cmd,client,pause,container,cmd,container,id,return,pause,container,cmd
DockerProducer -> private PauseContainerCmd executePauseContainerRequest(DockerClient client, Message message);1440239526;Produces a pause container request__@param client_@param message_@return;private PauseContainerCmd executePauseContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Pause Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        PauseContainerCmd pauseContainerCmd = client.pauseContainerCmd(containerId)___        return pauseContainerCmd___    };produces,a,pause,container,request,param,client,param,message,return;private,pause,container,cmd,execute,pause,container,request,docker,client,client,message,message,logger,debug,executing,docker,pause,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,pause,container,cmd,pause,container,cmd,client,pause,container,cmd,container,id,return,pause,container,cmd
DockerProducer -> private PauseContainerCmd executePauseContainerRequest(DockerClient client, Message message);1474362454;Produces a pause container request__@param client_@param message_@return;private PauseContainerCmd executePauseContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Pause Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        PauseContainerCmd pauseContainerCmd = client.pauseContainerCmd(containerId)___        return pauseContainerCmd___    };produces,a,pause,container,request,param,client,param,message,return;private,pause,container,cmd,execute,pause,container,request,docker,client,client,message,message,logger,debug,executing,docker,pause,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,pause,container,cmd,pause,container,cmd,client,pause,container,cmd,container,id,return,pause,container,cmd
DockerProducer -> private PauseContainerCmd executePauseContainerRequest(DockerClient client, Message message);1531637865;Produces a pause container request__@param client_@param message_@return;private PauseContainerCmd executePauseContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Pause Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        PauseContainerCmd pauseContainerCmd = client.pauseContainerCmd(containerId)___        return pauseContainerCmd___    };produces,a,pause,container,request,param,client,param,message,return;private,pause,container,cmd,execute,pause,container,request,docker,client,client,message,message,logger,debug,executing,docker,pause,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,pause,container,cmd,pause,container,cmd,client,pause,container,cmd,container,id,return,pause,container,cmd
DockerProducer -> private PauseContainerCmd executePauseContainerRequest(DockerClient client, Message message);1540108163;Produces a pause container request__@param client_@param message_@return;private PauseContainerCmd executePauseContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Pause Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        PauseContainerCmd pauseContainerCmd = client.pauseContainerCmd(containerId)___        return pauseContainerCmd___    };produces,a,pause,container,request,param,client,param,message,return;private,pause,container,cmd,execute,pause,container,request,docker,client,client,message,message,logger,debug,executing,docker,pause,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,pause,container,cmd,pause,container,cmd,client,pause,container,cmd,container,id,return,pause,container,cmd
DockerProducer -> private RemoveImageCmd executeRemoveImageRequest(DockerClient client, Message message) throws DockerException;1415211488;Produces a remove image request__@param client_@param message_@return_@throws DockerException;private RemoveImageCmd executeRemoveImageRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Remove Image Request")__        _        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)__        _        RemoveImageCmd removeImagesCmd = client.removeImageCmd(imageId)__        _        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)__        _        if (force != null && force) {_            removeImagesCmd.withForce()__        }_        _        Boolean prune = DockerHelper.getProperty(DockerConstants.DOCKER_NO_PRUNE, configuration, message, Boolean.class)__        _        if (prune != null && prune) {_            removeImagesCmd.withNoPrune()__        }_        _        return removeImagesCmd___    };produces,a,remove,image,request,param,client,param,message,return,throws,docker,exception;private,remove,image,cmd,execute,remove,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,remove,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,remove,image,cmd,remove,images,cmd,client,remove,image,cmd,image,id,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,force,remove,images,cmd,with,force,boolean,prune,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,prune,null,prune,remove,images,cmd,with,no,prune,return,remove,images,cmd
DockerProducer -> private RemoveImageCmd executeRemoveImageRequest(DockerClient client, Message message) throws DockerException;1415517409;Produces a remove image request__@param client_@param message_@return_@throws DockerException;private RemoveImageCmd executeRemoveImageRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Remove Image Request")__        _        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)__        _        RemoveImageCmd removeImagesCmd = client.removeImageCmd(imageId)__        _        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)__        _        if (force != null && force) {_            removeImagesCmd.withForce()__        }_        _        Boolean prune = DockerHelper.getProperty(DockerConstants.DOCKER_NO_PRUNE, configuration, message, Boolean.class)__        _        if (prune != null && prune) {_            removeImagesCmd.withNoPrune()__        }_        _        return removeImagesCmd___    };produces,a,remove,image,request,param,client,param,message,return,throws,docker,exception;private,remove,image,cmd,execute,remove,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,remove,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,remove,image,cmd,remove,images,cmd,client,remove,image,cmd,image,id,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,force,remove,images,cmd,with,force,boolean,prune,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,prune,null,prune,remove,images,cmd,with,no,prune,return,remove,images,cmd
DockerProducer -> private RemoveImageCmd executeRemoveImageRequest(DockerClient client, Message message) throws DockerException;1423234542;Produces a remove image request__@param client_@param message_@return_@throws DockerException;private RemoveImageCmd executeRemoveImageRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Remove Image Request")__        _        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)__        _        RemoveImageCmd removeImagesCmd = client.removeImageCmd(imageId)__        _        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)__        _        if (force != null && force) {_            removeImagesCmd.withForce()__        }_        _        Boolean prune = DockerHelper.getProperty(DockerConstants.DOCKER_NO_PRUNE, configuration, message, Boolean.class)__        _        if (prune != null && prune) {_            removeImagesCmd.withNoPrune()__        }_        _        return removeImagesCmd___    };produces,a,remove,image,request,param,client,param,message,return,throws,docker,exception;private,remove,image,cmd,execute,remove,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,remove,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,remove,image,cmd,remove,images,cmd,client,remove,image,cmd,image,id,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,force,remove,images,cmd,with,force,boolean,prune,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,prune,null,prune,remove,images,cmd,with,no,prune,return,remove,images,cmd
DockerProducer -> private RemoveImageCmd executeRemoveImageRequest(DockerClient client, Message message);1424675020;Produces a remove image request__@param client_@param message_@return;private RemoveImageCmd executeRemoveImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Remove Image Request")___        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)___        ObjectHelper.notNull(imageId, "Image ID must be specified")___        RemoveImageCmd removeImagesCmd = client.removeImageCmd(imageId)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)___        if (force != null) {_            removeImagesCmd.withForce()__        }__        Boolean noPrune = DockerHelper.getProperty(DockerConstants.DOCKER_NO_PRUNE, configuration, message, Boolean.class)___        if (noPrune != null) {_            removeImagesCmd.withNoPrune(noPrune)__        }__        return removeImagesCmd___    };produces,a,remove,image,request,param,client,param,message,return;private,remove,image,cmd,execute,remove,image,request,docker,client,client,message,message,logger,debug,executing,docker,remove,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,image,id,image,id,must,be,specified,remove,image,cmd,remove,images,cmd,client,remove,image,cmd,image,id,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,remove,images,cmd,with,force,boolean,no,prune,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,no,prune,null,remove,images,cmd,with,no,prune,no,prune,return,remove,images,cmd
DockerProducer -> private RemoveImageCmd executeRemoveImageRequest(DockerClient client, Message message);1424675476;Produces a remove image request__@param client_@param message_@return;private RemoveImageCmd executeRemoveImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Remove Image Request")___        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)___        ObjectHelper.notNull(imageId, "Image ID must be specified")___        RemoveImageCmd removeImagesCmd = client.removeImageCmd(imageId)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)___        if (force != null) {_            removeImagesCmd.withForce()__        }__        Boolean noPrune = DockerHelper.getProperty(DockerConstants.DOCKER_NO_PRUNE, configuration, message, Boolean.class)___        if (noPrune != null) {_            removeImagesCmd.withNoPrune(noPrune)__        }__        return removeImagesCmd___    };produces,a,remove,image,request,param,client,param,message,return;private,remove,image,cmd,execute,remove,image,request,docker,client,client,message,message,logger,debug,executing,docker,remove,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,image,id,image,id,must,be,specified,remove,image,cmd,remove,images,cmd,client,remove,image,cmd,image,id,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,remove,images,cmd,with,force,boolean,no,prune,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,no,prune,null,remove,images,cmd,with,no,prune,no,prune,return,remove,images,cmd
DockerProducer -> private RemoveImageCmd executeRemoveImageRequest(DockerClient client, Message message);1424877876;Produces a remove image request__@param client_@param message_@return;private RemoveImageCmd executeRemoveImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Remove Image Request")___        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)___        ObjectHelper.notNull(imageId, "Image ID must be specified")___        RemoveImageCmd removeImagesCmd = client.removeImageCmd(imageId)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)___        if (force != null) {_            removeImagesCmd.withForce()__        }__        Boolean noPrune = DockerHelper.getProperty(DockerConstants.DOCKER_NO_PRUNE, configuration, message, Boolean.class)___        if (noPrune != null) {_            removeImagesCmd.withNoPrune(noPrune)__        }__        return removeImagesCmd___    };produces,a,remove,image,request,param,client,param,message,return;private,remove,image,cmd,execute,remove,image,request,docker,client,client,message,message,logger,debug,executing,docker,remove,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,image,id,image,id,must,be,specified,remove,image,cmd,remove,images,cmd,client,remove,image,cmd,image,id,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,remove,images,cmd,with,force,boolean,no,prune,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,no,prune,null,remove,images,cmd,with,no,prune,no,prune,return,remove,images,cmd
DockerProducer -> private RemoveImageCmd executeRemoveImageRequest(DockerClient client, Message message);1429199966;Produces a remove image request__@param client_@param message_@return;private RemoveImageCmd executeRemoveImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Remove Image Request")___        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)___        ObjectHelper.notNull(imageId, "Image ID must be specified")___        RemoveImageCmd removeImagesCmd = client.removeImageCmd(imageId)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)___        if (force != null) {_            removeImagesCmd.withForce()__        }__        Boolean noPrune = DockerHelper.getProperty(DockerConstants.DOCKER_NO_PRUNE, configuration, message, Boolean.class)___        if (noPrune != null) {_            removeImagesCmd.withNoPrune(noPrune)__        }__        return removeImagesCmd___    };produces,a,remove,image,request,param,client,param,message,return;private,remove,image,cmd,execute,remove,image,request,docker,client,client,message,message,logger,debug,executing,docker,remove,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,image,id,image,id,must,be,specified,remove,image,cmd,remove,images,cmd,client,remove,image,cmd,image,id,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,remove,images,cmd,with,force,boolean,no,prune,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,no,prune,null,remove,images,cmd,with,no,prune,no,prune,return,remove,images,cmd
DockerProducer -> private RemoveImageCmd executeRemoveImageRequest(DockerClient client, Message message);1433489320;Produces a remove image request__@param client_@param message_@return;private RemoveImageCmd executeRemoveImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Remove Image Request")___        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)___        ObjectHelper.notNull(imageId, "Image ID must be specified")___        RemoveImageCmd removeImagesCmd = client.removeImageCmd(imageId)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)___        if (force != null) {_            removeImagesCmd.withForce()__        }__        Boolean noPrune = DockerHelper.getProperty(DockerConstants.DOCKER_NO_PRUNE, configuration, message, Boolean.class)___        if (noPrune != null) {_            removeImagesCmd.withNoPrune(noPrune)__        }__        return removeImagesCmd___    };produces,a,remove,image,request,param,client,param,message,return;private,remove,image,cmd,execute,remove,image,request,docker,client,client,message,message,logger,debug,executing,docker,remove,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,image,id,image,id,must,be,specified,remove,image,cmd,remove,images,cmd,client,remove,image,cmd,image,id,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,remove,images,cmd,with,force,boolean,no,prune,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,no,prune,null,remove,images,cmd,with,no,prune,no,prune,return,remove,images,cmd
DockerProducer -> private RemoveImageCmd executeRemoveImageRequest(DockerClient client, Message message);1440239526;Produces a remove image request__@param client_@param message_@return;private RemoveImageCmd executeRemoveImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Remove Image Request")___        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)___        ObjectHelper.notNull(imageId, "Image ID must be specified")___        RemoveImageCmd removeImagesCmd = client.removeImageCmd(imageId)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)___        if (force != null) {_            removeImagesCmd.withForce()__        }__        Boolean noPrune = DockerHelper.getProperty(DockerConstants.DOCKER_NO_PRUNE, configuration, message, Boolean.class)___        if (noPrune != null) {_            removeImagesCmd.withNoPrune(noPrune)__        }__        return removeImagesCmd___    };produces,a,remove,image,request,param,client,param,message,return;private,remove,image,cmd,execute,remove,image,request,docker,client,client,message,message,logger,debug,executing,docker,remove,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,image,id,image,id,must,be,specified,remove,image,cmd,remove,images,cmd,client,remove,image,cmd,image,id,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,remove,images,cmd,with,force,boolean,no,prune,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,no,prune,null,remove,images,cmd,with,no,prune,no,prune,return,remove,images,cmd
DockerProducer -> private RemoveImageCmd executeRemoveImageRequest(DockerClient client, Message message);1474362454;Produces a remove image request__@param client_@param message_@return;private RemoveImageCmd executeRemoveImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Remove Image Request")___        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)___        ObjectHelper.notNull(imageId, "Image ID must be specified")___        RemoveImageCmd removeImagesCmd = client.removeImageCmd(imageId)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)___        if (force != null) {_            removeImagesCmd.withForce(force)__        }__        Boolean noPrune = DockerHelper.getProperty(DockerConstants.DOCKER_NO_PRUNE, configuration, message, Boolean.class)___        if (noPrune != null) {_            removeImagesCmd.withNoPrune(noPrune)__        }__        return removeImagesCmd___    };produces,a,remove,image,request,param,client,param,message,return;private,remove,image,cmd,execute,remove,image,request,docker,client,client,message,message,logger,debug,executing,docker,remove,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,image,id,image,id,must,be,specified,remove,image,cmd,remove,images,cmd,client,remove,image,cmd,image,id,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,remove,images,cmd,with,force,force,boolean,no,prune,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,no,prune,null,remove,images,cmd,with,no,prune,no,prune,return,remove,images,cmd
DockerProducer -> private RemoveImageCmd executeRemoveImageRequest(DockerClient client, Message message);1531637865;Produces a remove image request__@param client_@param message_@return;private RemoveImageCmd executeRemoveImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Remove Image Request")___        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)___        ObjectHelper.notNull(imageId, "Image ID must be specified")___        RemoveImageCmd removeImagesCmd = client.removeImageCmd(imageId)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)___        if (force != null) {_            removeImagesCmd.withForce(force)__        }__        Boolean noPrune = DockerHelper.getProperty(DockerConstants.DOCKER_NO_PRUNE, configuration, message, Boolean.class)___        if (noPrune != null) {_            removeImagesCmd.withNoPrune(noPrune)__        }__        return removeImagesCmd___    };produces,a,remove,image,request,param,client,param,message,return;private,remove,image,cmd,execute,remove,image,request,docker,client,client,message,message,logger,debug,executing,docker,remove,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,image,id,image,id,must,be,specified,remove,image,cmd,remove,images,cmd,client,remove,image,cmd,image,id,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,remove,images,cmd,with,force,force,boolean,no,prune,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,no,prune,null,remove,images,cmd,with,no,prune,no,prune,return,remove,images,cmd
DockerProducer -> private RemoveImageCmd executeRemoveImageRequest(DockerClient client, Message message);1540108163;Produces a remove image request__@param client_@param message_@return;private RemoveImageCmd executeRemoveImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Remove Image Request")___        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)___        ObjectHelper.notNull(imageId, "Image ID must be specified")___        RemoveImageCmd removeImagesCmd = client.removeImageCmd(imageId)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)___        if (force != null) {_            removeImagesCmd.withForce(force)__        }__        Boolean noPrune = DockerHelper.getProperty(DockerConstants.DOCKER_NO_PRUNE, configuration, message, Boolean.class)___        if (noPrune != null) {_            removeImagesCmd.withNoPrune(noPrune)__        }__        return removeImagesCmd___    };produces,a,remove,image,request,param,client,param,message,return;private,remove,image,cmd,execute,remove,image,request,docker,client,client,message,message,logger,debug,executing,docker,remove,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,image,id,image,id,must,be,specified,remove,image,cmd,remove,images,cmd,client,remove,image,cmd,image,id,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,remove,images,cmd,with,force,force,boolean,no,prune,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,no,prune,null,remove,images,cmd,with,no,prune,no,prune,return,remove,images,cmd
DockerProducer -> private VersionCmd executeVersionRequest(DockerClient client, Message message) throws DockerException;1415211488;Executes a platform version request__@param client_@param message_@return_@throws DockerException;private VersionCmd executeVersionRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Version Request")__        _        VersionCmd versionCmd = client.versionCmd()__        _        return versionCmd___    };executes,a,platform,version,request,param,client,param,message,return,throws,docker,exception;private,version,cmd,execute,version,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,version,request,version,cmd,version,cmd,client,version,cmd,return,version,cmd
DockerProducer -> private VersionCmd executeVersionRequest(DockerClient client, Message message) throws DockerException;1415517409;Executes a platform version request__@param client_@param message_@return_@throws DockerException;private VersionCmd executeVersionRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Version Request")__        _        VersionCmd versionCmd = client.versionCmd()__        _        return versionCmd___    };executes,a,platform,version,request,param,client,param,message,return,throws,docker,exception;private,version,cmd,execute,version,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,version,request,version,cmd,version,cmd,client,version,cmd,return,version,cmd
DockerProducer -> private VersionCmd executeVersionRequest(DockerClient client, Message message) throws DockerException;1423234542;Executes a platform version request__@param client_@param message_@return_@throws DockerException;private VersionCmd executeVersionRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Version Request")__        _        VersionCmd versionCmd = client.versionCmd()__        _        return versionCmd___    };executes,a,platform,version,request,param,client,param,message,return,throws,docker,exception;private,version,cmd,execute,version,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,version,request,version,cmd,version,cmd,client,version,cmd,return,version,cmd
DockerProducer -> private InfoCmd executeInfoRequest(DockerClient client, Message message) throws DockerException;1415211488;Produces a platform information request__@param client_@param message_@return_@throws DockerException;private InfoCmd executeInfoRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Info Request")__        _        InfoCmd infoCmd = client.infoCmd()__        _        return infoCmd___    };produces,a,platform,information,request,param,client,param,message,return,throws,docker,exception;private,info,cmd,execute,info,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,info,request,info,cmd,info,cmd,client,info,cmd,return,info,cmd
DockerProducer -> private InfoCmd executeInfoRequest(DockerClient client, Message message) throws DockerException;1415517409;Produces a platform information request__@param client_@param message_@return_@throws DockerException;private InfoCmd executeInfoRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Info Request")__        _        InfoCmd infoCmd = client.infoCmd()__        _        return infoCmd___    };produces,a,platform,information,request,param,client,param,message,return,throws,docker,exception;private,info,cmd,execute,info,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,info,request,info,cmd,info,cmd,client,info,cmd,return,info,cmd
DockerProducer -> private InfoCmd executeInfoRequest(DockerClient client, Message message) throws DockerException;1423234542;Produces a platform information request__@param client_@param message_@return_@throws DockerException;private InfoCmd executeInfoRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Info Request")__        _        InfoCmd infoCmd = client.infoCmd()__        _        return infoCmd___    };produces,a,platform,information,request,param,client,param,message,return,throws,docker,exception;private,info,cmd,execute,info,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,info,request,info,cmd,info,cmd,client,info,cmd,return,info,cmd
DockerProducer -> private InspectImageCmd executeInspectImageRequest(DockerClient client, Message message);1424675020;Produces a inspect image request__@param client_@param message_@return;private InspectImageCmd executeInspectImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Inspect Image Request")___        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)___        ObjectHelper.notNull(imageId, "Image ID must be specified")___        InspectImageCmd inspectImageCmd = client.inspectImageCmd(imageId)___        return inspectImageCmd___    };produces,a,inspect,image,request,param,client,param,message,return;private,inspect,image,cmd,execute,inspect,image,request,docker,client,client,message,message,logger,debug,executing,docker,inspect,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,image,id,image,id,must,be,specified,inspect,image,cmd,inspect,image,cmd,client,inspect,image,cmd,image,id,return,inspect,image,cmd
DockerProducer -> private InspectImageCmd executeInspectImageRequest(DockerClient client, Message message);1424675476;Produces a inspect image request__@param client_@param message_@return;private InspectImageCmd executeInspectImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Inspect Image Request")___        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)___        ObjectHelper.notNull(imageId, "Image ID must be specified")___        InspectImageCmd inspectImageCmd = client.inspectImageCmd(imageId)___        return inspectImageCmd___    };produces,a,inspect,image,request,param,client,param,message,return;private,inspect,image,cmd,execute,inspect,image,request,docker,client,client,message,message,logger,debug,executing,docker,inspect,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,image,id,image,id,must,be,specified,inspect,image,cmd,inspect,image,cmd,client,inspect,image,cmd,image,id,return,inspect,image,cmd
DockerProducer -> private InspectImageCmd executeInspectImageRequest(DockerClient client, Message message);1424877876;Produces a inspect image request__@param client_@param message_@return;private InspectImageCmd executeInspectImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Inspect Image Request")___        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)___        ObjectHelper.notNull(imageId, "Image ID must be specified")___        InspectImageCmd inspectImageCmd = client.inspectImageCmd(imageId)___        return inspectImageCmd___    };produces,a,inspect,image,request,param,client,param,message,return;private,inspect,image,cmd,execute,inspect,image,request,docker,client,client,message,message,logger,debug,executing,docker,inspect,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,image,id,image,id,must,be,specified,inspect,image,cmd,inspect,image,cmd,client,inspect,image,cmd,image,id,return,inspect,image,cmd
DockerProducer -> private InspectImageCmd executeInspectImageRequest(DockerClient client, Message message);1429199966;Produces a inspect image request__@param client_@param message_@return;private InspectImageCmd executeInspectImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Inspect Image Request")___        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)___        ObjectHelper.notNull(imageId, "Image ID must be specified")___        InspectImageCmd inspectImageCmd = client.inspectImageCmd(imageId)___        return inspectImageCmd___    };produces,a,inspect,image,request,param,client,param,message,return;private,inspect,image,cmd,execute,inspect,image,request,docker,client,client,message,message,logger,debug,executing,docker,inspect,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,image,id,image,id,must,be,specified,inspect,image,cmd,inspect,image,cmd,client,inspect,image,cmd,image,id,return,inspect,image,cmd
DockerProducer -> private InspectImageCmd executeInspectImageRequest(DockerClient client, Message message);1433489320;Produces a inspect image request__@param client_@param message_@return;private InspectImageCmd executeInspectImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Inspect Image Request")___        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)___        ObjectHelper.notNull(imageId, "Image ID must be specified")___        InspectImageCmd inspectImageCmd = client.inspectImageCmd(imageId)___        return inspectImageCmd___    };produces,a,inspect,image,request,param,client,param,message,return;private,inspect,image,cmd,execute,inspect,image,request,docker,client,client,message,message,logger,debug,executing,docker,inspect,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,image,id,image,id,must,be,specified,inspect,image,cmd,inspect,image,cmd,client,inspect,image,cmd,image,id,return,inspect,image,cmd
DockerProducer -> private InspectImageCmd executeInspectImageRequest(DockerClient client, Message message);1440239526;Produces a inspect image request__@param client_@param message_@return;private InspectImageCmd executeInspectImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Inspect Image Request")___        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)___        ObjectHelper.notNull(imageId, "Image ID must be specified")___        InspectImageCmd inspectImageCmd = client.inspectImageCmd(imageId)___        return inspectImageCmd___    };produces,a,inspect,image,request,param,client,param,message,return;private,inspect,image,cmd,execute,inspect,image,request,docker,client,client,message,message,logger,debug,executing,docker,inspect,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,image,id,image,id,must,be,specified,inspect,image,cmd,inspect,image,cmd,client,inspect,image,cmd,image,id,return,inspect,image,cmd
DockerProducer -> private InspectImageCmd executeInspectImageRequest(DockerClient client, Message message);1474362454;Produces a inspect image request__@param client_@param message_@return;private InspectImageCmd executeInspectImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Inspect Image Request")___        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)___        ObjectHelper.notNull(imageId, "Image ID must be specified")___        InspectImageCmd inspectImageCmd = client.inspectImageCmd(imageId)___        return inspectImageCmd___    };produces,a,inspect,image,request,param,client,param,message,return;private,inspect,image,cmd,execute,inspect,image,request,docker,client,client,message,message,logger,debug,executing,docker,inspect,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,image,id,image,id,must,be,specified,inspect,image,cmd,inspect,image,cmd,client,inspect,image,cmd,image,id,return,inspect,image,cmd
DockerProducer -> private InspectImageCmd executeInspectImageRequest(DockerClient client, Message message);1531637865;Produces a inspect image request__@param client_@param message_@return;private InspectImageCmd executeInspectImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Inspect Image Request")___        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)___        ObjectHelper.notNull(imageId, "Image ID must be specified")___        InspectImageCmd inspectImageCmd = client.inspectImageCmd(imageId)___        return inspectImageCmd___    };produces,a,inspect,image,request,param,client,param,message,return;private,inspect,image,cmd,execute,inspect,image,request,docker,client,client,message,message,logger,debug,executing,docker,inspect,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,image,id,image,id,must,be,specified,inspect,image,cmd,inspect,image,cmd,client,inspect,image,cmd,image,id,return,inspect,image,cmd
DockerProducer -> private InspectImageCmd executeInspectImageRequest(DockerClient client, Message message);1540108163;Produces a inspect image request__@param client_@param message_@return;private InspectImageCmd executeInspectImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Inspect Image Request")___        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)___        ObjectHelper.notNull(imageId, "Image ID must be specified")___        InspectImageCmd inspectImageCmd = client.inspectImageCmd(imageId)___        return inspectImageCmd___    };produces,a,inspect,image,request,param,client,param,message,return;private,inspect,image,cmd,execute,inspect,image,request,docker,client,client,message,message,logger,debug,executing,docker,inspect,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,image,id,image,id,must,be,specified,inspect,image,cmd,inspect,image,cmd,client,inspect,image,cmd,image,id,return,inspect,image,cmd
DockerProducer -> private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException;1415211488;Produces a build image request__@param client_@param message_@return_@throws DockerException;private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Build Image Request")__        _        Object body = message.getBody()__        _        BuildImageCmd buildImageCmd__        _        if (body != null && body instanceof InputStream) {_            buildImageCmd = client.buildImageCmd((InputStream) body)__        } else if (body != null && body instanceof File) {_            buildImageCmd = client.buildImageCmd((File) body)__        } else {_            throw new DockerException("Unable to location source Image")__        }_    _        Boolean noCache = DockerHelper.getProperty(DockerConstants.DOCKER_NO_CACHE, configuration, message, Boolean.class)___        if (noCache != null && noCache) {_            buildImageCmd.withNoCache()__        }_        _        Boolean quiet = DockerHelper.getProperty(DockerConstants.DOCKER_QUIET, configuration, message, Boolean.class)___        if (quiet != null && quiet) {_            buildImageCmd.withQuiet()__        }_        _        Boolean remove = DockerHelper.getProperty(DockerConstants.DOCKER_REMOVE, configuration, message, Boolean.class)___        if (remove != null && remove) {_            buildImageCmd.withRemove()__        }_        _        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            buildImageCmd.withTag(tag)__        }_        _        return buildImageCmd___    };produces,a,build,image,request,param,client,param,message,return,throws,docker,exception;private,build,image,cmd,execute,build,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,build,image,request,object,body,message,get,body,build,image,cmd,build,image,cmd,if,body,null,body,instanceof,input,stream,build,image,cmd,client,build,image,cmd,input,stream,body,else,if,body,null,body,instanceof,file,build,image,cmd,client,build,image,cmd,file,body,else,throw,new,docker,exception,unable,to,location,source,image,boolean,no,cache,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,no,cache,null,no,cache,build,image,cmd,with,no,cache,boolean,quiet,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,quiet,null,quiet,build,image,cmd,with,quiet,boolean,remove,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,remove,null,remove,build,image,cmd,with,remove,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,build,image,cmd,with,tag,tag,return,build,image,cmd
DockerProducer -> private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException;1415517409;Produces a build image request__@param client_@param message_@return_@throws DockerException;private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Build Image Request")__        _        Object body = message.getBody()__        _        BuildImageCmd buildImageCmd__        _        if (body != null && body instanceof InputStream) {_            buildImageCmd = client.buildImageCmd((InputStream) body)__        } else if (body != null && body instanceof File) {_            buildImageCmd = client.buildImageCmd((File) body)__        } else {_            throw new DockerException("Unable to location source Image")__        }_    _        Boolean noCache = DockerHelper.getProperty(DockerConstants.DOCKER_NO_CACHE, configuration, message, Boolean.class)___        if (noCache != null && noCache) {_            buildImageCmd.withNoCache()__        }_        _        Boolean quiet = DockerHelper.getProperty(DockerConstants.DOCKER_QUIET, configuration, message, Boolean.class)___        if (quiet != null && quiet) {_            buildImageCmd.withQuiet()__        }_        _        Boolean remove = DockerHelper.getProperty(DockerConstants.DOCKER_REMOVE, configuration, message, Boolean.class)___        if (remove != null && remove) {_            buildImageCmd.withRemove()__        }_        _        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            buildImageCmd.withTag(tag)__        }_        _        return buildImageCmd___    };produces,a,build,image,request,param,client,param,message,return,throws,docker,exception;private,build,image,cmd,execute,build,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,build,image,request,object,body,message,get,body,build,image,cmd,build,image,cmd,if,body,null,body,instanceof,input,stream,build,image,cmd,client,build,image,cmd,input,stream,body,else,if,body,null,body,instanceof,file,build,image,cmd,client,build,image,cmd,file,body,else,throw,new,docker,exception,unable,to,location,source,image,boolean,no,cache,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,no,cache,null,no,cache,build,image,cmd,with,no,cache,boolean,quiet,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,quiet,null,quiet,build,image,cmd,with,quiet,boolean,remove,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,remove,null,remove,build,image,cmd,with,remove,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,build,image,cmd,with,tag,tag,return,build,image,cmd
DockerProducer -> private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException;1423234542;Produces a build image request__@param client_@param message_@return_@throws DockerException;private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Build Image Request")__        _        Object body = message.getBody()__        _        BuildImageCmd buildImageCmd__        _        if (body != null && body instanceof InputStream) {_            buildImageCmd = client.buildImageCmd((InputStream) body)__        } else if (body != null && body instanceof File) {_            buildImageCmd = client.buildImageCmd((File) body)__        } else {_            throw new DockerException("Unable to location source Image")__        }_    _        Boolean noCache = DockerHelper.getProperty(DockerConstants.DOCKER_NO_CACHE, configuration, message, Boolean.class)___        if (noCache != null && noCache) {_            buildImageCmd.withNoCache()__        }_        _        Boolean quiet = DockerHelper.getProperty(DockerConstants.DOCKER_QUIET, configuration, message, Boolean.class)___        if (quiet != null && quiet) {_            buildImageCmd.withQuiet()__        }_        _        Boolean remove = DockerHelper.getProperty(DockerConstants.DOCKER_REMOVE, configuration, message, Boolean.class)___        if (remove != null && remove) {_            buildImageCmd.withRemove()__        }_        _        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            buildImageCmd.withTag(tag)__        }_        _        return buildImageCmd___    };produces,a,build,image,request,param,client,param,message,return,throws,docker,exception;private,build,image,cmd,execute,build,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,build,image,request,object,body,message,get,body,build,image,cmd,build,image,cmd,if,body,null,body,instanceof,input,stream,build,image,cmd,client,build,image,cmd,input,stream,body,else,if,body,null,body,instanceof,file,build,image,cmd,client,build,image,cmd,file,body,else,throw,new,docker,exception,unable,to,location,source,image,boolean,no,cache,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,no,cache,null,no,cache,build,image,cmd,with,no,cache,boolean,quiet,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,quiet,null,quiet,build,image,cmd,with,quiet,boolean,remove,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,remove,null,remove,build,image,cmd,with,remove,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,build,image,cmd,with,tag,tag,return,build,image,cmd
DockerProducer -> private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException;1424675020;Produces a build image request__@param client_@param message_@return_@throws DockerException;private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Build Image Request")___        Object body = message.getBody()___        BuildImageCmd buildImageCmd___        if (body != null && body instanceof InputStream) {_            buildImageCmd = client.buildImageCmd((InputStream)body)__        } else if (body != null && body instanceof File) {_            buildImageCmd = client.buildImageCmd((File)body)__        } else {_            throw new DockerException("Unable to location source Image")__        }__        Boolean noCache = DockerHelper.getProperty(DockerConstants.DOCKER_NO_CACHE, configuration, message, Boolean.class)___        if (noCache != null) {_            buildImageCmd.withNoCache(noCache)__        }__        Boolean quiet = DockerHelper.getProperty(DockerConstants.DOCKER_QUIET, configuration, message, Boolean.class)___        if (quiet != null) {_            buildImageCmd.withQuiet(quiet)__        }__        Boolean remove = DockerHelper.getProperty(DockerConstants.DOCKER_REMOVE, configuration, message, Boolean.class)___        if (remove != null) {_            buildImageCmd.withRemove(remove)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            buildImageCmd.withTag(tag)__        }__        return buildImageCmd___    };produces,a,build,image,request,param,client,param,message,return,throws,docker,exception;private,build,image,cmd,execute,build,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,build,image,request,object,body,message,get,body,build,image,cmd,build,image,cmd,if,body,null,body,instanceof,input,stream,build,image,cmd,client,build,image,cmd,input,stream,body,else,if,body,null,body,instanceof,file,build,image,cmd,client,build,image,cmd,file,body,else,throw,new,docker,exception,unable,to,location,source,image,boolean,no,cache,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,no,cache,null,build,image,cmd,with,no,cache,no,cache,boolean,quiet,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,quiet,null,build,image,cmd,with,quiet,quiet,boolean,remove,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,remove,null,build,image,cmd,with,remove,remove,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,build,image,cmd,with,tag,tag,return,build,image,cmd
DockerProducer -> private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException;1424675476;Produces a build image request__@param client_@param message_@return_@throws DockerException;private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Build Image Request")___        Object body = message.getBody()___        BuildImageCmd buildImageCmd___        if (body != null && body instanceof InputStream) {_            buildImageCmd = client.buildImageCmd((InputStream) body)__        } else if (body != null && body instanceof File) {_            buildImageCmd = client.buildImageCmd((File) body)__        } else {_            throw new DockerException("Unable to location source Image")__        }__        Boolean noCache = DockerHelper.getProperty(DockerConstants.DOCKER_NO_CACHE, configuration, message, Boolean.class)___        if (noCache != null) {_            buildImageCmd.withNoCache(noCache)__        }__        Boolean quiet = DockerHelper.getProperty(DockerConstants.DOCKER_QUIET, configuration, message, Boolean.class)___        if (quiet != null) {_            buildImageCmd.withQuiet(quiet)__        }__        Boolean remove = DockerHelper.getProperty(DockerConstants.DOCKER_REMOVE, configuration, message, Boolean.class)___        if (remove != null) {_            buildImageCmd.withRemove(remove)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            buildImageCmd.withTag(tag)__        }__        return buildImageCmd___    };produces,a,build,image,request,param,client,param,message,return,throws,docker,exception;private,build,image,cmd,execute,build,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,build,image,request,object,body,message,get,body,build,image,cmd,build,image,cmd,if,body,null,body,instanceof,input,stream,build,image,cmd,client,build,image,cmd,input,stream,body,else,if,body,null,body,instanceof,file,build,image,cmd,client,build,image,cmd,file,body,else,throw,new,docker,exception,unable,to,location,source,image,boolean,no,cache,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,no,cache,null,build,image,cmd,with,no,cache,no,cache,boolean,quiet,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,quiet,null,build,image,cmd,with,quiet,quiet,boolean,remove,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,remove,null,build,image,cmd,with,remove,remove,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,build,image,cmd,with,tag,tag,return,build,image,cmd
DockerProducer -> private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException;1424877876;Produces a build image request__@param client_@param message_@return_@throws DockerException;private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Build Image Request")___        Object body = message.getBody()___        BuildImageCmd buildImageCmd___        if (body != null && body instanceof InputStream) {_            buildImageCmd = client.buildImageCmd((InputStream) body)__        } else if (body != null && body instanceof File) {_            buildImageCmd = client.buildImageCmd((File) body)__        } else {_            throw new DockerException("Unable to location source Image")__        }__        Boolean noCache = DockerHelper.getProperty(DockerConstants.DOCKER_NO_CACHE, configuration, message, Boolean.class)___        if (noCache != null) {_            buildImageCmd.withNoCache(noCache)__        }__        Boolean quiet = DockerHelper.getProperty(DockerConstants.DOCKER_QUIET, configuration, message, Boolean.class)___        if (quiet != null) {_            buildImageCmd.withQuiet(quiet)__        }__        Boolean remove = DockerHelper.getProperty(DockerConstants.DOCKER_REMOVE, configuration, message, Boolean.class)___        if (remove != null) {_            buildImageCmd.withRemove(remove)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            buildImageCmd.withTag(tag)__        }__        return buildImageCmd___    };produces,a,build,image,request,param,client,param,message,return,throws,docker,exception;private,build,image,cmd,execute,build,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,build,image,request,object,body,message,get,body,build,image,cmd,build,image,cmd,if,body,null,body,instanceof,input,stream,build,image,cmd,client,build,image,cmd,input,stream,body,else,if,body,null,body,instanceof,file,build,image,cmd,client,build,image,cmd,file,body,else,throw,new,docker,exception,unable,to,location,source,image,boolean,no,cache,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,no,cache,null,build,image,cmd,with,no,cache,no,cache,boolean,quiet,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,quiet,null,build,image,cmd,with,quiet,quiet,boolean,remove,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,remove,null,build,image,cmd,with,remove,remove,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,build,image,cmd,with,tag,tag,return,build,image,cmd
DockerProducer -> private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException;1429199966;Produces a build image request__@param client_@param message_@return_@throws DockerException;private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Build Image Request")___        Object body = message.getBody()___        BuildImageCmd buildImageCmd___        if (body != null && body instanceof InputStream) {_            buildImageCmd = client.buildImageCmd((InputStream) body)__        } else if (body != null && body instanceof File) {_            buildImageCmd = client.buildImageCmd((File) body)__        } else {_            throw new DockerException("Unable to location source Image")__        }__        Boolean noCache = DockerHelper.getProperty(DockerConstants.DOCKER_NO_CACHE, configuration, message, Boolean.class)___        if (noCache != null) {_            buildImageCmd.withNoCache(noCache)__        }__        Boolean quiet = DockerHelper.getProperty(DockerConstants.DOCKER_QUIET, configuration, message, Boolean.class)___        if (quiet != null) {_            buildImageCmd.withQuiet(quiet)__        }__        Boolean remove = DockerHelper.getProperty(DockerConstants.DOCKER_REMOVE, configuration, message, Boolean.class)___        if (remove != null) {_            buildImageCmd.withRemove(remove)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            buildImageCmd.withTag(tag)__        }__        return buildImageCmd___    };produces,a,build,image,request,param,client,param,message,return,throws,docker,exception;private,build,image,cmd,execute,build,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,build,image,request,object,body,message,get,body,build,image,cmd,build,image,cmd,if,body,null,body,instanceof,input,stream,build,image,cmd,client,build,image,cmd,input,stream,body,else,if,body,null,body,instanceof,file,build,image,cmd,client,build,image,cmd,file,body,else,throw,new,docker,exception,unable,to,location,source,image,boolean,no,cache,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,no,cache,null,build,image,cmd,with,no,cache,no,cache,boolean,quiet,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,quiet,null,build,image,cmd,with,quiet,quiet,boolean,remove,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,remove,null,build,image,cmd,with,remove,remove,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,build,image,cmd,with,tag,tag,return,build,image,cmd
DockerProducer -> private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException;1433489320;Produces a build image request__@param client_@param message_@return_@throws DockerException;private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Build Image Request")___        Object body = message.getBody()___        BuildImageCmd buildImageCmd___        if (body != null && body instanceof InputStream) {_            buildImageCmd = client.buildImageCmd((InputStream) body)__        } else if (body != null && body instanceof File) {_            buildImageCmd = client.buildImageCmd((File) body)__        } else {_            throw new DockerException("Unable to location source Image")__        }__        Boolean noCache = DockerHelper.getProperty(DockerConstants.DOCKER_NO_CACHE, configuration, message, Boolean.class)___        if (noCache != null) {_            buildImageCmd.withNoCache(noCache)__        }__        Boolean quiet = DockerHelper.getProperty(DockerConstants.DOCKER_QUIET, configuration, message, Boolean.class)___        if (quiet != null) {_            buildImageCmd.withQuiet(quiet)__        }__        Boolean remove = DockerHelper.getProperty(DockerConstants.DOCKER_REMOVE, configuration, message, Boolean.class)___        if (remove != null) {_            buildImageCmd.withRemove(remove)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            buildImageCmd.withTag(tag)__        }__        return buildImageCmd___    };produces,a,build,image,request,param,client,param,message,return,throws,docker,exception;private,build,image,cmd,execute,build,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,build,image,request,object,body,message,get,body,build,image,cmd,build,image,cmd,if,body,null,body,instanceof,input,stream,build,image,cmd,client,build,image,cmd,input,stream,body,else,if,body,null,body,instanceof,file,build,image,cmd,client,build,image,cmd,file,body,else,throw,new,docker,exception,unable,to,location,source,image,boolean,no,cache,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,no,cache,null,build,image,cmd,with,no,cache,no,cache,boolean,quiet,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,quiet,null,build,image,cmd,with,quiet,quiet,boolean,remove,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,remove,null,build,image,cmd,with,remove,remove,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,build,image,cmd,with,tag,tag,return,build,image,cmd
DockerProducer -> private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException;1440239526;Produces a build image request__@param client_@param message_@return_@throws DockerException;private BuildImageCmd executeBuildImageRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Build Image Request")___        Object body = message.getBody()___        BuildImageCmd buildImageCmd___        if (body != null && body instanceof InputStream) {_            buildImageCmd = client.buildImageCmd((InputStream) body)__        } else if (body != null && body instanceof File) {_            buildImageCmd = client.buildImageCmd((File) body)__        } else {_            throw new DockerException("Unable to location source Image")__        }__        Boolean noCache = DockerHelper.getProperty(DockerConstants.DOCKER_NO_CACHE, configuration, message, Boolean.class)___        if (noCache != null) {_            buildImageCmd.withNoCache(noCache)__        }__        Boolean quiet = DockerHelper.getProperty(DockerConstants.DOCKER_QUIET, configuration, message, Boolean.class)___        if (quiet != null) {_            buildImageCmd.withQuiet(quiet)__        }__        Boolean remove = DockerHelper.getProperty(DockerConstants.DOCKER_REMOVE, configuration, message, Boolean.class)___        if (remove != null) {_            buildImageCmd.withRemove(remove)__        }__        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (tag != null) {_            buildImageCmd.withTag(tag)__        }__        return buildImageCmd___    };produces,a,build,image,request,param,client,param,message,return,throws,docker,exception;private,build,image,cmd,execute,build,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,build,image,request,object,body,message,get,body,build,image,cmd,build,image,cmd,if,body,null,body,instanceof,input,stream,build,image,cmd,client,build,image,cmd,input,stream,body,else,if,body,null,body,instanceof,file,build,image,cmd,client,build,image,cmd,file,body,else,throw,new,docker,exception,unable,to,location,source,image,boolean,no,cache,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,no,cache,null,build,image,cmd,with,no,cache,no,cache,boolean,quiet,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,quiet,null,build,image,cmd,with,quiet,quiet,boolean,remove,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,remove,null,build,image,cmd,with,remove,remove,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,build,image,cmd,with,tag,tag,return,build,image,cmd
DockerProducer -> private InspectImageCmd executeInspectImageRequest(DockerClient client, Message message) throws DockerException;1415211488;Produces a inspect image request__@param client_@param message_@return_@throws DockerException;private InspectImageCmd executeInspectImageRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Inspect Image Request")___        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)__        _        InspectImageCmd inspectImageCmd = client.inspectImageCmd(imageId)__        _        return inspectImageCmd___    };produces,a,inspect,image,request,param,client,param,message,return,throws,docker,exception;private,inspect,image,cmd,execute,inspect,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,inspect,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,inspect,image,cmd,inspect,image,cmd,client,inspect,image,cmd,image,id,return,inspect,image,cmd
DockerProducer -> private InspectImageCmd executeInspectImageRequest(DockerClient client, Message message) throws DockerException;1415517409;Produces a inspect image request__@param client_@param message_@return_@throws DockerException;private InspectImageCmd executeInspectImageRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Inspect Image Request")___        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)__        _        InspectImageCmd inspectImageCmd = client.inspectImageCmd(imageId)__        _        return inspectImageCmd___    };produces,a,inspect,image,request,param,client,param,message,return,throws,docker,exception;private,inspect,image,cmd,execute,inspect,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,inspect,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,inspect,image,cmd,inspect,image,cmd,client,inspect,image,cmd,image,id,return,inspect,image,cmd
DockerProducer -> private InspectImageCmd executeInspectImageRequest(DockerClient client, Message message) throws DockerException;1423234542;Produces a inspect image request__@param client_@param message_@return_@throws DockerException;private InspectImageCmd executeInspectImageRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Inspect Image Request")___        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)__        _        InspectImageCmd inspectImageCmd = client.inspectImageCmd(imageId)__        _        return inspectImageCmd___    };produces,a,inspect,image,request,param,client,param,message,return,throws,docker,exception;private,inspect,image,cmd,execute,inspect,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,inspect,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,inspect,image,cmd,inspect,image,cmd,client,inspect,image,cmd,image,id,return,inspect,image,cmd
DockerProducer -> private PullImageCmd executePullImageRequest(DockerClient client, Message message) throws DockerException;1415211488;Produces a pull image request__@param client_@param message_@return_@throws DockerException;private PullImageCmd executePullImageRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Pull Image Request")__        _        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)__                _        PullImageCmd pullImageCmd = client.pullImageCmd(repository)__        _        String registry = DockerHelper.getProperty(DockerConstants.DOCKER_REGISTRY, configuration, message, String.class)__        if (registry != null) {_            pullImageCmd.withRegistry(registry)__        }_        _        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)__        if (tag != null) {_            pullImageCmd.withTag(tag)__        }_        _        return pullImageCmd___    };produces,a,pull,image,request,param,client,param,message,return,throws,docker,exception;private,pull,image,cmd,execute,pull,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,pull,image,request,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,pull,image,cmd,pull,image,cmd,client,pull,image,cmd,repository,string,registry,docker,helper,get,property,docker,constants,configuration,message,string,class,if,registry,null,pull,image,cmd,with,registry,registry,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,pull,image,cmd,with,tag,tag,return,pull,image,cmd
DockerProducer -> private PullImageCmd executePullImageRequest(DockerClient client, Message message) throws DockerException;1415517409;Produces a pull image request__@param client_@param message_@return_@throws DockerException;private PullImageCmd executePullImageRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Pull Image Request")__        _        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)__                _        PullImageCmd pullImageCmd = client.pullImageCmd(repository)__        _        String registry = DockerHelper.getProperty(DockerConstants.DOCKER_REGISTRY, configuration, message, String.class)__        if (registry != null) {_            pullImageCmd.withRegistry(registry)__        }_        _        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)__        if (tag != null) {_            pullImageCmd.withTag(tag)__        }_        _        return pullImageCmd___    };produces,a,pull,image,request,param,client,param,message,return,throws,docker,exception;private,pull,image,cmd,execute,pull,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,pull,image,request,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,pull,image,cmd,pull,image,cmd,client,pull,image,cmd,repository,string,registry,docker,helper,get,property,docker,constants,configuration,message,string,class,if,registry,null,pull,image,cmd,with,registry,registry,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,pull,image,cmd,with,tag,tag,return,pull,image,cmd
DockerProducer -> private PullImageCmd executePullImageRequest(DockerClient client, Message message) throws DockerException;1423234542;Produces a pull image request__@param client_@param message_@return_@throws DockerException;private PullImageCmd executePullImageRequest(DockerClient client, Message message) throws DockerException {__        LOGGER.debug("Executing Docker Pull Image Request")__        _        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)__                _        PullImageCmd pullImageCmd = client.pullImageCmd(repository)__        _        String registry = DockerHelper.getProperty(DockerConstants.DOCKER_REGISTRY, configuration, message, String.class)__        if (registry != null) {_            pullImageCmd.withRegistry(registry)__        }_        _        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)__        if (tag != null) {_            pullImageCmd.withTag(tag)__        }_        _        return pullImageCmd___    };produces,a,pull,image,request,param,client,param,message,return,throws,docker,exception;private,pull,image,cmd,execute,pull,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,pull,image,request,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,pull,image,cmd,pull,image,cmd,client,pull,image,cmd,repository,string,registry,docker,helper,get,property,docker,constants,configuration,message,string,class,if,registry,null,pull,image,cmd,with,registry,registry,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,tag,null,pull,image,cmd,with,tag,tag,return,pull,image,cmd
DockerProducer -> private VersionCmd executeVersionRequest(DockerClient client, Message message);1424675020;Executes a platform version request__@param client_@param message_@return;private VersionCmd executeVersionRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Version Request")___        VersionCmd versionCmd = client.versionCmd()___        return versionCmd___    };executes,a,platform,version,request,param,client,param,message,return;private,version,cmd,execute,version,request,docker,client,client,message,message,logger,debug,executing,docker,version,request,version,cmd,version,cmd,client,version,cmd,return,version,cmd
DockerProducer -> private VersionCmd executeVersionRequest(DockerClient client, Message message);1424675476;Executes a platform version request__@param client_@param message_@return;private VersionCmd executeVersionRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Version Request")___        VersionCmd versionCmd = client.versionCmd()___        return versionCmd___    };executes,a,platform,version,request,param,client,param,message,return;private,version,cmd,execute,version,request,docker,client,client,message,message,logger,debug,executing,docker,version,request,version,cmd,version,cmd,client,version,cmd,return,version,cmd
DockerProducer -> private VersionCmd executeVersionRequest(DockerClient client, Message message);1424877876;Executes a platform version request__@param client_@param message_@return;private VersionCmd executeVersionRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Version Request")___        VersionCmd versionCmd = client.versionCmd()___        return versionCmd___    };executes,a,platform,version,request,param,client,param,message,return;private,version,cmd,execute,version,request,docker,client,client,message,message,logger,debug,executing,docker,version,request,version,cmd,version,cmd,client,version,cmd,return,version,cmd
DockerProducer -> private VersionCmd executeVersionRequest(DockerClient client, Message message);1429199966;Executes a platform version request__@param client_@param message_@return;private VersionCmd executeVersionRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Version Request")___        VersionCmd versionCmd = client.versionCmd()___        return versionCmd___    };executes,a,platform,version,request,param,client,param,message,return;private,version,cmd,execute,version,request,docker,client,client,message,message,logger,debug,executing,docker,version,request,version,cmd,version,cmd,client,version,cmd,return,version,cmd
DockerProducer -> private VersionCmd executeVersionRequest(DockerClient client, Message message);1433489320;Executes a platform version request__@param client_@param message_@return;private VersionCmd executeVersionRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Version Request")___        VersionCmd versionCmd = client.versionCmd()___        return versionCmd___    };executes,a,platform,version,request,param,client,param,message,return;private,version,cmd,execute,version,request,docker,client,client,message,message,logger,debug,executing,docker,version,request,version,cmd,version,cmd,client,version,cmd,return,version,cmd
DockerProducer -> private VersionCmd executeVersionRequest(DockerClient client, Message message);1440239526;Executes a platform version request__@param client_@param message_@return;private VersionCmd executeVersionRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Version Request")___        VersionCmd versionCmd = client.versionCmd()___        return versionCmd___    };executes,a,platform,version,request,param,client,param,message,return;private,version,cmd,execute,version,request,docker,client,client,message,message,logger,debug,executing,docker,version,request,version,cmd,version,cmd,client,version,cmd,return,version,cmd
DockerProducer -> private VersionCmd executeVersionRequest(DockerClient client, Message message);1474362454;Executes a platform version request__@param client_@param message_@return;private VersionCmd executeVersionRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Version Request")___        VersionCmd versionCmd = client.versionCmd()___        return versionCmd___    };executes,a,platform,version,request,param,client,param,message,return;private,version,cmd,execute,version,request,docker,client,client,message,message,logger,debug,executing,docker,version,request,version,cmd,version,cmd,client,version,cmd,return,version,cmd
DockerProducer -> private VersionCmd executeVersionRequest(DockerClient client, Message message);1531637865;Executes a platform version request__@param client_@param message_@return;private VersionCmd executeVersionRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Version Request")___        VersionCmd versionCmd = client.versionCmd()___        return versionCmd___    };executes,a,platform,version,request,param,client,param,message,return;private,version,cmd,execute,version,request,docker,client,client,message,message,logger,debug,executing,docker,version,request,version,cmd,version,cmd,client,version,cmd,return,version,cmd
DockerProducer -> private VersionCmd executeVersionRequest(DockerClient client, Message message);1540108163;Executes a platform version request__@param client_@param message_@return;private VersionCmd executeVersionRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Version Request")___        VersionCmd versionCmd = client.versionCmd()___        return versionCmd___    };executes,a,platform,version,request,param,client,param,message,return;private,version,cmd,execute,version,request,docker,client,client,message,message,logger,debug,executing,docker,version,request,version,cmd,version,cmd,client,version,cmd,return,version,cmd
DockerProducer -> private SearchImagesCmd executeSearchImageRequest(DockerClient client, Message message);1424675020;Produces a search image request__@param client_@param message_@return;private SearchImagesCmd executeSearchImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Search Image Request")___        String term = DockerHelper.getProperty(DockerConstants.DOCKER_TERM, configuration, message, String.class)___        ObjectHelper.notNull(term, "Term must be specified")___        SearchImagesCmd searchImagesCmd = client.searchImagesCmd(term)___        return searchImagesCmd___    };produces,a,search,image,request,param,client,param,message,return;private,search,images,cmd,execute,search,image,request,docker,client,client,message,message,logger,debug,executing,docker,search,image,request,string,term,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,term,term,must,be,specified,search,images,cmd,search,images,cmd,client,search,images,cmd,term,return,search,images,cmd
DockerProducer -> private SearchImagesCmd executeSearchImageRequest(DockerClient client, Message message);1424675476;Produces a search image request__@param client_@param message_@return;private SearchImagesCmd executeSearchImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Search Image Request")___        String term = DockerHelper.getProperty(DockerConstants.DOCKER_TERM, configuration, message, String.class)___        ObjectHelper.notNull(term, "Term must be specified")___        SearchImagesCmd searchImagesCmd = client.searchImagesCmd(term)___        return searchImagesCmd___    };produces,a,search,image,request,param,client,param,message,return;private,search,images,cmd,execute,search,image,request,docker,client,client,message,message,logger,debug,executing,docker,search,image,request,string,term,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,term,term,must,be,specified,search,images,cmd,search,images,cmd,client,search,images,cmd,term,return,search,images,cmd
DockerProducer -> private SearchImagesCmd executeSearchImageRequest(DockerClient client, Message message);1424877876;Produces a search image request__@param client_@param message_@return;private SearchImagesCmd executeSearchImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Search Image Request")___        String term = DockerHelper.getProperty(DockerConstants.DOCKER_TERM, configuration, message, String.class)___        ObjectHelper.notNull(term, "Term must be specified")___        SearchImagesCmd searchImagesCmd = client.searchImagesCmd(term)___        return searchImagesCmd___    };produces,a,search,image,request,param,client,param,message,return;private,search,images,cmd,execute,search,image,request,docker,client,client,message,message,logger,debug,executing,docker,search,image,request,string,term,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,term,term,must,be,specified,search,images,cmd,search,images,cmd,client,search,images,cmd,term,return,search,images,cmd
DockerProducer -> private SearchImagesCmd executeSearchImageRequest(DockerClient client, Message message);1429199966;Produces a search image request__@param client_@param message_@return;private SearchImagesCmd executeSearchImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Search Image Request")___        String term = DockerHelper.getProperty(DockerConstants.DOCKER_TERM, configuration, message, String.class)___        ObjectHelper.notNull(term, "Term must be specified")___        SearchImagesCmd searchImagesCmd = client.searchImagesCmd(term)___        return searchImagesCmd___    };produces,a,search,image,request,param,client,param,message,return;private,search,images,cmd,execute,search,image,request,docker,client,client,message,message,logger,debug,executing,docker,search,image,request,string,term,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,term,term,must,be,specified,search,images,cmd,search,images,cmd,client,search,images,cmd,term,return,search,images,cmd
DockerProducer -> private SearchImagesCmd executeSearchImageRequest(DockerClient client, Message message);1433489320;Produces a search image request__@param client_@param message_@return;private SearchImagesCmd executeSearchImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Search Image Request")___        String term = DockerHelper.getProperty(DockerConstants.DOCKER_TERM, configuration, message, String.class)___        ObjectHelper.notNull(term, "Term must be specified")___        SearchImagesCmd searchImagesCmd = client.searchImagesCmd(term)___        return searchImagesCmd___    };produces,a,search,image,request,param,client,param,message,return;private,search,images,cmd,execute,search,image,request,docker,client,client,message,message,logger,debug,executing,docker,search,image,request,string,term,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,term,term,must,be,specified,search,images,cmd,search,images,cmd,client,search,images,cmd,term,return,search,images,cmd
DockerProducer -> private SearchImagesCmd executeSearchImageRequest(DockerClient client, Message message);1440239526;Produces a search image request__@param client_@param message_@return;private SearchImagesCmd executeSearchImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Search Image Request")___        String term = DockerHelper.getProperty(DockerConstants.DOCKER_TERM, configuration, message, String.class)___        ObjectHelper.notNull(term, "Term must be specified")___        SearchImagesCmd searchImagesCmd = client.searchImagesCmd(term)___        return searchImagesCmd___    };produces,a,search,image,request,param,client,param,message,return;private,search,images,cmd,execute,search,image,request,docker,client,client,message,message,logger,debug,executing,docker,search,image,request,string,term,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,term,term,must,be,specified,search,images,cmd,search,images,cmd,client,search,images,cmd,term,return,search,images,cmd
DockerProducer -> private SearchImagesCmd executeSearchImageRequest(DockerClient client, Message message);1474362454;Produces a search image request__@param client_@param message_@return;private SearchImagesCmd executeSearchImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Search Image Request")___        String term = DockerHelper.getProperty(DockerConstants.DOCKER_TERM, configuration, message, String.class)___        ObjectHelper.notNull(term, "Term must be specified")___        SearchImagesCmd searchImagesCmd = client.searchImagesCmd(term)___        return searchImagesCmd___    };produces,a,search,image,request,param,client,param,message,return;private,search,images,cmd,execute,search,image,request,docker,client,client,message,message,logger,debug,executing,docker,search,image,request,string,term,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,term,term,must,be,specified,search,images,cmd,search,images,cmd,client,search,images,cmd,term,return,search,images,cmd
DockerProducer -> private SearchImagesCmd executeSearchImageRequest(DockerClient client, Message message);1531637865;Produces a search image request__@param client_@param message_@return;private SearchImagesCmd executeSearchImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Search Image Request")___        String term = DockerHelper.getProperty(DockerConstants.DOCKER_TERM, configuration, message, String.class)___        ObjectHelper.notNull(term, "Term must be specified")___        SearchImagesCmd searchImagesCmd = client.searchImagesCmd(term)___        return searchImagesCmd___    };produces,a,search,image,request,param,client,param,message,return;private,search,images,cmd,execute,search,image,request,docker,client,client,message,message,logger,debug,executing,docker,search,image,request,string,term,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,term,term,must,be,specified,search,images,cmd,search,images,cmd,client,search,images,cmd,term,return,search,images,cmd
DockerProducer -> private SearchImagesCmd executeSearchImageRequest(DockerClient client, Message message);1540108163;Produces a search image request__@param client_@param message_@return;private SearchImagesCmd executeSearchImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Search Image Request")___        String term = DockerHelper.getProperty(DockerConstants.DOCKER_TERM, configuration, message, String.class)___        ObjectHelper.notNull(term, "Term must be specified")___        SearchImagesCmd searchImagesCmd = client.searchImagesCmd(term)___        return searchImagesCmd___    };produces,a,search,image,request,param,client,param,message,return;private,search,images,cmd,execute,search,image,request,docker,client,client,message,message,logger,debug,executing,docker,search,image,request,string,term,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,term,term,must,be,specified,search,images,cmd,search,images,cmd,client,search,images,cmd,term,return,search,images,cmd
DockerProducer -> private UnpauseContainerCmd executeUnpauseContainerRequest(DockerClient client, Message message);1424675020;Produces a unpause container request__@param client_@param message_@return;private UnpauseContainerCmd executeUnpauseContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Unpause Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        UnpauseContainerCmd unpauseContainerCmd = client.unpauseContainerCmd(containerId)___        return unpauseContainerCmd___    };produces,a,unpause,container,request,param,client,param,message,return;private,unpause,container,cmd,execute,unpause,container,request,docker,client,client,message,message,logger,debug,executing,docker,unpause,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,unpause,container,cmd,unpause,container,cmd,client,unpause,container,cmd,container,id,return,unpause,container,cmd
DockerProducer -> private UnpauseContainerCmd executeUnpauseContainerRequest(DockerClient client, Message message);1424675476;Produces a unpause container request__@param client_@param message_@return;private UnpauseContainerCmd executeUnpauseContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Unpause Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        UnpauseContainerCmd unpauseContainerCmd = client.unpauseContainerCmd(containerId)___        return unpauseContainerCmd___    };produces,a,unpause,container,request,param,client,param,message,return;private,unpause,container,cmd,execute,unpause,container,request,docker,client,client,message,message,logger,debug,executing,docker,unpause,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,unpause,container,cmd,unpause,container,cmd,client,unpause,container,cmd,container,id,return,unpause,container,cmd
DockerProducer -> private UnpauseContainerCmd executeUnpauseContainerRequest(DockerClient client, Message message);1424877876;Produces a unpause container request__@param client_@param message_@return;private UnpauseContainerCmd executeUnpauseContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Unpause Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        UnpauseContainerCmd unpauseContainerCmd = client.unpauseContainerCmd(containerId)___        return unpauseContainerCmd___    };produces,a,unpause,container,request,param,client,param,message,return;private,unpause,container,cmd,execute,unpause,container,request,docker,client,client,message,message,logger,debug,executing,docker,unpause,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,unpause,container,cmd,unpause,container,cmd,client,unpause,container,cmd,container,id,return,unpause,container,cmd
DockerProducer -> private UnpauseContainerCmd executeUnpauseContainerRequest(DockerClient client, Message message);1429199966;Produces a unpause container request__@param client_@param message_@return;private UnpauseContainerCmd executeUnpauseContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Unpause Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        UnpauseContainerCmd unpauseContainerCmd = client.unpauseContainerCmd(containerId)___        return unpauseContainerCmd___    };produces,a,unpause,container,request,param,client,param,message,return;private,unpause,container,cmd,execute,unpause,container,request,docker,client,client,message,message,logger,debug,executing,docker,unpause,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,unpause,container,cmd,unpause,container,cmd,client,unpause,container,cmd,container,id,return,unpause,container,cmd
DockerProducer -> private UnpauseContainerCmd executeUnpauseContainerRequest(DockerClient client, Message message);1433489320;Produces a unpause container request__@param client_@param message_@return;private UnpauseContainerCmd executeUnpauseContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Unpause Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        UnpauseContainerCmd unpauseContainerCmd = client.unpauseContainerCmd(containerId)___        return unpauseContainerCmd___    };produces,a,unpause,container,request,param,client,param,message,return;private,unpause,container,cmd,execute,unpause,container,request,docker,client,client,message,message,logger,debug,executing,docker,unpause,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,unpause,container,cmd,unpause,container,cmd,client,unpause,container,cmd,container,id,return,unpause,container,cmd
DockerProducer -> private UnpauseContainerCmd executeUnpauseContainerRequest(DockerClient client, Message message);1440239526;Produces a unpause container request__@param client_@param message_@return;private UnpauseContainerCmd executeUnpauseContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Unpause Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        UnpauseContainerCmd unpauseContainerCmd = client.unpauseContainerCmd(containerId)___        return unpauseContainerCmd___    };produces,a,unpause,container,request,param,client,param,message,return;private,unpause,container,cmd,execute,unpause,container,request,docker,client,client,message,message,logger,debug,executing,docker,unpause,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,unpause,container,cmd,unpause,container,cmd,client,unpause,container,cmd,container,id,return,unpause,container,cmd
DockerProducer -> private UnpauseContainerCmd executeUnpauseContainerRequest(DockerClient client, Message message);1474362454;Produces a unpause container request__@param client_@param message_@return;private UnpauseContainerCmd executeUnpauseContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Unpause Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        UnpauseContainerCmd unpauseContainerCmd = client.unpauseContainerCmd(containerId)___        return unpauseContainerCmd___    };produces,a,unpause,container,request,param,client,param,message,return;private,unpause,container,cmd,execute,unpause,container,request,docker,client,client,message,message,logger,debug,executing,docker,unpause,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,unpause,container,cmd,unpause,container,cmd,client,unpause,container,cmd,container,id,return,unpause,container,cmd
DockerProducer -> private UnpauseContainerCmd executeUnpauseContainerRequest(DockerClient client, Message message);1531637865;Produces a unpause container request__@param client_@param message_@return;private UnpauseContainerCmd executeUnpauseContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Unpause Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        UnpauseContainerCmd unpauseContainerCmd = client.unpauseContainerCmd(containerId)___        return unpauseContainerCmd___    };produces,a,unpause,container,request,param,client,param,message,return;private,unpause,container,cmd,execute,unpause,container,request,docker,client,client,message,message,logger,debug,executing,docker,unpause,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,unpause,container,cmd,unpause,container,cmd,client,unpause,container,cmd,container,id,return,unpause,container,cmd
DockerProducer -> private UnpauseContainerCmd executeUnpauseContainerRequest(DockerClient client, Message message);1540108163;Produces a unpause container request__@param client_@param message_@return;private UnpauseContainerCmd executeUnpauseContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Unpause Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        UnpauseContainerCmd unpauseContainerCmd = client.unpauseContainerCmd(containerId)___        return unpauseContainerCmd___    };produces,a,unpause,container,request,param,client,param,message,return;private,unpause,container,cmd,execute,unpause,container,request,docker,client,client,message,message,logger,debug,executing,docker,unpause,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,unpause,container,cmd,unpause,container,cmd,client,unpause,container,cmd,container,id,return,unpause,container,cmd
DockerProducer -> private ListContainersCmd executeListContainersRequest(DockerClient client, Message message);1424675020;Produces a list containers request__@param client_@param message_@return;private ListContainersCmd executeListContainersRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker List Container Request")___        ListContainersCmd listContainersCmd = client.listContainersCmd()___        String before = DockerHelper.getProperty(DockerConstants.DOCKER_BEFORE, configuration, message, String.class)__        _        if (before != null) {_            listContainersCmd.withBefore(before)__        }_        _        Integer limit = DockerHelper.getProperty(DockerConstants.DOCKER_LIMIT, configuration, message, Integer.class)__        _        if (limit != null) {_            listContainersCmd.withLimit(limit)__        }_        _        Boolean showAll = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_ALL, configuration, message, Boolean.class)__        _        if (showAll != null) {_            listContainersCmd.withShowAll(showAll)__        }_        _        Boolean showSize = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_SIZE, configuration, message, Boolean.class)__        _        if (showSize != null) {_            listContainersCmd.withShowSize(showSize)__        }___        String since = DockerHelper.getProperty(DockerConstants.DOCKER_SINCE, configuration, message, String.class)__        _        if (since != null) {_            listContainersCmd.withSince(since)__        }__        return listContainersCmd___    };produces,a,list,containers,request,param,client,param,message,return;private,list,containers,cmd,execute,list,containers,request,docker,client,client,message,message,logger,debug,executing,docker,list,container,request,list,containers,cmd,list,containers,cmd,client,list,containers,cmd,string,before,docker,helper,get,property,docker,constants,configuration,message,string,class,if,before,null,list,containers,cmd,with,before,before,integer,limit,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,limit,null,list,containers,cmd,with,limit,limit,boolean,show,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,all,null,list,containers,cmd,with,show,all,show,all,boolean,show,size,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,size,null,list,containers,cmd,with,show,size,show,size,string,since,docker,helper,get,property,docker,constants,configuration,message,string,class,if,since,null,list,containers,cmd,with,since,since,return,list,containers,cmd
DockerProducer -> private ListContainersCmd executeListContainersRequest(DockerClient client, Message message);1424675476;Produces a list containers request__@param client_@param message_@return;private ListContainersCmd executeListContainersRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker List Container Request")___        ListContainersCmd listContainersCmd = client.listContainersCmd()___        String before = DockerHelper.getProperty(DockerConstants.DOCKER_BEFORE, configuration, message, String.class)___        if (before != null) {_            listContainersCmd.withBefore(before)__        }__        Integer limit = DockerHelper.getProperty(DockerConstants.DOCKER_LIMIT, configuration, message, Integer.class)___        if (limit != null) {_            listContainersCmd.withLimit(limit)__        }__        Boolean showAll = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_ALL, configuration, message, Boolean.class)___        if (showAll != null) {_            listContainersCmd.withShowAll(showAll)__        }__        Boolean showSize = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_SIZE, configuration, message, Boolean.class)___        if (showSize != null) {_            listContainersCmd.withShowSize(showSize)__        }___        String since = DockerHelper.getProperty(DockerConstants.DOCKER_SINCE, configuration, message, String.class)___        if (since != null) {_            listContainersCmd.withSince(since)__        }__        return listContainersCmd___    };produces,a,list,containers,request,param,client,param,message,return;private,list,containers,cmd,execute,list,containers,request,docker,client,client,message,message,logger,debug,executing,docker,list,container,request,list,containers,cmd,list,containers,cmd,client,list,containers,cmd,string,before,docker,helper,get,property,docker,constants,configuration,message,string,class,if,before,null,list,containers,cmd,with,before,before,integer,limit,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,limit,null,list,containers,cmd,with,limit,limit,boolean,show,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,all,null,list,containers,cmd,with,show,all,show,all,boolean,show,size,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,size,null,list,containers,cmd,with,show,size,show,size,string,since,docker,helper,get,property,docker,constants,configuration,message,string,class,if,since,null,list,containers,cmd,with,since,since,return,list,containers,cmd
DockerProducer -> private ListContainersCmd executeListContainersRequest(DockerClient client, Message message);1424877876;Produces a list containers request__@param client_@param message_@return;private ListContainersCmd executeListContainersRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker List Container Request")___        ListContainersCmd listContainersCmd = client.listContainersCmd()___        String before = DockerHelper.getProperty(DockerConstants.DOCKER_BEFORE, configuration, message, String.class)___        if (before != null) {_            listContainersCmd.withBefore(before)__        }__        Integer limit = DockerHelper.getProperty(DockerConstants.DOCKER_LIMIT, configuration, message, Integer.class)___        if (limit != null) {_            listContainersCmd.withLimit(limit)__        }__        Boolean showAll = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_ALL, configuration, message, Boolean.class)___        if (showAll != null) {_            listContainersCmd.withShowAll(showAll)__        }__        Boolean showSize = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_SIZE, configuration, message, Boolean.class)___        if (showSize != null) {_            listContainersCmd.withShowSize(showSize)__        }___        String since = DockerHelper.getProperty(DockerConstants.DOCKER_SINCE, configuration, message, String.class)___        if (since != null) {_            listContainersCmd.withSince(since)__        }__        return listContainersCmd___    };produces,a,list,containers,request,param,client,param,message,return;private,list,containers,cmd,execute,list,containers,request,docker,client,client,message,message,logger,debug,executing,docker,list,container,request,list,containers,cmd,list,containers,cmd,client,list,containers,cmd,string,before,docker,helper,get,property,docker,constants,configuration,message,string,class,if,before,null,list,containers,cmd,with,before,before,integer,limit,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,limit,null,list,containers,cmd,with,limit,limit,boolean,show,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,all,null,list,containers,cmd,with,show,all,show,all,boolean,show,size,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,size,null,list,containers,cmd,with,show,size,show,size,string,since,docker,helper,get,property,docker,constants,configuration,message,string,class,if,since,null,list,containers,cmd,with,since,since,return,list,containers,cmd
DockerProducer -> private ListContainersCmd executeListContainersRequest(DockerClient client, Message message);1429199966;Produces a list containers request__@param client_@param message_@return;private ListContainersCmd executeListContainersRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker List Container Request")___        ListContainersCmd listContainersCmd = client.listContainersCmd()___        String before = DockerHelper.getProperty(DockerConstants.DOCKER_BEFORE, configuration, message, String.class)___        if (before != null) {_            listContainersCmd.withBefore(before)__        }__        Integer limit = DockerHelper.getProperty(DockerConstants.DOCKER_LIMIT, configuration, message, Integer.class)___        if (limit != null) {_            listContainersCmd.withLimit(limit)__        }__        Boolean showAll = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_ALL, configuration, message, Boolean.class)___        if (showAll != null) {_            listContainersCmd.withShowAll(showAll)__        }__        Boolean showSize = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_SIZE, configuration, message, Boolean.class)___        if (showSize != null) {_            listContainersCmd.withShowSize(showSize)__        }___        String since = DockerHelper.getProperty(DockerConstants.DOCKER_SINCE, configuration, message, String.class)___        if (since != null) {_            listContainersCmd.withSince(since)__        }__        return listContainersCmd___    };produces,a,list,containers,request,param,client,param,message,return;private,list,containers,cmd,execute,list,containers,request,docker,client,client,message,message,logger,debug,executing,docker,list,container,request,list,containers,cmd,list,containers,cmd,client,list,containers,cmd,string,before,docker,helper,get,property,docker,constants,configuration,message,string,class,if,before,null,list,containers,cmd,with,before,before,integer,limit,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,limit,null,list,containers,cmd,with,limit,limit,boolean,show,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,all,null,list,containers,cmd,with,show,all,show,all,boolean,show,size,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,size,null,list,containers,cmd,with,show,size,show,size,string,since,docker,helper,get,property,docker,constants,configuration,message,string,class,if,since,null,list,containers,cmd,with,since,since,return,list,containers,cmd
DockerProducer -> private ListContainersCmd executeListContainersRequest(DockerClient client, Message message);1433489320;Produces a list containers request__@param client_@param message_@return;private ListContainersCmd executeListContainersRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker List Container Request")___        ListContainersCmd listContainersCmd = client.listContainersCmd()___        String before = DockerHelper.getProperty(DockerConstants.DOCKER_BEFORE, configuration, message, String.class)___        if (before != null) {_            listContainersCmd.withBefore(before)__        }__        Integer limit = DockerHelper.getProperty(DockerConstants.DOCKER_LIMIT, configuration, message, Integer.class)___        if (limit != null) {_            listContainersCmd.withLimit(limit)__        }__        Boolean showAll = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_ALL, configuration, message, Boolean.class)___        if (showAll != null) {_            listContainersCmd.withShowAll(showAll)__        }__        Boolean showSize = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_SIZE, configuration, message, Boolean.class)___        if (showSize != null) {_            listContainersCmd.withShowSize(showSize)__        }___        String since = DockerHelper.getProperty(DockerConstants.DOCKER_SINCE, configuration, message, String.class)___        if (since != null) {_            listContainersCmd.withSince(since)__        }__        return listContainersCmd___    };produces,a,list,containers,request,param,client,param,message,return;private,list,containers,cmd,execute,list,containers,request,docker,client,client,message,message,logger,debug,executing,docker,list,container,request,list,containers,cmd,list,containers,cmd,client,list,containers,cmd,string,before,docker,helper,get,property,docker,constants,configuration,message,string,class,if,before,null,list,containers,cmd,with,before,before,integer,limit,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,limit,null,list,containers,cmd,with,limit,limit,boolean,show,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,all,null,list,containers,cmd,with,show,all,show,all,boolean,show,size,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,size,null,list,containers,cmd,with,show,size,show,size,string,since,docker,helper,get,property,docker,constants,configuration,message,string,class,if,since,null,list,containers,cmd,with,since,since,return,list,containers,cmd
DockerProducer -> private ListContainersCmd executeListContainersRequest(DockerClient client, Message message);1440239526;Produces a list containers request__@param client_@param message_@return;private ListContainersCmd executeListContainersRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker List Container Request")___        ListContainersCmd listContainersCmd = client.listContainersCmd()___        String before = DockerHelper.getProperty(DockerConstants.DOCKER_BEFORE, configuration, message, String.class)___        if (before != null) {_            listContainersCmd.withBefore(before)__        }__        Integer limit = DockerHelper.getProperty(DockerConstants.DOCKER_LIMIT, configuration, message, Integer.class)___        if (limit != null) {_            listContainersCmd.withLimit(limit)__        }__        Boolean showAll = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_ALL, configuration, message, Boolean.class)___        if (showAll != null) {_            listContainersCmd.withShowAll(showAll)__        }__        Boolean showSize = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_SIZE, configuration, message, Boolean.class)___        if (showSize != null) {_            listContainersCmd.withShowSize(showSize)__        }___        String since = DockerHelper.getProperty(DockerConstants.DOCKER_SINCE, configuration, message, String.class)___        if (since != null) {_            listContainersCmd.withSince(since)__        }__        return listContainersCmd___    };produces,a,list,containers,request,param,client,param,message,return;private,list,containers,cmd,execute,list,containers,request,docker,client,client,message,message,logger,debug,executing,docker,list,container,request,list,containers,cmd,list,containers,cmd,client,list,containers,cmd,string,before,docker,helper,get,property,docker,constants,configuration,message,string,class,if,before,null,list,containers,cmd,with,before,before,integer,limit,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,limit,null,list,containers,cmd,with,limit,limit,boolean,show,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,all,null,list,containers,cmd,with,show,all,show,all,boolean,show,size,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,size,null,list,containers,cmd,with,show,size,show,size,string,since,docker,helper,get,property,docker,constants,configuration,message,string,class,if,since,null,list,containers,cmd,with,since,since,return,list,containers,cmd
DockerProducer -> private ListContainersCmd executeListContainersRequest(DockerClient client, Message message);1474362454;Produces a list containers request__@param client_@param message_@return;private ListContainersCmd executeListContainersRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker List Container Request")___        ListContainersCmd listContainersCmd = client.listContainersCmd()___        String before = DockerHelper.getProperty(DockerConstants.DOCKER_BEFORE, configuration, message, String.class)___        if (before != null) {_            listContainersCmd.withBefore(before)__        }__        Integer limit = DockerHelper.getProperty(DockerConstants.DOCKER_LIMIT, configuration, message, Integer.class)___        if (limit != null) {_            listContainersCmd.withLimit(limit)__        }__        Boolean showAll = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_ALL, configuration, message, Boolean.class)___        if (showAll != null) {_            listContainersCmd.withShowAll(showAll)__        }__        Boolean showSize = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_SIZE, configuration, message, Boolean.class)___        if (showSize != null) {_            listContainersCmd.withShowSize(showSize)__        }__        String since = DockerHelper.getProperty(DockerConstants.DOCKER_SINCE, configuration, message, String.class)___        if (since != null) {_            listContainersCmd.withSince(since)__        }__        return listContainersCmd___    };produces,a,list,containers,request,param,client,param,message,return;private,list,containers,cmd,execute,list,containers,request,docker,client,client,message,message,logger,debug,executing,docker,list,container,request,list,containers,cmd,list,containers,cmd,client,list,containers,cmd,string,before,docker,helper,get,property,docker,constants,configuration,message,string,class,if,before,null,list,containers,cmd,with,before,before,integer,limit,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,limit,null,list,containers,cmd,with,limit,limit,boolean,show,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,all,null,list,containers,cmd,with,show,all,show,all,boolean,show,size,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,size,null,list,containers,cmd,with,show,size,show,size,string,since,docker,helper,get,property,docker,constants,configuration,message,string,class,if,since,null,list,containers,cmd,with,since,since,return,list,containers,cmd
DockerProducer -> private ListContainersCmd executeListContainersRequest(DockerClient client, Message message);1531637865;Produces a list containers request__@param client_@param message_@return;private ListContainersCmd executeListContainersRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker List Container Request")___        ListContainersCmd listContainersCmd = client.listContainersCmd()___        String before = DockerHelper.getProperty(DockerConstants.DOCKER_BEFORE, configuration, message, String.class)___        if (before != null) {_            listContainersCmd.withBefore(before)__        }__        Integer limit = DockerHelper.getProperty(DockerConstants.DOCKER_LIMIT, configuration, message, Integer.class)___        if (limit != null) {_            listContainersCmd.withLimit(limit)__        }__        Boolean showAll = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_ALL, configuration, message, Boolean.class)___        if (showAll != null) {_            listContainersCmd.withShowAll(showAll)__        }__        Boolean showSize = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_SIZE, configuration, message, Boolean.class)___        if (showSize != null) {_            listContainersCmd.withShowSize(showSize)__        }__        String since = DockerHelper.getProperty(DockerConstants.DOCKER_SINCE, configuration, message, String.class)___        if (since != null) {_            listContainersCmd.withSince(since)__        }__        return listContainersCmd___    };produces,a,list,containers,request,param,client,param,message,return;private,list,containers,cmd,execute,list,containers,request,docker,client,client,message,message,logger,debug,executing,docker,list,container,request,list,containers,cmd,list,containers,cmd,client,list,containers,cmd,string,before,docker,helper,get,property,docker,constants,configuration,message,string,class,if,before,null,list,containers,cmd,with,before,before,integer,limit,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,limit,null,list,containers,cmd,with,limit,limit,boolean,show,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,all,null,list,containers,cmd,with,show,all,show,all,boolean,show,size,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,size,null,list,containers,cmd,with,show,size,show,size,string,since,docker,helper,get,property,docker,constants,configuration,message,string,class,if,since,null,list,containers,cmd,with,since,since,return,list,containers,cmd
DockerProducer -> private ListContainersCmd executeListContainersRequest(DockerClient client, Message message);1540108163;Produces a list containers request__@param client_@param message_@return;private ListContainersCmd executeListContainersRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker List Container Request")___        ListContainersCmd listContainersCmd = client.listContainersCmd()___        String before = DockerHelper.getProperty(DockerConstants.DOCKER_BEFORE, configuration, message, String.class)___        if (before != null) {_            listContainersCmd.withBefore(before)__        }__        Integer limit = DockerHelper.getProperty(DockerConstants.DOCKER_LIMIT, configuration, message, Integer.class)___        if (limit != null) {_            listContainersCmd.withLimit(limit)__        }__        Boolean showAll = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_ALL, configuration, message, Boolean.class)___        if (showAll != null) {_            listContainersCmd.withShowAll(showAll)__        }__        Boolean showSize = DockerHelper.getProperty(DockerConstants.DOCKER_SHOW_SIZE, configuration, message, Boolean.class)___        if (showSize != null) {_            listContainersCmd.withShowSize(showSize)__        }__        String since = DockerHelper.getProperty(DockerConstants.DOCKER_SINCE, configuration, message, String.class)___        if (since != null) {_            listContainersCmd.withSince(since)__        }__        return listContainersCmd___    };produces,a,list,containers,request,param,client,param,message,return;private,list,containers,cmd,execute,list,containers,request,docker,client,client,message,message,logger,debug,executing,docker,list,container,request,list,containers,cmd,list,containers,cmd,client,list,containers,cmd,string,before,docker,helper,get,property,docker,constants,configuration,message,string,class,if,before,null,list,containers,cmd,with,before,before,integer,limit,docker,helper,get,property,docker,constants,configuration,message,integer,class,if,limit,null,list,containers,cmd,with,limit,limit,boolean,show,all,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,all,null,list,containers,cmd,with,show,all,show,all,boolean,show,size,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,show,size,null,list,containers,cmd,with,show,size,show,size,string,since,docker,helper,get,property,docker,constants,configuration,message,string,class,if,since,null,list,containers,cmd,with,since,since,return,list,containers,cmd
DockerProducer -> private AuthConfig getAuthConfig(DockerClient client);1415211488;Attempt to retrieve authorization details from the client__@param client_@return;private AuthConfig getAuthConfig(DockerClient client) {_        _        AuthConfig authConfig = null__        _        try {_            authConfig = client.authConfig()__        } catch (Exception e) {_            _        }_        _        return authConfig_     _        _    };attempt,to,retrieve,authorization,details,from,the,client,param,client,return;private,auth,config,get,auth,config,docker,client,client,auth,config,auth,config,null,try,auth,config,client,auth,config,catch,exception,e,return,auth,config
DockerProducer -> private AuthConfig getAuthConfig(DockerClient client);1415517409;Attempt to retrieve authorization details from the client__@param client_@return;private AuthConfig getAuthConfig(DockerClient client) {_        _        AuthConfig authConfig = null__        _        try {_            authConfig = client.authConfig()__        } catch (Exception e) {_            _        }_        _        return authConfig_     _        _    };attempt,to,retrieve,authorization,details,from,the,client,param,client,return;private,auth,config,get,auth,config,docker,client,client,auth,config,auth,config,null,try,auth,config,client,auth,config,catch,exception,e,return,auth,config
DockerProducer -> private AuthConfig getAuthConfig(DockerClient client);1423234542;Attempt to retrieve authorization details from the client__@param client_@return;private AuthConfig getAuthConfig(DockerClient client) {_        _        AuthConfig authConfig = null__        _        try {_            authConfig = client.authConfig()__        } catch (Exception e) {_            _        }_        _        return authConfig_     _        _    };attempt,to,retrieve,authorization,details,from,the,client,param,client,return;private,auth,config,get,auth,config,docker,client,client,auth,config,auth,config,null,try,auth,config,client,auth,config,catch,exception,e,return,auth,config
DockerProducer -> private RemoveContainerCmd executeRemoveContainerRequest(DockerClient client, Message message);1424675020;Produces a remove container request__@param client_@param message_@return;private RemoveContainerCmd executeRemoveContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Remove Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        RemoveContainerCmd removeContainerCmd = client.removeContainerCmd(containerId)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)___        if (force != null) {_            removeContainerCmd.withForce(force)__        }__        Boolean removeVolumes = DockerHelper.getProperty(DockerConstants.DOCKER_REMOVE_VOLUMES, configuration, message, Boolean.class)___        if (removeVolumes != null) {_            removeContainerCmd.withRemoveVolumes(removeVolumes)__        }__        return removeContainerCmd___    };produces,a,remove,container,request,param,client,param,message,return;private,remove,container,cmd,execute,remove,container,request,docker,client,client,message,message,logger,debug,executing,docker,remove,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,remove,container,cmd,remove,container,cmd,client,remove,container,cmd,container,id,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,remove,container,cmd,with,force,force,boolean,remove,volumes,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,remove,volumes,null,remove,container,cmd,with,remove,volumes,remove,volumes,return,remove,container,cmd
DockerProducer -> private RemoveContainerCmd executeRemoveContainerRequest(DockerClient client, Message message);1424675476;Produces a remove container request__@param client_@param message_@return;private RemoveContainerCmd executeRemoveContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Remove Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        RemoveContainerCmd removeContainerCmd = client.removeContainerCmd(containerId)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)___        if (force != null) {_            removeContainerCmd.withForce(force)__        }__        Boolean removeVolumes = DockerHelper.getProperty(DockerConstants.DOCKER_REMOVE_VOLUMES, configuration, message, Boolean.class)___        if (removeVolumes != null) {_            removeContainerCmd.withRemoveVolumes(removeVolumes)__        }__        return removeContainerCmd___    };produces,a,remove,container,request,param,client,param,message,return;private,remove,container,cmd,execute,remove,container,request,docker,client,client,message,message,logger,debug,executing,docker,remove,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,remove,container,cmd,remove,container,cmd,client,remove,container,cmd,container,id,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,remove,container,cmd,with,force,force,boolean,remove,volumes,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,remove,volumes,null,remove,container,cmd,with,remove,volumes,remove,volumes,return,remove,container,cmd
DockerProducer -> private RemoveContainerCmd executeRemoveContainerRequest(DockerClient client, Message message);1424877876;Produces a remove container request__@param client_@param message_@return;private RemoveContainerCmd executeRemoveContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Remove Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        RemoveContainerCmd removeContainerCmd = client.removeContainerCmd(containerId)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)___        if (force != null) {_            removeContainerCmd.withForce(force)__        }__        Boolean removeVolumes = DockerHelper.getProperty(DockerConstants.DOCKER_REMOVE_VOLUMES, configuration, message, Boolean.class)___        if (removeVolumes != null) {_            removeContainerCmd.withRemoveVolumes(removeVolumes)__        }__        return removeContainerCmd___    };produces,a,remove,container,request,param,client,param,message,return;private,remove,container,cmd,execute,remove,container,request,docker,client,client,message,message,logger,debug,executing,docker,remove,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,remove,container,cmd,remove,container,cmd,client,remove,container,cmd,container,id,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,remove,container,cmd,with,force,force,boolean,remove,volumes,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,remove,volumes,null,remove,container,cmd,with,remove,volumes,remove,volumes,return,remove,container,cmd
DockerProducer -> private RemoveContainerCmd executeRemoveContainerRequest(DockerClient client, Message message);1429199966;Produces a remove container request__@param client_@param message_@return;private RemoveContainerCmd executeRemoveContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Remove Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        RemoveContainerCmd removeContainerCmd = client.removeContainerCmd(containerId)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)___        if (force != null) {_            removeContainerCmd.withForce(force)__        }__        Boolean removeVolumes = DockerHelper.getProperty(DockerConstants.DOCKER_REMOVE_VOLUMES, configuration, message, Boolean.class)___        if (removeVolumes != null) {_            removeContainerCmd.withRemoveVolumes(removeVolumes)__        }__        return removeContainerCmd___    };produces,a,remove,container,request,param,client,param,message,return;private,remove,container,cmd,execute,remove,container,request,docker,client,client,message,message,logger,debug,executing,docker,remove,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,remove,container,cmd,remove,container,cmd,client,remove,container,cmd,container,id,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,remove,container,cmd,with,force,force,boolean,remove,volumes,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,remove,volumes,null,remove,container,cmd,with,remove,volumes,remove,volumes,return,remove,container,cmd
DockerProducer -> private RemoveContainerCmd executeRemoveContainerRequest(DockerClient client, Message message);1433489320;Produces a remove container request__@param client_@param message_@return;private RemoveContainerCmd executeRemoveContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Remove Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        RemoveContainerCmd removeContainerCmd = client.removeContainerCmd(containerId)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)___        if (force != null) {_            removeContainerCmd.withForce(force)__        }__        Boolean removeVolumes = DockerHelper.getProperty(DockerConstants.DOCKER_REMOVE_VOLUMES, configuration, message, Boolean.class)___        if (removeVolumes != null) {_            removeContainerCmd.withRemoveVolumes(removeVolumes)__        }__        return removeContainerCmd___    };produces,a,remove,container,request,param,client,param,message,return;private,remove,container,cmd,execute,remove,container,request,docker,client,client,message,message,logger,debug,executing,docker,remove,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,remove,container,cmd,remove,container,cmd,client,remove,container,cmd,container,id,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,remove,container,cmd,with,force,force,boolean,remove,volumes,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,remove,volumes,null,remove,container,cmd,with,remove,volumes,remove,volumes,return,remove,container,cmd
DockerProducer -> private RemoveContainerCmd executeRemoveContainerRequest(DockerClient client, Message message);1440239526;Produces a remove container request__@param client_@param message_@return;private RemoveContainerCmd executeRemoveContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Remove Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        RemoveContainerCmd removeContainerCmd = client.removeContainerCmd(containerId)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)___        if (force != null) {_            removeContainerCmd.withForce(force)__        }__        Boolean removeVolumes = DockerHelper.getProperty(DockerConstants.DOCKER_REMOVE_VOLUMES, configuration, message, Boolean.class)___        if (removeVolumes != null) {_            removeContainerCmd.withRemoveVolumes(removeVolumes)__        }__        return removeContainerCmd___    };produces,a,remove,container,request,param,client,param,message,return;private,remove,container,cmd,execute,remove,container,request,docker,client,client,message,message,logger,debug,executing,docker,remove,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,remove,container,cmd,remove,container,cmd,client,remove,container,cmd,container,id,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,remove,container,cmd,with,force,force,boolean,remove,volumes,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,remove,volumes,null,remove,container,cmd,with,remove,volumes,remove,volumes,return,remove,container,cmd
DockerProducer -> private RemoveContainerCmd executeRemoveContainerRequest(DockerClient client, Message message);1474362454;Produces a remove container request__@param client_@param message_@return;private RemoveContainerCmd executeRemoveContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Remove Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        RemoveContainerCmd removeContainerCmd = client.removeContainerCmd(containerId)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)___        if (force != null) {_            removeContainerCmd.withForce(force)__        }__        Boolean removeVolumes = DockerHelper.getProperty(DockerConstants.DOCKER_REMOVE_VOLUMES, configuration, message, Boolean.class)___        if (removeVolumes != null) {_            removeContainerCmd.withRemoveVolumes(removeVolumes)__        }__        return removeContainerCmd___    };produces,a,remove,container,request,param,client,param,message,return;private,remove,container,cmd,execute,remove,container,request,docker,client,client,message,message,logger,debug,executing,docker,remove,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,remove,container,cmd,remove,container,cmd,client,remove,container,cmd,container,id,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,remove,container,cmd,with,force,force,boolean,remove,volumes,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,remove,volumes,null,remove,container,cmd,with,remove,volumes,remove,volumes,return,remove,container,cmd
DockerProducer -> private RemoveContainerCmd executeRemoveContainerRequest(DockerClient client, Message message);1531637865;Produces a remove container request__@param client_@param message_@return;private RemoveContainerCmd executeRemoveContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Remove Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        RemoveContainerCmd removeContainerCmd = client.removeContainerCmd(containerId)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)___        if (force != null) {_            removeContainerCmd.withForce(force)__        }__        Boolean removeVolumes = DockerHelper.getProperty(DockerConstants.DOCKER_REMOVE_VOLUMES, configuration, message, Boolean.class)___        if (removeVolumes != null) {_            removeContainerCmd.withRemoveVolumes(removeVolumes)__        }__        return removeContainerCmd___    };produces,a,remove,container,request,param,client,param,message,return;private,remove,container,cmd,execute,remove,container,request,docker,client,client,message,message,logger,debug,executing,docker,remove,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,remove,container,cmd,remove,container,cmd,client,remove,container,cmd,container,id,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,remove,container,cmd,with,force,force,boolean,remove,volumes,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,remove,volumes,null,remove,container,cmd,with,remove,volumes,remove,volumes,return,remove,container,cmd
DockerProducer -> private RemoveContainerCmd executeRemoveContainerRequest(DockerClient client, Message message);1540108163;Produces a remove container request__@param client_@param message_@return;private RemoveContainerCmd executeRemoveContainerRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Remove Container Request")___        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)___        ObjectHelper.notNull(containerId, "Container ID must be specified")___        RemoveContainerCmd removeContainerCmd = client.removeContainerCmd(containerId)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)___        if (force != null) {_            removeContainerCmd.withForce(force)__        }__        Boolean removeVolumes = DockerHelper.getProperty(DockerConstants.DOCKER_REMOVE_VOLUMES, configuration, message, Boolean.class)___        if (removeVolumes != null) {_            removeContainerCmd.withRemoveVolumes(removeVolumes)__        }__        return removeContainerCmd___    };produces,a,remove,container,request,param,client,param,message,return;private,remove,container,cmd,execute,remove,container,request,docker,client,client,message,message,logger,debug,executing,docker,remove,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,object,helper,not,null,container,id,container,id,must,be,specified,remove,container,cmd,remove,container,cmd,client,remove,container,cmd,container,id,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,remove,container,cmd,with,force,force,boolean,remove,volumes,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,remove,volumes,null,remove,container,cmd,with,remove,volumes,remove,volumes,return,remove,container,cmd
DockerProducer -> private PushImageCmd executePushImageRequest(DockerClient client, Message message) throws DockerException;1415211488;Produces a push image request__@param client_@param message_@return_@throws DockerException;private PushImageCmd executePushImageRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Push Image Request")__        _        String name = DockerHelper.getProperty(DockerConstants.DOCKER_NAME, configuration, message, String.class)__        _        PushImageCmd pushImageCmd = client.pushImageCmd(name)_  _   _        AuthConfig authConfig = getAuthConfig(client)__    _        if (authConfig != null) {_            pushImageCmd.withAuthConfig(authConfig)__        }_        _        return pushImageCmd__    _    };produces,a,push,image,request,param,client,param,message,return,throws,docker,exception;private,push,image,cmd,execute,push,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,push,image,request,string,name,docker,helper,get,property,docker,constants,configuration,message,string,class,push,image,cmd,push,image,cmd,client,push,image,cmd,name,auth,config,auth,config,get,auth,config,client,if,auth,config,null,push,image,cmd,with,auth,config,auth,config,return,push,image,cmd
DockerProducer -> private PushImageCmd executePushImageRequest(DockerClient client, Message message) throws DockerException;1415517409;Produces a push image request__@param client_@param message_@return_@throws DockerException;private PushImageCmd executePushImageRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Push Image Request")__        _        String name = DockerHelper.getProperty(DockerConstants.DOCKER_NAME, configuration, message, String.class)__        _        PushImageCmd pushImageCmd = client.pushImageCmd(name)_  _   _        AuthConfig authConfig = getAuthConfig(client)__    _        if (authConfig != null) {_            pushImageCmd.withAuthConfig(authConfig)__        }_        _        return pushImageCmd__    _    };produces,a,push,image,request,param,client,param,message,return,throws,docker,exception;private,push,image,cmd,execute,push,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,push,image,request,string,name,docker,helper,get,property,docker,constants,configuration,message,string,class,push,image,cmd,push,image,cmd,client,push,image,cmd,name,auth,config,auth,config,get,auth,config,client,if,auth,config,null,push,image,cmd,with,auth,config,auth,config,return,push,image,cmd
DockerProducer -> private PushImageCmd executePushImageRequest(DockerClient client, Message message) throws DockerException;1423234542;Produces a push image request__@param client_@param message_@return_@throws DockerException;private PushImageCmd executePushImageRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Push Image Request")__        _        String name = DockerHelper.getProperty(DockerConstants.DOCKER_NAME, configuration, message, String.class)__        _        PushImageCmd pushImageCmd = client.pushImageCmd(name)_  _   _        AuthConfig authConfig = getAuthConfig(client)__    _        if (authConfig != null) {_            pushImageCmd.withAuthConfig(authConfig)__        }_        _        return pushImageCmd__    _    };produces,a,push,image,request,param,client,param,message,return,throws,docker,exception;private,push,image,cmd,execute,push,image,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,push,image,request,string,name,docker,helper,get,property,docker,constants,configuration,message,string,class,push,image,cmd,push,image,cmd,client,push,image,cmd,name,auth,config,auth,config,get,auth,config,client,if,auth,config,null,push,image,cmd,with,auth,config,auth,config,return,push,image,cmd
DockerProducer -> private TagImageCmd executeTagImageRequest(DockerClient client, Message message);1424675020;Produces a tag image request__@param client_@param message_@return;private TagImageCmd executeTagImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Tag Image Request")___        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (imageId == null || repository == null || tag == null) {_            throw new IllegalArgumentException("ImageId, repository and tag must be specified")__        }__        TagImageCmd tagImageCmd = client.tagImageCmd(imageId, repository, tag)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)___        if (force != null) {_            tagImageCmd.withForce(force)__        }__        return tagImageCmd___    };produces,a,tag,image,request,param,client,param,message,return;private,tag,image,cmd,execute,tag,image,request,docker,client,client,message,message,logger,debug,executing,docker,tag,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,image,id,null,repository,null,tag,null,throw,new,illegal,argument,exception,image,id,repository,and,tag,must,be,specified,tag,image,cmd,tag,image,cmd,client,tag,image,cmd,image,id,repository,tag,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,tag,image,cmd,with,force,force,return,tag,image,cmd
DockerProducer -> private TagImageCmd executeTagImageRequest(DockerClient client, Message message);1424675476;Produces a tag image request__@param client_@param message_@return;private TagImageCmd executeTagImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Tag Image Request")___        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (imageId == null || repository == null || tag == null) {_            throw new IllegalArgumentException("ImageId, repository and tag must be specified")__        }__        TagImageCmd tagImageCmd = client.tagImageCmd(imageId, repository, tag)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)___        if (force != null) {_            tagImageCmd.withForce(force)__        }__        return tagImageCmd___    };produces,a,tag,image,request,param,client,param,message,return;private,tag,image,cmd,execute,tag,image,request,docker,client,client,message,message,logger,debug,executing,docker,tag,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,image,id,null,repository,null,tag,null,throw,new,illegal,argument,exception,image,id,repository,and,tag,must,be,specified,tag,image,cmd,tag,image,cmd,client,tag,image,cmd,image,id,repository,tag,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,tag,image,cmd,with,force,force,return,tag,image,cmd
DockerProducer -> private TagImageCmd executeTagImageRequest(DockerClient client, Message message);1424877876;Produces a tag image request__@param client_@param message_@return;private TagImageCmd executeTagImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Tag Image Request")___        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (imageId == null || repository == null || tag == null) {_            throw new IllegalArgumentException("ImageId, repository and tag must be specified")__        }__        TagImageCmd tagImageCmd = client.tagImageCmd(imageId, repository, tag)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)___        if (force != null) {_            tagImageCmd.withForce(force)__        }__        return tagImageCmd___    };produces,a,tag,image,request,param,client,param,message,return;private,tag,image,cmd,execute,tag,image,request,docker,client,client,message,message,logger,debug,executing,docker,tag,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,image,id,null,repository,null,tag,null,throw,new,illegal,argument,exception,image,id,repository,and,tag,must,be,specified,tag,image,cmd,tag,image,cmd,client,tag,image,cmd,image,id,repository,tag,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,tag,image,cmd,with,force,force,return,tag,image,cmd
DockerProducer -> private TagImageCmd executeTagImageRequest(DockerClient client, Message message);1429199966;Produces a tag image request__@param client_@param message_@return;private TagImageCmd executeTagImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Tag Image Request")___        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (imageId == null || repository == null || tag == null) {_            throw new IllegalArgumentException("ImageId, repository and tag must be specified")__        }__        TagImageCmd tagImageCmd = client.tagImageCmd(imageId, repository, tag)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)___        if (force != null) {_            tagImageCmd.withForce(force)__        }__        return tagImageCmd___    };produces,a,tag,image,request,param,client,param,message,return;private,tag,image,cmd,execute,tag,image,request,docker,client,client,message,message,logger,debug,executing,docker,tag,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,image,id,null,repository,null,tag,null,throw,new,illegal,argument,exception,image,id,repository,and,tag,must,be,specified,tag,image,cmd,tag,image,cmd,client,tag,image,cmd,image,id,repository,tag,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,tag,image,cmd,with,force,force,return,tag,image,cmd
DockerProducer -> private TagImageCmd executeTagImageRequest(DockerClient client, Message message);1433489320;Produces a tag image request__@param client_@param message_@return;private TagImageCmd executeTagImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Tag Image Request")___        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (imageId == null || repository == null || tag == null) {_            throw new IllegalArgumentException("ImageId, repository and tag must be specified")__        }__        TagImageCmd tagImageCmd = client.tagImageCmd(imageId, repository, tag)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)___        if (force != null) {_            tagImageCmd.withForce(force)__        }__        return tagImageCmd___    };produces,a,tag,image,request,param,client,param,message,return;private,tag,image,cmd,execute,tag,image,request,docker,client,client,message,message,logger,debug,executing,docker,tag,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,image,id,null,repository,null,tag,null,throw,new,illegal,argument,exception,image,id,repository,and,tag,must,be,specified,tag,image,cmd,tag,image,cmd,client,tag,image,cmd,image,id,repository,tag,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,tag,image,cmd,with,force,force,return,tag,image,cmd
DockerProducer -> private TagImageCmd executeTagImageRequest(DockerClient client, Message message);1440239526;Produces a tag image request__@param client_@param message_@return;private TagImageCmd executeTagImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Tag Image Request")___        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (imageId == null || repository == null || tag == null) {_            throw new IllegalArgumentException("ImageId, repository and tag must be specified")__        }__        TagImageCmd tagImageCmd = client.tagImageCmd(imageId, repository, tag)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)___        if (force != null) {_            tagImageCmd.withForce(force)__        }__        return tagImageCmd___    };produces,a,tag,image,request,param,client,param,message,return;private,tag,image,cmd,execute,tag,image,request,docker,client,client,message,message,logger,debug,executing,docker,tag,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,image,id,null,repository,null,tag,null,throw,new,illegal,argument,exception,image,id,repository,and,tag,must,be,specified,tag,image,cmd,tag,image,cmd,client,tag,image,cmd,image,id,repository,tag,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,tag,image,cmd,with,force,force,return,tag,image,cmd
DockerProducer -> private TagImageCmd executeTagImageRequest(DockerClient client, Message message);1474362454;Produces a tag image request__@param client_@param message_@return;private TagImageCmd executeTagImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Tag Image Request")___        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (imageId == null || repository == null || tag == null) {_            throw new IllegalArgumentException("ImageId, repository and tag must be specified")__        }__        TagImageCmd tagImageCmd = client.tagImageCmd(imageId, repository, tag)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)___        if (force != null) {_            tagImageCmd.withForce(force)__        }__        return tagImageCmd___    };produces,a,tag,image,request,param,client,param,message,return;private,tag,image,cmd,execute,tag,image,request,docker,client,client,message,message,logger,debug,executing,docker,tag,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,image,id,null,repository,null,tag,null,throw,new,illegal,argument,exception,image,id,repository,and,tag,must,be,specified,tag,image,cmd,tag,image,cmd,client,tag,image,cmd,image,id,repository,tag,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,tag,image,cmd,with,force,force,return,tag,image,cmd
DockerProducer -> private TagImageCmd executeTagImageRequest(DockerClient client, Message message);1531637865;Produces a tag image request__@param client_@param message_@return;private TagImageCmd executeTagImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Tag Image Request")___        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (imageId == null || repository == null || tag == null) {_            throw new IllegalArgumentException("ImageId, repository and tag must be specified")__        }__        TagImageCmd tagImageCmd = client.tagImageCmd(imageId, repository, tag)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)___        if (force != null) {_            tagImageCmd.withForce(force)__        }__        return tagImageCmd___    };produces,a,tag,image,request,param,client,param,message,return;private,tag,image,cmd,execute,tag,image,request,docker,client,client,message,message,logger,debug,executing,docker,tag,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,image,id,null,repository,null,tag,null,throw,new,illegal,argument,exception,image,id,repository,and,tag,must,be,specified,tag,image,cmd,tag,image,cmd,client,tag,image,cmd,image,id,repository,tag,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,tag,image,cmd,with,force,force,return,tag,image,cmd
DockerProducer -> private TagImageCmd executeTagImageRequest(DockerClient client, Message message);1540108163;Produces a tag image request__@param client_@param message_@return;private TagImageCmd executeTagImageRequest(DockerClient client, Message message) {__        LOGGER.debug("Executing Docker Tag Image Request")___        String imageId = DockerHelper.getProperty(DockerConstants.DOCKER_IMAGE_ID, configuration, message, String.class)___        String repository = DockerHelper.getProperty(DockerConstants.DOCKER_REPOSITORY, configuration, message, String.class)___        String tag = DockerHelper.getProperty(DockerConstants.DOCKER_TAG, configuration, message, String.class)___        if (imageId == null || repository == null || tag == null) {_            throw new IllegalArgumentException("ImageId, repository and tag must be specified")__        }__        TagImageCmd tagImageCmd = client.tagImageCmd(imageId, repository, tag)___        Boolean force = DockerHelper.getProperty(DockerConstants.DOCKER_FORCE, configuration, message, Boolean.class)___        if (force != null) {_            tagImageCmd.withForce(force)__        }__        return tagImageCmd___    };produces,a,tag,image,request,param,client,param,message,return;private,tag,image,cmd,execute,tag,image,request,docker,client,client,message,message,logger,debug,executing,docker,tag,image,request,string,image,id,docker,helper,get,property,docker,constants,configuration,message,string,class,string,repository,docker,helper,get,property,docker,constants,configuration,message,string,class,string,tag,docker,helper,get,property,docker,constants,configuration,message,string,class,if,image,id,null,repository,null,tag,null,throw,new,illegal,argument,exception,image,id,repository,and,tag,must,be,specified,tag,image,cmd,tag,image,cmd,client,tag,image,cmd,image,id,repository,tag,boolean,force,docker,helper,get,property,docker,constants,configuration,message,boolean,class,if,force,null,tag,image,cmd,with,force,force,return,tag,image,cmd
DockerProducer -> private InspectContainerCmd executeInspectContainerRequest(DockerClient client, Message message) throws DockerException;1415211488;Produce a inspect container request__@param client_@param message_@return_@throws DockerException;private InspectContainerCmd executeInspectContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Inspect Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        _        InspectContainerCmd inspectContainerCmd = client.inspectContainerCmd(containerId)__        _        return inspectContainerCmd___    };produce,a,inspect,container,request,param,client,param,message,return,throws,docker,exception;private,inspect,container,cmd,execute,inspect,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,inspect,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,inspect,container,cmd,inspect,container,cmd,client,inspect,container,cmd,container,id,return,inspect,container,cmd
DockerProducer -> private InspectContainerCmd executeInspectContainerRequest(DockerClient client, Message message) throws DockerException;1415517409;Produce a inspect container request__@param client_@param message_@return_@throws DockerException;private InspectContainerCmd executeInspectContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Inspect Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        _        InspectContainerCmd inspectContainerCmd = client.inspectContainerCmd(containerId)__        _        return inspectContainerCmd___    };produce,a,inspect,container,request,param,client,param,message,return,throws,docker,exception;private,inspect,container,cmd,execute,inspect,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,inspect,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,inspect,container,cmd,inspect,container,cmd,client,inspect,container,cmd,container,id,return,inspect,container,cmd
DockerProducer -> private InspectContainerCmd executeInspectContainerRequest(DockerClient client, Message message) throws DockerException;1423234542;Produce a inspect container request__@param client_@param message_@return_@throws DockerException;private InspectContainerCmd executeInspectContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Inspect Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        _        InspectContainerCmd inspectContainerCmd = client.inspectContainerCmd(containerId)__        _        return inspectContainerCmd___    };produce,a,inspect,container,request,param,client,param,message,return,throws,docker,exception;private,inspect,container,cmd,execute,inspect,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,inspect,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,inspect,container,cmd,inspect,container,cmd,client,inspect,container,cmd,container,id,return,inspect,container,cmd
DockerProducer -> private KillContainerCmd executeKillContainerRequest(DockerClient client, Message message) throws DockerException;1415211488;Produces a kill container request__@param client_@param message_@return_@throws DockerException;private KillContainerCmd executeKillContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Kill Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        _        KillContainerCmd killContainerCmd = client.killContainerCmd(containerId)___        String signal = DockerHelper.getProperty(DockerConstants.DOCKER_SIGNAL, configuration, message, String.class)__        _        if (signal != null) {_            killContainerCmd.withSignal(signal)__        }_             _        return killContainerCmd___    };produces,a,kill,container,request,param,client,param,message,return,throws,docker,exception;private,kill,container,cmd,execute,kill,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,kill,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,kill,container,cmd,kill,container,cmd,client,kill,container,cmd,container,id,string,signal,docker,helper,get,property,docker,constants,configuration,message,string,class,if,signal,null,kill,container,cmd,with,signal,signal,return,kill,container,cmd
DockerProducer -> private KillContainerCmd executeKillContainerRequest(DockerClient client, Message message) throws DockerException;1415517409;Produces a kill container request__@param client_@param message_@return_@throws DockerException;private KillContainerCmd executeKillContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Kill Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        _        KillContainerCmd killContainerCmd = client.killContainerCmd(containerId)___        String signal = DockerHelper.getProperty(DockerConstants.DOCKER_SIGNAL, configuration, message, String.class)__        _        if (signal != null) {_            killContainerCmd.withSignal(signal)__        }_             _        return killContainerCmd___    };produces,a,kill,container,request,param,client,param,message,return,throws,docker,exception;private,kill,container,cmd,execute,kill,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,kill,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,kill,container,cmd,kill,container,cmd,client,kill,container,cmd,container,id,string,signal,docker,helper,get,property,docker,constants,configuration,message,string,class,if,signal,null,kill,container,cmd,with,signal,signal,return,kill,container,cmd
DockerProducer -> private KillContainerCmd executeKillContainerRequest(DockerClient client, Message message) throws DockerException;1423234542;Produces a kill container request__@param client_@param message_@return_@throws DockerException;private KillContainerCmd executeKillContainerRequest(DockerClient client, Message message) throws DockerException {_        _        LOGGER.debug("Executing Docker Kill Container Request")__        _        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class)__        _        KillContainerCmd killContainerCmd = client.killContainerCmd(containerId)___        String signal = DockerHelper.getProperty(DockerConstants.DOCKER_SIGNAL, configuration, message, String.class)__        _        if (signal != null) {_            killContainerCmd.withSignal(signal)__        }_             _        return killContainerCmd___    };produces,a,kill,container,request,param,client,param,message,return,throws,docker,exception;private,kill,container,cmd,execute,kill,container,request,docker,client,client,message,message,throws,docker,exception,logger,debug,executing,docker,kill,container,request,string,container,id,docker,helper,get,property,docker,constants,configuration,message,string,class,kill,container,cmd,kill,container,cmd,client,kill,container,cmd,container,id,string,signal,docker,helper,get,property,docker,constants,configuration,message,string,class,if,signal,null,kill,container,cmd,with,signal,signal,return,kill,container,cmd
