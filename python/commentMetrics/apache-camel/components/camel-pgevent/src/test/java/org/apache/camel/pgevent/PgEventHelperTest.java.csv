commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Test public void testToPGConnectionWithNullConnection() throws Exception {     expectedException.expect(IllegalArgumentException.class).     PgEventHelper.toPGConnection(null). }
false;public;0;6;;@Test public void testToPGConnectionWithNonWrappedConnection() throws Exception {     Connection originalConnection = mock(PGConnection.class).     PGConnection actualConnection = PgEventHelper.toPGConnection(originalConnection).     assertSame(originalConnection, actualConnection). }
false;public;0;9;;@Test public void testToPGConnectionWithWrappedConnection() throws Exception {     Connection wrapperConnection = mock(Connection.class).     PGConnection unwrappedConnection = mock(PGConnection.class).     when(wrapperConnection.isWrapperFor(PGConnection.class)).thenReturn(true).     when(wrapperConnection.unwrap(PGConnection.class)).thenReturn(unwrappedConnection).     PGConnection actualConnection = PgEventHelper.toPGConnection(wrapperConnection).     assertSame(unwrappedConnection, actualConnection). }
false;public;0;7;;@Test public void testToPGConnectionWithInvalidWrappedConnection() throws Exception {     expectedException.expect(IllegalStateException.class).     Connection wrapperConnection = mock(Connection.class).     when(wrapperConnection.isWrapperFor(PGConnection.class)).thenReturn(false).     PgEventHelper.toPGConnection(wrapperConnection). }
