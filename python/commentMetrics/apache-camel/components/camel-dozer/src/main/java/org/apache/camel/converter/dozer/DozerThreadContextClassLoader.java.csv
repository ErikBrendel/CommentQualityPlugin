commented;modifiers;parameterAmount;loc;comment;code
false;public;1;12;;@Override public Class<?> loadClass(String className) {     LOG.debug("Loading class from classloader: {}.", Thread.currentThread().getContextClassLoader()).     Class<?> result = null.     try {         // try to resolve the class from the thread context classloader         result = ClassUtils.getClass(Thread.currentThread().getContextClassLoader(), className).     } catch (ClassNotFoundException e) {         MappingUtils.throwMappingException(e).     }     return result. }
false;public;1;26;;@Override public URL loadResource(String uri) {     URL answer = null.     ClassLoader cl = Thread.currentThread().getContextClassLoader().     if (cl != null) {         LOG.debug("Loading resource from classloader: {}.", cl).         answer = cl.getResource(uri).     }     // try treating it as a system resource     if (answer == null) {         answer = ClassLoader.getSystemResource(uri).     }     // one more time in case it's a normal URI     if (answer == null && StringUtils.contains(uri, ":")) {         try {             answer = new URL(uri).         } catch (MalformedURLException e) {             MappingUtils.throwMappingException(e).         }     }     return answer. }
