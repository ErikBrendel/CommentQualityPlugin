commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public Producer createProducer() throws Exception {     return new DozerProducer(this). }
false;public;1;4;;@Override public Consumer createConsumer(Processor processor) throws Exception {     throw new UnsupportedOperationException("Consumer not supported for Dozer endpoints"). }
false;public;0;4;;@Override public boolean isSingleton() {     return true. }
false;public;0;3;;public Mapper getMapper() throws Exception {     return mapper. }
false;public;0;3;;public DozerConfiguration getConfiguration() {     return configuration. }
false;public;1;3;;public void setConfiguration(DozerConfiguration configuration) {     this.configuration = configuration. }
false;;0;3;;CustomMapper getCustomMapper() {     return customMapper. }
false;;0;3;;VariableMapper getVariableMapper() {     return variableMapper. }
false;;0;3;;ExpressionMapper getExpressionMapper() {     return expressionMapper. }
false;protected;0;6;;@Override protected void doStart() throws Exception {     super.doStart().     initDozerBeanContainerAndMapper(). }
false;protected;0;5;;@Override protected void doStop() throws Exception {     super.doStop(). // noop }
false;protected;0;30;;protected void initDozerBeanContainerAndMapper() throws Exception {     log.info("Configuring {}...", Mapper.class.getName()).     if (mapper == null) {         if (configuration.getMappingConfiguration() == null) {             URL url = ResourceHelper.resolveMandatoryResourceAsUrl(getCamelContext().getClassResolver(), configuration.getMappingFile()).             DozerBeanMapperConfiguration config = new DozerBeanMapperConfiguration().             config.setCustomConvertersWithId(getCustomConvertersWithId()).             config.setMappingFiles(Arrays.asList(url.toString())).             configuration.setMappingConfiguration(config).         } else {             DozerBeanMapperConfiguration config = configuration.getMappingConfiguration().             if (config.getCustomConvertersWithId() == null) {                 config.setCustomConvertersWithId(getCustomConvertersWithId()).             } else {                 config.getCustomConvertersWithId().putAll(getCustomConvertersWithId()).             }             if (config.getMappingFiles() == null || config.getMappingFiles().size() <= 0) {                 URL url = ResourceHelper.resolveMandatoryResourceAsUrl(getCamelContext().getClassResolver(), configuration.getMappingFile()).                 config.setMappingFiles(Arrays.asList(url.toString())).             }         }         MapperFactory factory = new MapperFactory(getCamelContext(), configuration.getMappingConfiguration()).         mapper = factory.create().     } }
false;private;0;8;;private Map<String, CustomConverter> getCustomConvertersWithId() {     Map<String, CustomConverter> customConvertersWithId = new HashMap<>().     customConvertersWithId.put(CUSTOM_MAPPING_ID, customMapper).     customConvertersWithId.put(VARIABLE_MAPPING_ID, variableMapper).     customConvertersWithId.put(EXPRESSION_MAPPING_ID, expressionMapper).     return customConvertersWithId. }
