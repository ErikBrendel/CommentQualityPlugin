commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;28;;public static HttpStatusCodes checkStatus(HttpResponse response) throws ODataApplicationException {     final StatusLine statusLine = response.getStatusLine().     HttpStatusCodes httpStatusCode = HttpStatusCodes.fromStatusCode(statusLine.getStatusCode()).     if (400 <= httpStatusCode.getStatusCode() && httpStatusCode.getStatusCode() <= 599) {         if (response.getEntity() != null) {             try {                 final ContentType responseContentType = getContentTypeHeader(response).                 if (responseContentType != null && ODATA_MIME_TYPE.matcher(responseContentType.getMimeType()).matches()) {                     final ODataErrorContext errorContext = EntityProvider.readErrorDocument(response.getEntity().getContent(), responseContentType.toString()).                     throw new ODataApplicationException(errorContext.getMessage(), errorContext.getLocale(), httpStatusCode, errorContext.getErrorCode(), errorContext.getException()).                 }             } catch (EntityProviderException e) {                 throw new ODataApplicationException(e.getMessage(), response.getLocale(), httpStatusCode, e).             } catch (IOException e) {                 throw new ODataApplicationException(e.getMessage(), response.getLocale(), httpStatusCode, e).             }         }         throw new ODataApplicationException(statusLine.getReasonPhrase(), response.getLocale(), httpStatusCode).     }     return httpStatusCode. }
false;public,final;1;18;;@Override public final void completed(HttpResponse result) {     try {         // check response status         checkStatus(result).         onCompleted(result).     } catch (Exception e) {         failed(e).     } finally {         if (result instanceof Closeable) {             try {                 ((Closeable) result).close().             } catch (final IOException ignore) {             }         }     } }
false;protected,abstract;1;1;;protected abstract void onCompleted(HttpResponse result) throws ODataException, IOException.
false;public,final;1;4;;@Override public final void failed(Exception ex) {     responseHandler.onException(ex). }
false;public,final;0;4;;@Override public final void cancelled() {     responseHandler.onCanceled(). }
