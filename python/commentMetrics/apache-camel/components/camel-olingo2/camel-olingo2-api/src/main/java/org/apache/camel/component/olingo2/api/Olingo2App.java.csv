commented;modifiers;parameterAmount;loc;comment;code
true;;1;1;/**  * Sets Service base URI.  * @param serviceUri  */ ;/**  * Sets Service base URI.  * @param serviceUri  */ void setServiceUri(String serviceUri).
true;;0;1;/**  * Returns Service base URI.  * @return service base URI.  */ ;/**  * Returns Service base URI.  * @return service base URI.  */ String getServiceUri().
true;;1;1;/**  * Sets custom Http headers to add to every service request.  * @param httpHeaders custom Http headers.  */ ;/**  * Sets custom Http headers to add to every service request.  * @param httpHeaders custom Http headers.  */ void setHttpHeaders(Map<String, String> httpHeaders).
true;;0;1;/**  * Returns custom Http headers.  * @return custom Http headers.  */ ;/**  * Returns custom Http headers.  * @return custom Http headers.  */ Map<String, String> getHttpHeaders().
true;;0;1;/**  * Returns content type for service calls. Defaults to <code>application/json.charset=utf-8</code>.  * @return content type.  */ ;/**  * Returns content type for service calls. Defaults to <code>application/json.charset=utf-8</code>.  * @return content type.  */ String getContentType().
true;;1;1;/**  * Set default service call content type.  * @param contentType content type.  */ ;/**  * Set default service call content type.  * @param contentType content type.  */ void setContentType(String contentType).
true;;0;1;/**  * Closes resources.  */ ;/**  * Closes resources.  */ void close().
true;;5;3;/**  * Reads an OData resource and invokes callback with appropriate result.  * @param edm Service Edm, read from calling <code>read(null, "$metdata", null, responseHandler)</code>  * @param resourcePath OData Resource path  * @param queryParams OData query params  *                    from http://www.odata.org/documentation/odata-version-2-0/uri-conventions#SystemQueryOptions  * @param endpointHttpHeaders HTTP Headers to add/override the component versions  * @param responseHandler callback handler  */ ;/**  * Reads an OData resource and invokes callback with appropriate result.  * @param edm Service Edm, read from calling <code>read(null, "$metdata", null, responseHandler)</code>  * @param resourcePath OData Resource path  * @param queryParams OData query params  *                    from http://www.odata.org/documentation/odata-version-2-0/uri-conventions#SystemQueryOptions  * @param endpointHttpHeaders HTTP Headers to add/override the component versions  * @param responseHandler callback handler  */ <T> void read(Edm edm, String resourcePath, Map<String, String> queryParams, Map<String, String> endpointHttpHeaders, Olingo2ResponseHandler<T> responseHandler).
true;;5;3;/**  * Reads an OData resource and invokes callback with the unparsed input stream.  * @param edm Service Edm, read from calling <code>read(null, "$metdata", null, responseHandler)</code>  * @param resourcePath OData Resource path  * @param queryParams OData query params  *                    from http://www.odata.org/documentation/odata-version-2-0/uri-conventions#SystemQueryOptions  * @param endpointHttpHeaders HTTP Headers to add/override the component versions  * @param responseHandler callback handler  */ ;/**  * Reads an OData resource and invokes callback with the unparsed input stream.  * @param edm Service Edm, read from calling <code>read(null, "$metdata", null, responseHandler)</code>  * @param resourcePath OData Resource path  * @param queryParams OData query params  *                    from http://www.odata.org/documentation/odata-version-2-0/uri-conventions#SystemQueryOptions  * @param endpointHttpHeaders HTTP Headers to add/override the component versions  * @param responseHandler callback handler  */ void uread(Edm edm, String resourcePath, Map<String, String> queryParams, Map<String, String> endpointHttpHeaders, Olingo2ResponseHandler<InputStream> responseHandler).
true;;3;2;/**  * Deletes an OData resource and invokes callback  * with {@link org.apache.olingo.odata2.api.commons.HttpStatusCodes} on success, or with exception on failure.  * @param resourcePath resource path for Entry  * @param endpointHttpHeaders HTTP Headers to add/override the component versions  * @param responseHandler {@link org.apache.olingo.odata2.api.commons.HttpStatusCodes} callback handler  */ ;/**  * Deletes an OData resource and invokes callback  * with {@link org.apache.olingo.odata2.api.commons.HttpStatusCodes} on success, or with exception on failure.  * @param resourcePath resource path for Entry  * @param endpointHttpHeaders HTTP Headers to add/override the component versions  * @param responseHandler {@link org.apache.olingo.odata2.api.commons.HttpStatusCodes} callback handler  */ void delete(String resourcePath, Map<String, String> endpointHttpHeaders, Olingo2ResponseHandler<HttpStatusCodes> responseHandler).
true;;5;2;/**  * Creates a new OData resource.  * @param edm service Edm  * @param resourcePath resource path to create  * @param endpointHttpHeaders HTTP Headers to add/override the component versions  * @param data request data  * @param responseHandler callback handler  */ ;/**  * Creates a new OData resource.  * @param edm service Edm  * @param resourcePath resource path to create  * @param endpointHttpHeaders HTTP Headers to add/override the component versions  * @param data request data  * @param responseHandler callback handler  */ <T> void create(Edm edm, String resourcePath, Map<String, String> endpointHttpHeaders, Object data, Olingo2ResponseHandler<T> responseHandler).
true;;5;2;/**  * Updates an OData resource.  * @param edm service Edm  * @param resourcePath resource path to update  * @param endpointHttpHeaders HTTP Headers to add/override the component versions  * @param data updated data  * @param responseHandler {@link org.apache.olingo.odata2.api.ep.entry.ODataEntry} callback handler  */ ;/**  * Updates an OData resource.  * @param edm service Edm  * @param resourcePath resource path to update  * @param endpointHttpHeaders HTTP Headers to add/override the component versions  * @param data updated data  * @param responseHandler {@link org.apache.olingo.odata2.api.ep.entry.ODataEntry} callback handler  */ <T> void update(Edm edm, String resourcePath, Map<String, String> endpointHttpHeaders, Object data, Olingo2ResponseHandler<T> responseHandler).
true;;5;2;/**  * Patches/merges an OData resource using HTTP PATCH.  * @param edm service Edm  * @param resourcePath resource path to update  * @param endpointHttpHeaders HTTP Headers to add/override the component versions  * @param data patch/merge data  * @param responseHandler {@link org.apache.olingo.odata2.api.ep.entry.ODataEntry} callback handler  */ ;/**  * Patches/merges an OData resource using HTTP PATCH.  * @param edm service Edm  * @param resourcePath resource path to update  * @param endpointHttpHeaders HTTP Headers to add/override the component versions  * @param data patch/merge data  * @param responseHandler {@link org.apache.olingo.odata2.api.ep.entry.ODataEntry} callback handler  */ <T> void patch(Edm edm, String resourcePath, Map<String, String> endpointHttpHeaders, Object data, Olingo2ResponseHandler<T> responseHandler).
true;;5;2;/**  * Patches/merges an OData resource using HTTP MERGE.  * @param edm service Edm  * @param resourcePath resource path to update  * @param endpointHttpHeaders HTTP Headers to add/override the component versions  * @param data patch/merge data  * @param responseHandler {@link org.apache.olingo.odata2.api.ep.entry.ODataEntry} callback handler  */ ;/**  * Patches/merges an OData resource using HTTP MERGE.  * @param edm service Edm  * @param resourcePath resource path to update  * @param endpointHttpHeaders HTTP Headers to add/override the component versions  * @param data patch/merge data  * @param responseHandler {@link org.apache.olingo.odata2.api.ep.entry.ODataEntry} callback handler  */ <T> void merge(Edm edm, String resourcePath, Map<String, String> endpointHttpHeaders, Object data, Olingo2ResponseHandler<T> responseHandler).
true;;4;2;/**  * Executes a batch request.  * @param edm service Edm  * @param endpointHttpHeaders HTTP Headers to add/override the component versions  * @param data ordered {@link org.apache.camel.component.olingo2.api.batch.Olingo2BatchRequest} list  * @param responseHandler callback handler  */ ;/**  * Executes a batch request.  * @param edm service Edm  * @param endpointHttpHeaders HTTP Headers to add/override the component versions  * @param data ordered {@link org.apache.camel.component.olingo2.api.batch.Olingo2BatchRequest} list  * @param responseHandler callback handler  */ void batch(Edm edm, Map<String, String> endpointHttpHeaders, Object data, Olingo2ResponseHandler<List<Olingo2BatchResponse>> responseHandler).
