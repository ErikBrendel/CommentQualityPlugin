commented;modifiers;parameterAmount;loc;comment;code
false;public;0;23;;// Requires enterprise admin account to test @Ignore @Test public void testGetEnterpriseEvents() throws Exception {     Date before = new Date().     Date after = new Date().     after.setTime(before.getTime() - ONE_MINUTE_OF_MILLISECONDS).     final Map<String, Object> headers = new HashMap<>().     // parameter type is String     headers.put("CamelBox.position", null).     // parameter type is java.util.Date     headers.put("CamelBox.after", after).     // parameter type is java.util.Date     headers.put("CamelBox.before", before).     // parameter type is com.box.sdk.BoxEvent.Type[]     headers.put("CamelBox.types", null).     @SuppressWarnings("rawtypes")     final java.util.List result = requestBodyAndHeaders("direct://GETENTERPRISEEVENTS", null, headers).     assertNotNull("getEnterpriseEvents result", result).     LOG.debug("getEnterpriseEvents: " + result). }
false;public;0;5;;public void configure() {     // test route for getEnterpriseEvents     from("direct://GETENTERPRISEEVENTS").to("box://" + PATH_PREFIX + "/getEnterpriseEvents"). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() {             // test route for getEnterpriseEvents             from("direct://GETENTERPRISEEVENTS").to("box://" + PATH_PREFIX + "/getEnterpriseEvents").         }     }. }
