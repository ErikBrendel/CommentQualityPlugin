# id;timestamp;commentText;codeText;commentWords;codeWords
BoxGroupsManager -> public void deleteGroupMembership(String groupMembershipId);1488797924;Delete group membership.__@param groupMembershipId_- the id of group membership to delete.;public void deleteGroupMembership(String groupMembershipId) {_        try {_            LOG.debug("Deleting groupMembership(id=" + groupMembershipId + ")")__            if (groupMembershipId == null) {_                throw new IllegalArgumentException("Parameter 'groupMemebershipId' can not be null")__            }__            BoxGroupMembership groupMembership = new BoxGroupMembership(boxConnection, groupMembershipId)___            groupMembership.delete()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };delete,group,membership,param,group,membership,id,the,id,of,group,membership,to,delete;public,void,delete,group,membership,string,group,membership,id,try,log,debug,deleting,group,membership,id,group,membership,id,if,group,membership,id,null,throw,new,illegal,argument,exception,parameter,group,memebership,id,can,not,be,null,box,group,membership,group,membership,new,box,group,membership,box,connection,group,membership,id,group,membership,delete,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public void deleteGroupMembership(String groupMembershipId);1507030796;Delete group membership.__@param groupMembershipId_- the id of group membership to delete.;public void deleteGroupMembership(String groupMembershipId) {_        try {_            LOG.debug("Deleting groupMembership(id=" + groupMembershipId + ")")__            if (groupMembershipId == null) {_                throw new IllegalArgumentException("Parameter 'groupMemebershipId' can not be null")__            }__            BoxGroupMembership groupMembership = new BoxGroupMembership(boxConnection, groupMembershipId)___            groupMembership.delete()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };delete,group,membership,param,group,membership,id,the,id,of,group,membership,to,delete;public,void,delete,group,membership,string,group,membership,id,try,log,debug,deleting,group,membership,id,group,membership,id,if,group,membership,id,null,throw,new,illegal,argument,exception,parameter,group,memebership,id,can,not,be,null,box,group,membership,group,membership,new,box,group,membership,box,connection,group,membership,id,group,membership,delete,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public void deleteGroupMembership(String groupMembershipId);1507126267;Delete group membership.__@param groupMembershipId_- the id of group membership to delete.;public void deleteGroupMembership(String groupMembershipId) {_        try {_            LOG.debug("Deleting groupMembership(id=" + groupMembershipId + ")")__            if (groupMembershipId == null) {_                throw new IllegalArgumentException("Parameter 'groupMemebershipId' can not be null")__            }__            BoxGroupMembership groupMembership = new BoxGroupMembership(boxConnection, groupMembershipId)___            groupMembership.delete()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };delete,group,membership,param,group,membership,id,the,id,of,group,membership,to,delete;public,void,delete,group,membership,string,group,membership,id,try,log,debug,deleting,group,membership,id,group,membership,id,if,group,membership,id,null,throw,new,illegal,argument,exception,parameter,group,memebership,id,can,not,be,null,box,group,membership,group,membership,new,box,group,membership,box,connection,group,membership,id,group,membership,delete,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public void deleteGroupMembership(String groupMembershipId);1523968787;Delete group membership.__@param groupMembershipId_- the id of group membership to delete.;public void deleteGroupMembership(String groupMembershipId) {_        try {_            LOG.debug("Deleting groupMembership(id=" + groupMembershipId + ")")__            if (groupMembershipId == null) {_                throw new IllegalArgumentException("Parameter 'groupMemebershipId' can not be null")__            }__            BoxGroupMembership groupMembership = new BoxGroupMembership(boxConnection, groupMembershipId)___            groupMembership.delete()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };delete,group,membership,param,group,membership,id,the,id,of,group,membership,to,delete;public,void,delete,group,membership,string,group,membership,id,try,log,debug,deleting,group,membership,id,group,membership,id,if,group,membership,id,null,throw,new,illegal,argument,exception,parameter,group,memebership,id,can,not,be,null,box,group,membership,group,membership,new,box,group,membership,box,connection,group,membership,id,group,membership,delete,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public void deleteGroupMembership(String groupMembershipId);1528387875;Delete group membership.__@param groupMembershipId_- the id of group membership to delete.;public void deleteGroupMembership(String groupMembershipId) {_        try {_            LOG.debug("Deleting groupMembership(id=" + groupMembershipId + ")")__            if (groupMembershipId == null) {_                throw new IllegalArgumentException("Parameter 'groupMemebershipId' can not be null")__            }__            BoxGroupMembership groupMembership = new BoxGroupMembership(boxConnection, groupMembershipId)___            groupMembership.delete()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };delete,group,membership,param,group,membership,id,the,id,of,group,membership,to,delete;public,void,delete,group,membership,string,group,membership,id,try,log,debug,deleting,group,membership,id,group,membership,id,if,group,membership,id,null,throw,new,illegal,argument,exception,parameter,group,memebership,id,can,not,be,null,box,group,membership,group,membership,new,box,group,membership,box,connection,group,membership,id,group,membership,delete,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public void deleteGroupMembership(String groupMembershipId);1536687142;Delete group membership.__@param groupMembershipId_- the id of group membership to delete.;public void deleteGroupMembership(String groupMembershipId) {_        try {_            LOG.debug("Deleting groupMembership(id={})", groupMembershipId)__            if (groupMembershipId == null) {_                throw new IllegalArgumentException("Parameter 'groupMemebershipId' can not be null")__            }__            BoxGroupMembership groupMembership = new BoxGroupMembership(boxConnection, groupMembershipId)___            groupMembership.delete()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };delete,group,membership,param,group,membership,id,the,id,of,group,membership,to,delete;public,void,delete,group,membership,string,group,membership,id,try,log,debug,deleting,group,membership,id,group,membership,id,if,group,membership,id,null,throw,new,illegal,argument,exception,parameter,group,memebership,id,can,not,be,null,box,group,membership,group,membership,new,box,group,membership,box,connection,group,membership,id,group,membership,delete,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroupMembership.Info getGroupMembershipInfo(String groupMemebershipId);1488797924;Get group membership information.__@param groupMemebershipId_- the id of group membership._@return The group information.;public BoxGroupMembership.Info getGroupMembershipInfo(String groupMemebershipId) {_        try {_            LOG.debug("Getting info for groupMemebership(id=" + groupMemebershipId + ")")__            if (groupMemebershipId == null) {_                throw new IllegalArgumentException("Parameter 'groupMemebershipId' can not be null")__            }__            BoxGroupMembership group = new BoxGroupMembership(boxConnection, groupMemebershipId)___            return group.getInfo()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,group,membership,information,param,group,memebership,id,the,id,of,group,membership,return,the,group,information;public,box,group,membership,info,get,group,membership,info,string,group,memebership,id,try,log,debug,getting,info,for,group,memebership,id,group,memebership,id,if,group,memebership,id,null,throw,new,illegal,argument,exception,parameter,group,memebership,id,can,not,be,null,box,group,membership,group,new,box,group,membership,box,connection,group,memebership,id,return,group,get,info,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroupMembership.Info getGroupMembershipInfo(String groupMemebershipId);1507030796;Get group membership information.__@param groupMemebershipId_- the id of group membership._@return The group information.;public BoxGroupMembership.Info getGroupMembershipInfo(String groupMemebershipId) {_        try {_            LOG.debug("Getting info for groupMemebership(id=" + groupMemebershipId + ")")__            if (groupMemebershipId == null) {_                throw new IllegalArgumentException("Parameter 'groupMemebershipId' can not be null")__            }__            BoxGroupMembership group = new BoxGroupMembership(boxConnection, groupMemebershipId)___            return group.getInfo()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,group,membership,information,param,group,memebership,id,the,id,of,group,membership,return,the,group,information;public,box,group,membership,info,get,group,membership,info,string,group,memebership,id,try,log,debug,getting,info,for,group,memebership,id,group,memebership,id,if,group,memebership,id,null,throw,new,illegal,argument,exception,parameter,group,memebership,id,can,not,be,null,box,group,membership,group,new,box,group,membership,box,connection,group,memebership,id,return,group,get,info,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroupMembership.Info getGroupMembershipInfo(String groupMemebershipId);1507126267;Get group membership information.__@param groupMemebershipId_- the id of group membership._@return The group information.;public BoxGroupMembership.Info getGroupMembershipInfo(String groupMemebershipId) {_        try {_            LOG.debug("Getting info for groupMemebership(id=" + groupMemebershipId + ")")__            if (groupMemebershipId == null) {_                throw new IllegalArgumentException("Parameter 'groupMemebershipId' can not be null")__            }__            BoxGroupMembership group = new BoxGroupMembership(boxConnection, groupMemebershipId)___            return group.getInfo()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,group,membership,information,param,group,memebership,id,the,id,of,group,membership,return,the,group,information;public,box,group,membership,info,get,group,membership,info,string,group,memebership,id,try,log,debug,getting,info,for,group,memebership,id,group,memebership,id,if,group,memebership,id,null,throw,new,illegal,argument,exception,parameter,group,memebership,id,can,not,be,null,box,group,membership,group,new,box,group,membership,box,connection,group,memebership,id,return,group,get,info,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroupMembership.Info getGroupMembershipInfo(String groupMemebershipId);1523968787;Get group membership information.__@param groupMemebershipId_- the id of group membership._@return The group information.;public BoxGroupMembership.Info getGroupMembershipInfo(String groupMemebershipId) {_        try {_            LOG.debug("Getting info for groupMemebership(id=" + groupMemebershipId + ")")__            if (groupMemebershipId == null) {_                throw new IllegalArgumentException("Parameter 'groupMemebershipId' can not be null")__            }__            BoxGroupMembership group = new BoxGroupMembership(boxConnection, groupMemebershipId)___            return group.getInfo()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,group,membership,information,param,group,memebership,id,the,id,of,group,membership,return,the,group,information;public,box,group,membership,info,get,group,membership,info,string,group,memebership,id,try,log,debug,getting,info,for,group,memebership,id,group,memebership,id,if,group,memebership,id,null,throw,new,illegal,argument,exception,parameter,group,memebership,id,can,not,be,null,box,group,membership,group,new,box,group,membership,box,connection,group,memebership,id,return,group,get,info,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroupMembership.Info getGroupMembershipInfo(String groupMemebershipId);1528387875;Get group membership information.__@param groupMemebershipId_- the id of group membership._@return The group information.;public BoxGroupMembership.Info getGroupMembershipInfo(String groupMemebershipId) {_        try {_            LOG.debug("Getting info for groupMemebership(id=" + groupMemebershipId + ")")__            if (groupMemebershipId == null) {_                throw new IllegalArgumentException("Parameter 'groupMemebershipId' can not be null")__            }__            BoxGroupMembership group = new BoxGroupMembership(boxConnection, groupMemebershipId)___            return group.getInfo()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,group,membership,information,param,group,memebership,id,the,id,of,group,membership,return,the,group,information;public,box,group,membership,info,get,group,membership,info,string,group,memebership,id,try,log,debug,getting,info,for,group,memebership,id,group,memebership,id,if,group,memebership,id,null,throw,new,illegal,argument,exception,parameter,group,memebership,id,can,not,be,null,box,group,membership,group,new,box,group,membership,box,connection,group,memebership,id,return,group,get,info,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroupMembership.Info getGroupMembershipInfo(String groupMemebershipId);1536687142;Get group membership information.__@param groupMemebershipId_- the id of group membership._@return The group information.;public BoxGroupMembership.Info getGroupMembershipInfo(String groupMemebershipId) {_        try {_            LOG.debug("Getting info for groupMemebership(id={})", groupMemebershipId)__            if (groupMemebershipId == null) {_                throw new IllegalArgumentException("Parameter 'groupMemebershipId' can not be null")__            }__            BoxGroupMembership group = new BoxGroupMembership(boxConnection, groupMemebershipId)___            return group.getInfo()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,group,membership,information,param,group,memebership,id,the,id,of,group,membership,return,the,group,information;public,box,group,membership,info,get,group,membership,info,string,group,memebership,id,try,log,debug,getting,info,for,group,memebership,id,group,memebership,id,if,group,memebership,id,null,throw,new,illegal,argument,exception,parameter,group,memebership,id,can,not,be,null,box,group,membership,group,new,box,group,membership,box,connection,group,memebership,id,return,group,get,info,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroupMembership updateGroupMembershipInfo(String groupMembershipId, BoxGroupMembership.Info info);1528387875;Update group membership information.__@param groupMembershipId_- the id of group membership to update._@param info_- the updated information._@return The group information.;public BoxGroupMembership updateGroupMembershipInfo(String groupMembershipId, BoxGroupMembership.Info info) {_        try {_            LOG.debug("Updating info for groupMembership(id=" + groupMembershipId + ")")__            if (groupMembershipId == null) {_                throw new IllegalArgumentException("Parameter 'groupMembershipId' can not be null")__            }_            if (info == null) {_                throw new IllegalArgumentException("Parameter 'info' can not be null")__            }__            BoxGroupMembership groupMembership = new BoxGroupMembership(boxConnection, groupMembershipId)___            groupMembership.updateInfo(info)__            return groupMembership__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };update,group,membership,information,param,group,membership,id,the,id,of,group,membership,to,update,param,info,the,updated,information,return,the,group,information;public,box,group,membership,update,group,membership,info,string,group,membership,id,box,group,membership,info,info,try,log,debug,updating,info,for,group,membership,id,group,membership,id,if,group,membership,id,null,throw,new,illegal,argument,exception,parameter,group,membership,id,can,not,be,null,if,info,null,throw,new,illegal,argument,exception,parameter,info,can,not,be,null,box,group,membership,group,membership,new,box,group,membership,box,connection,group,membership,id,group,membership,update,info,info,return,group,membership,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroupMembership updateGroupMembershipInfo(String groupMembershipId, BoxGroupMembership.Info info);1536687142;Update group membership information.__@param groupMembershipId_- the id of group membership to update._@param info_- the updated information._@return The group information.;public BoxGroupMembership updateGroupMembershipInfo(String groupMembershipId, BoxGroupMembership.Info info) {_        try {_            LOG.debug("Updating info for groupMembership(id={})", groupMembershipId)__            if (groupMembershipId == null) {_                throw new IllegalArgumentException("Parameter 'groupMembershipId' can not be null")__            }_            if (info == null) {_                throw new IllegalArgumentException("Parameter 'info' can not be null")__            }__            BoxGroupMembership groupMembership = new BoxGroupMembership(boxConnection, groupMembershipId)___            groupMembership.updateInfo(info)__            return groupMembership__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };update,group,membership,information,param,group,membership,id,the,id,of,group,membership,to,update,param,info,the,updated,information,return,the,group,information;public,box,group,membership,update,group,membership,info,string,group,membership,id,box,group,membership,info,info,try,log,debug,updating,info,for,group,membership,id,group,membership,id,if,group,membership,id,null,throw,new,illegal,argument,exception,parameter,group,membership,id,can,not,be,null,if,info,null,throw,new,illegal,argument,exception,parameter,info,can,not,be,null,box,group,membership,group,membership,new,box,group,membership,box,connection,group,membership,id,group,membership,update,info,info,return,group,membership,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroupsManager(BoxAPIConnection boxConnection);1488797924;Create groups manager to manage the users of Box connection's_authenticated user.__@param boxConnection_- Box connection to authenticated user account.;public BoxGroupsManager(BoxAPIConnection boxConnection) {_        this.boxConnection = boxConnection__    };create,groups,manager,to,manage,the,users,of,box,connection,s,authenticated,user,param,box,connection,box,connection,to,authenticated,user,account;public,box,groups,manager,box,apiconnection,box,connection,this,box,connection,box,connection
BoxGroupsManager -> public BoxGroupsManager(BoxAPIConnection boxConnection);1507030796;Create groups manager to manage the users of Box connection's_authenticated user.__@param boxConnection_- Box connection to authenticated user account.;public BoxGroupsManager(BoxAPIConnection boxConnection) {_        this.boxConnection = boxConnection__    };create,groups,manager,to,manage,the,users,of,box,connection,s,authenticated,user,param,box,connection,box,connection,to,authenticated,user,account;public,box,groups,manager,box,apiconnection,box,connection,this,box,connection,box,connection
BoxGroupsManager -> public BoxGroupsManager(BoxAPIConnection boxConnection);1507126267;Create groups manager to manage the users of Box connection's_authenticated user.__@param boxConnection_- Box connection to authenticated user account.;public BoxGroupsManager(BoxAPIConnection boxConnection) {_        this.boxConnection = boxConnection__    };create,groups,manager,to,manage,the,users,of,box,connection,s,authenticated,user,param,box,connection,box,connection,to,authenticated,user,account;public,box,groups,manager,box,apiconnection,box,connection,this,box,connection,box,connection
BoxGroupsManager -> public BoxGroupsManager(BoxAPIConnection boxConnection);1523968787;Create groups manager to manage the users of Box connection's_authenticated user.__@param boxConnection_- Box connection to authenticated user account.;public BoxGroupsManager(BoxAPIConnection boxConnection) {_        this.boxConnection = boxConnection__    };create,groups,manager,to,manage,the,users,of,box,connection,s,authenticated,user,param,box,connection,box,connection,to,authenticated,user,account;public,box,groups,manager,box,apiconnection,box,connection,this,box,connection,box,connection
BoxGroupsManager -> public BoxGroupsManager(BoxAPIConnection boxConnection);1528387875;Create groups manager to manage the users of Box connection's_authenticated user.__@param boxConnection_- Box connection to authenticated user account.;public BoxGroupsManager(BoxAPIConnection boxConnection) {_        this.boxConnection = boxConnection__    };create,groups,manager,to,manage,the,users,of,box,connection,s,authenticated,user,param,box,connection,box,connection,to,authenticated,user,account;public,box,groups,manager,box,apiconnection,box,connection,this,box,connection,box,connection
BoxGroupsManager -> public BoxGroupsManager(BoxAPIConnection boxConnection);1536687142;Create groups manager to manage the users of Box connection's_authenticated user.__@param boxConnection_- Box connection to authenticated user account.;public BoxGroupsManager(BoxAPIConnection boxConnection) {_        this.boxConnection = boxConnection__    };create,groups,manager,to,manage,the,users,of,box,connection,s,authenticated,user,param,box,connection,box,connection,to,authenticated,user,account;public,box,groups,manager,box,apiconnection,box,connection,this,box,connection,box,connection
BoxGroupsManager -> public BoxGroup createGroup(String name);1488797924;Create a new group with a specified name.__@param name_- the name of the new group._@return The newly created group.;public BoxGroup createGroup(String name) {_        try {_            LOG.debug("Creating group name=" + name)__            if (name == null) {_                throw new IllegalArgumentException("Parameter 'name' can not be null")__            }__            return BoxGroup.createGroup(boxConnection, name).getResource()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };create,a,new,group,with,a,specified,name,param,name,the,name,of,the,new,group,return,the,newly,created,group;public,box,group,create,group,string,name,try,log,debug,creating,group,name,name,if,name,null,throw,new,illegal,argument,exception,parameter,name,can,not,be,null,return,box,group,create,group,box,connection,name,get,resource,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroup createGroup(String name);1507030796;Create a new group with a specified name.__@param name_- the name of the new group._@return The newly created group.;public BoxGroup createGroup(String name) {_        try {_            LOG.debug("Creating group name=" + name)__            if (name == null) {_                throw new IllegalArgumentException("Parameter 'name' can not be null")__            }__            return BoxGroup.createGroup(boxConnection, name).getResource()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };create,a,new,group,with,a,specified,name,param,name,the,name,of,the,new,group,return,the,newly,created,group;public,box,group,create,group,string,name,try,log,debug,creating,group,name,name,if,name,null,throw,new,illegal,argument,exception,parameter,name,can,not,be,null,return,box,group,create,group,box,connection,name,get,resource,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroup.Info getGroupInfo(String groupId);1488797924;Get group information.__@param groupId_- the id of group._@return The group information.;public BoxGroup.Info getGroupInfo(String groupId) {_        try {_            LOG.debug("Getting info for group(id=" + groupId + ")")__            if (groupId == null) {_                throw new IllegalArgumentException("Parameter 'groupId' can not be null")__            }__            BoxGroup group = new BoxGroup(boxConnection, groupId)___            return group.getInfo()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,group,information,param,group,id,the,id,of,group,return,the,group,information;public,box,group,info,get,group,info,string,group,id,try,log,debug,getting,info,for,group,id,group,id,if,group,id,null,throw,new,illegal,argument,exception,parameter,group,id,can,not,be,null,box,group,group,new,box,group,box,connection,group,id,return,group,get,info,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroup.Info getGroupInfo(String groupId);1507030796;Get group information.__@param groupId_- the id of group._@return The group information.;public BoxGroup.Info getGroupInfo(String groupId) {_        try {_            LOG.debug("Getting info for group(id=" + groupId + ")")__            if (groupId == null) {_                throw new IllegalArgumentException("Parameter 'groupId' can not be null")__            }__            BoxGroup group = new BoxGroup(boxConnection, groupId)___            return group.getInfo()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,group,information,param,group,id,the,id,of,group,return,the,group,information;public,box,group,info,get,group,info,string,group,id,try,log,debug,getting,info,for,group,id,group,id,if,group,id,null,throw,new,illegal,argument,exception,parameter,group,id,can,not,be,null,box,group,group,new,box,group,box,connection,group,id,return,group,get,info,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroup.Info getGroupInfo(String groupId);1507126267;Get group information.__@param groupId_- the id of group._@return The group information.;public BoxGroup.Info getGroupInfo(String groupId) {_        try {_            LOG.debug("Getting info for group(id=" + groupId + ")")__            if (groupId == null) {_                throw new IllegalArgumentException("Parameter 'groupId' can not be null")__            }__            BoxGroup group = new BoxGroup(boxConnection, groupId)___            return group.getInfo()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,group,information,param,group,id,the,id,of,group,return,the,group,information;public,box,group,info,get,group,info,string,group,id,try,log,debug,getting,info,for,group,id,group,id,if,group,id,null,throw,new,illegal,argument,exception,parameter,group,id,can,not,be,null,box,group,group,new,box,group,box,connection,group,id,return,group,get,info,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroup.Info getGroupInfo(String groupId);1523968787;Get group information.__@param groupId_- the id of group._@return The group information.;public BoxGroup.Info getGroupInfo(String groupId) {_        try {_            LOG.debug("Getting info for group(id=" + groupId + ")")__            if (groupId == null) {_                throw new IllegalArgumentException("Parameter 'groupId' can not be null")__            }__            BoxGroup group = new BoxGroup(boxConnection, groupId)___            return group.getInfo()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,group,information,param,group,id,the,id,of,group,return,the,group,information;public,box,group,info,get,group,info,string,group,id,try,log,debug,getting,info,for,group,id,group,id,if,group,id,null,throw,new,illegal,argument,exception,parameter,group,id,can,not,be,null,box,group,group,new,box,group,box,connection,group,id,return,group,get,info,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroup.Info getGroupInfo(String groupId);1528387875;Get group information.__@param groupId_- the id of group._@return The group information.;public BoxGroup.Info getGroupInfo(String groupId) {_        try {_            LOG.debug("Getting info for group(id=" + groupId + ")")__            if (groupId == null) {_                throw new IllegalArgumentException("Parameter 'groupId' can not be null")__            }__            BoxGroup group = new BoxGroup(boxConnection, groupId)___            return group.getInfo()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,group,information,param,group,id,the,id,of,group,return,the,group,information;public,box,group,info,get,group,info,string,group,id,try,log,debug,getting,info,for,group,id,group,id,if,group,id,null,throw,new,illegal,argument,exception,parameter,group,id,can,not,be,null,box,group,group,new,box,group,box,connection,group,id,return,group,get,info,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroup.Info getGroupInfo(String groupId);1536687142;Get group information.__@param groupId_- the id of group._@return The group information.;public BoxGroup.Info getGroupInfo(String groupId) {_        try {_            LOG.debug("Getting info for group(id={})", groupId)__            if (groupId == null) {_                throw new IllegalArgumentException("Parameter 'groupId' can not be null")__            }__            BoxGroup group = new BoxGroup(boxConnection, groupId)___            return group.getInfo()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,group,information,param,group,id,the,id,of,group,return,the,group,information;public,box,group,info,get,group,info,string,group,id,try,log,debug,getting,info,for,group,id,group,id,if,group,id,null,throw,new,illegal,argument,exception,parameter,group,id,can,not,be,null,box,group,group,new,box,group,box,connection,group,id,return,group,get,info,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroup updateGroupInfo(String groupId, BoxGroup.Info groupInfo);1507030796;Update group information.__@param groupId_- the id of group to update._@param groupInfo_- the updated information_@return The updated group.;public BoxGroup updateGroupInfo(String groupId, BoxGroup.Info groupInfo) {_        try {_            LOG.debug("Updating info for group(id=" + groupId + ")")__            if (groupId == null) {_                throw new IllegalArgumentException("Parameter 'groupId' can not be null")__            }_            if (groupInfo == null) {_                throw new IllegalArgumentException("Parameter 'groupInfo' can not be null")__            }__            BoxGroup group = new BoxGroup(boxConnection, groupId)__            group.updateInfo(groupInfo)__            return group__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };update,group,information,param,group,id,the,id,of,group,to,update,param,group,info,the,updated,information,return,the,updated,group;public,box,group,update,group,info,string,group,id,box,group,info,group,info,try,log,debug,updating,info,for,group,id,group,id,if,group,id,null,throw,new,illegal,argument,exception,parameter,group,id,can,not,be,null,if,group,info,null,throw,new,illegal,argument,exception,parameter,group,info,can,not,be,null,box,group,group,new,box,group,box,connection,group,id,group,update,info,group,info,return,group,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroup updateGroupInfo(String groupId, BoxGroup.Info groupInfo);1507126267;Update group information.__@param groupId_- the id of group to update._@param groupInfo_- the updated information_@return The updated group.;public BoxGroup updateGroupInfo(String groupId, BoxGroup.Info groupInfo) {_        try {_            LOG.debug("Updating info for group(id=" + groupId + ")")__            if (groupId == null) {_                throw new IllegalArgumentException("Parameter 'groupId' can not be null")__            }_            if (groupInfo == null) {_                throw new IllegalArgumentException("Parameter 'groupInfo' can not be null")__            }__            BoxGroup group = new BoxGroup(boxConnection, groupId)__            group.updateInfo(groupInfo)__            return group__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };update,group,information,param,group,id,the,id,of,group,to,update,param,group,info,the,updated,information,return,the,updated,group;public,box,group,update,group,info,string,group,id,box,group,info,group,info,try,log,debug,updating,info,for,group,id,group,id,if,group,id,null,throw,new,illegal,argument,exception,parameter,group,id,can,not,be,null,if,group,info,null,throw,new,illegal,argument,exception,parameter,group,info,can,not,be,null,box,group,group,new,box,group,box,connection,group,id,group,update,info,group,info,return,group,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroup updateGroupInfo(String groupId, BoxGroup.Info groupInfo);1523968787;Update group information.__@param groupId_- the id of group to update._@param groupInfo_- the updated information_@return The updated group.;public BoxGroup updateGroupInfo(String groupId, BoxGroup.Info groupInfo) {_        try {_            LOG.debug("Updating info for group(id=" + groupId + ")")__            if (groupId == null) {_                throw new IllegalArgumentException("Parameter 'groupId' can not be null")__            }_            if (groupInfo == null) {_                throw new IllegalArgumentException("Parameter 'groupInfo' can not be null")__            }__            BoxGroup group = new BoxGroup(boxConnection, groupId)__            group.updateInfo(groupInfo)__            return group__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };update,group,information,param,group,id,the,id,of,group,to,update,param,group,info,the,updated,information,return,the,updated,group;public,box,group,update,group,info,string,group,id,box,group,info,group,info,try,log,debug,updating,info,for,group,id,group,id,if,group,id,null,throw,new,illegal,argument,exception,parameter,group,id,can,not,be,null,if,group,info,null,throw,new,illegal,argument,exception,parameter,group,info,can,not,be,null,box,group,group,new,box,group,box,connection,group,id,group,update,info,group,info,return,group,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroup updateGroupInfo(String groupId, BoxGroup.Info groupInfo);1528387875;Update group information.__@param groupId_- the id of group to update._@param groupInfo_- the updated information_@return The updated group.;public BoxGroup updateGroupInfo(String groupId, BoxGroup.Info groupInfo) {_        try {_            LOG.debug("Updating info for group(id=" + groupId + ")")__            if (groupId == null) {_                throw new IllegalArgumentException("Parameter 'groupId' can not be null")__            }_            if (groupInfo == null) {_                throw new IllegalArgumentException("Parameter 'groupInfo' can not be null")__            }__            BoxGroup group = new BoxGroup(boxConnection, groupId)__            group.updateInfo(groupInfo)__            return group__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };update,group,information,param,group,id,the,id,of,group,to,update,param,group,info,the,updated,information,return,the,updated,group;public,box,group,update,group,info,string,group,id,box,group,info,group,info,try,log,debug,updating,info,for,group,id,group,id,if,group,id,null,throw,new,illegal,argument,exception,parameter,group,id,can,not,be,null,if,group,info,null,throw,new,illegal,argument,exception,parameter,group,info,can,not,be,null,box,group,group,new,box,group,box,connection,group,id,group,update,info,group,info,return,group,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroup updateGroupInfo(String groupId, BoxGroup.Info groupInfo);1536687142;Update group information.__@param groupId_- the id of group to update._@param groupInfo_- the updated information_@return The updated group.;public BoxGroup updateGroupInfo(String groupId, BoxGroup.Info groupInfo) {_        try {_            LOG.debug("Updating info for group(id={})", groupId)__            if (groupId == null) {_                throw new IllegalArgumentException("Parameter 'groupId' can not be null")__            }_            if (groupInfo == null) {_                throw new IllegalArgumentException("Parameter 'groupInfo' can not be null")__            }__            BoxGroup group = new BoxGroup(boxConnection, groupId)__            group.updateInfo(groupInfo)__            return group__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };update,group,information,param,group,id,the,id,of,group,to,update,param,group,info,the,updated,information,return,the,updated,group;public,box,group,update,group,info,string,group,id,box,group,info,group,info,try,log,debug,updating,info,for,group,id,group,id,if,group,id,null,throw,new,illegal,argument,exception,parameter,group,id,can,not,be,null,if,group,info,null,throw,new,illegal,argument,exception,parameter,group,info,can,not,be,null,box,group,group,new,box,group,box,connection,group,id,group,update,info,group,info,return,group,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public Collection<BoxGroup> getAllGroups();1488797924;Get all the groups in the enterprise.__@return Collection containing all the enterprise's groups.;public Collection<BoxGroup> getAllGroups() {_        try {_            LOG.debug("Getting all groups")___            Collection<BoxGroup> groups = new ArrayList<BoxGroup>()__            for (BoxGroup.Info groupInfo : BoxGroup.getAllGroups(boxConnection)) {_                groups.add(groupInfo.getResource())__            }_            return groups__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,all,the,groups,in,the,enterprise,return,collection,containing,all,the,enterprise,s,groups;public,collection,box,group,get,all,groups,try,log,debug,getting,all,groups,collection,box,group,groups,new,array,list,box,group,for,box,group,info,group,info,box,group,get,all,groups,box,connection,groups,add,group,info,get,resource,return,groups,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public Collection<BoxGroup> getAllGroups();1507030796;Get all the groups in the enterprise.__@return Collection containing all the enterprise's groups.;public Collection<BoxGroup> getAllGroups() {_        try {_            LOG.debug("Getting all groups")___            Collection<BoxGroup> groups = new ArrayList<BoxGroup>()__            for (BoxGroup.Info groupInfo : BoxGroup.getAllGroups(boxConnection)) {_                groups.add(groupInfo.getResource())__            }_            return groups__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,all,the,groups,in,the,enterprise,return,collection,containing,all,the,enterprise,s,groups;public,collection,box,group,get,all,groups,try,log,debug,getting,all,groups,collection,box,group,groups,new,array,list,box,group,for,box,group,info,group,info,box,group,get,all,groups,box,connection,groups,add,group,info,get,resource,return,groups,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public Collection<BoxGroup> getAllGroups();1507126267;Get all the groups in the enterprise.__@return Collection containing all the enterprise's groups.;public Collection<BoxGroup> getAllGroups() {_        try {_            LOG.debug("Getting all groups")___            Collection<BoxGroup> groups = new ArrayList<BoxGroup>()__            for (BoxGroup.Info groupInfo : BoxGroup.getAllGroups(boxConnection)) {_                groups.add(groupInfo.getResource())__            }_            return groups__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,all,the,groups,in,the,enterprise,return,collection,containing,all,the,enterprise,s,groups;public,collection,box,group,get,all,groups,try,log,debug,getting,all,groups,collection,box,group,groups,new,array,list,box,group,for,box,group,info,group,info,box,group,get,all,groups,box,connection,groups,add,group,info,get,resource,return,groups,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public Collection<BoxGroup> getAllGroups();1523968787;Get all the groups in the enterprise.__@return Collection containing all the enterprise's groups.;public Collection<BoxGroup> getAllGroups() {_        try {_            LOG.debug("Getting all groups")___            Collection<BoxGroup> groups = new ArrayList<>()__            for (BoxGroup.Info groupInfo : BoxGroup.getAllGroups(boxConnection)) {_                groups.add(groupInfo.getResource())__            }_            return groups__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,all,the,groups,in,the,enterprise,return,collection,containing,all,the,enterprise,s,groups;public,collection,box,group,get,all,groups,try,log,debug,getting,all,groups,collection,box,group,groups,new,array,list,for,box,group,info,group,info,box,group,get,all,groups,box,connection,groups,add,group,info,get,resource,return,groups,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public Collection<BoxGroup> getAllGroups();1528387875;Get all the groups in the enterprise.__@return Collection containing all the enterprise's groups.;public Collection<BoxGroup> getAllGroups() {_        try {_            LOG.debug("Getting all groups")___            Collection<BoxGroup> groups = new ArrayList<>()__            for (BoxGroup.Info groupInfo : BoxGroup.getAllGroups(boxConnection)) {_                groups.add(groupInfo.getResource())__            }_            return groups__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,all,the,groups,in,the,enterprise,return,collection,containing,all,the,enterprise,s,groups;public,collection,box,group,get,all,groups,try,log,debug,getting,all,groups,collection,box,group,groups,new,array,list,for,box,group,info,group,info,box,group,get,all,groups,box,connection,groups,add,group,info,get,resource,return,groups,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public Collection<BoxGroup> getAllGroups();1536687142;Get all the groups in the enterprise.__@return Collection containing all the enterprise's groups.;public Collection<BoxGroup> getAllGroups() {_        try {_            LOG.debug("Getting all groups")___            Collection<BoxGroup> groups = new ArrayList<>()__            for (BoxGroup.Info groupInfo : BoxGroup.getAllGroups(boxConnection)) {_                groups.add(groupInfo.getResource())__            }_            return groups__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,all,the,groups,in,the,enterprise,return,collection,containing,all,the,enterprise,s,groups;public,collection,box,group,get,all,groups,try,log,debug,getting,all,groups,collection,box,group,groups,new,array,list,for,box,group,info,group,info,box,group,get,all,groups,box,connection,groups,add,group,info,get,resource,return,groups,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public Collection<BoxGroupMembership.Info> getGroupMemberships(String groupId);1488797924;Get information about all of the group memberships for this group.__@param groupId_- the id of group._@return The group information.;public Collection<BoxGroupMembership.Info> getGroupMemberships(String groupId) {_        try {_            LOG.debug("Getting information about all memberships for group(id=" + groupId + ")")__            if (groupId == null) {_                throw new IllegalArgumentException("Parameter 'groupId' can not be null")__            }__            BoxGroup group = new BoxGroup(boxConnection, groupId)___            return group.getMemberships()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,information,about,all,of,the,group,memberships,for,this,group,param,group,id,the,id,of,group,return,the,group,information;public,collection,box,group,membership,info,get,group,memberships,string,group,id,try,log,debug,getting,information,about,all,memberships,for,group,id,group,id,if,group,id,null,throw,new,illegal,argument,exception,parameter,group,id,can,not,be,null,box,group,group,new,box,group,box,connection,group,id,return,group,get,memberships,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public Collection<BoxGroupMembership.Info> getGroupMemberships(String groupId);1507030796;Get information about all of the group memberships for this group.__@param groupId_- the id of group._@return The group information.;public Collection<BoxGroupMembership.Info> getGroupMemberships(String groupId) {_        try {_            LOG.debug("Getting information about all memberships for group(id=" + groupId + ")")__            if (groupId == null) {_                throw new IllegalArgumentException("Parameter 'groupId' can not be null")__            }__            BoxGroup group = new BoxGroup(boxConnection, groupId)___            return group.getMemberships()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,information,about,all,of,the,group,memberships,for,this,group,param,group,id,the,id,of,group,return,the,group,information;public,collection,box,group,membership,info,get,group,memberships,string,group,id,try,log,debug,getting,information,about,all,memberships,for,group,id,group,id,if,group,id,null,throw,new,illegal,argument,exception,parameter,group,id,can,not,be,null,box,group,group,new,box,group,box,connection,group,id,return,group,get,memberships,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public Collection<BoxGroupMembership.Info> getGroupMemberships(String groupId);1507126267;Get information about all of the group memberships for this group.__@param groupId_- the id of group._@return The group information.;public Collection<BoxGroupMembership.Info> getGroupMemberships(String groupId) {_        try {_            LOG.debug("Getting information about all memberships for group(id=" + groupId + ")")__            if (groupId == null) {_                throw new IllegalArgumentException("Parameter 'groupId' can not be null")__            }__            BoxGroup group = new BoxGroup(boxConnection, groupId)___            return group.getMemberships()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,information,about,all,of,the,group,memberships,for,this,group,param,group,id,the,id,of,group,return,the,group,information;public,collection,box,group,membership,info,get,group,memberships,string,group,id,try,log,debug,getting,information,about,all,memberships,for,group,id,group,id,if,group,id,null,throw,new,illegal,argument,exception,parameter,group,id,can,not,be,null,box,group,group,new,box,group,box,connection,group,id,return,group,get,memberships,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public Collection<BoxGroupMembership.Info> getGroupMemberships(String groupId);1523968787;Get information about all of the group memberships for this group.__@param groupId_- the id of group._@return The group information.;public Collection<BoxGroupMembership.Info> getGroupMemberships(String groupId) {_        try {_            LOG.debug("Getting information about all memberships for group(id=" + groupId + ")")__            if (groupId == null) {_                throw new IllegalArgumentException("Parameter 'groupId' can not be null")__            }__            BoxGroup group = new BoxGroup(boxConnection, groupId)___            return group.getMemberships()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,information,about,all,of,the,group,memberships,for,this,group,param,group,id,the,id,of,group,return,the,group,information;public,collection,box,group,membership,info,get,group,memberships,string,group,id,try,log,debug,getting,information,about,all,memberships,for,group,id,group,id,if,group,id,null,throw,new,illegal,argument,exception,parameter,group,id,can,not,be,null,box,group,group,new,box,group,box,connection,group,id,return,group,get,memberships,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public Collection<BoxGroupMembership.Info> getGroupMemberships(String groupId);1528387875;Get information about all of the group memberships for this group.__@param groupId_- the id of group._@return The group information.;public Collection<BoxGroupMembership.Info> getGroupMemberships(String groupId) {_        try {_            LOG.debug("Getting information about all memberships for group(id=" + groupId + ")")__            if (groupId == null) {_                throw new IllegalArgumentException("Parameter 'groupId' can not be null")__            }__            BoxGroup group = new BoxGroup(boxConnection, groupId)___            return group.getMemberships()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,information,about,all,of,the,group,memberships,for,this,group,param,group,id,the,id,of,group,return,the,group,information;public,collection,box,group,membership,info,get,group,memberships,string,group,id,try,log,debug,getting,information,about,all,memberships,for,group,id,group,id,if,group,id,null,throw,new,illegal,argument,exception,parameter,group,id,can,not,be,null,box,group,group,new,box,group,box,connection,group,id,return,group,get,memberships,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public Collection<BoxGroupMembership.Info> getGroupMemberships(String groupId);1536687142;Get information about all of the group memberships for this group.__@param groupId_- the id of group._@return The group information.;public Collection<BoxGroupMembership.Info> getGroupMemberships(String groupId) {_        try {_            LOG.debug("Getting information about all memberships for group(id={})", groupId)__            if (groupId == null) {_                throw new IllegalArgumentException("Parameter 'groupId' can not be null")__            }__            BoxGroup group = new BoxGroup(boxConnection, groupId)___            return group.getMemberships()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,information,about,all,of,the,group,memberships,for,this,group,param,group,id,the,id,of,group,return,the,group,information;public,collection,box,group,membership,info,get,group,memberships,string,group,id,try,log,debug,getting,information,about,all,memberships,for,group,id,group,id,if,group,id,null,throw,new,illegal,argument,exception,parameter,group,id,can,not,be,null,box,group,group,new,box,group,box,connection,group,id,return,group,get,memberships,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroup createGroup(String name, String provenance,         String externalSyncIdentifier, String description,         String invitabilityLevel, String memberViewabilityLevel);1507126267;Create a new group with a specified name and optional additional parameters._Optional parameters may be null.__@param name_- the name of the new group._@param provenance_- the provenance of the new group._@param externalSyncIdentifier_- the external_sync_identifier of the new group._@param description_- the description of the new group._@param invitabilityLevel_- the invitibility_level of the new group._@param memberViewabilityLevel_- the member_viewability_level of the new group._@return The newly created group.;public BoxGroup createGroup(String name, String provenance,_        String externalSyncIdentifier, String description,_        String invitabilityLevel, String memberViewabilityLevel) {__        try {_            LOG.debug("Creating group name=" + name)__            if (name == null) {_                throw new IllegalArgumentException("Parameter 'name' can not be null")__            }__            return BoxGroup.createGroup(boxConnection, name, provenance, externalSyncIdentifier, description,_                invitabilityLevel, memberViewabilityLevel).getResource()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };create,a,new,group,with,a,specified,name,and,optional,additional,parameters,optional,parameters,may,be,null,param,name,the,name,of,the,new,group,param,provenance,the,provenance,of,the,new,group,param,external,sync,identifier,the,of,the,new,group,param,description,the,description,of,the,new,group,param,invitability,level,the,of,the,new,group,param,member,viewability,level,the,of,the,new,group,return,the,newly,created,group;public,box,group,create,group,string,name,string,provenance,string,external,sync,identifier,string,description,string,invitability,level,string,member,viewability,level,try,log,debug,creating,group,name,name,if,name,null,throw,new,illegal,argument,exception,parameter,name,can,not,be,null,return,box,group,create,group,box,connection,name,provenance,external,sync,identifier,description,invitability,level,member,viewability,level,get,resource,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroup createGroup(String name, String provenance,         String externalSyncIdentifier, String description,         String invitabilityLevel, String memberViewabilityLevel);1523968787;Create a new group with a specified name and optional additional parameters._Optional parameters may be null.__@param name_- the name of the new group._@param provenance_- the provenance of the new group._@param externalSyncIdentifier_- the external_sync_identifier of the new group._@param description_- the description of the new group._@param invitabilityLevel_- the invitibility_level of the new group._@param memberViewabilityLevel_- the member_viewability_level of the new group._@return The newly created group.;public BoxGroup createGroup(String name, String provenance,_        String externalSyncIdentifier, String description,_        String invitabilityLevel, String memberViewabilityLevel) {__        try {_            LOG.debug("Creating group name=" + name)__            if (name == null) {_                throw new IllegalArgumentException("Parameter 'name' can not be null")__            }__            return BoxGroup.createGroup(boxConnection, name, provenance, externalSyncIdentifier, description,_                invitabilityLevel, memberViewabilityLevel).getResource()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };create,a,new,group,with,a,specified,name,and,optional,additional,parameters,optional,parameters,may,be,null,param,name,the,name,of,the,new,group,param,provenance,the,provenance,of,the,new,group,param,external,sync,identifier,the,of,the,new,group,param,description,the,description,of,the,new,group,param,invitability,level,the,of,the,new,group,param,member,viewability,level,the,of,the,new,group,return,the,newly,created,group;public,box,group,create,group,string,name,string,provenance,string,external,sync,identifier,string,description,string,invitability,level,string,member,viewability,level,try,log,debug,creating,group,name,name,if,name,null,throw,new,illegal,argument,exception,parameter,name,can,not,be,null,return,box,group,create,group,box,connection,name,provenance,external,sync,identifier,description,invitability,level,member,viewability,level,get,resource,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroup createGroup(String name, String provenance,         String externalSyncIdentifier, String description,         String invitabilityLevel, String memberViewabilityLevel);1528387875;Create a new group with a specified name and optional additional parameters._Optional parameters may be null.__@param name_- the name of the new group._@param provenance_- the provenance of the new group._@param externalSyncIdentifier_- the external_sync_identifier of the new group._@param description_- the description of the new group._@param invitabilityLevel_- the invitibility_level of the new group._@param memberViewabilityLevel_- the member_viewability_level of the new group._@return The newly created group.;public BoxGroup createGroup(String name, String provenance,_        String externalSyncIdentifier, String description,_        String invitabilityLevel, String memberViewabilityLevel) {__        try {_            LOG.debug("Creating group name=" + name)__            if (name == null) {_                throw new IllegalArgumentException("Parameter 'name' can not be null")__            }__            return BoxGroup.createGroup(boxConnection, name, provenance, externalSyncIdentifier, description,_                invitabilityLevel, memberViewabilityLevel).getResource()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };create,a,new,group,with,a,specified,name,and,optional,additional,parameters,optional,parameters,may,be,null,param,name,the,name,of,the,new,group,param,provenance,the,provenance,of,the,new,group,param,external,sync,identifier,the,of,the,new,group,param,description,the,description,of,the,new,group,param,invitability,level,the,of,the,new,group,param,member,viewability,level,the,of,the,new,group,return,the,newly,created,group;public,box,group,create,group,string,name,string,provenance,string,external,sync,identifier,string,description,string,invitability,level,string,member,viewability,level,try,log,debug,creating,group,name,name,if,name,null,throw,new,illegal,argument,exception,parameter,name,can,not,be,null,return,box,group,create,group,box,connection,name,provenance,external,sync,identifier,description,invitability,level,member,viewability,level,get,resource,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroup createGroup(String name, String provenance,         String externalSyncIdentifier, String description,         String invitabilityLevel, String memberViewabilityLevel);1536687142;Create a new group with a specified name and optional additional parameters._Optional parameters may be null.__@param name_- the name of the new group._@param provenance_- the provenance of the new group._@param externalSyncIdentifier_- the external_sync_identifier of the new group._@param description_- the description of the new group._@param invitabilityLevel_- the invitibility_level of the new group._@param memberViewabilityLevel_- the member_viewability_level of the new group._@return The newly created group.;public BoxGroup createGroup(String name, String provenance,_        String externalSyncIdentifier, String description,_        String invitabilityLevel, String memberViewabilityLevel) {__        try {_            LOG.debug("Creating group name={}", name)__            if (name == null) {_                throw new IllegalArgumentException("Parameter 'name' can not be null")__            }__            return BoxGroup.createGroup(boxConnection, name, provenance, externalSyncIdentifier, description,_                invitabilityLevel, memberViewabilityLevel).getResource()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };create,a,new,group,with,a,specified,name,and,optional,additional,parameters,optional,parameters,may,be,null,param,name,the,name,of,the,new,group,param,provenance,the,provenance,of,the,new,group,param,external,sync,identifier,the,of,the,new,group,param,description,the,description,of,the,new,group,param,invitability,level,the,of,the,new,group,param,member,viewability,level,the,of,the,new,group,return,the,newly,created,group;public,box,group,create,group,string,name,string,provenance,string,external,sync,identifier,string,description,string,invitability,level,string,member,viewability,level,try,log,debug,creating,group,name,name,if,name,null,throw,new,illegal,argument,exception,parameter,name,can,not,be,null,return,box,group,create,group,box,connection,name,provenance,external,sync,identifier,description,invitability,level,member,viewability,level,get,resource,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroupMembership updateGroupMembershipInfo(String groupMemebershipId, BoxGroupMembership.Info info);1488797924;Update group membership information.__@param groupMembershipId_- the id of group membership to update._@param info_- the updated information._@return The group information.;public BoxGroupMembership updateGroupMembershipInfo(String groupMemebershipId, BoxGroupMembership.Info info) {_        try {_            LOG.debug("Updating info for groupMembership(id=" + groupMemebershipId + ")")__            if (groupMemebershipId == null) {_                throw new IllegalArgumentException("Parameter 'groupMemebershipId' can not be null")__            }_            if (info == null) {_                throw new IllegalArgumentException("Parameter 'info' can not be null")__            }__            BoxGroupMembership groupMembership = new BoxGroupMembership(boxConnection, groupMemebershipId)___            groupMembership.updateInfo(info)__            return groupMembership__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };update,group,membership,information,param,group,membership,id,the,id,of,group,membership,to,update,param,info,the,updated,information,return,the,group,information;public,box,group,membership,update,group,membership,info,string,group,memebership,id,box,group,membership,info,info,try,log,debug,updating,info,for,group,membership,id,group,memebership,id,if,group,memebership,id,null,throw,new,illegal,argument,exception,parameter,group,memebership,id,can,not,be,null,if,info,null,throw,new,illegal,argument,exception,parameter,info,can,not,be,null,box,group,membership,group,membership,new,box,group,membership,box,connection,group,memebership,id,group,membership,update,info,info,return,group,membership,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroupMembership updateGroupMembershipInfo(String groupMemebershipId, BoxGroupMembership.Info info);1507030796;Update group membership information.__@param groupMembershipId_- the id of group membership to update._@param info_- the updated information._@return The group information.;public BoxGroupMembership updateGroupMembershipInfo(String groupMemebershipId, BoxGroupMembership.Info info) {_        try {_            LOG.debug("Updating info for groupMembership(id=" + groupMemebershipId + ")")__            if (groupMemebershipId == null) {_                throw new IllegalArgumentException("Parameter 'groupMemebershipId' can not be null")__            }_            if (info == null) {_                throw new IllegalArgumentException("Parameter 'info' can not be null")__            }__            BoxGroupMembership groupMembership = new BoxGroupMembership(boxConnection, groupMemebershipId)___            groupMembership.updateInfo(info)__            return groupMembership__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };update,group,membership,information,param,group,membership,id,the,id,of,group,membership,to,update,param,info,the,updated,information,return,the,group,information;public,box,group,membership,update,group,membership,info,string,group,memebership,id,box,group,membership,info,info,try,log,debug,updating,info,for,group,membership,id,group,memebership,id,if,group,memebership,id,null,throw,new,illegal,argument,exception,parameter,group,memebership,id,can,not,be,null,if,info,null,throw,new,illegal,argument,exception,parameter,info,can,not,be,null,box,group,membership,group,membership,new,box,group,membership,box,connection,group,memebership,id,group,membership,update,info,info,return,group,membership,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroupMembership updateGroupMembershipInfo(String groupMemebershipId, BoxGroupMembership.Info info);1507126267;Update group membership information.__@param groupMembershipId_- the id of group membership to update._@param info_- the updated information._@return The group information.;public BoxGroupMembership updateGroupMembershipInfo(String groupMemebershipId, BoxGroupMembership.Info info) {_        try {_            LOG.debug("Updating info for groupMembership(id=" + groupMemebershipId + ")")__            if (groupMemebershipId == null) {_                throw new IllegalArgumentException("Parameter 'groupMemebershipId' can not be null")__            }_            if (info == null) {_                throw new IllegalArgumentException("Parameter 'info' can not be null")__            }__            BoxGroupMembership groupMembership = new BoxGroupMembership(boxConnection, groupMemebershipId)___            groupMembership.updateInfo(info)__            return groupMembership__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };update,group,membership,information,param,group,membership,id,the,id,of,group,membership,to,update,param,info,the,updated,information,return,the,group,information;public,box,group,membership,update,group,membership,info,string,group,memebership,id,box,group,membership,info,info,try,log,debug,updating,info,for,group,membership,id,group,memebership,id,if,group,memebership,id,null,throw,new,illegal,argument,exception,parameter,group,memebership,id,can,not,be,null,if,info,null,throw,new,illegal,argument,exception,parameter,info,can,not,be,null,box,group,membership,group,membership,new,box,group,membership,box,connection,group,memebership,id,group,membership,update,info,info,return,group,membership,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroupMembership updateGroupMembershipInfo(String groupMemebershipId, BoxGroupMembership.Info info);1523968787;Update group membership information.__@param groupMembershipId_- the id of group membership to update._@param info_- the updated information._@return The group information.;public BoxGroupMembership updateGroupMembershipInfo(String groupMemebershipId, BoxGroupMembership.Info info) {_        try {_            LOG.debug("Updating info for groupMembership(id=" + groupMemebershipId + ")")__            if (groupMemebershipId == null) {_                throw new IllegalArgumentException("Parameter 'groupMemebershipId' can not be null")__            }_            if (info == null) {_                throw new IllegalArgumentException("Parameter 'info' can not be null")__            }__            BoxGroupMembership groupMembership = new BoxGroupMembership(boxConnection, groupMemebershipId)___            groupMembership.updateInfo(info)__            return groupMembership__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };update,group,membership,information,param,group,membership,id,the,id,of,group,membership,to,update,param,info,the,updated,information,return,the,group,information;public,box,group,membership,update,group,membership,info,string,group,memebership,id,box,group,membership,info,info,try,log,debug,updating,info,for,group,membership,id,group,memebership,id,if,group,memebership,id,null,throw,new,illegal,argument,exception,parameter,group,memebership,id,can,not,be,null,if,info,null,throw,new,illegal,argument,exception,parameter,info,can,not,be,null,box,group,membership,group,membership,new,box,group,membership,box,connection,group,memebership,id,group,membership,update,info,info,return,group,membership,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public void deleteGroup(String groupId);1488797924;Delete group.__@param groupId_- the id of group to delete.;public void deleteGroup(String groupId) {_        try {_            LOG.debug("Deleting group(" + groupId + ")")__            if (groupId == null) {_                throw new IllegalArgumentException("Parameter 'groupId' can not be null")__            }__            BoxGroup group = new BoxGroup(boxConnection, groupId)__            group.delete()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };delete,group,param,group,id,the,id,of,group,to,delete;public,void,delete,group,string,group,id,try,log,debug,deleting,group,group,id,if,group,id,null,throw,new,illegal,argument,exception,parameter,group,id,can,not,be,null,box,group,group,new,box,group,box,connection,group,id,group,delete,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public void deleteGroup(String groupId);1507030796;Delete group.__@param groupId_- the id of group to delete.;public void deleteGroup(String groupId) {_        try {_            LOG.debug("Deleting group(" + groupId + ")")__            if (groupId == null) {_                throw new IllegalArgumentException("Parameter 'groupId' can not be null")__            }__            BoxGroup group = new BoxGroup(boxConnection, groupId)__            group.delete()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };delete,group,param,group,id,the,id,of,group,to,delete;public,void,delete,group,string,group,id,try,log,debug,deleting,group,group,id,if,group,id,null,throw,new,illegal,argument,exception,parameter,group,id,can,not,be,null,box,group,group,new,box,group,box,connection,group,id,group,delete,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public void deleteGroup(String groupId);1507126267;Delete group.__@param groupId_- the id of group to delete.;public void deleteGroup(String groupId) {_        try {_            LOG.debug("Deleting group(" + groupId + ")")__            if (groupId == null) {_                throw new IllegalArgumentException("Parameter 'groupId' can not be null")__            }__            BoxGroup group = new BoxGroup(boxConnection, groupId)__            group.delete()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };delete,group,param,group,id,the,id,of,group,to,delete;public,void,delete,group,string,group,id,try,log,debug,deleting,group,group,id,if,group,id,null,throw,new,illegal,argument,exception,parameter,group,id,can,not,be,null,box,group,group,new,box,group,box,connection,group,id,group,delete,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public void deleteGroup(String groupId);1523968787;Delete group.__@param groupId_- the id of group to delete.;public void deleteGroup(String groupId) {_        try {_            LOG.debug("Deleting group(" + groupId + ")")__            if (groupId == null) {_                throw new IllegalArgumentException("Parameter 'groupId' can not be null")__            }__            BoxGroup group = new BoxGroup(boxConnection, groupId)__            group.delete()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };delete,group,param,group,id,the,id,of,group,to,delete;public,void,delete,group,string,group,id,try,log,debug,deleting,group,group,id,if,group,id,null,throw,new,illegal,argument,exception,parameter,group,id,can,not,be,null,box,group,group,new,box,group,box,connection,group,id,group,delete,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public void deleteGroup(String groupId);1528387875;Delete group.__@param groupId_- the id of group to delete.;public void deleteGroup(String groupId) {_        try {_            LOG.debug("Deleting group(" + groupId + ")")__            if (groupId == null) {_                throw new IllegalArgumentException("Parameter 'groupId' can not be null")__            }__            BoxGroup group = new BoxGroup(boxConnection, groupId)__            group.delete()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };delete,group,param,group,id,the,id,of,group,to,delete;public,void,delete,group,string,group,id,try,log,debug,deleting,group,group,id,if,group,id,null,throw,new,illegal,argument,exception,parameter,group,id,can,not,be,null,box,group,group,new,box,group,box,connection,group,id,group,delete,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public void deleteGroup(String groupId);1536687142;Delete group.__@param groupId_- the id of group to delete.;public void deleteGroup(String groupId) {_        try {_            LOG.debug("Deleting group({})", groupId)__            if (groupId == null) {_                throw new IllegalArgumentException("Parameter 'groupId' can not be null")__            }__            BoxGroup group = new BoxGroup(boxConnection, groupId)__            group.delete()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };delete,group,param,group,id,the,id,of,group,to,delete;public,void,delete,group,string,group,id,try,log,debug,deleting,group,group,id,if,group,id,null,throw,new,illegal,argument,exception,parameter,group,id,can,not,be,null,box,group,group,new,box,group,box,connection,group,id,group,delete,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroupMembership addGroupMembership(String groupId, String userId, BoxGroupMembership.Role role);1488797924;Add a member to group with the specified role.__@param groupId_- the id of group._@param userId_- the id of user to be added to group._@param role_- the role of the user in this group. Can be <code>null</code>_to assign the default role._@return The group information.;public BoxGroupMembership addGroupMembership(String groupId, String userId, BoxGroupMembership.Role role) {_        try {_            LOG.debug("Adding user(id=" + userId + ") as member to group(id=" + groupId_                    + (role == null ? ")" : ") with role=" + role.name()))__            if (groupId == null) {_                throw new IllegalArgumentException("Parameter 'groupId' can not be null")__            }_            if (userId == null) {_                throw new IllegalArgumentException("Parameter 'userId' can not be null")__            }__            BoxGroup group = new BoxGroup(boxConnection, groupId)__            BoxUser user = new BoxUser(boxConnection, userId)___            return group.addMembership(user, role).getResource()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };add,a,member,to,group,with,the,specified,role,param,group,id,the,id,of,group,param,user,id,the,id,of,user,to,be,added,to,group,param,role,the,role,of,the,user,in,this,group,can,be,code,null,code,to,assign,the,default,role,return,the,group,information;public,box,group,membership,add,group,membership,string,group,id,string,user,id,box,group,membership,role,role,try,log,debug,adding,user,id,user,id,as,member,to,group,id,group,id,role,null,with,role,role,name,if,group,id,null,throw,new,illegal,argument,exception,parameter,group,id,can,not,be,null,if,user,id,null,throw,new,illegal,argument,exception,parameter,user,id,can,not,be,null,box,group,group,new,box,group,box,connection,group,id,box,user,user,new,box,user,box,connection,user,id,return,group,add,membership,user,role,get,resource,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroupMembership addGroupMembership(String groupId, String userId, BoxGroupMembership.Role role);1507030796;Add a member to group with the specified role.__@param groupId_- the id of group._@param userId_- the id of user to be added to group._@param role_- the role of the user in this group. Can be <code>null</code>_to assign the default role._@return The group information.;public BoxGroupMembership addGroupMembership(String groupId, String userId, BoxGroupMembership.Role role) {_        try {_            LOG.debug("Adding user(id=" + userId + ") as member to group(id=" + groupId_                    + (role == null ? ")" : ") with role=" + role.name()))__            if (groupId == null) {_                throw new IllegalArgumentException("Parameter 'groupId' can not be null")__            }_            if (userId == null) {_                throw new IllegalArgumentException("Parameter 'userId' can not be null")__            }__            BoxGroup group = new BoxGroup(boxConnection, groupId)__            BoxUser user = new BoxUser(boxConnection, userId)___            return group.addMembership(user, role).getResource()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };add,a,member,to,group,with,the,specified,role,param,group,id,the,id,of,group,param,user,id,the,id,of,user,to,be,added,to,group,param,role,the,role,of,the,user,in,this,group,can,be,code,null,code,to,assign,the,default,role,return,the,group,information;public,box,group,membership,add,group,membership,string,group,id,string,user,id,box,group,membership,role,role,try,log,debug,adding,user,id,user,id,as,member,to,group,id,group,id,role,null,with,role,role,name,if,group,id,null,throw,new,illegal,argument,exception,parameter,group,id,can,not,be,null,if,user,id,null,throw,new,illegal,argument,exception,parameter,user,id,can,not,be,null,box,group,group,new,box,group,box,connection,group,id,box,user,user,new,box,user,box,connection,user,id,return,group,add,membership,user,role,get,resource,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroupMembership addGroupMembership(String groupId, String userId, BoxGroupMembership.Role role);1507126267;Add a member to group with the specified role.__@param groupId_- the id of group._@param userId_- the id of user to be added to group._@param role_- the role of the user in this group. Can be <code>null</code>_to assign the default role._@return The group information.;public BoxGroupMembership addGroupMembership(String groupId, String userId, BoxGroupMembership.Role role) {_        try {_            LOG.debug("Adding user(id=" + userId + ") as member to group(id=" + groupId_                    + (role == null ? ")" : ") with role=" + role.name()))__            if (groupId == null) {_                throw new IllegalArgumentException("Parameter 'groupId' can not be null")__            }_            if (userId == null) {_                throw new IllegalArgumentException("Parameter 'userId' can not be null")__            }__            BoxGroup group = new BoxGroup(boxConnection, groupId)__            BoxUser user = new BoxUser(boxConnection, userId)___            return group.addMembership(user, role).getResource()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };add,a,member,to,group,with,the,specified,role,param,group,id,the,id,of,group,param,user,id,the,id,of,user,to,be,added,to,group,param,role,the,role,of,the,user,in,this,group,can,be,code,null,code,to,assign,the,default,role,return,the,group,information;public,box,group,membership,add,group,membership,string,group,id,string,user,id,box,group,membership,role,role,try,log,debug,adding,user,id,user,id,as,member,to,group,id,group,id,role,null,with,role,role,name,if,group,id,null,throw,new,illegal,argument,exception,parameter,group,id,can,not,be,null,if,user,id,null,throw,new,illegal,argument,exception,parameter,user,id,can,not,be,null,box,group,group,new,box,group,box,connection,group,id,box,user,user,new,box,user,box,connection,user,id,return,group,add,membership,user,role,get,resource,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroupMembership addGroupMembership(String groupId, String userId, BoxGroupMembership.Role role);1523968787;Add a member to group with the specified role.__@param groupId_- the id of group._@param userId_- the id of user to be added to group._@param role_- the role of the user in this group. Can be <code>null</code>_to assign the default role._@return The group information.;public BoxGroupMembership addGroupMembership(String groupId, String userId, BoxGroupMembership.Role role) {_        try {_            LOG.debug("Adding user(id=" + userId + ") as member to group(id=" + groupId_                    + (role == null ? ")" : ") with role=" + role.name()))__            if (groupId == null) {_                throw new IllegalArgumentException("Parameter 'groupId' can not be null")__            }_            if (userId == null) {_                throw new IllegalArgumentException("Parameter 'userId' can not be null")__            }__            BoxGroup group = new BoxGroup(boxConnection, groupId)__            BoxUser user = new BoxUser(boxConnection, userId)___            return group.addMembership(user, role).getResource()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };add,a,member,to,group,with,the,specified,role,param,group,id,the,id,of,group,param,user,id,the,id,of,user,to,be,added,to,group,param,role,the,role,of,the,user,in,this,group,can,be,code,null,code,to,assign,the,default,role,return,the,group,information;public,box,group,membership,add,group,membership,string,group,id,string,user,id,box,group,membership,role,role,try,log,debug,adding,user,id,user,id,as,member,to,group,id,group,id,role,null,with,role,role,name,if,group,id,null,throw,new,illegal,argument,exception,parameter,group,id,can,not,be,null,if,user,id,null,throw,new,illegal,argument,exception,parameter,user,id,can,not,be,null,box,group,group,new,box,group,box,connection,group,id,box,user,user,new,box,user,box,connection,user,id,return,group,add,membership,user,role,get,resource,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroupMembership addGroupMembership(String groupId, String userId, BoxGroupMembership.Role role);1528387875;Add a member to group with the specified role.__@param groupId_- the id of group._@param userId_- the id of user to be added to group._@param role_- the role of the user in this group. Can be <code>null</code>_to assign the default role._@return The group information.;public BoxGroupMembership addGroupMembership(String groupId, String userId, BoxGroupMembership.Role role) {_        try {_            LOG.debug("Adding user(id=" + userId + ") as member to group(id=" + groupId_                    + (role == null ? ")" : ") with role=" + role.name()))__            if (groupId == null) {_                throw new IllegalArgumentException("Parameter 'groupId' can not be null")__            }_            if (userId == null) {_                throw new IllegalArgumentException("Parameter 'userId' can not be null")__            }__            BoxGroup group = new BoxGroup(boxConnection, groupId)__            BoxUser user = new BoxUser(boxConnection, userId)___            return group.addMembership(user, role).getResource()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };add,a,member,to,group,with,the,specified,role,param,group,id,the,id,of,group,param,user,id,the,id,of,user,to,be,added,to,group,param,role,the,role,of,the,user,in,this,group,can,be,code,null,code,to,assign,the,default,role,return,the,group,information;public,box,group,membership,add,group,membership,string,group,id,string,user,id,box,group,membership,role,role,try,log,debug,adding,user,id,user,id,as,member,to,group,id,group,id,role,null,with,role,role,name,if,group,id,null,throw,new,illegal,argument,exception,parameter,group,id,can,not,be,null,if,user,id,null,throw,new,illegal,argument,exception,parameter,user,id,can,not,be,null,box,group,group,new,box,group,box,connection,group,id,box,user,user,new,box,user,box,connection,user,id,return,group,add,membership,user,role,get,resource,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxGroupsManager -> public BoxGroupMembership addGroupMembership(String groupId, String userId, BoxGroupMembership.Role role);1536687142;Add a member to group with the specified role.__@param groupId_- the id of group._@param userId_- the id of user to be added to group._@param role_- the role of the user in this group. Can be <code>null</code>_to assign the default role._@return The group information.;public BoxGroupMembership addGroupMembership(String groupId, String userId, BoxGroupMembership.Role role) {_        try {_            LOG.debug("Adding user(id=" + userId + ") as member to group(id=" + groupId_                    + (role == null ? ")" : ") with role=" + role.name()))__            if (groupId == null) {_                throw new IllegalArgumentException("Parameter 'groupId' can not be null")__            }_            if (userId == null) {_                throw new IllegalArgumentException("Parameter 'userId' can not be null")__            }__            BoxGroup group = new BoxGroup(boxConnection, groupId)__            BoxUser user = new BoxUser(boxConnection, userId)___            return group.addMembership(user, role).getResource()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };add,a,member,to,group,with,the,specified,role,param,group,id,the,id,of,group,param,user,id,the,id,of,user,to,be,added,to,group,param,role,the,role,of,the,user,in,this,group,can,be,code,null,code,to,assign,the,default,role,return,the,group,information;public,box,group,membership,add,group,membership,string,group,id,string,user,id,box,group,membership,role,role,try,log,debug,adding,user,id,user,id,as,member,to,group,id,group,id,role,null,with,role,role,name,if,group,id,null,throw,new,illegal,argument,exception,parameter,group,id,can,not,be,null,if,user,id,null,throw,new,illegal,argument,exception,parameter,user,id,can,not,be,null,box,group,group,new,box,group,box,connection,group,id,box,user,user,new,box,user,box,connection,user,id,return,group,add,membership,user,role,get,resource,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
