# id;timestamp;commentText;codeText;commentWords;codeWords
BoxTasksManager -> public List<BoxTaskAssignment.Info> getTaskAssignments(String taskId);1488797924;Get a list of any assignments for task.__@param taskId_- the id of task._@return The list of assignments for task.;public List<BoxTaskAssignment.Info> getTaskAssignments(String taskId) {_        try {_            LOG.debug("Getting assignments for task(id=" + taskId + ")")__            if (taskId == null) {_                throw new IllegalArgumentException("Parameter 'taskId' can not be null")__            }__            BoxTask file = new BoxTask(boxConnection, taskId)___            return file.getAssignments()___        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,a,list,of,any,assignments,for,task,param,task,id,the,id,of,task,return,the,list,of,assignments,for,task;public,list,box,task,assignment,info,get,task,assignments,string,task,id,try,log,debug,getting,assignments,for,task,id,task,id,if,task,id,null,throw,new,illegal,argument,exception,parameter,task,id,can,not,be,null,box,task,file,new,box,task,box,connection,task,id,return,file,get,assignments,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxTasksManager -> public List<BoxTaskAssignment.Info> getTaskAssignments(String taskId);1523968787;Get a list of any assignments for task.__@param taskId_- the id of task._@return The list of assignments for task.;public List<BoxTaskAssignment.Info> getTaskAssignments(String taskId) {_        try {_            LOG.debug("Getting assignments for task(id=" + taskId + ")")__            if (taskId == null) {_                throw new IllegalArgumentException("Parameter 'taskId' can not be null")__            }__            BoxTask file = new BoxTask(boxConnection, taskId)___            return file.getAssignments()___        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,a,list,of,any,assignments,for,task,param,task,id,the,id,of,task,return,the,list,of,assignments,for,task;public,list,box,task,assignment,info,get,task,assignments,string,task,id,try,log,debug,getting,assignments,for,task,id,task,id,if,task,id,null,throw,new,illegal,argument,exception,parameter,task,id,can,not,be,null,box,task,file,new,box,task,box,connection,task,id,return,file,get,assignments,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxTasksManager -> public List<BoxTaskAssignment.Info> getTaskAssignments(String taskId);1536687142;Get a list of any assignments for task.__@param taskId_- the id of task._@return The list of assignments for task.;public List<BoxTaskAssignment.Info> getTaskAssignments(String taskId) {_        try {_            LOG.debug("Getting assignments for task(id={})", taskId)__            if (taskId == null) {_                throw new IllegalArgumentException("Parameter 'taskId' can not be null")__            }__            BoxTask file = new BoxTask(boxConnection, taskId)___            return file.getAssignments()___        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,a,list,of,any,assignments,for,task,param,task,id,the,id,of,task,return,the,list,of,assignments,for,task;public,list,box,task,assignment,info,get,task,assignments,string,task,id,try,log,debug,getting,assignments,for,task,id,task,id,if,task,id,null,throw,new,illegal,argument,exception,parameter,task,id,can,not,be,null,box,task,file,new,box,task,box,connection,task,id,return,file,get,assignments,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxTasksManager -> public BoxTasksManager(BoxAPIConnection boxConnection);1488797924;Create tasks manager to manage the tasks of Box connection's_authenticated user.__@param boxConnection_- Box connection to authenticated user account.;public BoxTasksManager(BoxAPIConnection boxConnection) {_        this.boxConnection = boxConnection__    };create,tasks,manager,to,manage,the,tasks,of,box,connection,s,authenticated,user,param,box,connection,box,connection,to,authenticated,user,account;public,box,tasks,manager,box,apiconnection,box,connection,this,box,connection,box,connection
BoxTasksManager -> public BoxTasksManager(BoxAPIConnection boxConnection);1523968787;Create tasks manager to manage the tasks of Box connection's_authenticated user.__@param boxConnection_- Box connection to authenticated user account.;public BoxTasksManager(BoxAPIConnection boxConnection) {_        this.boxConnection = boxConnection__    };create,tasks,manager,to,manage,the,tasks,of,box,connection,s,authenticated,user,param,box,connection,box,connection,to,authenticated,user,account;public,box,tasks,manager,box,apiconnection,box,connection,this,box,connection,box,connection
BoxTasksManager -> public BoxTasksManager(BoxAPIConnection boxConnection);1536687142;Create tasks manager to manage the tasks of Box connection's_authenticated user.__@param boxConnection_- Box connection to authenticated user account.;public BoxTasksManager(BoxAPIConnection boxConnection) {_        this.boxConnection = boxConnection__    };create,tasks,manager,to,manage,the,tasks,of,box,connection,s,authenticated,user,param,box,connection,box,connection,to,authenticated,user,account;public,box,tasks,manager,box,apiconnection,box,connection,this,box,connection,box,connection
BoxTasksManager -> public void deleteTask(String taskId);1488797924;Delete task.__@param taskId_- the id of task to delete.;public void deleteTask(String taskId) {_        try {_            LOG.debug("Deleting task(id=" + taskId + ")")__            if (taskId == null) {_                throw new IllegalArgumentException("Parameter 'taskId' can not be null")__            }_            BoxTask task = new BoxTask(boxConnection, taskId)__            task.delete()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };delete,task,param,task,id,the,id,of,task,to,delete;public,void,delete,task,string,task,id,try,log,debug,deleting,task,id,task,id,if,task,id,null,throw,new,illegal,argument,exception,parameter,task,id,can,not,be,null,box,task,task,new,box,task,box,connection,task,id,task,delete,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxTasksManager -> public void deleteTask(String taskId);1523968787;Delete task.__@param taskId_- the id of task to delete.;public void deleteTask(String taskId) {_        try {_            LOG.debug("Deleting task(id=" + taskId + ")")__            if (taskId == null) {_                throw new IllegalArgumentException("Parameter 'taskId' can not be null")__            }_            BoxTask task = new BoxTask(boxConnection, taskId)__            task.delete()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };delete,task,param,task,id,the,id,of,task,to,delete;public,void,delete,task,string,task,id,try,log,debug,deleting,task,id,task,id,if,task,id,null,throw,new,illegal,argument,exception,parameter,task,id,can,not,be,null,box,task,task,new,box,task,box,connection,task,id,task,delete,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxTasksManager -> public void deleteTask(String taskId);1536687142;Delete task.__@param taskId_- the id of task to delete.;public void deleteTask(String taskId) {_        try {_            LOG.debug("Deleting task(id={})", taskId)__            if (taskId == null) {_                throw new IllegalArgumentException("Parameter 'taskId' can not be null")__            }_            BoxTask task = new BoxTask(boxConnection, taskId)__            task.delete()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };delete,task,param,task,id,the,id,of,task,to,delete;public,void,delete,task,string,task,id,try,log,debug,deleting,task,id,task,id,if,task,id,null,throw,new,illegal,argument,exception,parameter,task,id,can,not,be,null,box,task,task,new,box,task,box,connection,task,id,task,delete,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxTasksManager -> public void deleteTaskAssignment(String taskAssignmentId);1488797924;Delete task assignment.__@param taskAssignmentId_- the id of task assignment to delete.;public void deleteTaskAssignment(String taskAssignmentId) {_        try {_            LOG.debug("Deleting task(id=" + taskAssignmentId + ")")__            if (taskAssignmentId == null) {_                throw new IllegalArgumentException("Parameter 'taskAssignmentId' can not be null")__            }_            BoxTaskAssignment taskAssignment = new BoxTaskAssignment(boxConnection, taskAssignmentId)__            taskAssignment.delete()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };delete,task,assignment,param,task,assignment,id,the,id,of,task,assignment,to,delete;public,void,delete,task,assignment,string,task,assignment,id,try,log,debug,deleting,task,id,task,assignment,id,if,task,assignment,id,null,throw,new,illegal,argument,exception,parameter,task,assignment,id,can,not,be,null,box,task,assignment,task,assignment,new,box,task,assignment,box,connection,task,assignment,id,task,assignment,delete,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxTasksManager -> public void deleteTaskAssignment(String taskAssignmentId);1523968787;Delete task assignment.__@param taskAssignmentId_- the id of task assignment to delete.;public void deleteTaskAssignment(String taskAssignmentId) {_        try {_            LOG.debug("Deleting task(id=" + taskAssignmentId + ")")__            if (taskAssignmentId == null) {_                throw new IllegalArgumentException("Parameter 'taskAssignmentId' can not be null")__            }_            BoxTaskAssignment taskAssignment = new BoxTaskAssignment(boxConnection, taskAssignmentId)__            taskAssignment.delete()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };delete,task,assignment,param,task,assignment,id,the,id,of,task,assignment,to,delete;public,void,delete,task,assignment,string,task,assignment,id,try,log,debug,deleting,task,id,task,assignment,id,if,task,assignment,id,null,throw,new,illegal,argument,exception,parameter,task,assignment,id,can,not,be,null,box,task,assignment,task,assignment,new,box,task,assignment,box,connection,task,assignment,id,task,assignment,delete,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxTasksManager -> public void deleteTaskAssignment(String taskAssignmentId);1536687142;Delete task assignment.__@param taskAssignmentId_- the id of task assignment to delete.;public void deleteTaskAssignment(String taskAssignmentId) {_        try {_            LOG.debug("Deleting task(id={})", taskAssignmentId)__            if (taskAssignmentId == null) {_                throw new IllegalArgumentException("Parameter 'taskAssignmentId' can not be null")__            }_            BoxTaskAssignment taskAssignment = new BoxTaskAssignment(boxConnection, taskAssignmentId)__            taskAssignment.delete()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };delete,task,assignment,param,task,assignment,id,the,id,of,task,assignment,to,delete;public,void,delete,task,assignment,string,task,assignment,id,try,log,debug,deleting,task,id,task,assignment,id,if,task,assignment,id,null,throw,new,illegal,argument,exception,parameter,task,assignment,id,can,not,be,null,box,task,assignment,task,assignment,new,box,task,assignment,box,connection,task,assignment,id,task,assignment,delete,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxTasksManager -> public BoxTask.Info getTaskInfo(String taskId);1488797924;Get task information.__@param taskId_- the id of task._@return The task information.;public BoxTask.Info getTaskInfo(String taskId) {_        try {_            LOG.debug("Getting info for task(id=" + taskId + ")")__            if (taskId == null) {_                throw new IllegalArgumentException("Parameter 'taskId' can not be null")__            }__            BoxTask task = new BoxTask(boxConnection, taskId)___            return task.getInfo()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,task,information,param,task,id,the,id,of,task,return,the,task,information;public,box,task,info,get,task,info,string,task,id,try,log,debug,getting,info,for,task,id,task,id,if,task,id,null,throw,new,illegal,argument,exception,parameter,task,id,can,not,be,null,box,task,task,new,box,task,box,connection,task,id,return,task,get,info,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxTasksManager -> public BoxTask.Info getTaskInfo(String taskId);1523968787;Get task information.__@param taskId_- the id of task._@return The task information.;public BoxTask.Info getTaskInfo(String taskId) {_        try {_            LOG.debug("Getting info for task(id=" + taskId + ")")__            if (taskId == null) {_                throw new IllegalArgumentException("Parameter 'taskId' can not be null")__            }__            BoxTask task = new BoxTask(boxConnection, taskId)___            return task.getInfo()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,task,information,param,task,id,the,id,of,task,return,the,task,information;public,box,task,info,get,task,info,string,task,id,try,log,debug,getting,info,for,task,id,task,id,if,task,id,null,throw,new,illegal,argument,exception,parameter,task,id,can,not,be,null,box,task,task,new,box,task,box,connection,task,id,return,task,get,info,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxTasksManager -> public BoxTask.Info getTaskInfo(String taskId);1536687142;Get task information.__@param taskId_- the id of task._@return The task information.;public BoxTask.Info getTaskInfo(String taskId) {_        try {_            LOG.debug("Getting info for task(id={})", taskId)__            if (taskId == null) {_                throw new IllegalArgumentException("Parameter 'taskId' can not be null")__            }__            BoxTask task = new BoxTask(boxConnection, taskId)___            return task.getInfo()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,task,information,param,task,id,the,id,of,task,return,the,task,information;public,box,task,info,get,task,info,string,task,id,try,log,debug,getting,info,for,task,id,task,id,if,task,id,null,throw,new,illegal,argument,exception,parameter,task,id,can,not,be,null,box,task,task,new,box,task,box,connection,task,id,return,task,get,info,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxTasksManager -> @SuppressWarnings("unused")                                       public BoxTask addAssignmentToTask(String taskId, BoxUser assignTo);1488797924;Add assignment for task.__@param taskId_- the id of task to add assignment for._@param assignTo_- the user to assign to task._@return The assigned task.;@SuppressWarnings("unused") _                                _    public BoxTask addAssignmentToTask(String taskId, BoxUser assignTo) {_        try {_            LOG.debug("Assigning task(id=" + taskId + ") to user(id=" + assignTo.getID() + ")")__            if (taskId == null) {_                throw new IllegalArgumentException("Parameter 'commentId' can not be null")__            }_            if (assignTo == null) {_                throw new IllegalArgumentException("Parameter 'assignTo' can not be null")__            }__            BoxTask task = new BoxTask(boxConnection, taskId)__            task.addAssignment(assignTo)___            return task__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };add,assignment,for,task,param,task,id,the,id,of,task,to,add,assignment,for,param,assign,to,the,user,to,assign,to,task,return,the,assigned,task;suppress,warnings,unused,public,box,task,add,assignment,to,task,string,task,id,box,user,assign,to,try,log,debug,assigning,task,id,task,id,to,user,id,assign,to,get,id,if,task,id,null,throw,new,illegal,argument,exception,parameter,comment,id,can,not,be,null,if,assign,to,null,throw,new,illegal,argument,exception,parameter,assign,to,can,not,be,null,box,task,task,new,box,task,box,connection,task,id,task,add,assignment,assign,to,return,task,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxTasksManager -> @SuppressWarnings("unused")                                       public BoxTask addAssignmentToTask(String taskId, BoxUser assignTo);1523968787;Add assignment for task.__@param taskId_- the id of task to add assignment for._@param assignTo_- the user to assign to task._@return The assigned task.;@SuppressWarnings("unused") _                                _    public BoxTask addAssignmentToTask(String taskId, BoxUser assignTo) {_        try {_            LOG.debug("Assigning task(id=" + taskId + ") to user(id=" + assignTo.getID() + ")")__            if (taskId == null) {_                throw new IllegalArgumentException("Parameter 'commentId' can not be null")__            }_            if (assignTo == null) {_                throw new IllegalArgumentException("Parameter 'assignTo' can not be null")__            }__            BoxTask task = new BoxTask(boxConnection, taskId)__            task.addAssignment(assignTo)___            return task__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };add,assignment,for,task,param,task,id,the,id,of,task,to,add,assignment,for,param,assign,to,the,user,to,assign,to,task,return,the,assigned,task;suppress,warnings,unused,public,box,task,add,assignment,to,task,string,task,id,box,user,assign,to,try,log,debug,assigning,task,id,task,id,to,user,id,assign,to,get,id,if,task,id,null,throw,new,illegal,argument,exception,parameter,comment,id,can,not,be,null,if,assign,to,null,throw,new,illegal,argument,exception,parameter,assign,to,can,not,be,null,box,task,task,new,box,task,box,connection,task,id,task,add,assignment,assign,to,return,task,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxTasksManager -> @SuppressWarnings("unused")                                       public BoxTask addAssignmentToTask(String taskId, BoxUser assignTo);1536687142;Add assignment for task.__@param taskId_- the id of task to add assignment for._@param assignTo_- the user to assign to task._@return The assigned task.;@SuppressWarnings("unused") _                                _    public BoxTask addAssignmentToTask(String taskId, BoxUser assignTo) {_        try {_            LOG.debug("Assigning task(id=" + taskId + ") to user(id=" + assignTo.getID() + ")")__            if (taskId == null) {_                throw new IllegalArgumentException("Parameter 'commentId' can not be null")__            }_            if (assignTo == null) {_                throw new IllegalArgumentException("Parameter 'assignTo' can not be null")__            }__            BoxTask task = new BoxTask(boxConnection, taskId)__            task.addAssignment(assignTo)___            return task__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };add,assignment,for,task,param,task,id,the,id,of,task,to,add,assignment,for,param,assign,to,the,user,to,assign,to,task,return,the,assigned,task;suppress,warnings,unused,public,box,task,add,assignment,to,task,string,task,id,box,user,assign,to,try,log,debug,assigning,task,id,task,id,to,user,id,assign,to,get,id,if,task,id,null,throw,new,illegal,argument,exception,parameter,comment,id,can,not,be,null,if,assign,to,null,throw,new,illegal,argument,exception,parameter,assign,to,can,not,be,null,box,task,task,new,box,task,box,connection,task,id,task,add,assignment,assign,to,return,task,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxTasksManager -> public List<BoxTask.Info> getFileTasks(String fileId);1488797924;Get a list of any tasks on file.__@param fileId_- the id of file._@return The list of tasks on file.;public List<BoxTask.Info> getFileTasks(String fileId) {_        try {_            LOG.debug("Getting tasks of file(id=" + fileId + ")")__            if (fileId == null) {_                throw new IllegalArgumentException("Parameter 'fileId' can not be null")__            }__            BoxFile file = new BoxFile(boxConnection, fileId)___            return file.getTasks()___        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,a,list,of,any,tasks,on,file,param,file,id,the,id,of,file,return,the,list,of,tasks,on,file;public,list,box,task,info,get,file,tasks,string,file,id,try,log,debug,getting,tasks,of,file,id,file,id,if,file,id,null,throw,new,illegal,argument,exception,parameter,file,id,can,not,be,null,box,file,file,new,box,file,box,connection,file,id,return,file,get,tasks,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxTasksManager -> public List<BoxTask.Info> getFileTasks(String fileId);1523968787;Get a list of any tasks on file.__@param fileId_- the id of file._@return The list of tasks on file.;public List<BoxTask.Info> getFileTasks(String fileId) {_        try {_            LOG.debug("Getting tasks of file(id=" + fileId + ")")__            if (fileId == null) {_                throw new IllegalArgumentException("Parameter 'fileId' can not be null")__            }__            BoxFile file = new BoxFile(boxConnection, fileId)___            return file.getTasks()___        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,a,list,of,any,tasks,on,file,param,file,id,the,id,of,file,return,the,list,of,tasks,on,file;public,list,box,task,info,get,file,tasks,string,file,id,try,log,debug,getting,tasks,of,file,id,file,id,if,file,id,null,throw,new,illegal,argument,exception,parameter,file,id,can,not,be,null,box,file,file,new,box,file,box,connection,file,id,return,file,get,tasks,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxTasksManager -> public List<BoxTask.Info> getFileTasks(String fileId);1536687142;Get a list of any tasks on file.__@param fileId_- the id of file._@return The list of tasks on file.;public List<BoxTask.Info> getFileTasks(String fileId) {_        try {_            LOG.debug("Getting tasks of file(id={})", fileId)__            if (fileId == null) {_                throw new IllegalArgumentException("Parameter 'fileId' can not be null")__            }__            BoxFile file = new BoxFile(boxConnection, fileId)___            return file.getTasks()___        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,a,list,of,any,tasks,on,file,param,file,id,the,id,of,file,return,the,list,of,tasks,on,file;public,list,box,task,info,get,file,tasks,string,file,id,try,log,debug,getting,tasks,of,file,id,file,id,if,file,id,null,throw,new,illegal,argument,exception,parameter,file,id,can,not,be,null,box,file,file,new,box,file,box,connection,file,id,return,file,get,tasks,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxTasksManager -> public BoxTask updateTaskInfo(String taskId, BoxTask.Info info);1488797924;Update task information.__@param taskId_- the id of task._@param info_- the updated information_@return The updated task.;public BoxTask updateTaskInfo(String taskId, BoxTask.Info info) {_        try {_            LOG.debug("Updating info for task(id=" + taskId + ")")__            if (taskId == null) {_                throw new IllegalArgumentException("Parameter 'taskId' can not be null")__            }_            if (info == null) {_                throw new IllegalArgumentException("Parameter 'info' can not be null")__            }__            BoxTask task = new BoxTask(boxConnection, taskId)__            task.updateInfo(info)___            return task__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };update,task,information,param,task,id,the,id,of,task,param,info,the,updated,information,return,the,updated,task;public,box,task,update,task,info,string,task,id,box,task,info,info,try,log,debug,updating,info,for,task,id,task,id,if,task,id,null,throw,new,illegal,argument,exception,parameter,task,id,can,not,be,null,if,info,null,throw,new,illegal,argument,exception,parameter,info,can,not,be,null,box,task,task,new,box,task,box,connection,task,id,task,update,info,info,return,task,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxTasksManager -> public BoxTask updateTaskInfo(String taskId, BoxTask.Info info);1523968787;Update task information.__@param taskId_- the id of task._@param info_- the updated information_@return The updated task.;public BoxTask updateTaskInfo(String taskId, BoxTask.Info info) {_        try {_            LOG.debug("Updating info for task(id=" + taskId + ")")__            if (taskId == null) {_                throw new IllegalArgumentException("Parameter 'taskId' can not be null")__            }_            if (info == null) {_                throw new IllegalArgumentException("Parameter 'info' can not be null")__            }__            BoxTask task = new BoxTask(boxConnection, taskId)__            task.updateInfo(info)___            return task__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };update,task,information,param,task,id,the,id,of,task,param,info,the,updated,information,return,the,updated,task;public,box,task,update,task,info,string,task,id,box,task,info,info,try,log,debug,updating,info,for,task,id,task,id,if,task,id,null,throw,new,illegal,argument,exception,parameter,task,id,can,not,be,null,if,info,null,throw,new,illegal,argument,exception,parameter,info,can,not,be,null,box,task,task,new,box,task,box,connection,task,id,task,update,info,info,return,task,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxTasksManager -> public BoxTask updateTaskInfo(String taskId, BoxTask.Info info);1536687142;Update task information.__@param taskId_- the id of task._@param info_- the updated information_@return The updated task.;public BoxTask updateTaskInfo(String taskId, BoxTask.Info info) {_        try {_            LOG.debug("Updating info for task(id={})", taskId)__            if (taskId == null) {_                throw new IllegalArgumentException("Parameter 'taskId' can not be null")__            }_            if (info == null) {_                throw new IllegalArgumentException("Parameter 'info' can not be null")__            }__            BoxTask task = new BoxTask(boxConnection, taskId)__            task.updateInfo(info)___            return task__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };update,task,information,param,task,id,the,id,of,task,param,info,the,updated,information,return,the,updated,task;public,box,task,update,task,info,string,task,id,box,task,info,info,try,log,debug,updating,info,for,task,id,task,id,if,task,id,null,throw,new,illegal,argument,exception,parameter,task,id,can,not,be,null,if,info,null,throw,new,illegal,argument,exception,parameter,info,can,not,be,null,box,task,task,new,box,task,box,connection,task,id,task,update,info,info,return,task,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxTasksManager -> public BoxTaskAssignment.Info getTaskAssignmentInfo(String taskAssignmentId);1488797924;Get task assignment information.__@param taskAssignmentId_- the id of task assignment._@return The task assignment information.;public BoxTaskAssignment.Info getTaskAssignmentInfo(String taskAssignmentId) {_        try {_            LOG.debug("Getting info for task(id=" + taskAssignmentId + ")")__            if (taskAssignmentId == null) {_                throw new IllegalArgumentException("Parameter 'taskAssignmentId' can not be null")__            }__            BoxTaskAssignment taskAssignment = new BoxTaskAssignment(boxConnection, taskAssignmentId)___            return taskAssignment.getInfo()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,task,assignment,information,param,task,assignment,id,the,id,of,task,assignment,return,the,task,assignment,information;public,box,task,assignment,info,get,task,assignment,info,string,task,assignment,id,try,log,debug,getting,info,for,task,id,task,assignment,id,if,task,assignment,id,null,throw,new,illegal,argument,exception,parameter,task,assignment,id,can,not,be,null,box,task,assignment,task,assignment,new,box,task,assignment,box,connection,task,assignment,id,return,task,assignment,get,info,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxTasksManager -> public BoxTaskAssignment.Info getTaskAssignmentInfo(String taskAssignmentId);1523968787;Get task assignment information.__@param taskAssignmentId_- the id of task assignment._@return The task assignment information.;public BoxTaskAssignment.Info getTaskAssignmentInfo(String taskAssignmentId) {_        try {_            LOG.debug("Getting info for task(id=" + taskAssignmentId + ")")__            if (taskAssignmentId == null) {_                throw new IllegalArgumentException("Parameter 'taskAssignmentId' can not be null")__            }__            BoxTaskAssignment taskAssignment = new BoxTaskAssignment(boxConnection, taskAssignmentId)___            return taskAssignment.getInfo()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,task,assignment,information,param,task,assignment,id,the,id,of,task,assignment,return,the,task,assignment,information;public,box,task,assignment,info,get,task,assignment,info,string,task,assignment,id,try,log,debug,getting,info,for,task,id,task,assignment,id,if,task,assignment,id,null,throw,new,illegal,argument,exception,parameter,task,assignment,id,can,not,be,null,box,task,assignment,task,assignment,new,box,task,assignment,box,connection,task,assignment,id,return,task,assignment,get,info,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxTasksManager -> public BoxTaskAssignment.Info getTaskAssignmentInfo(String taskAssignmentId);1536687142;Get task assignment information.__@param taskAssignmentId_- the id of task assignment._@return The task assignment information.;public BoxTaskAssignment.Info getTaskAssignmentInfo(String taskAssignmentId) {_        try {_            LOG.debug("Getting info for task(id={})", taskAssignmentId)__            if (taskAssignmentId == null) {_                throw new IllegalArgumentException("Parameter 'taskAssignmentId' can not be null")__            }__            BoxTaskAssignment taskAssignment = new BoxTaskAssignment(boxConnection, taskAssignmentId)___            return taskAssignment.getInfo()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,task,assignment,information,param,task,assignment,id,the,id,of,task,assignment,return,the,task,assignment,information;public,box,task,assignment,info,get,task,assignment,info,string,task,assignment,id,try,log,debug,getting,info,for,task,id,task,assignment,id,if,task,assignment,id,null,throw,new,illegal,argument,exception,parameter,task,assignment,id,can,not,be,null,box,task,assignment,task,assignment,new,box,task,assignment,box,connection,task,assignment,id,return,task,assignment,get,info,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxTasksManager -> public BoxTask addFileTask(String fileId, BoxTask.Action action, Date dueAt, String message);1488797924;Add task to file.__@param fileId_- the id of file to add task to._@param action_- the action the task assignee will be prompted to do._@param dueAt_- - the day at which this task is due._@param message_- an optional message to include with the task._@return The new task.;public BoxTask addFileTask(String fileId, BoxTask.Action action, Date dueAt, String message) {_        try {_            LOG.debug("Adding task to file(id=" + fileId + ") to '" + message + "'")__            if (fileId == null) {_                throw new IllegalArgumentException("Parameter 'fileId' can not be null")__            }_            if (action == null) {_                throw new IllegalArgumentException("Parameter 'action' can not be null")__            }_            if (dueAt == null) {_                throw new IllegalArgumentException("Parameter 'dueAt' can not be null")__            }__            BoxFile fileToAddTaskOn = new BoxFile(boxConnection, fileId)__            return (BoxTask) fileToAddTaskOn.addTask(action, message, dueAt).getResource()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };add,task,to,file,param,file,id,the,id,of,file,to,add,task,to,param,action,the,action,the,task,assignee,will,be,prompted,to,do,param,due,at,the,day,at,which,this,task,is,due,param,message,an,optional,message,to,include,with,the,task,return,the,new,task;public,box,task,add,file,task,string,file,id,box,task,action,action,date,due,at,string,message,try,log,debug,adding,task,to,file,id,file,id,to,message,if,file,id,null,throw,new,illegal,argument,exception,parameter,file,id,can,not,be,null,if,action,null,throw,new,illegal,argument,exception,parameter,action,can,not,be,null,if,due,at,null,throw,new,illegal,argument,exception,parameter,due,at,can,not,be,null,box,file,file,to,add,task,on,new,box,file,box,connection,file,id,return,box,task,file,to,add,task,on,add,task,action,message,due,at,get,resource,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxTasksManager -> public BoxTask addFileTask(String fileId, BoxTask.Action action, Date dueAt, String message);1523968787;Add task to file.__@param fileId_- the id of file to add task to._@param action_- the action the task assignee will be prompted to do._@param dueAt_- - the day at which this task is due._@param message_- an optional message to include with the task._@return The new task.;public BoxTask addFileTask(String fileId, BoxTask.Action action, Date dueAt, String message) {_        try {_            LOG.debug("Adding task to file(id=" + fileId + ") to '" + message + "'")__            if (fileId == null) {_                throw new IllegalArgumentException("Parameter 'fileId' can not be null")__            }_            if (action == null) {_                throw new IllegalArgumentException("Parameter 'action' can not be null")__            }_            if (dueAt == null) {_                throw new IllegalArgumentException("Parameter 'dueAt' can not be null")__            }__            BoxFile fileToAddTaskOn = new BoxFile(boxConnection, fileId)__            return fileToAddTaskOn.addTask(action, message, dueAt).getResource()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };add,task,to,file,param,file,id,the,id,of,file,to,add,task,to,param,action,the,action,the,task,assignee,will,be,prompted,to,do,param,due,at,the,day,at,which,this,task,is,due,param,message,an,optional,message,to,include,with,the,task,return,the,new,task;public,box,task,add,file,task,string,file,id,box,task,action,action,date,due,at,string,message,try,log,debug,adding,task,to,file,id,file,id,to,message,if,file,id,null,throw,new,illegal,argument,exception,parameter,file,id,can,not,be,null,if,action,null,throw,new,illegal,argument,exception,parameter,action,can,not,be,null,if,due,at,null,throw,new,illegal,argument,exception,parameter,due,at,can,not,be,null,box,file,file,to,add,task,on,new,box,file,box,connection,file,id,return,file,to,add,task,on,add,task,action,message,due,at,get,resource,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxTasksManager -> public BoxTask addFileTask(String fileId, BoxTask.Action action, Date dueAt, String message);1536687142;Add task to file.__@param fileId_- the id of file to add task to._@param action_- the action the task assignee will be prompted to do._@param dueAt_- - the day at which this task is due._@param message_- an optional message to include with the task._@return The new task.;public BoxTask addFileTask(String fileId, BoxTask.Action action, Date dueAt, String message) {_        try {_            LOG.debug("Adding task to file(id=" + fileId + ") to '" + message + "'")__            if (fileId == null) {_                throw new IllegalArgumentException("Parameter 'fileId' can not be null")__            }_            if (action == null) {_                throw new IllegalArgumentException("Parameter 'action' can not be null")__            }_            if (dueAt == null) {_                throw new IllegalArgumentException("Parameter 'dueAt' can not be null")__            }__            BoxFile fileToAddTaskOn = new BoxFile(boxConnection, fileId)__            return fileToAddTaskOn.addTask(action, message, dueAt).getResource()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };add,task,to,file,param,file,id,the,id,of,file,to,add,task,to,param,action,the,action,the,task,assignee,will,be,prompted,to,do,param,due,at,the,day,at,which,this,task,is,due,param,message,an,optional,message,to,include,with,the,task,return,the,new,task;public,box,task,add,file,task,string,file,id,box,task,action,action,date,due,at,string,message,try,log,debug,adding,task,to,file,id,file,id,to,message,if,file,id,null,throw,new,illegal,argument,exception,parameter,file,id,can,not,be,null,if,action,null,throw,new,illegal,argument,exception,parameter,action,can,not,be,null,if,due,at,null,throw,new,illegal,argument,exception,parameter,due,at,can,not,be,null,box,file,file,to,add,task,on,new,box,file,box,connection,file,id,return,file,to,add,task,on,add,task,action,message,due,at,get,resource,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
