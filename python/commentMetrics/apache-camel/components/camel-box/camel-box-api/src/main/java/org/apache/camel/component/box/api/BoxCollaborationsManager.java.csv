# id;timestamp;commentText;codeText;commentWords;codeWords
BoxCollaborationsManager -> public BoxCollaboration.Info getCollaborationInfo(String collaborationId);1488797924;Get collaboration information.__@param collaborationId_- the id of collaboration._@return The collaboration information.;public BoxCollaboration.Info getCollaborationInfo(String collaborationId) {_        try {_            LOG.debug("Getting info for collaboration(id=" + collaborationId + ")")__            if (collaborationId == null) {_                throw new IllegalArgumentException("Parameter 'collaborationId' can not be null")__            }__            BoxCollaboration collaboration = new BoxCollaboration(boxConnection, collaborationId)___            return collaboration.getInfo()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,collaboration,information,param,collaboration,id,the,id,of,collaboration,return,the,collaboration,information;public,box,collaboration,info,get,collaboration,info,string,collaboration,id,try,log,debug,getting,info,for,collaboration,id,collaboration,id,if,collaboration,id,null,throw,new,illegal,argument,exception,parameter,collaboration,id,can,not,be,null,box,collaboration,collaboration,new,box,collaboration,box,connection,collaboration,id,return,collaboration,get,info,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxCollaborationsManager -> public BoxCollaboration.Info getCollaborationInfo(String collaborationId);1488798624;Get collaboration information.__@param collaborationId_- the id of collaboration._@return The collaboration information.;public BoxCollaboration.Info getCollaborationInfo(String collaborationId) {_        try {_            LOG.debug("Getting info for collaboration(id=" + collaborationId + ")")__            if (collaborationId == null) {_                throw new IllegalArgumentException("Parameter 'collaborationId' can not be null")__            }__            BoxCollaboration collaboration = new BoxCollaboration(boxConnection, collaborationId)___            return collaboration.getInfo()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,collaboration,information,param,collaboration,id,the,id,of,collaboration,return,the,collaboration,information;public,box,collaboration,info,get,collaboration,info,string,collaboration,id,try,log,debug,getting,info,for,collaboration,id,collaboration,id,if,collaboration,id,null,throw,new,illegal,argument,exception,parameter,collaboration,id,can,not,be,null,box,collaboration,collaboration,new,box,collaboration,box,connection,collaboration,id,return,collaboration,get,info,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxCollaborationsManager -> public BoxCollaboration.Info getCollaborationInfo(String collaborationId);1528387875;Get collaboration information.__@param collaborationId_- the id of collaboration._@return The collaboration information.;public BoxCollaboration.Info getCollaborationInfo(String collaborationId) {_        try {_            LOG.debug("Getting info for collaboration(id=" + collaborationId + ")")__            if (collaborationId == null) {_                throw new IllegalArgumentException("Parameter 'collaborationId' can not be null")__            }__            BoxCollaboration collaboration = new BoxCollaboration(boxConnection, collaborationId)___            return collaboration.getInfo()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,collaboration,information,param,collaboration,id,the,id,of,collaboration,return,the,collaboration,information;public,box,collaboration,info,get,collaboration,info,string,collaboration,id,try,log,debug,getting,info,for,collaboration,id,collaboration,id,if,collaboration,id,null,throw,new,illegal,argument,exception,parameter,collaboration,id,can,not,be,null,box,collaboration,collaboration,new,box,collaboration,box,connection,collaboration,id,return,collaboration,get,info,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxCollaborationsManager -> public BoxCollaboration.Info getCollaborationInfo(String collaborationId);1536687142;Get collaboration information.__@param collaborationId_- the id of collaboration._@return The collaboration information.;public BoxCollaboration.Info getCollaborationInfo(String collaborationId) {_        try {_            LOG.debug("Getting info for collaboration(id={})", collaborationId)__            if (collaborationId == null) {_                throw new IllegalArgumentException("Parameter 'collaborationId' can not be null")__            }__            BoxCollaboration collaboration = new BoxCollaboration(boxConnection, collaborationId)___            return collaboration.getInfo()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,collaboration,information,param,collaboration,id,the,id,of,collaboration,return,the,collaboration,information;public,box,collaboration,info,get,collaboration,info,string,collaboration,id,try,log,debug,getting,info,for,collaboration,id,collaboration,id,if,collaboration,id,null,throw,new,illegal,argument,exception,parameter,collaboration,id,can,not,be,null,box,collaboration,collaboration,new,box,collaboration,box,connection,collaboration,id,return,collaboration,get,info,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxCollaborationsManager -> public void deleteCollaboration(String collaborationId);1488797924;Delete collaboration.__@param collaborationId_- the id of comment to change._@param message_- the new message for the comment._@return The comment with changed message.;public void deleteCollaboration(String collaborationId) {_        try {_            LOG.debug("Deleting collaboration(id=" + collaborationId + ")")__            if (collaborationId == null) {_                throw new IllegalArgumentException("Parameter 'collaborationId' can not be null")__            }_            BoxCollaboration collaboration = new BoxCollaboration(boxConnection, collaborationId)__            collaboration.delete()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };delete,collaboration,param,collaboration,id,the,id,of,comment,to,change,param,message,the,new,message,for,the,comment,return,the,comment,with,changed,message;public,void,delete,collaboration,string,collaboration,id,try,log,debug,deleting,collaboration,id,collaboration,id,if,collaboration,id,null,throw,new,illegal,argument,exception,parameter,collaboration,id,can,not,be,null,box,collaboration,collaboration,new,box,collaboration,box,connection,collaboration,id,collaboration,delete,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxCollaborationsManager -> public void deleteCollaboration(String collaborationId);1488798624;Delete collaboration.__@param collaborationId_- the id of comment to change._@return The comment with changed message.;public void deleteCollaboration(String collaborationId) {_        try {_            LOG.debug("Deleting collaboration(id=" + collaborationId + ")")__            if (collaborationId == null) {_                throw new IllegalArgumentException("Parameter 'collaborationId' can not be null")__            }_            BoxCollaboration collaboration = new BoxCollaboration(boxConnection, collaborationId)__            collaboration.delete()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };delete,collaboration,param,collaboration,id,the,id,of,comment,to,change,return,the,comment,with,changed,message;public,void,delete,collaboration,string,collaboration,id,try,log,debug,deleting,collaboration,id,collaboration,id,if,collaboration,id,null,throw,new,illegal,argument,exception,parameter,collaboration,id,can,not,be,null,box,collaboration,collaboration,new,box,collaboration,box,connection,collaboration,id,collaboration,delete,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxCollaborationsManager -> public void deleteCollaboration(String collaborationId);1528387875;Delete collaboration.__@param collaborationId_- the id of comment to change.;public void deleteCollaboration(String collaborationId) {_        try {_            LOG.debug("Deleting collaboration(id=" + collaborationId + ")")__            if (collaborationId == null) {_                throw new IllegalArgumentException("Parameter 'collaborationId' can not be null")__            }_            BoxCollaboration collaboration = new BoxCollaboration(boxConnection, collaborationId)__            collaboration.delete()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };delete,collaboration,param,collaboration,id,the,id,of,comment,to,change;public,void,delete,collaboration,string,collaboration,id,try,log,debug,deleting,collaboration,id,collaboration,id,if,collaboration,id,null,throw,new,illegal,argument,exception,parameter,collaboration,id,can,not,be,null,box,collaboration,collaboration,new,box,collaboration,box,connection,collaboration,id,collaboration,delete,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxCollaborationsManager -> public void deleteCollaboration(String collaborationId);1536687142;Delete collaboration.__@param collaborationId_- the id of comment to change.;public void deleteCollaboration(String collaborationId) {_        try {_            LOG.debug("Deleting collaboration(id={})", collaborationId)__            if (collaborationId == null) {_                throw new IllegalArgumentException("Parameter 'collaborationId' can not be null")__            }_            BoxCollaboration collaboration = new BoxCollaboration(boxConnection, collaborationId)__            collaboration.delete()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };delete,collaboration,param,collaboration,id,the,id,of,comment,to,change;public,void,delete,collaboration,string,collaboration,id,try,log,debug,deleting,collaboration,id,collaboration,id,if,collaboration,id,null,throw,new,illegal,argument,exception,parameter,collaboration,id,can,not,be,null,box,collaboration,collaboration,new,box,collaboration,box,connection,collaboration,id,collaboration,delete,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxCollaborationsManager -> public BoxCollaborationsManager(BoxAPIConnection boxConnection);1488797924;Create collaborations manager to manage the comments of Box connection's_authenticated user.__@param boxConnection_- Box connection to authenticated user account.;public BoxCollaborationsManager(BoxAPIConnection boxConnection) {_        this.boxConnection = boxConnection__    };create,collaborations,manager,to,manage,the,comments,of,box,connection,s,authenticated,user,param,box,connection,box,connection,to,authenticated,user,account;public,box,collaborations,manager,box,apiconnection,box,connection,this,box,connection,box,connection
BoxCollaborationsManager -> public BoxCollaborationsManager(BoxAPIConnection boxConnection);1488798624;Create collaborations manager to manage the comments of Box connection's_authenticated user.__@param boxConnection_- Box connection to authenticated user account.;public BoxCollaborationsManager(BoxAPIConnection boxConnection) {_        this.boxConnection = boxConnection__    };create,collaborations,manager,to,manage,the,comments,of,box,connection,s,authenticated,user,param,box,connection,box,connection,to,authenticated,user,account;public,box,collaborations,manager,box,apiconnection,box,connection,this,box,connection,box,connection
BoxCollaborationsManager -> public BoxCollaborationsManager(BoxAPIConnection boxConnection);1528387875;Create collaborations manager to manage the comments of Box connection's_authenticated user.__@param boxConnection_- Box connection to authenticated user account.;public BoxCollaborationsManager(BoxAPIConnection boxConnection) {_        this.boxConnection = boxConnection__    };create,collaborations,manager,to,manage,the,comments,of,box,connection,s,authenticated,user,param,box,connection,box,connection,to,authenticated,user,account;public,box,collaborations,manager,box,apiconnection,box,connection,this,box,connection,box,connection
BoxCollaborationsManager -> public BoxCollaborationsManager(BoxAPIConnection boxConnection);1536687142;Create collaborations manager to manage the comments of Box connection's_authenticated user.__@param boxConnection_- Box connection to authenticated user account.;public BoxCollaborationsManager(BoxAPIConnection boxConnection) {_        this.boxConnection = boxConnection__    };create,collaborations,manager,to,manage,the,comments,of,box,connection,s,authenticated,user,param,box,connection,box,connection,to,authenticated,user,account;public,box,collaborations,manager,box,apiconnection,box,connection,this,box,connection,box,connection
BoxCollaborationsManager -> @SuppressWarnings("unused")                                       public BoxCollaboration addFolderCollaboration(String folderId, BoxCollaborator collaborator,             BoxCollaboration.Role role);1488797924;Add a collaboration to this folder.__@param folderId_- the id of folder to add collaboration to._@param collaborator_- the collaborator to add._@param role_- the role of the collaborator.__@return The new collaboration.;@SuppressWarnings("unused") _                                _    public BoxCollaboration addFolderCollaboration(String folderId, BoxCollaborator collaborator,_            BoxCollaboration.Role role) {_        try {_            LOG.debug("Creating  collaborations for folder(id=" + folderId + ") with collaborator("_                    + collaborator.getID() + ")")__            if (folderId == null) {_                throw new IllegalArgumentException("Parameter 'folderId' can not be null")__            }_            if (collaborator == null) {_                throw new IllegalArgumentException("Parameter 'collaborator' can not be null")__            }_            if (role == null) {_                throw new IllegalArgumentException("Parameter 'role' can not be null")__            }__            BoxFolder folder = new BoxFolder(boxConnection, folderId)__            return folder.collaborate(collaborator, role).getResource()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };add,a,collaboration,to,this,folder,param,folder,id,the,id,of,folder,to,add,collaboration,to,param,collaborator,the,collaborator,to,add,param,role,the,role,of,the,collaborator,return,the,new,collaboration;suppress,warnings,unused,public,box,collaboration,add,folder,collaboration,string,folder,id,box,collaborator,collaborator,box,collaboration,role,role,try,log,debug,creating,collaborations,for,folder,id,folder,id,with,collaborator,collaborator,get,id,if,folder,id,null,throw,new,illegal,argument,exception,parameter,folder,id,can,not,be,null,if,collaborator,null,throw,new,illegal,argument,exception,parameter,collaborator,can,not,be,null,if,role,null,throw,new,illegal,argument,exception,parameter,role,can,not,be,null,box,folder,folder,new,box,folder,box,connection,folder,id,return,folder,collaborate,collaborator,role,get,resource,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxCollaborationsManager -> @SuppressWarnings("unused")                                       public BoxCollaboration addFolderCollaboration(String folderId, BoxCollaborator collaborator,             BoxCollaboration.Role role);1488798624;Add a collaboration to this folder.__@param folderId_- the id of folder to add collaboration to._@param collaborator_- the collaborator to add._@param role_- the role of the collaborator.__@return The new collaboration.;@SuppressWarnings("unused") _                                _    public BoxCollaboration addFolderCollaboration(String folderId, BoxCollaborator collaborator,_            BoxCollaboration.Role role) {_        try {_            LOG.debug("Creating  collaborations for folder(id=" + folderId + ") with collaborator("_                    + collaborator.getID() + ")")__            if (folderId == null) {_                throw new IllegalArgumentException("Parameter 'folderId' can not be null")__            }_            if (collaborator == null) {_                throw new IllegalArgumentException("Parameter 'collaborator' can not be null")__            }_            if (role == null) {_                throw new IllegalArgumentException("Parameter 'role' can not be null")__            }__            BoxFolder folder = new BoxFolder(boxConnection, folderId)__            return folder.collaborate(collaborator, role).getResource()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };add,a,collaboration,to,this,folder,param,folder,id,the,id,of,folder,to,add,collaboration,to,param,collaborator,the,collaborator,to,add,param,role,the,role,of,the,collaborator,return,the,new,collaboration;suppress,warnings,unused,public,box,collaboration,add,folder,collaboration,string,folder,id,box,collaborator,collaborator,box,collaboration,role,role,try,log,debug,creating,collaborations,for,folder,id,folder,id,with,collaborator,collaborator,get,id,if,folder,id,null,throw,new,illegal,argument,exception,parameter,folder,id,can,not,be,null,if,collaborator,null,throw,new,illegal,argument,exception,parameter,collaborator,can,not,be,null,if,role,null,throw,new,illegal,argument,exception,parameter,role,can,not,be,null,box,folder,folder,new,box,folder,box,connection,folder,id,return,folder,collaborate,collaborator,role,get,resource,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxCollaborationsManager -> @SuppressWarnings("unused")                                       public BoxCollaboration addFolderCollaboration(String folderId, BoxCollaborator collaborator,             BoxCollaboration.Role role);1528387875;Add a collaboration to this folder.__@param folderId_- the id of folder to add collaboration to._@param collaborator_- the collaborator to add._@param role_- the role of the collaborator.__@return The new collaboration.;@SuppressWarnings("unused") _                                _    public BoxCollaboration addFolderCollaboration(String folderId, BoxCollaborator collaborator,_            BoxCollaboration.Role role) {_        try {_            LOG.debug("Creating  collaborations for folder(id=" + folderId + ") with collaborator("_                    + collaborator.getID() + ")")__            if (folderId == null) {_                throw new IllegalArgumentException("Parameter 'folderId' can not be null")__            }_            if (collaborator == null) {_                throw new IllegalArgumentException("Parameter 'collaborator' can not be null")__            }_            if (role == null) {_                throw new IllegalArgumentException("Parameter 'role' can not be null")__            }__            BoxFolder folder = new BoxFolder(boxConnection, folderId)__            return folder.collaborate(collaborator, role).getResource()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };add,a,collaboration,to,this,folder,param,folder,id,the,id,of,folder,to,add,collaboration,to,param,collaborator,the,collaborator,to,add,param,role,the,role,of,the,collaborator,return,the,new,collaboration;suppress,warnings,unused,public,box,collaboration,add,folder,collaboration,string,folder,id,box,collaborator,collaborator,box,collaboration,role,role,try,log,debug,creating,collaborations,for,folder,id,folder,id,with,collaborator,collaborator,get,id,if,folder,id,null,throw,new,illegal,argument,exception,parameter,folder,id,can,not,be,null,if,collaborator,null,throw,new,illegal,argument,exception,parameter,collaborator,can,not,be,null,if,role,null,throw,new,illegal,argument,exception,parameter,role,can,not,be,null,box,folder,folder,new,box,folder,box,connection,folder,id,return,folder,collaborate,collaborator,role,get,resource,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxCollaborationsManager -> @SuppressWarnings("unused")                                       public BoxCollaboration addFolderCollaboration(String folderId, BoxCollaborator collaborator,             BoxCollaboration.Role role);1536687142;Add a collaboration to this folder.__@param folderId_- the id of folder to add collaboration to._@param collaborator_- the collaborator to add._@param role_- the role of the collaborator.__@return The new collaboration.;@SuppressWarnings("unused") _                                _    public BoxCollaboration addFolderCollaboration(String folderId, BoxCollaborator collaborator,_            BoxCollaboration.Role role) {_        try {_            LOG.debug("Creating  collaborations for folder(id=" + folderId + ") with collaborator("_                    + collaborator.getID() + ")")__            if (folderId == null) {_                throw new IllegalArgumentException("Parameter 'folderId' can not be null")__            }_            if (collaborator == null) {_                throw new IllegalArgumentException("Parameter 'collaborator' can not be null")__            }_            if (role == null) {_                throw new IllegalArgumentException("Parameter 'role' can not be null")__            }__            BoxFolder folder = new BoxFolder(boxConnection, folderId)__            return folder.collaborate(collaborator, role).getResource()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };add,a,collaboration,to,this,folder,param,folder,id,the,id,of,folder,to,add,collaboration,to,param,collaborator,the,collaborator,to,add,param,role,the,role,of,the,collaborator,return,the,new,collaboration;suppress,warnings,unused,public,box,collaboration,add,folder,collaboration,string,folder,id,box,collaborator,collaborator,box,collaboration,role,role,try,log,debug,creating,collaborations,for,folder,id,folder,id,with,collaborator,collaborator,get,id,if,folder,id,null,throw,new,illegal,argument,exception,parameter,folder,id,can,not,be,null,if,collaborator,null,throw,new,illegal,argument,exception,parameter,collaborator,can,not,be,null,if,role,null,throw,new,illegal,argument,exception,parameter,role,can,not,be,null,box,folder,folder,new,box,folder,box,connection,folder,id,return,folder,collaborate,collaborator,role,get,resource,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxCollaborationsManager -> public Collection<BoxCollaboration.Info> getPendingCollaborations();1488797924;Get all pending collaboration invites for the current user.__@return A collection of pending collaboration information.;public Collection<BoxCollaboration.Info> getPendingCollaborations() {_        try {__            return BoxCollaboration.getPendingCollaborations(boxConnection)___        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,all,pending,collaboration,invites,for,the,current,user,return,a,collection,of,pending,collaboration,information;public,collection,box,collaboration,info,get,pending,collaborations,try,return,box,collaboration,get,pending,collaborations,box,connection,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxCollaborationsManager -> public Collection<BoxCollaboration.Info> getPendingCollaborations();1488798624;Get all pending collaboration invites for the current user.__@return A collection of pending collaboration information.;public Collection<BoxCollaboration.Info> getPendingCollaborations() {_        try {_            return BoxCollaboration.getPendingCollaborations(boxConnection)__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,all,pending,collaboration,invites,for,the,current,user,return,a,collection,of,pending,collaboration,information;public,collection,box,collaboration,info,get,pending,collaborations,try,return,box,collaboration,get,pending,collaborations,box,connection,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxCollaborationsManager -> public Collection<BoxCollaboration.Info> getPendingCollaborations();1528387875;Get all pending collaboration invites for the current user.__@return A collection of pending collaboration information.;public Collection<BoxCollaboration.Info> getPendingCollaborations() {_        try {_            return BoxCollaboration.getPendingCollaborations(boxConnection)__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,all,pending,collaboration,invites,for,the,current,user,return,a,collection,of,pending,collaboration,information;public,collection,box,collaboration,info,get,pending,collaborations,try,return,box,collaboration,get,pending,collaborations,box,connection,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxCollaborationsManager -> public Collection<BoxCollaboration.Info> getPendingCollaborations();1536687142;Get all pending collaboration invites for the current user.__@return A collection of pending collaboration information.;public Collection<BoxCollaboration.Info> getPendingCollaborations() {_        try {_            return BoxCollaboration.getPendingCollaborations(boxConnection)__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,all,pending,collaboration,invites,for,the,current,user,return,a,collection,of,pending,collaboration,information;public,collection,box,collaboration,info,get,pending,collaborations,try,return,box,collaboration,get,pending,collaborations,box,connection,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxCollaborationsManager -> public BoxCollaboration updateCollaborationInfo(String collaborationId, BoxCollaboration.Info info);1488797924;Update collaboration information.__@param collaborationId_- the id of collaboration._@return The collaboration with updated information.;public BoxCollaboration updateCollaborationInfo(String collaborationId, BoxCollaboration.Info info) {_        try {_            LOG.debug("Updating info for collaboration(id=" + collaborationId + ")")__            if (collaborationId == null) {_                throw new IllegalArgumentException("Parameter 'collaborationId' can not be null")__            }__            BoxCollaboration collaboration = new BoxCollaboration(boxConnection, collaborationId)___            collaboration.updateInfo(info)__            return collaboration__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };update,collaboration,information,param,collaboration,id,the,id,of,collaboration,return,the,collaboration,with,updated,information;public,box,collaboration,update,collaboration,info,string,collaboration,id,box,collaboration,info,info,try,log,debug,updating,info,for,collaboration,id,collaboration,id,if,collaboration,id,null,throw,new,illegal,argument,exception,parameter,collaboration,id,can,not,be,null,box,collaboration,collaboration,new,box,collaboration,box,connection,collaboration,id,collaboration,update,info,info,return,collaboration,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxCollaborationsManager -> public BoxCollaboration updateCollaborationInfo(String collaborationId, BoxCollaboration.Info info);1488798624;Update collaboration information.__@param collaborationId_- the id of collaboration._@return The collaboration with updated information.;public BoxCollaboration updateCollaborationInfo(String collaborationId, BoxCollaboration.Info info) {_        try {_            LOG.debug("Updating info for collaboration(id=" + collaborationId + ")")__            if (collaborationId == null) {_                throw new IllegalArgumentException("Parameter 'collaborationId' can not be null")__            }__            BoxCollaboration collaboration = new BoxCollaboration(boxConnection, collaborationId)___            collaboration.updateInfo(info)__            return collaboration__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };update,collaboration,information,param,collaboration,id,the,id,of,collaboration,return,the,collaboration,with,updated,information;public,box,collaboration,update,collaboration,info,string,collaboration,id,box,collaboration,info,info,try,log,debug,updating,info,for,collaboration,id,collaboration,id,if,collaboration,id,null,throw,new,illegal,argument,exception,parameter,collaboration,id,can,not,be,null,box,collaboration,collaboration,new,box,collaboration,box,connection,collaboration,id,collaboration,update,info,info,return,collaboration,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxCollaborationsManager -> public BoxCollaboration updateCollaborationInfo(String collaborationId, BoxCollaboration.Info info);1528387875;Update collaboration information.__@param collaborationId_- the id of collaboration._@return The collaboration with updated information.;public BoxCollaboration updateCollaborationInfo(String collaborationId, BoxCollaboration.Info info) {_        try {_            LOG.debug("Updating info for collaboration(id=" + collaborationId + ")")__            if (collaborationId == null) {_                throw new IllegalArgumentException("Parameter 'collaborationId' can not be null")__            }__            BoxCollaboration collaboration = new BoxCollaboration(boxConnection, collaborationId)___            collaboration.updateInfo(info)__            return collaboration__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };update,collaboration,information,param,collaboration,id,the,id,of,collaboration,return,the,collaboration,with,updated,information;public,box,collaboration,update,collaboration,info,string,collaboration,id,box,collaboration,info,info,try,log,debug,updating,info,for,collaboration,id,collaboration,id,if,collaboration,id,null,throw,new,illegal,argument,exception,parameter,collaboration,id,can,not,be,null,box,collaboration,collaboration,new,box,collaboration,box,connection,collaboration,id,collaboration,update,info,info,return,collaboration,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxCollaborationsManager -> public BoxCollaboration updateCollaborationInfo(String collaborationId, BoxCollaboration.Info info);1536687142;Update collaboration information.__@param collaborationId_- the id of collaboration._@return The collaboration with updated information.;public BoxCollaboration updateCollaborationInfo(String collaborationId, BoxCollaboration.Info info) {_        try {_            LOG.debug("Updating info for collaboration(id={})", collaborationId)__            if (collaborationId == null) {_                throw new IllegalArgumentException("Parameter 'collaborationId' can not be null")__            }__            BoxCollaboration collaboration = new BoxCollaboration(boxConnection, collaborationId)___            collaboration.updateInfo(info)__            return collaboration__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };update,collaboration,information,param,collaboration,id,the,id,of,collaboration,return,the,collaboration,with,updated,information;public,box,collaboration,update,collaboration,info,string,collaboration,id,box,collaboration,info,info,try,log,debug,updating,info,for,collaboration,id,collaboration,id,if,collaboration,id,null,throw,new,illegal,argument,exception,parameter,collaboration,id,can,not,be,null,box,collaboration,collaboration,new,box,collaboration,box,connection,collaboration,id,collaboration,update,info,info,return,collaboration,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxCollaborationsManager -> public Collection<BoxCollaboration.Info> getFolderCollaborations(String folderId);1488797924;Get information about all of the collaborations for folder.__@param folderId_- the id of folder to get collaborations information on.__@return The collection of collaboration information for folder.;public Collection<BoxCollaboration.Info> getFolderCollaborations(String folderId) {_        try {_            LOG.debug("Getting collaborations for folder(id=" + folderId + ")")__            if (folderId == null) {_                throw new IllegalArgumentException("Parameter 'folderId' can not be null")__            }_            BoxFolder folder = new BoxFolder(boxConnection, folderId)__            return folder.getCollaborations()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,information,about,all,of,the,collaborations,for,folder,param,folder,id,the,id,of,folder,to,get,collaborations,information,on,return,the,collection,of,collaboration,information,for,folder;public,collection,box,collaboration,info,get,folder,collaborations,string,folder,id,try,log,debug,getting,collaborations,for,folder,id,folder,id,if,folder,id,null,throw,new,illegal,argument,exception,parameter,folder,id,can,not,be,null,box,folder,folder,new,box,folder,box,connection,folder,id,return,folder,get,collaborations,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxCollaborationsManager -> public Collection<BoxCollaboration.Info> getFolderCollaborations(String folderId);1488798624;Get information about all of the collaborations for folder.__@param folderId_- the id of folder to get collaborations information on.__@return The collection of collaboration information for folder.;public Collection<BoxCollaboration.Info> getFolderCollaborations(String folderId) {_        try {_            LOG.debug("Getting collaborations for folder(id=" + folderId + ")")__            if (folderId == null) {_                throw new IllegalArgumentException("Parameter 'folderId' can not be null")__            }_            BoxFolder folder = new BoxFolder(boxConnection, folderId)__            return folder.getCollaborations()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,information,about,all,of,the,collaborations,for,folder,param,folder,id,the,id,of,folder,to,get,collaborations,information,on,return,the,collection,of,collaboration,information,for,folder;public,collection,box,collaboration,info,get,folder,collaborations,string,folder,id,try,log,debug,getting,collaborations,for,folder,id,folder,id,if,folder,id,null,throw,new,illegal,argument,exception,parameter,folder,id,can,not,be,null,box,folder,folder,new,box,folder,box,connection,folder,id,return,folder,get,collaborations,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxCollaborationsManager -> public Collection<BoxCollaboration.Info> getFolderCollaborations(String folderId);1528387875;Get information about all of the collaborations for folder.__@param folderId_- the id of folder to get collaborations information on.__@return The collection of collaboration information for folder.;public Collection<BoxCollaboration.Info> getFolderCollaborations(String folderId) {_        try {_            LOG.debug("Getting collaborations for folder(id=" + folderId + ")")__            if (folderId == null) {_                throw new IllegalArgumentException("Parameter 'folderId' can not be null")__            }_            BoxFolder folder = new BoxFolder(boxConnection, folderId)__            return folder.getCollaborations()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,information,about,all,of,the,collaborations,for,folder,param,folder,id,the,id,of,folder,to,get,collaborations,information,on,return,the,collection,of,collaboration,information,for,folder;public,collection,box,collaboration,info,get,folder,collaborations,string,folder,id,try,log,debug,getting,collaborations,for,folder,id,folder,id,if,folder,id,null,throw,new,illegal,argument,exception,parameter,folder,id,can,not,be,null,box,folder,folder,new,box,folder,box,connection,folder,id,return,folder,get,collaborations,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxCollaborationsManager -> public Collection<BoxCollaboration.Info> getFolderCollaborations(String folderId);1536687142;Get information about all of the collaborations for folder.__@param folderId_- the id of folder to get collaborations information on.__@return The collection of collaboration information for folder.;public Collection<BoxCollaboration.Info> getFolderCollaborations(String folderId) {_        try {_            LOG.debug("Getting collaborations for folder(id={})", folderId)__            if (folderId == null) {_                throw new IllegalArgumentException("Parameter 'folderId' can not be null")__            }_            BoxFolder folder = new BoxFolder(boxConnection, folderId)__            return folder.getCollaborations()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };get,information,about,all,of,the,collaborations,for,folder,param,folder,id,the,id,of,folder,to,get,collaborations,information,on,return,the,collection,of,collaboration,information,for,folder;public,collection,box,collaboration,info,get,folder,collaborations,string,folder,id,try,log,debug,getting,collaborations,for,folder,id,folder,id,if,folder,id,null,throw,new,illegal,argument,exception,parameter,folder,id,can,not,be,null,box,folder,folder,new,box,folder,box,connection,folder,id,return,folder,get,collaborations,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxCollaborationsManager -> public BoxCollaboration addFolderCollaborationByEmail(String folderId, String email, BoxCollaboration.Role role);1488797924;Add a collaboration to this folder. An email will be sent to the_collaborator if they don't already have a Box account.__@param folderId_- the id of folder to add collaboration to._@param email_- the email address of the collaborator to add._@param role_- the role of the collaborator.__@return The new collaboration.;public BoxCollaboration addFolderCollaborationByEmail(String folderId, String email, BoxCollaboration.Role role) {_        try {_            LOG.debug("Creating  collaborations for folder(id=" + folderId + ") with collaborator(" + email + ")")__            if (folderId == null) {_                throw new IllegalArgumentException("Parameter 'folderId' can not be null")__            }_            if (email == null) {_                throw new IllegalArgumentException("Parameter 'email' can not be null")__            }_            if (role == null) {_                throw new IllegalArgumentException("Parameter 'role' can not be null")__            }__            BoxFolder folder = new BoxFolder(boxConnection, folderId)__            return folder.collaborate(email, role).getResource()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };add,a,collaboration,to,this,folder,an,email,will,be,sent,to,the,collaborator,if,they,don,t,already,have,a,box,account,param,folder,id,the,id,of,folder,to,add,collaboration,to,param,email,the,email,address,of,the,collaborator,to,add,param,role,the,role,of,the,collaborator,return,the,new,collaboration;public,box,collaboration,add,folder,collaboration,by,email,string,folder,id,string,email,box,collaboration,role,role,try,log,debug,creating,collaborations,for,folder,id,folder,id,with,collaborator,email,if,folder,id,null,throw,new,illegal,argument,exception,parameter,folder,id,can,not,be,null,if,email,null,throw,new,illegal,argument,exception,parameter,email,can,not,be,null,if,role,null,throw,new,illegal,argument,exception,parameter,role,can,not,be,null,box,folder,folder,new,box,folder,box,connection,folder,id,return,folder,collaborate,email,role,get,resource,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxCollaborationsManager -> public BoxCollaboration addFolderCollaborationByEmail(String folderId, String email, BoxCollaboration.Role role);1488798624;Add a collaboration to this folder. An email will be sent to the_collaborator if they don't already have a Box account.__@param folderId_- the id of folder to add collaboration to._@param email_- the email address of the collaborator to add._@param role_- the role of the collaborator.__@return The new collaboration.;public BoxCollaboration addFolderCollaborationByEmail(String folderId, String email, BoxCollaboration.Role role) {_        try {_            LOG.debug("Creating  collaborations for folder(id=" + folderId + ") with collaborator(" + email + ")")__            if (folderId == null) {_                throw new IllegalArgumentException("Parameter 'folderId' can not be null")__            }_            if (email == null) {_                throw new IllegalArgumentException("Parameter 'email' can not be null")__            }_            if (role == null) {_                throw new IllegalArgumentException("Parameter 'role' can not be null")__            }__            BoxFolder folder = new BoxFolder(boxConnection, folderId)__            return folder.collaborate(email, role).getResource()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };add,a,collaboration,to,this,folder,an,email,will,be,sent,to,the,collaborator,if,they,don,t,already,have,a,box,account,param,folder,id,the,id,of,folder,to,add,collaboration,to,param,email,the,email,address,of,the,collaborator,to,add,param,role,the,role,of,the,collaborator,return,the,new,collaboration;public,box,collaboration,add,folder,collaboration,by,email,string,folder,id,string,email,box,collaboration,role,role,try,log,debug,creating,collaborations,for,folder,id,folder,id,with,collaborator,email,if,folder,id,null,throw,new,illegal,argument,exception,parameter,folder,id,can,not,be,null,if,email,null,throw,new,illegal,argument,exception,parameter,email,can,not,be,null,if,role,null,throw,new,illegal,argument,exception,parameter,role,can,not,be,null,box,folder,folder,new,box,folder,box,connection,folder,id,return,folder,collaborate,email,role,get,resource,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxCollaborationsManager -> public BoxCollaboration addFolderCollaborationByEmail(String folderId, String email, BoxCollaboration.Role role);1528387875;Add a collaboration to this folder. An email will be sent to the_collaborator if they don't already have a Box account.__@param folderId_- the id of folder to add collaboration to._@param email_- the email address of the collaborator to add._@param role_- the role of the collaborator.__@return The new collaboration.;public BoxCollaboration addFolderCollaborationByEmail(String folderId, String email, BoxCollaboration.Role role) {_        try {_            LOG.debug("Creating  collaborations for folder(id=" + folderId + ") with collaborator(" + email + ")")__            if (folderId == null) {_                throw new IllegalArgumentException("Parameter 'folderId' can not be null")__            }_            if (email == null) {_                throw new IllegalArgumentException("Parameter 'email' can not be null")__            }_            if (role == null) {_                throw new IllegalArgumentException("Parameter 'role' can not be null")__            }__            BoxFolder folder = new BoxFolder(boxConnection, folderId)__            return folder.collaborate(email, role).getResource()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };add,a,collaboration,to,this,folder,an,email,will,be,sent,to,the,collaborator,if,they,don,t,already,have,a,box,account,param,folder,id,the,id,of,folder,to,add,collaboration,to,param,email,the,email,address,of,the,collaborator,to,add,param,role,the,role,of,the,collaborator,return,the,new,collaboration;public,box,collaboration,add,folder,collaboration,by,email,string,folder,id,string,email,box,collaboration,role,role,try,log,debug,creating,collaborations,for,folder,id,folder,id,with,collaborator,email,if,folder,id,null,throw,new,illegal,argument,exception,parameter,folder,id,can,not,be,null,if,email,null,throw,new,illegal,argument,exception,parameter,email,can,not,be,null,if,role,null,throw,new,illegal,argument,exception,parameter,role,can,not,be,null,box,folder,folder,new,box,folder,box,connection,folder,id,return,folder,collaborate,email,role,get,resource,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
BoxCollaborationsManager -> public BoxCollaboration addFolderCollaborationByEmail(String folderId, String email, BoxCollaboration.Role role);1536687142;Add a collaboration to this folder. An email will be sent to the_collaborator if they don't already have a Box account.__@param folderId_- the id of folder to add collaboration to._@param email_- the email address of the collaborator to add._@param role_- the role of the collaborator.__@return The new collaboration.;public BoxCollaboration addFolderCollaborationByEmail(String folderId, String email, BoxCollaboration.Role role) {_        try {_            LOG.debug("Creating  collaborations for folder(id=" + folderId + ") with collaborator(" + email + ")")__            if (folderId == null) {_                throw new IllegalArgumentException("Parameter 'folderId' can not be null")__            }_            if (email == null) {_                throw new IllegalArgumentException("Parameter 'email' can not be null")__            }_            if (role == null) {_                throw new IllegalArgumentException("Parameter 'role' can not be null")__            }__            BoxFolder folder = new BoxFolder(boxConnection, folderId)__            return folder.collaborate(email, role).getResource()__        } catch (BoxAPIException e) {_            throw new RuntimeException(_                    String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e)__        }_    };add,a,collaboration,to,this,folder,an,email,will,be,sent,to,the,collaborator,if,they,don,t,already,have,a,box,account,param,folder,id,the,id,of,folder,to,add,collaboration,to,param,email,the,email,address,of,the,collaborator,to,add,param,role,the,role,of,the,collaborator,return,the,new,collaboration;public,box,collaboration,add,folder,collaboration,by,email,string,folder,id,string,email,box,collaboration,role,role,try,log,debug,creating,collaborations,for,folder,id,folder,id,with,collaborator,email,if,folder,id,null,throw,new,illegal,argument,exception,parameter,folder,id,can,not,be,null,if,email,null,throw,new,illegal,argument,exception,parameter,email,can,not,be,null,if,role,null,throw,new,illegal,argument,exception,parameter,role,can,not,be,null,box,folder,folder,new,box,folder,box,connection,folder,id,return,folder,collaborate,email,role,get,resource,catch,box,apiexception,e,throw,new,runtime,exception,string,format,box,api,returned,the,error,code,d,n,n,s,e,get,response,code,e,get,response,e
