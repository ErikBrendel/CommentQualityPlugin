commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;6;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry registry = super.createRegistry().     registry.bind("listenerContainer", listenerContainer).     return registry. }
false;public;0;13;;@Test public void registerConsumerForTwoChannelTopics() throws Exception {     verify(listenerContainer).addMessageListener(any(MessageListener.class), collectionCaptor.capture()).     Collection<ChannelTopic> topics = collectionCaptor.getValue().     Iterator<ChannelTopic> topicIterator = topics.iterator().     Topic firstTopic = topicIterator.next().     Topic twoTopic = topicIterator.next().     assertEquals("one", firstTopic.getTopic()).     assertEquals("two", twoTopic.getTopic()). }
false;public;0;4;;public void configure() {     from("spring-redis://localhost:6379?command=SUBSCRIBE&channels=one,two&listenerContainer=#listenerContainer").to("mock:result"). }
false;protected;0;8;;protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          public void configure() {             from("spring-redis://localhost:6379?command=SUBSCRIBE&channels=one,two&listenerContainer=#listenerContainer").to("mock:result").         }     }. }
