commented;modifiers;parameterAmount;loc;comment;code
false;;1;3;;String getKey(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.KEY, String.class). }
false;;1;3;;String getStringValue(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.VALUE, String.class). }
false;;1;3;;Long getLongValue(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.VALUE, Long.class). }
false;;1;3;;String getDestination(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.DESTINATION, String.class). }
false;;1;3;;String getChannel(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.CHANNEL, String.class). }
false;;1;3;;Object getMessage(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.MESSAGE, Object.class). }
false;;1;3;;Long getIndex(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.INDEX, Long.class). }
false;;1;3;;String getPivot(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.PIVOT, String.class). }
false;;1;3;;String getPosition(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.POSITION, String.class). }
false;;1;3;;Long getCount(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.COUNT, Long.class). }
false;;1;3;;Long getStart(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.START, Long.class). }
false;;1;3;;Long getEnd(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.END, Long.class). }
false;;1;3;;Long getTimeout(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.TIMEOUT, Long.class). }
false;;1;3;;Long getOffset(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.OFFSET, Long.class). }
false;;1;3;;Long getValueAsLong(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.VALUE, Long.class). }
false;;1;3;;Collection<String> getFields(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.FIELDS, Collection.class). }
false;;1;3;;Map<String, Object> getValuesAsMap(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.VALUES, Map.class). }
false;;1;3;;Collection<Object> getValuesAsCollection(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.VALUES, Collection.class). }
false;;1;3;;Collection<String> getKeys(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.KEYS, Collection.class). }
false;;1;3;;Object getValue(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.VALUE, Object.class). }
false;;1;3;;Boolean getBooleanValue(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.VALUE, Boolean.class). }
false;;1;3;;String getField(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.FIELD, String.class). }
false;;1;3;;Long getTimestamp(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.TIMESTAMP, Long.class). }
false;;1;3;;String getPattern(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.PATTERN, String.class). }
false;;1;3;;Integer getDb(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.DB, Integer.class). }
false;;1;3;;Double getScore(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.SCORE, Double.class). }
false;;1;3;;Double getMin(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.MIN, Double.class). }
false;;1;3;;Double getMax(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.MAX, Double.class). }
false;;1;3;;Double getIncrement(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.INCREMENT, Double.class). }
false;;1;3;;Boolean getWithScore(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.WITHSCORE, Boolean.class). }
false;;1;3;;Double getLatitude(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.LATITUDE, Double.class). }
false;;1;3;;Double getLongitude(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.LONGITUDE, Double.class). }
false;;1;3;;Double getRadius(Exchange exchange) {     return getInHeaderValue(exchange, RedisConstants.RADIUS, Double.class). }
false;private,static;3;3;;private static <T> T getInHeaderValue(Exchange exchange, String key, Class<T> aClass) {     return exchange.getIn().getHeader(key, aClass). }
