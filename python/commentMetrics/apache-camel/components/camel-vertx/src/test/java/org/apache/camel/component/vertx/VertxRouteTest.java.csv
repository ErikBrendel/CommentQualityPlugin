commented;modifiers;parameterAmount;loc;comment;code
false;public;0;15;;@Test public void testVertxMessages() throws Exception {     resultEndpoint = context.getEndpoint(resultUri, MockEndpoint.class).     resultEndpoint.expectedBodiesReceivedInAnyOrder(body1, body2).     template.sendBody(startUri, body1).     template.sendBody(startUri, body2).     resultEndpoint.assertIsSatisfied().     List<Exchange> list = resultEndpoint.getReceivedExchanges().     for (Exchange exchange : list) {         log.info("Received exchange: " + exchange + " headers: " + exchange.getIn().getHeaders()).     } }
false;public;0;4;;public void configure() throws Exception {     from(startUri).to(middleUri).     from(middleUri).to(resultUri). }
false;protected;0;8;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from(startUri).to(middleUri).             from(middleUri).to(resultUri).         }     }. }
