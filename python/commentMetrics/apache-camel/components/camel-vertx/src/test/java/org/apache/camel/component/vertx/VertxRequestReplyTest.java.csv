commented;modifiers;parameterAmount;loc;comment;code
false;public;0;13;;@Test public void testVertxMessages() throws Exception {     resultEndpoint = context.getEndpoint(resultUri, MockEndpoint.class).     resultEndpoint.expectedBodiesReceivedInAnyOrder("Bye Camel", "Bye World").     String out = template.requestBody(startUri, body1, String.class).     String out2 = template.requestBody(startUri, body2, String.class).     resultEndpoint.assertIsSatisfied().     assertEquals("Bye Camel", out).     assertEquals("Bye World", out2). }
false;public;0;6;;public void configure() throws Exception {     from(startUri).to(middleUri).to(resultUri).     from(middleUri).transform(simple("Bye ${body}")). }
false;protected;0;10;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from(startUri).to(middleUri).to(resultUri).             from(middleUri).transform(simple("Bye ${body}")).         }     }. }
