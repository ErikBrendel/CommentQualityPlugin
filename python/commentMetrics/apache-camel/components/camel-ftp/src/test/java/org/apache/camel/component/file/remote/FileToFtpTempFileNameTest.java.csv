commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void testFileToFtp() throws Exception {     NotifyBuilder notify = new NotifyBuilder(context).whenDone(1).create().     template.sendBodyAndHeader("file:target/in", "Hello World", Exchange.FILE_NAME, "sub/hello.txt").     assertTrue(notify.matchesMockWaitTime()).     File file = new File(FTP_ROOT_DIR + "/out/sub/hello.txt").     assertTrue("File should exists " + file, file.exists()). }
false;public;0;5;;@Override public void configure() throws Exception {     from("file://target/in?recursive=true").to("ftp://admin:admin@localhost:" + getPort() + "/out/?fileName=${file:name}&tempFileName=${file:onlyname}.part&stepwise=false"). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("file://target/in?recursive=true").to("ftp://admin:admin@localhost:" + getPort() + "/out/?fileName=${file:name}&tempFileName=${file:onlyname}.part&stepwise=false").         }     }. }
