commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;3;;protected String getFtpUrl() {     return "ftp://admin@localhost:" + getPort() + "/template?password=admin". }
false;public;0;6;;@Override @Before public void setUp() throws Exception {     super.setUp().     prepareFtpServer(). }
false;public;0;4;;@Override public boolean isUseRouteBuilder() {     return false. }
false;public;0;26;;@Test public void testConsumerTemplate() throws Exception {     Exchange exchange = consumer.receive(getFtpUrl(), 5000).     assertNotNull(exchange).     assertEquals("hello.txt", exchange.getIn().getHeader(Exchange.FILE_NAME)).     assertEquals("Hello World", exchange.getIn().getBody(String.class)).     // must done when we are done using the exchange     consumer.doneUoW(exchange).     Thread.sleep(500).     // poll the same file again     exchange = consumer.receive(getFtpUrl(), 5000).     assertNotNull(exchange).     assertEquals("hello.txt", exchange.getIn().getHeader(Exchange.FILE_NAME)).     assertEquals("Hello World", exchange.getIn().getBody(String.class)).     // must done when we are done using the exchange     consumer.doneUoW(exchange).     // file should still exists     Thread.sleep(500).     File file = new File(FTP_ROOT_DIR + "/template/hello.txt").     assertTrue("The file should exist: " + file, file.exists()). }
false;public;0;30;;@Test public void testConsumerTemplateNotDone() throws Exception {     Exchange exchange = consumer.receive(getFtpUrl(), 5000).     assertNotNull(exchange).     assertEquals("hello.txt", exchange.getIn().getHeader(Exchange.FILE_NAME)).     assertEquals("Hello World", exchange.getIn().getBody(String.class)).     // forget to call done     Thread.sleep(500).     // try poll the same file again     Exchange exchange2 = consumer.receive(getFtpUrl(), 2000).     assertNull(exchange2).     // now done the original exchange     consumer.doneUoW(exchange).     // now we can poll the file again as we have done the exchange     exchange2 = consumer.receive(getFtpUrl(), 2000).     assertNotNull(exchange2).     assertEquals("hello.txt", exchange2.getIn().getHeader(Exchange.FILE_NAME)).     assertEquals("Hello World", exchange2.getIn().getBody(String.class)).     consumer.doneUoW(exchange2).     // file should still exists     Thread.sleep(500).     File file = new File(FTP_ROOT_DIR + "/template/hello.txt").     assertTrue("The file should exist: " + file, file.exists()). }
false;private;0;14;;private void prepareFtpServer() throws Exception {     Endpoint endpoint = context.getEndpoint(getFtpUrl()).     Exchange exchange = endpoint.createExchange().     exchange.getIn().setBody("Hello World").     exchange.getIn().setHeader(Exchange.FILE_NAME, "hello.txt").     Producer producer = endpoint.createProducer().     producer.start().     producer.process(exchange).     producer.stop().     // assert file is created     File file = new File(FTP_ROOT_DIR + "/template/hello.txt").     assertTrue("The file should exist: " + file, file.exists()). }
