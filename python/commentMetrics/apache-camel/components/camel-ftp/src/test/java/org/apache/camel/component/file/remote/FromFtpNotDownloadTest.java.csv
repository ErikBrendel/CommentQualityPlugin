commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;3;;protected String getFtpUrl() {     return "ftp://admin@localhost:" + getPort() + "/download?password=admin&noop=true&download=false". }
false;public;0;6;;@Override @Before public void setUp() throws Exception {     super.setUp().     prepareFtpServer(). }
false;public;0;9;;@Test public void testNotDownload() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(1).     mock.message(0).body().isNull().     mock.message(0).header(Exchange.FILE_NAME).isEqualTo("hello.txt").     mock.assertIsSatisfied(). }
false;private;0;10;;private void prepareFtpServer() throws Exception {     Endpoint endpoint = context.getEndpoint(getFtpUrl()).     Exchange exchange = endpoint.createExchange().     exchange.getIn().setBody("Hello World this file will not be downloaded").     exchange.getIn().setHeader(Exchange.FILE_NAME, "hello.txt").     Producer producer = endpoint.createProducer().     producer.start().     producer.process(exchange).     producer.stop(). }
false;public;1;4;;public void process(Exchange exchange) throws Exception {     assertNull("Should not download the file", exchange.getIn().getBody()).     assertEquals("hello.txt", exchange.getIn().getHeader(Exchange.FILE_NAME)). }
false;public;0;8;;public void configure() throws Exception {     from(getFtpUrl()).process(new Processor() {          public void process(Exchange exchange) throws Exception {             assertNull("Should not download the file", exchange.getIn().getBody()).             assertEquals("hello.txt", exchange.getIn().getHeader(Exchange.FILE_NAME)).         }     }).to("mock:result"). }
false;protected;0;12;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from(getFtpUrl()).process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     assertNull("Should not download the file", exchange.getIn().getBody()).                     assertEquals("hello.txt", exchange.getIn().getHeader(Exchange.FILE_NAME)).                 }             }).to("mock:result").         }     }. }
