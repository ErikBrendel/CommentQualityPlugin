commented;modifiers;parameterAmount;loc;comment;code
false;private;0;3;;private String getFtpUrl() {     return "ftp://admin@localhost:" + getPort() + "/sortbynested?password=admin&consumer.delay=5000". }
false;public;0;6;;@Override @Before public void setUp() throws Exception {     super.setUp().     prepareFtpServer(). }
false;public;0;4;;@Override public boolean isUseRouteBuilder() {     return false. }
false;public;0;4;;@Override public void configure() throws Exception {     from(getFtpUrl() + "&sortBy=file:ext.file:name").to("mock:result"). }
false;public;0;15;;@Test public void testSortFiles() throws Exception {     context.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from(getFtpUrl() + "&sortBy=file:ext.file:name").to("mock:result").         }     }).     context.start().     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived("Hello Dublin", "Hello London", "Hello Paris", "Hello Copenhagen").     assertMockEndpointsSatisfied(). }
false;public;0;4;;@Override public void configure() throws Exception {     from(getFtpUrl() + "&sortBy=file:ext.reverse:file:name").to("mock:reverse"). }
false;public;0;15;;@Test public void testSortFilesReverse() throws Exception {     context.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from(getFtpUrl() + "&sortBy=file:ext.reverse:file:name").to("mock:reverse").         }     }).     context.start().     MockEndpoint reverse = getMockEndpoint("mock:reverse").     reverse.expectedBodiesReceived("Hello Paris", "Hello London", "Hello Dublin", "Hello Copenhagen").     assertMockEndpointsSatisfied(). }
false;private;0;8;;private void prepareFtpServer() throws Exception {     // prepares the FTP Server by creating files on the server that we want to unit     // test that we can pool     sendFile(getFtpUrl(), "Hello Paris", "paris.txt").     sendFile(getFtpUrl(), "Hello London", "london.txt").     sendFile(getFtpUrl(), "Hello Copenhagen", "copenhagen.xml").     sendFile(getFtpUrl(), "Hello Dublin", "dublin.txt"). }
