commented;modifiers;parameterAmount;loc;comment;code
false;private;0;3;;private String getFtpUrl() {     return "ftp://admin@localhost:" + getPort() + "/list?password=admin". }
false;public;0;15;;@Test public void testProducerRecipientList() throws Exception {     template.sendBodyAndHeader("direct:start", "Hello World", "foo", getFtpUrl() + "&fileName=hello.txt").     template.sendBodyAndHeader("direct:start", "Bye World", "foo", getFtpUrl() + "&fileName=bye.txt").     template.sendBodyAndHeader("direct:start", "Hi World", "foo", getFtpUrl() + "&fileName=hi.txt").     File file1 = new File(FTP_ROOT_DIR + "/list/hello.txt").     assertTrue("File should exists " + file1, file1.exists()).     File file2 = new File(FTP_ROOT_DIR + "/list/bye.txt").     assertTrue("File should exists " + file2, file1.exists()).     File file3 = new File(FTP_ROOT_DIR + "/list/hi.txt").     assertTrue("File should exists " + file3, file1.exists()). }
false;public;0;5;;@Override public void configure() throws Exception {     from("direct:start").recipientList(header("foo")). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").recipientList(header("foo")).         }     }. }
