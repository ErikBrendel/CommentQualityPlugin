# id;timestamp;commentText;codeText;commentWords;codeWords
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1345654824;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1346246562;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1355929884;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1358866302;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1361371626;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1363272961;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1363338281;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1363362145;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1366796529;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1373129971;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1376558158;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1427524848;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1431022193;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1457087632;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1457087850;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1473315360;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1473315456;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1477059690;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1477059690;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1487940325;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1507177456;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1515144610;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1515406829;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1515406829;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1515406830;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1515406830;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1515406830;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1515406830;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1515406830;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1515489847;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1515500239;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1515573155;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1516182055;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1523994338;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1536517284;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot moved existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,moved,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
FtpOperations -> private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException;1538032689;Moves any existing file due fileExists=Move is in use.;private void doMoveExistingFile(String name, String targetName) throws GenericFileOperationFailedException {_        _        _        _        Exchange dummy = endpoint.createExchange()__        _        String parent = null__        String onlyName = FileUtil.stripPath(targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME, targetName)__        dummy.getIn().setHeader(Exchange.FILE_NAME_ONLY, onlyName)__        dummy.getIn().setHeader(Exchange.FILE_PARENT, parent)___        String to = endpoint.getMoveExisting().evaluate(dummy, String.class)__        _        to = FileUtil.stripLeadingSeparator(to)__        _        to = endpoint.getConfiguration().normalizePath(to)__        if (ObjectHelper.isEmpty(to)) {_            throw new GenericFileOperationFailedException("moveExisting evaluated as empty String, cannot move existing file: " + name)__        }__        _        String dir = FileUtil.onlyPath(to)__        if (dir != null) {_            _            buildDirectory(dir, false)__        }__        _        if (existsFile(to)) {_            if (endpoint.isEagerDeleteTargetFile()) {_                log.trace("Deleting existing file: {}", to)__                boolean result__                try {_                    result = client.deleteFile(to)__                    if (!result) {_                        throw new GenericFileOperationFailedException("Cannot delete file: " + to)__                    }_                } catch (IOException e) {_                    throw new GenericFileOperationFailedException(client.getReplyCode(), client.getReplyString(), "Cannot delete file: " + to, e)__                }_            } else {_                throw new GenericFileOperationFailedException("Cannot move existing file from: " + name + " to: " + to + " as there already exists a file: " + to)__            }_        }__        log.trace("Moving existing file: {} to: {}", name, to)__        if (!renameFile(targetName, to)) {_            throw new GenericFileOperationFailedException("Cannot rename file from: " + name + " to: " + to)__        }_    };moves,any,existing,file,due,file,exists,move,is,in,use;private,void,do,move,existing,file,string,name,string,target,name,throws,generic,file,operation,failed,exception,exchange,dummy,endpoint,create,exchange,string,parent,null,string,only,name,file,util,strip,path,target,name,dummy,get,in,set,header,exchange,target,name,dummy,get,in,set,header,exchange,only,name,dummy,get,in,set,header,exchange,parent,string,to,endpoint,get,move,existing,evaluate,dummy,string,class,to,file,util,strip,leading,separator,to,to,endpoint,get,configuration,normalize,path,to,if,object,helper,is,empty,to,throw,new,generic,file,operation,failed,exception,move,existing,evaluated,as,empty,string,cannot,move,existing,file,name,string,dir,file,util,only,path,to,if,dir,null,build,directory,dir,false,if,exists,file,to,if,endpoint,is,eager,delete,target,file,log,trace,deleting,existing,file,to,boolean,result,try,result,client,delete,file,to,if,result,throw,new,generic,file,operation,failed,exception,cannot,delete,file,to,catch,ioexception,e,throw,new,generic,file,operation,failed,exception,client,get,reply,code,client,get,reply,string,cannot,delete,file,to,e,else,throw,new,generic,file,operation,failed,exception,cannot,move,existing,file,from,name,to,to,as,there,already,exists,a,file,to,log,trace,moving,existing,file,to,name,to,if,rename,file,target,name,to,throw,new,generic,file,operation,failed,exception,cannot,rename,file,from,name,to,to
