# id;timestamp;commentText;codeText;commentWords;codeWords
RemoteFileConfiguration -> public void setSeparator(PathSeparator separator);1290702754;Sets the path separator to be used._<p/>_UNIX = Path separator / is used_Windows = Path separator \ is used_Auto = (is default) Use existing path separator in file name;public void setSeparator(PathSeparator separator) {_        this.separator = separator__    };sets,the,path,separator,to,be,used,p,unix,path,separator,is,used,windows,path,separator,is,used,auto,is,default,use,existing,path,separator,in,file,name;public,void,set,separator,path,separator,separator,this,separator,separator
RemoteFileConfiguration -> public void setSeparator(PathSeparator separator);1361371626;Sets the path separator to be used._<p/>_UNIX = Path separator / is used_Windows = Path separator \ is used_Auto = (is default) Use existing path separator in file name;public void setSeparator(PathSeparator separator) {_        this.separator = separator__    };sets,the,path,separator,to,be,used,p,unix,path,separator,is,used,windows,path,separator,is,used,auto,is,default,use,existing,path,separator,in,file,name;public,void,set,separator,path,separator,separator,this,separator,separator
RemoteFileConfiguration -> public void setSeparator(PathSeparator separator);1378378166;Sets the path separator to be used._<p/>_UNIX = Path separator / is used_Windows = Path separator \ is used_Auto = (is default) Use existing path separator in file name;public void setSeparator(PathSeparator separator) {_        this.separator = separator__    };sets,the,path,separator,to,be,used,p,unix,path,separator,is,used,windows,path,separator,is,used,auto,is,default,use,existing,path,separator,in,file,name;public,void,set,separator,path,separator,separator,this,separator,separator
RemoteFileConfiguration -> public void setSeparator(PathSeparator separator);1379076760;Sets the path separator to be used._<p/>_UNIX = Path separator / is used_Windows = Path separator \ is used_Auto = (is default) Use existing path separator in file name;public void setSeparator(PathSeparator separator) {_        this.separator = separator__    };sets,the,path,separator,to,be,used,p,unix,path,separator,is,used,windows,path,separator,is,used,auto,is,default,use,existing,path,separator,in,file,name;public,void,set,separator,path,separator,separator,this,separator,separator
RemoteFileConfiguration -> public void setSeparator(PathSeparator separator);1416567967;Sets the path separator to be used._<p/>_UNIX = Path separator / is used_Windows = Path separator \ is used_Auto = (is default) Use existing path separator in file name;public void setSeparator(PathSeparator separator) {_        this.separator = separator__    };sets,the,path,separator,to,be,used,p,unix,path,separator,is,used,windows,path,separator,is,used,auto,is,default,use,existing,path,separator,in,file,name;public,void,set,separator,path,separator,separator,this,separator,separator
RemoteFileConfiguration -> public void setSeparator(PathSeparator separator);1424952635;Sets the path separator to be used._<p/>_UNIX = Path separator / is used_Windows = Path separator \ is used_Auto = (is default) Use existing path separator in file name;public void setSeparator(PathSeparator separator) {_        this.separator = separator__    };sets,the,path,separator,to,be,used,p,unix,path,separator,is,used,windows,path,separator,is,used,auto,is,default,use,existing,path,separator,in,file,name;public,void,set,separator,path,separator,separator,this,separator,separator
RemoteFileConfiguration -> public void setSeparator(PathSeparator separator);1425280684;Sets the path separator to be used._<p/>_UNIX = Path separator / is used_Windows = Path separator \ is used_Auto = (is default) Use existing path separator in file name;public void setSeparator(PathSeparator separator) {_        this.separator = separator__    };sets,the,path,separator,to,be,used,p,unix,path,separator,is,used,windows,path,separator,is,used,auto,is,default,use,existing,path,separator,in,file,name;public,void,set,separator,path,separator,separator,this,separator,separator
RemoteFileConfiguration -> public void setSeparator(PathSeparator separator);1426251104;Sets the path separator to be used._<p/>_UNIX = Uses unix style path separator_Windows = Uses windows style path separator_Auto = (is default) Use existing path separator in file name;public void setSeparator(PathSeparator separator) {_        this.separator = separator__    };sets,the,path,separator,to,be,used,p,unix,uses,unix,style,path,separator,windows,uses,windows,style,path,separator,auto,is,default,use,existing,path,separator,in,file,name;public,void,set,separator,path,separator,separator,this,separator,separator
RemoteFileConfiguration -> public void setSeparator(PathSeparator separator);1426750198;Sets the path separator to be used._<p/>_UNIX = Uses unix style path separator_Windows = Uses windows style path separator_Auto = (is default) Use existing path separator in file name;public void setSeparator(PathSeparator separator) {_        this.separator = separator__    };sets,the,path,separator,to,be,used,p,unix,uses,unix,style,path,separator,windows,uses,windows,style,path,separator,auto,is,default,use,existing,path,separator,in,file,name;public,void,set,separator,path,separator,separator,this,separator,separator
RemoteFileConfiguration -> public void setSeparator(PathSeparator separator);1428325442;Sets the path separator to be used._<p/>_UNIX = Uses unix style path separator_Windows = Uses windows style path separator_Auto = (is default) Use existing path separator in file name;public void setSeparator(PathSeparator separator) {_        this.separator = separator__    };sets,the,path,separator,to,be,used,p,unix,uses,unix,style,path,separator,windows,uses,windows,style,path,separator,auto,is,default,use,existing,path,separator,in,file,name;public,void,set,separator,path,separator,separator,this,separator,separator
RemoteFileConfiguration -> public void setSeparator(PathSeparator separator);1432744961;Sets the path separator to be used._<p/>_UNIX = Uses unix style path separator_Windows = Uses windows style path separator_Auto = (is default) Use existing path separator in file name;public void setSeparator(PathSeparator separator) {_        this.separator = separator__    };sets,the,path,separator,to,be,used,p,unix,uses,unix,style,path,separator,windows,uses,windows,style,path,separator,auto,is,default,use,existing,path,separator,in,file,name;public,void,set,separator,path,separator,separator,this,separator,separator
RemoteFileConfiguration -> public void setSeparator(PathSeparator separator);1434280087;Sets the path separator to be used._<p/>_UNIX = Uses unix style path separator_Windows = Uses windows style path separator_Auto = (is default) Use existing path separator in file name;public void setSeparator(PathSeparator separator) {_        this.separator = separator__    };sets,the,path,separator,to,be,used,p,unix,uses,unix,style,path,separator,windows,uses,windows,style,path,separator,auto,is,default,use,existing,path,separator,in,file,name;public,void,set,separator,path,separator,separator,this,separator,separator
RemoteFileConfiguration -> public void setSeparator(PathSeparator separator);1438175607;Sets the path separator to be used._<p/>_UNIX = Uses unix style path separator_Windows = Uses windows style path separator_Auto = (is default) Use existing path separator in file name;public void setSeparator(PathSeparator separator) {_        this.separator = separator__    };sets,the,path,separator,to,be,used,p,unix,uses,unix,style,path,separator,windows,uses,windows,style,path,separator,auto,is,default,use,existing,path,separator,in,file,name;public,void,set,separator,path,separator,separator,this,separator,separator
RemoteFileConfiguration -> public void setSeparator(PathSeparator separator);1442837121;Sets the path separator to be used._<p/>_UNIX = Uses unix style path separator_Windows = Uses windows style path separator_Auto = (is default) Use existing path separator in file name;public void setSeparator(PathSeparator separator) {_        this.separator = separator__    };sets,the,path,separator,to,be,used,p,unix,uses,unix,style,path,separator,windows,uses,windows,style,path,separator,auto,is,default,use,existing,path,separator,in,file,name;public,void,set,separator,path,separator,separator,this,separator,separator
RemoteFileConfiguration -> public void setSeparator(PathSeparator separator);1442837494;Sets the path separator to be used._<p/>_UNIX = Uses unix style path separator_Windows = Uses windows style path separator_Auto = (is default) Use existing path separator in file name;public void setSeparator(PathSeparator separator) {_        this.separator = separator__    };sets,the,path,separator,to,be,used,p,unix,uses,unix,style,path,separator,windows,uses,windows,style,path,separator,auto,is,default,use,existing,path,separator,in,file,name;public,void,set,separator,path,separator,separator,this,separator,separator
RemoteFileConfiguration -> public void setSeparator(PathSeparator separator);1465649425;Sets the path separator to be used._<p/>_UNIX = Uses unix style path separator_Windows = Uses windows style path separator_Auto = (is default) Use existing path separator in file name;public void setSeparator(PathSeparator separator) {_        this.separator = separator__    };sets,the,path,separator,to,be,used,p,unix,uses,unix,style,path,separator,windows,uses,windows,style,path,separator,auto,is,default,use,existing,path,separator,in,file,name;public,void,set,separator,path,separator,separator,this,separator,separator
RemoteFileConfiguration -> public void setSeparator(PathSeparator separator);1506283402;Sets the path separator to be used._<p/>_UNIX = Uses unix style path separator_Windows = Uses windows style path separator_Auto = (is default) Use existing path separator in file name;public void setSeparator(PathSeparator separator) {_        this.separator = separator__    };sets,the,path,separator,to,be,used,p,unix,uses,unix,style,path,separator,windows,uses,windows,style,path,separator,auto,is,default,use,existing,path,separator,in,file,name;public,void,set,separator,path,separator,separator,this,separator,separator
RemoteFileConfiguration -> public void setSeparator(PathSeparator separator);1509446107;Sets the path separator to be used._<p/>_UNIX = Uses unix style path separator_Windows = Uses windows style path separator_Auto = (is default) Use existing path separator in file name;public void setSeparator(PathSeparator separator) {_        this.separator = separator__    };sets,the,path,separator,to,be,used,p,unix,uses,unix,style,path,separator,windows,uses,windows,style,path,separator,auto,is,default,use,existing,path,separator,in,file,name;public,void,set,separator,path,separator,separator,this,separator,separator
RemoteFileConfiguration -> public void setSeparator(PathSeparator separator);1509526271;Sets the path separator to be used._<p/>_UNIX = Uses unix style path separator_Windows = Uses windows style path separator_Auto = (is default) Use existing path separator in file name;public void setSeparator(PathSeparator separator) {_        this.separator = separator__    };sets,the,path,separator,to,be,used,p,unix,uses,unix,style,path,separator,windows,uses,windows,style,path,separator,auto,is,default,use,existing,path,separator,in,file,name;public,void,set,separator,path,separator,separator,this,separator,separator
RemoteFileConfiguration -> public void setSeparator(PathSeparator separator);1520674832;Sets the path separator to be used._<p/>_UNIX = Uses unix style path separator_Windows = Uses windows style path separator_Auto = (is default) Use existing path separator in file name;public void setSeparator(PathSeparator separator) {_        this.separator = separator__    };sets,the,path,separator,to,be,used,p,unix,uses,unix,style,path,separator,windows,uses,windows,style,path,separator,auto,is,default,use,existing,path,separator,in,file,name;public,void,set,separator,path,separator,separator,this,separator,separator
RemoteFileConfiguration -> public void setSeparator(PathSeparator separator);1540108158;Sets the path separator to be used._<p/>_UNIX = Uses unix style path separator_Windows = Uses windows style path separator_Auto = (is default) Use existing path separator in file name;public void setSeparator(PathSeparator separator) {_        this.separator = separator__    };sets,the,path,separator,to,be,used,p,unix,uses,unix,style,path,separator,windows,uses,windows,style,path,separator,auto,is,default,use,existing,path,separator,in,file,name;public,void,set,separator,path,separator,separator,this,separator,separator
RemoteFileConfiguration -> public void setSeparator(PathSeparator separator);1547240981;Sets the path separator to be used._<p/>_UNIX = Uses unix style path separator_Windows = Uses windows style path separator_Auto = (is default) Use existing path separator in file name;public void setSeparator(PathSeparator separator) {_        this.separator = separator__    };sets,the,path,separator,to,be,used,p,unix,uses,unix,style,path,separator,windows,uses,windows,style,path,separator,auto,is,default,use,existing,path,separator,in,file,name;public,void,set,separator,path,separator,separator,this,separator,separator
RemoteFileConfiguration -> public void setSeparator(PathSeparator separator);1550127542;Sets the path separator to be used._<p/>_UNIX = Uses unix style path separator_Windows = Uses windows style path separator_Auto = (is default) Use existing path separator in file name;public void setSeparator(PathSeparator separator) {_        this.separator = separator__    };sets,the,path,separator,to,be,used,p,unix,uses,unix,style,path,separator,windows,uses,windows,style,path,separator,auto,is,default,use,existing,path,separator,in,file,name;public,void,set,separator,path,separator,separator,this,separator,separator
RemoteFileConfiguration -> public void setSendNoop(boolean sendNoop);1432744961;Whether to send a noop command as a pre-write check before uploading files to the FTP server._<p/>_This is enabled by default as a validation of the connection is still valid, which allows to silently_re-connect to be able to upload the file. However if this causes problems, you can turn this option off.;public void setSendNoop(boolean sendNoop) {_        this.sendNoop = sendNoop__    };whether,to,send,a,noop,command,as,a,pre,write,check,before,uploading,files,to,the,ftp,server,p,this,is,enabled,by,default,as,a,validation,of,the,connection,is,still,valid,which,allows,to,silently,re,connect,to,be,able,to,upload,the,file,however,if,this,causes,problems,you,can,turn,this,option,off;public,void,set,send,noop,boolean,send,noop,this,send,noop,send,noop
RemoteFileConfiguration -> public void setSendNoop(boolean sendNoop);1434280087;Whether to send a noop command as a pre-write check before uploading files to the FTP server._<p/>_This is enabled by default as a validation of the connection is still valid, which allows to silently_re-connect to be able to upload the file. However if this causes problems, you can turn this option off.;public void setSendNoop(boolean sendNoop) {_        this.sendNoop = sendNoop__    };whether,to,send,a,noop,command,as,a,pre,write,check,before,uploading,files,to,the,ftp,server,p,this,is,enabled,by,default,as,a,validation,of,the,connection,is,still,valid,which,allows,to,silently,re,connect,to,be,able,to,upload,the,file,however,if,this,causes,problems,you,can,turn,this,option,off;public,void,set,send,noop,boolean,send,noop,this,send,noop,send,noop
RemoteFileConfiguration -> public void setSendNoop(boolean sendNoop);1438175607;Whether to send a noop command as a pre-write check before uploading files to the FTP server._<p/>_This is enabled by default as a validation of the connection is still valid, which allows to silently_re-connect to be able to upload the file. However if this causes problems, you can turn this option off.;public void setSendNoop(boolean sendNoop) {_        this.sendNoop = sendNoop__    };whether,to,send,a,noop,command,as,a,pre,write,check,before,uploading,files,to,the,ftp,server,p,this,is,enabled,by,default,as,a,validation,of,the,connection,is,still,valid,which,allows,to,silently,re,connect,to,be,able,to,upload,the,file,however,if,this,causes,problems,you,can,turn,this,option,off;public,void,set,send,noop,boolean,send,noop,this,send,noop,send,noop
RemoteFileConfiguration -> public void setSendNoop(boolean sendNoop);1442837121;Whether to send a noop command as a pre-write check before uploading files to the FTP server._<p/>_This is enabled by default as a validation of the connection is still valid, which allows to silently_re-connect to be able to upload the file. However if this causes problems, you can turn this option off.;public void setSendNoop(boolean sendNoop) {_        this.sendNoop = sendNoop__    };whether,to,send,a,noop,command,as,a,pre,write,check,before,uploading,files,to,the,ftp,server,p,this,is,enabled,by,default,as,a,validation,of,the,connection,is,still,valid,which,allows,to,silently,re,connect,to,be,able,to,upload,the,file,however,if,this,causes,problems,you,can,turn,this,option,off;public,void,set,send,noop,boolean,send,noop,this,send,noop,send,noop
RemoteFileConfiguration -> public void setSendNoop(boolean sendNoop);1442837494;Whether to send a noop command as a pre-write check before uploading files to the FTP server._<p/>_This is enabled by default as a validation of the connection is still valid, which allows to silently_re-connect to be able to upload the file. However if this causes problems, you can turn this option off.;public void setSendNoop(boolean sendNoop) {_        this.sendNoop = sendNoop__    };whether,to,send,a,noop,command,as,a,pre,write,check,before,uploading,files,to,the,ftp,server,p,this,is,enabled,by,default,as,a,validation,of,the,connection,is,still,valid,which,allows,to,silently,re,connect,to,be,able,to,upload,the,file,however,if,this,causes,problems,you,can,turn,this,option,off;public,void,set,send,noop,boolean,send,noop,this,send,noop,send,noop
RemoteFileConfiguration -> public void setSendNoop(boolean sendNoop);1465649425;Whether to send a noop command as a pre-write check before uploading files to the FTP server._<p/>_This is enabled by default as a validation of the connection is still valid, which allows to silently_re-connect to be able to upload the file. However if this causes problems, you can turn this option off.;public void setSendNoop(boolean sendNoop) {_        this.sendNoop = sendNoop__    };whether,to,send,a,noop,command,as,a,pre,write,check,before,uploading,files,to,the,ftp,server,p,this,is,enabled,by,default,as,a,validation,of,the,connection,is,still,valid,which,allows,to,silently,re,connect,to,be,able,to,upload,the,file,however,if,this,causes,problems,you,can,turn,this,option,off;public,void,set,send,noop,boolean,send,noop,this,send,noop,send,noop
RemoteFileConfiguration -> public void setSendNoop(boolean sendNoop);1506283402;Whether to send a noop command as a pre-write check before uploading files to the FTP server._<p/>_This is enabled by default as a validation of the connection is still valid, which allows to silently_re-connect to be able to upload the file. However if this causes problems, you can turn this option off.;public void setSendNoop(boolean sendNoop) {_        this.sendNoop = sendNoop__    };whether,to,send,a,noop,command,as,a,pre,write,check,before,uploading,files,to,the,ftp,server,p,this,is,enabled,by,default,as,a,validation,of,the,connection,is,still,valid,which,allows,to,silently,re,connect,to,be,able,to,upload,the,file,however,if,this,causes,problems,you,can,turn,this,option,off;public,void,set,send,noop,boolean,send,noop,this,send,noop,send,noop
RemoteFileConfiguration -> public void setSendNoop(boolean sendNoop);1509446107;Whether to send a noop command as a pre-write check before uploading files to the FTP server._<p/>_This is enabled by default as a validation of the connection is still valid, which allows to silently_re-connect to be able to upload the file. However if this causes problems, you can turn this option off.;public void setSendNoop(boolean sendNoop) {_        this.sendNoop = sendNoop__    };whether,to,send,a,noop,command,as,a,pre,write,check,before,uploading,files,to,the,ftp,server,p,this,is,enabled,by,default,as,a,validation,of,the,connection,is,still,valid,which,allows,to,silently,re,connect,to,be,able,to,upload,the,file,however,if,this,causes,problems,you,can,turn,this,option,off;public,void,set,send,noop,boolean,send,noop,this,send,noop,send,noop
RemoteFileConfiguration -> public void setSendNoop(boolean sendNoop);1509526271;Whether to send a noop command as a pre-write check before uploading files to the FTP server._<p/>_This is enabled by default as a validation of the connection is still valid, which allows to silently_re-connect to be able to upload the file. However if this causes problems, you can turn this option off.;public void setSendNoop(boolean sendNoop) {_        this.sendNoop = sendNoop__    };whether,to,send,a,noop,command,as,a,pre,write,check,before,uploading,files,to,the,ftp,server,p,this,is,enabled,by,default,as,a,validation,of,the,connection,is,still,valid,which,allows,to,silently,re,connect,to,be,able,to,upload,the,file,however,if,this,causes,problems,you,can,turn,this,option,off;public,void,set,send,noop,boolean,send,noop,this,send,noop,send,noop
RemoteFileConfiguration -> public void setSendNoop(boolean sendNoop);1520674832;Whether to send a noop command as a pre-write check before uploading files to the FTP server._<p/>_This is enabled by default as a validation of the connection is still valid, which allows to silently_re-connect to be able to upload the file. However if this causes problems, you can turn this option off.;public void setSendNoop(boolean sendNoop) {_        this.sendNoop = sendNoop__    };whether,to,send,a,noop,command,as,a,pre,write,check,before,uploading,files,to,the,ftp,server,p,this,is,enabled,by,default,as,a,validation,of,the,connection,is,still,valid,which,allows,to,silently,re,connect,to,be,able,to,upload,the,file,however,if,this,causes,problems,you,can,turn,this,option,off;public,void,set,send,noop,boolean,send,noop,this,send,noop,send,noop
RemoteFileConfiguration -> public void setSendNoop(boolean sendNoop);1540108158;Whether to send a noop command as a pre-write check before uploading files to the FTP server._<p/>_This is enabled by default as a validation of the connection is still valid, which allows to silently_re-connect to be able to upload the file. However if this causes problems, you can turn this option off.;public void setSendNoop(boolean sendNoop) {_        this.sendNoop = sendNoop__    };whether,to,send,a,noop,command,as,a,pre,write,check,before,uploading,files,to,the,ftp,server,p,this,is,enabled,by,default,as,a,validation,of,the,connection,is,still,valid,which,allows,to,silently,re,connect,to,be,able,to,upload,the,file,however,if,this,causes,problems,you,can,turn,this,option,off;public,void,set,send,noop,boolean,send,noop,this,send,noop,send,noop
RemoteFileConfiguration -> public void setSendNoop(boolean sendNoop);1547240981;Whether to send a noop command as a pre-write check before uploading files to the FTP server._<p/>_This is enabled by default as a validation of the connection is still valid, which allows to silently_re-connect to be able to upload the file. However if this causes problems, you can turn this option off.;public void setSendNoop(boolean sendNoop) {_        this.sendNoop = sendNoop__    };whether,to,send,a,noop,command,as,a,pre,write,check,before,uploading,files,to,the,ftp,server,p,this,is,enabled,by,default,as,a,validation,of,the,connection,is,still,valid,which,allows,to,silently,re,connect,to,be,able,to,upload,the,file,however,if,this,causes,problems,you,can,turn,this,option,off;public,void,set,send,noop,boolean,send,noop,this,send,noop,send,noop
RemoteFileConfiguration -> public void setSendNoop(boolean sendNoop);1550127542;Whether to send a noop command as a pre-write check before uploading files to the FTP server._<p/>_This is enabled by default as a validation of the connection is still valid, which allows to silently_re-connect to be able to upload the file. However if this causes problems, you can turn this option off.;public void setSendNoop(boolean sendNoop) {_        this.sendNoop = sendNoop__    };whether,to,send,a,noop,command,as,a,pre,write,check,before,uploading,files,to,the,ftp,server,p,this,is,enabled,by,default,as,a,validation,of,the,connection,is,still,valid,which,allows,to,silently,re,connect,to,be,able,to,upload,the,file,however,if,this,causes,problems,you,can,turn,this,option,off;public,void,set,send,noop,boolean,send,noop,this,send,noop,send,noop
RemoteFileConfiguration -> public void setBinary(boolean binary);1434280087;Specifies the file transfer mode, BINARY or ASCII. Default is ASCII (false).;public void setBinary(boolean binary) {_        this.binary = binary__    };specifies,the,file,transfer,mode,binary,or,ascii,default,is,ascii,false;public,void,set,binary,boolean,binary,this,binary,binary
RemoteFileConfiguration -> public void setBinary(boolean binary);1438175607;Specifies the file transfer mode, BINARY or ASCII. Default is ASCII (false).;public void setBinary(boolean binary) {_        this.binary = binary__    };specifies,the,file,transfer,mode,binary,or,ascii,default,is,ascii,false;public,void,set,binary,boolean,binary,this,binary,binary
RemoteFileConfiguration -> public void setBinary(boolean binary);1442837121;Specifies the file transfer mode, BINARY or ASCII. Default is ASCII (false).;public void setBinary(boolean binary) {_        this.binary = binary__    };specifies,the,file,transfer,mode,binary,or,ascii,default,is,ascii,false;public,void,set,binary,boolean,binary,this,binary,binary
RemoteFileConfiguration -> public void setBinary(boolean binary);1442837494;Specifies the file transfer mode, BINARY or ASCII. Default is ASCII (false).;public void setBinary(boolean binary) {_        this.binary = binary__    };specifies,the,file,transfer,mode,binary,or,ascii,default,is,ascii,false;public,void,set,binary,boolean,binary,this,binary,binary
RemoteFileConfiguration -> public void setBinary(boolean binary);1465649425;Specifies the file transfer mode, BINARY or ASCII. Default is ASCII (false).;public void setBinary(boolean binary) {_        this.binary = binary__    };specifies,the,file,transfer,mode,binary,or,ascii,default,is,ascii,false;public,void,set,binary,boolean,binary,this,binary,binary
RemoteFileConfiguration -> public void setBinary(boolean binary);1506283402;Specifies the file transfer mode, BINARY or ASCII. Default is ASCII (false).;public void setBinary(boolean binary) {_        this.binary = binary__    };specifies,the,file,transfer,mode,binary,or,ascii,default,is,ascii,false;public,void,set,binary,boolean,binary,this,binary,binary
RemoteFileConfiguration -> public void setBinary(boolean binary);1509446107;Specifies the file transfer mode, BINARY or ASCII. Default is ASCII (false).;public void setBinary(boolean binary) {_        this.binary = binary__    };specifies,the,file,transfer,mode,binary,or,ascii,default,is,ascii,false;public,void,set,binary,boolean,binary,this,binary,binary
RemoteFileConfiguration -> public void setBinary(boolean binary);1509526271;Specifies the file transfer mode, BINARY or ASCII. Default is ASCII (false).;public void setBinary(boolean binary) {_        this.binary = binary__    };specifies,the,file,transfer,mode,binary,or,ascii,default,is,ascii,false;public,void,set,binary,boolean,binary,this,binary,binary
RemoteFileConfiguration -> public void setBinary(boolean binary);1520674832;Specifies the file transfer mode, BINARY or ASCII. Default is ASCII (false).;public void setBinary(boolean binary) {_        this.binary = binary__    };specifies,the,file,transfer,mode,binary,or,ascii,default,is,ascii,false;public,void,set,binary,boolean,binary,this,binary,binary
RemoteFileConfiguration -> public void setBinary(boolean binary);1540108158;Specifies the file transfer mode, BINARY or ASCII. Default is ASCII (false).;public void setBinary(boolean binary) {_        this.binary = binary__    };specifies,the,file,transfer,mode,binary,or,ascii,default,is,ascii,false;public,void,set,binary,boolean,binary,this,binary,binary
RemoteFileConfiguration -> public void setBinary(boolean binary);1547240981;Specifies the file transfer mode, BINARY or ASCII. Default is ASCII (false).;public void setBinary(boolean binary) {_        this.binary = binary__    };specifies,the,file,transfer,mode,binary,or,ascii,default,is,ascii,false;public,void,set,binary,boolean,binary,this,binary,binary
RemoteFileConfiguration -> public void setBinary(boolean binary);1550127542;Specifies the file transfer mode, BINARY or ASCII. Default is ASCII (false).;public void setBinary(boolean binary) {_        this.binary = binary__    };specifies,the,file,transfer,mode,binary,or,ascii,default,is,ascii,false;public,void,set,binary,boolean,binary,this,binary,binary
RemoteFileConfiguration -> public String remoteServerInformation();1217070837;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + username + "@" + host + ":" + port__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,host,port
RemoteFileConfiguration -> public String remoteServerInformation();1221383043;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + username + "@" + host + ":" + port__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,host,port
RemoteFileConfiguration -> public String remoteServerInformation();1221386473;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + port__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,port
RemoteFileConfiguration -> public String remoteServerInformation();1222531060;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + port__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,port
RemoteFileConfiguration -> public String remoteServerInformation();1225614299;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + port__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,port
RemoteFileConfiguration -> public String remoteServerInformation();1227634593;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + port__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,port
RemoteFileConfiguration -> public String remoteServerInformation();1227958340;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + port__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,port
RemoteFileConfiguration -> public String remoteServerInformation();1227960907;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + port__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,port
RemoteFileConfiguration -> public String remoteServerInformation();1230288790;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + port__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,port
RemoteFileConfiguration -> public String remoteServerInformation();1232440963;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1232970726;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1233306659;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1233898199;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1236418952;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1236421301;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1277545968;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1277546558;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1278429360;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1280051112;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1281612824;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1285675268;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1285695692;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1289130838;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1290702754;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1361371626;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1378378166;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1379076760;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1416567967;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1424952635;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1425280684;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1426251104;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1426750198;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1428325442;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1432744961;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1434280087;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1438175607;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1442837121;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1442837494;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1465649425;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1506283402;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1509446107;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1509526271;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1520674832;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1540108158;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1547240981;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public String remoteServerInformation();1550127542;Returns human readable server information for logging purpose;public String remoteServerInformation() {_        return protocol + "://" + (username != null ? username : "anonymous") + "@" + host + ":" + getPort()__    };returns,human,readable,server,information,for,logging,purpose;public,string,remote,server,information,return,protocol,username,null,username,anonymous,host,get,port
RemoteFileConfiguration -> public void setStreamDownload(boolean streamDownload);1361371626;Sets the download method to use when not using a local working directory.  If set to true,_the remote files are streamed to the route as they are read.  When set to false, the remote files_are loaded into memory before being sent into the route.__@param streamDownload;public void setStreamDownload(boolean streamDownload) {_        this.streamDownload = streamDownload__    };sets,the,download,method,to,use,when,not,using,a,local,working,directory,if,set,to,true,the,remote,files,are,streamed,to,the,route,as,they,are,read,when,set,to,false,the,remote,files,are,loaded,into,memory,before,being,sent,into,the,route,param,stream,download;public,void,set,stream,download,boolean,stream,download,this,stream,download,stream,download
RemoteFileConfiguration -> public void setStreamDownload(boolean streamDownload);1378378166;Sets the download method to use when not using a local working directory.  If set to true,_the remote files are streamed to the route as they are read.  When set to false, the remote files_are loaded into memory before being sent into the route.;public void setStreamDownload(boolean streamDownload) {_        this.streamDownload = streamDownload__    };sets,the,download,method,to,use,when,not,using,a,local,working,directory,if,set,to,true,the,remote,files,are,streamed,to,the,route,as,they,are,read,when,set,to,false,the,remote,files,are,loaded,into,memory,before,being,sent,into,the,route;public,void,set,stream,download,boolean,stream,download,this,stream,download,stream,download
RemoteFileConfiguration -> public void setStreamDownload(boolean streamDownload);1379076760;Sets the download method to use when not using a local working directory.  If set to true,_the remote files are streamed to the route as they are read.  When set to false, the remote files_are loaded into memory before being sent into the route.;public void setStreamDownload(boolean streamDownload) {_        this.streamDownload = streamDownload__    };sets,the,download,method,to,use,when,not,using,a,local,working,directory,if,set,to,true,the,remote,files,are,streamed,to,the,route,as,they,are,read,when,set,to,false,the,remote,files,are,loaded,into,memory,before,being,sent,into,the,route;public,void,set,stream,download,boolean,stream,download,this,stream,download,stream,download
RemoteFileConfiguration -> public void setStreamDownload(boolean streamDownload);1416567967;Sets the download method to use when not using a local working directory.  If set to true,_the remote files are streamed to the route as they are read.  When set to false, the remote files_are loaded into memory before being sent into the route.;public void setStreamDownload(boolean streamDownload) {_        this.streamDownload = streamDownload__    };sets,the,download,method,to,use,when,not,using,a,local,working,directory,if,set,to,true,the,remote,files,are,streamed,to,the,route,as,they,are,read,when,set,to,false,the,remote,files,are,loaded,into,memory,before,being,sent,into,the,route;public,void,set,stream,download,boolean,stream,download,this,stream,download,stream,download
RemoteFileConfiguration -> public void setStreamDownload(boolean streamDownload);1424952635;Sets the download method to use when not using a local working directory.  If set to true,_the remote files are streamed to the route as they are read.  When set to false, the remote files_are loaded into memory before being sent into the route.;public void setStreamDownload(boolean streamDownload) {_        this.streamDownload = streamDownload__    };sets,the,download,method,to,use,when,not,using,a,local,working,directory,if,set,to,true,the,remote,files,are,streamed,to,the,route,as,they,are,read,when,set,to,false,the,remote,files,are,loaded,into,memory,before,being,sent,into,the,route;public,void,set,stream,download,boolean,stream,download,this,stream,download,stream,download
RemoteFileConfiguration -> public void setStreamDownload(boolean streamDownload);1425280684;Sets the download method to use when not using a local working directory.  If set to true,_the remote files are streamed to the route as they are read.  When set to false, the remote files_are loaded into memory before being sent into the route.;public void setStreamDownload(boolean streamDownload) {_        this.streamDownload = streamDownload__    };sets,the,download,method,to,use,when,not,using,a,local,working,directory,if,set,to,true,the,remote,files,are,streamed,to,the,route,as,they,are,read,when,set,to,false,the,remote,files,are,loaded,into,memory,before,being,sent,into,the,route;public,void,set,stream,download,boolean,stream,download,this,stream,download,stream,download
RemoteFileConfiguration -> public void setStreamDownload(boolean streamDownload);1426251104;Sets the download method to use when not using a local working directory.  If set to true,_the remote files are streamed to the route as they are read.  When set to false, the remote files_are loaded into memory before being sent into the route.;public void setStreamDownload(boolean streamDownload) {_        this.streamDownload = streamDownload__    };sets,the,download,method,to,use,when,not,using,a,local,working,directory,if,set,to,true,the,remote,files,are,streamed,to,the,route,as,they,are,read,when,set,to,false,the,remote,files,are,loaded,into,memory,before,being,sent,into,the,route;public,void,set,stream,download,boolean,stream,download,this,stream,download,stream,download
RemoteFileConfiguration -> public void setStreamDownload(boolean streamDownload);1426750198;Sets the download method to use when not using a local working directory.  If set to true,_the remote files are streamed to the route as they are read.  When set to false, the remote files_are loaded into memory before being sent into the route.;public void setStreamDownload(boolean streamDownload) {_        this.streamDownload = streamDownload__    };sets,the,download,method,to,use,when,not,using,a,local,working,directory,if,set,to,true,the,remote,files,are,streamed,to,the,route,as,they,are,read,when,set,to,false,the,remote,files,are,loaded,into,memory,before,being,sent,into,the,route;public,void,set,stream,download,boolean,stream,download,this,stream,download,stream,download
RemoteFileConfiguration -> public void setStreamDownload(boolean streamDownload);1428325442;Sets the download method to use when not using a local working directory.  If set to true,_the remote files are streamed to the route as they are read.  When set to false, the remote files_are loaded into memory before being sent into the route.;public void setStreamDownload(boolean streamDownload) {_        this.streamDownload = streamDownload__    };sets,the,download,method,to,use,when,not,using,a,local,working,directory,if,set,to,true,the,remote,files,are,streamed,to,the,route,as,they,are,read,when,set,to,false,the,remote,files,are,loaded,into,memory,before,being,sent,into,the,route;public,void,set,stream,download,boolean,stream,download,this,stream,download,stream,download
RemoteFileConfiguration -> public void setStreamDownload(boolean streamDownload);1432744961;Sets the download method to use when not using a local working directory.  If set to true,_the remote files are streamed to the route as they are read.  When set to false, the remote files_are loaded into memory before being sent into the route.;public void setStreamDownload(boolean streamDownload) {_        this.streamDownload = streamDownload__    };sets,the,download,method,to,use,when,not,using,a,local,working,directory,if,set,to,true,the,remote,files,are,streamed,to,the,route,as,they,are,read,when,set,to,false,the,remote,files,are,loaded,into,memory,before,being,sent,into,the,route;public,void,set,stream,download,boolean,stream,download,this,stream,download,stream,download
RemoteFileConfiguration -> public void setStreamDownload(boolean streamDownload);1434280087;Sets the download method to use when not using a local working directory.  If set to true,_the remote files are streamed to the route as they are read.  When set to false, the remote files_are loaded into memory before being sent into the route.;public void setStreamDownload(boolean streamDownload) {_        this.streamDownload = streamDownload__    };sets,the,download,method,to,use,when,not,using,a,local,working,directory,if,set,to,true,the,remote,files,are,streamed,to,the,route,as,they,are,read,when,set,to,false,the,remote,files,are,loaded,into,memory,before,being,sent,into,the,route;public,void,set,stream,download,boolean,stream,download,this,stream,download,stream,download
RemoteFileConfiguration -> public void setStreamDownload(boolean streamDownload);1438175607;Sets the download method to use when not using a local working directory.  If set to true,_the remote files are streamed to the route as they are read.  When set to false, the remote files_are loaded into memory before being sent into the route.;public void setStreamDownload(boolean streamDownload) {_        this.streamDownload = streamDownload__    };sets,the,download,method,to,use,when,not,using,a,local,working,directory,if,set,to,true,the,remote,files,are,streamed,to,the,route,as,they,are,read,when,set,to,false,the,remote,files,are,loaded,into,memory,before,being,sent,into,the,route;public,void,set,stream,download,boolean,stream,download,this,stream,download,stream,download
RemoteFileConfiguration -> public void setStreamDownload(boolean streamDownload);1442837121;Sets the download method to use when not using a local working directory.  If set to true,_the remote files are streamed to the route as they are read.  When set to false, the remote files_are loaded into memory before being sent into the route.;public void setStreamDownload(boolean streamDownload) {_        this.streamDownload = streamDownload__    };sets,the,download,method,to,use,when,not,using,a,local,working,directory,if,set,to,true,the,remote,files,are,streamed,to,the,route,as,they,are,read,when,set,to,false,the,remote,files,are,loaded,into,memory,before,being,sent,into,the,route;public,void,set,stream,download,boolean,stream,download,this,stream,download,stream,download
RemoteFileConfiguration -> public void setStreamDownload(boolean streamDownload);1442837494;Sets the download method to use when not using a local working directory.  If set to true,_the remote files are streamed to the route as they are read.  When set to false, the remote files_are loaded into memory before being sent into the route.;public void setStreamDownload(boolean streamDownload) {_        this.streamDownload = streamDownload__    };sets,the,download,method,to,use,when,not,using,a,local,working,directory,if,set,to,true,the,remote,files,are,streamed,to,the,route,as,they,are,read,when,set,to,false,the,remote,files,are,loaded,into,memory,before,being,sent,into,the,route;public,void,set,stream,download,boolean,stream,download,this,stream,download,stream,download
RemoteFileConfiguration -> public void setStreamDownload(boolean streamDownload);1465649425;Sets the download method to use when not using a local working directory.  If set to true,_the remote files are streamed to the route as they are read.  When set to false, the remote files_are loaded into memory before being sent into the route.;public void setStreamDownload(boolean streamDownload) {_        this.streamDownload = streamDownload__    };sets,the,download,method,to,use,when,not,using,a,local,working,directory,if,set,to,true,the,remote,files,are,streamed,to,the,route,as,they,are,read,when,set,to,false,the,remote,files,are,loaded,into,memory,before,being,sent,into,the,route;public,void,set,stream,download,boolean,stream,download,this,stream,download,stream,download
RemoteFileConfiguration -> public void setStreamDownload(boolean streamDownload);1506283402;Sets the download method to use when not using a local working directory.  If set to true,_the remote files are streamed to the route as they are read.  When set to false, the remote files_are loaded into memory before being sent into the route.;public void setStreamDownload(boolean streamDownload) {_        this.streamDownload = streamDownload__    };sets,the,download,method,to,use,when,not,using,a,local,working,directory,if,set,to,true,the,remote,files,are,streamed,to,the,route,as,they,are,read,when,set,to,false,the,remote,files,are,loaded,into,memory,before,being,sent,into,the,route;public,void,set,stream,download,boolean,stream,download,this,stream,download,stream,download
RemoteFileConfiguration -> public void setStreamDownload(boolean streamDownload);1509446107;Sets the download method to use when not using a local working directory.  If set to true,_the remote files are streamed to the route as they are read.  When set to false, the remote files_are loaded into memory before being sent into the route.;public void setStreamDownload(boolean streamDownload) {_        this.streamDownload = streamDownload__    };sets,the,download,method,to,use,when,not,using,a,local,working,directory,if,set,to,true,the,remote,files,are,streamed,to,the,route,as,they,are,read,when,set,to,false,the,remote,files,are,loaded,into,memory,before,being,sent,into,the,route;public,void,set,stream,download,boolean,stream,download,this,stream,download,stream,download
RemoteFileConfiguration -> public void setStreamDownload(boolean streamDownload);1509526271;Sets the download method to use when not using a local working directory.  If set to true,_the remote files are streamed to the route as they are read.  When set to false, the remote files_are loaded into memory before being sent into the route.;public void setStreamDownload(boolean streamDownload) {_        this.streamDownload = streamDownload__    };sets,the,download,method,to,use,when,not,using,a,local,working,directory,if,set,to,true,the,remote,files,are,streamed,to,the,route,as,they,are,read,when,set,to,false,the,remote,files,are,loaded,into,memory,before,being,sent,into,the,route;public,void,set,stream,download,boolean,stream,download,this,stream,download,stream,download
RemoteFileConfiguration -> public void setStreamDownload(boolean streamDownload);1520674832;Sets the download method to use when not using a local working directory.  If set to true,_the remote files are streamed to the route as they are read.  When set to false, the remote files_are loaded into memory before being sent into the route.;public void setStreamDownload(boolean streamDownload) {_        this.streamDownload = streamDownload__    };sets,the,download,method,to,use,when,not,using,a,local,working,directory,if,set,to,true,the,remote,files,are,streamed,to,the,route,as,they,are,read,when,set,to,false,the,remote,files,are,loaded,into,memory,before,being,sent,into,the,route;public,void,set,stream,download,boolean,stream,download,this,stream,download,stream,download
RemoteFileConfiguration -> public void setStreamDownload(boolean streamDownload);1540108158;Sets the download method to use when not using a local working directory.  If set to true,_the remote files are streamed to the route as they are read.  When set to false, the remote files_are loaded into memory before being sent into the route.;public void setStreamDownload(boolean streamDownload) {_        this.streamDownload = streamDownload__    };sets,the,download,method,to,use,when,not,using,a,local,working,directory,if,set,to,true,the,remote,files,are,streamed,to,the,route,as,they,are,read,when,set,to,false,the,remote,files,are,loaded,into,memory,before,being,sent,into,the,route;public,void,set,stream,download,boolean,stream,download,this,stream,download,stream,download
RemoteFileConfiguration -> public void setStreamDownload(boolean streamDownload);1547240981;Sets the download method to use when not using a local working directory.  If set to true,_the remote files are streamed to the route as they are read.  When set to false, the remote files_are loaded into memory before being sent into the route.;public void setStreamDownload(boolean streamDownload) {_        this.streamDownload = streamDownload__    };sets,the,download,method,to,use,when,not,using,a,local,working,directory,if,set,to,true,the,remote,files,are,streamed,to,the,route,as,they,are,read,when,set,to,false,the,remote,files,are,loaded,into,memory,before,being,sent,into,the,route;public,void,set,stream,download,boolean,stream,download,this,stream,download,stream,download
RemoteFileConfiguration -> public void setStreamDownload(boolean streamDownload);1550127542;Sets the download method to use when not using a local working directory.  If set to true,_the remote files are streamed to the route as they are read.  When set to false, the remote files_are loaded into memory before being sent into the route.;public void setStreamDownload(boolean streamDownload) {_        this.streamDownload = streamDownload__    };sets,the,download,method,to,use,when,not,using,a,local,working,directory,if,set,to,true,the,remote,files,are,streamed,to,the,route,as,they,are,read,when,set,to,false,the,remote,files,are,loaded,into,memory,before,being,sent,into,the,route;public,void,set,stream,download,boolean,stream,download,this,stream,download,stream,download
RemoteFileConfiguration -> public void setPassword(String password);1424952635;Password to use for login;public void setPassword(String password) {_        this.password = password__    };password,to,use,for,login;public,void,set,password,string,password,this,password,password
RemoteFileConfiguration -> public void setPassword(String password);1425280684;Password to use for login;public void setPassword(String password) {_        this.password = password__    };password,to,use,for,login;public,void,set,password,string,password,this,password,password
RemoteFileConfiguration -> public void setPassword(String password);1426251104;Password to use for login;public void setPassword(String password) {_        this.password = password__    };password,to,use,for,login;public,void,set,password,string,password,this,password,password
RemoteFileConfiguration -> public void setPassword(String password);1426750198;Password to use for login;public void setPassword(String password) {_        this.password = password__    };password,to,use,for,login;public,void,set,password,string,password,this,password,password
RemoteFileConfiguration -> public void setPassword(String password);1428325442;Password to use for login;public void setPassword(String password) {_        this.password = password__    };password,to,use,for,login;public,void,set,password,string,password,this,password,password
RemoteFileConfiguration -> public void setPassword(String password);1432744961;Password to use for login;public void setPassword(String password) {_        this.password = password__    };password,to,use,for,login;public,void,set,password,string,password,this,password,password
RemoteFileConfiguration -> public void setPassword(String password);1434280087;Password to use for login;public void setPassword(String password) {_        this.password = password__    };password,to,use,for,login;public,void,set,password,string,password,this,password,password
RemoteFileConfiguration -> public void setPassword(String password);1438175607;Password to use for login;public void setPassword(String password) {_        this.password = password__    };password,to,use,for,login;public,void,set,password,string,password,this,password,password
RemoteFileConfiguration -> public void setPassword(String password);1442837121;Password to use for login;public void setPassword(String password) {_        this.password = password__    };password,to,use,for,login;public,void,set,password,string,password,this,password,password
RemoteFileConfiguration -> public void setPassword(String password);1442837494;Password to use for login;public void setPassword(String password) {_        this.password = password__    };password,to,use,for,login;public,void,set,password,string,password,this,password,password
RemoteFileConfiguration -> public void setPassword(String password);1465649425;Password to use for login;public void setPassword(String password) {_        this.password = password__    };password,to,use,for,login;public,void,set,password,string,password,this,password,password
RemoteFileConfiguration -> public void setPassword(String password);1506283402;Password to use for login;public void setPassword(String password) {_        this.password = password__    };password,to,use,for,login;public,void,set,password,string,password,this,password,password
RemoteFileConfiguration -> public void setPassword(String password);1509446107;Password to use for login;public void setPassword(String password) {_        this.password = password__    };password,to,use,for,login;public,void,set,password,string,password,this,password,password
RemoteFileConfiguration -> public void setPassword(String password);1509526271;Password to use for login;public void setPassword(String password) {_        this.password = password__    };password,to,use,for,login;public,void,set,password,string,password,this,password,password
RemoteFileConfiguration -> public void setPassword(String password);1520674832;Password to use for login;public void setPassword(String password) {_        this.password = password__    };password,to,use,for,login;public,void,set,password,string,password,this,password,password
RemoteFileConfiguration -> public void setPassword(String password);1540108158;Password to use for login;public void setPassword(String password) {_        this.password = password__    };password,to,use,for,login;public,void,set,password,string,password,this,password,password
RemoteFileConfiguration -> public void setPassword(String password);1547240981;Password to use for login;public void setPassword(String password) {_        this.password = password__    };password,to,use,for,login;public,void,set,password,string,password,this,password,password
RemoteFileConfiguration -> public void setPassword(String password);1550127542;Password to use for login;public void setPassword(String password) {_        this.password = password__    };password,to,use,for,login;public,void,set,password,string,password,this,password,password
RemoteFileConfiguration -> public void setHost(String host);1424952635;Hostname of the FTP server;public void setHost(String host) {_        this.host = host__    };hostname,of,the,ftp,server;public,void,set,host,string,host,this,host,host
RemoteFileConfiguration -> public void setHost(String host);1425280684;Hostname of the FTP server;public void setHost(String host) {_        this.host = host__    };hostname,of,the,ftp,server;public,void,set,host,string,host,this,host,host
RemoteFileConfiguration -> public void setHost(String host);1426251104;Hostname of the FTP server;public void setHost(String host) {_        this.host = host__    };hostname,of,the,ftp,server;public,void,set,host,string,host,this,host,host
RemoteFileConfiguration -> public void setHost(String host);1426750198;Hostname of the FTP server;public void setHost(String host) {_        this.host = host__    };hostname,of,the,ftp,server;public,void,set,host,string,host,this,host,host
RemoteFileConfiguration -> public void setHost(String host);1428325442;Hostname of the FTP server;public void setHost(String host) {_        this.host = host__    };hostname,of,the,ftp,server;public,void,set,host,string,host,this,host,host
RemoteFileConfiguration -> public void setHost(String host);1432744961;Hostname of the FTP server;public void setHost(String host) {_        this.host = host__    };hostname,of,the,ftp,server;public,void,set,host,string,host,this,host,host
RemoteFileConfiguration -> public void setHost(String host);1434280087;Hostname of the FTP server;public void setHost(String host) {_        this.host = host__    };hostname,of,the,ftp,server;public,void,set,host,string,host,this,host,host
RemoteFileConfiguration -> public void setHost(String host);1438175607;Hostname of the FTP server;public void setHost(String host) {_        this.host = host__    };hostname,of,the,ftp,server;public,void,set,host,string,host,this,host,host
RemoteFileConfiguration -> public void setHost(String host);1442837121;Hostname of the FTP server;public void setHost(String host) {_        this.host = host__    };hostname,of,the,ftp,server;public,void,set,host,string,host,this,host,host
RemoteFileConfiguration -> public void setHost(String host);1442837494;Hostname of the FTP server;public void setHost(String host) {_        this.host = host__    };hostname,of,the,ftp,server;public,void,set,host,string,host,this,host,host
RemoteFileConfiguration -> public void setHost(String host);1465649425;Hostname of the FTP server;public void setHost(String host) {_        this.host = host__    };hostname,of,the,ftp,server;public,void,set,host,string,host,this,host,host
RemoteFileConfiguration -> public void setHost(String host);1506283402;Hostname of the FTP server;public void setHost(String host) {_        this.host = host__    };hostname,of,the,ftp,server;public,void,set,host,string,host,this,host,host
RemoteFileConfiguration -> public void setHost(String host);1509446107;Hostname of the FTP server;public void setHost(String host) {_        this.host = host__    };hostname,of,the,ftp,server;public,void,set,host,string,host,this,host,host
RemoteFileConfiguration -> public void setHost(String host);1509526271;Hostname of the FTP server;public void setHost(String host) {_        this.host = host__    };hostname,of,the,ftp,server;public,void,set,host,string,host,this,host,host
RemoteFileConfiguration -> public void setHost(String host);1520674832;Hostname of the FTP server;public void setHost(String host) {_        this.host = host__    };hostname,of,the,ftp,server;public,void,set,host,string,host,this,host,host
RemoteFileConfiguration -> public void setHost(String host);1540108158;Hostname of the FTP server;public void setHost(String host) {_        this.host = host__    };hostname,of,the,ftp,server;public,void,set,host,string,host,this,host,host
RemoteFileConfiguration -> public void setHost(String host);1547240981;Hostname of the FTP server;public void setHost(String host) {_        this.host = host__    };hostname,of,the,ftp,server;public,void,set,host,string,host,this,host,host
RemoteFileConfiguration -> public void setHost(String host);1550127542;Hostname of the FTP server;public void setHost(String host) {_        this.host = host__    };hostname,of,the,ftp,server;public,void,set,host,string,host,this,host,host
RemoteFileConfiguration -> public void setPort(int port);1424952635;Port of the FTP server;public void setPort(int port) {_        _        if (port > 0) {_            this.port = port__        }_    };port,of,the,ftp,server;public,void,set,port,int,port,if,port,0,this,port,port
RemoteFileConfiguration -> public void setPort(int port);1425280684;Port of the FTP server;public void setPort(int port) {_        _        if (port > 0) {_            this.port = port__        }_    };port,of,the,ftp,server;public,void,set,port,int,port,if,port,0,this,port,port
RemoteFileConfiguration -> public void setPort(int port);1426251104;Port of the FTP server;public void setPort(int port) {_        _        if (port > 0) {_            this.port = port__        }_    };port,of,the,ftp,server;public,void,set,port,int,port,if,port,0,this,port,port
RemoteFileConfiguration -> public void setPort(int port);1426750198;Port of the FTP server;public void setPort(int port) {_        _        if (port > 0) {_            this.port = port__        }_    };port,of,the,ftp,server;public,void,set,port,int,port,if,port,0,this,port,port
RemoteFileConfiguration -> public void setPort(int port);1428325442;Port of the FTP server;public void setPort(int port) {_        _        if (port > 0) {_            this.port = port__        }_    };port,of,the,ftp,server;public,void,set,port,int,port,if,port,0,this,port,port
RemoteFileConfiguration -> public void setPort(int port);1432744961;Port of the FTP server;public void setPort(int port) {_        _        if (port > 0) {_            this.port = port__        }_    };port,of,the,ftp,server;public,void,set,port,int,port,if,port,0,this,port,port
RemoteFileConfiguration -> public void setPort(int port);1434280087;Port of the FTP server;public void setPort(int port) {_        _        if (port > 0) {_            this.port = port__        }_    };port,of,the,ftp,server;public,void,set,port,int,port,if,port,0,this,port,port
RemoteFileConfiguration -> public void setPort(int port);1438175607;Port of the FTP server;public void setPort(int port) {_        _        if (port > 0) {_            this.port = port__        }_    };port,of,the,ftp,server;public,void,set,port,int,port,if,port,0,this,port,port
RemoteFileConfiguration -> public void setPort(int port);1442837121;Port of the FTP server;public void setPort(int port) {_        _        if (port > 0) {_            this.port = port__        }_    };port,of,the,ftp,server;public,void,set,port,int,port,if,port,0,this,port,port
RemoteFileConfiguration -> public void setPort(int port);1442837494;Port of the FTP server;public void setPort(int port) {_        _        if (port > 0) {_            this.port = port__        }_    };port,of,the,ftp,server;public,void,set,port,int,port,if,port,0,this,port,port
RemoteFileConfiguration -> public void setPort(int port);1465649425;Port of the FTP server;public void setPort(int port) {_        _        if (port > 0) {_            this.port = port__        }_    };port,of,the,ftp,server;public,void,set,port,int,port,if,port,0,this,port,port
RemoteFileConfiguration -> public void setPort(int port);1506283402;Port of the FTP server;public void setPort(int port) {_        _        if (port > 0) {_            this.port = port__        }_    };port,of,the,ftp,server;public,void,set,port,int,port,if,port,0,this,port,port
RemoteFileConfiguration -> public void setPort(int port);1509446107;Port of the FTP server;public void setPort(int port) {_        _        if (port > 0) {_            this.port = port__        }_    };port,of,the,ftp,server;public,void,set,port,int,port,if,port,0,this,port,port
RemoteFileConfiguration -> public void setPort(int port);1509526271;Port of the FTP server;public void setPort(int port) {_        _        if (port > 0) {_            this.port = port__        }_    };port,of,the,ftp,server;public,void,set,port,int,port,if,port,0,this,port,port
RemoteFileConfiguration -> public void setPort(int port);1520674832;Port of the FTP server;public void setPort(int port) {_        _        if (port > 0) {_            this.port = port__        }_    };port,of,the,ftp,server;public,void,set,port,int,port,if,port,0,this,port,port
RemoteFileConfiguration -> public void setPort(int port);1540108158;Port of the FTP server;public void setPort(int port) {_        _        if (port > 0) {_            this.port = port__        }_    };port,of,the,ftp,server;public,void,set,port,int,port,if,port,0,this,port,port
RemoteFileConfiguration -> public void setPort(int port);1547240981;Port of the FTP server;public void setPort(int port) {_        _        if (port > 0) {_            this.port = port__        }_    };port,of,the,ftp,server;public,void,set,port,int,port,if,port,0,this,port,port
RemoteFileConfiguration -> public void setPort(int port);1550127542;Port of the FTP server;public void setPort(int port) {_        _        if (port > 0) {_            this.port = port__        }_    };port,of,the,ftp,server;public,void,set,port,int,port,if,port,0,this,port,port
RemoteFileConfiguration -> public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError);1379076760;Whether to ignore when trying to download a file which does not exist or due to permission error._<p/>_By default when a file does not exists or insufficient permission, then an exception is thrown._Setting this option to <tt>true</tt> allows to ignore that instead.;public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError) {_        this.ignoreFileNotFoundOrPermissionError = ignoreFileNotFoundOrPermissionError__    };whether,to,ignore,when,trying,to,download,a,file,which,does,not,exist,or,due,to,permission,error,p,by,default,when,a,file,does,not,exists,or,insufficient,permission,then,an,exception,is,thrown,setting,this,option,to,tt,true,tt,allows,to,ignore,that,instead;public,void,set,ignore,file,not,found,or,permission,error,boolean,ignore,file,not,found,or,permission,error,this,ignore,file,not,found,or,permission,error,ignore,file,not,found,or,permission,error
RemoteFileConfiguration -> public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError);1416567967;Whether to ignore when trying to download a file which does not exist or due to permission error._<p/>_By default when a file does not exists or insufficient permission, then an exception is thrown._Setting this option to <tt>true</tt> allows to ignore that instead.;public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError) {_        this.ignoreFileNotFoundOrPermissionError = ignoreFileNotFoundOrPermissionError__    };whether,to,ignore,when,trying,to,download,a,file,which,does,not,exist,or,due,to,permission,error,p,by,default,when,a,file,does,not,exists,or,insufficient,permission,then,an,exception,is,thrown,setting,this,option,to,tt,true,tt,allows,to,ignore,that,instead;public,void,set,ignore,file,not,found,or,permission,error,boolean,ignore,file,not,found,or,permission,error,this,ignore,file,not,found,or,permission,error,ignore,file,not,found,or,permission,error
RemoteFileConfiguration -> public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError);1424952635;Whether to ignore when trying to download a file which does not exist or due to permission error._<p/>_By default when a file does not exists or insufficient permission, then an exception is thrown._Setting this option to <tt>true</tt> allows to ignore that instead.;public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError) {_        this.ignoreFileNotFoundOrPermissionError = ignoreFileNotFoundOrPermissionError__    };whether,to,ignore,when,trying,to,download,a,file,which,does,not,exist,or,due,to,permission,error,p,by,default,when,a,file,does,not,exists,or,insufficient,permission,then,an,exception,is,thrown,setting,this,option,to,tt,true,tt,allows,to,ignore,that,instead;public,void,set,ignore,file,not,found,or,permission,error,boolean,ignore,file,not,found,or,permission,error,this,ignore,file,not,found,or,permission,error,ignore,file,not,found,or,permission,error
RemoteFileConfiguration -> public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError);1425280684;Whether to ignore when trying to download a file which does not exist or due to permission error._<p/>_By default when a file does not exists or insufficient permission, then an exception is thrown._Setting this option to <tt>true</tt> allows to ignore that instead.;public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError) {_        this.ignoreFileNotFoundOrPermissionError = ignoreFileNotFoundOrPermissionError__    };whether,to,ignore,when,trying,to,download,a,file,which,does,not,exist,or,due,to,permission,error,p,by,default,when,a,file,does,not,exists,or,insufficient,permission,then,an,exception,is,thrown,setting,this,option,to,tt,true,tt,allows,to,ignore,that,instead;public,void,set,ignore,file,not,found,or,permission,error,boolean,ignore,file,not,found,or,permission,error,this,ignore,file,not,found,or,permission,error,ignore,file,not,found,or,permission,error
RemoteFileConfiguration -> public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError);1426251104;Whether to ignore when trying to download a file which does not exist or due to permission error._<p/>_By default when a file does not exists or insufficient permission, then an exception is thrown._Setting this option to <tt>true</tt> allows to ignore that instead.;public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError) {_        this.ignoreFileNotFoundOrPermissionError = ignoreFileNotFoundOrPermissionError__    };whether,to,ignore,when,trying,to,download,a,file,which,does,not,exist,or,due,to,permission,error,p,by,default,when,a,file,does,not,exists,or,insufficient,permission,then,an,exception,is,thrown,setting,this,option,to,tt,true,tt,allows,to,ignore,that,instead;public,void,set,ignore,file,not,found,or,permission,error,boolean,ignore,file,not,found,or,permission,error,this,ignore,file,not,found,or,permission,error,ignore,file,not,found,or,permission,error
RemoteFileConfiguration -> public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError);1426750198;Whether to ignore when trying to download a file which does not exist or due to permission error._<p/>_By default when a file does not exists or insufficient permission, then an exception is thrown._Setting this option to <tt>true</tt> allows to ignore that instead.;public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError) {_        this.ignoreFileNotFoundOrPermissionError = ignoreFileNotFoundOrPermissionError__    };whether,to,ignore,when,trying,to,download,a,file,which,does,not,exist,or,due,to,permission,error,p,by,default,when,a,file,does,not,exists,or,insufficient,permission,then,an,exception,is,thrown,setting,this,option,to,tt,true,tt,allows,to,ignore,that,instead;public,void,set,ignore,file,not,found,or,permission,error,boolean,ignore,file,not,found,or,permission,error,this,ignore,file,not,found,or,permission,error,ignore,file,not,found,or,permission,error
RemoteFileConfiguration -> public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError);1428325442;Whether to ignore when trying to download a file which does not exist or due to permission error._<p/>_By default when a file does not exists or insufficient permission, then an exception is thrown._Setting this option to <tt>true</tt> allows to ignore that instead.;public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError) {_        this.ignoreFileNotFoundOrPermissionError = ignoreFileNotFoundOrPermissionError__    };whether,to,ignore,when,trying,to,download,a,file,which,does,not,exist,or,due,to,permission,error,p,by,default,when,a,file,does,not,exists,or,insufficient,permission,then,an,exception,is,thrown,setting,this,option,to,tt,true,tt,allows,to,ignore,that,instead;public,void,set,ignore,file,not,found,or,permission,error,boolean,ignore,file,not,found,or,permission,error,this,ignore,file,not,found,or,permission,error,ignore,file,not,found,or,permission,error
RemoteFileConfiguration -> public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError);1432744961;Whether to ignore when trying to download a file which does not exist or due to permission error._<p/>_By default when a file does not exists or insufficient permission, then an exception is thrown._Setting this option to <tt>true</tt> allows to ignore that instead.;public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError) {_        this.ignoreFileNotFoundOrPermissionError = ignoreFileNotFoundOrPermissionError__    };whether,to,ignore,when,trying,to,download,a,file,which,does,not,exist,or,due,to,permission,error,p,by,default,when,a,file,does,not,exists,or,insufficient,permission,then,an,exception,is,thrown,setting,this,option,to,tt,true,tt,allows,to,ignore,that,instead;public,void,set,ignore,file,not,found,or,permission,error,boolean,ignore,file,not,found,or,permission,error,this,ignore,file,not,found,or,permission,error,ignore,file,not,found,or,permission,error
RemoteFileConfiguration -> public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError);1434280087;Whether to ignore when trying to download a file which does not exist or due to permission error._<p/>_By default when a file does not exists or insufficient permission, then an exception is thrown._Setting this option to <tt>true</tt> allows to ignore that instead.;public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError) {_        this.ignoreFileNotFoundOrPermissionError = ignoreFileNotFoundOrPermissionError__    };whether,to,ignore,when,trying,to,download,a,file,which,does,not,exist,or,due,to,permission,error,p,by,default,when,a,file,does,not,exists,or,insufficient,permission,then,an,exception,is,thrown,setting,this,option,to,tt,true,tt,allows,to,ignore,that,instead;public,void,set,ignore,file,not,found,or,permission,error,boolean,ignore,file,not,found,or,permission,error,this,ignore,file,not,found,or,permission,error,ignore,file,not,found,or,permission,error
RemoteFileConfiguration -> public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError);1438175607;Whether to ignore when trying to download a file which does not exist or due to permission error._<p/>_By default when a file does not exists or insufficient permission, then an exception is thrown._Setting this option to <tt>true</tt> allows to ignore that instead.;public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError) {_        this.ignoreFileNotFoundOrPermissionError = ignoreFileNotFoundOrPermissionError__    };whether,to,ignore,when,trying,to,download,a,file,which,does,not,exist,or,due,to,permission,error,p,by,default,when,a,file,does,not,exists,or,insufficient,permission,then,an,exception,is,thrown,setting,this,option,to,tt,true,tt,allows,to,ignore,that,instead;public,void,set,ignore,file,not,found,or,permission,error,boolean,ignore,file,not,found,or,permission,error,this,ignore,file,not,found,or,permission,error,ignore,file,not,found,or,permission,error
RemoteFileConfiguration -> public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError);1442837121;Whether to ignore when trying to download a file which does not exist or due to permission error._<p/>_By default when a file does not exists or insufficient permission, then an exception is thrown._Setting this option to <tt>true</tt> allows to ignore that instead.;public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError) {_        this.ignoreFileNotFoundOrPermissionError = ignoreFileNotFoundOrPermissionError__    };whether,to,ignore,when,trying,to,download,a,file,which,does,not,exist,or,due,to,permission,error,p,by,default,when,a,file,does,not,exists,or,insufficient,permission,then,an,exception,is,thrown,setting,this,option,to,tt,true,tt,allows,to,ignore,that,instead;public,void,set,ignore,file,not,found,or,permission,error,boolean,ignore,file,not,found,or,permission,error,this,ignore,file,not,found,or,permission,error,ignore,file,not,found,or,permission,error
RemoteFileConfiguration -> public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError);1442837494;Whether to ignore when trying to download a file which does not exist or due to permission error._<p/>_By default when a file does not exists or insufficient permission, then an exception is thrown._Setting this option to <tt>true</tt> allows to ignore that instead.;public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError) {_        this.ignoreFileNotFoundOrPermissionError = ignoreFileNotFoundOrPermissionError__    };whether,to,ignore,when,trying,to,download,a,file,which,does,not,exist,or,due,to,permission,error,p,by,default,when,a,file,does,not,exists,or,insufficient,permission,then,an,exception,is,thrown,setting,this,option,to,tt,true,tt,allows,to,ignore,that,instead;public,void,set,ignore,file,not,found,or,permission,error,boolean,ignore,file,not,found,or,permission,error,this,ignore,file,not,found,or,permission,error,ignore,file,not,found,or,permission,error
RemoteFileConfiguration -> public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError);1465649425;Whether to ignore when trying to download a file which does not exist or due to permission error._<p/>_By default when a file does not exists or insufficient permission, then an exception is thrown._Setting this option to <tt>true</tt> allows to ignore that instead.;public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError) {_        this.ignoreFileNotFoundOrPermissionError = ignoreFileNotFoundOrPermissionError__    };whether,to,ignore,when,trying,to,download,a,file,which,does,not,exist,or,due,to,permission,error,p,by,default,when,a,file,does,not,exists,or,insufficient,permission,then,an,exception,is,thrown,setting,this,option,to,tt,true,tt,allows,to,ignore,that,instead;public,void,set,ignore,file,not,found,or,permission,error,boolean,ignore,file,not,found,or,permission,error,this,ignore,file,not,found,or,permission,error,ignore,file,not,found,or,permission,error
RemoteFileConfiguration -> public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError);1506283402;Whether to ignore when trying to download a file which does not exist or due to permission error._<p/>_By default when a file does not exists or insufficient permission, then an exception is thrown._Setting this option to <tt>true</tt> allows to ignore that instead.;public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError) {_        this.ignoreFileNotFoundOrPermissionError = ignoreFileNotFoundOrPermissionError__    };whether,to,ignore,when,trying,to,download,a,file,which,does,not,exist,or,due,to,permission,error,p,by,default,when,a,file,does,not,exists,or,insufficient,permission,then,an,exception,is,thrown,setting,this,option,to,tt,true,tt,allows,to,ignore,that,instead;public,void,set,ignore,file,not,found,or,permission,error,boolean,ignore,file,not,found,or,permission,error,this,ignore,file,not,found,or,permission,error,ignore,file,not,found,or,permission,error
RemoteFileConfiguration -> public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError);1509446107;Whether to ignore when trying to download a file which does not exist or due to permission error._<p/>_By default when a file does not exists or insufficient permission, then an exception is thrown._Setting this option to <tt>true</tt> allows to ignore that instead.;public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError) {_        this.ignoreFileNotFoundOrPermissionError = ignoreFileNotFoundOrPermissionError__    };whether,to,ignore,when,trying,to,download,a,file,which,does,not,exist,or,due,to,permission,error,p,by,default,when,a,file,does,not,exists,or,insufficient,permission,then,an,exception,is,thrown,setting,this,option,to,tt,true,tt,allows,to,ignore,that,instead;public,void,set,ignore,file,not,found,or,permission,error,boolean,ignore,file,not,found,or,permission,error,this,ignore,file,not,found,or,permission,error,ignore,file,not,found,or,permission,error
RemoteFileConfiguration -> public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError);1509526271;Whether to ignore when trying to download a file which does not exist or due to permission error._<p/>_By default when a file does not exists or insufficient permission, then an exception is thrown._Setting this option to <tt>true</tt> allows to ignore that instead.;public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError) {_        this.ignoreFileNotFoundOrPermissionError = ignoreFileNotFoundOrPermissionError__    };whether,to,ignore,when,trying,to,download,a,file,which,does,not,exist,or,due,to,permission,error,p,by,default,when,a,file,does,not,exists,or,insufficient,permission,then,an,exception,is,thrown,setting,this,option,to,tt,true,tt,allows,to,ignore,that,instead;public,void,set,ignore,file,not,found,or,permission,error,boolean,ignore,file,not,found,or,permission,error,this,ignore,file,not,found,or,permission,error,ignore,file,not,found,or,permission,error
RemoteFileConfiguration -> public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError);1520674832;Whether to ignore when (trying to list files in directories or when downloading a file), which does not exist or due to permission error._<p/>_By default when a directory or file does not exists or insufficient permission, then an exception is thrown._Setting this option to <tt>true</tt> allows to ignore that instead.;public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError) {_        this.ignoreFileNotFoundOrPermissionError = ignoreFileNotFoundOrPermissionError__    };whether,to,ignore,when,trying,to,list,files,in,directories,or,when,downloading,a,file,which,does,not,exist,or,due,to,permission,error,p,by,default,when,a,directory,or,file,does,not,exists,or,insufficient,permission,then,an,exception,is,thrown,setting,this,option,to,tt,true,tt,allows,to,ignore,that,instead;public,void,set,ignore,file,not,found,or,permission,error,boolean,ignore,file,not,found,or,permission,error,this,ignore,file,not,found,or,permission,error,ignore,file,not,found,or,permission,error
RemoteFileConfiguration -> public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError);1540108158;Whether to ignore when (trying to list files in directories or when downloading a file), which does not exist or due to permission error._<p/>_By default when a directory or file does not exists or insufficient permission, then an exception is thrown._Setting this option to <tt>true</tt> allows to ignore that instead.;public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError) {_        this.ignoreFileNotFoundOrPermissionError = ignoreFileNotFoundOrPermissionError__    };whether,to,ignore,when,trying,to,list,files,in,directories,or,when,downloading,a,file,which,does,not,exist,or,due,to,permission,error,p,by,default,when,a,directory,or,file,does,not,exists,or,insufficient,permission,then,an,exception,is,thrown,setting,this,option,to,tt,true,tt,allows,to,ignore,that,instead;public,void,set,ignore,file,not,found,or,permission,error,boolean,ignore,file,not,found,or,permission,error,this,ignore,file,not,found,or,permission,error,ignore,file,not,found,or,permission,error
RemoteFileConfiguration -> public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError);1547240981;Whether to ignore when (trying to list files in directories or when downloading a file), which does not exist or due to permission error._<p/>_By default when a directory or file does not exists or insufficient permission, then an exception is thrown._Setting this option to <tt>true</tt> allows to ignore that instead.;public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError) {_        this.ignoreFileNotFoundOrPermissionError = ignoreFileNotFoundOrPermissionError__    };whether,to,ignore,when,trying,to,list,files,in,directories,or,when,downloading,a,file,which,does,not,exist,or,due,to,permission,error,p,by,default,when,a,directory,or,file,does,not,exists,or,insufficient,permission,then,an,exception,is,thrown,setting,this,option,to,tt,true,tt,allows,to,ignore,that,instead;public,void,set,ignore,file,not,found,or,permission,error,boolean,ignore,file,not,found,or,permission,error,this,ignore,file,not,found,or,permission,error,ignore,file,not,found,or,permission,error
RemoteFileConfiguration -> public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError);1550127542;Whether to ignore when (trying to list files in directories or when downloading a file), which does not exist or due to permission error._<p/>_By default when a directory or file does not exists or insufficient permission, then an exception is thrown._Setting this option to <tt>true</tt> allows to ignore that instead.;public void setIgnoreFileNotFoundOrPermissionError(boolean ignoreFileNotFoundOrPermissionError) {_        this.ignoreFileNotFoundOrPermissionError = ignoreFileNotFoundOrPermissionError__    };whether,to,ignore,when,trying,to,list,files,in,directories,or,when,downloading,a,file,which,does,not,exist,or,due,to,permission,error,p,by,default,when,a,directory,or,file,does,not,exists,or,insufficient,permission,then,an,exception,is,thrown,setting,this,option,to,tt,true,tt,allows,to,ignore,that,instead;public,void,set,ignore,file,not,found,or,permission,error,boolean,ignore,file,not,found,or,permission,error,this,ignore,file,not,found,or,permission,error,ignore,file,not,found,or,permission,error
RemoteFileConfiguration -> public void setExpression(String fileLanguageExpression);1222531060;Sets the expression based on {@link org.apache.camel.language.simple.FileLanguage};public void setExpression(String fileLanguageExpression) {_        this.expression = FileLanguage.file(fileLanguageExpression)__    };sets,the,expression,based,on,link,org,apache,camel,language,simple,file,language;public,void,set,expression,string,file,language,expression,this,expression,file,language,file,file,language,expression
RemoteFileConfiguration -> public void setExpression(String fileLanguageExpression);1225614299;Sets the expression based on {@link org.apache.camel.language.simple.FileLanguage};public void setExpression(String fileLanguageExpression) {_        this.expression = FileLanguage.file(fileLanguageExpression)__    };sets,the,expression,based,on,link,org,apache,camel,language,simple,file,language;public,void,set,expression,string,file,language,expression,this,expression,file,language,file,file,language,expression
RemoteFileConfiguration -> public void setExpression(String fileLanguageExpression);1227634593;Sets the expression based on {@link org.apache.camel.language.simple.FileLanguage};public void setExpression(String fileLanguageExpression) {_        this.expression = FileLanguage.file(fileLanguageExpression)__    };sets,the,expression,based,on,link,org,apache,camel,language,simple,file,language;public,void,set,expression,string,file,language,expression,this,expression,file,language,file,file,language,expression
RemoteFileConfiguration -> public void setExpression(String fileLanguageExpression);1227958340;Sets the expression based on {@link org.apache.camel.language.simple.FileLanguage};public void setExpression(String fileLanguageExpression) {_        this.expression = FileLanguage.file(fileLanguageExpression)__    };sets,the,expression,based,on,link,org,apache,camel,language,simple,file,language;public,void,set,expression,string,file,language,expression,this,expression,file,language,file,file,language,expression
RemoteFileConfiguration -> public void setExpression(String fileLanguageExpression);1227960907;Sets the expression based on {@link org.apache.camel.language.simple.FileLanguage};public void setExpression(String fileLanguageExpression) {_        this.expression = FileLanguage.file(fileLanguageExpression)__    };sets,the,expression,based,on,link,org,apache,camel,language,simple,file,language;public,void,set,expression,string,file,language,expression,this,expression,file,language,file,file,language,expression
RemoteFileConfiguration -> public void setSoTimeout(int soTimeout);1278429360;Sets the so timeout_<p/>_Used only by FTPClient;public void setSoTimeout(int soTimeout) {_        this.soTimeout = soTimeout__    };sets,the,so,timeout,p,used,only,by,ftpclient;public,void,set,so,timeout,int,so,timeout,this,so,timeout,so,timeout
RemoteFileConfiguration -> public void setSoTimeout(int soTimeout);1280051112;Sets the so timeout_<p/>_Used only by FTPClient;public void setSoTimeout(int soTimeout) {_        this.soTimeout = soTimeout__    };sets,the,so,timeout,p,used,only,by,ftpclient;public,void,set,so,timeout,int,so,timeout,this,so,timeout,so,timeout
RemoteFileConfiguration -> public void setSoTimeout(int soTimeout);1281612824;Sets the so timeout_<p/>_Used only by FTPClient;public void setSoTimeout(int soTimeout) {_        this.soTimeout = soTimeout__    };sets,the,so,timeout,p,used,only,by,ftpclient;public,void,set,so,timeout,int,so,timeout,this,so,timeout,so,timeout
RemoteFileConfiguration -> public void setSoTimeout(int soTimeout);1285675268;Sets the so timeout_<p/>_Used only by FTPClient;public void setSoTimeout(int soTimeout) {_        this.soTimeout = soTimeout__    };sets,the,so,timeout,p,used,only,by,ftpclient;public,void,set,so,timeout,int,so,timeout,this,so,timeout,so,timeout
RemoteFileConfiguration -> public void setSoTimeout(int soTimeout);1285695692;Sets the so timeout_<p/>_Used only by FTPClient;public void setSoTimeout(int soTimeout) {_        this.soTimeout = soTimeout__    };sets,the,so,timeout,p,used,only,by,ftpclient;public,void,set,so,timeout,int,so,timeout,this,so,timeout,so,timeout
RemoteFileConfiguration -> public void setSoTimeout(int soTimeout);1289130838;Sets the so timeout_<p/>_Used only by FTPClient;public void setSoTimeout(int soTimeout) {_        this.soTimeout = soTimeout__    };sets,the,so,timeout,p,used,only,by,ftpclient;public,void,set,so,timeout,int,so,timeout,this,so,timeout,so,timeout
RemoteFileConfiguration -> public void setSoTimeout(int soTimeout);1290702754;Sets the so timeout_<p/>_Used only by FTPClient;public void setSoTimeout(int soTimeout) {_        this.soTimeout = soTimeout__    };sets,the,so,timeout,p,used,only,by,ftpclient;public,void,set,so,timeout,int,so,timeout,this,so,timeout,so,timeout
RemoteFileConfiguration -> public void setSoTimeout(int soTimeout);1361371626;Sets the so timeout_<p/>_Used only by FTPClient;public void setSoTimeout(int soTimeout) {_        this.soTimeout = soTimeout__    };sets,the,so,timeout,p,used,only,by,ftpclient;public,void,set,so,timeout,int,so,timeout,this,so,timeout,so,timeout
RemoteFileConfiguration -> public void setSoTimeout(int soTimeout);1378378166;Sets the so timeout_<p/>_Used only by FTPClient;public void setSoTimeout(int soTimeout) {_        this.soTimeout = soTimeout__    };sets,the,so,timeout,p,used,only,by,ftpclient;public,void,set,so,timeout,int,so,timeout,this,so,timeout,so,timeout
RemoteFileConfiguration -> public void setSoTimeout(int soTimeout);1379076760;Sets the so timeout_<p/>_Used only by FTPClient;public void setSoTimeout(int soTimeout) {_        this.soTimeout = soTimeout__    };sets,the,so,timeout,p,used,only,by,ftpclient;public,void,set,so,timeout,int,so,timeout,this,so,timeout,so,timeout
RemoteFileConfiguration -> public void setSoTimeout(int soTimeout);1416567967;Sets the so timeout_<p/>_Used only by FTPClient;public void setSoTimeout(int soTimeout) {_        this.soTimeout = soTimeout__    };sets,the,so,timeout,p,used,only,by,ftpclient;public,void,set,so,timeout,int,so,timeout,this,so,timeout,so,timeout
RemoteFileConfiguration -> public void setSoTimeout(int soTimeout);1424952635;Sets the so timeout_<p/>_Used only by FTPClient;public void setSoTimeout(int soTimeout) {_        this.soTimeout = soTimeout__    };sets,the,so,timeout,p,used,only,by,ftpclient;public,void,set,so,timeout,int,so,timeout,this,so,timeout,so,timeout
RemoteFileConfiguration -> public void setSoTimeout(int soTimeout);1425280684;Sets the so timeout_<p/>_Used only by FTPClient;public void setSoTimeout(int soTimeout) {_        this.soTimeout = soTimeout__    };sets,the,so,timeout,p,used,only,by,ftpclient;public,void,set,so,timeout,int,so,timeout,this,so,timeout,so,timeout
RemoteFileConfiguration -> public void setSoTimeout(int soTimeout);1426251104;Sets the so timeout_<p/>_Used only by FTPClient;public void setSoTimeout(int soTimeout) {_        this.soTimeout = soTimeout__    };sets,the,so,timeout,p,used,only,by,ftpclient;public,void,set,so,timeout,int,so,timeout,this,so,timeout,so,timeout
RemoteFileConfiguration -> public void setSoTimeout(int soTimeout);1426750198;Sets the so timeout_<p/>_Used only by FTPClient;public void setSoTimeout(int soTimeout) {_        this.soTimeout = soTimeout__    };sets,the,so,timeout,p,used,only,by,ftpclient;public,void,set,so,timeout,int,so,timeout,this,so,timeout,so,timeout
RemoteFileConfiguration -> public void setSoTimeout(int soTimeout);1428325442;Sets the so timeout_<p/>_Used only by FTPClient;public void setSoTimeout(int soTimeout) {_        this.soTimeout = soTimeout__    };sets,the,so,timeout,p,used,only,by,ftpclient;public,void,set,so,timeout,int,so,timeout,this,so,timeout,so,timeout
RemoteFileConfiguration -> public void setSoTimeout(int soTimeout);1432744961;Sets the so timeout_<p/>_Used only by FTPClient;public void setSoTimeout(int soTimeout) {_        this.soTimeout = soTimeout__    };sets,the,so,timeout,p,used,only,by,ftpclient;public,void,set,so,timeout,int,so,timeout,this,so,timeout,so,timeout
RemoteFileConfiguration -> public void setSoTimeout(int soTimeout);1434280087;Sets the so timeout_<p/>_Used only by FTPClient;public void setSoTimeout(int soTimeout) {_        this.soTimeout = soTimeout__    };sets,the,so,timeout,p,used,only,by,ftpclient;public,void,set,so,timeout,int,so,timeout,this,so,timeout,so,timeout
RemoteFileConfiguration -> public void setSoTimeout(int soTimeout);1438175607;Sets the so timeout_<p/>_Used only by FTPClient;public void setSoTimeout(int soTimeout) {_        this.soTimeout = soTimeout__    };sets,the,so,timeout,p,used,only,by,ftpclient;public,void,set,so,timeout,int,so,timeout,this,so,timeout,so,timeout
RemoteFileConfiguration -> public void setSoTimeout(int soTimeout);1442837121;Sets the so timeout_<p/>_Used only by FTPClient;public void setSoTimeout(int soTimeout) {_        this.soTimeout = soTimeout__    };sets,the,so,timeout,p,used,only,by,ftpclient;public,void,set,so,timeout,int,so,timeout,this,so,timeout,so,timeout
RemoteFileConfiguration -> public void setSoTimeout(int soTimeout);1442837494;Sets the so timeout_<p/>_Used only by FTPClient;public void setSoTimeout(int soTimeout) {_        this.soTimeout = soTimeout__    };sets,the,so,timeout,p,used,only,by,ftpclient;public,void,set,so,timeout,int,so,timeout,this,so,timeout,so,timeout
RemoteFileConfiguration -> public void setSoTimeout(int soTimeout);1465649425;Sets the so timeout_<p/>_Used only by FTPClient;public void setSoTimeout(int soTimeout) {_        this.soTimeout = soTimeout__    };sets,the,so,timeout,p,used,only,by,ftpclient;public,void,set,so,timeout,int,so,timeout,this,so,timeout,so,timeout
RemoteFileConfiguration -> public void setSoTimeout(int soTimeout);1506283402;Sets the so timeout_<p/>_Used only by FTPClient;public void setSoTimeout(int soTimeout) {_        this.soTimeout = soTimeout__    };sets,the,so,timeout,p,used,only,by,ftpclient;public,void,set,so,timeout,int,so,timeout,this,so,timeout,so,timeout
RemoteFileConfiguration -> public void setSoTimeout(int soTimeout);1509446107;Sets the so timeout_<p/>_Used only by FTPClient;public void setSoTimeout(int soTimeout) {_        this.soTimeout = soTimeout__    };sets,the,so,timeout,p,used,only,by,ftpclient;public,void,set,so,timeout,int,so,timeout,this,so,timeout,so,timeout
RemoteFileConfiguration -> public void setSoTimeout(int soTimeout);1509526271;Sets the so timeout_<p/>_Used only by FTPClient;public void setSoTimeout(int soTimeout) {_        this.soTimeout = soTimeout__    };sets,the,so,timeout,p,used,only,by,ftpclient;public,void,set,so,timeout,int,so,timeout,this,so,timeout,so,timeout
RemoteFileConfiguration -> public void setSoTimeout(int soTimeout);1520674832;Sets the so timeout_<p/>_Used only by FTPClient;public void setSoTimeout(int soTimeout) {_        this.soTimeout = soTimeout__    };sets,the,so,timeout,p,used,only,by,ftpclient;public,void,set,so,timeout,int,so,timeout,this,so,timeout,so,timeout
RemoteFileConfiguration -> public void setSoTimeout(int soTimeout);1540108158;Sets the so timeout_<p/>_Used only by FTPClient;public void setSoTimeout(int soTimeout) {_        this.soTimeout = soTimeout__    };sets,the,so,timeout,p,used,only,by,ftpclient;public,void,set,so,timeout,int,so,timeout,this,so,timeout,so,timeout
RemoteFileConfiguration -> public void setSoTimeout(int soTimeout);1547240981;Sets the so timeout_<p/>_Used only by FTPClient;public void setSoTimeout(int soTimeout) {_        this.soTimeout = soTimeout__    };sets,the,so,timeout,p,used,only,by,ftpclient;public,void,set,so,timeout,int,so,timeout,this,so,timeout,so,timeout
RemoteFileConfiguration -> public void setSoTimeout(int soTimeout);1550127542;Sets the so timeout_<p/>_FTP and FTPS Only for Camel 2.4. SFTP for Camel 2.14.3/2.15.3/2.16 onwards._Is the SocketOptions.SO_TIMEOUT value in millis._Recommended option is to set this to 300000 so as not have a hanged connection._On SFTP this option is set as timeout on the JSCH Session instance.;public void setSoTimeout(int soTimeout) {_        this.soTimeout = soTimeout__    };sets,the,so,timeout,p,ftp,and,ftps,only,for,camel,2,4,sftp,for,camel,2,14,3,2,15,3,2,16,onwards,is,the,socket,options,value,in,millis,recommended,option,is,to,set,this,to,300000,so,as,not,have,a,hanged,connection,on,sftp,this,option,is,set,as,timeout,on,the,jsch,session,instance;public,void,set,so,timeout,int,so,timeout,this,so,timeout,so,timeout
RemoteFileConfiguration -> public void setStepwise(boolean stepwise);1289130838;Sets whether we should stepwise change directories while traversing file structures_when downloading files, or as well when uploading a file to a directory._<p/>_You can disable this if you for example are in a situation where you cannot change directory_on the FTP server due security reasons.__@param stepwise whether to use change directory or not;public void setStepwise(boolean stepwise) {_        this.stepwise = stepwise__    };sets,whether,we,should,stepwise,change,directories,while,traversing,file,structures,when,downloading,files,or,as,well,when,uploading,a,file,to,a,directory,p,you,can,disable,this,if,you,for,example,are,in,a,situation,where,you,cannot,change,directory,on,the,ftp,server,due,security,reasons,param,stepwise,whether,to,use,change,directory,or,not;public,void,set,stepwise,boolean,stepwise,this,stepwise,stepwise
RemoteFileConfiguration -> public void setStepwise(boolean stepwise);1290702754;Sets whether we should stepwise change directories while traversing file structures_when downloading files, or as well when uploading a file to a directory._<p/>_You can disable this if you for example are in a situation where you cannot change directory_on the FTP server due security reasons.__@param stepwise whether to use change directory or not;public void setStepwise(boolean stepwise) {_        this.stepwise = stepwise__    };sets,whether,we,should,stepwise,change,directories,while,traversing,file,structures,when,downloading,files,or,as,well,when,uploading,a,file,to,a,directory,p,you,can,disable,this,if,you,for,example,are,in,a,situation,where,you,cannot,change,directory,on,the,ftp,server,due,security,reasons,param,stepwise,whether,to,use,change,directory,or,not;public,void,set,stepwise,boolean,stepwise,this,stepwise,stepwise
RemoteFileConfiguration -> public void setStepwise(boolean stepwise);1361371626;Sets whether we should stepwise change directories while traversing file structures_when downloading files, or as well when uploading a file to a directory._<p/>_You can disable this if you for example are in a situation where you cannot change directory_on the FTP server due security reasons.__@param stepwise whether to use change directory or not;public void setStepwise(boolean stepwise) {_        this.stepwise = stepwise__    };sets,whether,we,should,stepwise,change,directories,while,traversing,file,structures,when,downloading,files,or,as,well,when,uploading,a,file,to,a,directory,p,you,can,disable,this,if,you,for,example,are,in,a,situation,where,you,cannot,change,directory,on,the,ftp,server,due,security,reasons,param,stepwise,whether,to,use,change,directory,or,not;public,void,set,stepwise,boolean,stepwise,this,stepwise,stepwise
RemoteFileConfiguration -> public void setStepwise(boolean stepwise);1378378166;Sets whether we should stepwise change directories while traversing file structures_when downloading files, or as well when uploading a file to a directory._<p/>_You can disable this if you for example are in a situation where you cannot change directory_on the FTP server due security reasons.__@param stepwise whether to use change directory or not;public void setStepwise(boolean stepwise) {_        this.stepwise = stepwise__    };sets,whether,we,should,stepwise,change,directories,while,traversing,file,structures,when,downloading,files,or,as,well,when,uploading,a,file,to,a,directory,p,you,can,disable,this,if,you,for,example,are,in,a,situation,where,you,cannot,change,directory,on,the,ftp,server,due,security,reasons,param,stepwise,whether,to,use,change,directory,or,not;public,void,set,stepwise,boolean,stepwise,this,stepwise,stepwise
RemoteFileConfiguration -> public void setStepwise(boolean stepwise);1379076760;Sets whether we should stepwise change directories while traversing file structures_when downloading files, or as well when uploading a file to a directory._<p/>_You can disable this if you for example are in a situation where you cannot change directory_on the FTP server due security reasons.__@param stepwise whether to use change directory or not;public void setStepwise(boolean stepwise) {_        this.stepwise = stepwise__    };sets,whether,we,should,stepwise,change,directories,while,traversing,file,structures,when,downloading,files,or,as,well,when,uploading,a,file,to,a,directory,p,you,can,disable,this,if,you,for,example,are,in,a,situation,where,you,cannot,change,directory,on,the,ftp,server,due,security,reasons,param,stepwise,whether,to,use,change,directory,or,not;public,void,set,stepwise,boolean,stepwise,this,stepwise,stepwise
RemoteFileConfiguration -> public void setStepwise(boolean stepwise);1416567967;Sets whether we should stepwise change directories while traversing file structures_when downloading files, or as well when uploading a file to a directory._<p/>_You can disable this if you for example are in a situation where you cannot change directory_on the FTP server due security reasons.__@param stepwise whether to use change directory or not;public void setStepwise(boolean stepwise) {_        this.stepwise = stepwise__    };sets,whether,we,should,stepwise,change,directories,while,traversing,file,structures,when,downloading,files,or,as,well,when,uploading,a,file,to,a,directory,p,you,can,disable,this,if,you,for,example,are,in,a,situation,where,you,cannot,change,directory,on,the,ftp,server,due,security,reasons,param,stepwise,whether,to,use,change,directory,or,not;public,void,set,stepwise,boolean,stepwise,this,stepwise,stepwise
RemoteFileConfiguration -> public void setStepwise(boolean stepwise);1424952635;Sets whether we should stepwise change directories while traversing file structures_when downloading files, or as well when uploading a file to a directory._<p/>_You can disable this if you for example are in a situation where you cannot change directory_on the FTP server due security reasons.__@param stepwise whether to use change directory or not;public void setStepwise(boolean stepwise) {_        this.stepwise = stepwise__    };sets,whether,we,should,stepwise,change,directories,while,traversing,file,structures,when,downloading,files,or,as,well,when,uploading,a,file,to,a,directory,p,you,can,disable,this,if,you,for,example,are,in,a,situation,where,you,cannot,change,directory,on,the,ftp,server,due,security,reasons,param,stepwise,whether,to,use,change,directory,or,not;public,void,set,stepwise,boolean,stepwise,this,stepwise,stepwise
RemoteFileConfiguration -> public void setStepwise(boolean stepwise);1425280684;Sets whether we should stepwise change directories while traversing file structures_when downloading files, or as well when uploading a file to a directory._<p/>_You can disable this if you for example are in a situation where you cannot change directory_on the FTP server due security reasons.__@param stepwise whether to use change directory or not;public void setStepwise(boolean stepwise) {_        this.stepwise = stepwise__    };sets,whether,we,should,stepwise,change,directories,while,traversing,file,structures,when,downloading,files,or,as,well,when,uploading,a,file,to,a,directory,p,you,can,disable,this,if,you,for,example,are,in,a,situation,where,you,cannot,change,directory,on,the,ftp,server,due,security,reasons,param,stepwise,whether,to,use,change,directory,or,not;public,void,set,stepwise,boolean,stepwise,this,stepwise,stepwise
RemoteFileConfiguration -> public void setStepwise(boolean stepwise);1426251104;Sets whether we should stepwise change directories while traversing file structures_when downloading files, or as well when uploading a file to a directory._<p/>_You can disable this if you for example are in a situation where you cannot change directory_on the FTP server due security reasons.__@param stepwise whether to use change directory or not;public void setStepwise(boolean stepwise) {_        this.stepwise = stepwise__    };sets,whether,we,should,stepwise,change,directories,while,traversing,file,structures,when,downloading,files,or,as,well,when,uploading,a,file,to,a,directory,p,you,can,disable,this,if,you,for,example,are,in,a,situation,where,you,cannot,change,directory,on,the,ftp,server,due,security,reasons,param,stepwise,whether,to,use,change,directory,or,not;public,void,set,stepwise,boolean,stepwise,this,stepwise,stepwise
RemoteFileConfiguration -> public void setStepwise(boolean stepwise);1426750198;Sets whether we should stepwise change directories while traversing file structures_when downloading files, or as well when uploading a file to a directory._<p/>_You can disable this if you for example are in a situation where you cannot change directory_on the FTP server due security reasons.__@param stepwise whether to use change directory or not;public void setStepwise(boolean stepwise) {_        this.stepwise = stepwise__    };sets,whether,we,should,stepwise,change,directories,while,traversing,file,structures,when,downloading,files,or,as,well,when,uploading,a,file,to,a,directory,p,you,can,disable,this,if,you,for,example,are,in,a,situation,where,you,cannot,change,directory,on,the,ftp,server,due,security,reasons,param,stepwise,whether,to,use,change,directory,or,not;public,void,set,stepwise,boolean,stepwise,this,stepwise,stepwise
RemoteFileConfiguration -> public void setStepwise(boolean stepwise);1428325442;Sets whether we should stepwise change directories while traversing file structures_when downloading files, or as well when uploading a file to a directory._<p/>_You can disable this if you for example are in a situation where you cannot change directory_on the FTP server due security reasons.__@param stepwise whether to use change directory or not;public void setStepwise(boolean stepwise) {_        this.stepwise = stepwise__    };sets,whether,we,should,stepwise,change,directories,while,traversing,file,structures,when,downloading,files,or,as,well,when,uploading,a,file,to,a,directory,p,you,can,disable,this,if,you,for,example,are,in,a,situation,where,you,cannot,change,directory,on,the,ftp,server,due,security,reasons,param,stepwise,whether,to,use,change,directory,or,not;public,void,set,stepwise,boolean,stepwise,this,stepwise,stepwise
RemoteFileConfiguration -> public void setStepwise(boolean stepwise);1432744961;Sets whether we should stepwise change directories while traversing file structures_when downloading files, or as well when uploading a file to a directory._<p/>_You can disable this if you for example are in a situation where you cannot change directory_on the FTP server due security reasons.__@param stepwise whether to use change directory or not;public void setStepwise(boolean stepwise) {_        this.stepwise = stepwise__    };sets,whether,we,should,stepwise,change,directories,while,traversing,file,structures,when,downloading,files,or,as,well,when,uploading,a,file,to,a,directory,p,you,can,disable,this,if,you,for,example,are,in,a,situation,where,you,cannot,change,directory,on,the,ftp,server,due,security,reasons,param,stepwise,whether,to,use,change,directory,or,not;public,void,set,stepwise,boolean,stepwise,this,stepwise,stepwise
RemoteFileConfiguration -> public void setStepwise(boolean stepwise);1434280087;Sets whether we should stepwise change directories while traversing file structures_when downloading files, or as well when uploading a file to a directory._<p/>_You can disable this if you for example are in a situation where you cannot change directory_on the FTP server due security reasons.__@param stepwise whether to use change directory or not;public void setStepwise(boolean stepwise) {_        this.stepwise = stepwise__    };sets,whether,we,should,stepwise,change,directories,while,traversing,file,structures,when,downloading,files,or,as,well,when,uploading,a,file,to,a,directory,p,you,can,disable,this,if,you,for,example,are,in,a,situation,where,you,cannot,change,directory,on,the,ftp,server,due,security,reasons,param,stepwise,whether,to,use,change,directory,or,not;public,void,set,stepwise,boolean,stepwise,this,stepwise,stepwise
RemoteFileConfiguration -> public void setStepwise(boolean stepwise);1438175607;Sets whether we should stepwise change directories while traversing file structures_when downloading files, or as well when uploading a file to a directory._<p/>_You can disable this if you for example are in a situation where you cannot change directory_on the FTP server due security reasons.__@param stepwise whether to use change directory or not;public void setStepwise(boolean stepwise) {_        this.stepwise = stepwise__    };sets,whether,we,should,stepwise,change,directories,while,traversing,file,structures,when,downloading,files,or,as,well,when,uploading,a,file,to,a,directory,p,you,can,disable,this,if,you,for,example,are,in,a,situation,where,you,cannot,change,directory,on,the,ftp,server,due,security,reasons,param,stepwise,whether,to,use,change,directory,or,not;public,void,set,stepwise,boolean,stepwise,this,stepwise,stepwise
RemoteFileConfiguration -> public void setStepwise(boolean stepwise);1442837121;Sets whether we should stepwise change directories while traversing file structures_when downloading files, or as well when uploading a file to a directory._<p/>_You can disable this if you for example are in a situation where you cannot change directory_on the FTP server due security reasons.__@param stepwise whether to use change directory or not;public void setStepwise(boolean stepwise) {_        this.stepwise = stepwise__    };sets,whether,we,should,stepwise,change,directories,while,traversing,file,structures,when,downloading,files,or,as,well,when,uploading,a,file,to,a,directory,p,you,can,disable,this,if,you,for,example,are,in,a,situation,where,you,cannot,change,directory,on,the,ftp,server,due,security,reasons,param,stepwise,whether,to,use,change,directory,or,not;public,void,set,stepwise,boolean,stepwise,this,stepwise,stepwise
RemoteFileConfiguration -> public void setStepwise(boolean stepwise);1442837494;Sets whether we should stepwise change directories while traversing file structures_when downloading files, or as well when uploading a file to a directory._<p/>_You can disable this if you for example are in a situation where you cannot change directory_on the FTP server due security reasons.__@param stepwise whether to use change directory or not;public void setStepwise(boolean stepwise) {_        this.stepwise = stepwise__    };sets,whether,we,should,stepwise,change,directories,while,traversing,file,structures,when,downloading,files,or,as,well,when,uploading,a,file,to,a,directory,p,you,can,disable,this,if,you,for,example,are,in,a,situation,where,you,cannot,change,directory,on,the,ftp,server,due,security,reasons,param,stepwise,whether,to,use,change,directory,or,not;public,void,set,stepwise,boolean,stepwise,this,stepwise,stepwise
RemoteFileConfiguration -> public void setStepwise(boolean stepwise);1465649425;Sets whether we should stepwise change directories while traversing file structures_when downloading files, or as well when uploading a file to a directory._<p/>_You can disable this if you for example are in a situation where you cannot change directory_on the FTP server due security reasons.__@param stepwise whether to use change directory or not;public void setStepwise(boolean stepwise) {_        this.stepwise = stepwise__    };sets,whether,we,should,stepwise,change,directories,while,traversing,file,structures,when,downloading,files,or,as,well,when,uploading,a,file,to,a,directory,p,you,can,disable,this,if,you,for,example,are,in,a,situation,where,you,cannot,change,directory,on,the,ftp,server,due,security,reasons,param,stepwise,whether,to,use,change,directory,or,not;public,void,set,stepwise,boolean,stepwise,this,stepwise,stepwise
RemoteFileConfiguration -> public void setStepwise(boolean stepwise);1506283402;Sets whether we should stepwise change directories while traversing file structures_when downloading files, or as well when uploading a file to a directory._<p/>_You can disable this if you for example are in a situation where you cannot change directory_on the FTP server due security reasons.__@param stepwise whether to use change directory or not;public void setStepwise(boolean stepwise) {_        this.stepwise = stepwise__    };sets,whether,we,should,stepwise,change,directories,while,traversing,file,structures,when,downloading,files,or,as,well,when,uploading,a,file,to,a,directory,p,you,can,disable,this,if,you,for,example,are,in,a,situation,where,you,cannot,change,directory,on,the,ftp,server,due,security,reasons,param,stepwise,whether,to,use,change,directory,or,not;public,void,set,stepwise,boolean,stepwise,this,stepwise,stepwise
RemoteFileConfiguration -> public void setStepwise(boolean stepwise);1509446107;Sets whether we should stepwise change directories while traversing file structures_when downloading files, or as well when uploading a file to a directory._<p/>_You can disable this if you for example are in a situation where you cannot change directory_on the FTP server due security reasons.__@param stepwise whether to use change directory or not;public void setStepwise(boolean stepwise) {_        this.stepwise = stepwise__    };sets,whether,we,should,stepwise,change,directories,while,traversing,file,structures,when,downloading,files,or,as,well,when,uploading,a,file,to,a,directory,p,you,can,disable,this,if,you,for,example,are,in,a,situation,where,you,cannot,change,directory,on,the,ftp,server,due,security,reasons,param,stepwise,whether,to,use,change,directory,or,not;public,void,set,stepwise,boolean,stepwise,this,stepwise,stepwise
RemoteFileConfiguration -> public void setStepwise(boolean stepwise);1509526271;Sets whether we should stepwise change directories while traversing file structures_when downloading files, or as well when uploading a file to a directory._<p/>_You can disable this if you for example are in a situation where you cannot change directory_on the FTP server due security reasons.__@param stepwise whether to use change directory or not;public void setStepwise(boolean stepwise) {_        this.stepwise = stepwise__    };sets,whether,we,should,stepwise,change,directories,while,traversing,file,structures,when,downloading,files,or,as,well,when,uploading,a,file,to,a,directory,p,you,can,disable,this,if,you,for,example,are,in,a,situation,where,you,cannot,change,directory,on,the,ftp,server,due,security,reasons,param,stepwise,whether,to,use,change,directory,or,not;public,void,set,stepwise,boolean,stepwise,this,stepwise,stepwise
RemoteFileConfiguration -> public void setStepwise(boolean stepwise);1520674832;Sets whether we should stepwise change directories while traversing file structures_when downloading files, or as well when uploading a file to a directory._<p/>_You can disable this if you for example are in a situation where you cannot change directory_on the FTP server due security reasons.__@param stepwise whether to use change directory or not;public void setStepwise(boolean stepwise) {_        this.stepwise = stepwise__    };sets,whether,we,should,stepwise,change,directories,while,traversing,file,structures,when,downloading,files,or,as,well,when,uploading,a,file,to,a,directory,p,you,can,disable,this,if,you,for,example,are,in,a,situation,where,you,cannot,change,directory,on,the,ftp,server,due,security,reasons,param,stepwise,whether,to,use,change,directory,or,not;public,void,set,stepwise,boolean,stepwise,this,stepwise,stepwise
RemoteFileConfiguration -> public void setStepwise(boolean stepwise);1540108158;Sets whether we should stepwise change directories while traversing file structures_when downloading files, or as well when uploading a file to a directory._<p/>_You can disable this if you for example are in a situation where you cannot change directory_on the FTP server due security reasons.__@param stepwise whether to use change directory or not;public void setStepwise(boolean stepwise) {_        this.stepwise = stepwise__    };sets,whether,we,should,stepwise,change,directories,while,traversing,file,structures,when,downloading,files,or,as,well,when,uploading,a,file,to,a,directory,p,you,can,disable,this,if,you,for,example,are,in,a,situation,where,you,cannot,change,directory,on,the,ftp,server,due,security,reasons,param,stepwise,whether,to,use,change,directory,or,not;public,void,set,stepwise,boolean,stepwise,this,stepwise,stepwise
RemoteFileConfiguration -> public void setStepwise(boolean stepwise);1547240981;Sets whether we should stepwise change directories while traversing file structures_when downloading files, or as well when uploading a file to a directory._<p/>_You can disable this if you for example are in a situation where you cannot change directory_on the FTP server due security reasons.__@param stepwise whether to use change directory or not;public void setStepwise(boolean stepwise) {_        this.stepwise = stepwise__    };sets,whether,we,should,stepwise,change,directories,while,traversing,file,structures,when,downloading,files,or,as,well,when,uploading,a,file,to,a,directory,p,you,can,disable,this,if,you,for,example,are,in,a,situation,where,you,cannot,change,directory,on,the,ftp,server,due,security,reasons,param,stepwise,whether,to,use,change,directory,or,not;public,void,set,stepwise,boolean,stepwise,this,stepwise,stepwise
RemoteFileConfiguration -> public void setStepwise(boolean stepwise);1550127542;Sets whether we should stepwise change directories while traversing file structures_when downloading files, or as well when uploading a file to a directory._<p/>_You can disable this if you for example are in a situation where you cannot change directory_on the FTP server due security reasons.__@param stepwise whether to use change directory or not;public void setStepwise(boolean stepwise) {_        this.stepwise = stepwise__    };sets,whether,we,should,stepwise,change,directories,while,traversing,file,structures,when,downloading,files,or,as,well,when,uploading,a,file,to,a,directory,p,you,can,disable,this,if,you,for,example,are,in,a,situation,where,you,cannot,change,directory,on,the,ftp,server,due,security,reasons,param,stepwise,whether,to,use,change,directory,or,not;public,void,set,stepwise,boolean,stepwise,this,stepwise,stepwise
RemoteFileConfiguration -> public void setDirectoryName(String directoryName);1424952635;The starting directory;public void setDirectoryName(String directoryName) {_        this.directoryName = directoryName__    };the,starting,directory;public,void,set,directory,name,string,directory,name,this,directory,name,directory,name
RemoteFileConfiguration -> public void setDirectoryName(String directoryName);1425280684;The starting directory;public void setDirectoryName(String directoryName) {_        this.directoryName = directoryName__    };the,starting,directory;public,void,set,directory,name,string,directory,name,this,directory,name,directory,name
RemoteFileConfiguration -> public void setDirectoryName(String directoryName);1426251104;The starting directory;public void setDirectoryName(String directoryName) {_        this.directoryName = directoryName__    };the,starting,directory;public,void,set,directory,name,string,directory,name,this,directory,name,directory,name
RemoteFileConfiguration -> public void setDirectoryName(String directoryName);1426750198;The starting directory;public void setDirectoryName(String directoryName) {_        this.directoryName = directoryName__    };the,starting,directory;public,void,set,directory,name,string,directory,name,this,directory,name,directory,name
RemoteFileConfiguration -> public void setDirectoryName(String directoryName);1428325442;The starting directory;public void setDirectoryName(String directoryName) {_        this.directoryName = directoryName__    };the,starting,directory;public,void,set,directory,name,string,directory,name,this,directory,name,directory,name
RemoteFileConfiguration -> public void setDirectoryName(String directoryName);1432744961;The starting directory;public void setDirectoryName(String directoryName) {_        this.directoryName = directoryName__    };the,starting,directory;public,void,set,directory,name,string,directory,name,this,directory,name,directory,name
RemoteFileConfiguration -> public void setDirectoryName(String directoryName);1434280087;The starting directory;public void setDirectoryName(String directoryName) {_        this.directoryName = directoryName__    };the,starting,directory;public,void,set,directory,name,string,directory,name,this,directory,name,directory,name
RemoteFileConfiguration -> public void setDirectoryName(String directoryName);1438175607;The starting directory;public void setDirectoryName(String directoryName) {_        this.directoryName = directoryName__    };the,starting,directory;public,void,set,directory,name,string,directory,name,this,directory,name,directory,name
RemoteFileConfiguration -> public void setDirectoryName(String directoryName);1442837121;The starting directory;public void setDirectoryName(String directoryName) {_        this.directoryName = directoryName__    };the,starting,directory;public,void,set,directory,name,string,directory,name,this,directory,name,directory,name
RemoteFileConfiguration -> public void setDirectoryName(String directoryName);1442837494;The starting directory;public void setDirectoryName(String directoryName) {_        this.directoryName = directoryName__    };the,starting,directory;public,void,set,directory,name,string,directory,name,this,directory,name,directory,name
RemoteFileConfiguration -> public void setDirectoryName(String directoryName);1465649425;The starting directory;public void setDirectoryName(String directoryName) {_        this.directoryName = directoryName__    };the,starting,directory;public,void,set,directory,name,string,directory,name,this,directory,name,directory,name
RemoteFileConfiguration -> public void setDirectoryName(String directoryName);1506283402;The starting directory;public void setDirectoryName(String directoryName) {_        this.directoryName = directoryName__    };the,starting,directory;public,void,set,directory,name,string,directory,name,this,directory,name,directory,name
RemoteFileConfiguration -> public void setDirectoryName(String directoryName);1509446107;The starting directory;public void setDirectoryName(String directoryName) {_        this.directoryName = directoryName__    };the,starting,directory;public,void,set,directory,name,string,directory,name,this,directory,name,directory,name
RemoteFileConfiguration -> public void setDirectoryName(String directoryName);1509526271;The starting directory;public void setDirectoryName(String directoryName) {_        this.directoryName = directoryName__    };the,starting,directory;public,void,set,directory,name,string,directory,name,this,directory,name,directory,name
RemoteFileConfiguration -> public void setDirectoryName(String directoryName);1520674832;The starting directory;public void setDirectoryName(String directoryName) {_        this.directoryName = directoryName__    };the,starting,directory;public,void,set,directory,name,string,directory,name,this,directory,name,directory,name
RemoteFileConfiguration -> public void setDirectoryName(String directoryName);1540108158;The starting directory;public void setDirectoryName(String directoryName) {_        this.directoryName = directoryName__    };the,starting,directory;public,void,set,directory,name,string,directory,name,this,directory,name,directory,name
RemoteFileConfiguration -> public void setDirectoryName(String directoryName);1547240981;The starting directory;public void setDirectoryName(String directoryName) {_        this.directoryName = directoryName__    };the,starting,directory;public,void,set,directory,name,string,directory,name,this,directory,name,directory,name
RemoteFileConfiguration -> public void setDirectoryName(String directoryName);1550127542;The starting directory;public void setDirectoryName(String directoryName) {_        this.directoryName = directoryName__    };the,starting,directory;public,void,set,directory,name,string,directory,name,this,directory,name,directory,name
RemoteFileConfiguration -> public String normalizePath(String path);1290702754;Normalizes the given path according to the configured path separator.__@param path  the given path_@return the normalized path;public String normalizePath(String path) {_        if (ObjectHelper.isEmpty(path) || separator == PathSeparator.Auto) {_            return path__        }__        if (separator == PathSeparator.UNIX) {_            _            return path.replace('\\', '/')__        } else {_            _            return path.replace('/', '\\')__        }_    };normalizes,the,given,path,according,to,the,configured,path,separator,param,path,the,given,path,return,the,normalized,path;public,string,normalize,path,string,path,if,object,helper,is,empty,path,separator,path,separator,auto,return,path,if,separator,path,separator,unix,return,path,replace,else,return,path,replace
RemoteFileConfiguration -> public String normalizePath(String path);1361371626;Normalizes the given path according to the configured path separator.__@param path  the given path_@return the normalized path;public String normalizePath(String path) {_        if (ObjectHelper.isEmpty(path) || separator == PathSeparator.Auto) {_            return path__        }__        if (separator == PathSeparator.UNIX) {_            _            return path.replace('\\', '/')__        } else {_            _            return path.replace('/', '\\')__        }_    };normalizes,the,given,path,according,to,the,configured,path,separator,param,path,the,given,path,return,the,normalized,path;public,string,normalize,path,string,path,if,object,helper,is,empty,path,separator,path,separator,auto,return,path,if,separator,path,separator,unix,return,path,replace,else,return,path,replace
RemoteFileConfiguration -> public String normalizePath(String path);1378378166;Normalizes the given path according to the configured path separator.__@param path  the given path_@return the normalized path;public String normalizePath(String path) {_        if (ObjectHelper.isEmpty(path) || separator == PathSeparator.Auto) {_            return path__        }__        if (separator == PathSeparator.UNIX) {_            _            return path.replace('\\', '/')__        } else {_            _            return path.replace('/', '\\')__        }_    };normalizes,the,given,path,according,to,the,configured,path,separator,param,path,the,given,path,return,the,normalized,path;public,string,normalize,path,string,path,if,object,helper,is,empty,path,separator,path,separator,auto,return,path,if,separator,path,separator,unix,return,path,replace,else,return,path,replace
RemoteFileConfiguration -> public String normalizePath(String path);1379076760;Normalizes the given path according to the configured path separator.__@param path  the given path_@return the normalized path;public String normalizePath(String path) {_        if (ObjectHelper.isEmpty(path) || separator == PathSeparator.Auto) {_            return path__        }__        if (separator == PathSeparator.UNIX) {_            _            return path.replace('\\', '/')__        } else {_            _            return path.replace('/', '\\')__        }_    };normalizes,the,given,path,according,to,the,configured,path,separator,param,path,the,given,path,return,the,normalized,path;public,string,normalize,path,string,path,if,object,helper,is,empty,path,separator,path,separator,auto,return,path,if,separator,path,separator,unix,return,path,replace,else,return,path,replace
RemoteFileConfiguration -> public String normalizePath(String path);1416567967;Normalizes the given path according to the configured path separator.__@param path  the given path_@return the normalized path;public String normalizePath(String path) {_        if (ObjectHelper.isEmpty(path) || separator == PathSeparator.Auto) {_            return path__        }__        if (separator == PathSeparator.UNIX) {_            _            return path.replace('\\', '/')__        } else {_            _            return path.replace('/', '\\')__        }_    };normalizes,the,given,path,according,to,the,configured,path,separator,param,path,the,given,path,return,the,normalized,path;public,string,normalize,path,string,path,if,object,helper,is,empty,path,separator,path,separator,auto,return,path,if,separator,path,separator,unix,return,path,replace,else,return,path,replace
RemoteFileConfiguration -> public String normalizePath(String path);1424952635;Normalizes the given path according to the configured path separator.__@param path  the given path_@return the normalized path;public String normalizePath(String path) {_        if (ObjectHelper.isEmpty(path) || separator == PathSeparator.Auto) {_            return path__        }__        if (separator == PathSeparator.UNIX) {_            _            return path.replace('\\', '/')__        } else {_            _            return path.replace('/', '\\')__        }_    };normalizes,the,given,path,according,to,the,configured,path,separator,param,path,the,given,path,return,the,normalized,path;public,string,normalize,path,string,path,if,object,helper,is,empty,path,separator,path,separator,auto,return,path,if,separator,path,separator,unix,return,path,replace,else,return,path,replace
RemoteFileConfiguration -> public String normalizePath(String path);1425280684;Normalizes the given path according to the configured path separator.__@param path  the given path_@return the normalized path;public String normalizePath(String path) {_        if (ObjectHelper.isEmpty(path) || separator == PathSeparator.Auto) {_            return path__        }__        if (separator == PathSeparator.UNIX) {_            _            return path.replace('\\', '/')__        } else {_            _            return path.replace('/', '\\')__        }_    };normalizes,the,given,path,according,to,the,configured,path,separator,param,path,the,given,path,return,the,normalized,path;public,string,normalize,path,string,path,if,object,helper,is,empty,path,separator,path,separator,auto,return,path,if,separator,path,separator,unix,return,path,replace,else,return,path,replace
RemoteFileConfiguration -> public String normalizePath(String path);1426251104;Normalizes the given path according to the configured path separator.__@param path  the given path_@return the normalized path;public String normalizePath(String path) {_        if (ObjectHelper.isEmpty(path) || separator == PathSeparator.Auto) {_            return path__        }__        if (separator == PathSeparator.UNIX) {_            _            return path.replace('\\', '/')__        } else {_            _            return path.replace('/', '\\')__        }_    };normalizes,the,given,path,according,to,the,configured,path,separator,param,path,the,given,path,return,the,normalized,path;public,string,normalize,path,string,path,if,object,helper,is,empty,path,separator,path,separator,auto,return,path,if,separator,path,separator,unix,return,path,replace,else,return,path,replace
RemoteFileConfiguration -> public String normalizePath(String path);1426750198;Normalizes the given path according to the configured path separator.__@param path  the given path_@return the normalized path;public String normalizePath(String path) {_        if (ObjectHelper.isEmpty(path) || separator == PathSeparator.Auto) {_            return path__        }__        if (separator == PathSeparator.UNIX) {_            _            return path.replace('\\', '/')__        } else {_            _            return path.replace('/', '\\')__        }_    };normalizes,the,given,path,according,to,the,configured,path,separator,param,path,the,given,path,return,the,normalized,path;public,string,normalize,path,string,path,if,object,helper,is,empty,path,separator,path,separator,auto,return,path,if,separator,path,separator,unix,return,path,replace,else,return,path,replace
RemoteFileConfiguration -> public String normalizePath(String path);1428325442;Normalizes the given path according to the configured path separator.__@param path  the given path_@return the normalized path;public String normalizePath(String path) {_        if (ObjectHelper.isEmpty(path) || separator == PathSeparator.Auto) {_            return path__        }__        if (separator == PathSeparator.UNIX) {_            _            return path.replace('\\', '/')__        } else {_            _            return path.replace('/', '\\')__        }_    };normalizes,the,given,path,according,to,the,configured,path,separator,param,path,the,given,path,return,the,normalized,path;public,string,normalize,path,string,path,if,object,helper,is,empty,path,separator,path,separator,auto,return,path,if,separator,path,separator,unix,return,path,replace,else,return,path,replace
RemoteFileConfiguration -> public String normalizePath(String path);1432744961;Normalizes the given path according to the configured path separator.__@param path  the given path_@return the normalized path;public String normalizePath(String path) {_        if (ObjectHelper.isEmpty(path) || separator == PathSeparator.Auto) {_            return path__        }__        if (separator == PathSeparator.UNIX) {_            _            return path.replace('\\', '/')__        } else {_            _            return path.replace('/', '\\')__        }_    };normalizes,the,given,path,according,to,the,configured,path,separator,param,path,the,given,path,return,the,normalized,path;public,string,normalize,path,string,path,if,object,helper,is,empty,path,separator,path,separator,auto,return,path,if,separator,path,separator,unix,return,path,replace,else,return,path,replace
RemoteFileConfiguration -> public String normalizePath(String path);1434280087;Normalizes the given path according to the configured path separator.__@param path  the given path_@return the normalized path;public String normalizePath(String path) {_        if (ObjectHelper.isEmpty(path) || separator == PathSeparator.Auto) {_            return path__        }__        if (separator == PathSeparator.UNIX) {_            _            return path.replace('\\', '/')__        } else {_            _            return path.replace('/', '\\')__        }_    };normalizes,the,given,path,according,to,the,configured,path,separator,param,path,the,given,path,return,the,normalized,path;public,string,normalize,path,string,path,if,object,helper,is,empty,path,separator,path,separator,auto,return,path,if,separator,path,separator,unix,return,path,replace,else,return,path,replace
RemoteFileConfiguration -> public String normalizePath(String path);1438175607;Normalizes the given path according to the configured path separator.__@param path  the given path_@return the normalized path;public String normalizePath(String path) {_        if (ObjectHelper.isEmpty(path) || separator == PathSeparator.Auto) {_            return path__        }__        if (separator == PathSeparator.UNIX) {_            _            return path.replace('\\', '/')__        } else {_            _            return path.replace('/', '\\')__        }_    };normalizes,the,given,path,according,to,the,configured,path,separator,param,path,the,given,path,return,the,normalized,path;public,string,normalize,path,string,path,if,object,helper,is,empty,path,separator,path,separator,auto,return,path,if,separator,path,separator,unix,return,path,replace,else,return,path,replace
RemoteFileConfiguration -> public String normalizePath(String path);1442837121;Normalizes the given path according to the configured path separator.__@param path  the given path_@return the normalized path;public String normalizePath(String path) {_        if (ObjectHelper.isEmpty(path) || separator == PathSeparator.Auto) {_            return path__        }__        if (separator == PathSeparator.UNIX) {_            _            return path.replace('\\', '/')__        } else {_            _            return path.replace('/', '\\')__        }_    };normalizes,the,given,path,according,to,the,configured,path,separator,param,path,the,given,path,return,the,normalized,path;public,string,normalize,path,string,path,if,object,helper,is,empty,path,separator,path,separator,auto,return,path,if,separator,path,separator,unix,return,path,replace,else,return,path,replace
RemoteFileConfiguration -> public String normalizePath(String path);1442837494;Normalizes the given path according to the configured path separator.__@param path  the given path_@return the normalized path;public String normalizePath(String path) {_        if (ObjectHelper.isEmpty(path) || separator == PathSeparator.Auto) {_            return path__        }__        if (separator == PathSeparator.UNIX) {_            _            return path.replace('\\', '/')__        } else {_            _            return path.replace('/', '\\')__        }_    };normalizes,the,given,path,according,to,the,configured,path,separator,param,path,the,given,path,return,the,normalized,path;public,string,normalize,path,string,path,if,object,helper,is,empty,path,separator,path,separator,auto,return,path,if,separator,path,separator,unix,return,path,replace,else,return,path,replace
RemoteFileConfiguration -> public String normalizePath(String path);1465649425;Normalizes the given path according to the configured path separator.__@param path  the given path_@return the normalized path;public String normalizePath(String path) {_        if (ObjectHelper.isEmpty(path) || separator == PathSeparator.Auto) {_            return path__        }__        if (separator == PathSeparator.UNIX) {_            _            return path.replace('\\', '/')__        } else {_            _            return path.replace('/', '\\')__        }_    };normalizes,the,given,path,according,to,the,configured,path,separator,param,path,the,given,path,return,the,normalized,path;public,string,normalize,path,string,path,if,object,helper,is,empty,path,separator,path,separator,auto,return,path,if,separator,path,separator,unix,return,path,replace,else,return,path,replace
RemoteFileConfiguration -> public String normalizePath(String path);1506283402;Normalizes the given path according to the configured path separator.__@param path  the given path_@return the normalized path;public String normalizePath(String path) {_        if (ObjectHelper.isEmpty(path) || separator == PathSeparator.Auto) {_            return path__        }__        if (separator == PathSeparator.UNIX) {_            _            return path.replace('\\', '/')__        } else {_            _            return path.replace('/', '\\')__        }_    };normalizes,the,given,path,according,to,the,configured,path,separator,param,path,the,given,path,return,the,normalized,path;public,string,normalize,path,string,path,if,object,helper,is,empty,path,separator,path,separator,auto,return,path,if,separator,path,separator,unix,return,path,replace,else,return,path,replace
RemoteFileConfiguration -> public String normalizePath(String path);1509446107;Normalizes the given path according to the configured path separator.__@param path  the given path_@return the normalized path;public String normalizePath(String path) {_        if (ObjectHelper.isEmpty(path) || separator == PathSeparator.Auto) {_            return path__        }__        if (separator == PathSeparator.UNIX) {_            _            return path.replace('\\', '/')__        } else {_            _            return path.replace('/', '\\')__        }_    };normalizes,the,given,path,according,to,the,configured,path,separator,param,path,the,given,path,return,the,normalized,path;public,string,normalize,path,string,path,if,object,helper,is,empty,path,separator,path,separator,auto,return,path,if,separator,path,separator,unix,return,path,replace,else,return,path,replace
RemoteFileConfiguration -> public String normalizePath(String path);1509526271;Normalizes the given path according to the configured path separator.__@param path  the given path_@return the normalized path;public String normalizePath(String path) {_        if (ObjectHelper.isEmpty(path) || separator == PathSeparator.Auto) {_            return path__        }__        if (separator == PathSeparator.UNIX) {_            _            return path.replace('\\', '/')__        } else {_            _            return path.replace('/', '\\')__        }_    };normalizes,the,given,path,according,to,the,configured,path,separator,param,path,the,given,path,return,the,normalized,path;public,string,normalize,path,string,path,if,object,helper,is,empty,path,separator,path,separator,auto,return,path,if,separator,path,separator,unix,return,path,replace,else,return,path,replace
RemoteFileConfiguration -> public String normalizePath(String path);1520674832;Normalizes the given path according to the configured path separator.__@param path  the given path_@return the normalized path;public String normalizePath(String path) {_        if (ObjectHelper.isEmpty(path) || separator == PathSeparator.Auto) {_            return path__        }__        if (separator == PathSeparator.UNIX) {_            _            return path.replace('\\', '/')__        } else {_            _            return path.replace('/', '\\')__        }_    };normalizes,the,given,path,according,to,the,configured,path,separator,param,path,the,given,path,return,the,normalized,path;public,string,normalize,path,string,path,if,object,helper,is,empty,path,separator,path,separator,auto,return,path,if,separator,path,separator,unix,return,path,replace,else,return,path,replace
RemoteFileConfiguration -> public String normalizePath(String path);1540108158;Normalizes the given path according to the configured path separator.__@param path  the given path_@return the normalized path;public String normalizePath(String path) {_        if (ObjectHelper.isEmpty(path) || separator == PathSeparator.Auto) {_            return path__        }__        if (separator == PathSeparator.UNIX) {_            _            return path.replace('\\', '/')__        } else {_            _            return path.replace('/', '\\')__        }_    };normalizes,the,given,path,according,to,the,configured,path,separator,param,path,the,given,path,return,the,normalized,path;public,string,normalize,path,string,path,if,object,helper,is,empty,path,separator,path,separator,auto,return,path,if,separator,path,separator,unix,return,path,replace,else,return,path,replace
RemoteFileConfiguration -> public String normalizePath(String path);1547240981;Normalizes the given path according to the configured path separator.__@param path  the given path_@return the normalized path;public String normalizePath(String path) {_        if (ObjectHelper.isEmpty(path) || separator == PathSeparator.Auto) {_            return path__        }__        if (separator == PathSeparator.UNIX) {_            _            return path.replace('\\', '/')__        } else {_            _            return path.replace('/', '\\')__        }_    };normalizes,the,given,path,according,to,the,configured,path,separator,param,path,the,given,path,return,the,normalized,path;public,string,normalize,path,string,path,if,object,helper,is,empty,path,separator,path,separator,auto,return,path,if,separator,path,separator,unix,return,path,replace,else,return,path,replace
RemoteFileConfiguration -> public String normalizePath(String path);1550127542;Normalizes the given path according to the configured path separator.__@param path  the given path_@return the normalized path;public String normalizePath(String path) {_        if (ObjectHelper.isEmpty(path) || separator == PathSeparator.Auto) {_            return path__        }__        if (separator == PathSeparator.UNIX) {_            _            return path.replace('\\', '/')__        } else {_            _            return path.replace('/', '\\')__        }_    };normalizes,the,given,path,according,to,the,configured,path,separator,param,path,the,given,path,return,the,normalized,path;public,string,normalize,path,string,path,if,object,helper,is,empty,path,separator,path,separator,auto,return,path,if,separator,path,separator,unix,return,path,replace,else,return,path,replace
RemoteFileConfiguration -> public void setTempPrefix(String tempPrefix);1227958340;Enables and uses temporary prefix when writing files, after write it will be renamed to the correct name.;public void setTempPrefix(String tempPrefix) {_        this.tempPrefix = tempPrefix__    };enables,and,uses,temporary,prefix,when,writing,files,after,write,it,will,be,renamed,to,the,correct,name;public,void,set,temp,prefix,string,temp,prefix,this,temp,prefix,temp,prefix
RemoteFileConfiguration -> public void setTempPrefix(String tempPrefix);1227960907;Enables and uses temporary prefix when writing files, after write it will be renamed to the correct name.;public void setTempPrefix(String tempPrefix) {_        this.tempPrefix = tempPrefix__    };enables,and,uses,temporary,prefix,when,writing,files,after,write,it,will,be,renamed,to,the,correct,name;public,void,set,temp,prefix,string,temp,prefix,this,temp,prefix,temp,prefix
RemoteFileConfiguration -> public void setReceiveBufferSize(int receiveBufferSize);1426750198;The receive (download) buffer size_<p/>_Used only by FTPClient;public void setReceiveBufferSize(int receiveBufferSize) {_        this.receiveBufferSize = receiveBufferSize__    };the,receive,download,buffer,size,p,used,only,by,ftpclient;public,void,set,receive,buffer,size,int,receive,buffer,size,this,receive,buffer,size,receive,buffer,size
RemoteFileConfiguration -> public void setReceiveBufferSize(int receiveBufferSize);1428325442;The receive (download) buffer size_<p/>_Used only by FTPClient;public void setReceiveBufferSize(int receiveBufferSize) {_        this.receiveBufferSize = receiveBufferSize__    };the,receive,download,buffer,size,p,used,only,by,ftpclient;public,void,set,receive,buffer,size,int,receive,buffer,size,this,receive,buffer,size,receive,buffer,size
RemoteFileConfiguration -> public void setReceiveBufferSize(int receiveBufferSize);1432744961;The receive (download) buffer size_<p/>_Used only by FTPClient;public void setReceiveBufferSize(int receiveBufferSize) {_        this.receiveBufferSize = receiveBufferSize__    };the,receive,download,buffer,size,p,used,only,by,ftpclient;public,void,set,receive,buffer,size,int,receive,buffer,size,this,receive,buffer,size,receive,buffer,size
RemoteFileConfiguration -> public void setReceiveBufferSize(int receiveBufferSize);1434280087;The receive (download) buffer size_<p/>_Used only by FTPClient;public void setReceiveBufferSize(int receiveBufferSize) {_        this.receiveBufferSize = receiveBufferSize__    };the,receive,download,buffer,size,p,used,only,by,ftpclient;public,void,set,receive,buffer,size,int,receive,buffer,size,this,receive,buffer,size,receive,buffer,size
RemoteFileConfiguration -> public void setReceiveBufferSize(int receiveBufferSize);1438175607;The receive (download) buffer size_<p/>_Used only by FTPClient;public void setReceiveBufferSize(int receiveBufferSize) {_        this.receiveBufferSize = receiveBufferSize__    };the,receive,download,buffer,size,p,used,only,by,ftpclient;public,void,set,receive,buffer,size,int,receive,buffer,size,this,receive,buffer,size,receive,buffer,size
RemoteFileConfiguration -> public void setReceiveBufferSize(int receiveBufferSize);1442837121;The receive (download) buffer size_<p/>_Used only by FTPClient;public void setReceiveBufferSize(int receiveBufferSize) {_        this.receiveBufferSize = receiveBufferSize__    };the,receive,download,buffer,size,p,used,only,by,ftpclient;public,void,set,receive,buffer,size,int,receive,buffer,size,this,receive,buffer,size,receive,buffer,size
RemoteFileConfiguration -> public void setReceiveBufferSize(int receiveBufferSize);1442837494;The receive (download) buffer size_<p/>_Used only by FTPClient;public void setReceiveBufferSize(int receiveBufferSize) {_        this.receiveBufferSize = receiveBufferSize__    };the,receive,download,buffer,size,p,used,only,by,ftpclient;public,void,set,receive,buffer,size,int,receive,buffer,size,this,receive,buffer,size,receive,buffer,size
RemoteFileConfiguration -> public void setReceiveBufferSize(int receiveBufferSize);1465649425;The receive (download) buffer size_<p/>_Used only by FTPClient;public void setReceiveBufferSize(int receiveBufferSize) {_        this.receiveBufferSize = receiveBufferSize__    };the,receive,download,buffer,size,p,used,only,by,ftpclient;public,void,set,receive,buffer,size,int,receive,buffer,size,this,receive,buffer,size,receive,buffer,size
RemoteFileConfiguration -> public void setReceiveBufferSize(int receiveBufferSize);1506283402;The receive (download) buffer size_<p/>_Used only by FTPClient;public void setReceiveBufferSize(int receiveBufferSize) {_        this.receiveBufferSize = receiveBufferSize__    };the,receive,download,buffer,size,p,used,only,by,ftpclient;public,void,set,receive,buffer,size,int,receive,buffer,size,this,receive,buffer,size,receive,buffer,size
RemoteFileConfiguration -> public void setReceiveBufferSize(int receiveBufferSize);1509446107;The receive (download) buffer size_<p/>_Used only by FTPClient;public void setReceiveBufferSize(int receiveBufferSize) {_        this.receiveBufferSize = receiveBufferSize__    };the,receive,download,buffer,size,p,used,only,by,ftpclient;public,void,set,receive,buffer,size,int,receive,buffer,size,this,receive,buffer,size,receive,buffer,size
RemoteFileConfiguration -> public void setReceiveBufferSize(int receiveBufferSize);1509526271;The receive (download) buffer size_<p/>_Used only by FTPClient;public void setReceiveBufferSize(int receiveBufferSize) {_        this.receiveBufferSize = receiveBufferSize__    };the,receive,download,buffer,size,p,used,only,by,ftpclient;public,void,set,receive,buffer,size,int,receive,buffer,size,this,receive,buffer,size,receive,buffer,size
RemoteFileConfiguration -> public void setReceiveBufferSize(int receiveBufferSize);1520674832;The receive (download) buffer size_<p/>_Used only by FTPClient;public void setReceiveBufferSize(int receiveBufferSize) {_        this.receiveBufferSize = receiveBufferSize__    };the,receive,download,buffer,size,p,used,only,by,ftpclient;public,void,set,receive,buffer,size,int,receive,buffer,size,this,receive,buffer,size,receive,buffer,size
RemoteFileConfiguration -> public void setReceiveBufferSize(int receiveBufferSize);1540108158;The receive (download) buffer size_<p/>_Used only by FTPClient;public void setReceiveBufferSize(int receiveBufferSize) {_        this.receiveBufferSize = receiveBufferSize__    };the,receive,download,buffer,size,p,used,only,by,ftpclient;public,void,set,receive,buffer,size,int,receive,buffer,size,this,receive,buffer,size,receive,buffer,size
RemoteFileConfiguration -> public void setReceiveBufferSize(int receiveBufferSize);1547240981;The receive (download) buffer size_<p/>_Used only by FTPClient;public void setReceiveBufferSize(int receiveBufferSize) {_        this.receiveBufferSize = receiveBufferSize__    };the,receive,download,buffer,size,p,used,only,by,ftpclient;public,void,set,receive,buffer,size,int,receive,buffer,size,this,receive,buffer,size,receive,buffer,size
RemoteFileConfiguration -> public void setReceiveBufferSize(int receiveBufferSize);1550127542;The receive (download) buffer size_<p/>_Used only by FTPClient;public void setReceiveBufferSize(int receiveBufferSize) {_        this.receiveBufferSize = receiveBufferSize__    };the,receive,download,buffer,size,p,used,only,by,ftpclient;public,void,set,receive,buffer,size,int,receive,buffer,size,this,receive,buffer,size,receive,buffer,size
RemoteFileConfiguration -> public void setTimeout(int timeout);1278429360;Sets the data timeout for waiting for reply_<p/>_Used only by FTPClient;public void setTimeout(int timeout) {_        this.timeout = timeout__    };sets,the,data,timeout,for,waiting,for,reply,p,used,only,by,ftpclient;public,void,set,timeout,int,timeout,this,timeout,timeout
RemoteFileConfiguration -> public void setTimeout(int timeout);1280051112;Sets the data timeout for waiting for reply_<p/>_Used only by FTPClient;public void setTimeout(int timeout) {_        this.timeout = timeout__    };sets,the,data,timeout,for,waiting,for,reply,p,used,only,by,ftpclient;public,void,set,timeout,int,timeout,this,timeout,timeout
RemoteFileConfiguration -> public void setTimeout(int timeout);1281612824;Sets the data timeout for waiting for reply_<p/>_Used only by FTPClient;public void setTimeout(int timeout) {_        this.timeout = timeout__    };sets,the,data,timeout,for,waiting,for,reply,p,used,only,by,ftpclient;public,void,set,timeout,int,timeout,this,timeout,timeout
RemoteFileConfiguration -> public void setTimeout(int timeout);1285675268;Sets the data timeout for waiting for reply_<p/>_Used only by FTPClient;public void setTimeout(int timeout) {_        this.timeout = timeout__    };sets,the,data,timeout,for,waiting,for,reply,p,used,only,by,ftpclient;public,void,set,timeout,int,timeout,this,timeout,timeout
RemoteFileConfiguration -> public void setTimeout(int timeout);1285695692;Sets the data timeout for waiting for reply_<p/>_Used only by FTPClient;public void setTimeout(int timeout) {_        this.timeout = timeout__    };sets,the,data,timeout,for,waiting,for,reply,p,used,only,by,ftpclient;public,void,set,timeout,int,timeout,this,timeout,timeout
RemoteFileConfiguration -> public void setTimeout(int timeout);1289130838;Sets the data timeout for waiting for reply_<p/>_Used only by FTPClient;public void setTimeout(int timeout) {_        this.timeout = timeout__    };sets,the,data,timeout,for,waiting,for,reply,p,used,only,by,ftpclient;public,void,set,timeout,int,timeout,this,timeout,timeout
RemoteFileConfiguration -> public void setTimeout(int timeout);1290702754;Sets the data timeout for waiting for reply_<p/>_Used only by FTPClient;public void setTimeout(int timeout) {_        this.timeout = timeout__    };sets,the,data,timeout,for,waiting,for,reply,p,used,only,by,ftpclient;public,void,set,timeout,int,timeout,this,timeout,timeout
RemoteFileConfiguration -> public void setTimeout(int timeout);1361371626;Sets the data timeout for waiting for reply_<p/>_Used only by FTPClient;public void setTimeout(int timeout) {_        this.timeout = timeout__    };sets,the,data,timeout,for,waiting,for,reply,p,used,only,by,ftpclient;public,void,set,timeout,int,timeout,this,timeout,timeout
RemoteFileConfiguration -> public void setTimeout(int timeout);1378378166;Sets the data timeout for waiting for reply_<p/>_Used only by FTPClient;public void setTimeout(int timeout) {_        this.timeout = timeout__    };sets,the,data,timeout,for,waiting,for,reply,p,used,only,by,ftpclient;public,void,set,timeout,int,timeout,this,timeout,timeout
RemoteFileConfiguration -> public void setTimeout(int timeout);1379076760;Sets the data timeout for waiting for reply_<p/>_Used only by FTPClient;public void setTimeout(int timeout) {_        this.timeout = timeout__    };sets,the,data,timeout,for,waiting,for,reply,p,used,only,by,ftpclient;public,void,set,timeout,int,timeout,this,timeout,timeout
RemoteFileConfiguration -> public void setTimeout(int timeout);1416567967;Sets the data timeout for waiting for reply_<p/>_Used only by FTPClient;public void setTimeout(int timeout) {_        this.timeout = timeout__    };sets,the,data,timeout,for,waiting,for,reply,p,used,only,by,ftpclient;public,void,set,timeout,int,timeout,this,timeout,timeout
RemoteFileConfiguration -> public void setTimeout(int timeout);1424952635;Sets the data timeout for waiting for reply_<p/>_Used only by FTPClient;public void setTimeout(int timeout) {_        this.timeout = timeout__    };sets,the,data,timeout,for,waiting,for,reply,p,used,only,by,ftpclient;public,void,set,timeout,int,timeout,this,timeout,timeout
RemoteFileConfiguration -> public void setTimeout(int timeout);1425280684;Sets the data timeout for waiting for reply_<p/>_Used only by FTPClient;public void setTimeout(int timeout) {_        this.timeout = timeout__    };sets,the,data,timeout,for,waiting,for,reply,p,used,only,by,ftpclient;public,void,set,timeout,int,timeout,this,timeout,timeout
RemoteFileConfiguration -> public void setTimeout(int timeout);1426251104;Sets the data timeout for waiting for reply_<p/>_Used only by FTPClient;public void setTimeout(int timeout) {_        this.timeout = timeout__    };sets,the,data,timeout,for,waiting,for,reply,p,used,only,by,ftpclient;public,void,set,timeout,int,timeout,this,timeout,timeout
RemoteFileConfiguration -> public void setTimeout(int timeout);1426750198;Sets the data timeout for waiting for reply_<p/>_Used only by FTPClient;public void setTimeout(int timeout) {_        this.timeout = timeout__    };sets,the,data,timeout,for,waiting,for,reply,p,used,only,by,ftpclient;public,void,set,timeout,int,timeout,this,timeout,timeout
RemoteFileConfiguration -> public void setTimeout(int timeout);1428325442;Sets the data timeout for waiting for reply_<p/>_Used only by FTPClient;public void setTimeout(int timeout) {_        this.timeout = timeout__    };sets,the,data,timeout,for,waiting,for,reply,p,used,only,by,ftpclient;public,void,set,timeout,int,timeout,this,timeout,timeout
RemoteFileConfiguration -> public void setTimeout(int timeout);1432744961;Sets the data timeout for waiting for reply_<p/>_Used only by FTPClient;public void setTimeout(int timeout) {_        this.timeout = timeout__    };sets,the,data,timeout,for,waiting,for,reply,p,used,only,by,ftpclient;public,void,set,timeout,int,timeout,this,timeout,timeout
RemoteFileConfiguration -> public void setTimeout(int timeout);1434280087;Sets the data timeout for waiting for reply_<p/>_Used only by FTPClient;public void setTimeout(int timeout) {_        this.timeout = timeout__    };sets,the,data,timeout,for,waiting,for,reply,p,used,only,by,ftpclient;public,void,set,timeout,int,timeout,this,timeout,timeout
RemoteFileConfiguration -> public void setTimeout(int timeout);1438175607;Sets the data timeout for waiting for reply_<p/>_Used only by FTPClient;public void setTimeout(int timeout) {_        this.timeout = timeout__    };sets,the,data,timeout,for,waiting,for,reply,p,used,only,by,ftpclient;public,void,set,timeout,int,timeout,this,timeout,timeout
RemoteFileConfiguration -> public void setTimeout(int timeout);1442837121;Sets the data timeout for waiting for reply_<p/>_Used only by FTPClient;public void setTimeout(int timeout) {_        this.timeout = timeout__    };sets,the,data,timeout,for,waiting,for,reply,p,used,only,by,ftpclient;public,void,set,timeout,int,timeout,this,timeout,timeout
RemoteFileConfiguration -> public void setTimeout(int timeout);1442837494;Sets the data timeout for waiting for reply_<p/>_Used only by FTPClient;public void setTimeout(int timeout) {_        this.timeout = timeout__    };sets,the,data,timeout,for,waiting,for,reply,p,used,only,by,ftpclient;public,void,set,timeout,int,timeout,this,timeout,timeout
RemoteFileConfiguration -> public void setTimeout(int timeout);1465649425;Sets the data timeout for waiting for reply_<p/>_Used only by FTPClient;public void setTimeout(int timeout) {_        this.timeout = timeout__    };sets,the,data,timeout,for,waiting,for,reply,p,used,only,by,ftpclient;public,void,set,timeout,int,timeout,this,timeout,timeout
RemoteFileConfiguration -> public void setTimeout(int timeout);1506283402;Sets the data timeout for waiting for reply_<p/>_Used only by FTPClient;public void setTimeout(int timeout) {_        this.timeout = timeout__    };sets,the,data,timeout,for,waiting,for,reply,p,used,only,by,ftpclient;public,void,set,timeout,int,timeout,this,timeout,timeout
RemoteFileConfiguration -> public void setTimeout(int timeout);1509446107;Sets the data timeout for waiting for reply_<p/>_Used only by FTPClient;public void setTimeout(int timeout) {_        this.timeout = timeout__    };sets,the,data,timeout,for,waiting,for,reply,p,used,only,by,ftpclient;public,void,set,timeout,int,timeout,this,timeout,timeout
RemoteFileConfiguration -> public void setTimeout(int timeout);1509526271;Sets the data timeout for waiting for reply_<p/>_Used only by FTPClient;public void setTimeout(int timeout) {_        this.timeout = timeout__    };sets,the,data,timeout,for,waiting,for,reply,p,used,only,by,ftpclient;public,void,set,timeout,int,timeout,this,timeout,timeout
RemoteFileConfiguration -> public void setTimeout(int timeout);1520674832;Sets the data timeout for waiting for reply_<p/>_Used only by FTPClient;public void setTimeout(int timeout) {_        this.timeout = timeout__    };sets,the,data,timeout,for,waiting,for,reply,p,used,only,by,ftpclient;public,void,set,timeout,int,timeout,this,timeout,timeout
RemoteFileConfiguration -> public void setTimeout(int timeout);1540108158;Sets the data timeout for waiting for reply_<p/>_Used only by FTPClient;public void setTimeout(int timeout) {_        this.timeout = timeout__    };sets,the,data,timeout,for,waiting,for,reply,p,used,only,by,ftpclient;public,void,set,timeout,int,timeout,this,timeout,timeout
RemoteFileConfiguration -> public void setTimeout(int timeout);1547240981;Sets the data timeout for waiting for reply_<p/>_Used only by FTPClient;public void setTimeout(int timeout) {_        this.timeout = timeout__    };sets,the,data,timeout,for,waiting,for,reply,p,used,only,by,ftpclient;public,void,set,timeout,int,timeout,this,timeout,timeout
RemoteFileConfiguration -> public void setTimeout(int timeout);1550127542;Sets the data timeout for waiting for reply_<p/>_Used only by FTPClient;public void setTimeout(int timeout) {_        this.timeout = timeout__    };sets,the,data,timeout,for,waiting,for,reply,p,used,only,by,ftpclient;public,void,set,timeout,int,timeout,this,timeout,timeout
RemoteFileConfiguration -> public void setUsername(String username);1424952635;Username to use for login;public void setUsername(String username) {_        this.username = username__    };username,to,use,for,login;public,void,set,username,string,username,this,username,username
RemoteFileConfiguration -> public void setUsername(String username);1425280684;Username to use for login;public void setUsername(String username) {_        this.username = username__    };username,to,use,for,login;public,void,set,username,string,username,this,username,username
RemoteFileConfiguration -> public void setUsername(String username);1426251104;Username to use for login;public void setUsername(String username) {_        this.username = username__    };username,to,use,for,login;public,void,set,username,string,username,this,username,username
RemoteFileConfiguration -> public void setUsername(String username);1426750198;Username to use for login;public void setUsername(String username) {_        this.username = username__    };username,to,use,for,login;public,void,set,username,string,username,this,username,username
RemoteFileConfiguration -> public void setUsername(String username);1428325442;Username to use for login;public void setUsername(String username) {_        this.username = username__    };username,to,use,for,login;public,void,set,username,string,username,this,username,username
RemoteFileConfiguration -> public void setUsername(String username);1432744961;Username to use for login;public void setUsername(String username) {_        this.username = username__    };username,to,use,for,login;public,void,set,username,string,username,this,username,username
RemoteFileConfiguration -> public void setUsername(String username);1434280087;Username to use for login;public void setUsername(String username) {_        this.username = username__    };username,to,use,for,login;public,void,set,username,string,username,this,username,username
RemoteFileConfiguration -> public void setUsername(String username);1438175607;Username to use for login;public void setUsername(String username) {_        this.username = username__    };username,to,use,for,login;public,void,set,username,string,username,this,username,username
RemoteFileConfiguration -> public void setUsername(String username);1442837121;Username to use for login;public void setUsername(String username) {_        this.username = username__    };username,to,use,for,login;public,void,set,username,string,username,this,username,username
RemoteFileConfiguration -> public void setUsername(String username);1442837494;Username to use for login;public void setUsername(String username) {_        this.username = username__    };username,to,use,for,login;public,void,set,username,string,username,this,username,username
RemoteFileConfiguration -> public void setUsername(String username);1465649425;Username to use for login;public void setUsername(String username) {_        this.username = username__    };username,to,use,for,login;public,void,set,username,string,username,this,username,username
RemoteFileConfiguration -> public void setUsername(String username);1506283402;Username to use for login;public void setUsername(String username) {_        this.username = username__    };username,to,use,for,login;public,void,set,username,string,username,this,username,username
RemoteFileConfiguration -> public void setUsername(String username);1509446107;Username to use for login;public void setUsername(String username) {_        this.username = username__    };username,to,use,for,login;public,void,set,username,string,username,this,username,username
RemoteFileConfiguration -> public void setUsername(String username);1509526271;Username to use for login;public void setUsername(String username) {_        this.username = username__    };username,to,use,for,login;public,void,set,username,string,username,this,username,username
RemoteFileConfiguration -> public void setUsername(String username);1520674832;Username to use for login;public void setUsername(String username) {_        this.username = username__    };username,to,use,for,login;public,void,set,username,string,username,this,username,username
RemoteFileConfiguration -> public void setUsername(String username);1540108158;Username to use for login;public void setUsername(String username) {_        this.username = username__    };username,to,use,for,login;public,void,set,username,string,username,this,username,username
RemoteFileConfiguration -> public void setUsername(String username);1547240981;Username to use for login;public void setUsername(String username) {_        this.username = username__    };username,to,use,for,login;public,void,set,username,string,username,this,username,username
RemoteFileConfiguration -> public void setUsername(String username);1550127542;Username to use for login;public void setUsername(String username) {_        this.username = username__    };username,to,use,for,login;public,void,set,username,string,username,this,username,username
RemoteFileConfiguration -> public void setConnectTimeout(int connectTimeout);1278429360;Sets the connect timeout for waiting for a connection to be established_<p/>_Used by both FTPClient and JSCH;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };sets,the,connect,timeout,for,waiting,for,a,connection,to,be,established,p,used,by,both,ftpclient,and,jsch;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RemoteFileConfiguration -> public void setConnectTimeout(int connectTimeout);1280051112;Sets the connect timeout for waiting for a connection to be established_<p/>_Used by both FTPClient and JSCH;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };sets,the,connect,timeout,for,waiting,for,a,connection,to,be,established,p,used,by,both,ftpclient,and,jsch;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RemoteFileConfiguration -> public void setConnectTimeout(int connectTimeout);1281612824;Sets the connect timeout for waiting for a connection to be established_<p/>_Used by both FTPClient and JSCH;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };sets,the,connect,timeout,for,waiting,for,a,connection,to,be,established,p,used,by,both,ftpclient,and,jsch;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RemoteFileConfiguration -> public void setConnectTimeout(int connectTimeout);1285675268;Sets the connect timeout for waiting for a connection to be established_<p/>_Used by both FTPClient and JSCH;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };sets,the,connect,timeout,for,waiting,for,a,connection,to,be,established,p,used,by,both,ftpclient,and,jsch;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RemoteFileConfiguration -> public void setConnectTimeout(int connectTimeout);1285695692;Sets the connect timeout for waiting for a connection to be established_<p/>_Used by both FTPClient and JSCH;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };sets,the,connect,timeout,for,waiting,for,a,connection,to,be,established,p,used,by,both,ftpclient,and,jsch;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RemoteFileConfiguration -> public void setConnectTimeout(int connectTimeout);1289130838;Sets the connect timeout for waiting for a connection to be established_<p/>_Used by both FTPClient and JSCH;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };sets,the,connect,timeout,for,waiting,for,a,connection,to,be,established,p,used,by,both,ftpclient,and,jsch;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RemoteFileConfiguration -> public void setConnectTimeout(int connectTimeout);1290702754;Sets the connect timeout for waiting for a connection to be established_<p/>_Used by both FTPClient and JSCH;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };sets,the,connect,timeout,for,waiting,for,a,connection,to,be,established,p,used,by,both,ftpclient,and,jsch;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RemoteFileConfiguration -> public void setConnectTimeout(int connectTimeout);1361371626;Sets the connect timeout for waiting for a connection to be established_<p/>_Used by both FTPClient and JSCH;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };sets,the,connect,timeout,for,waiting,for,a,connection,to,be,established,p,used,by,both,ftpclient,and,jsch;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RemoteFileConfiguration -> public void setConnectTimeout(int connectTimeout);1378378166;Sets the connect timeout for waiting for a connection to be established_<p/>_Used by both FTPClient and JSCH;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };sets,the,connect,timeout,for,waiting,for,a,connection,to,be,established,p,used,by,both,ftpclient,and,jsch;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RemoteFileConfiguration -> public void setConnectTimeout(int connectTimeout);1379076760;Sets the connect timeout for waiting for a connection to be established_<p/>_Used by both FTPClient and JSCH;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };sets,the,connect,timeout,for,waiting,for,a,connection,to,be,established,p,used,by,both,ftpclient,and,jsch;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RemoteFileConfiguration -> public void setConnectTimeout(int connectTimeout);1416567967;Sets the connect timeout for waiting for a connection to be established_<p/>_Used by both FTPClient and JSCH;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };sets,the,connect,timeout,for,waiting,for,a,connection,to,be,established,p,used,by,both,ftpclient,and,jsch;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RemoteFileConfiguration -> public void setConnectTimeout(int connectTimeout);1424952635;Sets the connect timeout for waiting for a connection to be established_<p/>_Used by both FTPClient and JSCH;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };sets,the,connect,timeout,for,waiting,for,a,connection,to,be,established,p,used,by,both,ftpclient,and,jsch;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RemoteFileConfiguration -> public void setConnectTimeout(int connectTimeout);1425280684;Sets the connect timeout for waiting for a connection to be established_<p/>_Used by both FTPClient and JSCH;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };sets,the,connect,timeout,for,waiting,for,a,connection,to,be,established,p,used,by,both,ftpclient,and,jsch;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RemoteFileConfiguration -> public void setConnectTimeout(int connectTimeout);1426251104;Sets the connect timeout for waiting for a connection to be established_<p/>_Used by both FTPClient and JSCH;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };sets,the,connect,timeout,for,waiting,for,a,connection,to,be,established,p,used,by,both,ftpclient,and,jsch;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RemoteFileConfiguration -> public void setConnectTimeout(int connectTimeout);1426750198;Sets the connect timeout for waiting for a connection to be established_<p/>_Used by both FTPClient and JSCH;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };sets,the,connect,timeout,for,waiting,for,a,connection,to,be,established,p,used,by,both,ftpclient,and,jsch;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RemoteFileConfiguration -> public void setConnectTimeout(int connectTimeout);1428325442;Sets the connect timeout for waiting for a connection to be established_<p/>_Used by both FTPClient and JSCH;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };sets,the,connect,timeout,for,waiting,for,a,connection,to,be,established,p,used,by,both,ftpclient,and,jsch;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RemoteFileConfiguration -> public void setConnectTimeout(int connectTimeout);1432744961;Sets the connect timeout for waiting for a connection to be established_<p/>_Used by both FTPClient and JSCH;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };sets,the,connect,timeout,for,waiting,for,a,connection,to,be,established,p,used,by,both,ftpclient,and,jsch;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RemoteFileConfiguration -> public void setConnectTimeout(int connectTimeout);1434280087;Sets the connect timeout for waiting for a connection to be established_<p/>_Used by both FTPClient and JSCH;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };sets,the,connect,timeout,for,waiting,for,a,connection,to,be,established,p,used,by,both,ftpclient,and,jsch;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RemoteFileConfiguration -> public void setConnectTimeout(int connectTimeout);1438175607;Sets the connect timeout for waiting for a connection to be established_<p/>_Used by both FTPClient and JSCH;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };sets,the,connect,timeout,for,waiting,for,a,connection,to,be,established,p,used,by,both,ftpclient,and,jsch;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RemoteFileConfiguration -> public void setConnectTimeout(int connectTimeout);1442837121;Sets the connect timeout for waiting for a connection to be established_<p/>_Used by both FTPClient and JSCH;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };sets,the,connect,timeout,for,waiting,for,a,connection,to,be,established,p,used,by,both,ftpclient,and,jsch;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RemoteFileConfiguration -> public void setConnectTimeout(int connectTimeout);1442837494;Sets the connect timeout for waiting for a connection to be established_<p/>_Used by both FTPClient and JSCH;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };sets,the,connect,timeout,for,waiting,for,a,connection,to,be,established,p,used,by,both,ftpclient,and,jsch;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RemoteFileConfiguration -> public void setConnectTimeout(int connectTimeout);1465649425;Sets the connect timeout for waiting for a connection to be established_<p/>_Used by both FTPClient and JSCH;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };sets,the,connect,timeout,for,waiting,for,a,connection,to,be,established,p,used,by,both,ftpclient,and,jsch;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RemoteFileConfiguration -> public void setConnectTimeout(int connectTimeout);1506283402;Sets the connect timeout for waiting for a connection to be established_<p/>_Used by both FTPClient and JSCH;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };sets,the,connect,timeout,for,waiting,for,a,connection,to,be,established,p,used,by,both,ftpclient,and,jsch;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RemoteFileConfiguration -> public void setConnectTimeout(int connectTimeout);1509446107;Sets the connect timeout for waiting for a connection to be established_<p/>_Used by both FTPClient and JSCH;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };sets,the,connect,timeout,for,waiting,for,a,connection,to,be,established,p,used,by,both,ftpclient,and,jsch;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RemoteFileConfiguration -> public void setConnectTimeout(int connectTimeout);1509526271;Sets the connect timeout for waiting for a connection to be established_<p/>_Used by both FTPClient and JSCH;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };sets,the,connect,timeout,for,waiting,for,a,connection,to,be,established,p,used,by,both,ftpclient,and,jsch;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RemoteFileConfiguration -> public void setConnectTimeout(int connectTimeout);1520674832;Sets the connect timeout for waiting for a connection to be established_<p/>_Used by both FTPClient and JSCH;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };sets,the,connect,timeout,for,waiting,for,a,connection,to,be,established,p,used,by,both,ftpclient,and,jsch;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RemoteFileConfiguration -> public void setConnectTimeout(int connectTimeout);1540108158;Sets the connect timeout for waiting for a connection to be established_<p/>_Used by both FTPClient and JSCH;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };sets,the,connect,timeout,for,waiting,for,a,connection,to,be,established,p,used,by,both,ftpclient,and,jsch;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RemoteFileConfiguration -> public void setConnectTimeout(int connectTimeout);1547240981;Sets the connect timeout for waiting for a connection to be established_<p/>_Used by both FTPClient and JSCH;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };sets,the,connect,timeout,for,waiting,for,a,connection,to,be,established,p,used,by,both,ftpclient,and,jsch;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RemoteFileConfiguration -> public void setConnectTimeout(int connectTimeout);1550127542;Sets the connect timeout for waiting for a connection to be established_<p/>_Used by both FTPClient and JSCH;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };sets,the,connect,timeout,for,waiting,for,a,connection,to,be,established,p,used,by,both,ftpclient,and,jsch;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
RemoteFileConfiguration -> public void setSiteCommand(String siteCommand);1281612824;Sets optional site command(s) to be executed after successful login._<p/>_Multiple site commands can be separated using a new line character (\n).__@param siteCommand the site command(s).;public void setSiteCommand(String siteCommand) {_        this.siteCommand = siteCommand__    };sets,optional,site,command,s,to,be,executed,after,successful,login,p,multiple,site,commands,can,be,separated,using,a,new,line,character,n,param,site,command,the,site,command,s;public,void,set,site,command,string,site,command,this,site,command,site,command
RemoteFileConfiguration -> public void setSiteCommand(String siteCommand);1285675268;Sets optional site command(s) to be executed after successful login._<p/>_Multiple site commands can be separated using a new line character (\n).__@param siteCommand the site command(s).;public void setSiteCommand(String siteCommand) {_        this.siteCommand = siteCommand__    };sets,optional,site,command,s,to,be,executed,after,successful,login,p,multiple,site,commands,can,be,separated,using,a,new,line,character,n,param,site,command,the,site,command,s;public,void,set,site,command,string,site,command,this,site,command,site,command
RemoteFileConfiguration -> public void setSiteCommand(String siteCommand);1285695692;Sets optional site command(s) to be executed after successful login._<p/>_Multiple site commands can be separated using a new line character (\n).__@param siteCommand the site command(s).;public void setSiteCommand(String siteCommand) {_        this.siteCommand = siteCommand__    };sets,optional,site,command,s,to,be,executed,after,successful,login,p,multiple,site,commands,can,be,separated,using,a,new,line,character,n,param,site,command,the,site,command,s;public,void,set,site,command,string,site,command,this,site,command,site,command
RemoteFileConfiguration -> public void setSiteCommand(String siteCommand);1289130838;Sets optional site command(s) to be executed after successful login._<p/>_Multiple site commands can be separated using a new line character (\n).__@param siteCommand the site command(s).;public void setSiteCommand(String siteCommand) {_        this.siteCommand = siteCommand__    };sets,optional,site,command,s,to,be,executed,after,successful,login,p,multiple,site,commands,can,be,separated,using,a,new,line,character,n,param,site,command,the,site,command,s;public,void,set,site,command,string,site,command,this,site,command,site,command
RemoteFileConfiguration -> public void setSiteCommand(String siteCommand);1290702754;Sets optional site command(s) to be executed after successful login._<p/>_Multiple site commands can be separated using a new line character (\n).__@param siteCommand the site command(s).;public void setSiteCommand(String siteCommand) {_        this.siteCommand = siteCommand__    };sets,optional,site,command,s,to,be,executed,after,successful,login,p,multiple,site,commands,can,be,separated,using,a,new,line,character,n,param,site,command,the,site,command,s;public,void,set,site,command,string,site,command,this,site,command,site,command
RemoteFileConfiguration -> public void setSiteCommand(String siteCommand);1361371626;Sets optional site command(s) to be executed after successful login._<p/>_Multiple site commands can be separated using a new line character (\n).__@param siteCommand the site command(s).;public void setSiteCommand(String siteCommand) {_        this.siteCommand = siteCommand__    };sets,optional,site,command,s,to,be,executed,after,successful,login,p,multiple,site,commands,can,be,separated,using,a,new,line,character,n,param,site,command,the,site,command,s;public,void,set,site,command,string,site,command,this,site,command,site,command
RemoteFileConfiguration -> public void setSiteCommand(String siteCommand);1378378166;Sets optional site command(s) to be executed after successful login._<p/>_Multiple site commands can be separated using a new line character (\n).__@param siteCommand the site command(s).;public void setSiteCommand(String siteCommand) {_        this.siteCommand = siteCommand__    };sets,optional,site,command,s,to,be,executed,after,successful,login,p,multiple,site,commands,can,be,separated,using,a,new,line,character,n,param,site,command,the,site,command,s;public,void,set,site,command,string,site,command,this,site,command,site,command
RemoteFileConfiguration -> public void setSiteCommand(String siteCommand);1379076760;Sets optional site command(s) to be executed after successful login._<p/>_Multiple site commands can be separated using a new line character (\n).__@param siteCommand the site command(s).;public void setSiteCommand(String siteCommand) {_        this.siteCommand = siteCommand__    };sets,optional,site,command,s,to,be,executed,after,successful,login,p,multiple,site,commands,can,be,separated,using,a,new,line,character,n,param,site,command,the,site,command,s;public,void,set,site,command,string,site,command,this,site,command,site,command
RemoteFileConfiguration -> public void setSiteCommand(String siteCommand);1416567967;Sets optional site command(s) to be executed after successful login._<p/>_Multiple site commands can be separated using a new line character (\n).__@param siteCommand the site command(s).;public void setSiteCommand(String siteCommand) {_        this.siteCommand = siteCommand__    };sets,optional,site,command,s,to,be,executed,after,successful,login,p,multiple,site,commands,can,be,separated,using,a,new,line,character,n,param,site,command,the,site,command,s;public,void,set,site,command,string,site,command,this,site,command,site,command
RemoteFileConfiguration -> public void setSiteCommand(String siteCommand);1424952635;Sets optional site command(s) to be executed after successful login._<p/>_Multiple site commands can be separated using a new line character (\n).__@param siteCommand the site command(s).;public void setSiteCommand(String siteCommand) {_        this.siteCommand = siteCommand__    };sets,optional,site,command,s,to,be,executed,after,successful,login,p,multiple,site,commands,can,be,separated,using,a,new,line,character,n,param,site,command,the,site,command,s;public,void,set,site,command,string,site,command,this,site,command,site,command
RemoteFileConfiguration -> public void setSiteCommand(String siteCommand);1425280684;Sets optional site command(s) to be executed after successful login._<p/>_Multiple site commands can be separated using a new line character (\n).__@param siteCommand the site command(s).;public void setSiteCommand(String siteCommand) {_        this.siteCommand = siteCommand__    };sets,optional,site,command,s,to,be,executed,after,successful,login,p,multiple,site,commands,can,be,separated,using,a,new,line,character,n,param,site,command,the,site,command,s;public,void,set,site,command,string,site,command,this,site,command,site,command
RemoteFileConfiguration -> public void setSiteCommand(String siteCommand);1426251104;Sets optional site command(s) to be executed after successful login._<p/>_Multiple site commands can be separated using a new line character (\n).__@param siteCommand the site command(s).;public void setSiteCommand(String siteCommand) {_        this.siteCommand = siteCommand__    };sets,optional,site,command,s,to,be,executed,after,successful,login,p,multiple,site,commands,can,be,separated,using,a,new,line,character,n,param,site,command,the,site,command,s;public,void,set,site,command,string,site,command,this,site,command,site,command
RemoteFileConfiguration -> public void setSiteCommand(String siteCommand);1426750198;Sets optional site command(s) to be executed after successful login._<p/>_Multiple site commands can be separated using a new line character (\n).__@param siteCommand the site command(s).;public void setSiteCommand(String siteCommand) {_        this.siteCommand = siteCommand__    };sets,optional,site,command,s,to,be,executed,after,successful,login,p,multiple,site,commands,can,be,separated,using,a,new,line,character,n,param,site,command,the,site,command,s;public,void,set,site,command,string,site,command,this,site,command,site,command
RemoteFileConfiguration -> public void setSiteCommand(String siteCommand);1428325442;Sets optional site command(s) to be executed after successful login._<p/>_Multiple site commands can be separated using a new line character (\n).__@param siteCommand the site command(s).;public void setSiteCommand(String siteCommand) {_        this.siteCommand = siteCommand__    };sets,optional,site,command,s,to,be,executed,after,successful,login,p,multiple,site,commands,can,be,separated,using,a,new,line,character,n,param,site,command,the,site,command,s;public,void,set,site,command,string,site,command,this,site,command,site,command
RemoteFileConfiguration -> public void setSiteCommand(String siteCommand);1432744961;Sets optional site command(s) to be executed after successful login._<p/>_Multiple site commands can be separated using a new line character (\n).__@param siteCommand the site command(s).;public void setSiteCommand(String siteCommand) {_        this.siteCommand = siteCommand__    };sets,optional,site,command,s,to,be,executed,after,successful,login,p,multiple,site,commands,can,be,separated,using,a,new,line,character,n,param,site,command,the,site,command,s;public,void,set,site,command,string,site,command,this,site,command,site,command
RemoteFileConfiguration -> public void setSiteCommand(String siteCommand);1434280087;Sets optional site command(s) to be executed after successful login._<p/>_Multiple site commands can be separated using a new line character (\n).__@param siteCommand the site command(s).;public void setSiteCommand(String siteCommand) {_        this.siteCommand = siteCommand__    };sets,optional,site,command,s,to,be,executed,after,successful,login,p,multiple,site,commands,can,be,separated,using,a,new,line,character,n,param,site,command,the,site,command,s;public,void,set,site,command,string,site,command,this,site,command,site,command
RemoteFileConfiguration -> public void setSiteCommand(String siteCommand);1438175607;Sets optional site command(s) to be executed after successful login._<p/>_Multiple site commands can be separated using a new line character (\n).__@param siteCommand the site command(s).;public void setSiteCommand(String siteCommand) {_        this.siteCommand = siteCommand__    };sets,optional,site,command,s,to,be,executed,after,successful,login,p,multiple,site,commands,can,be,separated,using,a,new,line,character,n,param,site,command,the,site,command,s;public,void,set,site,command,string,site,command,this,site,command,site,command
RemoteFileConfiguration -> public void setSiteCommand(String siteCommand);1442837121;Sets optional site command(s) to be executed after successful login._<p/>_Multiple site commands can be separated using a new line character (\n).__@param siteCommand the site command(s).;public void setSiteCommand(String siteCommand) {_        this.siteCommand = siteCommand__    };sets,optional,site,command,s,to,be,executed,after,successful,login,p,multiple,site,commands,can,be,separated,using,a,new,line,character,n,param,site,command,the,site,command,s;public,void,set,site,command,string,site,command,this,site,command,site,command
RemoteFileConfiguration -> public void setSiteCommand(String siteCommand);1442837494;Sets optional site command(s) to be executed after successful login._<p/>_Multiple site commands can be separated using a new line character (\n).__@param siteCommand the site command(s).;public void setSiteCommand(String siteCommand) {_        this.siteCommand = siteCommand__    };sets,optional,site,command,s,to,be,executed,after,successful,login,p,multiple,site,commands,can,be,separated,using,a,new,line,character,n,param,site,command,the,site,command,s;public,void,set,site,command,string,site,command,this,site,command,site,command
RemoteFileConfiguration -> public void setSiteCommand(String siteCommand);1465649425;Sets optional site command(s) to be executed after successful login._<p/>_Multiple site commands can be separated using a new line character (\n).__@param siteCommand the site command(s).;public void setSiteCommand(String siteCommand) {_        this.siteCommand = siteCommand__    };sets,optional,site,command,s,to,be,executed,after,successful,login,p,multiple,site,commands,can,be,separated,using,a,new,line,character,n,param,site,command,the,site,command,s;public,void,set,site,command,string,site,command,this,site,command,site,command
RemoteFileConfiguration -> public void setSiteCommand(String siteCommand);1506283402;Sets optional site command(s) to be executed after successful login._<p/>_Multiple site commands can be separated using a new line character.;public void setSiteCommand(String siteCommand) {_        this.siteCommand = siteCommand__    };sets,optional,site,command,s,to,be,executed,after,successful,login,p,multiple,site,commands,can,be,separated,using,a,new,line,character;public,void,set,site,command,string,site,command,this,site,command,site,command
RemoteFileConfiguration -> public void setSiteCommand(String siteCommand);1509446107;Sets optional site command(s) to be executed after successful login._<p/>_Multiple site commands can be separated using a new line character.;public void setSiteCommand(String siteCommand) {_        this.siteCommand = siteCommand__    };sets,optional,site,command,s,to,be,executed,after,successful,login,p,multiple,site,commands,can,be,separated,using,a,new,line,character;public,void,set,site,command,string,site,command,this,site,command,site,command
RemoteFileConfiguration -> public void setSiteCommand(String siteCommand);1509526271;Sets optional site command(s) to be executed after successful login._<p/>_Multiple site commands can be separated using a new line character.;public void setSiteCommand(String siteCommand) {_        this.siteCommand = siteCommand__    };sets,optional,site,command,s,to,be,executed,after,successful,login,p,multiple,site,commands,can,be,separated,using,a,new,line,character;public,void,set,site,command,string,site,command,this,site,command,site,command
RemoteFileConfiguration -> public void setSiteCommand(String siteCommand);1520674832;Sets optional site command(s) to be executed after successful login._<p/>_Multiple site commands can be separated using a new line character.;public void setSiteCommand(String siteCommand) {_        this.siteCommand = siteCommand__    };sets,optional,site,command,s,to,be,executed,after,successful,login,p,multiple,site,commands,can,be,separated,using,a,new,line,character;public,void,set,site,command,string,site,command,this,site,command,site,command
RemoteFileConfiguration -> public void setSiteCommand(String siteCommand);1540108158;Sets optional site command(s) to be executed after successful login._<p/>_Multiple site commands can be separated using a new line character.;public void setSiteCommand(String siteCommand) {_        this.siteCommand = siteCommand__    };sets,optional,site,command,s,to,be,executed,after,successful,login,p,multiple,site,commands,can,be,separated,using,a,new,line,character;public,void,set,site,command,string,site,command,this,site,command,site,command
RemoteFileConfiguration -> public void setSiteCommand(String siteCommand);1547240981;Sets optional site command(s) to be executed after successful login._<p/>_Multiple site commands can be separated using a new line character.;public void setSiteCommand(String siteCommand) {_        this.siteCommand = siteCommand__    };sets,optional,site,command,s,to,be,executed,after,successful,login,p,multiple,site,commands,can,be,separated,using,a,new,line,character;public,void,set,site,command,string,site,command,this,site,command,site,command
RemoteFileConfiguration -> public void setSiteCommand(String siteCommand);1550127542;Sets optional site command(s) to be executed after successful login._<p/>_Multiple site commands can be separated using a new line character.;public void setSiteCommand(String siteCommand) {_        this.siteCommand = siteCommand__    };sets,optional,site,command,s,to,be,executed,after,successful,login,p,multiple,site,commands,can,be,separated,using,a,new,line,character;public,void,set,site,command,string,site,command,this,site,command,site,command
RemoteFileConfiguration -> public void setProtocol(String protocol);1424952635;The ftp protocol to use;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,ftp,protocol,to,use;public,void,set,protocol,string,protocol,this,protocol,protocol
RemoteFileConfiguration -> public void setProtocol(String protocol);1425280684;The ftp protocol to use;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,ftp,protocol,to,use;public,void,set,protocol,string,protocol,this,protocol,protocol
RemoteFileConfiguration -> public void setProtocol(String protocol);1426251104;The ftp protocol to use;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,ftp,protocol,to,use;public,void,set,protocol,string,protocol,this,protocol,protocol
RemoteFileConfiguration -> public void setProtocol(String protocol);1426750198;The ftp protocol to use;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,ftp,protocol,to,use;public,void,set,protocol,string,protocol,this,protocol,protocol
RemoteFileConfiguration -> public void setProtocol(String protocol);1428325442;The ftp protocol to use;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,ftp,protocol,to,use;public,void,set,protocol,string,protocol,this,protocol,protocol
RemoteFileConfiguration -> public void setProtocol(String protocol);1432744961;The ftp protocol to use;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,ftp,protocol,to,use;public,void,set,protocol,string,protocol,this,protocol,protocol
RemoteFileConfiguration -> public void setProtocol(String protocol);1434280087;The ftp protocol to use;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,ftp,protocol,to,use;public,void,set,protocol,string,protocol,this,protocol,protocol
RemoteFileConfiguration -> public void setProtocol(String protocol);1438175607;The ftp protocol to use;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,ftp,protocol,to,use;public,void,set,protocol,string,protocol,this,protocol,protocol
RemoteFileConfiguration -> public void setProtocol(String protocol);1442837121;The ftp protocol to use;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,ftp,protocol,to,use;public,void,set,protocol,string,protocol,this,protocol,protocol
RemoteFileConfiguration -> public void setProtocol(String protocol);1442837494;The ftp protocol to use;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,ftp,protocol,to,use;public,void,set,protocol,string,protocol,this,protocol,protocol
RemoteFileConfiguration -> public void setProtocol(String protocol);1465649425;The ftp protocol to use;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,ftp,protocol,to,use;public,void,set,protocol,string,protocol,this,protocol,protocol
RemoteFileConfiguration -> public void setProtocol(String protocol);1506283402;The ftp protocol to use;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,ftp,protocol,to,use;public,void,set,protocol,string,protocol,this,protocol,protocol
RemoteFileConfiguration -> public void setProtocol(String protocol);1509446107;The ftp protocol to use;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,ftp,protocol,to,use;public,void,set,protocol,string,protocol,this,protocol,protocol
RemoteFileConfiguration -> public void setProtocol(String protocol);1509526271;The ftp protocol to use;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,ftp,protocol,to,use;public,void,set,protocol,string,protocol,this,protocol,protocol
RemoteFileConfiguration -> public void setProtocol(String protocol);1520674832;The ftp protocol to use;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,ftp,protocol,to,use;public,void,set,protocol,string,protocol,this,protocol,protocol
RemoteFileConfiguration -> public void setProtocol(String protocol);1540108158;The ftp protocol to use;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,ftp,protocol,to,use;public,void,set,protocol,string,protocol,this,protocol,protocol
RemoteFileConfiguration -> public void setProtocol(String protocol);1547240981;The ftp protocol to use;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,ftp,protocol,to,use;public,void,set,protocol,string,protocol,this,protocol,protocol
RemoteFileConfiguration -> public void setProtocol(String protocol);1550127542;The ftp protocol to use;public void setProtocol(String protocol) {_        this.protocol = protocol__    };the,ftp,protocol,to,use;public,void,set,protocol,string,protocol,this,protocol,protocol
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1225614299;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1227634593;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1227958340;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1227960907;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1230288790;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1232440963;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1232970726;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1233306659;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1233898199;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1236418952;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1236421301;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1277545968;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1277546558;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1278429360;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1280051112;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1281612824;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1285675268;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1285695692;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1289130838;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1290702754;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1361371626;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1378378166;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1379076760;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1416567967;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1424952635;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1425280684;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1426251104;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1426750198;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1428325442;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1432744961;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1434280087;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1438175607;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1442837121;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1442837494;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1465649425;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1506283402;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1509446107;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1509526271;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1520674832;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1540108158;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1547240981;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setPassiveMode(boolean passiveMode);1550127542;Sets passive mode connections._<br/>_Default is active mode connections.;public void setPassiveMode(boolean passiveMode) {_        this.passiveMode = passiveMode__    };sets,passive,mode,connections,br,default,is,active,mode,connections;public,void,set,passive,mode,boolean,passive,mode,this,passive,mode,passive,mode
RemoteFileConfiguration -> public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed);1280051112;Should an exception be thrown if connection failed (exhausted)_<p/>_By default exception is not thrown and a <tt>WARN</tt> is logged._You can use this to enable exception being thrown and handle the thrown exception_from the {@link org.apache.camel.spi.PollingConsumerPollStrategy} rollback method.;public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed) {_        this.throwExceptionOnConnectFailed = throwExceptionOnConnectFailed__    };should,an,exception,be,thrown,if,connection,failed,exhausted,p,by,default,exception,is,not,thrown,and,a,tt,warn,tt,is,logged,you,can,use,this,to,enable,exception,being,thrown,and,handle,the,thrown,exception,from,the,link,org,apache,camel,spi,polling,consumer,poll,strategy,rollback,method;public,void,set,throw,exception,on,connect,failed,boolean,throw,exception,on,connect,failed,this,throw,exception,on,connect,failed,throw,exception,on,connect,failed
RemoteFileConfiguration -> public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed);1281612824;Should an exception be thrown if connection failed (exhausted)_<p/>_By default exception is not thrown and a <tt>WARN</tt> is logged._You can use this to enable exception being thrown and handle the thrown exception_from the {@link org.apache.camel.spi.PollingConsumerPollStrategy} rollback method.;public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed) {_        this.throwExceptionOnConnectFailed = throwExceptionOnConnectFailed__    };should,an,exception,be,thrown,if,connection,failed,exhausted,p,by,default,exception,is,not,thrown,and,a,tt,warn,tt,is,logged,you,can,use,this,to,enable,exception,being,thrown,and,handle,the,thrown,exception,from,the,link,org,apache,camel,spi,polling,consumer,poll,strategy,rollback,method;public,void,set,throw,exception,on,connect,failed,boolean,throw,exception,on,connect,failed,this,throw,exception,on,connect,failed,throw,exception,on,connect,failed
RemoteFileConfiguration -> public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed);1285675268;Should an exception be thrown if connection failed (exhausted)_<p/>_By default exception is not thrown and a <tt>WARN</tt> is logged._You can use this to enable exception being thrown and handle the thrown exception_from the {@link org.apache.camel.spi.PollingConsumerPollStrategy} rollback method.;public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed) {_        this.throwExceptionOnConnectFailed = throwExceptionOnConnectFailed__    };should,an,exception,be,thrown,if,connection,failed,exhausted,p,by,default,exception,is,not,thrown,and,a,tt,warn,tt,is,logged,you,can,use,this,to,enable,exception,being,thrown,and,handle,the,thrown,exception,from,the,link,org,apache,camel,spi,polling,consumer,poll,strategy,rollback,method;public,void,set,throw,exception,on,connect,failed,boolean,throw,exception,on,connect,failed,this,throw,exception,on,connect,failed,throw,exception,on,connect,failed
RemoteFileConfiguration -> public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed);1285695692;Should an exception be thrown if connection failed (exhausted)_<p/>_By default exception is not thrown and a <tt>WARN</tt> is logged._You can use this to enable exception being thrown and handle the thrown exception_from the {@link org.apache.camel.spi.PollingConsumerPollStrategy} rollback method.;public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed) {_        this.throwExceptionOnConnectFailed = throwExceptionOnConnectFailed__    };should,an,exception,be,thrown,if,connection,failed,exhausted,p,by,default,exception,is,not,thrown,and,a,tt,warn,tt,is,logged,you,can,use,this,to,enable,exception,being,thrown,and,handle,the,thrown,exception,from,the,link,org,apache,camel,spi,polling,consumer,poll,strategy,rollback,method;public,void,set,throw,exception,on,connect,failed,boolean,throw,exception,on,connect,failed,this,throw,exception,on,connect,failed,throw,exception,on,connect,failed
RemoteFileConfiguration -> public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed);1289130838;Should an exception be thrown if connection failed (exhausted)_<p/>_By default exception is not thrown and a <tt>WARN</tt> is logged._You can use this to enable exception being thrown and handle the thrown exception_from the {@link org.apache.camel.spi.PollingConsumerPollStrategy} rollback method.;public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed) {_        this.throwExceptionOnConnectFailed = throwExceptionOnConnectFailed__    };should,an,exception,be,thrown,if,connection,failed,exhausted,p,by,default,exception,is,not,thrown,and,a,tt,warn,tt,is,logged,you,can,use,this,to,enable,exception,being,thrown,and,handle,the,thrown,exception,from,the,link,org,apache,camel,spi,polling,consumer,poll,strategy,rollback,method;public,void,set,throw,exception,on,connect,failed,boolean,throw,exception,on,connect,failed,this,throw,exception,on,connect,failed,throw,exception,on,connect,failed
RemoteFileConfiguration -> public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed);1290702754;Should an exception be thrown if connection failed (exhausted)_<p/>_By default exception is not thrown and a <tt>WARN</tt> is logged._You can use this to enable exception being thrown and handle the thrown exception_from the {@link org.apache.camel.spi.PollingConsumerPollStrategy} rollback method.;public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed) {_        this.throwExceptionOnConnectFailed = throwExceptionOnConnectFailed__    };should,an,exception,be,thrown,if,connection,failed,exhausted,p,by,default,exception,is,not,thrown,and,a,tt,warn,tt,is,logged,you,can,use,this,to,enable,exception,being,thrown,and,handle,the,thrown,exception,from,the,link,org,apache,camel,spi,polling,consumer,poll,strategy,rollback,method;public,void,set,throw,exception,on,connect,failed,boolean,throw,exception,on,connect,failed,this,throw,exception,on,connect,failed,throw,exception,on,connect,failed
RemoteFileConfiguration -> public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed);1361371626;Should an exception be thrown if connection failed (exhausted)_<p/>_By default exception is not thrown and a <tt>WARN</tt> is logged._You can use this to enable exception being thrown and handle the thrown exception_from the {@link org.apache.camel.spi.PollingConsumerPollStrategy} rollback method.;public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed) {_        this.throwExceptionOnConnectFailed = throwExceptionOnConnectFailed__    };should,an,exception,be,thrown,if,connection,failed,exhausted,p,by,default,exception,is,not,thrown,and,a,tt,warn,tt,is,logged,you,can,use,this,to,enable,exception,being,thrown,and,handle,the,thrown,exception,from,the,link,org,apache,camel,spi,polling,consumer,poll,strategy,rollback,method;public,void,set,throw,exception,on,connect,failed,boolean,throw,exception,on,connect,failed,this,throw,exception,on,connect,failed,throw,exception,on,connect,failed
RemoteFileConfiguration -> public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed);1378378166;Should an exception be thrown if connection failed (exhausted)_<p/>_By default exception is not thrown and a <tt>WARN</tt> is logged._You can use this to enable exception being thrown and handle the thrown exception_from the {@link org.apache.camel.spi.PollingConsumerPollStrategy} rollback method.;public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed) {_        this.throwExceptionOnConnectFailed = throwExceptionOnConnectFailed__    };should,an,exception,be,thrown,if,connection,failed,exhausted,p,by,default,exception,is,not,thrown,and,a,tt,warn,tt,is,logged,you,can,use,this,to,enable,exception,being,thrown,and,handle,the,thrown,exception,from,the,link,org,apache,camel,spi,polling,consumer,poll,strategy,rollback,method;public,void,set,throw,exception,on,connect,failed,boolean,throw,exception,on,connect,failed,this,throw,exception,on,connect,failed,throw,exception,on,connect,failed
RemoteFileConfiguration -> public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed);1379076760;Should an exception be thrown if connection failed (exhausted)_<p/>_By default exception is not thrown and a <tt>WARN</tt> is logged._You can use this to enable exception being thrown and handle the thrown exception_from the {@link org.apache.camel.spi.PollingConsumerPollStrategy} rollback method.;public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed) {_        this.throwExceptionOnConnectFailed = throwExceptionOnConnectFailed__    };should,an,exception,be,thrown,if,connection,failed,exhausted,p,by,default,exception,is,not,thrown,and,a,tt,warn,tt,is,logged,you,can,use,this,to,enable,exception,being,thrown,and,handle,the,thrown,exception,from,the,link,org,apache,camel,spi,polling,consumer,poll,strategy,rollback,method;public,void,set,throw,exception,on,connect,failed,boolean,throw,exception,on,connect,failed,this,throw,exception,on,connect,failed,throw,exception,on,connect,failed
RemoteFileConfiguration -> public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed);1416567967;Should an exception be thrown if connection failed (exhausted)_<p/>_By default exception is not thrown and a <tt>WARN</tt> is logged._You can use this to enable exception being thrown and handle the thrown exception_from the {@link org.apache.camel.spi.PollingConsumerPollStrategy} rollback method.;public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed) {_        this.throwExceptionOnConnectFailed = throwExceptionOnConnectFailed__    };should,an,exception,be,thrown,if,connection,failed,exhausted,p,by,default,exception,is,not,thrown,and,a,tt,warn,tt,is,logged,you,can,use,this,to,enable,exception,being,thrown,and,handle,the,thrown,exception,from,the,link,org,apache,camel,spi,polling,consumer,poll,strategy,rollback,method;public,void,set,throw,exception,on,connect,failed,boolean,throw,exception,on,connect,failed,this,throw,exception,on,connect,failed,throw,exception,on,connect,failed
RemoteFileConfiguration -> public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed);1424952635;Should an exception be thrown if connection failed (exhausted)_<p/>_By default exception is not thrown and a <tt>WARN</tt> is logged._You can use this to enable exception being thrown and handle the thrown exception_from the {@link org.apache.camel.spi.PollingConsumerPollStrategy} rollback method.;public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed) {_        this.throwExceptionOnConnectFailed = throwExceptionOnConnectFailed__    };should,an,exception,be,thrown,if,connection,failed,exhausted,p,by,default,exception,is,not,thrown,and,a,tt,warn,tt,is,logged,you,can,use,this,to,enable,exception,being,thrown,and,handle,the,thrown,exception,from,the,link,org,apache,camel,spi,polling,consumer,poll,strategy,rollback,method;public,void,set,throw,exception,on,connect,failed,boolean,throw,exception,on,connect,failed,this,throw,exception,on,connect,failed,throw,exception,on,connect,failed
RemoteFileConfiguration -> public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed);1425280684;Should an exception be thrown if connection failed (exhausted)_<p/>_By default exception is not thrown and a <tt>WARN</tt> is logged._You can use this to enable exception being thrown and handle the thrown exception_from the {@link org.apache.camel.spi.PollingConsumerPollStrategy} rollback method.;public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed) {_        this.throwExceptionOnConnectFailed = throwExceptionOnConnectFailed__    };should,an,exception,be,thrown,if,connection,failed,exhausted,p,by,default,exception,is,not,thrown,and,a,tt,warn,tt,is,logged,you,can,use,this,to,enable,exception,being,thrown,and,handle,the,thrown,exception,from,the,link,org,apache,camel,spi,polling,consumer,poll,strategy,rollback,method;public,void,set,throw,exception,on,connect,failed,boolean,throw,exception,on,connect,failed,this,throw,exception,on,connect,failed,throw,exception,on,connect,failed
RemoteFileConfiguration -> public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed);1426251104;Should an exception be thrown if connection failed (exhausted)_<p/>_By default exception is not thrown and a <tt>WARN</tt> is logged._You can use this to enable exception being thrown and handle the thrown exception_from the {@link org.apache.camel.spi.PollingConsumerPollStrategy} rollback method.;public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed) {_        this.throwExceptionOnConnectFailed = throwExceptionOnConnectFailed__    };should,an,exception,be,thrown,if,connection,failed,exhausted,p,by,default,exception,is,not,thrown,and,a,tt,warn,tt,is,logged,you,can,use,this,to,enable,exception,being,thrown,and,handle,the,thrown,exception,from,the,link,org,apache,camel,spi,polling,consumer,poll,strategy,rollback,method;public,void,set,throw,exception,on,connect,failed,boolean,throw,exception,on,connect,failed,this,throw,exception,on,connect,failed,throw,exception,on,connect,failed
RemoteFileConfiguration -> public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed);1426750198;Should an exception be thrown if connection failed (exhausted)_<p/>_By default exception is not thrown and a <tt>WARN</tt> is logged._You can use this to enable exception being thrown and handle the thrown exception_from the {@link org.apache.camel.spi.PollingConsumerPollStrategy} rollback method.;public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed) {_        this.throwExceptionOnConnectFailed = throwExceptionOnConnectFailed__    };should,an,exception,be,thrown,if,connection,failed,exhausted,p,by,default,exception,is,not,thrown,and,a,tt,warn,tt,is,logged,you,can,use,this,to,enable,exception,being,thrown,and,handle,the,thrown,exception,from,the,link,org,apache,camel,spi,polling,consumer,poll,strategy,rollback,method;public,void,set,throw,exception,on,connect,failed,boolean,throw,exception,on,connect,failed,this,throw,exception,on,connect,failed,throw,exception,on,connect,failed
RemoteFileConfiguration -> public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed);1428325442;Should an exception be thrown if connection failed (exhausted)_<p/>_By default exception is not thrown and a <tt>WARN</tt> is logged._You can use this to enable exception being thrown and handle the thrown exception_from the {@link org.apache.camel.spi.PollingConsumerPollStrategy} rollback method.;public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed) {_        this.throwExceptionOnConnectFailed = throwExceptionOnConnectFailed__    };should,an,exception,be,thrown,if,connection,failed,exhausted,p,by,default,exception,is,not,thrown,and,a,tt,warn,tt,is,logged,you,can,use,this,to,enable,exception,being,thrown,and,handle,the,thrown,exception,from,the,link,org,apache,camel,spi,polling,consumer,poll,strategy,rollback,method;public,void,set,throw,exception,on,connect,failed,boolean,throw,exception,on,connect,failed,this,throw,exception,on,connect,failed,throw,exception,on,connect,failed
RemoteFileConfiguration -> public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed);1432744961;Should an exception be thrown if connection failed (exhausted)_<p/>_By default exception is not thrown and a <tt>WARN</tt> is logged._You can use this to enable exception being thrown and handle the thrown exception_from the {@link org.apache.camel.spi.PollingConsumerPollStrategy} rollback method.;public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed) {_        this.throwExceptionOnConnectFailed = throwExceptionOnConnectFailed__    };should,an,exception,be,thrown,if,connection,failed,exhausted,p,by,default,exception,is,not,thrown,and,a,tt,warn,tt,is,logged,you,can,use,this,to,enable,exception,being,thrown,and,handle,the,thrown,exception,from,the,link,org,apache,camel,spi,polling,consumer,poll,strategy,rollback,method;public,void,set,throw,exception,on,connect,failed,boolean,throw,exception,on,connect,failed,this,throw,exception,on,connect,failed,throw,exception,on,connect,failed
RemoteFileConfiguration -> public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed);1434280087;Should an exception be thrown if connection failed (exhausted)_<p/>_By default exception is not thrown and a <tt>WARN</tt> is logged._You can use this to enable exception being thrown and handle the thrown exception_from the {@link org.apache.camel.spi.PollingConsumerPollStrategy} rollback method.;public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed) {_        this.throwExceptionOnConnectFailed = throwExceptionOnConnectFailed__    };should,an,exception,be,thrown,if,connection,failed,exhausted,p,by,default,exception,is,not,thrown,and,a,tt,warn,tt,is,logged,you,can,use,this,to,enable,exception,being,thrown,and,handle,the,thrown,exception,from,the,link,org,apache,camel,spi,polling,consumer,poll,strategy,rollback,method;public,void,set,throw,exception,on,connect,failed,boolean,throw,exception,on,connect,failed,this,throw,exception,on,connect,failed,throw,exception,on,connect,failed
RemoteFileConfiguration -> public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed);1438175607;Should an exception be thrown if connection failed (exhausted)_<p/>_By default exception is not thrown and a <tt>WARN</tt> is logged._You can use this to enable exception being thrown and handle the thrown exception_from the {@link org.apache.camel.spi.PollingConsumerPollStrategy} rollback method.;public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed) {_        this.throwExceptionOnConnectFailed = throwExceptionOnConnectFailed__    };should,an,exception,be,thrown,if,connection,failed,exhausted,p,by,default,exception,is,not,thrown,and,a,tt,warn,tt,is,logged,you,can,use,this,to,enable,exception,being,thrown,and,handle,the,thrown,exception,from,the,link,org,apache,camel,spi,polling,consumer,poll,strategy,rollback,method;public,void,set,throw,exception,on,connect,failed,boolean,throw,exception,on,connect,failed,this,throw,exception,on,connect,failed,throw,exception,on,connect,failed
RemoteFileConfiguration -> public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed);1442837121;Should an exception be thrown if connection failed (exhausted)_<p/>_By default exception is not thrown and a <tt>WARN</tt> is logged._You can use this to enable exception being thrown and handle the thrown exception_from the {@link org.apache.camel.spi.PollingConsumerPollStrategy} rollback method.;public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed) {_        this.throwExceptionOnConnectFailed = throwExceptionOnConnectFailed__    };should,an,exception,be,thrown,if,connection,failed,exhausted,p,by,default,exception,is,not,thrown,and,a,tt,warn,tt,is,logged,you,can,use,this,to,enable,exception,being,thrown,and,handle,the,thrown,exception,from,the,link,org,apache,camel,spi,polling,consumer,poll,strategy,rollback,method;public,void,set,throw,exception,on,connect,failed,boolean,throw,exception,on,connect,failed,this,throw,exception,on,connect,failed,throw,exception,on,connect,failed
RemoteFileConfiguration -> public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed);1442837494;Should an exception be thrown if connection failed (exhausted)_<p/>_By default exception is not thrown and a <tt>WARN</tt> is logged._You can use this to enable exception being thrown and handle the thrown exception_from the {@link org.apache.camel.spi.PollingConsumerPollStrategy} rollback method.;public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed) {_        this.throwExceptionOnConnectFailed = throwExceptionOnConnectFailed__    };should,an,exception,be,thrown,if,connection,failed,exhausted,p,by,default,exception,is,not,thrown,and,a,tt,warn,tt,is,logged,you,can,use,this,to,enable,exception,being,thrown,and,handle,the,thrown,exception,from,the,link,org,apache,camel,spi,polling,consumer,poll,strategy,rollback,method;public,void,set,throw,exception,on,connect,failed,boolean,throw,exception,on,connect,failed,this,throw,exception,on,connect,failed,throw,exception,on,connect,failed
RemoteFileConfiguration -> public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed);1465649425;Should an exception be thrown if connection failed (exhausted)_<p/>_By default exception is not thrown and a <tt>WARN</tt> is logged._You can use this to enable exception being thrown and handle the thrown exception_from the {@link org.apache.camel.spi.PollingConsumerPollStrategy} rollback method.;public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed) {_        this.throwExceptionOnConnectFailed = throwExceptionOnConnectFailed__    };should,an,exception,be,thrown,if,connection,failed,exhausted,p,by,default,exception,is,not,thrown,and,a,tt,warn,tt,is,logged,you,can,use,this,to,enable,exception,being,thrown,and,handle,the,thrown,exception,from,the,link,org,apache,camel,spi,polling,consumer,poll,strategy,rollback,method;public,void,set,throw,exception,on,connect,failed,boolean,throw,exception,on,connect,failed,this,throw,exception,on,connect,failed,throw,exception,on,connect,failed
RemoteFileConfiguration -> public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed);1506283402;Should an exception be thrown if connection failed (exhausted)_<p/>_By default exception is not thrown and a <tt>WARN</tt> is logged._You can use this to enable exception being thrown and handle the thrown exception_from the {@link org.apache.camel.spi.PollingConsumerPollStrategy} rollback method.;public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed) {_        this.throwExceptionOnConnectFailed = throwExceptionOnConnectFailed__    };should,an,exception,be,thrown,if,connection,failed,exhausted,p,by,default,exception,is,not,thrown,and,a,tt,warn,tt,is,logged,you,can,use,this,to,enable,exception,being,thrown,and,handle,the,thrown,exception,from,the,link,org,apache,camel,spi,polling,consumer,poll,strategy,rollback,method;public,void,set,throw,exception,on,connect,failed,boolean,throw,exception,on,connect,failed,this,throw,exception,on,connect,failed,throw,exception,on,connect,failed
RemoteFileConfiguration -> public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed);1509446107;Should an exception be thrown if connection failed (exhausted)_<p/>_By default exception is not thrown and a <tt>WARN</tt> is logged._You can use this to enable exception being thrown and handle the thrown exception_from the {@link org.apache.camel.spi.PollingConsumerPollStrategy} rollback method.;public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed) {_        this.throwExceptionOnConnectFailed = throwExceptionOnConnectFailed__    };should,an,exception,be,thrown,if,connection,failed,exhausted,p,by,default,exception,is,not,thrown,and,a,tt,warn,tt,is,logged,you,can,use,this,to,enable,exception,being,thrown,and,handle,the,thrown,exception,from,the,link,org,apache,camel,spi,polling,consumer,poll,strategy,rollback,method;public,void,set,throw,exception,on,connect,failed,boolean,throw,exception,on,connect,failed,this,throw,exception,on,connect,failed,throw,exception,on,connect,failed
RemoteFileConfiguration -> public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed);1509526271;Should an exception be thrown if connection failed (exhausted)_<p/>_By default exception is not thrown and a <tt>WARN</tt> is logged._You can use this to enable exception being thrown and handle the thrown exception_from the {@link org.apache.camel.spi.PollingConsumerPollStrategy} rollback method.;public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed) {_        this.throwExceptionOnConnectFailed = throwExceptionOnConnectFailed__    };should,an,exception,be,thrown,if,connection,failed,exhausted,p,by,default,exception,is,not,thrown,and,a,tt,warn,tt,is,logged,you,can,use,this,to,enable,exception,being,thrown,and,handle,the,thrown,exception,from,the,link,org,apache,camel,spi,polling,consumer,poll,strategy,rollback,method;public,void,set,throw,exception,on,connect,failed,boolean,throw,exception,on,connect,failed,this,throw,exception,on,connect,failed,throw,exception,on,connect,failed
RemoteFileConfiguration -> public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed);1520674832;Should an exception be thrown if connection failed (exhausted)_<p/>_By default exception is not thrown and a <tt>WARN</tt> is logged._You can use this to enable exception being thrown and handle the thrown exception_from the {@link org.apache.camel.spi.PollingConsumerPollStrategy} rollback method.;public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed) {_        this.throwExceptionOnConnectFailed = throwExceptionOnConnectFailed__    };should,an,exception,be,thrown,if,connection,failed,exhausted,p,by,default,exception,is,not,thrown,and,a,tt,warn,tt,is,logged,you,can,use,this,to,enable,exception,being,thrown,and,handle,the,thrown,exception,from,the,link,org,apache,camel,spi,polling,consumer,poll,strategy,rollback,method;public,void,set,throw,exception,on,connect,failed,boolean,throw,exception,on,connect,failed,this,throw,exception,on,connect,failed,throw,exception,on,connect,failed
RemoteFileConfiguration -> public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed);1540108158;Should an exception be thrown if connection failed (exhausted)_<p/>_By default exception is not thrown and a <tt>WARN</tt> is logged._You can use this to enable exception being thrown and handle the thrown exception_from the {@link org.apache.camel.spi.PollingConsumerPollStrategy} rollback method.;public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed) {_        this.throwExceptionOnConnectFailed = throwExceptionOnConnectFailed__    };should,an,exception,be,thrown,if,connection,failed,exhausted,p,by,default,exception,is,not,thrown,and,a,tt,warn,tt,is,logged,you,can,use,this,to,enable,exception,being,thrown,and,handle,the,thrown,exception,from,the,link,org,apache,camel,spi,polling,consumer,poll,strategy,rollback,method;public,void,set,throw,exception,on,connect,failed,boolean,throw,exception,on,connect,failed,this,throw,exception,on,connect,failed,throw,exception,on,connect,failed
RemoteFileConfiguration -> public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed);1547240981;Should an exception be thrown if connection failed (exhausted)_<p/>_By default exception is not thrown and a <tt>WARN</tt> is logged._You can use this to enable exception being thrown and handle the thrown exception_from the {@link org.apache.camel.spi.PollingConsumerPollStrategy} rollback method.;public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed) {_        this.throwExceptionOnConnectFailed = throwExceptionOnConnectFailed__    };should,an,exception,be,thrown,if,connection,failed,exhausted,p,by,default,exception,is,not,thrown,and,a,tt,warn,tt,is,logged,you,can,use,this,to,enable,exception,being,thrown,and,handle,the,thrown,exception,from,the,link,org,apache,camel,spi,polling,consumer,poll,strategy,rollback,method;public,void,set,throw,exception,on,connect,failed,boolean,throw,exception,on,connect,failed,this,throw,exception,on,connect,failed,throw,exception,on,connect,failed
RemoteFileConfiguration -> public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed);1550127542;Should an exception be thrown if connection failed (exhausted)_<p/>_By default exception is not thrown and a <tt>WARN</tt> is logged._You can use this to enable exception being thrown and handle the thrown exception_from the {@link org.apache.camel.spi.PollingConsumerPollStrategy} rollback method.;public void setThrowExceptionOnConnectFailed(boolean throwExceptionOnConnectFailed) {_        this.throwExceptionOnConnectFailed = throwExceptionOnConnectFailed__    };should,an,exception,be,thrown,if,connection,failed,exhausted,p,by,default,exception,is,not,thrown,and,a,tt,warn,tt,is,logged,you,can,use,this,to,enable,exception,being,thrown,and,handle,the,thrown,exception,from,the,link,org,apache,camel,spi,polling,consumer,poll,strategy,rollback,method;public,void,set,throw,exception,on,connect,failed,boolean,throw,exception,on,connect,failed,this,throw,exception,on,connect,failed,throw,exception,on,connect,failed
RemoteFileConfiguration -> public void setUseList(boolean useList);1378378166;Whether to allow using LIST command when downloading a file._<p/>_Default is <tt>true</tt>. In some use cases you may want to download_a specific file and are not allowed to use the LIST command, and therefore_you can set this option to <tt>false</tt>.;public void setUseList(boolean useList) {_        this.useList = useList__    };whether,to,allow,using,list,command,when,downloading,a,file,p,default,is,tt,true,tt,in,some,use,cases,you,may,want,to,download,a,specific,file,and,are,not,allowed,to,use,the,list,command,and,therefore,you,can,set,this,option,to,tt,false,tt;public,void,set,use,list,boolean,use,list,this,use,list,use,list
RemoteFileConfiguration -> public void setUseList(boolean useList);1379076760;Whether to allow using LIST command when downloading a file._<p/>_Default is <tt>true</tt>. In some use cases you may want to download_a specific file and are not allowed to use the LIST command, and therefore_you can set this option to <tt>false</tt>.;public void setUseList(boolean useList) {_        this.useList = useList__    };whether,to,allow,using,list,command,when,downloading,a,file,p,default,is,tt,true,tt,in,some,use,cases,you,may,want,to,download,a,specific,file,and,are,not,allowed,to,use,the,list,command,and,therefore,you,can,set,this,option,to,tt,false,tt;public,void,set,use,list,boolean,use,list,this,use,list,use,list
RemoteFileConfiguration -> public void setUseList(boolean useList);1416567967;Whether to allow using LIST command when downloading a file._<p/>_Default is <tt>true</tt>. In some use cases you may want to download_a specific file and are not allowed to use the LIST command, and therefore_you can set this option to <tt>false</tt>.;public void setUseList(boolean useList) {_        this.useList = useList__    };whether,to,allow,using,list,command,when,downloading,a,file,p,default,is,tt,true,tt,in,some,use,cases,you,may,want,to,download,a,specific,file,and,are,not,allowed,to,use,the,list,command,and,therefore,you,can,set,this,option,to,tt,false,tt;public,void,set,use,list,boolean,use,list,this,use,list,use,list
RemoteFileConfiguration -> public void setUseList(boolean useList);1424952635;Whether to allow using LIST command when downloading a file._<p/>_Default is <tt>true</tt>. In some use cases you may want to download_a specific file and are not allowed to use the LIST command, and therefore_you can set this option to <tt>false</tt>.;public void setUseList(boolean useList) {_        this.useList = useList__    };whether,to,allow,using,list,command,when,downloading,a,file,p,default,is,tt,true,tt,in,some,use,cases,you,may,want,to,download,a,specific,file,and,are,not,allowed,to,use,the,list,command,and,therefore,you,can,set,this,option,to,tt,false,tt;public,void,set,use,list,boolean,use,list,this,use,list,use,list
RemoteFileConfiguration -> public void setUseList(boolean useList);1425280684;Whether to allow using LIST command when downloading a file._<p/>_Default is <tt>true</tt>. In some use cases you may want to download_a specific file and are not allowed to use the LIST command, and therefore_you can set this option to <tt>false</tt>.;public void setUseList(boolean useList) {_        this.useList = useList__    };whether,to,allow,using,list,command,when,downloading,a,file,p,default,is,tt,true,tt,in,some,use,cases,you,may,want,to,download,a,specific,file,and,are,not,allowed,to,use,the,list,command,and,therefore,you,can,set,this,option,to,tt,false,tt;public,void,set,use,list,boolean,use,list,this,use,list,use,list
RemoteFileConfiguration -> public void setUseList(boolean useList);1426251104;Whether to allow using LIST command when downloading a file._<p/>_Default is <tt>true</tt>. In some use cases you may want to download_a specific file and are not allowed to use the LIST command, and therefore_you can set this option to <tt>false</tt>.;public void setUseList(boolean useList) {_        this.useList = useList__    };whether,to,allow,using,list,command,when,downloading,a,file,p,default,is,tt,true,tt,in,some,use,cases,you,may,want,to,download,a,specific,file,and,are,not,allowed,to,use,the,list,command,and,therefore,you,can,set,this,option,to,tt,false,tt;public,void,set,use,list,boolean,use,list,this,use,list,use,list
RemoteFileConfiguration -> public void setUseList(boolean useList);1426750198;Whether to allow using LIST command when downloading a file._<p/>_Default is <tt>true</tt>. In some use cases you may want to download_a specific file and are not allowed to use the LIST command, and therefore_you can set this option to <tt>false</tt>.;public void setUseList(boolean useList) {_        this.useList = useList__    };whether,to,allow,using,list,command,when,downloading,a,file,p,default,is,tt,true,tt,in,some,use,cases,you,may,want,to,download,a,specific,file,and,are,not,allowed,to,use,the,list,command,and,therefore,you,can,set,this,option,to,tt,false,tt;public,void,set,use,list,boolean,use,list,this,use,list,use,list
RemoteFileConfiguration -> public void setUseList(boolean useList);1428325442;Whether to allow using LIST command when downloading a file._<p/>_Default is <tt>true</tt>. In some use cases you may want to download_a specific file and are not allowed to use the LIST command, and therefore_you can set this option to <tt>false</tt>.;public void setUseList(boolean useList) {_        this.useList = useList__    };whether,to,allow,using,list,command,when,downloading,a,file,p,default,is,tt,true,tt,in,some,use,cases,you,may,want,to,download,a,specific,file,and,are,not,allowed,to,use,the,list,command,and,therefore,you,can,set,this,option,to,tt,false,tt;public,void,set,use,list,boolean,use,list,this,use,list,use,list
RemoteFileConfiguration -> public void setUseList(boolean useList);1432744961;Whether to allow using LIST command when downloading a file._<p/>_Default is <tt>true</tt>. In some use cases you may want to download_a specific file and are not allowed to use the LIST command, and therefore_you can set this option to <tt>false</tt>.;public void setUseList(boolean useList) {_        this.useList = useList__    };whether,to,allow,using,list,command,when,downloading,a,file,p,default,is,tt,true,tt,in,some,use,cases,you,may,want,to,download,a,specific,file,and,are,not,allowed,to,use,the,list,command,and,therefore,you,can,set,this,option,to,tt,false,tt;public,void,set,use,list,boolean,use,list,this,use,list,use,list
RemoteFileConfiguration -> public void setUseList(boolean useList);1434280087;Whether to allow using LIST command when downloading a file._<p/>_Default is <tt>true</tt>. In some use cases you may want to download_a specific file and are not allowed to use the LIST command, and therefore_you can set this option to <tt>false</tt>.;public void setUseList(boolean useList) {_        this.useList = useList__    };whether,to,allow,using,list,command,when,downloading,a,file,p,default,is,tt,true,tt,in,some,use,cases,you,may,want,to,download,a,specific,file,and,are,not,allowed,to,use,the,list,command,and,therefore,you,can,set,this,option,to,tt,false,tt;public,void,set,use,list,boolean,use,list,this,use,list,use,list
RemoteFileConfiguration -> public void setUseList(boolean useList);1438175607;Whether to allow using LIST command when downloading a file._<p/>_Default is <tt>true</tt>. In some use cases you may want to download_a specific file and are not allowed to use the LIST command, and therefore_you can set this option to <tt>false</tt>.;public void setUseList(boolean useList) {_        this.useList = useList__    };whether,to,allow,using,list,command,when,downloading,a,file,p,default,is,tt,true,tt,in,some,use,cases,you,may,want,to,download,a,specific,file,and,are,not,allowed,to,use,the,list,command,and,therefore,you,can,set,this,option,to,tt,false,tt;public,void,set,use,list,boolean,use,list,this,use,list,use,list
RemoteFileConfiguration -> public void setUseList(boolean useList);1442837121;Whether to allow using LIST command when downloading a file._<p/>_Default is <tt>true</tt>. In some use cases you may want to download_a specific file and are not allowed to use the LIST command, and therefore_you can set this option to <tt>false</tt>.;public void setUseList(boolean useList) {_        this.useList = useList__    };whether,to,allow,using,list,command,when,downloading,a,file,p,default,is,tt,true,tt,in,some,use,cases,you,may,want,to,download,a,specific,file,and,are,not,allowed,to,use,the,list,command,and,therefore,you,can,set,this,option,to,tt,false,tt;public,void,set,use,list,boolean,use,list,this,use,list,use,list
RemoteFileConfiguration -> public void setUseList(boolean useList);1442837494;Whether to allow using LIST command when downloading a file._<p/>_Default is <tt>true</tt>. In some use cases you may want to download_a specific file and are not allowed to use the LIST command, and therefore_you can set this option to <tt>false</tt>.;public void setUseList(boolean useList) {_        this.useList = useList__    };whether,to,allow,using,list,command,when,downloading,a,file,p,default,is,tt,true,tt,in,some,use,cases,you,may,want,to,download,a,specific,file,and,are,not,allowed,to,use,the,list,command,and,therefore,you,can,set,this,option,to,tt,false,tt;public,void,set,use,list,boolean,use,list,this,use,list,use,list
RemoteFileConfiguration -> public void setUseList(boolean useList);1465649425;Whether to allow using LIST command when downloading a file._<p/>_Default is <tt>true</tt>. In some use cases you may want to download_a specific file and are not allowed to use the LIST command, and therefore_you can set this option to <tt>false</tt>.;public void setUseList(boolean useList) {_        this.useList = useList__    };whether,to,allow,using,list,command,when,downloading,a,file,p,default,is,tt,true,tt,in,some,use,cases,you,may,want,to,download,a,specific,file,and,are,not,allowed,to,use,the,list,command,and,therefore,you,can,set,this,option,to,tt,false,tt;public,void,set,use,list,boolean,use,list,this,use,list,use,list
RemoteFileConfiguration -> public void setUseList(boolean useList);1506283402;Whether to allow using LIST command when downloading a file._<p/>_Default is <tt>true</tt>. In some use cases you may want to download_a specific file and are not allowed to use the LIST command, and therefore_you can set this option to <tt>false</tt>.;public void setUseList(boolean useList) {_        this.useList = useList__    };whether,to,allow,using,list,command,when,downloading,a,file,p,default,is,tt,true,tt,in,some,use,cases,you,may,want,to,download,a,specific,file,and,are,not,allowed,to,use,the,list,command,and,therefore,you,can,set,this,option,to,tt,false,tt;public,void,set,use,list,boolean,use,list,this,use,list,use,list
RemoteFileConfiguration -> public void setUseList(boolean useList);1509446107;Whether to allow using LIST command when downloading a file._<p/>_Default is <tt>true</tt>. In some use cases you may want to download_a specific file and are not allowed to use the LIST command, and therefore_you can set this option to <tt>false</tt>._Notice when using this option, then the specific file to download does <b>not</b>_include meta-data information such as file size, timestamp, permissions etc, because_those information is only possible to retrieve when LIST command is in use.__This option is not available for SFTP.;public void setUseList(boolean useList) {_        this.useList = useList__    };whether,to,allow,using,list,command,when,downloading,a,file,p,default,is,tt,true,tt,in,some,use,cases,you,may,want,to,download,a,specific,file,and,are,not,allowed,to,use,the,list,command,and,therefore,you,can,set,this,option,to,tt,false,tt,notice,when,using,this,option,then,the,specific,file,to,download,does,b,not,b,include,meta,data,information,such,as,file,size,timestamp,permissions,etc,because,those,information,is,only,possible,to,retrieve,when,list,command,is,in,use,this,option,is,not,available,for,sftp;public,void,set,use,list,boolean,use,list,this,use,list,use,list
RemoteFileConfiguration -> public void setUseList(boolean useList);1509526271;Whether to allow using LIST command when downloading a file._<p/>_Default is <tt>true</tt>. In some use cases you may want to download_a specific file and are not allowed to use the LIST command, and therefore_you can set this option to <tt>false</tt>._Notice when using this option, then the specific file to download does <b>not</b>_include meta-data information such as file size, timestamp, permissions etc, because_those information is only possible to retrieve when LIST command is in use.;public void setUseList(boolean useList) {_        this.useList = useList__    };whether,to,allow,using,list,command,when,downloading,a,file,p,default,is,tt,true,tt,in,some,use,cases,you,may,want,to,download,a,specific,file,and,are,not,allowed,to,use,the,list,command,and,therefore,you,can,set,this,option,to,tt,false,tt,notice,when,using,this,option,then,the,specific,file,to,download,does,b,not,b,include,meta,data,information,such,as,file,size,timestamp,permissions,etc,because,those,information,is,only,possible,to,retrieve,when,list,command,is,in,use;public,void,set,use,list,boolean,use,list,this,use,list,use,list
RemoteFileConfiguration -> public void setUseList(boolean useList);1520674832;Whether to allow using LIST command when downloading a file._<p/>_Default is <tt>true</tt>. In some use cases you may want to download_a specific file and are not allowed to use the LIST command, and therefore_you can set this option to <tt>false</tt>._Notice when using this option, then the specific file to download does <b>not</b>_include meta-data information such as file size, timestamp, permissions etc, because_those information is only possible to retrieve when LIST command is in use.;public void setUseList(boolean useList) {_        this.useList = useList__    };whether,to,allow,using,list,command,when,downloading,a,file,p,default,is,tt,true,tt,in,some,use,cases,you,may,want,to,download,a,specific,file,and,are,not,allowed,to,use,the,list,command,and,therefore,you,can,set,this,option,to,tt,false,tt,notice,when,using,this,option,then,the,specific,file,to,download,does,b,not,b,include,meta,data,information,such,as,file,size,timestamp,permissions,etc,because,those,information,is,only,possible,to,retrieve,when,list,command,is,in,use;public,void,set,use,list,boolean,use,list,this,use,list,use,list
RemoteFileConfiguration -> public void setUseList(boolean useList);1540108158;Whether to allow using LIST command when downloading a file._<p/>_Default is <tt>true</tt>. In some use cases you may want to download_a specific file and are not allowed to use the LIST command, and therefore_you can set this option to <tt>false</tt>._Notice when using this option, then the specific file to download does <b>not</b>_include meta-data information such as file size, timestamp, permissions etc, because_those information is only possible to retrieve when LIST command is in use.;public void setUseList(boolean useList) {_        this.useList = useList__    };whether,to,allow,using,list,command,when,downloading,a,file,p,default,is,tt,true,tt,in,some,use,cases,you,may,want,to,download,a,specific,file,and,are,not,allowed,to,use,the,list,command,and,therefore,you,can,set,this,option,to,tt,false,tt,notice,when,using,this,option,then,the,specific,file,to,download,does,b,not,b,include,meta,data,information,such,as,file,size,timestamp,permissions,etc,because,those,information,is,only,possible,to,retrieve,when,list,command,is,in,use;public,void,set,use,list,boolean,use,list,this,use,list,use,list
RemoteFileConfiguration -> public void setUseList(boolean useList);1547240981;Whether to allow using LIST command when downloading a file._<p/>_Default is <tt>true</tt>. In some use cases you may want to download_a specific file and are not allowed to use the LIST command, and therefore_you can set this option to <tt>false</tt>._Notice when using this option, then the specific file to download does <b>not</b>_include meta-data information such as file size, timestamp, permissions etc, because_those information is only possible to retrieve when LIST command is in use.;public void setUseList(boolean useList) {_        this.useList = useList__    };whether,to,allow,using,list,command,when,downloading,a,file,p,default,is,tt,true,tt,in,some,use,cases,you,may,want,to,download,a,specific,file,and,are,not,allowed,to,use,the,list,command,and,therefore,you,can,set,this,option,to,tt,false,tt,notice,when,using,this,option,then,the,specific,file,to,download,does,b,not,b,include,meta,data,information,such,as,file,size,timestamp,permissions,etc,because,those,information,is,only,possible,to,retrieve,when,list,command,is,in,use;public,void,set,use,list,boolean,use,list,this,use,list,use,list
RemoteFileConfiguration -> public void setUseList(boolean useList);1550127542;Whether to allow using LIST command when downloading a file._<p/>_Default is <tt>true</tt>. In some use cases you may want to download_a specific file and are not allowed to use the LIST command, and therefore_you can set this option to <tt>false</tt>._Notice when using this option, then the specific file to download does <b>not</b>_include meta-data information such as file size, timestamp, permissions etc, because_those information is only possible to retrieve when LIST command is in use.;public void setUseList(boolean useList) {_        this.useList = useList__    };whether,to,allow,using,list,command,when,downloading,a,file,p,default,is,tt,true,tt,in,some,use,cases,you,may,want,to,download,a,specific,file,and,are,not,allowed,to,use,the,list,command,and,therefore,you,can,set,this,option,to,tt,false,tt,notice,when,using,this,option,then,the,specific,file,to,download,does,b,not,b,include,meta,data,information,such,as,file,size,timestamp,permissions,etc,because,those,information,is,only,possible,to,retrieve,when,list,command,is,in,use;public,void,set,use,list,boolean,use,list,this,use,list,use,list
