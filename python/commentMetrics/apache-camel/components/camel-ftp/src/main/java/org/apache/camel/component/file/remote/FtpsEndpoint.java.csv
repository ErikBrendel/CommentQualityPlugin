# id;timestamp;commentText;codeText;commentWords;codeWords
FtpsEndpoint -> public FTPSClient getFtpsClient();1260208009;Returns the FTPSClient. This method exists only for convenient.__@return ftpsClient;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient,return,ftps,client;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1260340289;Returns the FTPSClient. This method exists only for convenient.__@return ftpsClient;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient,return,ftps,client;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1274693059;Returns the FTPSClient. This method exists only for convenient.__@return ftpsClient;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient,return,ftps,client;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1275659809;Returns the FTPSClient. This method exists only for convenient.__@return ftpsClient;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient,return,ftps,client;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1275887660;Returns the FTPSClient. This method exists only for convenient.__@return ftpsClient;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient,return,ftps,client;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1278429360;Returns the FTPSClient. This method exists only for convenient.__@return ftpsClient;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient,return,ftps,client;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1285248687;Returns the FTPSClient. This method exists only for convenient.__@return ftpsClient;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient,return,ftps,client;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1297969516;Returns the FTPSClient. This method exists only for convenient.__@return ftpsClient;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient,return,ftps,client;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1307685726;Returns the FTPSClient. This method exists only for convenient.__@return ftpsClient;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient,return,ftps,client;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1322698410;Returns the FTPSClient. This method exists only for convenient.__@return ftpsClient;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient,return,ftps,client;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1325745470;Returns the FTPSClient. This method exists only for convenient.__@return ftpsClient;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient,return,ftps,client;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1382962715;Returns the FTPSClient. This method exists only for convenient.__@return ftpsClient;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient,return,ftps,client;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1388443957;Returns the FTPSClient. This method exists only for convenient.__@return ftpsClient;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient,return,ftps,client;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1392751344;Returns the FTPSClient. This method exists only for convenient.__@return ftpsClient;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient,return,ftps,client;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1416561667;Returns the FTPSClient. This method exists only for convenient.__@return ftpsClient;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient,return,ftps,client;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1417137743;Returns the FTPSClient. This method exists only for convenient.__@return ftpsClient;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient,return,ftps,client;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1425140025;Returns the FTPSClient. This method exists only for convenient.__@return ftpsClient;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient,return,ftps,client;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1426750198;Returns the FTPSClient. This method exists only for convenient.__@return ftpsClient;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient,return,ftps,client;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1427402378;Returns the FTPSClient. This method exists only for convenient.__@return ftpsClient;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient,return,ftps,client;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1434280086;Returns the FTPSClient. This method exists only for convenient.__@return ftpsClient;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient,return,ftps,client;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1442837121;Returns the FTPSClient. This method exists only for convenient.;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1442837494;Returns the FTPSClient. This method exists only for convenient.;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1451237125;Returns the FTPSClient. This method exists only for convenient.;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1451925761;Returns the FTPSClient. This method exists only for convenient.;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1452094918;Returns the FTPSClient. This method exists only for convenient.;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1461851621;Returns the FTPSClient. This method exists only for convenient.;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1485947385;Returns the FTPSClient. This method exists only for convenient.;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1515489847;Returns the FTPSClient. This method exists only for convenient.;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1523994338;Returns the FTPSClient. This method exists only for convenient.;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1528177345;Returns the FTPSClient. This method exists only for convenient.;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1531637865;Returns the FTPSClient. This method exists only for convenient.;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1540108163;Returns the FTPSClient. This method exists only for convenient.;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1547480087;Returns the FTPSClient. This method exists only for convenient.;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FTPSClient getFtpsClient();1549357557;Returns the FTPSClient. This method exists only for convenient.;public FTPSClient getFtpsClient() {_        return (FTPSClient) getFtpClient()__    };returns,the,ftpsclient,this,method,exists,only,for,convenient;public,ftpsclient,get,ftps,client,return,ftpsclient,get,ftp,client
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1260208009;Returns the FtpsConfiguration. This method exists only for convenient.__@return ftpsConfiguration;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient,return,ftps,configuration;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1260340289;Returns the FtpsConfiguration. This method exists only for convenient.__@return ftpsConfiguration;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient,return,ftps,configuration;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1274693059;Returns the FtpsConfiguration. This method exists only for convenient.__@return ftpsConfiguration;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient,return,ftps,configuration;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1275659809;Returns the FtpsConfiguration. This method exists only for convenient.__@return ftpsConfiguration;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient,return,ftps,configuration;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1275887660;Returns the FtpsConfiguration. This method exists only for convenient.__@return ftpsConfiguration;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient,return,ftps,configuration;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1278429360;Returns the FtpsConfiguration. This method exists only for convenient.__@return ftpsConfiguration;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient,return,ftps,configuration;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1285248687;Returns the FtpsConfiguration. This method exists only for convenient.__@return ftpsConfiguration;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient,return,ftps,configuration;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1297969516;Returns the FtpsConfiguration. This method exists only for convenient.__@return ftpsConfiguration;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient,return,ftps,configuration;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1307685726;Returns the FtpsConfiguration. This method exists only for convenient.__@return ftpsConfiguration;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient,return,ftps,configuration;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1322698410;Returns the FtpsConfiguration. This method exists only for convenient.__@return ftpsConfiguration;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient,return,ftps,configuration;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1325745470;Returns the FtpsConfiguration. This method exists only for convenient.__@return ftpsConfiguration;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient,return,ftps,configuration;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1382962715;Returns the FtpsConfiguration. This method exists only for convenient.__@return ftpsConfiguration;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient,return,ftps,configuration;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1388443957;Returns the FtpsConfiguration. This method exists only for convenient.__@return ftpsConfiguration;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient,return,ftps,configuration;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1392751344;Returns the FtpsConfiguration. This method exists only for convenient.__@return ftpsConfiguration;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient,return,ftps,configuration;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1416561667;Returns the FtpsConfiguration. This method exists only for convenient.__@return ftpsConfiguration;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient,return,ftps,configuration;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1417137743;Returns the FtpsConfiguration. This method exists only for convenient.__@return ftpsConfiguration;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient,return,ftps,configuration;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1425140025;Returns the FtpsConfiguration. This method exists only for convenient.__@return ftpsConfiguration;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient,return,ftps,configuration;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1426750198;Returns the FtpsConfiguration. This method exists only for convenient.__@return ftpsConfiguration;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient,return,ftps,configuration;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1427402378;Returns the FtpsConfiguration. This method exists only for convenient.__@return ftpsConfiguration;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient,return,ftps,configuration;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1434280086;Returns the FtpsConfiguration. This method exists only for convenient.__@return ftpsConfiguration;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient,return,ftps,configuration;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1442837121;Returns the FtpsConfiguration. This method exists only for convenient.;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1442837494;Returns the FtpsConfiguration. This method exists only for convenient.;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1451237125;Returns the FtpsConfiguration. This method exists only for convenient.;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1451925761;Returns the FtpsConfiguration. This method exists only for convenient.;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1452094918;Returns the FtpsConfiguration. This method exists only for convenient.;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1461851621;Returns the FtpsConfiguration. This method exists only for convenient.;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1485947385;Returns the FtpsConfiguration. This method exists only for convenient.;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1515489847;Returns the FtpsConfiguration. This method exists only for convenient.;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1523994338;Returns the FtpsConfiguration. This method exists only for convenient.;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1528177345;Returns the FtpsConfiguration. This method exists only for convenient.;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1531637865;Returns the FtpsConfiguration. This method exists only for convenient.;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1540108163;Returns the FtpsConfiguration. This method exists only for convenient.;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1547480087;Returns the FtpsConfiguration. This method exists only for convenient.;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public FtpsConfiguration getFtpsConfiguration();1549357557;Returns the FtpsConfiguration. This method exists only for convenient.;public FtpsConfiguration getFtpsConfiguration() {_        return (FtpsConfiguration) getConfiguration()__    };returns,the,ftps,configuration,this,method,exists,only,for,convenient;public,ftps,configuration,get,ftps,configuration,return,ftps,configuration,get,configuration
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1260208009;Set the key store parameter;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameter;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1260340289;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1274693059;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1275659809;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1275887660;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1278429360;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1285248687;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1297969516;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1307685726;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1322698410;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1325745470;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1382962715;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1388443957;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1392751344;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1416561667;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1417137743;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1425140025;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1426750198;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1427402378;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1434280086;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1442837121;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1442837494;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1451237125;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1451925761;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1452094918;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1461851621;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1485947385;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1515489847;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1523994338;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1528177345;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1531637865;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1540108163;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1547480087;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientKeyStoreParameters(Map<String, Object> param);1549357557;Set the key store parameters;public void setFtpClientKeyStoreParameters(Map<String, Object> param) {_        this.ftpClientKeyStoreParameters = param__    };set,the,key,store,parameters;public,void,set,ftp,client,key,store,parameters,map,string,object,param,this,ftp,client,key,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1260208009;Set the trust store parameter;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameter;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1260340289;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1274693059;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1275659809;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1275887660;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1278429360;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1285248687;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1297969516;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1307685726;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1322698410;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1325745470;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1382962715;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1388443957;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1392751344;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1416561667;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1417137743;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1425140025;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1426750198;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1427402378;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1434280086;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1442837121;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1442837494;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1451237125;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1451925761;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1452094918;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1461851621;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1485947385;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1515489847;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1523994338;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1528177345;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1531637865;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1540108163;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1547480087;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public void setFtpClientTrustStoreParameters(Map<String, Object> param);1549357557;Set the trust store parameters;public void setFtpClientTrustStoreParameters(Map<String, Object> param) {_        this.ftpClientTrustStoreParameters = param__    };set,the,trust,store,parameters;public,void,set,ftp,client,trust,store,parameters,map,string,object,param,this,ftp,client,trust,store,parameters,param
FtpsEndpoint -> public SSLContextParameters getSslContextParameters();1322698410;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public SSLContextParameters getSslContextParameters() {_        return sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,sslcontext,parameters,get,ssl,context,parameters,return,ssl,context,parameters
FtpsEndpoint -> public SSLContextParameters getSslContextParameters();1325745470;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public SSLContextParameters getSslContextParameters() {_        return sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,sslcontext,parameters,get,ssl,context,parameters,return,ssl,context,parameters
FtpsEndpoint -> public SSLContextParameters getSslContextParameters();1382962715;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public SSLContextParameters getSslContextParameters() {_        return sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,sslcontext,parameters,get,ssl,context,parameters,return,ssl,context,parameters
FtpsEndpoint -> public SSLContextParameters getSslContextParameters();1388443957;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public SSLContextParameters getSslContextParameters() {_        return sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,sslcontext,parameters,get,ssl,context,parameters,return,ssl,context,parameters
FtpsEndpoint -> public SSLContextParameters getSslContextParameters();1392751344;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public SSLContextParameters getSslContextParameters() {_        return sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,sslcontext,parameters,get,ssl,context,parameters,return,ssl,context,parameters
FtpsEndpoint -> public SSLContextParameters getSslContextParameters();1416561667;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public SSLContextParameters getSslContextParameters() {_        return sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,sslcontext,parameters,get,ssl,context,parameters,return,ssl,context,parameters
FtpsEndpoint -> public SSLContextParameters getSslContextParameters();1417137743;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public SSLContextParameters getSslContextParameters() {_        return sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,sslcontext,parameters,get,ssl,context,parameters,return,ssl,context,parameters
FtpsEndpoint -> public SSLContextParameters getSslContextParameters();1425140025;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public SSLContextParameters getSslContextParameters() {_        return sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,sslcontext,parameters,get,ssl,context,parameters,return,ssl,context,parameters
FtpsEndpoint -> public SSLContextParameters getSslContextParameters();1426750198;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public SSLContextParameters getSslContextParameters() {_        return sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,sslcontext,parameters,get,ssl,context,parameters,return,ssl,context,parameters
FtpsEndpoint -> public SSLContextParameters getSslContextParameters();1427402378;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public SSLContextParameters getSslContextParameters() {_        return sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,sslcontext,parameters,get,ssl,context,parameters,return,ssl,context,parameters
FtpsEndpoint -> public SSLContextParameters getSslContextParameters();1434280086;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public SSLContextParameters getSslContextParameters() {_        return sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,sslcontext,parameters,get,ssl,context,parameters,return,ssl,context,parameters
FtpsEndpoint -> public SSLContextParameters getSslContextParameters();1442837121;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public SSLContextParameters getSslContextParameters() {_        return sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,sslcontext,parameters,get,ssl,context,parameters,return,ssl,context,parameters
FtpsEndpoint -> public SSLContextParameters getSslContextParameters();1442837494;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public SSLContextParameters getSslContextParameters() {_        return sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,sslcontext,parameters,get,ssl,context,parameters,return,ssl,context,parameters
FtpsEndpoint -> public SSLContextParameters getSslContextParameters();1451237125;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public SSLContextParameters getSslContextParameters() {_        return sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,sslcontext,parameters,get,ssl,context,parameters,return,ssl,context,parameters
FtpsEndpoint -> public SSLContextParameters getSslContextParameters();1451925761;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public SSLContextParameters getSslContextParameters() {_        return sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,sslcontext,parameters,get,ssl,context,parameters,return,ssl,context,parameters
FtpsEndpoint -> public SSLContextParameters getSslContextParameters();1452094918;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public SSLContextParameters getSslContextParameters() {_        return sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,sslcontext,parameters,get,ssl,context,parameters,return,ssl,context,parameters
FtpsEndpoint -> public SSLContextParameters getSslContextParameters();1461851621;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public SSLContextParameters getSslContextParameters() {_        return sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,sslcontext,parameters,get,ssl,context,parameters,return,ssl,context,parameters
FtpsEndpoint -> public SSLContextParameters getSslContextParameters();1485947385;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public SSLContextParameters getSslContextParameters() {_        return sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,sslcontext,parameters,get,ssl,context,parameters,return,ssl,context,parameters
FtpsEndpoint -> public SSLContextParameters getSslContextParameters();1515489847;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public SSLContextParameters getSslContextParameters() {_        return sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,sslcontext,parameters,get,ssl,context,parameters,return,ssl,context,parameters
FtpsEndpoint -> public SSLContextParameters getSslContextParameters();1523994338;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public SSLContextParameters getSslContextParameters() {_        return sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,sslcontext,parameters,get,ssl,context,parameters,return,ssl,context,parameters
FtpsEndpoint -> public SSLContextParameters getSslContextParameters();1528177345;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public SSLContextParameters getSslContextParameters() {_        return sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,sslcontext,parameters,get,ssl,context,parameters,return,ssl,context,parameters
FtpsEndpoint -> public SSLContextParameters getSslContextParameters();1531637865;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public SSLContextParameters getSslContextParameters() {_        return sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,sslcontext,parameters,get,ssl,context,parameters,return,ssl,context,parameters
FtpsEndpoint -> public SSLContextParameters getSslContextParameters();1540108163;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public SSLContextParameters getSslContextParameters() {_        return sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,sslcontext,parameters,get,ssl,context,parameters,return,ssl,context,parameters
FtpsEndpoint -> public SSLContextParameters getSslContextParameters();1547480087;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public SSLContextParameters getSslContextParameters() {_        return sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,sslcontext,parameters,get,ssl,context,parameters,return,ssl,context,parameters
FtpsEndpoint -> public SSLContextParameters getSslContextParameters();1549357557;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public SSLContextParameters getSslContextParameters() {_        return sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,sslcontext,parameters,get,ssl,context,parameters,return,ssl,context,parameters
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1260208009;create the FTPS client.__@throws Exception;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client = new FTPSClient(_                getFtpsConfiguration().getSecurityProtocol(),_                getFtpsConfiguration().isImplicit())__        _        if (ftpClientKeyStoreParameters != null) {_            String type = (ftpClientKeyStoreParameters.containsKey("type")) ? _                    (String) ftpClientKeyStoreParameters.get("type") : _                        KeyStore.getDefaultType()__            String file = (String) ftpClientKeyStoreParameters.get("file")__            String password = (String) ftpClientKeyStoreParameters.get("password")__            String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm")) ? _                    (String) ftpClientKeyStoreParameters.get("algorithm") : _                        KeyManagerFactory.getDefaultAlgorithm()__            String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__            _            KeyStore keyStore = KeyStore.getInstance(type)__            FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__            keyStore.load(keyStoreFileInputStream, password.toCharArray())__            keyStoreFileInputStream.close()___            KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__            keyMgrFactory.init(keyStore, keyPassword.toCharArray())__            client.setNeedClientAuth(true)__            client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__        }__        if (ftpClientTrustStoreParameters != null) {_            String type = (ftpClientTrustStoreParameters.containsKey("type")) ? _                    (String) ftpClientTrustStoreParameters.get("type") : _                        KeyStore.getDefaultType()__            String file = (String) ftpClientTrustStoreParameters.get("file")__            String password = (String) ftpClientTrustStoreParameters.get("password")__            String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm")) ? _                    (String) ftpClientTrustStoreParameters.get("algorithm") : _                        TrustManagerFactory.getDefaultAlgorithm()__                    _            KeyStore trustStore = KeyStore.getInstance(type)__            FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__            trustStore.load(trustStoreFileInputStream, password.toCharArray())__            trustStoreFileInputStream.close()__            _            TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__            trustMgrFactory.init(trustStore)__            _            client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__        }_        _        return client__    };create,the,ftps,client,throws,exception;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,key,store,load,key,store,file,input,stream,password,to,char,array,key,store,file,input,stream,close,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,trust,store,load,trust,store,file,input,stream,password,to,char,array,trust,store,file,input,stream,close,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1260340289;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                           getFtpsConfiguration().isImplicit())__        _        if (ftpClientKeyStoreParameters != null) {_            String type = (ftpClientKeyStoreParameters.containsKey("type"))_                    ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__            String file = (String) ftpClientKeyStoreParameters.get("file")__            String password = (String) ftpClientKeyStoreParameters.get("password")__            String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                    ? (String) ftpClientKeyStoreParameters.get("algorithm")_                    : KeyManagerFactory.getDefaultAlgorithm()__            String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__            _            KeyStore keyStore = KeyStore.getInstance(type)__            FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__            try {_                keyStore.load(keyStoreFileInputStream, password.toCharArray())__            } finally {_                ObjectHelper.close(keyStoreFileInputStream, "keyStore", log)__            }__            KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__            keyMgrFactory.init(keyStore, keyPassword.toCharArray())__            client.setNeedClientAuth(true)__            client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__        }__        if (ftpClientTrustStoreParameters != null) {_            String type = (ftpClientTrustStoreParameters.containsKey("type"))_                    ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__            String file = (String) ftpClientTrustStoreParameters.get("file")__            String password = (String) ftpClientTrustStoreParameters.get("password")__            String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                    ? (String) ftpClientTrustStoreParameters.get("algorithm")_                    : TrustManagerFactory.getDefaultAlgorithm()__                    _            KeyStore trustStore = KeyStore.getInstance(type)__            FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__            try {_                trustStore.load(trustStoreFileInputStream, password.toCharArray())__            } finally {_                ObjectHelper.close(trustStoreFileInputStream, "trustStore", log)__            }__            TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__            trustMgrFactory.init(trustStore)__            _            client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__        }_        _        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,object,helper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,object,helper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1274693059;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                           getFtpsConfiguration().isImplicit())__        _        if (ftpClientKeyStoreParameters != null) {_            String type = (ftpClientKeyStoreParameters.containsKey("type"))_                    ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__            String file = (String) ftpClientKeyStoreParameters.get("file")__            String password = (String) ftpClientKeyStoreParameters.get("password")__            String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                    ? (String) ftpClientKeyStoreParameters.get("algorithm")_                    : KeyManagerFactory.getDefaultAlgorithm()__            String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__            _            KeyStore keyStore = KeyStore.getInstance(type)__            FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__            try {_                keyStore.load(keyStoreFileInputStream, password.toCharArray())__            } finally {_                IOHelper.close(keyStoreFileInputStream, "keyStore", log)__            }__            KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__            keyMgrFactory.init(keyStore, keyPassword.toCharArray())__            client.setNeedClientAuth(true)__            client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__        }__        if (ftpClientTrustStoreParameters != null) {_            String type = (ftpClientTrustStoreParameters.containsKey("type"))_                    ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__            String file = (String) ftpClientTrustStoreParameters.get("file")__            String password = (String) ftpClientTrustStoreParameters.get("password")__            String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                    ? (String) ftpClientTrustStoreParameters.get("algorithm")_                    : TrustManagerFactory.getDefaultAlgorithm()__                    _            KeyStore trustStore = KeyStore.getInstance(type)__            FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__            try {_                trustStore.load(trustStoreFileInputStream, password.toCharArray())__            } finally {_                IOHelper.close(trustStoreFileInputStream, "trustStore", log)__            }__            TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__            trustMgrFactory.init(trustStore)__            _            client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__        }_        _        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1275659809;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                           getFtpsConfiguration().isImplicit())__        _        if (ftpClientKeyStoreParameters != null) {_            String type = (ftpClientKeyStoreParameters.containsKey("type"))_                    ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__            String file = (String) ftpClientKeyStoreParameters.get("file")__            String password = (String) ftpClientKeyStoreParameters.get("password")__            String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                    ? (String) ftpClientKeyStoreParameters.get("algorithm")_                    : KeyManagerFactory.getDefaultAlgorithm()__            String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__            _            KeyStore keyStore = KeyStore.getInstance(type)__            FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__            try {_                keyStore.load(keyStoreFileInputStream, password.toCharArray())__            } finally {_                IOHelper.close(keyStoreFileInputStream, "keyStore", log)__            }__            KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__            keyMgrFactory.init(keyStore, keyPassword.toCharArray())__            client.setNeedClientAuth(true)__            client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__        }__        if (ftpClientTrustStoreParameters != null) {_            String type = (ftpClientTrustStoreParameters.containsKey("type"))_                    ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__            String file = (String) ftpClientTrustStoreParameters.get("file")__            String password = (String) ftpClientTrustStoreParameters.get("password")__            String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                    ? (String) ftpClientTrustStoreParameters.get("algorithm")_                    : TrustManagerFactory.getDefaultAlgorithm()__                    _            KeyStore trustStore = KeyStore.getInstance(type)__            FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__            try {_                trustStore.load(trustStoreFileInputStream, password.toCharArray())__            } finally {_                IOHelper.close(trustStoreFileInputStream, "trustStore", log)__            }__            TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__            trustMgrFactory.init(trustStore)__            _            client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__        }_        _        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1275887660;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                           getFtpsConfiguration().isImplicit())__        _        if (ftpClientKeyStoreParameters != null) {_            String type = (ftpClientKeyStoreParameters.containsKey("type"))_                    ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__            String file = (String) ftpClientKeyStoreParameters.get("file")__            String password = (String) ftpClientKeyStoreParameters.get("password")__            String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                    ? (String) ftpClientKeyStoreParameters.get("algorithm")_                    : KeyManagerFactory.getDefaultAlgorithm()__            String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__            _            KeyStore keyStore = KeyStore.getInstance(type)__            FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__            try {_                keyStore.load(keyStoreFileInputStream, password.toCharArray())__            } finally {_                IOHelper.close(keyStoreFileInputStream, "keyStore", log)__            }__            KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__            keyMgrFactory.init(keyStore, keyPassword.toCharArray())__            client.setNeedClientAuth(true)__            client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__        }__        if (ftpClientTrustStoreParameters != null) {_            String type = (ftpClientTrustStoreParameters.containsKey("type"))_                    ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__            String file = (String) ftpClientTrustStoreParameters.get("file")__            String password = (String) ftpClientTrustStoreParameters.get("password")__            String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                    ? (String) ftpClientTrustStoreParameters.get("algorithm")_                    : TrustManagerFactory.getDefaultAlgorithm()__                    _            KeyStore trustStore = KeyStore.getInstance(type)__            FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__            try {_                trustStore.load(trustStoreFileInputStream, password.toCharArray())__            } finally {_                IOHelper.close(trustStoreFileInputStream, "trustStore", log)__            }__            TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__            trustMgrFactory.init(trustStore)__            _            client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__        }_        _        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1278429360;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                           getFtpsConfiguration().isImplicit())__        _        if (ftpClientKeyStoreParameters != null) {_            String type = (ftpClientKeyStoreParameters.containsKey("type"))_                    ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__            String file = (String) ftpClientKeyStoreParameters.get("file")__            String password = (String) ftpClientKeyStoreParameters.get("password")__            String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                    ? (String) ftpClientKeyStoreParameters.get("algorithm")_                    : KeyManagerFactory.getDefaultAlgorithm()__            String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__            _            KeyStore keyStore = KeyStore.getInstance(type)__            FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__            try {_                keyStore.load(keyStoreFileInputStream, password.toCharArray())__            } finally {_                IOHelper.close(keyStoreFileInputStream, "keyStore", log)__            }__            KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__            keyMgrFactory.init(keyStore, keyPassword.toCharArray())__            client.setNeedClientAuth(true)__            client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__        }__        if (ftpClientTrustStoreParameters != null) {_            String type = (ftpClientTrustStoreParameters.containsKey("type"))_                    ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__            String file = (String) ftpClientTrustStoreParameters.get("file")__            String password = (String) ftpClientTrustStoreParameters.get("password")__            String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                    ? (String) ftpClientTrustStoreParameters.get("algorithm")_                    : TrustManagerFactory.getDefaultAlgorithm()__                    _            KeyStore trustStore = KeyStore.getInstance(type)__            FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__            try {_                trustStore.load(trustStoreFileInputStream, password.toCharArray())__            } finally {_                IOHelper.close(trustStoreFileInputStream, "trustStore", log)__            }__            TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__            trustMgrFactory.init(trustStore)__            _            client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__        }_        _        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1285248687;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                           getFtpsConfiguration().isImplicit())__        _        if (ftpClientKeyStoreParameters != null) {_            String type = (ftpClientKeyStoreParameters.containsKey("type"))_                    ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__            String file = (String) ftpClientKeyStoreParameters.get("file")__            String password = (String) ftpClientKeyStoreParameters.get("password")__            String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                    ? (String) ftpClientKeyStoreParameters.get("algorithm")_                    : KeyManagerFactory.getDefaultAlgorithm()__            String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__            _            KeyStore keyStore = KeyStore.getInstance(type)__            FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__            try {_                keyStore.load(keyStoreFileInputStream, password.toCharArray())__            } finally {_                IOHelper.close(keyStoreFileInputStream, "keyStore", log)__            }__            KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__            keyMgrFactory.init(keyStore, keyPassword.toCharArray())__            client.setNeedClientAuth(true)__            client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__        }__        if (ftpClientTrustStoreParameters != null) {_            String type = (ftpClientTrustStoreParameters.containsKey("type"))_                    ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__            String file = (String) ftpClientTrustStoreParameters.get("file")__            String password = (String) ftpClientTrustStoreParameters.get("password")__            String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                    ? (String) ftpClientTrustStoreParameters.get("algorithm")_                    : TrustManagerFactory.getDefaultAlgorithm()__                    _            KeyStore trustStore = KeyStore.getInstance(type)__            FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__            try {_                trustStore.load(trustStoreFileInputStream, password.toCharArray())__            } finally {_                IOHelper.close(trustStoreFileInputStream, "trustStore", log)__            }__            TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__            trustMgrFactory.init(trustStore)__            _            client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__        }_        _        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1297969516;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                           getFtpsConfiguration().isImplicit())__        _        if (ftpClientKeyStoreParameters != null) {_            String type = (ftpClientKeyStoreParameters.containsKey("type"))_                    ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__            String file = (String) ftpClientKeyStoreParameters.get("file")__            String password = (String) ftpClientKeyStoreParameters.get("password")__            String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                    ? (String) ftpClientKeyStoreParameters.get("algorithm")_                    : KeyManagerFactory.getDefaultAlgorithm()__            String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__            _            KeyStore keyStore = KeyStore.getInstance(type)__            FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__            try {_                keyStore.load(keyStoreFileInputStream, password.toCharArray())__            } finally {_                IOHelper.close(keyStoreFileInputStream, "keyStore", log)__            }__            KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__            keyMgrFactory.init(keyStore, keyPassword.toCharArray())__            client.setNeedClientAuth(true)__            client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__        }__        if (ftpClientTrustStoreParameters != null) {_            String type = (ftpClientTrustStoreParameters.containsKey("type"))_                    ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__            String file = (String) ftpClientTrustStoreParameters.get("file")__            String password = (String) ftpClientTrustStoreParameters.get("password")__            String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                    ? (String) ftpClientTrustStoreParameters.get("algorithm")_                    : TrustManagerFactory.getDefaultAlgorithm()__                    _            KeyStore trustStore = KeyStore.getInstance(type)__            FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__            try {_                trustStore.load(trustStoreFileInputStream, password.toCharArray())__            } finally {_                IOHelper.close(trustStoreFileInputStream, "trustStore", log)__            }__            TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__            trustMgrFactory.init(trustStore)__            _            client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__        }_        _        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1307685726;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                           getFtpsConfiguration().isImplicit())__        _        if (ftpClientKeyStoreParameters != null) {_            String type = (ftpClientKeyStoreParameters.containsKey("type"))_                    ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__            String file = (String) ftpClientKeyStoreParameters.get("file")__            String password = (String) ftpClientKeyStoreParameters.get("password")__            String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                    ? (String) ftpClientKeyStoreParameters.get("algorithm")_                    : KeyManagerFactory.getDefaultAlgorithm()__            String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__            _            KeyStore keyStore = KeyStore.getInstance(type)__            FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__            try {_                keyStore.load(keyStoreFileInputStream, password.toCharArray())__            } finally {_                IOHelper.close(keyStoreFileInputStream, "keyStore", log)__            }__            KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__            keyMgrFactory.init(keyStore, keyPassword.toCharArray())__            client.setNeedClientAuth(true)__            client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__        }__        if (ftpClientTrustStoreParameters != null) {_            String type = (ftpClientTrustStoreParameters.containsKey("type"))_                    ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__            String file = (String) ftpClientTrustStoreParameters.get("file")__            String password = (String) ftpClientTrustStoreParameters.get("password")__            String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                    ? (String) ftpClientTrustStoreParameters.get("algorithm")_                    : TrustManagerFactory.getDefaultAlgorithm()__                    _            KeyStore trustStore = KeyStore.getInstance(type)__            FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__            try {_                trustStore.load(trustStoreFileInputStream, password.toCharArray())__            } finally {_                IOHelper.close(trustStoreFileInputStream, "trustStore", log)__            }__            TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__            trustMgrFactory.init(trustStore)__            _            client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__        }_        _        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1322698410;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client = null__        _        if (sslContextParameters != null) {_            SSLContext context = sslContextParameters.createSSLContext()___            client = new FTPSClient(getFtpsConfiguration().isImplicit(), context)__            _            _            _            _            _            _            _            SSLSocket socket = (SSLSocket)context.getSocketFactory().createSocket()__            client.setEnabledCipherSuites(socket.getEnabledCipherSuites())__            client.setEnabledProtocols(socket.getEnabledProtocols())__            client.setNeedClientAuth(socket.getNeedClientAuth())__            client.setWantClientAuth(socket.getWantClientAuth())__            client.setEnabledSessionCreation(socket.getEnableSessionCreation())__        } else {_            client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                               getFtpsConfiguration().isImplicit())__            _            if (ftpClientKeyStoreParameters != null) {_                String type = (ftpClientKeyStoreParameters.containsKey("type"))_                        ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientKeyStoreParameters.get("file")__                String password = (String) ftpClientKeyStoreParameters.get("password")__                String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientKeyStoreParameters.get("algorithm")_                        : KeyManagerFactory.getDefaultAlgorithm()__                String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__                _                KeyStore keyStore = KeyStore.getInstance(type)__                FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    keyStore.load(keyStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(keyStoreFileInputStream, "keyStore", log)__                }_    _                KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__                keyMgrFactory.init(keyStore, keyPassword.toCharArray())__                client.setNeedClientAuth(true)__                client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__            }_    _            if (ftpClientTrustStoreParameters != null) {_                String type = (ftpClientTrustStoreParameters.containsKey("type"))_                        ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientTrustStoreParameters.get("file")__                String password = (String) ftpClientTrustStoreParameters.get("password")__                String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientTrustStoreParameters.get("algorithm")_                        : TrustManagerFactory.getDefaultAlgorithm()__                        _                KeyStore trustStore = KeyStore.getInstance(type)__                FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    trustStore.load(trustStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(trustStoreFileInputStream, "trustStore", log)__                }_    _                TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__                trustMgrFactory.init(trustStore)__                _                client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__            }_        }_        _        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,null,if,ssl,context,parameters,null,sslcontext,context,ssl,context,parameters,create,sslcontext,client,new,ftpsclient,get,ftps,configuration,is,implicit,context,sslsocket,socket,sslsocket,context,get,socket,factory,create,socket,client,set,enabled,cipher,suites,socket,get,enabled,cipher,suites,client,set,enabled,protocols,socket,get,enabled,protocols,client,set,need,client,auth,socket,get,need,client,auth,client,set,want,client,auth,socket,get,want,client,auth,client,set,enabled,session,creation,socket,get,enable,session,creation,else,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1325745470;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client = null__        _        if (sslContextParameters != null) {_            SSLContext context = sslContextParameters.createSSLContext()___            client = new FTPSClient(getFtpsConfiguration().isImplicit(), context)__            _            _            _            _            _            _            _            SSLSocket socket = (SSLSocket)context.getSocketFactory().createSocket()__            client.setEnabledCipherSuites(socket.getEnabledCipherSuites())__            client.setEnabledProtocols(socket.getEnabledProtocols())__            client.setNeedClientAuth(socket.getNeedClientAuth())__            client.setWantClientAuth(socket.getWantClientAuth())__            client.setEnabledSessionCreation(socket.getEnableSessionCreation())__        } else {_            client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                               getFtpsConfiguration().isImplicit())__            _            if (ftpClientKeyStoreParameters != null) {_                String type = (ftpClientKeyStoreParameters.containsKey("type"))_                        ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientKeyStoreParameters.get("file")__                String password = (String) ftpClientKeyStoreParameters.get("password")__                String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientKeyStoreParameters.get("algorithm")_                        : KeyManagerFactory.getDefaultAlgorithm()__                String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__                _                KeyStore keyStore = KeyStore.getInstance(type)__                FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    keyStore.load(keyStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(keyStoreFileInputStream, "keyStore", log)__                }_    _                KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__                keyMgrFactory.init(keyStore, keyPassword.toCharArray())__                client.setNeedClientAuth(true)__                client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__            }_    _            if (ftpClientTrustStoreParameters != null) {_                String type = (ftpClientTrustStoreParameters.containsKey("type"))_                        ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientTrustStoreParameters.get("file")__                String password = (String) ftpClientTrustStoreParameters.get("password")__                String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientTrustStoreParameters.get("algorithm")_                        : TrustManagerFactory.getDefaultAlgorithm()__                        _                KeyStore trustStore = KeyStore.getInstance(type)__                FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    trustStore.load(trustStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(trustStoreFileInputStream, "trustStore", log)__                }_    _                TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__                trustMgrFactory.init(trustStore)__                _                client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__            }_        }_        _        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,null,if,ssl,context,parameters,null,sslcontext,context,ssl,context,parameters,create,sslcontext,client,new,ftpsclient,get,ftps,configuration,is,implicit,context,sslsocket,socket,sslsocket,context,get,socket,factory,create,socket,client,set,enabled,cipher,suites,socket,get,enabled,cipher,suites,client,set,enabled,protocols,socket,get,enabled,protocols,client,set,need,client,auth,socket,get,need,client,auth,client,set,want,client,auth,socket,get,want,client,auth,client,set,enabled,session,creation,socket,get,enable,session,creation,else,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1382962715;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client = null__        _        if (sslContextParameters != null) {_            SSLContext context = sslContextParameters.createSSLContext()___            client = new FTPSClient(getFtpsConfiguration().isImplicit(), context)__            _            _            _            _            _            _            _            SSLSocket socket = (SSLSocket)context.getSocketFactory().createSocket()__            client.setEnabledCipherSuites(socket.getEnabledCipherSuites())__            client.setEnabledProtocols(socket.getEnabledProtocols())__            client.setNeedClientAuth(socket.getNeedClientAuth())__            client.setWantClientAuth(socket.getWantClientAuth())__            client.setEnabledSessionCreation(socket.getEnableSessionCreation())__        } else {_            client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                               getFtpsConfiguration().isImplicit())__            _            if (ftpClientKeyStoreParameters != null) {_                String type = (ftpClientKeyStoreParameters.containsKey("type"))_                        ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientKeyStoreParameters.get("file")__                String password = (String) ftpClientKeyStoreParameters.get("password")__                String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientKeyStoreParameters.get("algorithm")_                        : KeyManagerFactory.getDefaultAlgorithm()__                String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__                _                KeyStore keyStore = KeyStore.getInstance(type)__                FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    keyStore.load(keyStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(keyStoreFileInputStream, "keyStore", log)__                }_    _                KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__                keyMgrFactory.init(keyStore, keyPassword.toCharArray())__                client.setNeedClientAuth(true)__                client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__            }_    _            if (ftpClientTrustStoreParameters != null) {_                String type = (ftpClientTrustStoreParameters.containsKey("type"))_                        ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientTrustStoreParameters.get("file")__                String password = (String) ftpClientTrustStoreParameters.get("password")__                String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientTrustStoreParameters.get("algorithm")_                        : TrustManagerFactory.getDefaultAlgorithm()__                        _                KeyStore trustStore = KeyStore.getInstance(type)__                FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    trustStore.load(trustStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(trustStoreFileInputStream, "trustStore", log)__                }_    _                TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__                trustMgrFactory.init(trustStore)__                _                client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__            }_        }_        _        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,null,if,ssl,context,parameters,null,sslcontext,context,ssl,context,parameters,create,sslcontext,client,new,ftpsclient,get,ftps,configuration,is,implicit,context,sslsocket,socket,sslsocket,context,get,socket,factory,create,socket,client,set,enabled,cipher,suites,socket,get,enabled,cipher,suites,client,set,enabled,protocols,socket,get,enabled,protocols,client,set,need,client,auth,socket,get,need,client,auth,client,set,want,client,auth,socket,get,want,client,auth,client,set,enabled,session,creation,socket,get,enable,session,creation,else,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1388443957;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client = null__        _        if (sslContextParameters != null) {_            SSLContext context = sslContextParameters.createSSLContext()___            client = new FTPSClient(getFtpsConfiguration().isImplicit(), context)__            _            _            _            _            _            _            _            SSLSocket socket = (SSLSocket)context.getSocketFactory().createSocket()__            client.setEnabledCipherSuites(socket.getEnabledCipherSuites())__            client.setEnabledProtocols(socket.getEnabledProtocols())__            client.setNeedClientAuth(socket.getNeedClientAuth())__            client.setWantClientAuth(socket.getWantClientAuth())__            client.setEnabledSessionCreation(socket.getEnableSessionCreation())__        } else {_            client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                               getFtpsConfiguration().isImplicit())__            _            if (ftpClientKeyStoreParameters != null) {_                String type = (ftpClientKeyStoreParameters.containsKey("type"))_                        ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientKeyStoreParameters.get("file")__                String password = (String) ftpClientKeyStoreParameters.get("password")__                String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientKeyStoreParameters.get("algorithm")_                        : KeyManagerFactory.getDefaultAlgorithm()__                String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__                _                KeyStore keyStore = KeyStore.getInstance(type)__                FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    keyStore.load(keyStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(keyStoreFileInputStream, "keyStore", log)__                }_    _                KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__                keyMgrFactory.init(keyStore, keyPassword.toCharArray())__                client.setNeedClientAuth(true)__                client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__            }_    _            if (ftpClientTrustStoreParameters != null) {_                String type = (ftpClientTrustStoreParameters.containsKey("type"))_                        ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientTrustStoreParameters.get("file")__                String password = (String) ftpClientTrustStoreParameters.get("password")__                String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientTrustStoreParameters.get("algorithm")_                        : TrustManagerFactory.getDefaultAlgorithm()__                        _                KeyStore trustStore = KeyStore.getInstance(type)__                FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    trustStore.load(trustStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(trustStoreFileInputStream, "trustStore", log)__                }_    _                TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__                trustMgrFactory.init(trustStore)__                _                client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__            }_        }_        _        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,null,if,ssl,context,parameters,null,sslcontext,context,ssl,context,parameters,create,sslcontext,client,new,ftpsclient,get,ftps,configuration,is,implicit,context,sslsocket,socket,sslsocket,context,get,socket,factory,create,socket,client,set,enabled,cipher,suites,socket,get,enabled,cipher,suites,client,set,enabled,protocols,socket,get,enabled,protocols,client,set,need,client,auth,socket,get,need,client,auth,client,set,want,client,auth,socket,get,want,client,auth,client,set,enabled,session,creation,socket,get,enable,session,creation,else,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1392751344;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client = null__        _        if (sslContextParameters != null) {_            SSLContext context = sslContextParameters.createSSLContext()___            client = new FTPSClient(getFtpsConfiguration().isImplicit(), context)__            _            _            _            _            _            _            _            SSLSocket socket = (SSLSocket)context.getSocketFactory().createSocket()__            client.setEnabledCipherSuites(socket.getEnabledCipherSuites())__            client.setEnabledProtocols(socket.getEnabledProtocols())__            client.setNeedClientAuth(socket.getNeedClientAuth())__            client.setWantClientAuth(socket.getWantClientAuth())__            client.setEnabledSessionCreation(socket.getEnableSessionCreation())__        } else {_            client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                               getFtpsConfiguration().isImplicit())__            _            if (ftpClientKeyStoreParameters != null) {_                String type = (ftpClientKeyStoreParameters.containsKey("type"))_                        ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientKeyStoreParameters.get("file")__                String password = (String) ftpClientKeyStoreParameters.get("password")__                String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientKeyStoreParameters.get("algorithm")_                        : KeyManagerFactory.getDefaultAlgorithm()__                String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__                _                KeyStore keyStore = KeyStore.getInstance(type)__                FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    keyStore.load(keyStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(keyStoreFileInputStream, "keyStore", log)__                }_    _                KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__                keyMgrFactory.init(keyStore, keyPassword.toCharArray())__                client.setNeedClientAuth(true)__                client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__            }_    _            if (ftpClientTrustStoreParameters != null) {_                String type = (ftpClientTrustStoreParameters.containsKey("type"))_                        ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientTrustStoreParameters.get("file")__                String password = (String) ftpClientTrustStoreParameters.get("password")__                String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientTrustStoreParameters.get("algorithm")_                        : TrustManagerFactory.getDefaultAlgorithm()__                        _                KeyStore trustStore = KeyStore.getInstance(type)__                FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    trustStore.load(trustStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(trustStoreFileInputStream, "trustStore", log)__                }_    _                TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__                trustMgrFactory.init(trustStore)__                _                client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__            }_        }_        _        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,null,if,ssl,context,parameters,null,sslcontext,context,ssl,context,parameters,create,sslcontext,client,new,ftpsclient,get,ftps,configuration,is,implicit,context,sslsocket,socket,sslsocket,context,get,socket,factory,create,socket,client,set,enabled,cipher,suites,socket,get,enabled,cipher,suites,client,set,enabled,protocols,socket,get,enabled,protocols,client,set,need,client,auth,socket,get,need,client,auth,client,set,want,client,auth,socket,get,want,client,auth,client,set,enabled,session,creation,socket,get,enable,session,creation,else,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1416561667;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client = null__        _        if (sslContextParameters != null) {_            SSLContext context = sslContextParameters.createSSLContext()___            client = new FTPSClient(getFtpsConfiguration().isImplicit(), context)__            _            _            _            _            _            _            _            SSLSocket socket = (SSLSocket)context.getSocketFactory().createSocket()__            client.setEnabledCipherSuites(socket.getEnabledCipherSuites())__            client.setEnabledProtocols(socket.getEnabledProtocols())__            client.setNeedClientAuth(socket.getNeedClientAuth())__            client.setWantClientAuth(socket.getWantClientAuth())__            client.setEnabledSessionCreation(socket.getEnableSessionCreation())__        } else {_            client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                               getFtpsConfiguration().isImplicit())__            _            if (ftpClientKeyStoreParameters != null) {_                String type = (ftpClientKeyStoreParameters.containsKey("type"))_                        ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientKeyStoreParameters.get("file")__                String password = (String) ftpClientKeyStoreParameters.get("password")__                String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientKeyStoreParameters.get("algorithm")_                        : KeyManagerFactory.getDefaultAlgorithm()__                String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__                _                KeyStore keyStore = KeyStore.getInstance(type)__                FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    keyStore.load(keyStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(keyStoreFileInputStream, "keyStore", log)__                }_    _                KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__                keyMgrFactory.init(keyStore, keyPassword.toCharArray())__                client.setNeedClientAuth(true)__                client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__            }_    _            if (ftpClientTrustStoreParameters != null) {_                String type = (ftpClientTrustStoreParameters.containsKey("type"))_                        ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientTrustStoreParameters.get("file")__                String password = (String) ftpClientTrustStoreParameters.get("password")__                String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientTrustStoreParameters.get("algorithm")_                        : TrustManagerFactory.getDefaultAlgorithm()__                        _                KeyStore trustStore = KeyStore.getInstance(type)__                FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    trustStore.load(trustStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(trustStoreFileInputStream, "trustStore", log)__                }_    _                TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__                trustMgrFactory.init(trustStore)__                _                client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__            }_        }_        _        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,null,if,ssl,context,parameters,null,sslcontext,context,ssl,context,parameters,create,sslcontext,client,new,ftpsclient,get,ftps,configuration,is,implicit,context,sslsocket,socket,sslsocket,context,get,socket,factory,create,socket,client,set,enabled,cipher,suites,socket,get,enabled,cipher,suites,client,set,enabled,protocols,socket,get,enabled,protocols,client,set,need,client,auth,socket,get,need,client,auth,client,set,want,client,auth,socket,get,want,client,auth,client,set,enabled,session,creation,socket,get,enable,session,creation,else,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1417137743;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client = null__        _        if (sslContextParameters != null) {_            SSLContext context = sslContextParameters.createSSLContext()___            client = new FTPSClient(getFtpsConfiguration().isImplicit(), context)__            _            _            _            _            _            _            _            SSLSocket socket = (SSLSocket)context.getSocketFactory().createSocket()__            client.setEnabledCipherSuites(socket.getEnabledCipherSuites())__            client.setEnabledProtocols(socket.getEnabledProtocols())__            client.setNeedClientAuth(socket.getNeedClientAuth())__            client.setWantClientAuth(socket.getWantClientAuth())__            client.setEnabledSessionCreation(socket.getEnableSessionCreation())__        } else {_            client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                               getFtpsConfiguration().isImplicit())__            _            if (ftpClientKeyStoreParameters != null) {_                String type = (ftpClientKeyStoreParameters.containsKey("type"))_                        ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientKeyStoreParameters.get("file")__                String password = (String) ftpClientKeyStoreParameters.get("password")__                String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientKeyStoreParameters.get("algorithm")_                        : KeyManagerFactory.getDefaultAlgorithm()__                String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__                _                KeyStore keyStore = KeyStore.getInstance(type)__                FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    keyStore.load(keyStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(keyStoreFileInputStream, "keyStore", log)__                }_    _                KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__                keyMgrFactory.init(keyStore, keyPassword.toCharArray())__                client.setNeedClientAuth(true)__                client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__            }_    _            if (ftpClientTrustStoreParameters != null) {_                String type = (ftpClientTrustStoreParameters.containsKey("type"))_                        ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientTrustStoreParameters.get("file")__                String password = (String) ftpClientTrustStoreParameters.get("password")__                String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientTrustStoreParameters.get("algorithm")_                        : TrustManagerFactory.getDefaultAlgorithm()__                        _                KeyStore trustStore = KeyStore.getInstance(type)__                FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    trustStore.load(trustStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(trustStoreFileInputStream, "trustStore", log)__                }_    _                TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__                trustMgrFactory.init(trustStore)__                _                client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__            }_        }_        _        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,null,if,ssl,context,parameters,null,sslcontext,context,ssl,context,parameters,create,sslcontext,client,new,ftpsclient,get,ftps,configuration,is,implicit,context,sslsocket,socket,sslsocket,context,get,socket,factory,create,socket,client,set,enabled,cipher,suites,socket,get,enabled,cipher,suites,client,set,enabled,protocols,socket,get,enabled,protocols,client,set,need,client,auth,socket,get,need,client,auth,client,set,want,client,auth,socket,get,want,client,auth,client,set,enabled,session,creation,socket,get,enable,session,creation,else,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1425140025;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client = null__        _        if (sslContextParameters != null) {_            SSLContext context = sslContextParameters.createSSLContext()___            client = new FTPSClient(getFtpsConfiguration().isImplicit(), context)__            _            _            _            _            _            _            _            SSLSocket socket = (SSLSocket)context.getSocketFactory().createSocket()__            client.setEnabledCipherSuites(socket.getEnabledCipherSuites())__            client.setEnabledProtocols(socket.getEnabledProtocols())__            client.setNeedClientAuth(socket.getNeedClientAuth())__            client.setWantClientAuth(socket.getWantClientAuth())__            client.setEnabledSessionCreation(socket.getEnableSessionCreation())__        } else {_            client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                               getFtpsConfiguration().isImplicit())__            _            if (ftpClientKeyStoreParameters != null) {_                String type = (ftpClientKeyStoreParameters.containsKey("type"))_                        ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientKeyStoreParameters.get("file")__                String password = (String) ftpClientKeyStoreParameters.get("password")__                String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientKeyStoreParameters.get("algorithm")_                        : KeyManagerFactory.getDefaultAlgorithm()__                String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__                _                KeyStore keyStore = KeyStore.getInstance(type)__                FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    keyStore.load(keyStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(keyStoreFileInputStream, "keyStore", log)__                }_    _                KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__                keyMgrFactory.init(keyStore, keyPassword.toCharArray())__                client.setNeedClientAuth(true)__                client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__            }_    _            if (ftpClientTrustStoreParameters != null) {_                String type = (ftpClientTrustStoreParameters.containsKey("type"))_                        ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientTrustStoreParameters.get("file")__                String password = (String) ftpClientTrustStoreParameters.get("password")__                String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientTrustStoreParameters.get("algorithm")_                        : TrustManagerFactory.getDefaultAlgorithm()__                        _                KeyStore trustStore = KeyStore.getInstance(type)__                FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    trustStore.load(trustStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(trustStoreFileInputStream, "trustStore", log)__                }_    _                TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__                trustMgrFactory.init(trustStore)__                _                client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__            }_        }_        _        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,null,if,ssl,context,parameters,null,sslcontext,context,ssl,context,parameters,create,sslcontext,client,new,ftpsclient,get,ftps,configuration,is,implicit,context,sslsocket,socket,sslsocket,context,get,socket,factory,create,socket,client,set,enabled,cipher,suites,socket,get,enabled,cipher,suites,client,set,enabled,protocols,socket,get,enabled,protocols,client,set,need,client,auth,socket,get,need,client,auth,client,set,want,client,auth,socket,get,want,client,auth,client,set,enabled,session,creation,socket,get,enable,session,creation,else,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1426750198;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client = null__        _        if (sslContextParameters != null) {_            SSLContext context = sslContextParameters.createSSLContext()___            client = new FTPSClient(getFtpsConfiguration().isImplicit(), context)__            _            _            _            _            _            _            _            SSLSocket socket = (SSLSocket)context.getSocketFactory().createSocket()__            client.setEnabledCipherSuites(socket.getEnabledCipherSuites())__            client.setEnabledProtocols(socket.getEnabledProtocols())__            client.setNeedClientAuth(socket.getNeedClientAuth())__            client.setWantClientAuth(socket.getWantClientAuth())__            client.setEnabledSessionCreation(socket.getEnableSessionCreation())__        } else {_            client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                               getFtpsConfiguration().isImplicit())__            _            if (ftpClientKeyStoreParameters != null) {_                String type = (ftpClientKeyStoreParameters.containsKey("type"))_                        ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientKeyStoreParameters.get("file")__                String password = (String) ftpClientKeyStoreParameters.get("password")__                String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientKeyStoreParameters.get("algorithm")_                        : KeyManagerFactory.getDefaultAlgorithm()__                String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__                _                KeyStore keyStore = KeyStore.getInstance(type)__                FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    keyStore.load(keyStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(keyStoreFileInputStream, "keyStore", log)__                }_    _                KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__                keyMgrFactory.init(keyStore, keyPassword.toCharArray())__                client.setNeedClientAuth(true)__                client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__            }_    _            if (ftpClientTrustStoreParameters != null) {_                String type = (ftpClientTrustStoreParameters.containsKey("type"))_                        ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientTrustStoreParameters.get("file")__                String password = (String) ftpClientTrustStoreParameters.get("password")__                String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientTrustStoreParameters.get("algorithm")_                        : TrustManagerFactory.getDefaultAlgorithm()__                        _                KeyStore trustStore = KeyStore.getInstance(type)__                FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    trustStore.load(trustStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(trustStoreFileInputStream, "trustStore", log)__                }_    _                TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__                trustMgrFactory.init(trustStore)__                _                client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__            }_        }__        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,null,if,ssl,context,parameters,null,sslcontext,context,ssl,context,parameters,create,sslcontext,client,new,ftpsclient,get,ftps,configuration,is,implicit,context,sslsocket,socket,sslsocket,context,get,socket,factory,create,socket,client,set,enabled,cipher,suites,socket,get,enabled,cipher,suites,client,set,enabled,protocols,socket,get,enabled,protocols,client,set,need,client,auth,socket,get,need,client,auth,client,set,want,client,auth,socket,get,want,client,auth,client,set,enabled,session,creation,socket,get,enable,session,creation,else,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1427402378;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client = null__        _        if (sslContextParameters != null) {_            SSLContext context = sslContextParameters.createSSLContext()___            client = new FTPSClient(getFtpsConfiguration().isImplicit(), context)__            _            _            _            _            _            _            _            SSLSocket socket = (SSLSocket)context.getSocketFactory().createSocket()__            client.setEnabledCipherSuites(socket.getEnabledCipherSuites())__            client.setEnabledProtocols(socket.getEnabledProtocols())__            client.setNeedClientAuth(socket.getNeedClientAuth())__            client.setWantClientAuth(socket.getWantClientAuth())__            client.setEnabledSessionCreation(socket.getEnableSessionCreation())__        } else {_            client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                               getFtpsConfiguration().isImplicit())__            _            if (ftpClientKeyStoreParameters != null) {_                String type = (ftpClientKeyStoreParameters.containsKey("type"))_                        ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientKeyStoreParameters.get("file")__                String password = (String) ftpClientKeyStoreParameters.get("password")__                String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientKeyStoreParameters.get("algorithm")_                        : KeyManagerFactory.getDefaultAlgorithm()__                String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__                _                KeyStore keyStore = KeyStore.getInstance(type)__                FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    keyStore.load(keyStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(keyStoreFileInputStream, "keyStore", log)__                }_    _                KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__                keyMgrFactory.init(keyStore, keyPassword.toCharArray())__                client.setNeedClientAuth(true)__                client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__            }_    _            if (ftpClientTrustStoreParameters != null) {_                String type = (ftpClientTrustStoreParameters.containsKey("type"))_                        ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientTrustStoreParameters.get("file")__                String password = (String) ftpClientTrustStoreParameters.get("password")__                String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientTrustStoreParameters.get("algorithm")_                        : TrustManagerFactory.getDefaultAlgorithm()__                        _                KeyStore trustStore = KeyStore.getInstance(type)__                FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    trustStore.load(trustStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(trustStoreFileInputStream, "trustStore", log)__                }_    _                TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__                trustMgrFactory.init(trustStore)__                _                client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__            }_        }__        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,null,if,ssl,context,parameters,null,sslcontext,context,ssl,context,parameters,create,sslcontext,client,new,ftpsclient,get,ftps,configuration,is,implicit,context,sslsocket,socket,sslsocket,context,get,socket,factory,create,socket,client,set,enabled,cipher,suites,socket,get,enabled,cipher,suites,client,set,enabled,protocols,socket,get,enabled,protocols,client,set,need,client,auth,socket,get,need,client,auth,client,set,want,client,auth,socket,get,want,client,auth,client,set,enabled,session,creation,socket,get,enable,session,creation,else,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1434280086;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client = null__        _        if (sslContextParameters != null) {_            SSLContext context = sslContextParameters.createSSLContext()___            client = new FTPSClient(getFtpsConfiguration().isImplicit(), context)__            _            _            _            _            _            _            _            SSLSocket socket = (SSLSocket)context.getSocketFactory().createSocket()__            client.setEnabledCipherSuites(socket.getEnabledCipherSuites())__            client.setEnabledProtocols(socket.getEnabledProtocols())__            client.setNeedClientAuth(socket.getNeedClientAuth())__            client.setWantClientAuth(socket.getWantClientAuth())__            client.setEnabledSessionCreation(socket.getEnableSessionCreation())__        } else {_            client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                               getFtpsConfiguration().isImplicit())__            _            if (ftpClientKeyStoreParameters != null) {_                String type = (ftpClientKeyStoreParameters.containsKey("type"))_                        ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientKeyStoreParameters.get("file")__                String password = (String) ftpClientKeyStoreParameters.get("password")__                String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientKeyStoreParameters.get("algorithm")_                        : KeyManagerFactory.getDefaultAlgorithm()__                String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__                _                KeyStore keyStore = KeyStore.getInstance(type)__                FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    keyStore.load(keyStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(keyStoreFileInputStream, "keyStore", log)__                }_    _                KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__                keyMgrFactory.init(keyStore, keyPassword.toCharArray())__                client.setNeedClientAuth(true)__                client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__            }_    _            if (ftpClientTrustStoreParameters != null) {_                String type = (ftpClientTrustStoreParameters.containsKey("type"))_                        ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientTrustStoreParameters.get("file")__                String password = (String) ftpClientTrustStoreParameters.get("password")__                String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientTrustStoreParameters.get("algorithm")_                        : TrustManagerFactory.getDefaultAlgorithm()__                        _                KeyStore trustStore = KeyStore.getInstance(type)__                FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    trustStore.load(trustStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(trustStoreFileInputStream, "trustStore", log)__                }_    _                TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__                trustMgrFactory.init(trustStore)__                _                client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__            }_        }__        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,null,if,ssl,context,parameters,null,sslcontext,context,ssl,context,parameters,create,sslcontext,client,new,ftpsclient,get,ftps,configuration,is,implicit,context,sslsocket,socket,sslsocket,context,get,socket,factory,create,socket,client,set,enabled,cipher,suites,socket,get,enabled,cipher,suites,client,set,enabled,protocols,socket,get,enabled,protocols,client,set,need,client,auth,socket,get,need,client,auth,client,set,want,client,auth,socket,get,want,client,auth,client,set,enabled,session,creation,socket,get,enable,session,creation,else,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1442837121;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client__        _        if (sslContextParameters != null) {_            SSLContext context = sslContextParameters.createSSLContext()___            client = new FTPSClient(getFtpsConfiguration().isImplicit(), context)__            _            _            _            _            _            _            _            SSLSocket socket = (SSLSocket)context.getSocketFactory().createSocket()__            client.setEnabledCipherSuites(socket.getEnabledCipherSuites())__            client.setEnabledProtocols(socket.getEnabledProtocols())__            client.setNeedClientAuth(socket.getNeedClientAuth())__            client.setWantClientAuth(socket.getWantClientAuth())__            client.setEnabledSessionCreation(socket.getEnableSessionCreation())__        } else {_            client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                               getFtpsConfiguration().isImplicit())__            _            if (ftpClientKeyStoreParameters != null) {_                String type = (ftpClientKeyStoreParameters.containsKey("type"))_                        ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientKeyStoreParameters.get("file")__                String password = (String) ftpClientKeyStoreParameters.get("password")__                String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientKeyStoreParameters.get("algorithm")_                        : KeyManagerFactory.getDefaultAlgorithm()__                String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__                _                KeyStore keyStore = KeyStore.getInstance(type)__                FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    keyStore.load(keyStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(keyStoreFileInputStream, "keyStore", log)__                }_    _                KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__                keyMgrFactory.init(keyStore, keyPassword.toCharArray())__                client.setNeedClientAuth(true)__                client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__            }_    _            if (ftpClientTrustStoreParameters != null) {_                String type = (ftpClientTrustStoreParameters.containsKey("type"))_                        ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientTrustStoreParameters.get("file")__                String password = (String) ftpClientTrustStoreParameters.get("password")__                String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientTrustStoreParameters.get("algorithm")_                        : TrustManagerFactory.getDefaultAlgorithm()__                        _                KeyStore trustStore = KeyStore.getInstance(type)__                FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    trustStore.load(trustStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(trustStoreFileInputStream, "trustStore", log)__                }_    _                TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__                trustMgrFactory.init(trustStore)__                _                client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__            }_        }__        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,if,ssl,context,parameters,null,sslcontext,context,ssl,context,parameters,create,sslcontext,client,new,ftpsclient,get,ftps,configuration,is,implicit,context,sslsocket,socket,sslsocket,context,get,socket,factory,create,socket,client,set,enabled,cipher,suites,socket,get,enabled,cipher,suites,client,set,enabled,protocols,socket,get,enabled,protocols,client,set,need,client,auth,socket,get,need,client,auth,client,set,want,client,auth,socket,get,want,client,auth,client,set,enabled,session,creation,socket,get,enable,session,creation,else,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1442837494;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client__        _        if (sslContextParameters != null) {_            SSLContext context = sslContextParameters.createSSLContext()___            client = new FTPSClient(getFtpsConfiguration().isImplicit(), context)__            _            _            _            _            _            _            _            SSLSocket socket = (SSLSocket)context.getSocketFactory().createSocket()__            client.setEnabledCipherSuites(socket.getEnabledCipherSuites())__            client.setEnabledProtocols(socket.getEnabledProtocols())__            client.setNeedClientAuth(socket.getNeedClientAuth())__            client.setWantClientAuth(socket.getWantClientAuth())__            client.setEnabledSessionCreation(socket.getEnableSessionCreation())__        } else {_            client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                               getFtpsConfiguration().isImplicit())__            _            if (ftpClientKeyStoreParameters != null) {_                String type = (ftpClientKeyStoreParameters.containsKey("type"))_                        ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientKeyStoreParameters.get("file")__                String password = (String) ftpClientKeyStoreParameters.get("password")__                String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientKeyStoreParameters.get("algorithm")_                        : KeyManagerFactory.getDefaultAlgorithm()__                String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__                _                KeyStore keyStore = KeyStore.getInstance(type)__                FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    keyStore.load(keyStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(keyStoreFileInputStream, "keyStore", log)__                }_    _                KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__                keyMgrFactory.init(keyStore, keyPassword.toCharArray())__                client.setNeedClientAuth(true)__                client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__            }_    _            if (ftpClientTrustStoreParameters != null) {_                String type = (ftpClientTrustStoreParameters.containsKey("type"))_                        ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientTrustStoreParameters.get("file")__                String password = (String) ftpClientTrustStoreParameters.get("password")__                String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientTrustStoreParameters.get("algorithm")_                        : TrustManagerFactory.getDefaultAlgorithm()__                        _                KeyStore trustStore = KeyStore.getInstance(type)__                FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    trustStore.load(trustStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(trustStoreFileInputStream, "trustStore", log)__                }_    _                TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__                trustMgrFactory.init(trustStore)__                _                client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__            }_        }__        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,if,ssl,context,parameters,null,sslcontext,context,ssl,context,parameters,create,sslcontext,client,new,ftpsclient,get,ftps,configuration,is,implicit,context,sslsocket,socket,sslsocket,context,get,socket,factory,create,socket,client,set,enabled,cipher,suites,socket,get,enabled,cipher,suites,client,set,enabled,protocols,socket,get,enabled,protocols,client,set,need,client,auth,socket,get,need,client,auth,client,set,want,client,auth,socket,get,want,client,auth,client,set,enabled,session,creation,socket,get,enable,session,creation,else,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1451237125;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client__        _        if (sslContextParameters != null) {_            SSLContext context = sslContextParameters.createSSLContext()___            client = new FTPSClient(getFtpsConfiguration().isImplicit(), context)__            _            _            _            _            _            _            _            SSLSocket socket = (SSLSocket)context.getSocketFactory().createSocket()__            client.setEnabledCipherSuites(socket.getEnabledCipherSuites())__            client.setEnabledProtocols(socket.getEnabledProtocols())__            client.setNeedClientAuth(socket.getNeedClientAuth())__            client.setWantClientAuth(socket.getWantClientAuth())__            client.setEnabledSessionCreation(socket.getEnableSessionCreation())__        } else {_            client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                               getFtpsConfiguration().isImplicit())__            _            if (ftpClientKeyStoreParameters != null) {_                String type = (ftpClientKeyStoreParameters.containsKey("type"))_                        ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientKeyStoreParameters.get("file")__                String password = (String) ftpClientKeyStoreParameters.get("password")__                String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientKeyStoreParameters.get("algorithm")_                        : KeyManagerFactory.getDefaultAlgorithm()__                String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__                _                KeyStore keyStore = KeyStore.getInstance(type)__                FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    keyStore.load(keyStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(keyStoreFileInputStream, "keyStore", log)__                }_    _                KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__                keyMgrFactory.init(keyStore, keyPassword.toCharArray())__                client.setNeedClientAuth(true)__                client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__            }_    _            if (ftpClientTrustStoreParameters != null) {_                String type = (ftpClientTrustStoreParameters.containsKey("type"))_                        ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientTrustStoreParameters.get("file")__                String password = (String) ftpClientTrustStoreParameters.get("password")__                String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientTrustStoreParameters.get("algorithm")_                        : TrustManagerFactory.getDefaultAlgorithm()__                        _                KeyStore trustStore = KeyStore.getInstance(type)__                FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    trustStore.load(trustStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(trustStoreFileInputStream, "trustStore", log)__                }_    _                TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__                trustMgrFactory.init(trustStore)__                _                client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__            }_        }__        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,if,ssl,context,parameters,null,sslcontext,context,ssl,context,parameters,create,sslcontext,client,new,ftpsclient,get,ftps,configuration,is,implicit,context,sslsocket,socket,sslsocket,context,get,socket,factory,create,socket,client,set,enabled,cipher,suites,socket,get,enabled,cipher,suites,client,set,enabled,protocols,socket,get,enabled,protocols,client,set,need,client,auth,socket,get,need,client,auth,client,set,want,client,auth,socket,get,want,client,auth,client,set,enabled,session,creation,socket,get,enable,session,creation,else,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1451925761;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client__        _        if (sslContextParameters != null) {_            SSLContext context = sslContextParameters.createSSLContext()___            client = new FTPSClient(getFtpsConfiguration().isImplicit(), context)__            _            _            _            _            _            _            _            SSLSocket socket = (SSLSocket)context.getSocketFactory().createSocket()__            client.setEnabledCipherSuites(socket.getEnabledCipherSuites())__            client.setEnabledProtocols(socket.getEnabledProtocols())__            client.setNeedClientAuth(socket.getNeedClientAuth())__            client.setWantClientAuth(socket.getWantClientAuth())__            client.setEnabledSessionCreation(socket.getEnableSessionCreation())__        } else {_            client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                               getFtpsConfiguration().isImplicit())__            _            if (ftpClientKeyStoreParameters != null) {_                String type = (ftpClientKeyStoreParameters.containsKey("type"))_                        ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientKeyStoreParameters.get("file")__                String password = (String) ftpClientKeyStoreParameters.get("password")__                String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientKeyStoreParameters.get("algorithm")_                        : KeyManagerFactory.getDefaultAlgorithm()__                String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__                _                KeyStore keyStore = KeyStore.getInstance(type)__                FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    keyStore.load(keyStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(keyStoreFileInputStream, "keyStore", log)__                }_    _                KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__                keyMgrFactory.init(keyStore, keyPassword.toCharArray())__                client.setNeedClientAuth(true)__                client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__            }_    _            if (ftpClientTrustStoreParameters != null) {_                String type = (ftpClientTrustStoreParameters.containsKey("type"))_                        ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientTrustStoreParameters.get("file")__                String password = (String) ftpClientTrustStoreParameters.get("password")__                String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientTrustStoreParameters.get("algorithm")_                        : TrustManagerFactory.getDefaultAlgorithm()__                        _                KeyStore trustStore = KeyStore.getInstance(type)__                FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    trustStore.load(trustStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(trustStoreFileInputStream, "trustStore", log)__                }_    _                TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__                trustMgrFactory.init(trustStore)__                _                client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__            }_        }__        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,if,ssl,context,parameters,null,sslcontext,context,ssl,context,parameters,create,sslcontext,client,new,ftpsclient,get,ftps,configuration,is,implicit,context,sslsocket,socket,sslsocket,context,get,socket,factory,create,socket,client,set,enabled,cipher,suites,socket,get,enabled,cipher,suites,client,set,enabled,protocols,socket,get,enabled,protocols,client,set,need,client,auth,socket,get,need,client,auth,client,set,want,client,auth,socket,get,want,client,auth,client,set,enabled,session,creation,socket,get,enable,session,creation,else,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1452094918;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client__        _        if (sslContextParameters != null) {_            SSLContext context = sslContextParameters.createSSLContext()___            client = new FTPSClient(getFtpsConfiguration().isImplicit(), context)__            _            _            _            _            _            _            _            SSLSocket socket = (SSLSocket)context.getSocketFactory().createSocket()__            client.setEnabledCipherSuites(socket.getEnabledCipherSuites())__            client.setEnabledProtocols(socket.getEnabledProtocols())__            client.setNeedClientAuth(socket.getNeedClientAuth())__            client.setWantClientAuth(socket.getWantClientAuth())__            client.setEnabledSessionCreation(socket.getEnableSessionCreation())__        } else {_            client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                               getFtpsConfiguration().isImplicit())__            _            if (ftpClientKeyStoreParameters != null) {_                String type = (ftpClientKeyStoreParameters.containsKey("type"))_                        ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientKeyStoreParameters.get("file")__                String password = (String) ftpClientKeyStoreParameters.get("password")__                String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientKeyStoreParameters.get("algorithm")_                        : KeyManagerFactory.getDefaultAlgorithm()__                String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__                _                KeyStore keyStore = KeyStore.getInstance(type)__                FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    keyStore.load(keyStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(keyStoreFileInputStream, "keyStore", log)__                }_    _                KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__                keyMgrFactory.init(keyStore, keyPassword.toCharArray())__                client.setNeedClientAuth(true)__                client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__            }_    _            if (ftpClientTrustStoreParameters != null) {_                String type = (ftpClientTrustStoreParameters.containsKey("type"))_                        ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientTrustStoreParameters.get("file")__                String password = (String) ftpClientTrustStoreParameters.get("password")__                String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientTrustStoreParameters.get("algorithm")_                        : TrustManagerFactory.getDefaultAlgorithm()__                        _                KeyStore trustStore = KeyStore.getInstance(type)__                FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    trustStore.load(trustStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(trustStoreFileInputStream, "trustStore", log)__                }_    _                TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__                trustMgrFactory.init(trustStore)__                _                client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__            }_        }__        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,if,ssl,context,parameters,null,sslcontext,context,ssl,context,parameters,create,sslcontext,client,new,ftpsclient,get,ftps,configuration,is,implicit,context,sslsocket,socket,sslsocket,context,get,socket,factory,create,socket,client,set,enabled,cipher,suites,socket,get,enabled,cipher,suites,client,set,enabled,protocols,socket,get,enabled,protocols,client,set,need,client,auth,socket,get,need,client,auth,client,set,want,client,auth,socket,get,want,client,auth,client,set,enabled,session,creation,socket,get,enable,session,creation,else,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1461851621;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client__        _        if (sslContextParameters != null) {_            SSLContext context = sslContextParameters.createSSLContext(getCamelContext())___            client = new FTPSClient(getFtpsConfiguration().isImplicit(), context)__            _            _            _            _            _            _            _            SSLSocket socket = (SSLSocket)context.getSocketFactory().createSocket()__            client.setEnabledCipherSuites(socket.getEnabledCipherSuites())__            client.setEnabledProtocols(socket.getEnabledProtocols())__            client.setNeedClientAuth(socket.getNeedClientAuth())__            client.setWantClientAuth(socket.getWantClientAuth())__            client.setEnabledSessionCreation(socket.getEnableSessionCreation())__        } else {_            client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                               getFtpsConfiguration().isImplicit())__            _            if (ftpClientKeyStoreParameters != null) {_                String type = (ftpClientKeyStoreParameters.containsKey("type"))_                        ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientKeyStoreParameters.get("file")__                String password = (String) ftpClientKeyStoreParameters.get("password")__                String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientKeyStoreParameters.get("algorithm")_                        : KeyManagerFactory.getDefaultAlgorithm()__                String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__                _                KeyStore keyStore = KeyStore.getInstance(type)__                FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    keyStore.load(keyStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(keyStoreFileInputStream, "keyStore", log)__                }_    _                KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__                keyMgrFactory.init(keyStore, keyPassword.toCharArray())__                client.setNeedClientAuth(true)__                client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__            }_    _            if (ftpClientTrustStoreParameters != null) {_                String type = (ftpClientTrustStoreParameters.containsKey("type"))_                        ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientTrustStoreParameters.get("file")__                String password = (String) ftpClientTrustStoreParameters.get("password")__                String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientTrustStoreParameters.get("algorithm")_                        : TrustManagerFactory.getDefaultAlgorithm()__                        _                KeyStore trustStore = KeyStore.getInstance(type)__                FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    trustStore.load(trustStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(trustStoreFileInputStream, "trustStore", log)__                }_    _                TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__                trustMgrFactory.init(trustStore)__                _                client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__            }_        }__        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,if,ssl,context,parameters,null,sslcontext,context,ssl,context,parameters,create,sslcontext,get,camel,context,client,new,ftpsclient,get,ftps,configuration,is,implicit,context,sslsocket,socket,sslsocket,context,get,socket,factory,create,socket,client,set,enabled,cipher,suites,socket,get,enabled,cipher,suites,client,set,enabled,protocols,socket,get,enabled,protocols,client,set,need,client,auth,socket,get,need,client,auth,client,set,want,client,auth,socket,get,want,client,auth,client,set,enabled,session,creation,socket,get,enable,session,creation,else,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1485947385;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client__        _        if (sslContextParameters != null) {_            SSLContext context = sslContextParameters.createSSLContext(getCamelContext())___            client = new FTPSClient(getFtpsConfiguration().isImplicit(), context)__            _            _            _            _            _            _            _            SSLSocket socket = (SSLSocket)context.getSocketFactory().createSocket()__            client.setEnabledCipherSuites(socket.getEnabledCipherSuites())__            client.setEnabledProtocols(socket.getEnabledProtocols())__            client.setNeedClientAuth(socket.getNeedClientAuth())__            client.setWantClientAuth(socket.getWantClientAuth())__            client.setEnabledSessionCreation(socket.getEnableSessionCreation())__        } else {_            client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                               getFtpsConfiguration().isImplicit())__            _            if (ftpClientKeyStoreParameters != null) {_                String type = (ftpClientKeyStoreParameters.containsKey("type"))_                        ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientKeyStoreParameters.get("file")__                String password = (String) ftpClientKeyStoreParameters.get("password")__                String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientKeyStoreParameters.get("algorithm")_                        : KeyManagerFactory.getDefaultAlgorithm()__                String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__                _                KeyStore keyStore = KeyStore.getInstance(type)__                FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    keyStore.load(keyStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(keyStoreFileInputStream, "keyStore", log)__                }_    _                KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__                keyMgrFactory.init(keyStore, keyPassword.toCharArray())__                client.setNeedClientAuth(true)__                client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__            }_    _            if (ftpClientTrustStoreParameters != null) {_                String type = (ftpClientTrustStoreParameters.containsKey("type"))_                        ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientTrustStoreParameters.get("file")__                String password = (String) ftpClientTrustStoreParameters.get("password")__                String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientTrustStoreParameters.get("algorithm")_                        : TrustManagerFactory.getDefaultAlgorithm()__                        _                KeyStore trustStore = KeyStore.getInstance(type)__                FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    trustStore.load(trustStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(trustStoreFileInputStream, "trustStore", log)__                }_    _                TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__                trustMgrFactory.init(trustStore)__                _                client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__            }_        }__        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,if,ssl,context,parameters,null,sslcontext,context,ssl,context,parameters,create,sslcontext,get,camel,context,client,new,ftpsclient,get,ftps,configuration,is,implicit,context,sslsocket,socket,sslsocket,context,get,socket,factory,create,socket,client,set,enabled,cipher,suites,socket,get,enabled,cipher,suites,client,set,enabled,protocols,socket,get,enabled,protocols,client,set,need,client,auth,socket,get,need,client,auth,client,set,want,client,auth,socket,get,want,client,auth,client,set,enabled,session,creation,socket,get,enable,session,creation,else,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1515489847;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client__        _        if (sslContextParameters != null) {_            SSLContext context = sslContextParameters.createSSLContext(getCamelContext())___            client = new FTPSClient(getFtpsConfiguration().isImplicit(), context)__            _            _            _            _            _            _            _            SSLSocket socket = (SSLSocket)context.getSocketFactory().createSocket()__            client.setEnabledCipherSuites(socket.getEnabledCipherSuites())__            client.setEnabledProtocols(socket.getEnabledProtocols())__            client.setNeedClientAuth(socket.getNeedClientAuth())__            client.setWantClientAuth(socket.getWantClientAuth())__            client.setEnabledSessionCreation(socket.getEnableSessionCreation())__        } else {_            client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                               getFtpsConfiguration().isImplicit())__            _            if (ftpClientKeyStoreParameters != null) {_                String type = (ftpClientKeyStoreParameters.containsKey("type"))_                        ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientKeyStoreParameters.get("file")__                String password = (String) ftpClientKeyStoreParameters.get("password")__                String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientKeyStoreParameters.get("algorithm")_                        : KeyManagerFactory.getDefaultAlgorithm()__                String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__                _                KeyStore keyStore = KeyStore.getInstance(type)__                FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    keyStore.load(keyStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(keyStoreFileInputStream, "keyStore", log)__                }_    _                KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__                keyMgrFactory.init(keyStore, keyPassword.toCharArray())__                client.setNeedClientAuth(true)__                client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__            }_    _            if (ftpClientTrustStoreParameters != null) {_                String type = (ftpClientTrustStoreParameters.containsKey("type"))_                        ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientTrustStoreParameters.get("file")__                String password = (String) ftpClientTrustStoreParameters.get("password")__                String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientTrustStoreParameters.get("algorithm")_                        : TrustManagerFactory.getDefaultAlgorithm()__                        _                KeyStore trustStore = KeyStore.getInstance(type)__                FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    trustStore.load(trustStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(trustStoreFileInputStream, "trustStore", log)__                }_    _                TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__                trustMgrFactory.init(trustStore)__                _                client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__            }_        }__        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,if,ssl,context,parameters,null,sslcontext,context,ssl,context,parameters,create,sslcontext,get,camel,context,client,new,ftpsclient,get,ftps,configuration,is,implicit,context,sslsocket,socket,sslsocket,context,get,socket,factory,create,socket,client,set,enabled,cipher,suites,socket,get,enabled,cipher,suites,client,set,enabled,protocols,socket,get,enabled,protocols,client,set,need,client,auth,socket,get,need,client,auth,client,set,want,client,auth,socket,get,want,client,auth,client,set,enabled,session,creation,socket,get,enable,session,creation,else,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1523994338;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client__        _        if (sslContextParameters != null) {_            SSLContext context = sslContextParameters.createSSLContext(getCamelContext())___            client = new FTPSClient(getFtpsConfiguration().isImplicit(), context)__            _            _            _            _            _            _            _            SSLSocket socket = (SSLSocket)context.getSocketFactory().createSocket()__            client.setEnabledCipherSuites(socket.getEnabledCipherSuites())__            client.setEnabledProtocols(socket.getEnabledProtocols())__            client.setNeedClientAuth(socket.getNeedClientAuth())__            client.setWantClientAuth(socket.getWantClientAuth())__            client.setEnabledSessionCreation(socket.getEnableSessionCreation())__        } else {_            client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                               getFtpsConfiguration().isImplicit())__            _            if (ftpClientKeyStoreParameters != null) {_                String type = (ftpClientKeyStoreParameters.containsKey("type"))_                        ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientKeyStoreParameters.get("file")__                String password = (String) ftpClientKeyStoreParameters.get("password")__                String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientKeyStoreParameters.get("algorithm")_                        : KeyManagerFactory.getDefaultAlgorithm()__                String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__                _                KeyStore keyStore = KeyStore.getInstance(type)__                FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    keyStore.load(keyStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(keyStoreFileInputStream, "keyStore", log)__                }_    _                KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__                keyMgrFactory.init(keyStore, keyPassword.toCharArray())__                client.setNeedClientAuth(true)__                client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__            }_    _            if (ftpClientTrustStoreParameters != null) {_                String type = (ftpClientTrustStoreParameters.containsKey("type"))_                        ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientTrustStoreParameters.get("file")__                String password = (String) ftpClientTrustStoreParameters.get("password")__                String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientTrustStoreParameters.get("algorithm")_                        : TrustManagerFactory.getDefaultAlgorithm()__                        _                KeyStore trustStore = KeyStore.getInstance(type)__                FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    trustStore.load(trustStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(trustStoreFileInputStream, "trustStore", log)__                }_    _                TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__                trustMgrFactory.init(trustStore)__                _                client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__            }_        }__        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,if,ssl,context,parameters,null,sslcontext,context,ssl,context,parameters,create,sslcontext,get,camel,context,client,new,ftpsclient,get,ftps,configuration,is,implicit,context,sslsocket,socket,sslsocket,context,get,socket,factory,create,socket,client,set,enabled,cipher,suites,socket,get,enabled,cipher,suites,client,set,enabled,protocols,socket,get,enabled,protocols,client,set,need,client,auth,socket,get,need,client,auth,client,set,want,client,auth,socket,get,want,client,auth,client,set,enabled,session,creation,socket,get,enable,session,creation,else,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1528177345;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client__        _        if (sslContextParameters != null) {_            SSLContext context = sslContextParameters.createSSLContext(getCamelContext())___            client = new FTPSClient(getFtpsConfiguration().isImplicit(), context)__            _            _            _            _            _            _            _            SSLSocket socket = (SSLSocket)context.getSocketFactory().createSocket()__            client.setEnabledCipherSuites(socket.getEnabledCipherSuites())__            client.setEnabledProtocols(socket.getEnabledProtocols())__            client.setNeedClientAuth(socket.getNeedClientAuth())__            client.setWantClientAuth(socket.getWantClientAuth())__            client.setEnabledSessionCreation(socket.getEnableSessionCreation())__        } else {_            client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                               getFtpsConfiguration().isImplicit())__            _            if (ftpClientKeyStoreParameters != null) {_                String type = (ftpClientKeyStoreParameters.containsKey("type"))_                        ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientKeyStoreParameters.get("file")__                String password = (String) ftpClientKeyStoreParameters.get("password")__                String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientKeyStoreParameters.get("algorithm")_                        : KeyManagerFactory.getDefaultAlgorithm()__                String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__                _                KeyStore keyStore = KeyStore.getInstance(type)__                FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    keyStore.load(keyStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(keyStoreFileInputStream, "keyStore", log)__                }_    _                KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__                keyMgrFactory.init(keyStore, keyPassword.toCharArray())__                client.setNeedClientAuth(true)__                client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__            }_    _            if (ftpClientTrustStoreParameters != null) {_                String type = (ftpClientTrustStoreParameters.containsKey("type"))_                        ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientTrustStoreParameters.get("file")__                String password = (String) ftpClientTrustStoreParameters.get("password")__                String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientTrustStoreParameters.get("algorithm")_                        : TrustManagerFactory.getDefaultAlgorithm()__                        _                KeyStore trustStore = KeyStore.getInstance(type)__                FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    trustStore.load(trustStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(trustStoreFileInputStream, "trustStore", log)__                }_    _                TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__                trustMgrFactory.init(trustStore)__                _                client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__            }_        }__        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,if,ssl,context,parameters,null,sslcontext,context,ssl,context,parameters,create,sslcontext,get,camel,context,client,new,ftpsclient,get,ftps,configuration,is,implicit,context,sslsocket,socket,sslsocket,context,get,socket,factory,create,socket,client,set,enabled,cipher,suites,socket,get,enabled,cipher,suites,client,set,enabled,protocols,socket,get,enabled,protocols,client,set,need,client,auth,socket,get,need,client,auth,client,set,want,client,auth,socket,get,want,client,auth,client,set,enabled,session,creation,socket,get,enable,session,creation,else,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1531637865;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client__        _        if (sslContextParameters != null) {_            SSLContext context = sslContextParameters.createSSLContext(getCamelContext())___            client = new FTPSClient(getFtpsConfiguration().isImplicit(), context)__            _            _            _            _            _            _            _            SSLSocket socket = (SSLSocket)context.getSocketFactory().createSocket()__            client.setEnabledCipherSuites(socket.getEnabledCipherSuites())__            client.setEnabledProtocols(socket.getEnabledProtocols())__            client.setNeedClientAuth(socket.getNeedClientAuth())__            client.setWantClientAuth(socket.getWantClientAuth())__            client.setEnabledSessionCreation(socket.getEnableSessionCreation())__        } else {_            client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                               getFtpsConfiguration().isImplicit())__            _            if (ftpClientKeyStoreParameters != null) {_                String type = (ftpClientKeyStoreParameters.containsKey("type"))_                        ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientKeyStoreParameters.get("file")__                String password = (String) ftpClientKeyStoreParameters.get("password")__                String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientKeyStoreParameters.get("algorithm")_                        : KeyManagerFactory.getDefaultAlgorithm()__                String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__                _                KeyStore keyStore = KeyStore.getInstance(type)__                FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    keyStore.load(keyStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(keyStoreFileInputStream, "keyStore", log)__                }_    _                KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__                keyMgrFactory.init(keyStore, keyPassword.toCharArray())__                client.setNeedClientAuth(true)__                client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__            }_    _            if (ftpClientTrustStoreParameters != null) {_                String type = (ftpClientTrustStoreParameters.containsKey("type"))_                        ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientTrustStoreParameters.get("file")__                String password = (String) ftpClientTrustStoreParameters.get("password")__                String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientTrustStoreParameters.get("algorithm")_                        : TrustManagerFactory.getDefaultAlgorithm()__                        _                KeyStore trustStore = KeyStore.getInstance(type)__                FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    trustStore.load(trustStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(trustStoreFileInputStream, "trustStore", log)__                }_    _                TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__                trustMgrFactory.init(trustStore)__                _                client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__            }_        }__        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,if,ssl,context,parameters,null,sslcontext,context,ssl,context,parameters,create,sslcontext,get,camel,context,client,new,ftpsclient,get,ftps,configuration,is,implicit,context,sslsocket,socket,sslsocket,context,get,socket,factory,create,socket,client,set,enabled,cipher,suites,socket,get,enabled,cipher,suites,client,set,enabled,protocols,socket,get,enabled,protocols,client,set,need,client,auth,socket,get,need,client,auth,client,set,want,client,auth,socket,get,want,client,auth,client,set,enabled,session,creation,socket,get,enable,session,creation,else,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1540108163;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client__        _        if (sslContextParameters != null) {_            SSLContext context = sslContextParameters.createSSLContext(getCamelContext())___            client = new FTPSClient(getFtpsConfiguration().isImplicit(), context)__            _            _            _            _            _            _            _            SSLSocket socket = (SSLSocket)context.getSocketFactory().createSocket()__            client.setEnabledCipherSuites(socket.getEnabledCipherSuites())__            client.setEnabledProtocols(socket.getEnabledProtocols())__            client.setNeedClientAuth(socket.getNeedClientAuth())__            client.setWantClientAuth(socket.getWantClientAuth())__            client.setEnabledSessionCreation(socket.getEnableSessionCreation())__        } else {_            client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                               getFtpsConfiguration().isImplicit())__            _            if (ftpClientKeyStoreParameters != null) {_                String type = (ftpClientKeyStoreParameters.containsKey("type"))_                        ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientKeyStoreParameters.get("file")__                String password = (String) ftpClientKeyStoreParameters.get("password")__                String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientKeyStoreParameters.get("algorithm")_                        : KeyManagerFactory.getDefaultAlgorithm()__                String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__                _                KeyStore keyStore = KeyStore.getInstance(type)__                FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    keyStore.load(keyStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(keyStoreFileInputStream, "keyStore", log)__                }_    _                KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__                keyMgrFactory.init(keyStore, keyPassword.toCharArray())__                client.setNeedClientAuth(true)__                client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__            }_    _            if (ftpClientTrustStoreParameters != null) {_                String type = (ftpClientTrustStoreParameters.containsKey("type"))_                        ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientTrustStoreParameters.get("file")__                String password = (String) ftpClientTrustStoreParameters.get("password")__                String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientTrustStoreParameters.get("algorithm")_                        : TrustManagerFactory.getDefaultAlgorithm()__                        _                KeyStore trustStore = KeyStore.getInstance(type)__                FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    trustStore.load(trustStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(trustStoreFileInputStream, "trustStore", log)__                }_    _                TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__                trustMgrFactory.init(trustStore)__                _                client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__            }_        }__        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,if,ssl,context,parameters,null,sslcontext,context,ssl,context,parameters,create,sslcontext,get,camel,context,client,new,ftpsclient,get,ftps,configuration,is,implicit,context,sslsocket,socket,sslsocket,context,get,socket,factory,create,socket,client,set,enabled,cipher,suites,socket,get,enabled,cipher,suites,client,set,enabled,protocols,socket,get,enabled,protocols,client,set,need,client,auth,socket,get,need,client,auth,client,set,want,client,auth,socket,get,want,client,auth,client,set,enabled,session,creation,socket,get,enable,session,creation,else,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1547480087;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client__        _        if (sslContextParameters != null) {_            SSLContext context = sslContextParameters.createSSLContext(getCamelContext())___            client = new FTPSClient(getFtpsConfiguration().isImplicit(), context)__            _            _            _            _            _            _            _            SSLSocket socket = (SSLSocket)context.getSocketFactory().createSocket()__            client.setEnabledCipherSuites(socket.getEnabledCipherSuites())__            client.setEnabledProtocols(socket.getEnabledProtocols())__            client.setNeedClientAuth(socket.getNeedClientAuth())__            client.setWantClientAuth(socket.getWantClientAuth())__            client.setEnabledSessionCreation(socket.getEnableSessionCreation())__        } else {_            client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                               getFtpsConfiguration().isImplicit())__            _            if (ftpClientKeyStoreParameters != null) {_                String type = (ftpClientKeyStoreParameters.containsKey("type"))_                        ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientKeyStoreParameters.get("file")__                String password = (String) ftpClientKeyStoreParameters.get("password")__                String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientKeyStoreParameters.get("algorithm")_                        : KeyManagerFactory.getDefaultAlgorithm()__                String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__                _                KeyStore keyStore = KeyStore.getInstance(type)__                FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    keyStore.load(keyStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(keyStoreFileInputStream, "keyStore", log)__                }_    _                KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__                keyMgrFactory.init(keyStore, keyPassword.toCharArray())__                client.setNeedClientAuth(true)__                client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__            }_    _            if (ftpClientTrustStoreParameters != null) {_                String type = (ftpClientTrustStoreParameters.containsKey("type"))_                        ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientTrustStoreParameters.get("file")__                String password = (String) ftpClientTrustStoreParameters.get("password")__                String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientTrustStoreParameters.get("algorithm")_                        : TrustManagerFactory.getDefaultAlgorithm()__                        _                KeyStore trustStore = KeyStore.getInstance(type)__                FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    trustStore.load(trustStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(trustStoreFileInputStream, "trustStore", log)__                }_    _                TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__                trustMgrFactory.init(trustStore)__                _                client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__            }_        }__        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,if,ssl,context,parameters,null,sslcontext,context,ssl,context,parameters,create,sslcontext,get,camel,context,client,new,ftpsclient,get,ftps,configuration,is,implicit,context,sslsocket,socket,sslsocket,context,get,socket,factory,create,socket,client,set,enabled,cipher,suites,socket,get,enabled,cipher,suites,client,set,enabled,protocols,socket,get,enabled,protocols,client,set,need,client,auth,socket,get,need,client,auth,client,set,want,client,auth,socket,get,want,client,auth,client,set,enabled,session,creation,socket,get,enable,session,creation,else,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> protected FTPClient createFtpClient() throws Exception;1549357557;Create the FTPS client.;protected FTPClient createFtpClient() throws Exception {_        FTPSClient client__        _        if (sslContextParameters != null) {_            SSLContext context = sslContextParameters.createSSLContext(getCamelContext())___            client = new FTPSClient(getFtpsConfiguration().isImplicit(), context)__            _            _            _            _            _            _            _            SSLSocket socket = (SSLSocket)context.getSocketFactory().createSocket()__            client.setEnabledCipherSuites(socket.getEnabledCipherSuites())__            client.setEnabledProtocols(socket.getEnabledProtocols())__            client.setNeedClientAuth(socket.getNeedClientAuth())__            client.setWantClientAuth(socket.getWantClientAuth())__            client.setEnabledSessionCreation(socket.getEnableSessionCreation())__        } else {_            client = new FTPSClient(getFtpsConfiguration().getSecurityProtocol(),_                                               getFtpsConfiguration().isImplicit())__            _            if (ftpClientKeyStoreParameters != null) {_                String type = (ftpClientKeyStoreParameters.containsKey("type"))_                        ? (String) ftpClientKeyStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientKeyStoreParameters.get("file")__                String password = (String) ftpClientKeyStoreParameters.get("password")__                String algorithm = (ftpClientKeyStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientKeyStoreParameters.get("algorithm")_                        : KeyManagerFactory.getDefaultAlgorithm()__                String keyPassword = (String) ftpClientKeyStoreParameters.get("keyPassword")__                _                KeyStore keyStore = KeyStore.getInstance(type)__                FileInputStream keyStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    keyStore.load(keyStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(keyStoreFileInputStream, "keyStore", log)__                }_    _                KeyManagerFactory keyMgrFactory = KeyManagerFactory.getInstance(algorithm)__                keyMgrFactory.init(keyStore, keyPassword.toCharArray())__                client.setNeedClientAuth(true)__                client.setKeyManager(keyMgrFactory.getKeyManagers()[0])__            }_    _            if (ftpClientTrustStoreParameters != null) {_                String type = (ftpClientTrustStoreParameters.containsKey("type"))_                        ? (String) ftpClientTrustStoreParameters.get("type") : KeyStore.getDefaultType()__                String file = (String) ftpClientTrustStoreParameters.get("file")__                String password = (String) ftpClientTrustStoreParameters.get("password")__                String algorithm = (ftpClientTrustStoreParameters.containsKey("algorithm"))_                        ? (String) ftpClientTrustStoreParameters.get("algorithm")_                        : TrustManagerFactory.getDefaultAlgorithm()__                        _                KeyStore trustStore = KeyStore.getInstance(type)__                FileInputStream trustStoreFileInputStream = new FileInputStream(new File(file))__                try {_                    trustStore.load(trustStoreFileInputStream, password.toCharArray())__                } finally {_                    IOHelper.close(trustStoreFileInputStream, "trustStore", log)__                }_    _                TrustManagerFactory trustMgrFactory = TrustManagerFactory.getInstance(algorithm)__                trustMgrFactory.init(trustStore)__                _                client.setTrustManager(trustMgrFactory.getTrustManagers()[0])__            }_        }__        return client__    };create,the,ftps,client;protected,ftpclient,create,ftp,client,throws,exception,ftpsclient,client,if,ssl,context,parameters,null,sslcontext,context,ssl,context,parameters,create,sslcontext,get,camel,context,client,new,ftpsclient,get,ftps,configuration,is,implicit,context,sslsocket,socket,sslsocket,context,get,socket,factory,create,socket,client,set,enabled,cipher,suites,socket,get,enabled,cipher,suites,client,set,enabled,protocols,socket,get,enabled,protocols,client,set,need,client,auth,socket,get,need,client,auth,client,set,want,client,auth,socket,get,want,client,auth,client,set,enabled,session,creation,socket,get,enable,session,creation,else,client,new,ftpsclient,get,ftps,configuration,get,security,protocol,get,ftps,configuration,is,implicit,if,ftp,client,key,store,parameters,null,string,type,ftp,client,key,store,parameters,contains,key,type,string,ftp,client,key,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,key,store,parameters,get,file,string,password,string,ftp,client,key,store,parameters,get,password,string,algorithm,ftp,client,key,store,parameters,contains,key,algorithm,string,ftp,client,key,store,parameters,get,algorithm,key,manager,factory,get,default,algorithm,string,key,password,string,ftp,client,key,store,parameters,get,key,password,key,store,key,store,key,store,get,instance,type,file,input,stream,key,store,file,input,stream,new,file,input,stream,new,file,file,try,key,store,load,key,store,file,input,stream,password,to,char,array,finally,iohelper,close,key,store,file,input,stream,key,store,log,key,manager,factory,key,mgr,factory,key,manager,factory,get,instance,algorithm,key,mgr,factory,init,key,store,key,password,to,char,array,client,set,need,client,auth,true,client,set,key,manager,key,mgr,factory,get,key,managers,0,if,ftp,client,trust,store,parameters,null,string,type,ftp,client,trust,store,parameters,contains,key,type,string,ftp,client,trust,store,parameters,get,type,key,store,get,default,type,string,file,string,ftp,client,trust,store,parameters,get,file,string,password,string,ftp,client,trust,store,parameters,get,password,string,algorithm,ftp,client,trust,store,parameters,contains,key,algorithm,string,ftp,client,trust,store,parameters,get,algorithm,trust,manager,factory,get,default,algorithm,key,store,trust,store,key,store,get,instance,type,file,input,stream,trust,store,file,input,stream,new,file,input,stream,new,file,file,try,trust,store,load,trust,store,file,input,stream,password,to,char,array,finally,iohelper,close,trust,store,file,input,stream,trust,store,log,trust,manager,factory,trust,mgr,factory,trust,manager,factory,get,instance,algorithm,trust,mgr,factory,init,trust,store,client,set,trust,manager,trust,mgr,factory,get,trust,managers,0,return,client
FtpsEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1322698410;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
FtpsEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1325745470;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
FtpsEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1382962715;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
FtpsEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1388443957;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
FtpsEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1392751344;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
FtpsEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1416561667;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
FtpsEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1417137743;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
FtpsEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1425140025;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
FtpsEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1426750198;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
FtpsEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1427402378;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
FtpsEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1434280086;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
FtpsEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1442837121;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
FtpsEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1442837494;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
FtpsEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1451237125;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
FtpsEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1451925761;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
FtpsEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1452094918;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
FtpsEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1461851621;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
FtpsEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1485947385;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
FtpsEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1515489847;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
FtpsEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1523994338;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
FtpsEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1528177345;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
FtpsEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1531637865;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
FtpsEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1540108163;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
FtpsEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1547480087;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
FtpsEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1549357557;Gets the JSSE configuration that overrides any settings in {@link FtpsEndpoint#ftpClientKeyStoreParameters},_{@link #ftpClientTrustStoreParameters}, and {@link FtpsConfiguration#getSecurityProtocol()}.;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };gets,the,jsse,configuration,that,overrides,any,settings,in,link,ftps,endpoint,ftp,client,key,store,parameters,link,ftp,client,trust,store,parameters,and,link,ftps,configuration,get,security,protocol;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
