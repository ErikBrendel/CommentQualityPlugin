# id;timestamp;commentText;codeText;commentWords;codeWords
OsgiParserFactory -> private FTPFileEntryParser createNTFTPEntryParser(FTPClientConfig config);1442156702;Creates an NT FTP parser: if the config exists, and the system key equals_{@link FTPClientConfig.SYST_NT} then a plain {@link NTFTPEntryParser} is used,_otherwise a composite of {@link NTFTPEntryParser} and {@link UnixFTPEntryParser} is used._@param config the config to use, may be {@code null}_@return the parser;private FTPFileEntryParser createNTFTPEntryParser(FTPClientConfig config) {_        if (config != null && FTPClientConfig.SYST_NT.equals(_                config.getServerSystemKey())) {_            return new NTFTPEntryParser(config)__        } else {_            return new CompositeFileEntryParser(new FTPFileEntryParser[] {_                new NTFTPEntryParser(config),_                new UnixFTPEntryParser(config)_            })__        }_    };creates,an,nt,ftp,parser,if,the,config,exists,and,the,system,key,equals,link,ftpclient,config,then,a,plain,link,ntftpentry,parser,is,used,otherwise,a,composite,of,link,ntftpentry,parser,and,link,unix,ftpentry,parser,is,used,param,config,the,config,to,use,may,be,code,null,return,the,parser;private,ftpfile,entry,parser,create,ntftpentry,parser,ftpclient,config,config,if,config,null,ftpclient,config,equals,config,get,server,system,key,return,new,ntftpentry,parser,config,else,return,new,composite,file,entry,parser,new,ftpfile,entry,parser,new,ntftpentry,parser,config,new,unix,ftpentry,parser,config
OsgiParserFactory -> private FTPFileEntryParser createNTFTPEntryParser(FTPClientConfig config);1451421777;Creates an NT FTP parser: if the config exists, and the system key equals_{@link FTPClientConfig.SYST_NT} then a plain {@link NTFTPEntryParser} is used,_otherwise a composite of {@link NTFTPEntryParser} and {@link UnixFTPEntryParser} is used._@param config the config to use, may be {@code null}_@return the parser;private FTPFileEntryParser createNTFTPEntryParser(FTPClientConfig config) {_        if (config != null && FTPClientConfig.SYST_NT.equals(_                config.getServerSystemKey())) {_            return new NTFTPEntryParser(config)__        } else {_            return new CompositeFileEntryParser(new FTPFileEntryParser[] {_                new NTFTPEntryParser(config),_                new UnixFTPEntryParser(config)_            })__        }_    };creates,an,nt,ftp,parser,if,the,config,exists,and,the,system,key,equals,link,ftpclient,config,then,a,plain,link,ntftpentry,parser,is,used,otherwise,a,composite,of,link,ntftpentry,parser,and,link,unix,ftpentry,parser,is,used,param,config,the,config,to,use,may,be,code,null,return,the,parser;private,ftpfile,entry,parser,create,ntftpentry,parser,ftpclient,config,config,if,config,null,ftpclient,config,equals,config,get,server,system,key,return,new,ntftpentry,parser,config,else,return,new,composite,file,entry,parser,new,ftpfile,entry,parser,new,ntftpentry,parser,config,new,unix,ftpentry,parser,config
OsgiParserFactory -> private FTPFileEntryParser createNTFTPEntryParser(FTPClientConfig config);1461916938;Creates an NT FTP parser: if the config exists, and the system key equals_{@link FTPClientConfig#SYST_NT} then a plain {@link NTFTPEntryParser} is used,_otherwise a composite of {@link NTFTPEntryParser} and {@link UnixFTPEntryParser} is used._@param config the config to use, may be {@code null}_@return the parser;private FTPFileEntryParser createNTFTPEntryParser(FTPClientConfig config) {_        if (config != null && FTPClientConfig.SYST_NT.equals(_                config.getServerSystemKey())) {_            return new NTFTPEntryParser(config)__        } else {_            return new CompositeFileEntryParser(new FTPFileEntryParser[] {_                new NTFTPEntryParser(config),_                new UnixFTPEntryParser(config)_            })__        }_    };creates,an,nt,ftp,parser,if,the,config,exists,and,the,system,key,equals,link,ftpclient,config,then,a,plain,link,ntftpentry,parser,is,used,otherwise,a,composite,of,link,ntftpentry,parser,and,link,unix,ftpentry,parser,is,used,param,config,the,config,to,use,may,be,code,null,return,the,parser;private,ftpfile,entry,parser,create,ntftpentry,parser,ftpclient,config,config,if,config,null,ftpclient,config,equals,config,get,server,system,key,return,new,ntftpentry,parser,config,else,return,new,composite,file,entry,parser,new,ftpfile,entry,parser,new,ntftpentry,parser,config,new,unix,ftpentry,parser,config
OsgiParserFactory -> private FTPFileEntryParser createNTFTPEntryParser(FTPClientConfig config);1467235553;Creates an NT FTP parser: if the config exists, and the system key equals_{@link FTPClientConfig#SYST_NT} then a plain {@link NTFTPEntryParser} is used,_otherwise a composite of {@link NTFTPEntryParser} and {@link UnixFTPEntryParser} is used._@param config the config to use, may be {@code null}_@return the parser;private FTPFileEntryParser createNTFTPEntryParser(FTPClientConfig config) {_        if (config != null && FTPClientConfig.SYST_NT.equals(_                config.getServerSystemKey())) {_            return new NTFTPEntryParser(config)__        } else {_            return new CompositeFileEntryParser(new FTPFileEntryParser[] {_                new NTFTPEntryParser(config),_                new UnixFTPEntryParser(config)_            })__        }_    };creates,an,nt,ftp,parser,if,the,config,exists,and,the,system,key,equals,link,ftpclient,config,then,a,plain,link,ntftpentry,parser,is,used,otherwise,a,composite,of,link,ntftpentry,parser,and,link,unix,ftpentry,parser,is,used,param,config,the,config,to,use,may,be,code,null,return,the,parser;private,ftpfile,entry,parser,create,ntftpentry,parser,ftpclient,config,config,if,config,null,ftpclient,config,equals,config,get,server,system,key,return,new,ntftpentry,parser,config,else,return,new,composite,file,entry,parser,new,ftpfile,entry,parser,new,ntftpentry,parser,config,new,unix,ftpentry,parser,config
OsgiParserFactory -> private FTPFileEntryParser createNTFTPEntryParser(FTPClientConfig config);1480882601;Creates an NT FTP parser: if the config exists, and the system key equals_{@link FTPClientConfig#SYST_NT} then a plain {@link NTFTPEntryParser} is used,_otherwise a composite of {@link NTFTPEntryParser} and {@link UnixFTPEntryParser} is used._@param config the config to use, may be {@code null}_@return the parser;private FTPFileEntryParser createNTFTPEntryParser(FTPClientConfig config) {_        if (config != null && FTPClientConfig.SYST_NT.equals(_                config.getServerSystemKey())) {_            return new NTFTPEntryParser(config)__        } else {_            return new CompositeFileEntryParser(new FTPFileEntryParser[] {_                new NTFTPEntryParser(config),_                new UnixFTPEntryParser(config)_            })__        }_    };creates,an,nt,ftp,parser,if,the,config,exists,and,the,system,key,equals,link,ftpclient,config,then,a,plain,link,ntftpentry,parser,is,used,otherwise,a,composite,of,link,ntftpentry,parser,and,link,unix,ftpentry,parser,is,used,param,config,the,config,to,use,may,be,code,null,return,the,parser;private,ftpfile,entry,parser,create,ntftpentry,parser,ftpclient,config,config,if,config,null,ftpclient,config,equals,config,get,server,system,key,return,new,ntftpentry,parser,config,else,return,new,composite,file,entry,parser,new,ftpfile,entry,parser,new,ntftpentry,parser,config,new,unix,ftpentry,parser,config
OsgiParserFactory -> private FTPFileEntryParser createNTFTPEntryParser(FTPClientConfig config);1500196040;Creates an NT FTP parser: if the config exists, and the system key equals_{@link FTPClientConfig#SYST_NT} then a plain {@link NTFTPEntryParser} is used,_otherwise a composite of {@link NTFTPEntryParser} and {@link UnixFTPEntryParser} is used._@param config the config to use, may be {@code null}_@return the parser;private FTPFileEntryParser createNTFTPEntryParser(FTPClientConfig config) {_        if (config != null && FTPClientConfig.SYST_NT.equals(_                config.getServerSystemKey())) {_            return new NTFTPEntryParser(config)__        } else {_            return new CompositeFileEntryParser(new FTPFileEntryParser[] {_                new NTFTPEntryParser(config),_                new UnixFTPEntryParser(config)_            })__        }_    };creates,an,nt,ftp,parser,if,the,config,exists,and,the,system,key,equals,link,ftpclient,config,then,a,plain,link,ntftpentry,parser,is,used,otherwise,a,composite,of,link,ntftpentry,parser,and,link,unix,ftpentry,parser,is,used,param,config,the,config,to,use,may,be,code,null,return,the,parser;private,ftpfile,entry,parser,create,ntftpentry,parser,ftpclient,config,config,if,config,null,ftpclient,config,equals,config,get,server,system,key,return,new,ntftpentry,parser,config,else,return,new,composite,file,entry,parser,new,ftpfile,entry,parser,new,ntftpentry,parser,config,new,unix,ftpentry,parser,config
OsgiParserFactory -> private FTPFileEntryParser createNTFTPEntryParser(FTPClientConfig config);1537204343;Creates an NT FTP parser: if the config exists, and the system key equals_{@link FTPClientConfig#SYST_NT} then a plain {@link NTFTPEntryParser} is used,_otherwise a composite of {@link NTFTPEntryParser} and {@link UnixFTPEntryParser} is used._@param config the config to use, may be {@code null}_@return the parser;private FTPFileEntryParser createNTFTPEntryParser(FTPClientConfig config) {_        if (config != null && FTPClientConfig.SYST_NT.equals(_                config.getServerSystemKey())) {_            return new NTFTPEntryParser(config)__        } else {_            return new CompositeFileEntryParser(new FTPFileEntryParser[] {_                new NTFTPEntryParser(config),_                new UnixFTPEntryParser(config)_            })__        }_    };creates,an,nt,ftp,parser,if,the,config,exists,and,the,system,key,equals,link,ftpclient,config,then,a,plain,link,ntftpentry,parser,is,used,otherwise,a,composite,of,link,ntftpentry,parser,and,link,unix,ftpentry,parser,is,used,param,config,the,config,to,use,may,be,code,null,return,the,parser;private,ftpfile,entry,parser,create,ntftpentry,parser,ftpclient,config,config,if,config,null,ftpclient,config,equals,config,get,server,system,key,return,new,ntftpentry,parser,config,else,return,new,composite,file,entry,parser,new,ftpfile,entry,parser,new,ntftpentry,parser,config,new,unix,ftpentry,parser,config
OsgiParserFactory -> private FTPFileEntryParser createOS400FTPEntryParser(FTPClientConfig config);1442156702;Creates an OS400 FTP parser: if the config exists, and the system key equals_{@link FTPClientConfig.SYST_OS400} then a plain {@link OS400FTPEntryParser} is used,_otherwise a composite of {@link OS400FTPEntryParser} and {@link UnixFTPEntryParser} is used._@param config the config to use, may be {@code null}_@return the parser;private FTPFileEntryParser createOS400FTPEntryParser(FTPClientConfig config)_    {_        if (config != null_            && FTPClientConfig.SYST_OS400.equals(config.getServerSystemKey())) {_            return new OS400FTPEntryParser(config)__        } else {_            return new CompositeFileEntryParser(new FTPFileEntryParser[] {_                new OS400FTPEntryParser(config),_                new UnixFTPEntryParser(config)_            })__        }_    };creates,an,os400,ftp,parser,if,the,config,exists,and,the,system,key,equals,link,ftpclient,config,then,a,plain,link,os400ftpentry,parser,is,used,otherwise,a,composite,of,link,os400ftpentry,parser,and,link,unix,ftpentry,parser,is,used,param,config,the,config,to,use,may,be,code,null,return,the,parser;private,ftpfile,entry,parser,create,os400ftpentry,parser,ftpclient,config,config,if,config,null,ftpclient,config,equals,config,get,server,system,key,return,new,os400ftpentry,parser,config,else,return,new,composite,file,entry,parser,new,ftpfile,entry,parser,new,os400ftpentry,parser,config,new,unix,ftpentry,parser,config
OsgiParserFactory -> private FTPFileEntryParser createOS400FTPEntryParser(FTPClientConfig config);1451421777;Creates an OS400 FTP parser: if the config exists, and the system key equals_{@link FTPClientConfig.SYST_OS400} then a plain {@link OS400FTPEntryParser} is used,_otherwise a composite of {@link OS400FTPEntryParser} and {@link UnixFTPEntryParser} is used._@param config the config to use, may be {@code null}_@return the parser;private FTPFileEntryParser createOS400FTPEntryParser(FTPClientConfig config)_    {_        if (config != null_            && FTPClientConfig.SYST_OS400.equals(config.getServerSystemKey())) {_            return new OS400FTPEntryParser(config)__        } else {_            return new CompositeFileEntryParser(new FTPFileEntryParser[] {_                new OS400FTPEntryParser(config),_                new UnixFTPEntryParser(config)_            })__        }_    };creates,an,os400,ftp,parser,if,the,config,exists,and,the,system,key,equals,link,ftpclient,config,then,a,plain,link,os400ftpentry,parser,is,used,otherwise,a,composite,of,link,os400ftpentry,parser,and,link,unix,ftpentry,parser,is,used,param,config,the,config,to,use,may,be,code,null,return,the,parser;private,ftpfile,entry,parser,create,os400ftpentry,parser,ftpclient,config,config,if,config,null,ftpclient,config,equals,config,get,server,system,key,return,new,os400ftpentry,parser,config,else,return,new,composite,file,entry,parser,new,ftpfile,entry,parser,new,os400ftpentry,parser,config,new,unix,ftpentry,parser,config
OsgiParserFactory -> private FTPFileEntryParser createOS400FTPEntryParser(FTPClientConfig config);1461916938;Creates an OS400 FTP parser: if the config exists, and the system key equals_{@link FTPClientConfig#SYST_OS400} then a plain {@link OS400FTPEntryParser} is used,_otherwise a composite of {@link OS400FTPEntryParser} and {@link UnixFTPEntryParser} is used._@param config the config to use, may be {@code null}_@return the parser;private FTPFileEntryParser createOS400FTPEntryParser(FTPClientConfig config) {_        if (config != null_            && FTPClientConfig.SYST_OS400.equals(config.getServerSystemKey())) {_            return new OS400FTPEntryParser(config)__        } else {_            return new CompositeFileEntryParser(new FTPFileEntryParser[] {_                new OS400FTPEntryParser(config),_                new UnixFTPEntryParser(config)_            })__        }_    };creates,an,os400,ftp,parser,if,the,config,exists,and,the,system,key,equals,link,ftpclient,config,then,a,plain,link,os400ftpentry,parser,is,used,otherwise,a,composite,of,link,os400ftpentry,parser,and,link,unix,ftpentry,parser,is,used,param,config,the,config,to,use,may,be,code,null,return,the,parser;private,ftpfile,entry,parser,create,os400ftpentry,parser,ftpclient,config,config,if,config,null,ftpclient,config,equals,config,get,server,system,key,return,new,os400ftpentry,parser,config,else,return,new,composite,file,entry,parser,new,ftpfile,entry,parser,new,os400ftpentry,parser,config,new,unix,ftpentry,parser,config
OsgiParserFactory -> private FTPFileEntryParser createOS400FTPEntryParser(FTPClientConfig config);1467235553;Creates an OS400 FTP parser: if the config exists, and the system key equals_{@link FTPClientConfig#SYST_OS400} then a plain {@link OS400FTPEntryParser} is used,_otherwise a composite of {@link OS400FTPEntryParser} and {@link UnixFTPEntryParser} is used._@param config the config to use, may be {@code null}_@return the parser;private FTPFileEntryParser createOS400FTPEntryParser(FTPClientConfig config) {_        if (config != null_            && FTPClientConfig.SYST_OS400.equals(config.getServerSystemKey())) {_            return new OS400FTPEntryParser(config)__        } else {_            return new CompositeFileEntryParser(new FTPFileEntryParser[] {_                new OS400FTPEntryParser(config),_                new UnixFTPEntryParser(config)_            })__        }_    };creates,an,os400,ftp,parser,if,the,config,exists,and,the,system,key,equals,link,ftpclient,config,then,a,plain,link,os400ftpentry,parser,is,used,otherwise,a,composite,of,link,os400ftpentry,parser,and,link,unix,ftpentry,parser,is,used,param,config,the,config,to,use,may,be,code,null,return,the,parser;private,ftpfile,entry,parser,create,os400ftpentry,parser,ftpclient,config,config,if,config,null,ftpclient,config,equals,config,get,server,system,key,return,new,os400ftpentry,parser,config,else,return,new,composite,file,entry,parser,new,ftpfile,entry,parser,new,os400ftpentry,parser,config,new,unix,ftpentry,parser,config
OsgiParserFactory -> private FTPFileEntryParser createOS400FTPEntryParser(FTPClientConfig config);1480882601;Creates an OS400 FTP parser: if the config exists, and the system key equals_{@link FTPClientConfig#SYST_OS400} then a plain {@link OS400FTPEntryParser} is used,_otherwise a composite of {@link OS400FTPEntryParser} and {@link UnixFTPEntryParser} is used._@param config the config to use, may be {@code null}_@return the parser;private FTPFileEntryParser createOS400FTPEntryParser(FTPClientConfig config) {_        if (config != null_            && FTPClientConfig.SYST_OS400.equals(config.getServerSystemKey())) {_            return new OS400FTPEntryParser(config)__        } else {_            return new CompositeFileEntryParser(new FTPFileEntryParser[] {_                new OS400FTPEntryParser(config),_                new UnixFTPEntryParser(config)_            })__        }_    };creates,an,os400,ftp,parser,if,the,config,exists,and,the,system,key,equals,link,ftpclient,config,then,a,plain,link,os400ftpentry,parser,is,used,otherwise,a,composite,of,link,os400ftpentry,parser,and,link,unix,ftpentry,parser,is,used,param,config,the,config,to,use,may,be,code,null,return,the,parser;private,ftpfile,entry,parser,create,os400ftpentry,parser,ftpclient,config,config,if,config,null,ftpclient,config,equals,config,get,server,system,key,return,new,os400ftpentry,parser,config,else,return,new,composite,file,entry,parser,new,ftpfile,entry,parser,new,os400ftpentry,parser,config,new,unix,ftpentry,parser,config
OsgiParserFactory -> private FTPFileEntryParser createOS400FTPEntryParser(FTPClientConfig config);1500196040;Creates an OS400 FTP parser: if the config exists, and the system key equals_{@link FTPClientConfig#SYST_OS400} then a plain {@link OS400FTPEntryParser} is used,_otherwise a composite of {@link OS400FTPEntryParser} and {@link UnixFTPEntryParser} is used._@param config the config to use, may be {@code null}_@return the parser;private FTPFileEntryParser createOS400FTPEntryParser(FTPClientConfig config) {_        if (config != null_            && FTPClientConfig.SYST_OS400.equals(config.getServerSystemKey())) {_            return new OS400FTPEntryParser(config)__        } else {_            return new CompositeFileEntryParser(new FTPFileEntryParser[] {_                new OS400FTPEntryParser(config),_                new UnixFTPEntryParser(config)_            })__        }_    };creates,an,os400,ftp,parser,if,the,config,exists,and,the,system,key,equals,link,ftpclient,config,then,a,plain,link,os400ftpentry,parser,is,used,otherwise,a,composite,of,link,os400ftpentry,parser,and,link,unix,ftpentry,parser,is,used,param,config,the,config,to,use,may,be,code,null,return,the,parser;private,ftpfile,entry,parser,create,os400ftpentry,parser,ftpclient,config,config,if,config,null,ftpclient,config,equals,config,get,server,system,key,return,new,os400ftpentry,parser,config,else,return,new,composite,file,entry,parser,new,ftpfile,entry,parser,new,os400ftpentry,parser,config,new,unix,ftpentry,parser,config
OsgiParserFactory -> private FTPFileEntryParser createOS400FTPEntryParser(FTPClientConfig config);1537204343;Creates an OS400 FTP parser: if the config exists, and the system key equals_{@link FTPClientConfig#SYST_OS400} then a plain {@link OS400FTPEntryParser} is used,_otherwise a composite of {@link OS400FTPEntryParser} and {@link UnixFTPEntryParser} is used._@param config the config to use, may be {@code null}_@return the parser;private FTPFileEntryParser createOS400FTPEntryParser(FTPClientConfig config) {_        if (config != null_            && FTPClientConfig.SYST_OS400.equals(config.getServerSystemKey())) {_            return new OS400FTPEntryParser(config)__        } else {_            return new CompositeFileEntryParser(new FTPFileEntryParser[] {_                new OS400FTPEntryParser(config),_                new UnixFTPEntryParser(config)_            })__        }_    };creates,an,os400,ftp,parser,if,the,config,exists,and,the,system,key,equals,link,ftpclient,config,then,a,plain,link,os400ftpentry,parser,is,used,otherwise,a,composite,of,link,os400ftpentry,parser,and,link,unix,ftpentry,parser,is,used,param,config,the,config,to,use,may,be,code,null,return,the,parser;private,ftpfile,entry,parser,create,os400ftpentry,parser,ftpclient,config,config,if,config,null,ftpclient,config,equals,config,get,server,system,key,return,new,os400ftpentry,parser,config,else,return,new,composite,file,entry,parser,new,ftpfile,entry,parser,new,os400ftpentry,parser,config,new,unix,ftpentry,parser,config
OsgiParserFactory -> public void setClassResolver(ClassResolver ocr);1442156702;setClassResolver sets a class resolver which can be used instead of_Class.forName for class resolution._@param ocr Class Resolver;public void setClassResolver(ClassResolver ocr) {_        ocr = ocr__    };set,class,resolver,sets,a,class,resolver,which,can,be,used,instead,of,class,for,name,for,class,resolution,param,ocr,class,resolver;public,void,set,class,resolver,class,resolver,ocr,ocr,ocr
OsgiParserFactory -> public void setClassResolver(ClassResolver ocr);1451421777;setClassResolver sets a class resolver which can be used instead of_Class.forName for class resolution._@param ocr Class Resolver;public void setClassResolver(ClassResolver ocr) {_        ocr = ocr__    };set,class,resolver,sets,a,class,resolver,which,can,be,used,instead,of,class,for,name,for,class,resolution,param,ocr,class,resolver;public,void,set,class,resolver,class,resolver,ocr,ocr,ocr
OsgiParserFactory -> public void setClassResolver(ClassResolver ocr);1461916938;setClassResolver sets a class resolver which can be used instead of_Class.forName for class resolution._@param ocr Class Resolver;public void setClassResolver(ClassResolver ocr) {_        ocr = ocr__    };set,class,resolver,sets,a,class,resolver,which,can,be,used,instead,of,class,for,name,for,class,resolution,param,ocr,class,resolver;public,void,set,class,resolver,class,resolver,ocr,ocr,ocr
OsgiParserFactory -> public void setClassResolver(ClassResolver ocr);1467235553;setClassResolver sets a class resolver which can be used instead of_Class.forName for class resolution._@param ocr Class Resolver;public void setClassResolver(ClassResolver ocr) {_        ocr = ocr__    };set,class,resolver,sets,a,class,resolver,which,can,be,used,instead,of,class,for,name,for,class,resolution,param,ocr,class,resolver;public,void,set,class,resolver,class,resolver,ocr,ocr,ocr
OsgiParserFactory -> public void setClassResolver(ClassResolver ocr);1480882601;setClassResolver sets a class resolver which can be used instead of_Class.forName for class resolution._@param ocr Class Resolver;public void setClassResolver(ClassResolver ocr) {_        ocr = ocr__    };set,class,resolver,sets,a,class,resolver,which,can,be,used,instead,of,class,for,name,for,class,resolution,param,ocr,class,resolver;public,void,set,class,resolver,class,resolver,ocr,ocr,ocr
OsgiParserFactory -> public void setClassResolver(ClassResolver ocr);1500196040;setClassResolver sets a class resolver which can be used instead of_Class.forName for class resolution._@param ocr Class Resolver;public void setClassResolver(ClassResolver ocr) {_        this.ocr = ocr__    };set,class,resolver,sets,a,class,resolver,which,can,be,used,instead,of,class,for,name,for,class,resolution,param,ocr,class,resolver;public,void,set,class,resolver,class,resolver,ocr,this,ocr,ocr
OsgiParserFactory -> public void setClassResolver(ClassResolver ocr);1537204343;setClassResolver sets a class resolver which can be used instead of_Class.forName for class resolution._@param ocr Class Resolver;public void setClassResolver(ClassResolver ocr) {_        this.ocr = ocr__    };set,class,resolver,sets,a,class,resolver,which,can,be,used,instead,of,class,for,name,for,class,resolution,param,ocr,class,resolver;public,void,set,class,resolver,class,resolver,ocr,this,ocr,ocr
