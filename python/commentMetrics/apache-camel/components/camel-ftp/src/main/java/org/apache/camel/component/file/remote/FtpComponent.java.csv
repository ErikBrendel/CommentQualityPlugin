# id;timestamp;commentText;codeText;commentWords;codeWords
FtpComponent -> protected void extractAndSetFtpClientConfigParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer);1260208009;Extract additional ftp client configuration options from the parameters map (parameters starting with_'ftpClientConfig.'). To remember these parameters, we set them in the endpoint and we can use them_when creating a client.;protected void extractAndSetFtpClientConfigParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClientConfig.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClientConfig.")__            answer.setFtpClientConfigParameters(param)__        }_    };extract,additional,ftp,client,configuration,options,from,the,parameters,map,parameters,starting,with,ftp,client,config,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,config,parameters,map,string,object,parameters,ftp,endpoint,ftpfile,answer,if,introspection,support,has,properties,parameters,ftp,client,config,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,config,answer,set,ftp,client,config,parameters,param
FtpComponent -> protected void extractAndSetFtpClientConfigParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer);1275457079;Extract additional ftp client configuration options from the parameters map (parameters starting with_'ftpClientConfig.'). To remember these parameters, we set them in the endpoint and we can use them_when creating a client.;protected void extractAndSetFtpClientConfigParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClientConfig.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClientConfig.")__            answer.setFtpClientConfigParameters(param)__        }_    };extract,additional,ftp,client,configuration,options,from,the,parameters,map,parameters,starting,with,ftp,client,config,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,config,parameters,map,string,object,parameters,ftp,endpoint,ftpfile,answer,if,introspection,support,has,properties,parameters,ftp,client,config,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,config,answer,set,ftp,client,config,parameters,param
FtpComponent -> protected void extractAndSetFtpClientConfigParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer);1325501273;Extract additional ftp client configuration options from the parameters map (parameters starting with_'ftpClientConfig.'). To remember these parameters, we set them in the endpoint and we can use them_when creating a client.;protected void extractAndSetFtpClientConfigParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClientConfig.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClientConfig.")__            answer.setFtpClientConfigParameters(param)__        }_    };extract,additional,ftp,client,configuration,options,from,the,parameters,map,parameters,starting,with,ftp,client,config,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,config,parameters,map,string,object,parameters,ftp,endpoint,ftpfile,answer,if,introspection,support,has,properties,parameters,ftp,client,config,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,config,answer,set,ftp,client,config,parameters,param
FtpComponent -> protected void extractAndSetFtpClientConfigParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer);1392751344;Extract additional ftp client configuration options from the parameters map (parameters starting with_'ftpClientConfig.'). To remember these parameters, we set them in the endpoint and we can use them_when creating a client.;protected void extractAndSetFtpClientConfigParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClientConfig.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClientConfig.")__            answer.setFtpClientConfigParameters(param)__        }_    };extract,additional,ftp,client,configuration,options,from,the,parameters,map,parameters,starting,with,ftp,client,config,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,config,parameters,map,string,object,parameters,ftp,endpoint,ftpfile,answer,if,introspection,support,has,properties,parameters,ftp,client,config,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,config,answer,set,ftp,client,config,parameters,param
FtpComponent -> protected void extractAndSetFtpClientConfigParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer);1405374721;Extract additional ftp client configuration options from the parameters map (parameters starting with_'ftpClientConfig.'). To remember these parameters, we set them in the endpoint and we can use them_when creating a client.;protected void extractAndSetFtpClientConfigParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClientConfig.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClientConfig.")__            answer.setFtpClientConfigParameters(param)__        }_    };extract,additional,ftp,client,configuration,options,from,the,parameters,map,parameters,starting,with,ftp,client,config,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,config,parameters,map,string,object,parameters,ftp,endpoint,ftpfile,answer,if,introspection,support,has,properties,parameters,ftp,client,config,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,config,answer,set,ftp,client,config,parameters,param
FtpComponent -> protected void extractAndSetFtpClientConfigParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer);1424952635;Extract additional ftp client configuration options from the parameters map (parameters starting with_'ftpClientConfig.'). To remember these parameters, we set them in the endpoint and we can use them_when creating a client.;protected void extractAndSetFtpClientConfigParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClientConfig.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClientConfig.")__            answer.setFtpClientConfigParameters(param)__        }_    };extract,additional,ftp,client,configuration,options,from,the,parameters,map,parameters,starting,with,ftp,client,config,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,config,parameters,map,string,object,parameters,ftp,endpoint,ftpfile,answer,if,introspection,support,has,properties,parameters,ftp,client,config,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,config,answer,set,ftp,client,config,parameters,param
FtpComponent -> protected void extractAndSetFtpClientConfigParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer);1425280684;Extract additional ftp client configuration options from the parameters map (parameters starting with_'ftpClientConfig.'). To remember these parameters, we set them in the endpoint and we can use them_when creating a client.;protected void extractAndSetFtpClientConfigParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClientConfig.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClientConfig.")__            answer.setFtpClientConfigParameters(param)__        }_    };extract,additional,ftp,client,configuration,options,from,the,parameters,map,parameters,starting,with,ftp,client,config,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,config,parameters,map,string,object,parameters,ftp,endpoint,ftpfile,answer,if,introspection,support,has,properties,parameters,ftp,client,config,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,config,answer,set,ftp,client,config,parameters,param
FtpComponent -> protected void extractAndSetFtpClientConfigParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer);1433756335;Extract additional ftp client configuration options from the parameters map (parameters starting with_'ftpClientConfig.'). To remember these parameters, we set them in the endpoint and we can use them_when creating a client.;protected void extractAndSetFtpClientConfigParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClientConfig.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClientConfig.")__            answer.setFtpClientConfigParameters(param)__        }_    };extract,additional,ftp,client,configuration,options,from,the,parameters,map,parameters,starting,with,ftp,client,config,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,config,parameters,map,string,object,parameters,ftp,endpoint,ftpfile,answer,if,introspection,support,has,properties,parameters,ftp,client,config,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,config,answer,set,ftp,client,config,parameters,param
FtpComponent -> protected void extractAndSetFtpClientConfigParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer);1523994338;Extract additional ftp client configuration options from the parameters map (parameters starting with_'ftpClientConfig.'). To remember these parameters, we set them in the endpoint and we can use them_when creating a client.;protected void extractAndSetFtpClientConfigParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClientConfig.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClientConfig.")__            answer.setFtpClientConfigParameters(param)__        }_    };extract,additional,ftp,client,configuration,options,from,the,parameters,map,parameters,starting,with,ftp,client,config,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,config,parameters,map,string,object,parameters,ftp,endpoint,ftpfile,answer,if,introspection,support,has,properties,parameters,ftp,client,config,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,config,answer,set,ftp,client,config,parameters,param
FtpComponent -> protected void extractAndSetFtpClientConfigParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer);1534279476;Extract additional ftp client configuration options from the parameters map (parameters starting with_'ftpClientConfig.'). To remember these parameters, we set them in the endpoint and we can use them_when creating a client.;protected void extractAndSetFtpClientConfigParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClientConfig.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClientConfig.")__            answer.setFtpClientConfigParameters(param)__        }_    };extract,additional,ftp,client,configuration,options,from,the,parameters,map,parameters,starting,with,ftp,client,config,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,config,parameters,map,string,object,parameters,ftp,endpoint,ftpfile,answer,if,introspection,support,has,properties,parameters,ftp,client,config,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,config,answer,set,ftp,client,config,parameters,param
FtpComponent -> protected void extractAndSetFtpClientConfigParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer);1534322264;Extract additional ftp client configuration options from the parameters map (parameters starting with_'ftpClientConfig.'). To remember these parameters, we set them in the endpoint and we can use them_when creating a client.;protected void extractAndSetFtpClientConfigParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClientConfig.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClientConfig.")__            answer.setFtpClientConfigParameters(param)__        }_    };extract,additional,ftp,client,configuration,options,from,the,parameters,map,parameters,starting,with,ftp,client,config,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,config,parameters,map,string,object,parameters,ftp,endpoint,ftpfile,answer,if,introspection,support,has,properties,parameters,ftp,client,config,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,config,answer,set,ftp,client,config,parameters,param
FtpComponent -> protected void extractAndSetFtpClientConfigParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer);1540108158;Extract additional ftp client configuration options from the parameters map (parameters starting with_'ftpClientConfig.'). To remember these parameters, we set them in the endpoint and we can use them_when creating a client.;protected void extractAndSetFtpClientConfigParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClientConfig.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClientConfig.")__            answer.setFtpClientConfigParameters(param)__        }_    };extract,additional,ftp,client,configuration,options,from,the,parameters,map,parameters,starting,with,ftp,client,config,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,config,parameters,map,string,object,parameters,ftp,endpoint,ftpfile,answer,if,introspection,support,has,properties,parameters,ftp,client,config,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,config,answer,set,ftp,client,config,parameters,param
FtpComponent -> protected void extractAndSetFtpClientConfigParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer);1540108163;Extract additional ftp client configuration options from the parameters map (parameters starting with_'ftpClientConfig.'). To remember these parameters, we set them in the endpoint and we can use them_when creating a client.;protected void extractAndSetFtpClientConfigParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClientConfig.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClientConfig.")__            answer.setFtpClientConfigParameters(param)__        }_    };extract,additional,ftp,client,configuration,options,from,the,parameters,map,parameters,starting,with,ftp,client,config,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,config,parameters,map,string,object,parameters,ftp,endpoint,ftpfile,answer,if,introspection,support,has,properties,parameters,ftp,client,config,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,config,answer,set,ftp,client,config,parameters,param
FtpComponent -> protected void extractAndSetFtpClientConfigParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer);1547241305;Extract additional ftp client configuration options from the parameters map (parameters starting with_'ftpClientConfig.'). To remember these parameters, we set them in the endpoint and we can use them_when creating a client.;protected void extractAndSetFtpClientConfigParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClientConfig.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClientConfig.")__            answer.setFtpClientConfigParameters(param)__        }_    };extract,additional,ftp,client,configuration,options,from,the,parameters,map,parameters,starting,with,ftp,client,config,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,config,parameters,map,string,object,parameters,ftp,endpoint,ftpfile,answer,if,introspection,support,has,properties,parameters,ftp,client,config,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,config,answer,set,ftp,client,config,parameters,param
FtpComponent -> protected String getBaseUri(String uri);1260208009;get the base uri part before the options as they can be non URI valid such as the expression using $ chars_and the URI constructor will regard $ as an illegal character and we dont want to enforce end users to_to escape the $ for the expression (file language)__@param uri_@return baseUri;protected String getBaseUri(String uri) {_        String baseUri = uri__        if (uri.indexOf("?") != -1) {_            baseUri = uri.substring(0, uri.indexOf("?"))__        }_        return baseUri__    };get,the,base,uri,part,before,the,options,as,they,can,be,non,uri,valid,such,as,the,expression,using,chars,and,the,uri,constructor,will,regard,as,an,illegal,character,and,we,dont,want,to,enforce,end,users,to,to,escape,the,for,the,expression,file,language,param,uri,return,base,uri;protected,string,get,base,uri,string,uri,string,base,uri,uri,if,uri,index,of,1,base,uri,uri,substring,0,uri,index,of,return,base,uri
FtpComponent -> protected String getBaseUri(String uri);1275457079;get the base uri part before the options as they can be non URI valid such as the expression using $ chars_and the URI constructor will regard $ as an illegal character and we dont want to enforce end users to_to escape the $ for the expression (file language);protected String getBaseUri(String uri) {_        String baseUri = uri__        if (uri.indexOf("?") != -1) {_            baseUri = uri.substring(0, uri.indexOf("?"))__        }_        return baseUri__    };get,the,base,uri,part,before,the,options,as,they,can,be,non,uri,valid,such,as,the,expression,using,chars,and,the,uri,constructor,will,regard,as,an,illegal,character,and,we,dont,want,to,enforce,end,users,to,to,escape,the,for,the,expression,file,language;protected,string,get,base,uri,string,uri,string,base,uri,uri,if,uri,index,of,1,base,uri,uri,substring,0,uri,index,of,return,base,uri
FtpComponent -> protected String getBaseUri(String uri);1325501273;Get the base uri part before the options as they can be non URI valid such as the expression using $ chars_and the URI constructor will regard $ as an illegal character and we don't want to enforce end users to_to escape the $ for the expression (file language);protected String getBaseUri(String uri) {_        String baseUri = uri__        if (uri.indexOf("?") != -1) {_            baseUri = uri.substring(0, uri.indexOf("?"))__        }_        return baseUri__    };get,the,base,uri,part,before,the,options,as,they,can,be,non,uri,valid,such,as,the,expression,using,chars,and,the,uri,constructor,will,regard,as,an,illegal,character,and,we,don,t,want,to,enforce,end,users,to,to,escape,the,for,the,expression,file,language;protected,string,get,base,uri,string,uri,string,base,uri,uri,if,uri,index,of,1,base,uri,uri,substring,0,uri,index,of,return,base,uri
FtpComponent -> protected String getBaseUri(String uri);1392751344;Get the base uri part before the options as they can be non URI valid such as the expression using $ chars_and the URI constructor will regard $ as an illegal character and we don't want to enforce end users to_to escape the $ for the expression (file language);protected String getBaseUri(String uri) {_        String baseUri = uri__        if (uri.indexOf("?") != -1) {_            baseUri = uri.substring(0, uri.indexOf("?"))__        }_        return baseUri__    };get,the,base,uri,part,before,the,options,as,they,can,be,non,uri,valid,such,as,the,expression,using,chars,and,the,uri,constructor,will,regard,as,an,illegal,character,and,we,don,t,want,to,enforce,end,users,to,to,escape,the,for,the,expression,file,language;protected,string,get,base,uri,string,uri,string,base,uri,uri,if,uri,index,of,1,base,uri,uri,substring,0,uri,index,of,return,base,uri
FtpComponent -> protected String getBaseUri(String uri);1405374721;Get the base uri part before the options as they can be non URI valid such as the expression using $ chars_and the URI constructor will regard $ as an illegal character and we don't want to enforce end users to_to escape the $ for the expression (file language);protected String getBaseUri(String uri) {_        String baseUri = uri__        if (uri.indexOf("?") != -1) {_            baseUri = uri.substring(0, uri.indexOf("?"))__        }_        return baseUri__    };get,the,base,uri,part,before,the,options,as,they,can,be,non,uri,valid,such,as,the,expression,using,chars,and,the,uri,constructor,will,regard,as,an,illegal,character,and,we,don,t,want,to,enforce,end,users,to,to,escape,the,for,the,expression,file,language;protected,string,get,base,uri,string,uri,string,base,uri,uri,if,uri,index,of,1,base,uri,uri,substring,0,uri,index,of,return,base,uri
FtpComponent -> protected String getBaseUri(String uri);1424952635;Get the base uri part before the options as they can be non URI valid such as the expression using $ chars_and the URI constructor will regard $ as an illegal character and we don't want to enforce end users to_to escape the $ for the expression (file language);protected String getBaseUri(String uri) {_        String baseUri = uri__        if (uri.indexOf("?") != -1) {_            baseUri = uri.substring(0, uri.indexOf("?"))__        }_        return baseUri__    };get,the,base,uri,part,before,the,options,as,they,can,be,non,uri,valid,such,as,the,expression,using,chars,and,the,uri,constructor,will,regard,as,an,illegal,character,and,we,don,t,want,to,enforce,end,users,to,to,escape,the,for,the,expression,file,language;protected,string,get,base,uri,string,uri,string,base,uri,uri,if,uri,index,of,1,base,uri,uri,substring,0,uri,index,of,return,base,uri
FtpComponent -> protected String getBaseUri(String uri);1425280684;Get the base uri part before the options as they can be non URI valid such as the expression using $ chars_and the URI constructor will regard $ as an illegal character and we don't want to enforce end users to_to escape the $ for the expression (file language);protected String getBaseUri(String uri) {_        String baseUri = uri__        if (uri.indexOf("?") != -1) {_            baseUri = uri.substring(0, uri.indexOf("?"))__        }_        return baseUri__    };get,the,base,uri,part,before,the,options,as,they,can,be,non,uri,valid,such,as,the,expression,using,chars,and,the,uri,constructor,will,regard,as,an,illegal,character,and,we,don,t,want,to,enforce,end,users,to,to,escape,the,for,the,expression,file,language;protected,string,get,base,uri,string,uri,string,base,uri,uri,if,uri,index,of,1,base,uri,uri,substring,0,uri,index,of,return,base,uri
FtpComponent -> protected String getBaseUri(String uri);1433756335;Get the base uri part before the options as they can be non URI valid such as the expression using $ chars_and the URI constructor will regard $ as an illegal character and we don't want to enforce end users to_to escape the $ for the expression (file language);protected String getBaseUri(String uri) {_        String baseUri = uri__        if (uri.indexOf("?") != -1) {_            baseUri = uri.substring(0, uri.indexOf("?"))__        }_        return baseUri__    };get,the,base,uri,part,before,the,options,as,they,can,be,non,uri,valid,such,as,the,expression,using,chars,and,the,uri,constructor,will,regard,as,an,illegal,character,and,we,don,t,want,to,enforce,end,users,to,to,escape,the,for,the,expression,file,language;protected,string,get,base,uri,string,uri,string,base,uri,uri,if,uri,index,of,1,base,uri,uri,substring,0,uri,index,of,return,base,uri
FtpComponent -> protected String getBaseUri(String uri);1523994338;Get the base uri part before the options as they can be non URI valid such as the expression using $ chars_and the URI constructor will regard $ as an illegal character and we don't want to enforce end users to_to escape the $ for the expression (file language);protected String getBaseUri(String uri) {_        String baseUri = uri__        if (uri.indexOf("?") != -1) {_            baseUri = uri.substring(0, uri.indexOf("?"))__        }_        return baseUri__    };get,the,base,uri,part,before,the,options,as,they,can,be,non,uri,valid,such,as,the,expression,using,chars,and,the,uri,constructor,will,regard,as,an,illegal,character,and,we,don,t,want,to,enforce,end,users,to,to,escape,the,for,the,expression,file,language;protected,string,get,base,uri,string,uri,string,base,uri,uri,if,uri,index,of,1,base,uri,uri,substring,0,uri,index,of,return,base,uri
FtpComponent -> protected String getBaseUri(String uri);1534279476;Get the base uri part before the options as they can be non URI valid such as the expression using $ chars_and the URI constructor will regard $ as an illegal character and we don't want to enforce end users to_to escape the $ for the expression (file language);protected String getBaseUri(String uri) {_        String baseUri = uri__        if (uri.indexOf("?") != -1) {_            baseUri = uri.substring(0, uri.indexOf("?"))__        }_        return baseUri__    };get,the,base,uri,part,before,the,options,as,they,can,be,non,uri,valid,such,as,the,expression,using,chars,and,the,uri,constructor,will,regard,as,an,illegal,character,and,we,don,t,want,to,enforce,end,users,to,to,escape,the,for,the,expression,file,language;protected,string,get,base,uri,string,uri,string,base,uri,uri,if,uri,index,of,1,base,uri,uri,substring,0,uri,index,of,return,base,uri
FtpComponent -> protected String getBaseUri(String uri);1534322264;Get the base uri part before the options as they can be non URI valid such as the expression using $ chars_and the URI constructor will regard $ as an illegal character and we don't want to enforce end users to_to escape the $ for the expression (file language);protected String getBaseUri(String uri) {_        String baseUri = uri__        if (uri.indexOf("?") != -1) {_            baseUri = uri.substring(0, uri.indexOf("?"))__        }_        return baseUri__    };get,the,base,uri,part,before,the,options,as,they,can,be,non,uri,valid,such,as,the,expression,using,chars,and,the,uri,constructor,will,regard,as,an,illegal,character,and,we,don,t,want,to,enforce,end,users,to,to,escape,the,for,the,expression,file,language;protected,string,get,base,uri,string,uri,string,base,uri,uri,if,uri,index,of,1,base,uri,uri,substring,0,uri,index,of,return,base,uri
FtpComponent -> protected String getBaseUri(String uri);1540108158;Get the base uri part before the options as they can be non URI valid such as the expression using $ chars_and the URI constructor will regard $ as an illegal character and we don't want to enforce end users to_to escape the $ for the expression (file language);protected String getBaseUri(String uri) {_        String baseUri = uri__        if (uri.indexOf("?") != -1) {_            baseUri = uri.substring(0, uri.indexOf("?"))__        }_        return baseUri__    };get,the,base,uri,part,before,the,options,as,they,can,be,non,uri,valid,such,as,the,expression,using,chars,and,the,uri,constructor,will,regard,as,an,illegal,character,and,we,don,t,want,to,enforce,end,users,to,to,escape,the,for,the,expression,file,language;protected,string,get,base,uri,string,uri,string,base,uri,uri,if,uri,index,of,1,base,uri,uri,substring,0,uri,index,of,return,base,uri
FtpComponent -> protected String getBaseUri(String uri);1540108163;Get the base uri part before the options as they can be non URI valid such as the expression using $ chars_and the URI constructor will regard $ as an illegal character and we don't want to enforce end users to_to escape the $ for the expression (file language);protected String getBaseUri(String uri) {_        String baseUri = uri__        if (uri.indexOf("?") != -1) {_            baseUri = uri.substring(0, uri.indexOf("?"))__        }_        return baseUri__    };get,the,base,uri,part,before,the,options,as,they,can,be,non,uri,valid,such,as,the,expression,using,chars,and,the,uri,constructor,will,regard,as,an,illegal,character,and,we,don,t,want,to,enforce,end,users,to,to,escape,the,for,the,expression,file,language;protected,string,get,base,uri,string,uri,string,base,uri,uri,if,uri,index,of,1,base,uri,uri,substring,0,uri,index,of,return,base,uri
FtpComponent -> protected String getBaseUri(String uri);1547241305;Get the base uri part before the options as they can be non URI valid such as the expression using $ chars_and the URI constructor will regard $ as an illegal character and we don't want to enforce end users to_to escape the $ for the expression (file language);protected String getBaseUri(String uri) {_        String baseUri = uri__        if (uri.indexOf("?") != -1) {_            baseUri = uri.substring(0, uri.indexOf("?"))__        }_        return baseUri__    };get,the,base,uri,part,before,the,options,as,they,can,be,non,uri,valid,such,as,the,expression,using,chars,and,the,uri,constructor,will,regard,as,an,illegal,character,and,we,don,t,want,to,enforce,end,users,to,to,escape,the,for,the,expression,file,language;protected,string,get,base,uri,string,uri,string,base,uri,uri,if,uri,index,of,1,base,uri,uri,substring,0,uri,index,of,return,base,uri
FtpComponent -> protected void extractAndSetFtpClientParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer);1260208009;Extract additional ftp client options from the parameters map (parameters starting with_'ftpClient.'). To remember these parameters, we set them in the endpoint and we can use them_when creating a client.;protected void extractAndSetFtpClientParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.")__            answer.setFtpClientParameters(param)__        }_    };extract,additional,ftp,client,options,from,the,parameters,map,parameters,starting,with,ftp,client,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,parameters,map,string,object,parameters,ftp,endpoint,ftpfile,answer,if,introspection,support,has,properties,parameters,ftp,client,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,answer,set,ftp,client,parameters,param
FtpComponent -> protected void extractAndSetFtpClientParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer);1275457079;Extract additional ftp client options from the parameters map (parameters starting with_'ftpClient.'). To remember these parameters, we set them in the endpoint and we can use them_when creating a client.;protected void extractAndSetFtpClientParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.")__            answer.setFtpClientParameters(param)__        }_    };extract,additional,ftp,client,options,from,the,parameters,map,parameters,starting,with,ftp,client,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,parameters,map,string,object,parameters,ftp,endpoint,ftpfile,answer,if,introspection,support,has,properties,parameters,ftp,client,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,answer,set,ftp,client,parameters,param
FtpComponent -> protected void extractAndSetFtpClientParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer);1325501273;Extract additional ftp client options from the parameters map (parameters starting with_'ftpClient.'). To remember these parameters, we set them in the endpoint and we can use them_when creating a client.;protected void extractAndSetFtpClientParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.")__            answer.setFtpClientParameters(param)__        }_    };extract,additional,ftp,client,options,from,the,parameters,map,parameters,starting,with,ftp,client,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,parameters,map,string,object,parameters,ftp,endpoint,ftpfile,answer,if,introspection,support,has,properties,parameters,ftp,client,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,answer,set,ftp,client,parameters,param
FtpComponent -> protected void extractAndSetFtpClientParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer);1392751344;Extract additional ftp client options from the parameters map (parameters starting with_'ftpClient.'). To remember these parameters, we set them in the endpoint and we can use them_when creating a client.;protected void extractAndSetFtpClientParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.")__            answer.setFtpClientParameters(param)__        }_    };extract,additional,ftp,client,options,from,the,parameters,map,parameters,starting,with,ftp,client,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,parameters,map,string,object,parameters,ftp,endpoint,ftpfile,answer,if,introspection,support,has,properties,parameters,ftp,client,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,answer,set,ftp,client,parameters,param
FtpComponent -> protected void extractAndSetFtpClientParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer);1405374721;Extract additional ftp client options from the parameters map (parameters starting with_'ftpClient.'). To remember these parameters, we set them in the endpoint and we can use them_when creating a client.;protected void extractAndSetFtpClientParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.")__            answer.setFtpClientParameters(param)__        }_    };extract,additional,ftp,client,options,from,the,parameters,map,parameters,starting,with,ftp,client,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,parameters,map,string,object,parameters,ftp,endpoint,ftpfile,answer,if,introspection,support,has,properties,parameters,ftp,client,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,answer,set,ftp,client,parameters,param
FtpComponent -> protected void extractAndSetFtpClientParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer);1424952635;Extract additional ftp client options from the parameters map (parameters starting with_'ftpClient.'). To remember these parameters, we set them in the endpoint and we can use them_when creating a client.;protected void extractAndSetFtpClientParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.")__            answer.setFtpClientParameters(param)__        }_    };extract,additional,ftp,client,options,from,the,parameters,map,parameters,starting,with,ftp,client,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,parameters,map,string,object,parameters,ftp,endpoint,ftpfile,answer,if,introspection,support,has,properties,parameters,ftp,client,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,answer,set,ftp,client,parameters,param
FtpComponent -> protected void extractAndSetFtpClientParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer);1425280684;Extract additional ftp client options from the parameters map (parameters starting with_'ftpClient.'). To remember these parameters, we set them in the endpoint and we can use them_when creating a client.;protected void extractAndSetFtpClientParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.")__            answer.setFtpClientParameters(param)__        }_    };extract,additional,ftp,client,options,from,the,parameters,map,parameters,starting,with,ftp,client,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,parameters,map,string,object,parameters,ftp,endpoint,ftpfile,answer,if,introspection,support,has,properties,parameters,ftp,client,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,answer,set,ftp,client,parameters,param
FtpComponent -> protected void extractAndSetFtpClientParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer);1433756335;Extract additional ftp client options from the parameters map (parameters starting with_'ftpClient.'). To remember these parameters, we set them in the endpoint and we can use them_when creating a client.;protected void extractAndSetFtpClientParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.")__            answer.setFtpClientParameters(param)__        }_    };extract,additional,ftp,client,options,from,the,parameters,map,parameters,starting,with,ftp,client,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,parameters,map,string,object,parameters,ftp,endpoint,ftpfile,answer,if,introspection,support,has,properties,parameters,ftp,client,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,answer,set,ftp,client,parameters,param
FtpComponent -> protected void extractAndSetFtpClientParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer);1523994338;Extract additional ftp client options from the parameters map (parameters starting with_'ftpClient.'). To remember these parameters, we set them in the endpoint and we can use them_when creating a client.;protected void extractAndSetFtpClientParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.")__            answer.setFtpClientParameters(param)__        }_    };extract,additional,ftp,client,options,from,the,parameters,map,parameters,starting,with,ftp,client,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,parameters,map,string,object,parameters,ftp,endpoint,ftpfile,answer,if,introspection,support,has,properties,parameters,ftp,client,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,answer,set,ftp,client,parameters,param
FtpComponent -> protected void extractAndSetFtpClientParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer);1534279476;Extract additional ftp client options from the parameters map (parameters starting with_'ftpClient.'). To remember these parameters, we set them in the endpoint and we can use them_when creating a client.;protected void extractAndSetFtpClientParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.")__            answer.setFtpClientParameters(param)__        }_    };extract,additional,ftp,client,options,from,the,parameters,map,parameters,starting,with,ftp,client,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,parameters,map,string,object,parameters,ftp,endpoint,ftpfile,answer,if,introspection,support,has,properties,parameters,ftp,client,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,answer,set,ftp,client,parameters,param
FtpComponent -> protected void extractAndSetFtpClientParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer);1534322264;Extract additional ftp client options from the parameters map (parameters starting with_'ftpClient.'). To remember these parameters, we set them in the endpoint and we can use them_when creating a client.;protected void extractAndSetFtpClientParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.")__            answer.setFtpClientParameters(param)__        }_    };extract,additional,ftp,client,options,from,the,parameters,map,parameters,starting,with,ftp,client,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,parameters,map,string,object,parameters,ftp,endpoint,ftpfile,answer,if,introspection,support,has,properties,parameters,ftp,client,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,answer,set,ftp,client,parameters,param
FtpComponent -> protected void extractAndSetFtpClientParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer);1540108158;Extract additional ftp client options from the parameters map (parameters starting with_'ftpClient.'). To remember these parameters, we set them in the endpoint and we can use them_when creating a client.;protected void extractAndSetFtpClientParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.")__            answer.setFtpClientParameters(param)__        }_    };extract,additional,ftp,client,options,from,the,parameters,map,parameters,starting,with,ftp,client,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,parameters,map,string,object,parameters,ftp,endpoint,ftpfile,answer,if,introspection,support,has,properties,parameters,ftp,client,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,answer,set,ftp,client,parameters,param
FtpComponent -> protected void extractAndSetFtpClientParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer);1540108163;Extract additional ftp client options from the parameters map (parameters starting with_'ftpClient.'). To remember these parameters, we set them in the endpoint and we can use them_when creating a client.;protected void extractAndSetFtpClientParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.")__            answer.setFtpClientParameters(param)__        }_    };extract,additional,ftp,client,options,from,the,parameters,map,parameters,starting,with,ftp,client,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,parameters,map,string,object,parameters,ftp,endpoint,ftpfile,answer,if,introspection,support,has,properties,parameters,ftp,client,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,answer,set,ftp,client,parameters,param
FtpComponent -> protected void extractAndSetFtpClientParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer);1547241305;Extract additional ftp client options from the parameters map (parameters starting with_'ftpClient.'). To remember these parameters, we set them in the endpoint and we can use them_when creating a client.;protected void extractAndSetFtpClientParameters(Map<String, Object> parameters, FtpEndpoint<FTPFile> answer) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.")__            answer.setFtpClientParameters(param)__        }_    };extract,additional,ftp,client,options,from,the,parameters,map,parameters,starting,with,ftp,client,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,parameters,map,string,object,parameters,ftp,endpoint,ftpfile,answer,if,introspection,support,has,properties,parameters,ftp,client,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,answer,set,ftp,client,parameters,param
