# id;timestamp;commentText;codeText;commentWords;codeWords
FtpsComponent -> protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1260208009;Extract additional ftp client key store options from the parameters map (parameters starting with_'ftpClient.keyStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.keyStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.keyStore.")__            endpoint.setFtpClientKeyStoreParameters(param)__        }_    };extract,additional,ftp,client,key,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,key,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,key,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,key,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,key,store,endpoint,set,ftp,client,key,store,parameters,param
FtpsComponent -> protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1275659809;Extract additional ftp client key store options from the parameters map (parameters starting with_'ftpClient.keyStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.keyStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.keyStore.")__            endpoint.setFtpClientKeyStoreParameters(param)__        }_    };extract,additional,ftp,client,key,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,key,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,key,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,key,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,key,store,endpoint,set,ftp,client,key,store,parameters,param
FtpsComponent -> protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1297969516;Extract additional ftp client key store options from the parameters map (parameters starting with_'ftpClient.keyStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.keyStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.keyStore.")__            endpoint.setFtpClientKeyStoreParameters(param)__        }_    };extract,additional,ftp,client,key,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,key,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,key,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,key,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,key,store,endpoint,set,ftp,client,key,store,parameters,param
FtpsComponent -> protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1392751344;Extract additional ftp client key store options from the parameters map (parameters starting with_'ftpClient.keyStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.keyStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.keyStore.")__            endpoint.setFtpClientKeyStoreParameters(param)__        }_    };extract,additional,ftp,client,key,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,key,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,key,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,key,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,key,store,endpoint,set,ftp,client,key,store,parameters,param
FtpsComponent -> protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1405374721;Extract additional ftp client key store options from the parameters map (parameters starting with_'ftpClient.keyStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.keyStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.keyStore.")__            endpoint.setFtpClientKeyStoreParameters(param)__        }_    };extract,additional,ftp,client,key,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,key,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,key,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,key,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,key,store,endpoint,set,ftp,client,key,store,parameters,param
FtpsComponent -> protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1433756335;Extract additional ftp client key store options from the parameters map (parameters starting with_'ftpClient.keyStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.keyStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.keyStore.")__            endpoint.setFtpClientKeyStoreParameters(param)__        }_    };extract,additional,ftp,client,key,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,key,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,key,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,key,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,key,store,endpoint,set,ftp,client,key,store,parameters,param
FtpsComponent -> protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1491919259;Extract additional ftp client key store options from the parameters map (parameters starting with_'ftpClient.keyStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.keyStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.keyStore.")__            endpoint.setFtpClientKeyStoreParameters(param)__        }_    };extract,additional,ftp,client,key,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,key,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,key,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,key,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,key,store,endpoint,set,ftp,client,key,store,parameters,param
FtpsComponent -> protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1491919462;Extract additional ftp client key store options from the parameters map (parameters starting with_'ftpClient.keyStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.keyStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.keyStore.")__            endpoint.setFtpClientKeyStoreParameters(param)__        }_    };extract,additional,ftp,client,key,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,key,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,key,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,key,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,key,store,endpoint,set,ftp,client,key,store,parameters,param
FtpsComponent -> protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1491919462;Extract additional ftp client key store options from the parameters map (parameters starting with_'ftpClient.keyStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.keyStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.keyStore.")__            endpoint.setFtpClientKeyStoreParameters(param)__        }_    };extract,additional,ftp,client,key,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,key,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,key,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,key,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,key,store,endpoint,set,ftp,client,key,store,parameters,param
FtpsComponent -> protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1491919462;Extract additional ftp client key store options from the parameters map (parameters starting with_'ftpClient.keyStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.keyStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.keyStore.")__            endpoint.setFtpClientKeyStoreParameters(param)__        }_    };extract,additional,ftp,client,key,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,key,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,key,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,key,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,key,store,endpoint,set,ftp,client,key,store,parameters,param
FtpsComponent -> protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1534279476;Extract additional ftp client key store options from the parameters map (parameters starting with_'ftpClient.keyStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.keyStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.keyStore.")__            endpoint.setFtpClientKeyStoreParameters(param)__        }_    };extract,additional,ftp,client,key,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,key,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,key,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,key,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,key,store,endpoint,set,ftp,client,key,store,parameters,param
FtpsComponent -> protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1534322264;Extract additional ftp client key store options from the parameters map (parameters starting with_'ftpClient.keyStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.keyStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.keyStore.")__            endpoint.setFtpClientKeyStoreParameters(param)__        }_    };extract,additional,ftp,client,key,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,key,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,key,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,key,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,key,store,endpoint,set,ftp,client,key,store,parameters,param
FtpsComponent -> protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1540108158;Extract additional ftp client key store options from the parameters map (parameters starting with_'ftpClient.keyStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.keyStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.keyStore.")__            endpoint.setFtpClientKeyStoreParameters(param)__        }_    };extract,additional,ftp,client,key,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,key,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,key,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,key,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,key,store,endpoint,set,ftp,client,key,store,parameters,param
FtpsComponent -> protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1540108161;Extract additional ftp client key store options from the parameters map (parameters starting with_'ftpClient.keyStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.keyStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.keyStore.")__            endpoint.setFtpClientKeyStoreParameters(param)__        }_    };extract,additional,ftp,client,key,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,key,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,key,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,key,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,key,store,endpoint,set,ftp,client,key,store,parameters,param
FtpsComponent -> protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1540108163;Extract additional ftp client key store options from the parameters map (parameters starting with_'ftpClient.keyStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.keyStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.keyStore.")__            endpoint.setFtpClientKeyStoreParameters(param)__        }_    };extract,additional,ftp,client,key,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,key,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,key,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,key,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,key,store,endpoint,set,ftp,client,key,store,parameters,param
FtpsComponent -> protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1547241305;Extract additional ftp client key store options from the parameters map (parameters starting with_'ftpClient.keyStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientKeyStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.keyStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.keyStore.")__            endpoint.setFtpClientKeyStoreParameters(param)__        }_    };extract,additional,ftp,client,key,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,key,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,key,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,key,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,key,store,endpoint,set,ftp,client,key,store,parameters,param
FtpsComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1491919462;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
FtpsComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1534279476;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
FtpsComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1534322264;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
FtpsComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1540108158;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
FtpsComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1540108161;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
FtpsComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1540108163;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
FtpsComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1547241305;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
FtpsComponent -> protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1260208009;Extract additional ftp client trust store options from the parameters map (parameters starting with_'ftpClient.trustStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.trustStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.trustStore.")__            endpoint.setFtpClientTrustStoreParameters(param)__        }_    };extract,additional,ftp,client,trust,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,trust,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,trust,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,trust,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,trust,store,endpoint,set,ftp,client,trust,store,parameters,param
FtpsComponent -> protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1275659809;Extract additional ftp client trust store options from the parameters map (parameters starting with_'ftpClient.trustStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.trustStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.trustStore.")__            endpoint.setFtpClientTrustStoreParameters(param)__        }_    };extract,additional,ftp,client,trust,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,trust,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,trust,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,trust,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,trust,store,endpoint,set,ftp,client,trust,store,parameters,param
FtpsComponent -> protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1297969516;Extract additional ftp client trust store options from the parameters map (parameters starting with_'ftpClient.trustStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.trustStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.trustStore.")__            endpoint.setFtpClientTrustStoreParameters(param)__        }_    };extract,additional,ftp,client,trust,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,trust,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,trust,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,trust,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,trust,store,endpoint,set,ftp,client,trust,store,parameters,param
FtpsComponent -> protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1392751344;Extract additional ftp client trust store options from the parameters map (parameters starting with_'ftpClient.trustStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.trustStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.trustStore.")__            endpoint.setFtpClientTrustStoreParameters(param)__        }_    };extract,additional,ftp,client,trust,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,trust,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,trust,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,trust,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,trust,store,endpoint,set,ftp,client,trust,store,parameters,param
FtpsComponent -> protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1405374721;Extract additional ftp client trust store options from the parameters map (parameters starting with_'ftpClient.trustStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.trustStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.trustStore.")__            endpoint.setFtpClientTrustStoreParameters(param)__        }_    };extract,additional,ftp,client,trust,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,trust,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,trust,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,trust,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,trust,store,endpoint,set,ftp,client,trust,store,parameters,param
FtpsComponent -> protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1433756335;Extract additional ftp client trust store options from the parameters map (parameters starting with_'ftpClient.trustStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.trustStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.trustStore.")__            endpoint.setFtpClientTrustStoreParameters(param)__        }_    };extract,additional,ftp,client,trust,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,trust,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,trust,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,trust,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,trust,store,endpoint,set,ftp,client,trust,store,parameters,param
FtpsComponent -> protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1491919259;Extract additional ftp client trust store options from the parameters map (parameters starting with_'ftpClient.trustStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.trustStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.trustStore.")__            endpoint.setFtpClientTrustStoreParameters(param)__        }_    };extract,additional,ftp,client,trust,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,trust,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,trust,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,trust,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,trust,store,endpoint,set,ftp,client,trust,store,parameters,param
FtpsComponent -> protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1491919462;Extract additional ftp client trust store options from the parameters map (parameters starting with_'ftpClient.trustStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.trustStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.trustStore.")__            endpoint.setFtpClientTrustStoreParameters(param)__        }_    };extract,additional,ftp,client,trust,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,trust,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,trust,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,trust,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,trust,store,endpoint,set,ftp,client,trust,store,parameters,param
FtpsComponent -> protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1491919462;Extract additional ftp client trust store options from the parameters map (parameters starting with_'ftpClient.trustStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.trustStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.trustStore.")__            endpoint.setFtpClientTrustStoreParameters(param)__        }_    };extract,additional,ftp,client,trust,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,trust,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,trust,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,trust,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,trust,store,endpoint,set,ftp,client,trust,store,parameters,param
FtpsComponent -> protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1491919462;Extract additional ftp client trust store options from the parameters map (parameters starting with_'ftpClient.trustStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.trustStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.trustStore.")__            endpoint.setFtpClientTrustStoreParameters(param)__        }_    };extract,additional,ftp,client,trust,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,trust,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,trust,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,trust,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,trust,store,endpoint,set,ftp,client,trust,store,parameters,param
FtpsComponent -> protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1534279476;Extract additional ftp client trust store options from the parameters map (parameters starting with_'ftpClient.trustStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.trustStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.trustStore.")__            endpoint.setFtpClientTrustStoreParameters(param)__        }_    };extract,additional,ftp,client,trust,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,trust,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,trust,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,trust,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,trust,store,endpoint,set,ftp,client,trust,store,parameters,param
FtpsComponent -> protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1534322264;Extract additional ftp client trust store options from the parameters map (parameters starting with_'ftpClient.trustStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.trustStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.trustStore.")__            endpoint.setFtpClientTrustStoreParameters(param)__        }_    };extract,additional,ftp,client,trust,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,trust,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,trust,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,trust,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,trust,store,endpoint,set,ftp,client,trust,store,parameters,param
FtpsComponent -> protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1540108158;Extract additional ftp client trust store options from the parameters map (parameters starting with_'ftpClient.trustStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.trustStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.trustStore.")__            endpoint.setFtpClientTrustStoreParameters(param)__        }_    };extract,additional,ftp,client,trust,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,trust,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,trust,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,trust,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,trust,store,endpoint,set,ftp,client,trust,store,parameters,param
FtpsComponent -> protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1540108161;Extract additional ftp client trust store options from the parameters map (parameters starting with_'ftpClient.trustStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.trustStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.trustStore.")__            endpoint.setFtpClientTrustStoreParameters(param)__        }_    };extract,additional,ftp,client,trust,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,trust,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,trust,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,trust,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,trust,store,endpoint,set,ftp,client,trust,store,parameters,param
FtpsComponent -> protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1540108163;Extract additional ftp client trust store options from the parameters map (parameters starting with_'ftpClient.trustStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.trustStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.trustStore.")__            endpoint.setFtpClientTrustStoreParameters(param)__        }_    };extract,additional,ftp,client,trust,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,trust,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,trust,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,trust,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,trust,store,endpoint,set,ftp,client,trust,store,parameters,param
FtpsComponent -> protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint);1547241305;Extract additional ftp client trust store options from the parameters map (parameters starting with_'ftpClient.trustStore.'). To remember these parameters, we set them in the endpoint and we can use_them when creating a client.;protected void extractAndSetFtpClientTrustStoreParameters(Map<String, Object> parameters, FtpsEndpoint endpoint) {_        if (IntrospectionSupport.hasProperties(parameters, "ftpClient.trustStore.")) {_            Map<String, Object> param = IntrospectionSupport.extractProperties(parameters, "ftpClient.trustStore.")__            endpoint.setFtpClientTrustStoreParameters(param)__        }_    };extract,additional,ftp,client,trust,store,options,from,the,parameters,map,parameters,starting,with,ftp,client,trust,store,to,remember,these,parameters,we,set,them,in,the,endpoint,and,we,can,use,them,when,creating,a,client;protected,void,extract,and,set,ftp,client,trust,store,parameters,map,string,object,parameters,ftps,endpoint,endpoint,if,introspection,support,has,properties,parameters,ftp,client,trust,store,map,string,object,param,introspection,support,extract,properties,parameters,ftp,client,trust,store,endpoint,set,ftp,client,trust,store,parameters,param
