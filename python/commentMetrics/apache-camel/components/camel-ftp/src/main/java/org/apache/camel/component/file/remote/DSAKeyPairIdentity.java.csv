# id;timestamp;commentText;codeText;commentWords;codeWords
DSAKeyPairIdentity -> private byte[] convertDERToP1363(byte[] sig);1372757626;"The signature on m is (r, s). Message m and (r, s) should be sent to the_verifier. We need to observe that both r and s are 20 bytes, since a_modular reduction is being performed (steps 2 and 5) using q, a 160 bit_value. This will gain significance later when we begin verifying messages_between Crypto++ and C# (which use the IEEE P1363 signature format) and_Java (which uses a DER encoding of a signature)." [taken from <a href=_"http://www.codeproject.com/Articles/25590/Cryptographic-Interoperability-Digital-Signatures"_>Cryptographic Interoperability Digital Signatures</a>]__@param sig_signature in DER format_@return signature in P1363 format_ SEQUENCE ::= { r INTEGER, s INTEGER };private byte[] convertDERToP1363(byte[] sig) {_        int index = 3__        int len = sig[index++] & 0xff___        byte[] r = new byte[len]__        System.arraycopy(sig, index, r, 0, r.length)__        index = index + len + 1___        len = sig[index++] & 0xff__        byte[] s = new byte[len]__        System.arraycopy(sig, index, s, 0, s.length)___        byte[] p1363Signature = new byte[40]__        if (r.length > 21 || (r.length == 21 && r[0] != 0)) {_            _        } else if (r.length == 21) {_            _            _            System.arraycopy(r, 1, p1363Signature, 0, 20)__        } else if (r.length == 20) {_            _            System.arraycopy(r, 0, p1363Signature, 0, 20)__        } else {_            _            len = r.length__            int off = 20 - len__            System.arraycopy(r, 0, p1363Signature, off, len)__        }__        if (s.length > 21 || (s.length == 21 && s[0] != 0)) {_            _            p1363Signature = new byte[0]__        } else if (s.length == 21) {_            _            _            System.arraycopy(s, 1, p1363Signature, 20, 20)__        } else if (s.length == 20) {_            _            System.arraycopy(s, 0, p1363Signature, 20, 20)__        } else {_            _            len = s.length__            int off = 40 - len__            System.arraycopy(s, 0, p1363Signature, off, len)__        }__        return p1363Signature__    };the,signature,on,m,is,r,s,message,m,and,r,s,should,be,sent,to,the,verifier,we,need,to,observe,that,both,r,and,s,are,20,bytes,since,a,modular,reduction,is,being,performed,steps,2,and,5,using,q,a,160,bit,value,this,will,gain,significance,later,when,we,begin,verifying,messages,between,crypto,and,c,which,use,the,ieee,p1363,signature,format,and,java,which,uses,a,der,encoding,of,a,signature,taken,from,a,href,http,www,codeproject,com,articles,25590,cryptographic,interoperability,digital,signatures,cryptographic,interoperability,digital,signatures,a,param,sig,signature,in,der,format,return,signature,in,p1363,format,sequence,r,integer,s,integer;private,byte,convert,derto,p1363,byte,sig,int,index,3,int,len,sig,index,0xff,byte,r,new,byte,len,system,arraycopy,sig,index,r,0,r,length,index,index,len,1,len,sig,index,0xff,byte,s,new,byte,len,system,arraycopy,sig,index,s,0,s,length,byte,p1363signature,new,byte,40,if,r,length,21,r,length,21,r,0,0,else,if,r,length,21,system,arraycopy,r,1,p1363signature,0,20,else,if,r,length,20,system,arraycopy,r,0,p1363signature,0,20,else,len,r,length,int,off,20,len,system,arraycopy,r,0,p1363signature,off,len,if,s,length,21,s,length,21,s,0,0,p1363signature,new,byte,0,else,if,s,length,21,system,arraycopy,s,1,p1363signature,20,20,else,if,s,length,20,system,arraycopy,s,0,p1363signature,20,20,else,len,s,length,int,off,40,len,system,arraycopy,s,0,p1363signature,off,len,return,p1363signature
DSAKeyPairIdentity -> private byte[] convertDERToP1363(byte[] sig);1373129971;"The signature on m is (r, s). Message m and (r, s) should be sent to the_verifier. We need to observe that both r and s are 20 bytes, since a_modular reduction is being performed (steps 2 and 5) using q, a 160 bit_value. This will gain significance later when we begin verifying messages_between Crypto++ and C# (which use the IEEE P1363 signature format) and_Java (which uses a DER encoding of a signature)." [taken from <a href=_"http://www.codeproject.com/Articles/25590/Cryptographic-Interoperability-Digital-Signatures"_>Cryptographic Interoperability Digital Signatures</a>]__@param sig_signature in DER format_@return signature in P1363 format_ SEQUENCE ::= { r INTEGER, s INTEGER };private byte[] convertDERToP1363(byte[] sig) {_        int index = 3__        int len = sig[index++] & 0xff___        byte[] r = new byte[len]__        System.arraycopy(sig, index, r, 0, r.length)__        index = index + len + 1___        len = sig[index++] & 0xff__        byte[] s = new byte[len]__        System.arraycopy(sig, index, s, 0, s.length)___        byte[] p1363Signature = new byte[40]__        if (r.length > 21 || (r.length == 21 && r[0] != 0)) {_            _        } else if (r.length == 21) {_            _            _            System.arraycopy(r, 1, p1363Signature, 0, 20)__        } else if (r.length == 20) {_            _            System.arraycopy(r, 0, p1363Signature, 0, 20)__        } else {_            _            len = r.length__            int off = 20 - len__            System.arraycopy(r, 0, p1363Signature, off, len)__        }__        if (s.length > 21 || (s.length == 21 && s[0] != 0)) {_            _            p1363Signature = new byte[0]__        } else if (s.length == 21) {_            _            _            System.arraycopy(s, 1, p1363Signature, 20, 20)__        } else if (s.length == 20) {_            _            System.arraycopy(s, 0, p1363Signature, 20, 20)__        } else {_            _            len = s.length__            int off = 40 - len__            System.arraycopy(s, 0, p1363Signature, off, len)__        }__        return p1363Signature__    };the,signature,on,m,is,r,s,message,m,and,r,s,should,be,sent,to,the,verifier,we,need,to,observe,that,both,r,and,s,are,20,bytes,since,a,modular,reduction,is,being,performed,steps,2,and,5,using,q,a,160,bit,value,this,will,gain,significance,later,when,we,begin,verifying,messages,between,crypto,and,c,which,use,the,ieee,p1363,signature,format,and,java,which,uses,a,der,encoding,of,a,signature,taken,from,a,href,http,www,codeproject,com,articles,25590,cryptographic,interoperability,digital,signatures,cryptographic,interoperability,digital,signatures,a,param,sig,signature,in,der,format,return,signature,in,p1363,format,sequence,r,integer,s,integer;private,byte,convert,derto,p1363,byte,sig,int,index,3,int,len,sig,index,0xff,byte,r,new,byte,len,system,arraycopy,sig,index,r,0,r,length,index,index,len,1,len,sig,index,0xff,byte,s,new,byte,len,system,arraycopy,sig,index,s,0,s,length,byte,p1363signature,new,byte,40,if,r,length,21,r,length,21,r,0,0,else,if,r,length,21,system,arraycopy,r,1,p1363signature,0,20,else,if,r,length,20,system,arraycopy,r,0,p1363signature,0,20,else,len,r,length,int,off,20,len,system,arraycopy,r,0,p1363signature,off,len,if,s,length,21,s,length,21,s,0,0,p1363signature,new,byte,0,else,if,s,length,21,system,arraycopy,s,1,p1363signature,20,20,else,if,s,length,20,system,arraycopy,s,0,p1363signature,20,20,else,len,s,length,int,off,40,len,system,arraycopy,s,0,p1363signature,off,len,return,p1363signature
DSAKeyPairIdentity -> private byte[] convertDERToP1363(byte[] sig);1376558158;"The signature on m is (r, s). Message m and (r, s) should be sent to the_verifier. We need to observe that both r and s are 20 bytes, since a_modular reduction is being performed (steps 2 and 5) using q, a 160 bit_value. This will gain significance later when we begin verifying messages_between Crypto++ and C# (which use the IEEE P1363 signature format) and_Java (which uses a DER encoding of a signature)." [taken from <a href=_"http://www.codeproject.com/Articles/25590/Cryptographic-Interoperability-Digital-Signatures"_>Cryptographic Interoperability Digital Signatures</a>]__@param sig_signature in DER format_@return signature in P1363 format_ SEQUENCE ::= { r INTEGER, s INTEGER };private byte[] convertDERToP1363(byte[] sig) {_        int index = 3__        int len = sig[index++] & 0xff___        byte[] r = new byte[len]__        System.arraycopy(sig, index, r, 0, r.length)__        index = index + len + 1___        len = sig[index++] & 0xff__        byte[] s = new byte[len]__        System.arraycopy(sig, index, s, 0, s.length)___        byte[] p1363Signature = new byte[40]__        if (r.length > 21 || (r.length == 21 && r[0] != 0)) {_            _        } else if (r.length == 21) {_            _            _            System.arraycopy(r, 1, p1363Signature, 0, 20)__        } else if (r.length == 20) {_            _            System.arraycopy(r, 0, p1363Signature, 0, 20)__        } else {_            _            len = r.length__            int off = 20 - len__            System.arraycopy(r, 0, p1363Signature, off, len)__        }__        if (s.length > 21 || (s.length == 21 && s[0] != 0)) {_            _            p1363Signature = new byte[0]__        } else if (s.length == 21) {_            _            _            System.arraycopy(s, 1, p1363Signature, 20, 20)__        } else if (s.length == 20) {_            _            System.arraycopy(s, 0, p1363Signature, 20, 20)__        } else {_            _            len = s.length__            int off = 40 - len__            System.arraycopy(s, 0, p1363Signature, off, len)__        }__        return p1363Signature__    };the,signature,on,m,is,r,s,message,m,and,r,s,should,be,sent,to,the,verifier,we,need,to,observe,that,both,r,and,s,are,20,bytes,since,a,modular,reduction,is,being,performed,steps,2,and,5,using,q,a,160,bit,value,this,will,gain,significance,later,when,we,begin,verifying,messages,between,crypto,and,c,which,use,the,ieee,p1363,signature,format,and,java,which,uses,a,der,encoding,of,a,signature,taken,from,a,href,http,www,codeproject,com,articles,25590,cryptographic,interoperability,digital,signatures,cryptographic,interoperability,digital,signatures,a,param,sig,signature,in,der,format,return,signature,in,p1363,format,sequence,r,integer,s,integer;private,byte,convert,derto,p1363,byte,sig,int,index,3,int,len,sig,index,0xff,byte,r,new,byte,len,system,arraycopy,sig,index,r,0,r,length,index,index,len,1,len,sig,index,0xff,byte,s,new,byte,len,system,arraycopy,sig,index,s,0,s,length,byte,p1363signature,new,byte,40,if,r,length,21,r,length,21,r,0,0,else,if,r,length,21,system,arraycopy,r,1,p1363signature,0,20,else,if,r,length,20,system,arraycopy,r,0,p1363signature,0,20,else,len,r,length,int,off,20,len,system,arraycopy,r,0,p1363signature,off,len,if,s,length,21,s,length,21,s,0,0,p1363signature,new,byte,0,else,if,s,length,21,system,arraycopy,s,1,p1363signature,20,20,else,if,s,length,20,system,arraycopy,s,0,p1363signature,20,20,else,len,s,length,int,off,40,len,system,arraycopy,s,0,p1363signature,off,len,return,p1363signature
DSAKeyPairIdentity -> private byte[] convertDERToP1363(byte[] sig);1537204343;"The signature on m is (r, s). Message m and (r, s) should be sent to the_verifier. We need to observe that both r and s are 20 bytes, since a_modular reduction is being performed (steps 2 and 5) using q, a 160 bit_value. This will gain significance later when we begin verifying messages_between Crypto++ and C# (which use the IEEE P1363 signature format) and_Java (which uses a DER encoding of a signature)." [taken from <a href=_"http://www.codeproject.com/Articles/25590/Cryptographic-Interoperability-Digital-Signatures"_>Cryptographic Interoperability Digital Signatures</a>]__@param sig_signature in DER format_@return signature in P1363 format_ SEQUENCE ::= { r INTEGER, s INTEGER };private byte[] convertDERToP1363(byte[] sig) {_        int index = 3__        int len = sig[index++] & 0xff___        byte[] r = new byte[len]__        System.arraycopy(sig, index, r, 0, r.length)__        index = index + len + 1___        len = sig[index++] & 0xff__        byte[] s = new byte[len]__        System.arraycopy(sig, index, s, 0, s.length)___        byte[] p1363Signature = new byte[40]__        if (r.length > 21 || (r.length == 21 && r[0] != 0)) {_            _        } else if (r.length == 21) {_            _            _            System.arraycopy(r, 1, p1363Signature, 0, 20)__        } else if (r.length == 20) {_            _            System.arraycopy(r, 0, p1363Signature, 0, 20)__        } else {_            _            len = r.length__            int off = 20 - len__            System.arraycopy(r, 0, p1363Signature, off, len)__        }__        if (s.length > 21 || (s.length == 21 && s[0] != 0)) {_            _            p1363Signature = new byte[0]__        } else if (s.length == 21) {_            _            _            System.arraycopy(s, 1, p1363Signature, 20, 20)__        } else if (s.length == 20) {_            _            System.arraycopy(s, 0, p1363Signature, 20, 20)__        } else {_            _            len = s.length__            int off = 40 - len__            System.arraycopy(s, 0, p1363Signature, off, len)__        }__        return p1363Signature__    };the,signature,on,m,is,r,s,message,m,and,r,s,should,be,sent,to,the,verifier,we,need,to,observe,that,both,r,and,s,are,20,bytes,since,a,modular,reduction,is,being,performed,steps,2,and,5,using,q,a,160,bit,value,this,will,gain,significance,later,when,we,begin,verifying,messages,between,crypto,and,c,which,use,the,ieee,p1363,signature,format,and,java,which,uses,a,der,encoding,of,a,signature,taken,from,a,href,http,www,codeproject,com,articles,25590,cryptographic,interoperability,digital,signatures,cryptographic,interoperability,digital,signatures,a,param,sig,signature,in,der,format,return,signature,in,p1363,format,sequence,r,integer,s,integer;private,byte,convert,derto,p1363,byte,sig,int,index,3,int,len,sig,index,0xff,byte,r,new,byte,len,system,arraycopy,sig,index,r,0,r,length,index,index,len,1,len,sig,index,0xff,byte,s,new,byte,len,system,arraycopy,sig,index,s,0,s,length,byte,p1363signature,new,byte,40,if,r,length,21,r,length,21,r,0,0,else,if,r,length,21,system,arraycopy,r,1,p1363signature,0,20,else,if,r,length,20,system,arraycopy,r,0,p1363signature,0,20,else,len,r,length,int,off,20,len,system,arraycopy,r,0,p1363signature,off,len,if,s,length,21,s,length,21,s,0,0,p1363signature,new,byte,0,else,if,s,length,21,system,arraycopy,s,1,p1363signature,20,20,else,if,s,length,20,system,arraycopy,s,0,p1363signature,20,20,else,len,s,length,int,off,40,len,system,arraycopy,s,0,p1363signature,off,len,return,p1363signature
