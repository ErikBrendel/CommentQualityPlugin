commented;modifiers;parameterAmount;loc;comment;code
false;public;0;21;;@Test public void testPartialMarshal() throws Exception {     PurchaseOrder bean = new PurchaseOrder().     bean.setName("Beer").     bean.setAmount(23).     bean.setPrice(2.5).     MockEndpoint mock = resolveMandatoryEndpoint("mock:marshal", MockEndpoint.class).     mock.expectedMessageCount(1).     XPathExpression xpath = new XPathExpression("count(//*[namespace-uri() = 'http://example.camel.org/apache' and local-name() = 'po']) = 1").     xpath.setResultType(Boolean.class).     mock.allMessages().body().matches(xpath).     template.sendBody("direct:marshal", bean).     mock.assertIsSatisfied().     // To make sure there is no XML declaration.     assertFalse("There should have no XML declaration.", mock.getExchanges().get(0).getIn().getBody(String.class).startsWith("<?xml version=")). }
false;public;0;15;;@Test public void testPartialUnmarshal() throws Exception {     MockEndpoint mock = resolveMandatoryEndpoint("mock:unmarshal", MockEndpoint.class).     mock.expectedMessageCount(1).     Partial partial = new Partial().     partial.setName("mock").     partial.setLocation("org.apache.camel").     mock.expectedBodyReceived().constant(partial).     String xml = "<Partial name=\"mock\"><location>org.apache.camel</location></Partial>".     template.sendBody("direct:unmarshal", xml).     mock.assertIsSatisfied(). }
false;protected;0;3;;protected ClassPathXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/example/springDataFormatPartial.xml"). }
