commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Override @Before public void setUp() throws Exception {     deleteDirectory("target/charset").     super.setUp(). }
false;public;0;23;;@Test public void testIsoAndCharacterFiltering() throws Exception {     PurchaseOrder order = new PurchaseOrder().     // Data containing characters ÆØÅæøå that differ in utf-8 and iso + a spouting whale     String name = "\u00c6\u00d8\u00C5\u00e6\u00f8\u00e5\uD83D\uDC33\uFFFD".     // Spouting whale has become spaces     String expected = "\u00c6\u00d8\u00C5\u00e6\u00f8\u00e5  \uFFFD".     order.setName(name).     order.setAmount(123.45).     order.setPrice(2.22).     MockEndpoint result = getMockEndpoint("mock:file").     result.expectedFileExists("target/charset/output.xml").     template.sendBody("direct:start", order).     assertMockEndpointsSatisfied().     JAXBContext jaxbContext = JAXBContext.newInstance("org.apache.camel.example").     Unmarshaller unmarshaller = jaxbContext.createUnmarshaller().     InputStream inputStream = new FileInputStream("target/charset/output.xml").     Reader reader = new InputStreamReader(inputStream, "ISO-8859-1").     PurchaseOrder obj = (PurchaseOrder) unmarshaller.unmarshal(reader).     assertEquals(expected, obj.getName()). }
false;public;0;10;;@Override public void configure() throws Exception {     JaxbDataFormat jaxb = new JaxbDataFormat("org.apache.camel.example").     jaxb.setFilterNonXmlChars(true).     jaxb.setEncoding("iso-8859-1").     from("direct:start").marshal(jaxb).to("file:target/charset/?fileName=output.xml&charset=iso-8859-1"). }
false;protected;0;15;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             JaxbDataFormat jaxb = new JaxbDataFormat("org.apache.camel.example").             jaxb.setFilterNonXmlChars(true).             jaxb.setEncoding("iso-8859-1").             from("direct:start").marshal(jaxb).to("file:target/charset/?fileName=output.xml&charset=iso-8859-1").         }     }. }
