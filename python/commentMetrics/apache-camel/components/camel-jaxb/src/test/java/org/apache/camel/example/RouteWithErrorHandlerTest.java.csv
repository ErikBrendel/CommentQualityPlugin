commented;modifiers;parameterAmount;loc;comment;code
false;public;0;14;;@Test public void testOk() throws Exception {     PurchaseOrder order = new PurchaseOrder().     order.setName("Wine").     order.setAmount(123.45).     order.setPrice(2.22).     MockEndpoint result = getMockEndpoint("mock:wine").     result.expectedBodiesReceived(order).     template.sendBody("direct:start", "<purchaseOrder name='Wine' amount='123.45' price='2.22'/>").     assertMockEndpointsSatisfied(). }
false;public;0;12;;@Test public void testUnmarshalError() throws Exception {     MockEndpoint error = getMockEndpoint("mock:error").     error.expectedMessageCount(1).     error.message(0).body(String.class).contains("<foo").     getMockEndpoint("mock:invalid").expectedMessageCount(0).     getMockEndpoint("mock:result").expectedMessageCount(0).     template.sendBody("direct:start", "<foo/>").     assertMockEndpointsSatisfied(). }
false;public;0;16;;@Test public void testNotWine() throws Exception {     PurchaseOrder order = new PurchaseOrder().     order.setName("Beer").     order.setAmount(2).     order.setPrice(1.99).     MockEndpoint error = getMockEndpoint("mock:invalid").     error.expectedBodiesReceived(order).     getMockEndpoint("mock:error").expectedMessageCount(0).     getMockEndpoint("mock:result").expectedMessageCount(0).     template.sendBody("direct:start", "<purchaseOrder name='Beer' amount='2.0' price='1.99'/>").     assertMockEndpointsSatisfied(). }
false;public;0;16;;@Override public void configure() throws Exception {     errorHandler(deadLetterChannel("mock:error").redeliveryDelay(0)).     onException(InvalidOrderException.class).maximumRedeliveries(0).handled(true).to("mock:invalid").     DataFormat jaxb = new JaxbDataFormat("org.apache.camel.example").     from("direct:start").unmarshal(jaxb).choice().when().method(RouteWithErrorHandlerTest.class, "isWine").to("mock:wine").otherwise().throwException(new InvalidOrderException("We only like wine")).end(). }
false;protected;0;21;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             errorHandler(deadLetterChannel("mock:error").redeliveryDelay(0)).             onException(InvalidOrderException.class).maximumRedeliveries(0).handled(true).to("mock:invalid").             DataFormat jaxb = new JaxbDataFormat("org.apache.camel.example").             from("direct:start").unmarshal(jaxb).choice().when().method(RouteWithErrorHandlerTest.class, "isWine").to("mock:wine").otherwise().throwException(new InvalidOrderException("We only like wine")).end().         }     }. }
false;public,static;1;3;;public static boolean isWine(PurchaseOrder order) {     return "Wine".equalsIgnoreCase(order.getName()). }
