# id;timestamp;commentText;codeText;commentWords;codeWords
FallbackTypeConverter -> public void setObjectFactory(boolean objectFactory);1457424476;Whether the JAXB converter supports using ObjectFactory classes to create the POJO classes during conversion._This only applies to POJO classes that has not been annotated with JAXB and providing jaxb.index descriptor files.;public void setObjectFactory(boolean objectFactory) {_        this.objectFactory = objectFactory__    };whether,the,jaxb,converter,supports,using,object,factory,classes,to,create,the,pojo,classes,during,conversion,this,only,applies,to,pojo,classes,that,has,not,been,annotated,with,jaxb,and,providing,jaxb,index,descriptor,files;public,void,set,object,factory,boolean,object,factory,this,object,factory,object,factory
FallbackTypeConverter -> public void setObjectFactory(boolean objectFactory);1458563447;Whether the JAXB converter supports using ObjectFactory classes to create the POJO classes during conversion._This only applies to POJO classes that has not been annotated with JAXB and providing jaxb.index descriptor files.;public void setObjectFactory(boolean objectFactory) {_        this.objectFactory = objectFactory__    };whether,the,jaxb,converter,supports,using,object,factory,classes,to,create,the,pojo,classes,during,conversion,this,only,applies,to,pojo,classes,that,has,not,been,annotated,with,jaxb,and,providing,jaxb,index,descriptor,files;public,void,set,object,factory,boolean,object,factory,this,object,factory,object,factory
FallbackTypeConverter -> public void setObjectFactory(boolean objectFactory);1465563177;Whether the JAXB converter supports using ObjectFactory classes to create the POJO classes during conversion._This only applies to POJO classes that has not been annotated with JAXB and providing jaxb.index descriptor files.;public void setObjectFactory(boolean objectFactory) {_        this.objectFactory = objectFactory__    };whether,the,jaxb,converter,supports,using,object,factory,classes,to,create,the,pojo,classes,during,conversion,this,only,applies,to,pojo,classes,that,has,not,been,annotated,with,jaxb,and,providing,jaxb,index,descriptor,files;public,void,set,object,factory,boolean,object,factory,this,object,factory,object,factory
FallbackTypeConverter -> public void setObjectFactory(boolean objectFactory);1465563868;Whether the JAXB converter supports using ObjectFactory classes to create the POJO classes during conversion._This only applies to POJO classes that has not been annotated with JAXB and providing jaxb.index descriptor files.;public void setObjectFactory(boolean objectFactory) {_        this.objectFactory = objectFactory__    };whether,the,jaxb,converter,supports,using,object,factory,classes,to,create,the,pojo,classes,during,conversion,this,only,applies,to,pojo,classes,that,has,not,been,annotated,with,jaxb,and,providing,jaxb,index,descriptor,files;public,void,set,object,factory,boolean,object,factory,this,object,factory,object,factory
FallbackTypeConverter -> public void setObjectFactory(boolean objectFactory);1522785885;Whether the JAXB converter supports using ObjectFactory classes to create the POJO classes during conversion._This only applies to POJO classes that has not been annotated with JAXB and providing jaxb.index descriptor files.;public void setObjectFactory(boolean objectFactory) {_        this.objectFactory = objectFactory__    };whether,the,jaxb,converter,supports,using,object,factory,classes,to,create,the,pojo,classes,during,conversion,this,only,applies,to,pojo,classes,that,has,not,been,annotated,with,jaxb,and,providing,jaxb,index,descriptor,files;public,void,set,object,factory,boolean,object,factory,this,object,factory,object,factory
FallbackTypeConverter -> public void setObjectFactory(boolean objectFactory);1540108158;Whether the JAXB converter supports using ObjectFactory classes to create the POJO classes during conversion._This only applies to POJO classes that has not been annotated with JAXB and providing jaxb.index descriptor files.;public void setObjectFactory(boolean objectFactory) {_        this.objectFactory = objectFactory__    };whether,the,jaxb,converter,supports,using,object,factory,classes,to,create,the,pojo,classes,during,conversion,this,only,applies,to,pojo,classes,that,has,not,been,annotated,with,jaxb,and,providing,jaxb,index,descriptor,files;public,void,set,object,factory,boolean,object,factory,this,object,factory,object,factory
FallbackTypeConverter -> public void setObjectFactory(boolean objectFactory);1540108160;Whether the JAXB converter supports using ObjectFactory classes to create the POJO classes during conversion._This only applies to POJO classes that has not been annotated with JAXB and providing jaxb.index descriptor files.;public void setObjectFactory(boolean objectFactory) {_        this.objectFactory = objectFactory__    };whether,the,jaxb,converter,supports,using,object,factory,classes,to,create,the,pojo,classes,during,conversion,this,only,applies,to,pojo,classes,that,has,not,been,annotated,with,jaxb,and,providing,jaxb,index,descriptor,files;public,void,set,object,factory,boolean,object,factory,this,object,factory,object,factory
FallbackTypeConverter -> public void setObjectFactory(boolean objectFactory);1540108161;Whether the JAXB converter supports using ObjectFactory classes to create the POJO classes during conversion._This only applies to POJO classes that has not been annotated with JAXB and providing jaxb.index descriptor files.;public void setObjectFactory(boolean objectFactory) {_        this.objectFactory = objectFactory__    };whether,the,jaxb,converter,supports,using,object,factory,classes,to,create,the,pojo,classes,during,conversion,this,only,applies,to,pojo,classes,that,has,not,been,annotated,with,jaxb,and,providing,jaxb,index,descriptor,files;public,void,set,object,factory,boolean,object,factory,this,object,factory,object,factory
FallbackTypeConverter -> public void setObjectFactory(boolean objectFactory);1540108163;Whether the JAXB converter supports using ObjectFactory classes to create the POJO classes during conversion._This only applies to POJO classes that has not been annotated with JAXB and providing jaxb.index descriptor files.;public void setObjectFactory(boolean objectFactory) {_        this.objectFactory = objectFactory__    };whether,the,jaxb,converter,supports,using,object,factory,classes,to,create,the,pojo,classes,during,conversion,this,only,applies,to,pojo,classes,that,has,not,been,annotated,with,jaxb,and,providing,jaxb,index,descriptor,files;public,void,set,object,factory,boolean,object,factory,this,object,factory,object,factory
FallbackTypeConverter -> public void setObjectFactory(boolean objectFactory);1548175645;Whether the JAXB converter supports using ObjectFactory classes to create the POJO classes during conversion._This only applies to POJO classes that has not been annotated with JAXB and providing jaxb.index descriptor files.;public void setObjectFactory(boolean objectFactory) {_        this.objectFactory = objectFactory__    };whether,the,jaxb,converter,supports,using,object,factory,classes,to,create,the,pojo,classes,during,conversion,this,only,applies,to,pojo,classes,that,has,not,been,annotated,with,jaxb,and,providing,jaxb,index,descriptor,files;public,void,set,object,factory,boolean,object,factory,this,object,factory,object,factory
FallbackTypeConverter -> public void setPrettyPrint(boolean prettyPrint);1457424476;Whether the JAXB converter should use pretty print or not (default is true);public void setPrettyPrint(boolean prettyPrint) {_        this.prettyPrint = prettyPrint__    };whether,the,jaxb,converter,should,use,pretty,print,or,not,default,is,true;public,void,set,pretty,print,boolean,pretty,print,this,pretty,print,pretty,print
FallbackTypeConverter -> public void setPrettyPrint(boolean prettyPrint);1458563447;Whether the JAXB converter should use pretty print or not (default is true);public void setPrettyPrint(boolean prettyPrint) {_        this.prettyPrint = prettyPrint__    };whether,the,jaxb,converter,should,use,pretty,print,or,not,default,is,true;public,void,set,pretty,print,boolean,pretty,print,this,pretty,print,pretty,print
FallbackTypeConverter -> public void setPrettyPrint(boolean prettyPrint);1465563177;Whether the JAXB converter should use pretty print or not (default is true);public void setPrettyPrint(boolean prettyPrint) {_        this.prettyPrint = prettyPrint__    };whether,the,jaxb,converter,should,use,pretty,print,or,not,default,is,true;public,void,set,pretty,print,boolean,pretty,print,this,pretty,print,pretty,print
FallbackTypeConverter -> public void setPrettyPrint(boolean prettyPrint);1465563868;Whether the JAXB converter should use pretty print or not (default is true);public void setPrettyPrint(boolean prettyPrint) {_        this.prettyPrint = prettyPrint__    };whether,the,jaxb,converter,should,use,pretty,print,or,not,default,is,true;public,void,set,pretty,print,boolean,pretty,print,this,pretty,print,pretty,print
FallbackTypeConverter -> public void setPrettyPrint(boolean prettyPrint);1522785885;Whether the JAXB converter should use pretty print or not (default is true);public void setPrettyPrint(boolean prettyPrint) {_        this.prettyPrint = prettyPrint__    };whether,the,jaxb,converter,should,use,pretty,print,or,not,default,is,true;public,void,set,pretty,print,boolean,pretty,print,this,pretty,print,pretty,print
FallbackTypeConverter -> public void setPrettyPrint(boolean prettyPrint);1540108158;Whether the JAXB converter should use pretty print or not (default is true);public void setPrettyPrint(boolean prettyPrint) {_        this.prettyPrint = prettyPrint__    };whether,the,jaxb,converter,should,use,pretty,print,or,not,default,is,true;public,void,set,pretty,print,boolean,pretty,print,this,pretty,print,pretty,print
FallbackTypeConverter -> public void setPrettyPrint(boolean prettyPrint);1540108160;Whether the JAXB converter should use pretty print or not (default is true);public void setPrettyPrint(boolean prettyPrint) {_        this.prettyPrint = prettyPrint__    };whether,the,jaxb,converter,should,use,pretty,print,or,not,default,is,true;public,void,set,pretty,print,boolean,pretty,print,this,pretty,print,pretty,print
FallbackTypeConverter -> public void setPrettyPrint(boolean prettyPrint);1540108161;Whether the JAXB converter should use pretty print or not (default is true);public void setPrettyPrint(boolean prettyPrint) {_        this.prettyPrint = prettyPrint__    };whether,the,jaxb,converter,should,use,pretty,print,or,not,default,is,true;public,void,set,pretty,print,boolean,pretty,print,this,pretty,print,pretty,print
FallbackTypeConverter -> public void setPrettyPrint(boolean prettyPrint);1540108163;Whether the JAXB converter should use pretty print or not (default is true);public void setPrettyPrint(boolean prettyPrint) {_        this.prettyPrint = prettyPrint__    };whether,the,jaxb,converter,should,use,pretty,print,or,not,default,is,true;public,void,set,pretty,print,boolean,pretty,print,this,pretty,print,pretty,print
FallbackTypeConverter -> public void setPrettyPrint(boolean prettyPrint);1548175645;Whether the JAXB converter should use pretty print or not (default is true);public void setPrettyPrint(boolean prettyPrint) {_        this.prettyPrint = prettyPrint__    };whether,the,jaxb,converter,should,use,pretty,print,or,not,default,is,true;public,void,set,pretty,print,boolean,pretty,print,this,pretty,print,pretty,print
FallbackTypeConverter -> protected Object unmarshal(Unmarshaller unmarshaller, Exchange exchange, Object value)         throws JAXBException, UnsupportedEncodingException;1263354477;Unmarshals the given value with the unmarshaller__@param unmarshaller  the unmarshaller_@param exchange the exchange_@param value  the stream to unmarshal (will close it after use, also if exception is thrown)_@return  the value_@throws JAXBException is thrown if an exception occur while unmarshalling_@throws UnsupportedEncodingException;protected Object unmarshal(Unmarshaller unmarshaller, Exchange exchange, Object value)_        throws JAXBException, UnsupportedEncodingException {_        try {_            if (value instanceof InputStream) {_                if (needFiltering(exchange)) {_                    return unmarshaller.unmarshal(new NonXmlFilterReader(new InputStreamReader((InputStream)value, IOConverter.getCharsetName(exchange))))__                }_                return unmarshaller.unmarshal((InputStream)value)__            } else if (value instanceof Reader) {_                Reader reader = (Reader)value__                if (needFiltering(exchange)) {_                    if (!(value instanceof NonXmlFilterReader)) {_                        reader = new NonXmlFilterReader((Reader)value)__                    }_                }_                return unmarshaller.unmarshal(reader)__            } else if (value instanceof Source) {_                return unmarshaller.unmarshal((Source)value)__            }_        } finally {_            if (value instanceof Closeable) {_                ObjectHelper.close((Closeable)value, "Unmarshalling", LOG)__            }_        }_        return null__    };unmarshals,the,given,value,with,the,unmarshaller,param,unmarshaller,the,unmarshaller,param,exchange,the,exchange,param,value,the,stream,to,unmarshal,will,close,it,after,use,also,if,exception,is,thrown,return,the,value,throws,jaxbexception,is,thrown,if,an,exception,occur,while,unmarshalling,throws,unsupported,encoding,exception;protected,object,unmarshal,unmarshaller,unmarshaller,exchange,exchange,object,value,throws,jaxbexception,unsupported,encoding,exception,try,if,value,instanceof,input,stream,if,need,filtering,exchange,return,unmarshaller,unmarshal,new,non,xml,filter,reader,new,input,stream,reader,input,stream,value,ioconverter,get,charset,name,exchange,return,unmarshaller,unmarshal,input,stream,value,else,if,value,instanceof,reader,reader,reader,reader,value,if,need,filtering,exchange,if,value,instanceof,non,xml,filter,reader,reader,new,non,xml,filter,reader,reader,value,return,unmarshaller,unmarshal,reader,else,if,value,instanceof,source,return,unmarshaller,unmarshal,source,value,finally,if,value,instanceof,closeable,object,helper,close,closeable,value,unmarshalling,log,return,null
FallbackTypeConverter -> protected Object unmarshal(Unmarshaller unmarshaller, Exchange exchange, Object value)         throws JAXBException, UnsupportedEncodingException;1274693059;Unmarshals the given value with the unmarshaller__@param unmarshaller  the unmarshaller_@param exchange the exchange_@param value  the stream to unmarshal (will close it after use, also if exception is thrown)_@return  the value_@throws JAXBException is thrown if an exception occur while unmarshalling_@throws UnsupportedEncodingException;protected Object unmarshal(Unmarshaller unmarshaller, Exchange exchange, Object value)_        throws JAXBException, UnsupportedEncodingException {_        try {_            if (value instanceof InputStream) {_                if (needFiltering(exchange)) {_                    return unmarshaller.unmarshal(new NonXmlFilterReader(new InputStreamReader((InputStream)value, IOConverter.getCharsetName(exchange))))__                }_                return unmarshaller.unmarshal((InputStream)value)__            } else if (value instanceof Reader) {_                Reader reader = (Reader)value__                if (needFiltering(exchange)) {_                    if (!(value instanceof NonXmlFilterReader)) {_                        reader = new NonXmlFilterReader((Reader)value)__                    }_                }_                return unmarshaller.unmarshal(reader)__            } else if (value instanceof Source) {_                return unmarshaller.unmarshal((Source)value)__            }_        } finally {_            if (value instanceof Closeable) {_                IOHelper.close((Closeable)value, "Unmarshalling", LOG)__            }_        }_        return null__    };unmarshals,the,given,value,with,the,unmarshaller,param,unmarshaller,the,unmarshaller,param,exchange,the,exchange,param,value,the,stream,to,unmarshal,will,close,it,after,use,also,if,exception,is,thrown,return,the,value,throws,jaxbexception,is,thrown,if,an,exception,occur,while,unmarshalling,throws,unsupported,encoding,exception;protected,object,unmarshal,unmarshaller,unmarshaller,exchange,exchange,object,value,throws,jaxbexception,unsupported,encoding,exception,try,if,value,instanceof,input,stream,if,need,filtering,exchange,return,unmarshaller,unmarshal,new,non,xml,filter,reader,new,input,stream,reader,input,stream,value,ioconverter,get,charset,name,exchange,return,unmarshaller,unmarshal,input,stream,value,else,if,value,instanceof,reader,reader,reader,reader,value,if,need,filtering,exchange,if,value,instanceof,non,xml,filter,reader,reader,new,non,xml,filter,reader,reader,value,return,unmarshaller,unmarshal,reader,else,if,value,instanceof,source,return,unmarshaller,unmarshal,source,value,finally,if,value,instanceof,closeable,iohelper,close,closeable,value,unmarshalling,log,return,null
FallbackTypeConverter -> protected Object unmarshal(Unmarshaller unmarshaller, Exchange exchange, Object value)         throws JAXBException, UnsupportedEncodingException;1292820781;Unmarshals the given value with the unmarshaller__@param unmarshaller  the unmarshaller_@param exchange the exchange_@param value  the stream to unmarshal (will close it after use, also if exception is thrown)_@return  the value_@throws JAXBException is thrown if an exception occur while unmarshalling_@throws UnsupportedEncodingException;protected Object unmarshal(Unmarshaller unmarshaller, Exchange exchange, Object value)_        throws JAXBException, UnsupportedEncodingException {_        try {_            if (value instanceof InputStream) {_                if (needFiltering(exchange)) {_                    return unmarshaller.unmarshal(new NonXmlFilterReader(new InputStreamReader((InputStream)value, IOConverter.getCharsetName(exchange))))__                }_                return unmarshaller.unmarshal((InputStream)value)__            } else if (value instanceof Reader) {_                Reader reader = (Reader)value__                if (needFiltering(exchange)) {_                    if (!(value instanceof NonXmlFilterReader)) {_                        reader = new NonXmlFilterReader((Reader)value)__                    }_                }_                return unmarshaller.unmarshal(reader)__            } else if (value instanceof Source) {_                return unmarshaller.unmarshal((Source)value)__            }_        } finally {_            if (value instanceof Closeable) {_                IOHelper.close((Closeable)value, "Unmarshalling", LOG)__            }_        }_        return null__    };unmarshals,the,given,value,with,the,unmarshaller,param,unmarshaller,the,unmarshaller,param,exchange,the,exchange,param,value,the,stream,to,unmarshal,will,close,it,after,use,also,if,exception,is,thrown,return,the,value,throws,jaxbexception,is,thrown,if,an,exception,occur,while,unmarshalling,throws,unsupported,encoding,exception;protected,object,unmarshal,unmarshaller,unmarshaller,exchange,exchange,object,value,throws,jaxbexception,unsupported,encoding,exception,try,if,value,instanceof,input,stream,if,need,filtering,exchange,return,unmarshaller,unmarshal,new,non,xml,filter,reader,new,input,stream,reader,input,stream,value,ioconverter,get,charset,name,exchange,return,unmarshaller,unmarshal,input,stream,value,else,if,value,instanceof,reader,reader,reader,reader,value,if,need,filtering,exchange,if,value,instanceof,non,xml,filter,reader,reader,new,non,xml,filter,reader,reader,value,return,unmarshaller,unmarshal,reader,else,if,value,instanceof,source,return,unmarshaller,unmarshal,source,value,finally,if,value,instanceof,closeable,iohelper,close,closeable,value,unmarshalling,log,return,null
FallbackTypeConverter -> protected Object unmarshal(Unmarshaller unmarshaller, Exchange exchange, Object value)         throws JAXBException, UnsupportedEncodingException;1296495624;Unmarshals the given value with the unmarshaller__@param unmarshaller  the unmarshaller_@param exchange the exchange_@param value  the stream to unmarshal (will close it after use, also if exception is thrown)_@return  the value_@throws JAXBException is thrown if an exception occur while unmarshalling_@throws UnsupportedEncodingException;protected Object unmarshal(Unmarshaller unmarshaller, Exchange exchange, Object value)_        throws JAXBException, UnsupportedEncodingException {_        try {_            if (value instanceof InputStream) {_                if (needFiltering(exchange)) {_                    return unmarshaller.unmarshal(new NonXmlFilterReader(new InputStreamReader((InputStream)value, IOConverter.getCharsetName(exchange))))__                }_                return unmarshaller.unmarshal((InputStream)value)__            } else if (value instanceof Reader) {_                Reader reader = (Reader)value__                if (needFiltering(exchange)) {_                    if (!(value instanceof NonXmlFilterReader)) {_                        reader = new NonXmlFilterReader((Reader)value)__                    }_                }_                return unmarshaller.unmarshal(reader)__            } else if (value instanceof Source) {_                return unmarshaller.unmarshal((Source)value)__            }_        } finally {_            if (value instanceof Closeable) {_                IOHelper.close((Closeable)value, "Unmarshalling", LOG)__            }_        }_        return null__    };unmarshals,the,given,value,with,the,unmarshaller,param,unmarshaller,the,unmarshaller,param,exchange,the,exchange,param,value,the,stream,to,unmarshal,will,close,it,after,use,also,if,exception,is,thrown,return,the,value,throws,jaxbexception,is,thrown,if,an,exception,occur,while,unmarshalling,throws,unsupported,encoding,exception;protected,object,unmarshal,unmarshaller,unmarshaller,exchange,exchange,object,value,throws,jaxbexception,unsupported,encoding,exception,try,if,value,instanceof,input,stream,if,need,filtering,exchange,return,unmarshaller,unmarshal,new,non,xml,filter,reader,new,input,stream,reader,input,stream,value,ioconverter,get,charset,name,exchange,return,unmarshaller,unmarshal,input,stream,value,else,if,value,instanceof,reader,reader,reader,reader,value,if,need,filtering,exchange,if,value,instanceof,non,xml,filter,reader,reader,new,non,xml,filter,reader,reader,value,return,unmarshaller,unmarshal,reader,else,if,value,instanceof,source,return,unmarshaller,unmarshal,source,value,finally,if,value,instanceof,closeable,iohelper,close,closeable,value,unmarshalling,log,return,null
FallbackTypeConverter -> protected Object unmarshal(Unmarshaller unmarshaller, Exchange exchange, Object value)         throws JAXBException, UnsupportedEncodingException;1297975937;Unmarshals the given value with the unmarshaller__@param unmarshaller  the unmarshaller_@param exchange the exchange_@param value  the stream to unmarshal (will close it after use, also if exception is thrown)_@return  the value_@throws JAXBException is thrown if an exception occur while unmarshalling_@throws UnsupportedEncodingException;protected Object unmarshal(Unmarshaller unmarshaller, Exchange exchange, Object value)_        throws JAXBException, UnsupportedEncodingException {_        try {_            if (value instanceof InputStream) {_                if (needFiltering(exchange)) {_                    return unmarshaller.unmarshal(new NonXmlFilterReader(new InputStreamReader((InputStream)value, IOConverter.getCharsetName(exchange))))__                }_                return unmarshaller.unmarshal((InputStream)value)__            } else if (value instanceof Reader) {_                Reader reader = (Reader)value__                if (needFiltering(exchange)) {_                    if (!(value instanceof NonXmlFilterReader)) {_                        reader = new NonXmlFilterReader((Reader)value)__                    }_                }_                return unmarshaller.unmarshal(reader)__            } else if (value instanceof Source) {_                return unmarshaller.unmarshal((Source)value)__            }_        } finally {_            if (value instanceof Closeable) {_                IOHelper.close((Closeable)value, "Unmarshalling", LOG)__            }_        }_        return null__    };unmarshals,the,given,value,with,the,unmarshaller,param,unmarshaller,the,unmarshaller,param,exchange,the,exchange,param,value,the,stream,to,unmarshal,will,close,it,after,use,also,if,exception,is,thrown,return,the,value,throws,jaxbexception,is,thrown,if,an,exception,occur,while,unmarshalling,throws,unsupported,encoding,exception;protected,object,unmarshal,unmarshaller,unmarshaller,exchange,exchange,object,value,throws,jaxbexception,unsupported,encoding,exception,try,if,value,instanceof,input,stream,if,need,filtering,exchange,return,unmarshaller,unmarshal,new,non,xml,filter,reader,new,input,stream,reader,input,stream,value,ioconverter,get,charset,name,exchange,return,unmarshaller,unmarshal,input,stream,value,else,if,value,instanceof,reader,reader,reader,reader,value,if,need,filtering,exchange,if,value,instanceof,non,xml,filter,reader,reader,new,non,xml,filter,reader,reader,value,return,unmarshaller,unmarshal,reader,else,if,value,instanceof,source,return,unmarshaller,unmarshal,source,value,finally,if,value,instanceof,closeable,iohelper,close,closeable,value,unmarshalling,log,return,null
FallbackTypeConverter -> protected Object unmarshal(Unmarshaller unmarshaller, Object value) throws JAXBException;1224187668;Unmarshals__@param unmarshaller  the unmarshaller_@param value  the stream to unarmashal (will close it after use, also if exception is thrown)_@return  the value_@throws JAXBException is thrown if an exception occur while unmarshalling;protected Object unmarshal(Unmarshaller unmarshaller, Object value) throws JAXBException {_        try {_            if (value instanceof InputStream) {_                return unmarshaller.unmarshal((InputStream) value)__            } else if (value instanceof Reader) {_                return unmarshaller.unmarshal((Reader) value)__            } else if (value instanceof Source) {_                return unmarshaller.unmarshal((Source) value)__            }_        } finally {_            if (value instanceof Closeable) {_                ObjectHelper.close((Closeable) value, "Unmarshalling", LOG)__            }_        }_        return null__    };unmarshals,param,unmarshaller,the,unmarshaller,param,value,the,stream,to,unarmashal,will,close,it,after,use,also,if,exception,is,thrown,return,the,value,throws,jaxbexception,is,thrown,if,an,exception,occur,while,unmarshalling;protected,object,unmarshal,unmarshaller,unmarshaller,object,value,throws,jaxbexception,try,if,value,instanceof,input,stream,return,unmarshaller,unmarshal,input,stream,value,else,if,value,instanceof,reader,return,unmarshaller,unmarshal,reader,value,else,if,value,instanceof,source,return,unmarshaller,unmarshal,source,value,finally,if,value,instanceof,closeable,object,helper,close,closeable,value,unmarshalling,log,return,null
FallbackTypeConverter -> protected Object unmarshal(Unmarshaller unmarshaller, Object value) throws JAXBException;1224190317;Unmarshals the given value with the unmarshaller__@param unmarshaller  the unmarshaller_@param value  the stream to unmarshal (will close it after use, also if exception is thrown)_@return  the value_@throws JAXBException is thrown if an exception occur while unmarshalling;protected Object unmarshal(Unmarshaller unmarshaller, Object value) throws JAXBException {_        try {_            if (value instanceof InputStream) {_                return unmarshaller.unmarshal((InputStream) value)__            } else if (value instanceof Reader) {_                return unmarshaller.unmarshal((Reader) value)__            } else if (value instanceof Source) {_                return unmarshaller.unmarshal((Source) value)__            }_        } finally {_            if (value instanceof Closeable) {_                ObjectHelper.close((Closeable) value, "Unmarshalling", LOG)__            }_        }_        return null__    };unmarshals,the,given,value,with,the,unmarshaller,param,unmarshaller,the,unmarshaller,param,value,the,stream,to,unmarshal,will,close,it,after,use,also,if,exception,is,thrown,return,the,value,throws,jaxbexception,is,thrown,if,an,exception,occur,while,unmarshalling;protected,object,unmarshal,unmarshaller,unmarshaller,object,value,throws,jaxbexception,try,if,value,instanceof,input,stream,return,unmarshaller,unmarshal,input,stream,value,else,if,value,instanceof,reader,return,unmarshaller,unmarshal,reader,value,else,if,value,instanceof,source,return,unmarshaller,unmarshal,source,value,finally,if,value,instanceof,closeable,object,helper,close,closeable,value,unmarshalling,log,return,null
FallbackTypeConverter -> protected Object unmarshal(Unmarshaller unmarshaller, Object value) throws JAXBException;1233669670;Unmarshals the given value with the unmarshaller__@param unmarshaller  the unmarshaller_@param value  the stream to unmarshal (will close it after use, also if exception is thrown)_@return  the value_@throws JAXBException is thrown if an exception occur while unmarshalling;protected Object unmarshal(Unmarshaller unmarshaller, Object value) throws JAXBException {_        try {_            if (value instanceof InputStream) {_                return unmarshaller.unmarshal((InputStream) value)__            } else if (value instanceof Reader) {_                return unmarshaller.unmarshal((Reader) value)__            } else if (value instanceof Source) {_                return unmarshaller.unmarshal((Source) value)__            }_        } finally {_            if (value instanceof Closeable) {_                ObjectHelper.close((Closeable) value, "Unmarshalling", LOG)__            }_        }_        return null__    };unmarshals,the,given,value,with,the,unmarshaller,param,unmarshaller,the,unmarshaller,param,value,the,stream,to,unmarshal,will,close,it,after,use,also,if,exception,is,thrown,return,the,value,throws,jaxbexception,is,thrown,if,an,exception,occur,while,unmarshalling;protected,object,unmarshal,unmarshaller,unmarshaller,object,value,throws,jaxbexception,try,if,value,instanceof,input,stream,return,unmarshaller,unmarshal,input,stream,value,else,if,value,instanceof,reader,return,unmarshaller,unmarshal,reader,value,else,if,value,instanceof,source,return,unmarshaller,unmarshal,source,value,finally,if,value,instanceof,closeable,object,helper,close,closeable,value,unmarshalling,log,return,null
FallbackTypeConverter -> protected Object unmarshal(Unmarshaller unmarshaller, Object value) throws JAXBException;1235724785;Unmarshals the given value with the unmarshaller__@param unmarshaller  the unmarshaller_@param value  the stream to unmarshal (will close it after use, also if exception is thrown)_@return  the value_@throws JAXBException is thrown if an exception occur while unmarshalling;protected Object unmarshal(Unmarshaller unmarshaller, Object value) throws JAXBException {_        try {_            if (value instanceof InputStream) {_                return unmarshaller.unmarshal((InputStream) value)__            } else if (value instanceof Reader) {_                return unmarshaller.unmarshal((Reader) value)__            } else if (value instanceof Source) {_                return unmarshaller.unmarshal((Source) value)__            }_        } finally {_            if (value instanceof Closeable) {_                ObjectHelper.close((Closeable) value, "Unmarshalling", LOG)__            }_        }_        return null__    };unmarshals,the,given,value,with,the,unmarshaller,param,unmarshaller,the,unmarshaller,param,value,the,stream,to,unmarshal,will,close,it,after,use,also,if,exception,is,thrown,return,the,value,throws,jaxbexception,is,thrown,if,an,exception,occur,while,unmarshalling;protected,object,unmarshal,unmarshaller,unmarshaller,object,value,throws,jaxbexception,try,if,value,instanceof,input,stream,return,unmarshaller,unmarshal,input,stream,value,else,if,value,instanceof,reader,return,unmarshaller,unmarshal,reader,value,else,if,value,instanceof,source,return,unmarshaller,unmarshal,source,value,finally,if,value,instanceof,closeable,object,helper,close,closeable,value,unmarshalling,log,return,null
FallbackTypeConverter -> protected Object unmarshal(Unmarshaller unmarshaller, Object value) throws JAXBException;1235985078;Unmarshals the given value with the unmarshaller__@param unmarshaller  the unmarshaller_@param value  the stream to unmarshal (will close it after use, also if exception is thrown)_@return  the value_@throws JAXBException is thrown if an exception occur while unmarshalling;protected Object unmarshal(Unmarshaller unmarshaller, Object value) throws JAXBException {_        try {_            if (value instanceof InputStream) {_                return unmarshaller.unmarshal((InputStream) value)__            } else if (value instanceof Reader) {_                return unmarshaller.unmarshal((Reader) value)__            } else if (value instanceof Source) {_                return unmarshaller.unmarshal((Source) value)__            }_        } finally {_            if (value instanceof Closeable) {_                ObjectHelper.close((Closeable) value, "Unmarshalling", LOG)__            }_        }_        return null__    };unmarshals,the,given,value,with,the,unmarshaller,param,unmarshaller,the,unmarshaller,param,value,the,stream,to,unmarshal,will,close,it,after,use,also,if,exception,is,thrown,return,the,value,throws,jaxbexception,is,thrown,if,an,exception,occur,while,unmarshalling;protected,object,unmarshal,unmarshaller,unmarshaller,object,value,throws,jaxbexception,try,if,value,instanceof,input,stream,return,unmarshaller,unmarshal,input,stream,value,else,if,value,instanceof,reader,return,unmarshaller,unmarshal,reader,value,else,if,value,instanceof,source,return,unmarshaller,unmarshal,source,value,finally,if,value,instanceof,closeable,object,helper,close,closeable,value,unmarshalling,log,return,null
FallbackTypeConverter -> protected Object unmarshal(Unmarshaller unmarshaller, Object value) throws JAXBException;1237457114;Unmarshals the given value with the unmarshaller__@param unmarshaller  the unmarshaller_@param value  the stream to unmarshal (will close it after use, also if exception is thrown)_@return  the value_@throws JAXBException is thrown if an exception occur while unmarshalling;protected Object unmarshal(Unmarshaller unmarshaller, Object value) throws JAXBException {_        try {_            if (value instanceof InputStream) {_                return unmarshaller.unmarshal((InputStream) value)__            } else if (value instanceof Reader) {_                return unmarshaller.unmarshal((Reader) value)__            } else if (value instanceof Source) {_                return unmarshaller.unmarshal((Source) value)__            }_        } finally {_            if (value instanceof Closeable) {_                ObjectHelper.close((Closeable) value, "Unmarshalling", LOG)__            }_        }_        return null__    };unmarshals,the,given,value,with,the,unmarshaller,param,unmarshaller,the,unmarshaller,param,value,the,stream,to,unmarshal,will,close,it,after,use,also,if,exception,is,thrown,return,the,value,throws,jaxbexception,is,thrown,if,an,exception,occur,while,unmarshalling;protected,object,unmarshal,unmarshaller,unmarshaller,object,value,throws,jaxbexception,try,if,value,instanceof,input,stream,return,unmarshaller,unmarshal,input,stream,value,else,if,value,instanceof,reader,return,unmarshaller,unmarshal,reader,value,else,if,value,instanceof,source,return,unmarshaller,unmarshal,source,value,finally,if,value,instanceof,closeable,object,helper,close,closeable,value,unmarshalling,log,return,null
FallbackTypeConverter -> protected Object unmarshal(Unmarshaller unmarshaller, Object value) throws JAXBException;1237464433;Unmarshals the given value with the unmarshaller__@param unmarshaller  the unmarshaller_@param value  the stream to unmarshal (will close it after use, also if exception is thrown)_@return  the value_@throws JAXBException is thrown if an exception occur while unmarshalling;protected Object unmarshal(Unmarshaller unmarshaller, Object value) throws JAXBException {_        try {_            if (value instanceof InputStream) {_                return unmarshaller.unmarshal((InputStream) value)__            } else if (value instanceof Reader) {_                return unmarshaller.unmarshal((Reader) value)__            } else if (value instanceof Source) {_                return unmarshaller.unmarshal((Source) value)__            }_        } finally {_            if (value instanceof Closeable) {_                ObjectHelper.close((Closeable) value, "Unmarshalling", LOG)__            }_        }_        return null__    };unmarshals,the,given,value,with,the,unmarshaller,param,unmarshaller,the,unmarshaller,param,value,the,stream,to,unmarshal,will,close,it,after,use,also,if,exception,is,thrown,return,the,value,throws,jaxbexception,is,thrown,if,an,exception,occur,while,unmarshalling;protected,object,unmarshal,unmarshaller,unmarshaller,object,value,throws,jaxbexception,try,if,value,instanceof,input,stream,return,unmarshaller,unmarshal,input,stream,value,else,if,value,instanceof,reader,return,unmarshaller,unmarshal,reader,value,else,if,value,instanceof,source,return,unmarshaller,unmarshal,source,value,finally,if,value,instanceof,closeable,object,helper,close,closeable,value,unmarshalling,log,return,null
FallbackTypeConverter -> protected Object unmarshal(Unmarshaller unmarshaller, Object value) throws JAXBException;1257878381;Unmarshals the given value with the unmarshaller__@param unmarshaller  the unmarshaller_@param value  the stream to unmarshal (will close it after use, also if exception is thrown)_@return  the value_@throws JAXBException is thrown if an exception occur while unmarshalling;protected Object unmarshal(Unmarshaller unmarshaller, Object value) throws JAXBException {_        try {_            if (value instanceof InputStream) {_                return unmarshaller.unmarshal((InputStream) value)__            } else if (value instanceof Reader) {_                return unmarshaller.unmarshal((Reader) value)__            } else if (value instanceof Source) {_                return unmarshaller.unmarshal((Source) value)__            }_        } finally {_            if (value instanceof Closeable) {_                ObjectHelper.close((Closeable) value, "Unmarshalling", LOG)__            }_        }_        return null__    };unmarshals,the,given,value,with,the,unmarshaller,param,unmarshaller,the,unmarshaller,param,value,the,stream,to,unmarshal,will,close,it,after,use,also,if,exception,is,thrown,return,the,value,throws,jaxbexception,is,thrown,if,an,exception,occur,while,unmarshalling;protected,object,unmarshal,unmarshaller,unmarshaller,object,value,throws,jaxbexception,try,if,value,instanceof,input,stream,return,unmarshaller,unmarshal,input,stream,value,else,if,value,instanceof,reader,return,unmarshaller,unmarshal,reader,value,else,if,value,instanceof,source,return,unmarshaller,unmarshal,source,value,finally,if,value,instanceof,closeable,object,helper,close,closeable,value,unmarshalling,log,return,null
FallbackTypeConverter -> protected Object unmarshal(Unmarshaller unmarshaller, Object value) throws JAXBException;1262691077;Unmarshals the given value with the unmarshaller__@param unmarshaller  the unmarshaller_@param value  the stream to unmarshal (will close it after use, also if exception is thrown)_@return  the value_@throws JAXBException is thrown if an exception occur while unmarshalling;protected Object unmarshal(Unmarshaller unmarshaller, Object value) throws JAXBException {_        try {_            if (value instanceof InputStream) {_                return unmarshaller.unmarshal((InputStream) value)__            } else if (value instanceof Reader) {_                JaxbFilterReader filterReader__                if (value instanceof JaxbFilterReader) {_                    filterReader = (JaxbFilterReader) value__                } else {_                    filterReader = new JaxbFilterReader((Reader)value)__                }_                return unmarshaller.unmarshal(filterReader)__            } else if (value instanceof Source) {_                return unmarshaller.unmarshal((Source) value)__            }_        } finally {_            if (value instanceof Closeable) {_                ObjectHelper.close((Closeable) value, "Unmarshalling", LOG)__            }_        }_        return null__    };unmarshals,the,given,value,with,the,unmarshaller,param,unmarshaller,the,unmarshaller,param,value,the,stream,to,unmarshal,will,close,it,after,use,also,if,exception,is,thrown,return,the,value,throws,jaxbexception,is,thrown,if,an,exception,occur,while,unmarshalling;protected,object,unmarshal,unmarshaller,unmarshaller,object,value,throws,jaxbexception,try,if,value,instanceof,input,stream,return,unmarshaller,unmarshal,input,stream,value,else,if,value,instanceof,reader,jaxb,filter,reader,filter,reader,if,value,instanceof,jaxb,filter,reader,filter,reader,jaxb,filter,reader,value,else,filter,reader,new,jaxb,filter,reader,reader,value,return,unmarshaller,unmarshal,filter,reader,else,if,value,instanceof,source,return,unmarshaller,unmarshal,source,value,finally,if,value,instanceof,closeable,object,helper,close,closeable,value,unmarshalling,log,return,null
FallbackTypeConverter -> protected Object unmarshal(Unmarshaller unmarshaller, Object value) throws JAXBException;1263047103;Unmarshals the given value with the unmarshaller__@param unmarshaller  the unmarshaller_@param value  the stream to unmarshal (will close it after use, also if exception is thrown)_@return  the value_@throws JAXBException is thrown if an exception occur while unmarshalling;protected Object unmarshal(Unmarshaller unmarshaller, Object value) throws JAXBException {_        try {_            if (value instanceof InputStream) {_                return unmarshaller.unmarshal((InputStream) value)__            } else if (value instanceof Reader) {_                NonXmlFilterReader filterReader__                if (value instanceof NonXmlFilterReader) {_                    filterReader = (NonXmlFilterReader) value__                } else {_                    filterReader = new NonXmlFilterReader((Reader)value)__                }_                return unmarshaller.unmarshal(filterReader)__            } else if (value instanceof Source) {_                return unmarshaller.unmarshal((Source) value)__            }_        } finally {_            if (value instanceof Closeable) {_                ObjectHelper.close((Closeable) value, "Unmarshalling", LOG)__            }_        }_        return null__    };unmarshals,the,given,value,with,the,unmarshaller,param,unmarshaller,the,unmarshaller,param,value,the,stream,to,unmarshal,will,close,it,after,use,also,if,exception,is,thrown,return,the,value,throws,jaxbexception,is,thrown,if,an,exception,occur,while,unmarshalling;protected,object,unmarshal,unmarshaller,unmarshaller,object,value,throws,jaxbexception,try,if,value,instanceof,input,stream,return,unmarshaller,unmarshal,input,stream,value,else,if,value,instanceof,reader,non,xml,filter,reader,filter,reader,if,value,instanceof,non,xml,filter,reader,filter,reader,non,xml,filter,reader,value,else,filter,reader,new,non,xml,filter,reader,reader,value,return,unmarshaller,unmarshal,filter,reader,else,if,value,instanceof,source,return,unmarshaller,unmarshal,source,value,finally,if,value,instanceof,closeable,object,helper,close,closeable,value,unmarshalling,log,return,null
FallbackTypeConverter -> protected Object unmarshal(Unmarshaller unmarshaller, Object value) throws JAXBException;1263181544;Unmarshals the given value with the unmarshaller__@param unmarshaller  the unmarshaller_@param value  the stream to unmarshal (will close it after use, also if exception is thrown)_@return  the value_@throws JAXBException is thrown if an exception occur while unmarshalling;protected Object unmarshal(Unmarshaller unmarshaller, Object value) throws JAXBException {_        try {_            if (value instanceof InputStream) {_                return unmarshaller.unmarshal((InputStream) value)__            } else if (value instanceof Reader) {_                _                NonXmlFilterReader filterReader__                if (value instanceof NonXmlFilterReader) {_                    filterReader = (NonXmlFilterReader) value__                } else {_                    filterReader = new NonXmlFilterReader((Reader)value)__                }_                return unmarshaller.unmarshal(filterReader)__            } else if (value instanceof Source) {_                return unmarshaller.unmarshal((Source) value)__            }_        } finally {_            if (value instanceof Closeable) {_                ObjectHelper.close((Closeable) value, "Unmarshalling", LOG)__            }_        }_        return null__    };unmarshals,the,given,value,with,the,unmarshaller,param,unmarshaller,the,unmarshaller,param,value,the,stream,to,unmarshal,will,close,it,after,use,also,if,exception,is,thrown,return,the,value,throws,jaxbexception,is,thrown,if,an,exception,occur,while,unmarshalling;protected,object,unmarshal,unmarshaller,unmarshaller,object,value,throws,jaxbexception,try,if,value,instanceof,input,stream,return,unmarshaller,unmarshal,input,stream,value,else,if,value,instanceof,reader,non,xml,filter,reader,filter,reader,if,value,instanceof,non,xml,filter,reader,filter,reader,non,xml,filter,reader,value,else,filter,reader,new,non,xml,filter,reader,reader,value,return,unmarshaller,unmarshal,filter,reader,else,if,value,instanceof,source,return,unmarshaller,unmarshal,source,value,finally,if,value,instanceof,closeable,object,helper,close,closeable,value,unmarshalling,log,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException;1185553503;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException {_        JAXBContext context = createContext(type)__        Unmarshaller unmarshaller = context.createUnmarshaller()___        if (parentTypeConverter != null) {_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshaller.unmarshal(inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshaller.unmarshal(reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshaller.unmarshal(source)__                return type.cast(unmarshalled)__            }_        }_        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream) {_            Object unmarshalled = unmarshaller.unmarshal((InputStream) value)__            return type.cast(unmarshalled)__        }_        if (value instanceof Reader) {_            Object unmarshalled = unmarshaller.unmarshal((Reader) value)__            return type.cast(unmarshalled)__        }_        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,object,value,throws,jaxbexception,jaxbcontext,context,create,context,type,unmarshaller,unmarshaller,context,create,unmarshaller,if,parent,type,converter,null,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshaller,unmarshal,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshaller,unmarshal,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshaller,unmarshal,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,object,unmarshalled,unmarshaller,unmarshal,input,stream,value,return,type,cast,unmarshalled,if,value,instanceof,reader,object,unmarshalled,unmarshaller,unmarshal,reader,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException;1185561616;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException {_        JAXBContext context = createContext(type)__        Unmarshaller unmarshaller = context.createUnmarshaller()___        if (parentTypeConverter != null) {_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshaller.unmarshal(inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshaller.unmarshal(reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshaller.unmarshal(source)__                return type.cast(unmarshalled)__            }_        }_        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream) {_            Object unmarshalled = unmarshaller.unmarshal((InputStream) value)__            return type.cast(unmarshalled)__        }_        if (value instanceof Reader) {_            Object unmarshalled = unmarshaller.unmarshal((Reader) value)__            return type.cast(unmarshalled)__        }_        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,object,value,throws,jaxbexception,jaxbcontext,context,create,context,type,unmarshaller,unmarshaller,context,create,unmarshaller,if,parent,type,converter,null,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshaller,unmarshal,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshaller,unmarshal,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshaller,unmarshal,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,object,unmarshalled,unmarshaller,unmarshal,input,stream,value,return,type,cast,unmarshalled,if,value,instanceof,reader,object,unmarshalled,unmarshaller,unmarshal,reader,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException;1186522380;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException {_        JAXBContext context = createContext(type)__        Unmarshaller unmarshaller = context.createUnmarshaller()___        if (parentTypeConverter != null) {_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshaller.unmarshal(inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshaller.unmarshal(reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshaller.unmarshal(source)__                return type.cast(unmarshalled)__            }_        }_        if (value instanceof String) {_            value = new StringReader((String)value)__        }_        if (value instanceof InputStream) {_            Object unmarshalled = unmarshaller.unmarshal((InputStream)value)__            return type.cast(unmarshalled)__        }_        if (value instanceof Reader) {_            Object unmarshalled = unmarshaller.unmarshal((Reader)value)__            return type.cast(unmarshalled)__        }_        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,object,value,throws,jaxbexception,jaxbcontext,context,create,context,type,unmarshaller,unmarshaller,context,create,unmarshaller,if,parent,type,converter,null,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshaller,unmarshal,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshaller,unmarshal,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshaller,unmarshal,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,object,unmarshalled,unmarshaller,unmarshal,input,stream,value,return,type,cast,unmarshalled,if,value,instanceof,reader,object,unmarshalled,unmarshaller,unmarshal,reader,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException;1186682570;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException {_        JAXBContext context = createContext(type)__        Unmarshaller unmarshaller = context.createUnmarshaller()___        if (parentTypeConverter != null) {_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshaller.unmarshal(inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshaller.unmarshal(reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshaller.unmarshal(source)__                return type.cast(unmarshalled)__            }_        }_        if (value instanceof String) {_            value = new StringReader((String)value)__        }_        if (value instanceof InputStream) {_            Object unmarshalled = unmarshaller.unmarshal((InputStream)value)__            return type.cast(unmarshalled)__        }_        if (value instanceof Reader) {_            Object unmarshalled = unmarshaller.unmarshal((Reader)value)__            return type.cast(unmarshalled)__        }_        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,object,value,throws,jaxbexception,jaxbcontext,context,create,context,type,unmarshaller,unmarshaller,context,create,unmarshaller,if,parent,type,converter,null,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshaller,unmarshal,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshaller,unmarshal,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshaller,unmarshal,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,object,unmarshalled,unmarshaller,unmarshal,input,stream,value,return,type,cast,unmarshalled,if,value,instanceof,reader,object,unmarshalled,unmarshaller,unmarshal,reader,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException;1187534499;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException {_        JAXBContext context = createContext(type)__        Unmarshaller unmarshaller = context.createUnmarshaller()___        if (parentTypeConverter != null) {_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshaller.unmarshal(inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshaller.unmarshal(reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshaller.unmarshal(source)__                return type.cast(unmarshalled)__            }_        }_        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream) {_            Object unmarshalled = unmarshaller.unmarshal((InputStream) value)__            return type.cast(unmarshalled)__        }_        if (value instanceof Reader) {_            Object unmarshalled = unmarshaller.unmarshal((Reader) value)__            return type.cast(unmarshalled)__        }_        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,object,value,throws,jaxbexception,jaxbcontext,context,create,context,type,unmarshaller,unmarshaller,context,create,unmarshaller,if,parent,type,converter,null,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshaller,unmarshal,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshaller,unmarshal,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshaller,unmarshal,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,object,unmarshalled,unmarshaller,unmarshal,input,stream,value,return,type,cast,unmarshalled,if,value,instanceof,reader,object,unmarshalled,unmarshaller,unmarshal,reader,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException;1203830000;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException {_        JAXBContext context = createContext(type)__        Unmarshaller unmarshaller = context.createUnmarshaller()___        if (parentTypeConverter != null) {_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshaller.unmarshal(inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshaller.unmarshal(reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshaller.unmarshal(source)__                return type.cast(unmarshalled)__            }_        }_        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream) {_            Object unmarshalled = unmarshaller.unmarshal((InputStream) value)__            return type.cast(unmarshalled)__        }_        if (value instanceof Reader) {_            Object unmarshalled = unmarshaller.unmarshal((Reader) value)__            return type.cast(unmarshalled)__        }_        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,object,value,throws,jaxbexception,jaxbcontext,context,create,context,type,unmarshaller,unmarshaller,context,create,unmarshaller,if,parent,type,converter,null,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshaller,unmarshal,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshaller,unmarshal,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshaller,unmarshal,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,object,unmarshalled,unmarshaller,unmarshal,input,stream,value,return,type,cast,unmarshalled,if,value,instanceof,reader,object,unmarshalled,unmarshaller,unmarshal,reader,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException;1206431352;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException {_        JAXBContext context = createContext(type)__        Unmarshaller unmarshaller = context.createUnmarshaller()___        if (parentTypeConverter != null) {_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshaller.unmarshal(inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshaller.unmarshal(reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshaller.unmarshal(source)__                return type.cast(unmarshalled)__            }_        }_        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream) {_            Object unmarshalled = unmarshaller.unmarshal((InputStream) value)__            return type.cast(unmarshalled)__        }_        if (value instanceof Reader) {_            Object unmarshalled = unmarshaller.unmarshal((Reader) value)__            return type.cast(unmarshalled)__        }_        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,object,value,throws,jaxbexception,jaxbcontext,context,create,context,type,unmarshaller,unmarshaller,context,create,unmarshaller,if,parent,type,converter,null,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshaller,unmarshal,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshaller,unmarshal,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshaller,unmarshal,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,object,unmarshalled,unmarshaller,unmarshal,input,stream,value,return,type,cast,unmarshalled,if,value,instanceof,reader,object,unmarshalled,unmarshaller,unmarshal,reader,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException;1219277581;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException {_        JAXBContext context = createContext(type)__        Unmarshaller unmarshaller = context.createUnmarshaller()___        if (parentTypeConverter != null) {_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshaller.unmarshal(inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshaller.unmarshal(reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshaller.unmarshal(source)__                return type.cast(unmarshalled)__            }_        }_        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream) {_            Object unmarshalled = unmarshaller.unmarshal((InputStream) value)__            return type.cast(unmarshalled)__        }_        if (value instanceof Reader) {_            Object unmarshalled = unmarshaller.unmarshal((Reader) value)__            return type.cast(unmarshalled)__        }_        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,object,value,throws,jaxbexception,jaxbcontext,context,create,context,type,unmarshaller,unmarshaller,context,create,unmarshaller,if,parent,type,converter,null,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshaller,unmarshal,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshaller,unmarshal,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshaller,unmarshal,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,object,unmarshalled,unmarshaller,unmarshal,input,stream,value,return,type,cast,unmarshalled,if,value,instanceof,reader,object,unmarshalled,unmarshaller,unmarshal,reader,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException;1219289630;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException {_        JAXBContext context = createContext(type)__        Unmarshaller unmarshaller = context.createUnmarshaller()___        if (parentTypeConverter != null) {_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshaller.unmarshal(inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshaller.unmarshal(reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshaller.unmarshal(source)__                return type.cast(unmarshalled)__            }_        }_        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream) {_            Object unmarshalled = unmarshaller.unmarshal((InputStream) value)__            return type.cast(unmarshalled)__        }_        if (value instanceof Reader) {_            Object unmarshalled = unmarshaller.unmarshal((Reader) value)__            return type.cast(unmarshalled)__        }_        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,object,value,throws,jaxbexception,jaxbcontext,context,create,context,type,unmarshaller,unmarshaller,context,create,unmarshaller,if,parent,type,converter,null,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshaller,unmarshal,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshaller,unmarshal,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshaller,unmarshal,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,object,unmarshalled,unmarshaller,unmarshal,input,stream,value,return,type,cast,unmarshalled,if,value,instanceof,reader,object,unmarshalled,unmarshaller,unmarshal,reader,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException;1222332323;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException {_        JAXBContext context = createContext(type)__        Unmarshaller unmarshaller = context.createUnmarshaller()___        if (parentTypeConverter != null) {_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshaller.unmarshal(inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshaller.unmarshal(reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshaller.unmarshal(source)__                return type.cast(unmarshalled)__            }_        }_        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream) {_            Object unmarshalled = unmarshaller.unmarshal((InputStream) value)__            return type.cast(unmarshalled)__        }_        if (value instanceof Reader) {_            Object unmarshalled = unmarshaller.unmarshal((Reader) value)__            return type.cast(unmarshalled)__        }_        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,object,value,throws,jaxbexception,jaxbcontext,context,create,context,type,unmarshaller,unmarshaller,context,create,unmarshaller,if,parent,type,converter,null,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshaller,unmarshal,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshaller,unmarshal,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshaller,unmarshal,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,object,unmarshalled,unmarshaller,unmarshal,input,stream,value,return,type,cast,unmarshalled,if,value,instanceof,reader,object,unmarshalled,unmarshaller,unmarshal,reader,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException;1224187668;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException {_        JAXBContext context = createContext(type)__        Unmarshaller unmarshaller = context.createUnmarshaller()___        if (parentTypeConverter != null) {_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,object,value,throws,jaxbexception,jaxbcontext,context,create,context,type,unmarshaller,unmarshaller,context,create,unmarshaller,if,parent,type,converter,null,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException;1224190317;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException {_        JAXBContext context = createContext(type)__        Unmarshaller unmarshaller = context.createUnmarshaller()___        if (parentTypeConverter != null) {_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,object,value,throws,jaxbexception,jaxbcontext,context,create,context,type,unmarshaller,unmarshaller,context,create,unmarshaller,if,parent,type,converter,null,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException;1233669670;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException {_        JAXBContext context = createContext(type)__        Unmarshaller unmarshaller = context.createUnmarshaller()___        if (parentTypeConverter != null) {_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,object,value,throws,jaxbexception,jaxbcontext,context,create,context,type,unmarshaller,unmarshaller,context,create,unmarshaller,if,parent,type,converter,null,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException;1235724785;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException {_        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        JAXBContext context = createContext(type)__        _        Unmarshaller unmarshaller = context.createUnmarshaller()___        if (parentTypeConverter != null) {_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,object,value,throws,jaxbexception,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,jaxbcontext,context,create,context,type,unmarshaller,unmarshaller,context,create,unmarshaller,if,parent,type,converter,null,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException;1235985078;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException {_        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        JAXBContext context = createContext(type)__        _        Unmarshaller unmarshaller = context.createUnmarshaller()___        if (parentTypeConverter != null) {_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,object,value,throws,jaxbexception,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,jaxbcontext,context,create,context,type,unmarshaller,unmarshaller,context,create,unmarshaller,if,parent,type,converter,null,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException;1237457114;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException {_        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        JAXBContext context = createContext(type)__        _        Unmarshaller unmarshaller = context.createUnmarshaller()___        if (parentTypeConverter != null) {_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,object,value,throws,jaxbexception,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,jaxbcontext,context,create,context,type,unmarshaller,unmarshaller,context,create,unmarshaller,if,parent,type,converter,null,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException;1237464433;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException {_        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        JAXBContext context = createContext(type)__        _        Unmarshaller unmarshaller = context.createUnmarshaller()___        if (parentTypeConverter != null) {_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,object,value,throws,jaxbexception,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,jaxbcontext,context,create,context,type,unmarshaller,unmarshaller,context,create,unmarshaller,if,parent,type,converter,null,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException;1257878381;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException {_        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        JAXBContext context = createContext(type)__        _        Unmarshaller unmarshaller = context.createUnmarshaller()___        if (parentTypeConverter != null) {_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,object,value,throws,jaxbexception,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,jaxbcontext,context,create,context,type,unmarshaller,unmarshaller,context,create,unmarshaller,if,parent,type,converter,null,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException;1262691077;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException {_        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        JAXBContext context = createContext(type)__        _        Unmarshaller unmarshaller = context.createUnmarshaller()___        if (parentTypeConverter != null) {_            _            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, reader)__                return type.cast(unmarshalled)__            }_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, inputStream)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,object,value,throws,jaxbexception,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,jaxbcontext,context,create,context,type,unmarshaller,unmarshaller,context,create,unmarshaller,if,parent,type,converter,null,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,reader,return,type,cast,unmarshalled,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,input,stream,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException;1263047103;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Object value) throws JAXBException {_        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        JAXBContext context = createContext(type)__        _        Unmarshaller unmarshaller = context.createUnmarshaller()___        if (parentTypeConverter != null) {_            _            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, reader)__                return type.cast(unmarshalled)__            }_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, inputStream)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,object,value,throws,jaxbexception,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,jaxbcontext,context,create,context,type,unmarshaller,unmarshaller,context,create,unmarshaller,if,parent,type,converter,null,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,reader,return,type,cast,unmarshalled,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,input,stream,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1263354477;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        JAXBContext context = createContext(type)__        _        Unmarshaller unmarshaller = context.createUnmarshaller()___        if (parentTypeConverter != null) {_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,jaxbcontext,context,create,context,type,unmarshaller,unmarshaller,context,create,unmarshaller,if,parent,type,converter,null,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1274693059;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        JAXBContext context = createContext(type)__        _        Unmarshaller unmarshaller = context.createUnmarshaller()___        if (parentTypeConverter != null) {_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,jaxbcontext,context,create,context,type,unmarshaller,unmarshaller,context,create,unmarshaller,if,parent,type,converter,null,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1292820781;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        JAXBContext context = createContext(type)__        _        Unmarshaller unmarshaller = context.createUnmarshaller()___        if (parentTypeConverter != null) {_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,jaxbcontext,context,create,context,type,unmarshaller,unmarshaller,context,create,unmarshaller,if,parent,type,converter,null,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1296495624;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        JAXBContext context = createContext(type)__        _        Unmarshaller unmarshaller = context.createUnmarshaller()___        if (parentTypeConverter != null) {_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,jaxbcontext,context,create,context,type,unmarshaller,unmarshaller,context,create,unmarshaller,if,parent,type,converter,null,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1297975937;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        JAXBContext context = createContext(type)__        _        Unmarshaller unmarshaller = context.createUnmarshaller()___        if (parentTypeConverter != null) {_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,jaxbcontext,context,create,context,type,unmarshaller,unmarshaller,context,create,unmarshaller,if,parent,type,converter,null,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1304081854;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        LOG.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        JAXBContext context = createContext(type)__        _        Unmarshaller unmarshaller = context.createUnmarshaller()___        if (parentTypeConverter != null) {_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,jaxbcontext,context,create,context,type,unmarshaller,unmarshaller,context,create,unmarshaller,if,parent,type,converter,null,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1304083189;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        LOG.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        JAXBContext context = createContext(type)__        _        Unmarshaller unmarshaller = context.createUnmarshaller()___        if (parentTypeConverter != null) {_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,jaxbcontext,context,create,context,type,unmarshaller,unmarshaller,context,create,unmarshaller,if,parent,type,converter,null,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1317831874;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        LOG.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        JAXBContext context = createContext(type)__        _        Unmarshaller unmarshaller = context.createUnmarshaller()___        if (parentTypeConverter != null) {_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,jaxbcontext,context,create,context,type,unmarshaller,unmarshaller,context,create,unmarshaller,if,parent,type,converter,null,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1324569391;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        LOG.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        JAXBContext context = createContext(type)__        _        Unmarshaller unmarshaller = context.createUnmarshaller()___        if (parentTypeConverter != null) {_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,jaxbcontext,context,create,context,type,unmarshaller,unmarshaller,context,create,unmarshaller,if,parent,type,converter,null,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1327614718;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        LOG.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        JAXBContext context = createContext(type)__        _        Unmarshaller unmarshaller = context.createUnmarshaller()___        if (parentTypeConverter != null) {_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,jaxbcontext,context,create,context,type,unmarshaller,unmarshaller,context,create,unmarshaller,if,parent,type,converter,null,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1333397353;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        LOG.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        Unmarshaller unmarshaller = getOrCreateUnmarshaller(type)___        if (parentTypeConverter != null) {_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,unmarshaller,unmarshaller,get,or,create,unmarshaller,type,if,parent,type,converter,null,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1333404101;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        LOG.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        Unmarshaller unmarshaller = getOrCreateUnmarshaller(type)___        if (parentTypeConverter != null) {_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,unmarshaller,unmarshaller,get,or,create,unmarshaller,type,if,parent,type,converter,null,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1333520635;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        LOG.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        Unmarshaller unmarshaller = getOrCreateUnmarshaller(type)___        if (parentTypeConverter != null) {_            if (!needFiltering(exchange)) {_                _                XMLStreamReader xmlReader = parentTypeConverter.convertTo(XMLStreamReader.class, value)__                if (xmlReader != null) {_                    Object unmarshalled = unmarshal(unmarshaller, exchange, xmlReader)__                    return type.cast(unmarshalled)__                }_            }_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,unmarshaller,unmarshaller,get,or,create,unmarshaller,type,if,parent,type,converter,null,if,need,filtering,exchange,xmlstream,reader,xml,reader,parent,type,converter,convert,to,xmlstream,reader,class,value,if,xml,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,xml,reader,return,type,cast,unmarshalled,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1333521239;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        LOG.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        Unmarshaller unmarshaller = getOrCreateUnmarshaller(type)___        if (parentTypeConverter != null) {_            if (!needFiltering(exchange)) {_                _                XMLStreamReader xmlReader = parentTypeConverter.convertTo(XMLStreamReader.class, value)__                if (xmlReader != null) {_                    Object unmarshalled = unmarshal(unmarshaller, exchange, xmlReader)__                    return type.cast(unmarshalled)__                }_            }_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,unmarshaller,unmarshaller,get,or,create,unmarshaller,type,if,parent,type,converter,null,if,need,filtering,exchange,xmlstream,reader,xml,reader,parent,type,converter,convert,to,xmlstream,reader,class,value,if,xml,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,xml,reader,return,type,cast,unmarshalled,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1333637266;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        LOG.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        Unmarshaller unmarshaller = getOrCreateUnmarshaller(type)___        if (parentTypeConverter != null) {_            if (!needFiltering(exchange)) {_                _                XMLStreamReader xmlReader = parentTypeConverter.convertTo(XMLStreamReader.class, value)__                if (xmlReader != null) {_                    Object unmarshalled = unmarshal(unmarshaller, exchange, xmlReader)__                    return type.cast(unmarshalled)__                }_            }_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,unmarshaller,unmarshaller,get,or,create,unmarshaller,type,if,parent,type,converter,null,if,need,filtering,exchange,xmlstream,reader,xml,reader,parent,type,converter,convert,to,xmlstream,reader,class,value,if,xml,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,xml,reader,return,type,cast,unmarshalled,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1333662834;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        LOG.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        Unmarshaller unmarshaller = getUnmarshaller(type)___        if (parentTypeConverter != null) {_            if (!needFiltering(exchange)) {_                _                XMLStreamReader xmlReader = parentTypeConverter.convertTo(XMLStreamReader.class, value)__                if (xmlReader != null) {_                    Object unmarshalled = unmarshal(unmarshaller, exchange, xmlReader)__                    return type.cast(unmarshalled)__                }_            }_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,unmarshaller,unmarshaller,get,unmarshaller,type,if,parent,type,converter,null,if,need,filtering,exchange,xmlstream,reader,xml,reader,parent,type,converter,convert,to,xmlstream,reader,class,value,if,xml,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,xml,reader,return,type,cast,unmarshalled,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1333676225;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        LOG.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        Unmarshaller unmarshaller = getUnmarshaller(type)___        if (parentTypeConverter != null) {_            if (!needFiltering(exchange)) {_                _                XMLStreamReader xmlReader = parentTypeConverter.convertTo(XMLStreamReader.class, value)__                if (xmlReader != null) {_                    Object unmarshalled = unmarshal(unmarshaller, exchange, xmlReader)__                    return type.cast(unmarshalled)__                }_            }_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,unmarshaller,unmarshaller,get,unmarshaller,type,if,parent,type,converter,null,if,need,filtering,exchange,xmlstream,reader,xml,reader,parent,type,converter,convert,to,xmlstream,reader,class,value,if,xml,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,xml,reader,return,type,cast,unmarshalled,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1334502428;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        LOG.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        Unmarshaller unmarshaller = getUnmarshaller(type)___        if (parentTypeConverter != null) {_            if (!needFiltering(exchange)) {_                _                XMLStreamReader xmlReader = parentTypeConverter.convertTo(XMLStreamReader.class, exchange, value)__                if (xmlReader != null) {_                    Object unmarshalled = unmarshal(unmarshaller, exchange, xmlReader)__                    return type.cast(unmarshalled)__                }_            }_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, exchange, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, exchange, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, exchange, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,unmarshaller,unmarshaller,get,unmarshaller,type,if,parent,type,converter,null,if,need,filtering,exchange,xmlstream,reader,xml,reader,parent,type,converter,convert,to,xmlstream,reader,class,exchange,value,if,xml,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,xml,reader,return,type,cast,unmarshalled,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,exchange,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,exchange,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,exchange,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1355814410;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        LOG.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        Unmarshaller unmarshaller = getUnmarshaller(type)___        if (parentTypeConverter != null) {_            if (!needFiltering(exchange)) {_                _                XMLStreamReader xmlReader = parentTypeConverter.convertTo(XMLStreamReader.class, exchange, value)__                if (xmlReader != null) {_                    Object unmarshalled = unmarshal(unmarshaller, exchange, xmlReader)__                    return type.cast(unmarshalled)__                }_            }_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, exchange, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, exchange, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, exchange, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,unmarshaller,unmarshaller,get,unmarshaller,type,if,parent,type,converter,null,if,need,filtering,exchange,xmlstream,reader,xml,reader,parent,type,converter,convert,to,xmlstream,reader,class,exchange,value,if,xml,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,xml,reader,return,type,cast,unmarshalled,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,exchange,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,exchange,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,exchange,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1355886201;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        LOG.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        Unmarshaller unmarshaller = getUnmarshaller(type)___        if (parentTypeConverter != null) {_            if (!needFiltering(exchange)) {_                _                XMLStreamReader xmlReader = parentTypeConverter.convertTo(XMLStreamReader.class, exchange, value)__                if (xmlReader != null) {_                    Object unmarshalled = unmarshal(unmarshaller, exchange, xmlReader)__                    return type.cast(unmarshalled)__                }_            }_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, exchange, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, exchange, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, exchange, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,unmarshaller,unmarshaller,get,unmarshaller,type,if,parent,type,converter,null,if,need,filtering,exchange,xmlstream,reader,xml,reader,parent,type,converter,convert,to,xmlstream,reader,class,exchange,value,if,xml,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,xml,reader,return,type,cast,unmarshalled,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,exchange,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,exchange,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,exchange,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1362470973;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        LOG.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        Unmarshaller unmarshaller = getUnmarshaller(type)___        if (parentTypeConverter != null) {_            if (!needFiltering(exchange)) {_                _                XMLStreamReader xmlReader = parentTypeConverter.convertTo(XMLStreamReader.class, exchange, value)__                if (xmlReader != null) {_                    try {_                        Object unmarshalled = unmarshal(unmarshaller, exchange, xmlReader)__                        return type.cast(unmarshalled)__                    } catch (Exception ex) {_                        _                        LOG.info("Cannot use StaxStreamReader to unmarshal the message, due to {}", ex)__                    }_                }_            }_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, exchange, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, exchange, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, exchange, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,unmarshaller,unmarshaller,get,unmarshaller,type,if,parent,type,converter,null,if,need,filtering,exchange,xmlstream,reader,xml,reader,parent,type,converter,convert,to,xmlstream,reader,class,exchange,value,if,xml,reader,null,try,object,unmarshalled,unmarshal,unmarshaller,exchange,xml,reader,return,type,cast,unmarshalled,catch,exception,ex,log,info,cannot,use,stax,stream,reader,to,unmarshal,the,message,due,to,ex,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,exchange,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,exchange,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,exchange,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1362474319;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        LOG.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        Unmarshaller unmarshaller = getUnmarshaller(type)___        if (parentTypeConverter != null) {_            if (!needFiltering(exchange)) {_                _                XMLStreamReader xmlReader = parentTypeConverter.convertTo(XMLStreamReader.class, exchange, value)__                if (xmlReader != null) {_                    try {_                        Object unmarshalled = unmarshal(unmarshaller, exchange, xmlReader)__                        return type.cast(unmarshalled)__                    } catch (Exception ex) {_                        _                        LOG.debug("Cannot use StaxStreamReader to unmarshal the message, due to {}", ex)__                    }_                }_            }_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, exchange, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, exchange, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, exchange, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,unmarshaller,unmarshaller,get,unmarshaller,type,if,parent,type,converter,null,if,need,filtering,exchange,xmlstream,reader,xml,reader,parent,type,converter,convert,to,xmlstream,reader,class,exchange,value,if,xml,reader,null,try,object,unmarshalled,unmarshal,unmarshaller,exchange,xml,reader,return,type,cast,unmarshalled,catch,exception,ex,log,debug,cannot,use,stax,stream,reader,to,unmarshal,the,message,due,to,ex,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,exchange,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,exchange,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,exchange,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1376549254;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        LOG.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        Unmarshaller unmarshaller = getUnmarshaller(type)___        if (parentTypeConverter != null) {_            if (!needFiltering(exchange)) {_                _                XMLStreamReader xmlReader = parentTypeConverter.convertTo(XMLStreamReader.class, exchange, value)__                if (xmlReader != null) {_                    try {_                        Object unmarshalled = unmarshal(unmarshaller, exchange, xmlReader)__                        return type.cast(unmarshalled)__                    } catch (Exception ex) {_                        _                        LOG.debug("Cannot use StaxStreamReader to unmarshal the message, due to {}", ex)__                    }_                }_            }_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, exchange, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, exchange, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, exchange, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,unmarshaller,unmarshaller,get,unmarshaller,type,if,parent,type,converter,null,if,need,filtering,exchange,xmlstream,reader,xml,reader,parent,type,converter,convert,to,xmlstream,reader,class,exchange,value,if,xml,reader,null,try,object,unmarshalled,unmarshal,unmarshaller,exchange,xml,reader,return,type,cast,unmarshalled,catch,exception,ex,log,debug,cannot,use,stax,stream,reader,to,unmarshal,the,message,due,to,ex,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,exchange,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,exchange,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,exchange,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1377699603;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        LOG.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        Unmarshaller unmarshaller = getUnmarshaller(type)___        if (parentTypeConverter != null) {_            if (!needFiltering(exchange)) {_                _                XMLStreamReader xmlReader = parentTypeConverter.convertTo(XMLStreamReader.class, exchange, value)__                if (xmlReader != null) {_                    try {_                        Object unmarshalled = unmarshal(unmarshaller, exchange, xmlReader)__                        return type.cast(unmarshalled)__                    } catch (Exception ex) {_                        _                        LOG.debug("Cannot use StaxStreamReader to unmarshal the message, due to {}", ex)__                    }_                }_            }_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, exchange, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return type.cast(unmarshalled)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, exchange, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return type.cast(unmarshalled)__            }_            Source source = parentTypeConverter.convertTo(Source.class, exchange, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return type.cast(unmarshalled)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return type.cast(unmarshalled)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,unmarshaller,unmarshaller,get,unmarshaller,type,if,parent,type,converter,null,if,need,filtering,exchange,xmlstream,reader,xml,reader,parent,type,converter,convert,to,xmlstream,reader,class,exchange,value,if,xml,reader,null,try,object,unmarshalled,unmarshal,unmarshaller,exchange,xml,reader,return,type,cast,unmarshalled,catch,exception,ex,log,debug,cannot,use,stax,stream,reader,to,unmarshal,the,message,due,to,ex,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,exchange,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,type,cast,unmarshalled,reader,reader,parent,type,converter,convert,to,reader,class,exchange,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,type,cast,unmarshalled,source,source,parent,type,converter,convert,to,source,class,exchange,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,type,cast,unmarshalled,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,type,cast,unmarshalled,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1457335822;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        LOG.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        Unmarshaller unmarshaller = getUnmarshaller(type)___        if (parentTypeConverter != null) {_            if (!needFiltering(exchange)) {_                _                XMLStreamReader xmlReader = parentTypeConverter.convertTo(XMLStreamReader.class, exchange, value)__                if (xmlReader != null) {_                    try {_                        Object unmarshalled = unmarshal(unmarshaller, exchange, xmlReader)__                        return castJaxbType(unmarshalled, type)__                    } catch (Exception ex) {_                        _                        LOG.debug("Cannot use StaxStreamReader to unmarshal the message, due to {}", ex)__                    }_                }_            }_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, exchange, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return castJaxbType(unmarshalled, type)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, exchange, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return castJaxbType(unmarshalled, type)__            }_            Source source = parentTypeConverter.convertTo(Source.class, exchange, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return castJaxbType(unmarshalled, type)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return castJaxbType(unmarshalled, type)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,unmarshaller,unmarshaller,get,unmarshaller,type,if,parent,type,converter,null,if,need,filtering,exchange,xmlstream,reader,xml,reader,parent,type,converter,convert,to,xmlstream,reader,class,exchange,value,if,xml,reader,null,try,object,unmarshalled,unmarshal,unmarshaller,exchange,xml,reader,return,cast,jaxb,type,unmarshalled,type,catch,exception,ex,log,debug,cannot,use,stax,stream,reader,to,unmarshal,the,message,due,to,ex,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,exchange,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,cast,jaxb,type,unmarshalled,type,reader,reader,parent,type,converter,convert,to,reader,class,exchange,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,cast,jaxb,type,unmarshalled,type,source,source,parent,type,converter,convert,to,source,class,exchange,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,cast,jaxb,type,unmarshalled,type,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,cast,jaxb,type,unmarshalled,type,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1457381696;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        LOG.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        Unmarshaller unmarshaller = getUnmarshaller(type)___        if (parentTypeConverter != null) {_            if (!needFiltering(exchange)) {_                _                XMLStreamReader xmlReader = parentTypeConverter.convertTo(XMLStreamReader.class, exchange, value)__                if (xmlReader != null) {_                    try {_                        Object unmarshalled = unmarshal(unmarshaller, exchange, xmlReader)__                        return castJaxbType(unmarshalled, type)__                    } catch (Exception ex) {_                        _                        LOG.debug("Cannot use StaxStreamReader to unmarshal the message, due to {}", ex)__                    }_                }_            }_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, exchange, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return castJaxbType(unmarshalled, type)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, exchange, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return castJaxbType(unmarshalled, type)__            }_            Source source = parentTypeConverter.convertTo(Source.class, exchange, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return castJaxbType(unmarshalled, type)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return castJaxbType(unmarshalled, type)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,unmarshaller,unmarshaller,get,unmarshaller,type,if,parent,type,converter,null,if,need,filtering,exchange,xmlstream,reader,xml,reader,parent,type,converter,convert,to,xmlstream,reader,class,exchange,value,if,xml,reader,null,try,object,unmarshalled,unmarshal,unmarshaller,exchange,xml,reader,return,cast,jaxb,type,unmarshalled,type,catch,exception,ex,log,debug,cannot,use,stax,stream,reader,to,unmarshal,the,message,due,to,ex,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,exchange,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,cast,jaxb,type,unmarshalled,type,reader,reader,parent,type,converter,convert,to,reader,class,exchange,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,cast,jaxb,type,unmarshalled,type,source,source,parent,type,converter,convert,to,source,class,exchange,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,cast,jaxb,type,unmarshalled,type,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,cast,jaxb,type,unmarshalled,type,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1457421903;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        LOG.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        Unmarshaller unmarshaller = getUnmarshaller(type)___        if (parentTypeConverter != null) {_            if (!needFiltering(exchange)) {_                _                XMLStreamReader xmlReader = parentTypeConverter.convertTo(XMLStreamReader.class, exchange, value)__                if (xmlReader != null) {_                    try {_                        Object unmarshalled = unmarshal(unmarshaller, exchange, xmlReader)__                        return castJaxbType(unmarshalled, type)__                    } catch (Exception ex) {_                        _                        LOG.debug("Cannot use StaxStreamReader to unmarshal the message, due to {}", ex)__                    }_                }_            }_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, exchange, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return castJaxbType(unmarshalled, type)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, exchange, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return castJaxbType(unmarshalled, type)__            }_            Source source = parentTypeConverter.convertTo(Source.class, exchange, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return castJaxbType(unmarshalled, type)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return castJaxbType(unmarshalled, type)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,unmarshaller,unmarshaller,get,unmarshaller,type,if,parent,type,converter,null,if,need,filtering,exchange,xmlstream,reader,xml,reader,parent,type,converter,convert,to,xmlstream,reader,class,exchange,value,if,xml,reader,null,try,object,unmarshalled,unmarshal,unmarshaller,exchange,xml,reader,return,cast,jaxb,type,unmarshalled,type,catch,exception,ex,log,debug,cannot,use,stax,stream,reader,to,unmarshal,the,message,due,to,ex,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,exchange,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,cast,jaxb,type,unmarshalled,type,reader,reader,parent,type,converter,convert,to,reader,class,exchange,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,cast,jaxb,type,unmarshalled,type,source,source,parent,type,converter,convert,to,source,class,exchange,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,cast,jaxb,type,unmarshalled,type,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,cast,jaxb,type,unmarshalled,type,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1457424476;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        LOG.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        Unmarshaller unmarshaller = getUnmarshaller(type)___        if (parentTypeConverter != null) {_            if (!needFiltering(exchange)) {_                _                XMLStreamReader xmlReader = parentTypeConverter.convertTo(XMLStreamReader.class, exchange, value)__                if (xmlReader != null) {_                    try {_                        Object unmarshalled = unmarshal(unmarshaller, exchange, xmlReader)__                        return castJaxbType(unmarshalled, type)__                    } catch (Exception ex) {_                        _                        LOG.debug("Cannot use StaxStreamReader to unmarshal the message, due to {}", ex)__                    }_                }_            }_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, exchange, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return castJaxbType(unmarshalled, type)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, exchange, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return castJaxbType(unmarshalled, type)__            }_            Source source = parentTypeConverter.convertTo(Source.class, exchange, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return castJaxbType(unmarshalled, type)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return castJaxbType(unmarshalled, type)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,unmarshaller,unmarshaller,get,unmarshaller,type,if,parent,type,converter,null,if,need,filtering,exchange,xmlstream,reader,xml,reader,parent,type,converter,convert,to,xmlstream,reader,class,exchange,value,if,xml,reader,null,try,object,unmarshalled,unmarshal,unmarshaller,exchange,xml,reader,return,cast,jaxb,type,unmarshalled,type,catch,exception,ex,log,debug,cannot,use,stax,stream,reader,to,unmarshal,the,message,due,to,ex,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,exchange,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,cast,jaxb,type,unmarshalled,type,reader,reader,parent,type,converter,convert,to,reader,class,exchange,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,cast,jaxb,type,unmarshalled,type,source,source,parent,type,converter,convert,to,source,class,exchange,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,cast,jaxb,type,unmarshalled,type,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,cast,jaxb,type,unmarshalled,type,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1458563447;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        LOG.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        Unmarshaller unmarshaller = getUnmarshaller(type)___        if (parentTypeConverter != null) {_            if (!needFiltering(exchange)) {_                _                XMLStreamReader xmlReader = parentTypeConverter.convertTo(XMLStreamReader.class, exchange, value)__                if (xmlReader != null) {_                    try {_                        Object unmarshalled = unmarshal(unmarshaller, exchange, xmlReader)__                        return castJaxbType(unmarshalled, type)__                    } catch (Exception ex) {_                        _                        LOG.debug("Cannot use StaxStreamReader to unmarshal the message, due to {}", ex)__                    }_                }_            }_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, exchange, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return castJaxbType(unmarshalled, type)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, exchange, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return castJaxbType(unmarshalled, type)__            }_            Source source = parentTypeConverter.convertTo(Source.class, exchange, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return castJaxbType(unmarshalled, type)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return castJaxbType(unmarshalled, type)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,unmarshaller,unmarshaller,get,unmarshaller,type,if,parent,type,converter,null,if,need,filtering,exchange,xmlstream,reader,xml,reader,parent,type,converter,convert,to,xmlstream,reader,class,exchange,value,if,xml,reader,null,try,object,unmarshalled,unmarshal,unmarshaller,exchange,xml,reader,return,cast,jaxb,type,unmarshalled,type,catch,exception,ex,log,debug,cannot,use,stax,stream,reader,to,unmarshal,the,message,due,to,ex,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,exchange,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,cast,jaxb,type,unmarshalled,type,reader,reader,parent,type,converter,convert,to,reader,class,exchange,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,cast,jaxb,type,unmarshalled,type,source,source,parent,type,converter,convert,to,source,class,exchange,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,cast,jaxb,type,unmarshalled,type,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,cast,jaxb,type,unmarshalled,type,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1465563177;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        LOG.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        Unmarshaller unmarshaller = getUnmarshaller(type)___        if (parentTypeConverter != null) {_            if (!needFiltering(exchange)) {_                _                XMLStreamReader xmlReader = parentTypeConverter.convertTo(XMLStreamReader.class, exchange, value)__                if (xmlReader != null) {_                    try {_                        Object unmarshalled = unmarshal(unmarshaller, exchange, xmlReader)__                        return castJaxbType(unmarshalled, type)__                    } catch (Exception ex) {_                        _                        LOG.debug("Cannot use StaxStreamReader to unmarshal the message, due to {}", ex)__                    }_                }_            }_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, exchange, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return castJaxbType(unmarshalled, type)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, exchange, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return castJaxbType(unmarshalled, type)__            }_            Source source = parentTypeConverter.convertTo(Source.class, exchange, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return castJaxbType(unmarshalled, type)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return castJaxbType(unmarshalled, type)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,unmarshaller,unmarshaller,get,unmarshaller,type,if,parent,type,converter,null,if,need,filtering,exchange,xmlstream,reader,xml,reader,parent,type,converter,convert,to,xmlstream,reader,class,exchange,value,if,xml,reader,null,try,object,unmarshalled,unmarshal,unmarshaller,exchange,xml,reader,return,cast,jaxb,type,unmarshalled,type,catch,exception,ex,log,debug,cannot,use,stax,stream,reader,to,unmarshal,the,message,due,to,ex,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,exchange,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,cast,jaxb,type,unmarshalled,type,reader,reader,parent,type,converter,convert,to,reader,class,exchange,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,cast,jaxb,type,unmarshalled,type,source,source,parent,type,converter,convert,to,source,class,exchange,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,cast,jaxb,type,unmarshalled,type,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,cast,jaxb,type,unmarshalled,type,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1465563868;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        LOG.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        Unmarshaller unmarshaller = getUnmarshaller(type)___        if (parentTypeConverter != null) {_            if (!needFiltering(exchange)) {_                _                XMLStreamReader xmlReader = parentTypeConverter.convertTo(XMLStreamReader.class, exchange, value)__                if (xmlReader != null) {_                    try {_                        Object unmarshalled = unmarshal(unmarshaller, exchange, xmlReader)__                        return castJaxbType(unmarshalled, type)__                    } catch (Exception ex) {_                        _                        LOG.debug("Cannot use StaxStreamReader to unmarshal the message, due to {}", ex)__                    }_                }_            }_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, exchange, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return castJaxbType(unmarshalled, type)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, exchange, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return castJaxbType(unmarshalled, type)__            }_            Source source = parentTypeConverter.convertTo(Source.class, exchange, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return castJaxbType(unmarshalled, type)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return castJaxbType(unmarshalled, type)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,unmarshaller,unmarshaller,get,unmarshaller,type,if,parent,type,converter,null,if,need,filtering,exchange,xmlstream,reader,xml,reader,parent,type,converter,convert,to,xmlstream,reader,class,exchange,value,if,xml,reader,null,try,object,unmarshalled,unmarshal,unmarshaller,exchange,xml,reader,return,cast,jaxb,type,unmarshalled,type,catch,exception,ex,log,debug,cannot,use,stax,stream,reader,to,unmarshal,the,message,due,to,ex,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,exchange,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,cast,jaxb,type,unmarshalled,type,reader,reader,parent,type,converter,convert,to,reader,class,exchange,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,cast,jaxb,type,unmarshalled,type,source,source,parent,type,converter,convert,to,source,class,exchange,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,cast,jaxb,type,unmarshalled,type,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,cast,jaxb,type,unmarshalled,type,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1522785885;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        LOG.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        Unmarshaller unmarshaller = getUnmarshaller(type)___        if (parentTypeConverter != null) {_            if (!needFiltering(exchange)) {_                _                XMLStreamReader xmlReader = parentTypeConverter.convertTo(XMLStreamReader.class, exchange, value)__                if (xmlReader != null) {_                    try {_                        Object unmarshalled = unmarshal(unmarshaller, exchange, xmlReader)__                        return castJaxbType(unmarshalled, type)__                    } catch (Exception ex) {_                        _                        LOG.debug("Cannot use StaxStreamReader to unmarshal the message, due to {}", ex)__                    }_                }_            }_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, exchange, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return castJaxbType(unmarshalled, type)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, exchange, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return castJaxbType(unmarshalled, type)__            }_            Source source = parentTypeConverter.convertTo(Source.class, exchange, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return castJaxbType(unmarshalled, type)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return castJaxbType(unmarshalled, type)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,unmarshaller,unmarshaller,get,unmarshaller,type,if,parent,type,converter,null,if,need,filtering,exchange,xmlstream,reader,xml,reader,parent,type,converter,convert,to,xmlstream,reader,class,exchange,value,if,xml,reader,null,try,object,unmarshalled,unmarshal,unmarshaller,exchange,xml,reader,return,cast,jaxb,type,unmarshalled,type,catch,exception,ex,log,debug,cannot,use,stax,stream,reader,to,unmarshal,the,message,due,to,ex,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,exchange,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,cast,jaxb,type,unmarshalled,type,reader,reader,parent,type,converter,convert,to,reader,class,exchange,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,cast,jaxb,type,unmarshalled,type,source,source,parent,type,converter,convert,to,source,class,exchange,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,cast,jaxb,type,unmarshalled,type,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,cast,jaxb,type,unmarshalled,type,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1540108158;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        LOG.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        Unmarshaller unmarshaller = getUnmarshaller(type)___        if (parentTypeConverter != null) {_            if (!needFiltering(exchange)) {_                _                XMLStreamReader xmlReader = parentTypeConverter.convertTo(XMLStreamReader.class, exchange, value)__                if (xmlReader != null) {_                    try {_                        Object unmarshalled = unmarshal(unmarshaller, exchange, xmlReader)__                        return castJaxbType(unmarshalled, type)__                    } catch (Exception ex) {_                        _                        LOG.debug("Cannot use StaxStreamReader to unmarshal the message, due to {}", ex)__                    }_                }_            }_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, exchange, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return castJaxbType(unmarshalled, type)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, exchange, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return castJaxbType(unmarshalled, type)__            }_            Source source = parentTypeConverter.convertTo(Source.class, exchange, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return castJaxbType(unmarshalled, type)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return castJaxbType(unmarshalled, type)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,unmarshaller,unmarshaller,get,unmarshaller,type,if,parent,type,converter,null,if,need,filtering,exchange,xmlstream,reader,xml,reader,parent,type,converter,convert,to,xmlstream,reader,class,exchange,value,if,xml,reader,null,try,object,unmarshalled,unmarshal,unmarshaller,exchange,xml,reader,return,cast,jaxb,type,unmarshalled,type,catch,exception,ex,log,debug,cannot,use,stax,stream,reader,to,unmarshal,the,message,due,to,ex,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,exchange,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,cast,jaxb,type,unmarshalled,type,reader,reader,parent,type,converter,convert,to,reader,class,exchange,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,cast,jaxb,type,unmarshalled,type,source,source,parent,type,converter,convert,to,source,class,exchange,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,cast,jaxb,type,unmarshalled,type,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,cast,jaxb,type,unmarshalled,type,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1540108160;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        log.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        Unmarshaller unmarshaller = getUnmarshaller(type)___        if (parentTypeConverter != null) {_            if (!needFiltering(exchange)) {_                _                XMLStreamReader xmlReader = parentTypeConverter.convertTo(XMLStreamReader.class, exchange, value)__                if (xmlReader != null) {_                    try {_                        Object unmarshalled = unmarshal(unmarshaller, exchange, xmlReader)__                        return castJaxbType(unmarshalled, type)__                    } catch (Exception ex) {_                        _                        log.debug("Cannot use StaxStreamReader to unmarshal the message, due to {}", ex)__                    }_                }_            }_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, exchange, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return castJaxbType(unmarshalled, type)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, exchange, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return castJaxbType(unmarshalled, type)__            }_            Source source = parentTypeConverter.convertTo(Source.class, exchange, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return castJaxbType(unmarshalled, type)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return castJaxbType(unmarshalled, type)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,unmarshaller,unmarshaller,get,unmarshaller,type,if,parent,type,converter,null,if,need,filtering,exchange,xmlstream,reader,xml,reader,parent,type,converter,convert,to,xmlstream,reader,class,exchange,value,if,xml,reader,null,try,object,unmarshalled,unmarshal,unmarshaller,exchange,xml,reader,return,cast,jaxb,type,unmarshalled,type,catch,exception,ex,log,debug,cannot,use,stax,stream,reader,to,unmarshal,the,message,due,to,ex,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,exchange,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,cast,jaxb,type,unmarshalled,type,reader,reader,parent,type,converter,convert,to,reader,class,exchange,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,cast,jaxb,type,unmarshalled,type,source,source,parent,type,converter,convert,to,source,class,exchange,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,cast,jaxb,type,unmarshalled,type,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,cast,jaxb,type,unmarshalled,type,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1540108161;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        log.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        Unmarshaller unmarshaller = getUnmarshaller(type)___        if (parentTypeConverter != null) {_            if (!needFiltering(exchange)) {_                _                XMLStreamReader xmlReader = parentTypeConverter.convertTo(XMLStreamReader.class, exchange, value)__                if (xmlReader != null) {_                    try {_                        Object unmarshalled = unmarshal(unmarshaller, exchange, xmlReader)__                        return castJaxbType(unmarshalled, type)__                    } catch (Exception ex) {_                        _                        log.debug("Cannot use StaxStreamReader to unmarshal the message, due to {}", ex)__                    }_                }_            }_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, exchange, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return castJaxbType(unmarshalled, type)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, exchange, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return castJaxbType(unmarshalled, type)__            }_            Source source = parentTypeConverter.convertTo(Source.class, exchange, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return castJaxbType(unmarshalled, type)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return castJaxbType(unmarshalled, type)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,unmarshaller,unmarshaller,get,unmarshaller,type,if,parent,type,converter,null,if,need,filtering,exchange,xmlstream,reader,xml,reader,parent,type,converter,convert,to,xmlstream,reader,class,exchange,value,if,xml,reader,null,try,object,unmarshalled,unmarshal,unmarshaller,exchange,xml,reader,return,cast,jaxb,type,unmarshalled,type,catch,exception,ex,log,debug,cannot,use,stax,stream,reader,to,unmarshal,the,message,due,to,ex,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,exchange,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,cast,jaxb,type,unmarshalled,type,reader,reader,parent,type,converter,convert,to,reader,class,exchange,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,cast,jaxb,type,unmarshalled,type,source,source,parent,type,converter,convert,to,source,class,exchange,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,cast,jaxb,type,unmarshalled,type,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,cast,jaxb,type,unmarshalled,type,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1540108163;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        log.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        Unmarshaller unmarshaller = getUnmarshaller(type)___        if (parentTypeConverter != null) {_            if (!needFiltering(exchange)) {_                _                XMLStreamReader xmlReader = parentTypeConverter.convertTo(XMLStreamReader.class, exchange, value)__                if (xmlReader != null) {_                    try {_                        Object unmarshalled = unmarshal(unmarshaller, exchange, xmlReader)__                        return castJaxbType(unmarshalled, type)__                    } catch (Exception ex) {_                        _                        log.debug("Cannot use StaxStreamReader to unmarshal the message, due to {}", ex)__                    }_                }_            }_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, exchange, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return castJaxbType(unmarshalled, type)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, exchange, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return castJaxbType(unmarshalled, type)__            }_            Source source = parentTypeConverter.convertTo(Source.class, exchange, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return castJaxbType(unmarshalled, type)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return castJaxbType(unmarshalled, type)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,unmarshaller,unmarshaller,get,unmarshaller,type,if,parent,type,converter,null,if,need,filtering,exchange,xmlstream,reader,xml,reader,parent,type,converter,convert,to,xmlstream,reader,class,exchange,value,if,xml,reader,null,try,object,unmarshalled,unmarshal,unmarshaller,exchange,xml,reader,return,cast,jaxb,type,unmarshalled,type,catch,exception,ex,log,debug,cannot,use,stax,stream,reader,to,unmarshal,the,message,due,to,ex,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,exchange,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,cast,jaxb,type,unmarshalled,type,reader,reader,parent,type,converter,convert,to,reader,class,exchange,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,cast,jaxb,type,unmarshalled,type,source,source,parent,type,converter,convert,to,source,class,exchange,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,cast,jaxb,type,unmarshalled,type,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,cast,jaxb,type,unmarshalled,type,return,null
FallbackTypeConverter -> protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception;1548175645;Lets try parse via JAXB;protected <T> T unmarshall(Class<T> type, Exchange exchange, Object value) throws Exception {_        log.trace("Unmarshal to {} with value {}", type, value)___        if (value == null) {_            throw new IllegalArgumentException("Cannot convert from null value to JAXBSource")__        }__        Unmarshaller unmarshaller = getUnmarshaller(type)___        if (parentTypeConverter != null) {_            if (!needFiltering(exchange)) {_                _                XMLStreamReader xmlReader = parentTypeConverter.convertTo(XMLStreamReader.class, exchange, value)__                if (xmlReader != null) {_                    try {_                        Object unmarshalled = unmarshal(unmarshaller, exchange, xmlReader)__                        return castJaxbType(unmarshalled, type)__                    } catch (Exception ex) {_                        _                        log.debug("Cannot use StaxStreamReader to unmarshal the message, due to {}", ex)__                    }_                }_            }_            InputStream inputStream = parentTypeConverter.convertTo(InputStream.class, exchange, value)__            if (inputStream != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, inputStream)__                return castJaxbType(unmarshalled, type)__            }_            Reader reader = parentTypeConverter.convertTo(Reader.class, exchange, value)__            if (reader != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, reader)__                return castJaxbType(unmarshalled, type)__            }_            Source source = parentTypeConverter.convertTo(Source.class, exchange, value)__            if (source != null) {_                Object unmarshalled = unmarshal(unmarshaller, exchange, source)__                return castJaxbType(unmarshalled, type)__            }_        }__        if (value instanceof String) {_            value = new StringReader((String) value)__        }_        if (value instanceof InputStream || value instanceof Reader) {_            Object unmarshalled = unmarshal(unmarshaller, exchange, value)__            return castJaxbType(unmarshalled, type)__        }__        return null__    };lets,try,parse,via,jaxb;protected,t,t,unmarshall,class,t,type,exchange,exchange,object,value,throws,exception,log,trace,unmarshal,to,with,value,type,value,if,value,null,throw,new,illegal,argument,exception,cannot,convert,from,null,value,to,jaxbsource,unmarshaller,unmarshaller,get,unmarshaller,type,if,parent,type,converter,null,if,need,filtering,exchange,xmlstream,reader,xml,reader,parent,type,converter,convert,to,xmlstream,reader,class,exchange,value,if,xml,reader,null,try,object,unmarshalled,unmarshal,unmarshaller,exchange,xml,reader,return,cast,jaxb,type,unmarshalled,type,catch,exception,ex,log,debug,cannot,use,stax,stream,reader,to,unmarshal,the,message,due,to,ex,input,stream,input,stream,parent,type,converter,convert,to,input,stream,class,exchange,value,if,input,stream,null,object,unmarshalled,unmarshal,unmarshaller,exchange,input,stream,return,cast,jaxb,type,unmarshalled,type,reader,reader,parent,type,converter,convert,to,reader,class,exchange,value,if,reader,null,object,unmarshalled,unmarshal,unmarshaller,exchange,reader,return,cast,jaxb,type,unmarshalled,type,source,source,parent,type,converter,convert,to,source,class,exchange,value,if,source,null,object,unmarshalled,unmarshal,unmarshaller,exchange,source,return,cast,jaxb,type,unmarshalled,type,if,value,instanceof,string,value,new,string,reader,string,value,if,value,instanceof,input,stream,value,instanceof,reader,object,unmarshalled,unmarshal,unmarshaller,exchange,value,return,cast,jaxb,type,unmarshalled,type,return,null
