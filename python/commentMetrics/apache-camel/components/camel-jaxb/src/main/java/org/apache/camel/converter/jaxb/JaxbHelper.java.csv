commented;modifiers;parameterAmount;loc;comment;code
false;public,static;2;22;;public static <T> Method getJaxbElementFactoryMethod(CamelContext camelContext, Class<T> type) {     if (camelContext == null) {         return null.     }     // find the first method that has @XmlElementDecl with one parameter that matches the type     Class factory = getObjectFactory(camelContext, type).     if (factory != null) {         for (Method m : factory.getMethods()) {             final XmlElementDecl a = m.getAnnotation(XmlElementDecl.class).             if (a == null) {                 continue.             }             final Class<?>[] parameters = m.getParameterTypes().             if (parameters.length == 1 && parameters[0].isAssignableFrom(type)) {                 return m.             }         }     }     return null. }
false;public,static;2;11;;public static <T> Class getObjectFactory(CamelContext camelContext, Class<T> type) {     if (camelContext == null) {         return null.     }     if (type.getPackage() != null) {         String objectFactoryClassName = type.getPackage().getName() + ".ObjectFactory".         return camelContext.getClassResolver().resolveClass(objectFactoryClassName).     }     return null. }
