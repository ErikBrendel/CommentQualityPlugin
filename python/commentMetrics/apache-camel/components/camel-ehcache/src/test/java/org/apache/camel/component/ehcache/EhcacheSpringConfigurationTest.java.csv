commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected AbstractApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/component/ehcache/EhcacheSpringConfigurationTest.xml"). }
false;public;0;15;;// ***************************** // Test // ***************************** @Test public void testProgrammaticConfiguration() throws Exception {     Cache<String, String> cache = getCache(ehcacheConf, "myProgrammaticCacheConf").     ResourcePools pools = cache.getRuntimeConfiguration().getResourcePools().     SizedResourcePool h = pools.getPoolForResource(ResourceType.Core.HEAP).     assertNotNull(h).     assertEquals(100, h.getSize()).     assertEquals(EntryUnit.ENTRIES, h.getUnit()).     SizedResourcePool o = pools.getPoolForResource(ResourceType.Core.OFFHEAP).     assertNotNull(o).     assertEquals(1, o.getSize()).     assertEquals(MemoryUnit.MB, o.getUnit()). }
false;public;0;10;;@Test public void testFileConfiguration() throws Exception {     Cache<String, String> cache = getCache(ehcacheFileConf, "myFileCacheConf").     ResourcePools pools = cache.getRuntimeConfiguration().getResourcePools().     SizedResourcePool h = pools.getPoolForResource(ResourceType.Core.HEAP).     assertNotNull(h).     assertEquals(150, h.getSize()).     assertEquals(EntryUnit.ENTRIES, h.getUnit()). }
false;protected;2;3;;protected Cache<String, String> getCache(EhcacheEndpoint endpoint, String cacheName) throws Exception {     return endpoint.getManager().getCache(cacheName, String.class, String.class). }
