commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void checkAggregationFromOneRoute() throws Exception {     mock.expectedMessageCount(VALUES.length).     mock.expectedBodiesReceived(SUM).     IntStream.of(VALUES).forEach(i -> producer.sendBodyAndHeader(i, CORRELATOR, CORRELATOR)).     mock.assertIsSatisfied(). }
false;private;2;13;;private Exchange aggregate(Exchange oldExchange, Exchange newExchange) {     if (oldExchange == null) {         return newExchange.     } else {         Integer n = newExchange.getIn().getBody(Integer.class).         Integer o = oldExchange.getIn().getBody(Integer.class).         Integer v = (o == null ? 0 : o) + (n == null ? 0 : n).         oldExchange.getIn().setBody(v, Integer.class).         return oldExchange.     } }
false;public;0;11;;@Override public void configure() throws Exception {     from(ENDPOINT_DIRECT).routeId("AggregatingRouteOne").aggregate(header(CORRELATOR)).aggregationRepository(createAggregateRepository()).aggregationStrategy(EhcacheAggregationRepositoryRoutesTest.this::aggregate).completionSize(VALUES.length).to("log:org.apache.camel.component.ehcache.processor.aggregate?level=INFO&showAll=true&multiline=true").to(ENDPOINT_MOCK). }
false;protected;0;16;;@Override protected RoutesBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from(ENDPOINT_DIRECT).routeId("AggregatingRouteOne").aggregate(header(CORRELATOR)).aggregationRepository(createAggregateRepository()).aggregationStrategy(EhcacheAggregationRepositoryRoutesTest.this::aggregate).completionSize(VALUES.length).to("log:org.apache.camel.component.ehcache.processor.aggregate?level=INFO&showAll=true&multiline=true").to(ENDPOINT_MOCK).         }     }. }
