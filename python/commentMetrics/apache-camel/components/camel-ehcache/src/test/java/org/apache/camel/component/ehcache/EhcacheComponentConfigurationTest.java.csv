commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;23;;@Override protected JndiRegistry createRegistry() throws Exception {     EhcacheComponent component = new EhcacheComponent().     component.getConfiguration().setKeyType(String.class).     component.getConfiguration().setValueType(String.class).     component.getConfiguration().setCacheManager(CacheManagerBuilder.newCacheManagerBuilder().withCache("myCache", CacheConfigurationBuilder.newCacheConfigurationBuilder(String.class, String.class, ResourcePoolsBuilder.newResourcePoolsBuilder().heap(100, EntryUnit.ENTRIES).offheap(1, MemoryUnit.MB))).build(true)).     JndiRegistry registry = super.createRegistry().     registry.bind("ehcache", component).     return registry. }
false;public;0;20;;// ***************************** // Test // ***************************** @Test public void testCacheManager() throws Exception {     assertEquals(context().getRegistry().lookupByNameAndType("ehcache", EhcacheComponent.class).getCacheManager(), endpoint.getManager().getCacheManager()).     Cache<String, String> cache = endpoint.getManager().getCache("myCache", String.class, String.class).     ResourcePools pools = cache.getRuntimeConfiguration().getResourcePools().     SizedResourcePool h = pools.getPoolForResource(ResourceType.Core.HEAP).     assertNotNull(h).     assertEquals(100, h.getSize()).     assertEquals(EntryUnit.ENTRIES, h.getUnit()).     SizedResourcePool o = pools.getPoolForResource(ResourceType.Core.OFFHEAP).     assertNotNull(o).     assertEquals(1, o.getSize()).     assertEquals(MemoryUnit.MB, o.getUnit()). }
false;public;0;4;;public void configure() {     from("direct:ehcache").to(endpoint). }
false;protected;0;9;;// **************************** // Route // **************************** @Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() {             from("direct:ehcache").to(endpoint).         }     }. }
