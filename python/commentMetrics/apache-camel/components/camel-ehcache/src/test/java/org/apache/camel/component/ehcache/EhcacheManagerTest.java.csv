commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:ehcache").to("ehcache:myCache1?configurationUri=classpath:ehcache/ehcache-file-config.xml").to("ehcache:myCache2?configurationUri=classpath:ehcache/ehcache-file-config.xml"). }
false;public;0;38;;@Test public void testCacheManagerFromFile() throws Exception {     CamelContext context = null.     try {         context = new DefaultCamelContext().         context.addRoutes(new RouteBuilder() {              @Override             public void configure() throws Exception {                 from("direct:ehcache").to("ehcache:myCache1?configurationUri=classpath:ehcache/ehcache-file-config.xml").to("ehcache:myCache2?configurationUri=classpath:ehcache/ehcache-file-config.xml").             }         }).         context.start().         EhcacheEndpoint e1 = context.getEndpoint("ehcache:myCache1?configurationUri=classpath:ehcache/ehcache-file-config.xml", EhcacheEndpoint.class).         EhcacheEndpoint e2 = context.getEndpoint("ehcache:myCache2?configurationUri=classpath:ehcache/ehcache-file-config.xml", EhcacheEndpoint.class).         Assert.assertEquals(e1.getManager(), e2.getManager()).         Assert.assertEquals(e1.getManager().getCacheManager(), e2.getManager().getCacheManager()).         Assert.assertEquals(2, e1.getManager().getReferenceCount().get()).         Assert.assertEquals(Status.AVAILABLE, e1.getManager().getCacheManager().getStatus()).         context.stop().         Assert.assertEquals(e1.getManager(), e2.getManager()).         Assert.assertEquals(e1.getManager().getCacheManager(), e2.getManager().getCacheManager()).         Assert.assertEquals(0, e1.getManager().getReferenceCount().get()).         Assert.assertEquals(Status.UNINITIALIZED, e1.getManager().getCacheManager().getStatus()).     } finally {         if (context != null) {             context.stop().         }     } }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:ehcache").to("ehcache:myCache1?cacheManagerConfiguration=#myConf").to("ehcache:myCache2?cacheManagerConfiguration=#myConf"). }
false;public;0;41;;@Test public void testCacheManagerFromConfiguration() throws Exception {     CamelContext context = null.     try {         SimpleRegistry registry = new SimpleRegistry().         registry.put("myConf", new XmlConfiguration(getClass().getResource("/ehcache/ehcache-file-config.xml"))).         context = new DefaultCamelContext(registry).         context.addRoutes(new RouteBuilder() {              @Override             public void configure() throws Exception {                 from("direct:ehcache").to("ehcache:myCache1?cacheManagerConfiguration=#myConf").to("ehcache:myCache2?cacheManagerConfiguration=#myConf").             }         }).         context.start().         EhcacheEndpoint e1 = context.getEndpoint("ehcache:myCache1?cacheManagerConfiguration=#myConf", EhcacheEndpoint.class).         EhcacheEndpoint e2 = context.getEndpoint("ehcache:myCache2?cacheManagerConfiguration=#myConf", EhcacheEndpoint.class).         Assert.assertEquals(e1.getManager(), e2.getManager()).         Assert.assertEquals(e1.getManager().getCacheManager(), e2.getManager().getCacheManager()).         Assert.assertEquals(2, e1.getManager().getReferenceCount().get()).         Assert.assertEquals(Status.AVAILABLE, e1.getManager().getCacheManager().getStatus()).         context.stop().         Assert.assertEquals(e1.getManager(), e2.getManager()).         Assert.assertEquals(e1.getManager().getCacheManager(), e2.getManager().getCacheManager()).         Assert.assertEquals(0, e1.getManager().getReferenceCount().get()).         Assert.assertEquals(Status.UNINITIALIZED, e1.getManager().getCacheManager().getStatus()).     } finally {         if (context != null) {             context.stop().         }     } }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:ehcache").to("ehcache:myCache1?cacheManager=#myManager").to("ehcache:myCache2?cacheManager=#myManager"). }
false;public;0;47;;@Test public void testCacheManager() throws Exception {     CamelContext context = null.     CacheManager cacheManager = null.     try {         cacheManager = CacheManagerBuilder.newCacheManagerBuilder().build(true).         SimpleRegistry registry = new SimpleRegistry().         registry.put("myManager", cacheManager).         context = new DefaultCamelContext(registry).         context.addRoutes(new RouteBuilder() {              @Override             public void configure() throws Exception {                 from("direct:ehcache").to("ehcache:myCache1?cacheManager=#myManager").to("ehcache:myCache2?cacheManager=#myManager").             }         }).         context.start().         EhcacheEndpoint e1 = context.getEndpoint("ehcache:myCache1?cacheManager=#myManager", EhcacheEndpoint.class).         EhcacheEndpoint e2 = context.getEndpoint("ehcache:myCache2?cacheManager=#myManager", EhcacheEndpoint.class).         Assert.assertEquals(e1.getManager(), e2.getManager()).         Assert.assertEquals(e1.getManager().getCacheManager(), e2.getManager().getCacheManager()).         Assert.assertEquals(2, e1.getManager().getReferenceCount().get()).         Assert.assertEquals(Status.AVAILABLE, e1.getManager().getCacheManager().getStatus()).         context.stop().         Assert.assertEquals(e1.getManager(), e2.getManager()).         Assert.assertEquals(e1.getManager().getCacheManager(), e2.getManager().getCacheManager()).         Assert.assertEquals(0, e1.getManager().getReferenceCount().get()).         Assert.assertEquals(Status.AVAILABLE, e1.getManager().getCacheManager().getStatus()).     } finally {         if (context != null) {             context.stop().         }         if (cacheManager != null) {             cacheManager.close().         }     } }
