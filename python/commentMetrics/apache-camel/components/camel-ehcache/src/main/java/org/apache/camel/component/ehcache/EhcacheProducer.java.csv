commented;modifiers;parameterAmount;loc;comment;code
false;public;1;6;;// **************************** // Handlers // **************************** @InvokeOnHeader(EhcacheConstants.ACTION_CLEAR) public void onClear(Message message) throws Exception {     cache.clear().     setResult(message, true, null, null). }
false;public;1;6;;@InvokeOnHeader(EhcacheConstants.ACTION_PUT) public void onPut(Message message) throws Exception {     cache.put(getKey(message), getValue(message, cache.getRuntimeConfiguration().getValueType())).     setResult(message, true, null, null). }
false;public;1;6;;@InvokeOnHeader(EhcacheConstants.ACTION_PUT_ALL) public void onPutAll(Message message) throws Exception {     cache.putAll((Map) getValue(message, Map.class)).     setResult(message, true, null, null). }
false;public;1;6;;@InvokeOnHeader(EhcacheConstants.ACTION_PUT_IF_ABSENT) public void onPutIfAbsent(Message message) throws Exception {     Object oldValue = cache.putIfAbsent(getKey(message), getValue(message, cache.getRuntimeConfiguration().getValueType())).     setResult(message, true, null, oldValue). }
false;public;1;6;;@InvokeOnHeader(EhcacheConstants.ACTION_GET) public void onGet(Message message) throws Exception {     Object result = cache.get(getKey(message)).     setResult(message, true, result, null). }
false;public;1;8;;@InvokeOnHeader(EhcacheConstants.ACTION_GET_ALL) public void onGetAll(Message message) throws Exception {     Object result = cache.getAll(message.getHeader(EhcacheConstants.KEYS, Collections::emptySet, Set.class)).     setResult(message, true, result, null). }
false;public;1;12;;@InvokeOnHeader(EhcacheConstants.ACTION_REMOVE) public void onRemove(Message message) throws Exception {     boolean success = true.     Object valueToReplace = message.getHeader(EhcacheConstants.OLD_VALUE).     if (valueToReplace == null) {         cache.remove(getKey(message)).     } else {         success = cache.remove(getKey(message), valueToReplace).     }     setResult(message, success, null, null). }
false;public;1;8;;@InvokeOnHeader(EhcacheConstants.ACTION_REMOVE_ALL) public void onRemoveAll(Message message) throws Exception {     cache.removeAll(message.getHeader(EhcacheConstants.KEYS, Collections::emptySet, Set.class)).     setResult(message, true, null, null). }
false;public;1;15;;@InvokeOnHeader(EhcacheConstants.ACTION_REPLACE) public void onReplace(Message message) throws Exception {     boolean success = true.     Object oldValue = null.     Object value = getValue(message, cache.getRuntimeConfiguration().getValueType()).     Object valueToReplace = message.getHeader(EhcacheConstants.OLD_VALUE).     if (valueToReplace == null) {         oldValue = cache.replace(getKey(message), value).     } else {         success = cache.replace(getKey(message), valueToReplace, value).     }     setResult(message, success, null, oldValue). }
false;private;1;15;;// **************************** // Helpers // **************************** private Object getKey(final Message message) throws Exception {     Object value = message.getHeader(EhcacheConstants.KEY, cache.getRuntimeConfiguration().getKeyType()).     if (value == null) {         value = configuration.getKey().     }     if (value == null) {         throw new CamelExchangeException("No value provided in header or as default value (" + EhcacheConstants.KEY + ")", message.getExchange()).     }     return value. }
false;private;2;15;;private Object getValue(final Message message, final Class<?> type) throws Exception {     Object value = message.getHeader(EhcacheConstants.VALUE, type).     if (value == null) {         value = message.getBody(type).     }     if (value == null) {         throw new CamelExchangeException("No value provided in header or body (" + EhcacheConstants.VALUE + ")", message.getExchange()).     }     return value. }
false;private;4;11;;private void setResult(Message message, boolean success, Object result, Object oldValue) {     message.setHeader(EhcacheConstants.ACTION_SUCCEEDED, success).     message.setHeader(EhcacheConstants.ACTION_HAS_RESULT, oldValue != null || result != null).     if (oldValue != null) {         message.setHeader(EhcacheConstants.OLD_VALUE, oldValue).     }     if (result != null) {         message.setBody(result).     } }
