commented;modifiers;parameterAmount;loc;comment;code
false;public;1;3;;public Exchange createExchange(TwitterEndpoint endpoint) {     return createExchange(endpoint, null). }
false;public;2;10;;public <T> Exchange createExchange(TwitterEndpoint endpoint, T body) {     Exchange exchange = endpoint.createExchange().     exchange.getIn().setHeader(TwitterConstants.TWITTER_EVENT_TYPE, name()).     if (body != null) {         exchange.getIn().setBody(body).     }     return exchange. }
false;public;2;16;;public <T> List<Exchange> createExchangeList(TwitterEndpoint endpoint, List<T> bodyList) {     List<Exchange> exchanges = Collections.emptyList().     if (bodyList != null && !bodyList.isEmpty()) {         exchanges = new ArrayList<>(bodyList.size()).         for (int i = 0. i < bodyList.size(). i++) {             exchanges.add(createExchange(endpoint, bodyList.get(i))).         }     }     if (!exchanges.isEmpty() && endpoint.getProperties().isSortById()) {         exchanges = TwitterSorter.sortByStatusId(exchanges).     }     return exchanges. }
