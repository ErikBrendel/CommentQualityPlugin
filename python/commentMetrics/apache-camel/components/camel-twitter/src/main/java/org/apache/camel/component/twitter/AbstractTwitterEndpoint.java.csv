commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;7;;@Override protected void doStop() throws Exception {     super.doStop().     if (properties.getType() == EndpointType.EVENT && properties.getTwitterStream() != null) {         properties.getTwitterStream().shutdown().     } }
false;public;1;3;;public void configureConsumer(Consumer consumer) throws Exception {     super.configureConsumer(consumer). }
false;public;0;4;;@ManagedAttribute public boolean isSingleton() {     return true. }
false;public;0;3;;public TwitterConfiguration getProperties() {     return properties. }
false;public;1;3;;public void setProperties(TwitterConfiguration properties) {     this.properties = properties. }
false;public;0;4;;@ManagedAttribute public String getLocations() {     return getProperties().getLocations(). }
false;public;1;4;;@ManagedAttribute public void setLocations(String locations) {     getProperties().setLocations(locations). }
false;public;1;4;;@ManagedAttribute public void setFilterOld(boolean filterOld) {     getProperties().setFilterOld(filterOld). }
false;public;0;4;;@ManagedAttribute public boolean isFilterOld() {     return getProperties().isFilterOld(). }
false;public;1;4;;@ManagedAttribute public void setSinceId(long sinceId) {     getProperties().setSinceId(sinceId). }
false;public;0;4;;@ManagedAttribute public long getSinceId() {     return getProperties().getSinceId(). }
false;public;1;4;;@ManagedAttribute public void setLang(String lang) {     getProperties().setLang(lang). }
false;public;0;4;;@ManagedAttribute public String getLang() {     return getProperties().getLang(). }
false;public;1;4;;@ManagedAttribute public void setCount(Integer count) {     getProperties().setCount(count). }
false;public;0;4;;@ManagedAttribute public Integer getCount() {     return getProperties().getCount(). }
false;public;1;4;;@ManagedAttribute public void setNumberOfPages(Integer numberOfPages) {     getProperties().setNumberOfPages(numberOfPages). }
false;public;0;4;;@ManagedAttribute public Integer getNumberOfPages() {     return getProperties().getNumberOfPages(). }
false;public;0;4;;@Override public EndpointType getEndpointType() {     return getProperties().getType(). }
true;public;1;5;/**  * Milliseconds before the next poll.  */ ;/**  * Milliseconds before the next poll.  */ @Override public void setDelay(long delay) {     super.setDelay(delay).     this.delay = delay. }
