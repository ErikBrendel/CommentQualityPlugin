commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;13;;// ********************************* // Parameters validation // ********************************* @Override protected Result verifyParameters(Map<String, Object> parameters) {     ResultBuilder builder = ResultBuilder.withStatusAndScope(Result.Status.OK, Scope.PARAMETERS).error(ResultErrorHelper.requiresOption("accessToken", parameters)).error(ResultErrorHelper.requiresOption("accessTokenSecret", parameters)).error(ResultErrorHelper.requiresOption("consumerKey", parameters)).error(ResultErrorHelper.requiresOption("consumerSecret", parameters)).     // Validate using the catalog     super.verifyParametersAgainstCatalog(builder, parameters).     return builder.build(). }
false;protected;1;6;;// ********************************* // Connectivity validation // ********************************* @Override protected Result verifyConnectivity(Map<String, Object> parameters) {     return ResultBuilder.withStatusAndScope(Result.Status.OK, Scope.CONNECTIVITY).error(parameters, this::verifyCredentials).build(). }
false;private;2;27;;private void verifyCredentials(ResultBuilder builder, Map<String, Object> parameters) throws Exception {     try {         TwitterConfiguration configuration = setProperties(new TwitterConfiguration(), parameters).         Twitter twitter = configuration.getTwitter().         twitter.verifyCredentials().     } catch (TwitterException e) {         // verifyCredentials throws TwitterException when Twitter service or         // network is unavailable or if supplied credential is wrong         ResultErrorBuilder errorBuilder = ResultErrorBuilder.withCodeAndDescription(VerificationError.StandardCode.AUTHENTICATION, e.getErrorMessage()).detail("twitter_error_code", e.getErrorCode()).detail("twitter_status_code", e.getStatusCode()).detail("twitter_exception_code", e.getExceptionCode()).detail("twitter_exception_message", e.getMessage()).detail("twitter_exception_caused-by-network-issue", e.isCausedByNetworkIssue()).detail(VerificationError.ExceptionAttribute.EXCEPTION_CLASS, e.getClass().getName()).detail(VerificationError.ExceptionAttribute.EXCEPTION_INSTANCE, e).         // https://dev.twitter.com/overview/api/response-codes         if (e.getErrorCode() == 89) {             errorBuilder.parameterKey("accessToken").         }         builder.error(errorBuilder.build()).     } }
