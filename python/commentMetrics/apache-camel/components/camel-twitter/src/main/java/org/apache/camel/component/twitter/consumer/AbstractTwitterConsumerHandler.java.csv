# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractTwitterConsumerHandler -> public abstract List<Exchange> pollConsume() throws TwitterException_;1495624263;Called by polling consumers during each poll.  It needs to be separate_from directConsume() since, as an example, streaming API polling allows_tweets to build up between polls.;public abstract List<Exchange> pollConsume() throws TwitterException_;called,by,polling,consumers,during,each,poll,it,needs,to,be,separate,from,direct,consume,since,as,an,example,streaming,api,polling,allows,tweets,to,build,up,between,polls;public,abstract,list,exchange,poll,consume,throws,twitter,exception
AbstractTwitterConsumerHandler -> public abstract List<Exchange> pollConsume() throws TwitterException_;1499245143;Called by polling consumers during each poll.  It needs to be separate_from directConsume() since, as an example, streaming API polling allows_tweets to build up between polls.;public abstract List<Exchange> pollConsume() throws TwitterException_;called,by,polling,consumers,during,each,poll,it,needs,to,be,separate,from,direct,consume,since,as,an,example,streaming,api,polling,allows,tweets,to,build,up,between,polls;public,abstract,list,exchange,poll,consume,throws,twitter,exception
AbstractTwitterConsumerHandler -> public abstract List<Exchange> pollConsume() throws TwitterException_;1499246418;Called by polling consumers during each poll.  It needs to be separate_from directConsume() since, as an example, streaming API polling allows_tweets to build up between polls.;public abstract List<Exchange> pollConsume() throws TwitterException_;called,by,polling,consumers,during,each,poll,it,needs,to,be,separate,from,direct,consume,since,as,an,example,streaming,api,polling,allows,tweets,to,build,up,between,polls;public,abstract,list,exchange,poll,consume,throws,twitter,exception
AbstractTwitterConsumerHandler -> protected void setLastIdIfGreater(long newId);1495624263;Can't assume that the end of the list will be the most recent ID._The Twitter API sometimes returns them slightly out of order.;protected void setLastIdIfGreater(long newId) {_        if (newId > lastId) {_            lastId = newId__        }_    };can,t,assume,that,the,end,of,the,list,will,be,the,most,recent,id,the,twitter,api,sometimes,returns,them,slightly,out,of,order;protected,void,set,last,id,if,greater,long,new,id,if,new,id,last,id,last,id,new,id
AbstractTwitterConsumerHandler -> protected void setLastIdIfGreater(long newId);1499245143;Can't assume that the end of the list will be the most recent ID._The Twitter API sometimes returns them slightly out of order.;protected void setLastIdIfGreater(long newId) {_        if (newId > lastId) {_            lastId = newId__        }_    };can,t,assume,that,the,end,of,the,list,will,be,the,most,recent,id,the,twitter,api,sometimes,returns,them,slightly,out,of,order;protected,void,set,last,id,if,greater,long,new,id,if,new,id,last,id,last,id,new,id
AbstractTwitterConsumerHandler -> protected void setLastIdIfGreater(long newId);1499246418;Can't assume that the end of the list will be the most recent ID._The Twitter API sometimes returns them slightly out of order.;protected void setLastIdIfGreater(long newId) {_        if (newId > lastId) {_            lastId = newId__        }_    };can,t,assume,that,the,end,of,the,list,will,be,the,most,recent,id,the,twitter,api,sometimes,returns,them,slightly,out,of,order;protected,void,set,last,id,if,greater,long,new,id,if,new,id,last,id,last,id,new,id
AbstractTwitterConsumerHandler -> public abstract List<Exchange> directConsume() throws TwitterException_;1495624263;Called by direct consumers.;public abstract List<Exchange> directConsume() throws TwitterException_;called,by,direct,consumers;public,abstract,list,exchange,direct,consume,throws,twitter,exception
AbstractTwitterConsumerHandler -> public abstract List<Exchange> directConsume() throws TwitterException_;1499245143;Called by direct consumers.;public abstract List<Exchange> directConsume() throws TwitterException_;called,by,direct,consumers;public,abstract,list,exchange,direct,consume,throws,twitter,exception
AbstractTwitterConsumerHandler -> public abstract List<Exchange> directConsume() throws TwitterException_;1499246418;Called by direct consumers.;public abstract List<Exchange> directConsume() throws TwitterException_;called,by,direct,consumers;public,abstract,list,exchange,direct,consume,throws,twitter,exception
AbstractTwitterConsumerHandler -> public void setLastId(long sinceId);1495624263;Support to update the Consumer's lastId when starting the consumer;public void setLastId(long sinceId) {_        lastId = sinceId__    };support,to,update,the,consumer,s,last,id,when,starting,the,consumer;public,void,set,last,id,long,since,id,last,id,since,id
AbstractTwitterConsumerHandler -> public void setLastId(long sinceId);1499245143;Support to update the Consumer's lastId when starting the consumer;public void setLastId(long sinceId) {_        lastId = sinceId__    };support,to,update,the,consumer,s,last,id,when,starting,the,consumer;public,void,set,last,id,long,since,id,last,id,since,id
AbstractTwitterConsumerHandler -> public void setLastId(long sinceId);1499246418;Support to update the Consumer's lastId when starting the consumer;public void setLastId(long sinceId) {_        lastId = sinceId__    };support,to,update,the,consumer,s,last,id,when,starting,the,consumer;public,void,set,last,id,long,since,id,last,id,since,id
