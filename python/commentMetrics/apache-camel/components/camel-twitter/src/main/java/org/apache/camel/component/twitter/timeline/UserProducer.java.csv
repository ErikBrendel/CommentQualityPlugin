commented;modifiers;parameterAmount;loc;comment;code
false;public;1;23;;@Override public void process(Exchange exchange) throws Exception {     // update user's status     Object in = exchange.getIn().getBody().     Status response.     if (in instanceof StatusUpdate) {         response = updateStatus((StatusUpdate) in).     } else {         String s = exchange.getIn().getMandatoryBody(String.class).         response = updateStatus(s).     }     /*          * Support the InOut exchange pattern in order to provide access to          * the unique identifier for the published tweet which is returned in the response          * by the Twitter REST API: https://dev.twitter.com/docs/api/1/post/statuses/update          */     if (exchange.getPattern().isOutCapable()) {         // here we just copy the header of in message to the out message         exchange.getOut().copyFrom(exchange.getIn()).         exchange.getOut().setBody(response).     } }
false;private;1;6;;private Status updateStatus(StatusUpdate status) throws Exception {     Status response = endpoint.getProperties().getTwitter().updateStatus(status).     log.debug("Updated status: {}", status).     log.debug("Status id: {}", response.getId()).     return response. }
false;private;1;6;;private Status updateStatus(String status) throws Exception {     Status response = endpoint.getProperties().getTwitter().updateStatus(status).     log.debug("Updated status: {}", status).     log.debug("Status id: {}", response.getId()).     return response. }
