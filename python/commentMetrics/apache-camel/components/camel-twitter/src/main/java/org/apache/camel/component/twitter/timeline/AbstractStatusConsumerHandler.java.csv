commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Override public List<Exchange> pollConsume() throws TwitterException {     List<Status> statusList = doPoll().     for (int i = 0. i < statusList.size(). i++) {         setLastIdIfGreater(statusList.get(i).getId()).     }     return TwitterEventType.STATUS.createExchangeList(endpoint, statusList). }
false;public;0;4;;@Override public List<Exchange> directConsume() throws TwitterException {     return TwitterEventType.STATUS.createExchangeList(endpoint, doDirect()). }
false;protected,abstract;0;1;;protected abstract List<Status> doPoll() throws TwitterException.
false;protected,abstract;0;1;;protected abstract List<Status> doDirect() throws TwitterException.
