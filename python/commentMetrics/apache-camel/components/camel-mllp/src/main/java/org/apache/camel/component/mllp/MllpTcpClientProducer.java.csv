# id;timestamp;commentText;codeText;commentWords;codeWords
MllpTcpClientProducer -> void checkConnection() throws IOException;1481829620;Validate the TCP Connection__@return null if the connection is valid, otherwise the Exception encounted checking the connection;void checkConnection() throws IOException {_        if (null == socket || socket.isClosed() || !socket.isConnected()) {_            socket = new Socket()___            socket.setKeepAlive(endpoint.keepAlive)__            socket.setTcpNoDelay(endpoint.tcpNoDelay)__            if (null != endpoint.receiveBufferSize) {_                socket.setReceiveBufferSize(endpoint.receiveBufferSize)__            } else {_                endpoint.receiveBufferSize = socket.getReceiveBufferSize()__            }_            if (null != endpoint.sendBufferSize) {_                socket.setSendBufferSize(endpoint.sendBufferSize)__            } else {_                endpoint.sendBufferSize = socket.getSendBufferSize()__            }_            socket.setReuseAddress(endpoint.reuseAddress)__            socket.setSoLinger(false, -1)___            InetSocketAddress socketAddress__            if (null == endpoint.getHostname()) {_                socketAddress = new InetSocketAddress(endpoint.getPort())__            } else {_                socketAddress = new InetSocketAddress(endpoint.getHostname(), endpoint.getPort())__            }__            log.debug("Connecting to socket on {}", socketAddress)__            socket.connect(socketAddress, endpoint.connectTimeout)___            log.debug("Creating MllpSocketReader and MllpSocketWriter")__            mllpSocketReader = new MllpSocketReader(socket, endpoint.receiveTimeout, endpoint.readTimeout, true)__            if (endpoint.bufferWrites) {_                mllpSocketWriter = new MllpBufferedSocketWriter(socket, false)__            } else {_                mllpSocketWriter = new MllpSocketWriter(socket, false)__            }_        }_    };validate,the,tcp,connection,return,null,if,the,connection,is,valid,otherwise,the,exception,encounted,checking,the,connection;void,check,connection,throws,ioexception,if,null,socket,socket,is,closed,socket,is,connected,socket,new,socket,socket,set,keep,alive,endpoint,keep,alive,socket,set,tcp,no,delay,endpoint,tcp,no,delay,if,null,endpoint,receive,buffer,size,socket,set,receive,buffer,size,endpoint,receive,buffer,size,else,endpoint,receive,buffer,size,socket,get,receive,buffer,size,if,null,endpoint,send,buffer,size,socket,set,send,buffer,size,endpoint,send,buffer,size,else,endpoint,send,buffer,size,socket,get,send,buffer,size,socket,set,reuse,address,endpoint,reuse,address,socket,set,so,linger,false,1,inet,socket,address,socket,address,if,null,endpoint,get,hostname,socket,address,new,inet,socket,address,endpoint,get,port,else,socket,address,new,inet,socket,address,endpoint,get,hostname,endpoint,get,port,log,debug,connecting,to,socket,on,socket,address,socket,connect,socket,address,endpoint,connect,timeout,log,debug,creating,mllp,socket,reader,and,mllp,socket,writer,mllp,socket,reader,new,mllp,socket,reader,socket,endpoint,receive,timeout,endpoint,read,timeout,true,if,endpoint,buffer,writes,mllp,socket,writer,new,mllp,buffered,socket,writer,socket,false,else,mllp,socket,writer,new,mllp,socket,writer,socket,false
MllpTcpClientProducer -> void checkConnection() throws IOException;1481875493;Validate the TCP Connection__@return null if the connection is valid, otherwise the Exception encountered checking the connection;void checkConnection() throws IOException {_        if (null == socket || socket.isClosed() || !socket.isConnected()) {_            socket = new Socket()___            socket.setKeepAlive(endpoint.keepAlive)__            socket.setTcpNoDelay(endpoint.tcpNoDelay)__            if (null != endpoint.receiveBufferSize) {_                socket.setReceiveBufferSize(endpoint.receiveBufferSize)__            } else {_                endpoint.receiveBufferSize = socket.getReceiveBufferSize()__            }_            if (null != endpoint.sendBufferSize) {_                socket.setSendBufferSize(endpoint.sendBufferSize)__            } else {_                endpoint.sendBufferSize = socket.getSendBufferSize()__            }_            socket.setReuseAddress(endpoint.reuseAddress)__            socket.setSoLinger(false, -1)___            InetSocketAddress socketAddress__            if (null == endpoint.getHostname()) {_                socketAddress = new InetSocketAddress(endpoint.getPort())__            } else {_                socketAddress = new InetSocketAddress(endpoint.getHostname(), endpoint.getPort())__            }__            log.debug("Connecting to socket on {}", socketAddress)__            socket.connect(socketAddress, endpoint.connectTimeout)___            log.debug("Creating MllpSocketReader and MllpSocketWriter")__            mllpSocketReader = new MllpSocketReader(socket, endpoint.receiveTimeout, endpoint.readTimeout, true)__            if (endpoint.bufferWrites) {_                mllpSocketWriter = new MllpBufferedSocketWriter(socket, false)__            } else {_                mllpSocketWriter = new MllpSocketWriter(socket, false)__            }_        }_    };validate,the,tcp,connection,return,null,if,the,connection,is,valid,otherwise,the,exception,encountered,checking,the,connection;void,check,connection,throws,ioexception,if,null,socket,socket,is,closed,socket,is,connected,socket,new,socket,socket,set,keep,alive,endpoint,keep,alive,socket,set,tcp,no,delay,endpoint,tcp,no,delay,if,null,endpoint,receive,buffer,size,socket,set,receive,buffer,size,endpoint,receive,buffer,size,else,endpoint,receive,buffer,size,socket,get,receive,buffer,size,if,null,endpoint,send,buffer,size,socket,set,send,buffer,size,endpoint,send,buffer,size,else,endpoint,send,buffer,size,socket,get,send,buffer,size,socket,set,reuse,address,endpoint,reuse,address,socket,set,so,linger,false,1,inet,socket,address,socket,address,if,null,endpoint,get,hostname,socket,address,new,inet,socket,address,endpoint,get,port,else,socket,address,new,inet,socket,address,endpoint,get,hostname,endpoint,get,port,log,debug,connecting,to,socket,on,socket,address,socket,connect,socket,address,endpoint,connect,timeout,log,debug,creating,mllp,socket,reader,and,mllp,socket,writer,mllp,socket,reader,new,mllp,socket,reader,socket,endpoint,receive,timeout,endpoint,read,timeout,true,if,endpoint,buffer,writes,mllp,socket,writer,new,mllp,buffered,socket,writer,socket,false,else,mllp,socket,writer,new,mllp,socket,writer,socket,false
MllpTcpClientProducer -> void checkConnection() throws IOException;1515779403;Validate the TCP Connection__@return null if the connection is valid, otherwise the Exception encounted checking the connection;void checkConnection() throws IOException {_        if (null == socket || socket.isClosed() || !socket.isConnected()) {_            socket = new Socket()___            if (getConfiguration().hasKeepAlive()) {_                socket.setKeepAlive(getConfiguration().getKeepAlive())__            }_            if (getConfiguration().hasTcpNoDelay()) {_                socket.setTcpNoDelay(getConfiguration().getTcpNoDelay())__            }__            if (getConfiguration().hasReceiveBufferSize()) {_                socket.setReceiveBufferSize(getConfiguration().getReceiveBufferSize())__            }_            if (getConfiguration().hasSendBufferSize()) {_                socket.setSendBufferSize(getConfiguration().getSendBufferSize())__            }_            if (getConfiguration().hasReuseAddress()) {_                socket.setReuseAddress(getConfiguration().getReuseAddress())__            }__            socket.setSoLinger(false, -1)___            InetSocketAddress socketAddress__            if (null == getEndpoint().getHostname()) {_                socketAddress = new InetSocketAddress(getEndpoint().getPort())__            } else {_                socketAddress = new InetSocketAddress(getEndpoint().getHostname(), getEndpoint().getPort())__            }__            socket.connect(socketAddress, getConfiguration().getConnectTimeout())__            SocketAddress localSocketAddress = socket.getLocalSocketAddress()__            if (localSocketAddress != null) {_                cachedLocalAddress = localSocketAddress.toString()__            }_            SocketAddress remoteSocketAddress = socket.getRemoteSocketAddress()__            if (remoteSocketAddress != null) {_                cachedRemoteAddress = remoteSocketAddress.toString()__            }_            cachedCombinedAddress = MllpSocketBuffer.formatAddressString(localSocketAddress, remoteSocketAddress)___            log.info("checkConnection() - established new connection {}", cachedCombinedAddress)__            getEndpoint().updateLastConnectionEstablishedTicks()___            if (getConfiguration().hasIdleTimeout()) {_                idleTimeoutExecutor.schedule(this, getConfiguration().getIdleTimeout(), TimeUnit.MILLISECONDS)__            }_        } else {_            log.debug("checkConnection() - Connection is still valid - no new connection required")__        }_    };validate,the,tcp,connection,return,null,if,the,connection,is,valid,otherwise,the,exception,encounted,checking,the,connection;void,check,connection,throws,ioexception,if,null,socket,socket,is,closed,socket,is,connected,socket,new,socket,if,get,configuration,has,keep,alive,socket,set,keep,alive,get,configuration,get,keep,alive,if,get,configuration,has,tcp,no,delay,socket,set,tcp,no,delay,get,configuration,get,tcp,no,delay,if,get,configuration,has,receive,buffer,size,socket,set,receive,buffer,size,get,configuration,get,receive,buffer,size,if,get,configuration,has,send,buffer,size,socket,set,send,buffer,size,get,configuration,get,send,buffer,size,if,get,configuration,has,reuse,address,socket,set,reuse,address,get,configuration,get,reuse,address,socket,set,so,linger,false,1,inet,socket,address,socket,address,if,null,get,endpoint,get,hostname,socket,address,new,inet,socket,address,get,endpoint,get,port,else,socket,address,new,inet,socket,address,get,endpoint,get,hostname,get,endpoint,get,port,socket,connect,socket,address,get,configuration,get,connect,timeout,socket,address,local,socket,address,socket,get,local,socket,address,if,local,socket,address,null,cached,local,address,local,socket,address,to,string,socket,address,remote,socket,address,socket,get,remote,socket,address,if,remote,socket,address,null,cached,remote,address,remote,socket,address,to,string,cached,combined,address,mllp,socket,buffer,format,address,string,local,socket,address,remote,socket,address,log,info,check,connection,established,new,connection,cached,combined,address,get,endpoint,update,last,connection,established,ticks,if,get,configuration,has,idle,timeout,idle,timeout,executor,schedule,this,get,configuration,get,idle,timeout,time,unit,milliseconds,else,log,debug,check,connection,connection,is,still,valid,no,new,connection,required
MllpTcpClientProducer -> void checkConnection() throws IOException;1515781364;Validate the TCP Connection__@return null if the connection is valid, otherwise the Exception encounted checking the connection;void checkConnection() throws IOException {_        if (null == socket || socket.isClosed() || !socket.isConnected()) {_            socket = new Socket()___            if (getConfiguration().hasKeepAlive()) {_                socket.setKeepAlive(getConfiguration().getKeepAlive())__            }_            if (getConfiguration().hasTcpNoDelay()) {_                socket.setTcpNoDelay(getConfiguration().getTcpNoDelay())__            }__            if (getConfiguration().hasReceiveBufferSize()) {_                socket.setReceiveBufferSize(getConfiguration().getReceiveBufferSize())__            }_            if (getConfiguration().hasSendBufferSize()) {_                socket.setSendBufferSize(getConfiguration().getSendBufferSize())__            }_            if (getConfiguration().hasReuseAddress()) {_                socket.setReuseAddress(getConfiguration().getReuseAddress())__            }__            socket.setSoLinger(false, -1)___            InetSocketAddress socketAddress__            if (null == getEndpoint().getHostname()) {_                socketAddress = new InetSocketAddress(getEndpoint().getPort())__            } else {_                socketAddress = new InetSocketAddress(getEndpoint().getHostname(), getEndpoint().getPort())__            }__            socket.connect(socketAddress, getConfiguration().getConnectTimeout())__            SocketAddress localSocketAddress = socket.getLocalSocketAddress()__            if (localSocketAddress != null) {_                cachedLocalAddress = localSocketAddress.toString()__            }_            SocketAddress remoteSocketAddress = socket.getRemoteSocketAddress()__            if (remoteSocketAddress != null) {_                cachedRemoteAddress = remoteSocketAddress.toString()__            }_            cachedCombinedAddress = MllpSocketBuffer.formatAddressString(localSocketAddress, remoteSocketAddress)___            log.info("checkConnection() - established new connection {}", cachedCombinedAddress)__            getEndpoint().updateLastConnectionEstablishedTicks()___            if (getConfiguration().hasIdleTimeout()) {_                idleTimeoutExecutor.schedule(this, getConfiguration().getIdleTimeout(), TimeUnit.MILLISECONDS)__            }_        } else {_            log.debug("checkConnection() - Connection is still valid - no new connection required")__        }_    };validate,the,tcp,connection,return,null,if,the,connection,is,valid,otherwise,the,exception,encounted,checking,the,connection;void,check,connection,throws,ioexception,if,null,socket,socket,is,closed,socket,is,connected,socket,new,socket,if,get,configuration,has,keep,alive,socket,set,keep,alive,get,configuration,get,keep,alive,if,get,configuration,has,tcp,no,delay,socket,set,tcp,no,delay,get,configuration,get,tcp,no,delay,if,get,configuration,has,receive,buffer,size,socket,set,receive,buffer,size,get,configuration,get,receive,buffer,size,if,get,configuration,has,send,buffer,size,socket,set,send,buffer,size,get,configuration,get,send,buffer,size,if,get,configuration,has,reuse,address,socket,set,reuse,address,get,configuration,get,reuse,address,socket,set,so,linger,false,1,inet,socket,address,socket,address,if,null,get,endpoint,get,hostname,socket,address,new,inet,socket,address,get,endpoint,get,port,else,socket,address,new,inet,socket,address,get,endpoint,get,hostname,get,endpoint,get,port,socket,connect,socket,address,get,configuration,get,connect,timeout,socket,address,local,socket,address,socket,get,local,socket,address,if,local,socket,address,null,cached,local,address,local,socket,address,to,string,socket,address,remote,socket,address,socket,get,remote,socket,address,if,remote,socket,address,null,cached,remote,address,remote,socket,address,to,string,cached,combined,address,mllp,socket,buffer,format,address,string,local,socket,address,remote,socket,address,log,info,check,connection,established,new,connection,cached,combined,address,get,endpoint,update,last,connection,established,ticks,if,get,configuration,has,idle,timeout,idle,timeout,executor,schedule,this,get,configuration,get,idle,timeout,time,unit,milliseconds,else,log,debug,check,connection,connection,is,still,valid,no,new,connection,required
MllpTcpClientProducer -> void checkConnection() throws IOException;1516727639;Validate the TCP Connection__@return null if the connection is valid, otherwise the Exception encounted checking the connection;void checkConnection() throws IOException {_        if (null == socket || socket.isClosed() || !socket.isConnected()) {_            socket = new Socket()___            if (getConfiguration().hasKeepAlive()) {_                socket.setKeepAlive(getConfiguration().getKeepAlive())__            }_            if (getConfiguration().hasTcpNoDelay()) {_                socket.setTcpNoDelay(getConfiguration().getTcpNoDelay())__            }__            if (getConfiguration().hasReceiveBufferSize()) {_                socket.setReceiveBufferSize(getConfiguration().getReceiveBufferSize())__            }_            if (getConfiguration().hasSendBufferSize()) {_                socket.setSendBufferSize(getConfiguration().getSendBufferSize())__            }_            if (getConfiguration().hasReuseAddress()) {_                socket.setReuseAddress(getConfiguration().getReuseAddress())__            }__            socket.setSoLinger(false, -1)___            InetSocketAddress socketAddress__            if (null == getEndpoint().getHostname()) {_                socketAddress = new InetSocketAddress(getEndpoint().getPort())__            } else {_                socketAddress = new InetSocketAddress(getEndpoint().getHostname(), getEndpoint().getPort())__            }__            socket.connect(socketAddress, getConfiguration().getConnectTimeout())__            SocketAddress localSocketAddress = socket.getLocalSocketAddress()__            if (localSocketAddress != null) {_                cachedLocalAddress = localSocketAddress.toString()__            }_            SocketAddress remoteSocketAddress = socket.getRemoteSocketAddress()__            if (remoteSocketAddress != null) {_                cachedRemoteAddress = remoteSocketAddress.toString()__            }_            cachedCombinedAddress = MllpSocketBuffer.formatAddressString(localSocketAddress, remoteSocketAddress)___            log.info("checkConnection() - established new connection {}", cachedCombinedAddress)__            getEndpoint().updateLastConnectionEstablishedTicks()___            if (getConfiguration().hasIdleTimeout()) {_                idleTimeoutExecutor.schedule(this, getConfiguration().getIdleTimeout(), TimeUnit.MILLISECONDS)__            }_        } else {_            log.debug("checkConnection() - Connection is still valid - no new connection required")__        }_    };validate,the,tcp,connection,return,null,if,the,connection,is,valid,otherwise,the,exception,encounted,checking,the,connection;void,check,connection,throws,ioexception,if,null,socket,socket,is,closed,socket,is,connected,socket,new,socket,if,get,configuration,has,keep,alive,socket,set,keep,alive,get,configuration,get,keep,alive,if,get,configuration,has,tcp,no,delay,socket,set,tcp,no,delay,get,configuration,get,tcp,no,delay,if,get,configuration,has,receive,buffer,size,socket,set,receive,buffer,size,get,configuration,get,receive,buffer,size,if,get,configuration,has,send,buffer,size,socket,set,send,buffer,size,get,configuration,get,send,buffer,size,if,get,configuration,has,reuse,address,socket,set,reuse,address,get,configuration,get,reuse,address,socket,set,so,linger,false,1,inet,socket,address,socket,address,if,null,get,endpoint,get,hostname,socket,address,new,inet,socket,address,get,endpoint,get,port,else,socket,address,new,inet,socket,address,get,endpoint,get,hostname,get,endpoint,get,port,socket,connect,socket,address,get,configuration,get,connect,timeout,socket,address,local,socket,address,socket,get,local,socket,address,if,local,socket,address,null,cached,local,address,local,socket,address,to,string,socket,address,remote,socket,address,socket,get,remote,socket,address,if,remote,socket,address,null,cached,remote,address,remote,socket,address,to,string,cached,combined,address,mllp,socket,buffer,format,address,string,local,socket,address,remote,socket,address,log,info,check,connection,established,new,connection,cached,combined,address,get,endpoint,update,last,connection,established,ticks,if,get,configuration,has,idle,timeout,idle,timeout,executor,schedule,this,get,configuration,get,idle,timeout,time,unit,milliseconds,else,log,debug,check,connection,connection,is,still,valid,no,new,connection,required
MllpTcpClientProducer -> void checkConnection() throws IOException;1518733370;Validate the TCP Connection__@return null if the connection is valid, otherwise the Exception encounted checking the connection;void checkConnection() throws IOException {_        if (null == socket || socket.isClosed() || !socket.isConnected()) {_            socket = new Socket()___            if (getConfiguration().hasKeepAlive()) {_                socket.setKeepAlive(getConfiguration().getKeepAlive())__            }_            if (getConfiguration().hasTcpNoDelay()) {_                socket.setTcpNoDelay(getConfiguration().getTcpNoDelay())__            }__            if (getConfiguration().hasReceiveBufferSize()) {_                socket.setReceiveBufferSize(getConfiguration().getReceiveBufferSize())__            }_            if (getConfiguration().hasSendBufferSize()) {_                socket.setSendBufferSize(getConfiguration().getSendBufferSize())__            }_            if (getConfiguration().hasReuseAddress()) {_                socket.setReuseAddress(getConfiguration().getReuseAddress())__            }__            socket.setSoLinger(false, -1)___            InetSocketAddress socketAddress__            if (null == getEndpoint().getHostname()) {_                socketAddress = new InetSocketAddress(getEndpoint().getPort())__            } else {_                socketAddress = new InetSocketAddress(getEndpoint().getHostname(), getEndpoint().getPort())__            }__            socket.connect(socketAddress, getConfiguration().getConnectTimeout())__            SocketAddress localSocketAddress = socket.getLocalSocketAddress()__            if (localSocketAddress != null) {_                cachedLocalAddress = localSocketAddress.toString()__            }_            SocketAddress remoteSocketAddress = socket.getRemoteSocketAddress()__            if (remoteSocketAddress != null) {_                cachedRemoteAddress = remoteSocketAddress.toString()__            }_            cachedCombinedAddress = MllpSocketBuffer.formatAddressString(localSocketAddress, remoteSocketAddress)___            log.info("checkConnection() - established new connection {}", cachedCombinedAddress)__            getEndpoint().updateLastConnectionEstablishedTicks()___            if (getConfiguration().hasIdleTimeout()) {_                idleTimeoutExecutor.schedule(this, getConfiguration().getIdleTimeout(), TimeUnit.MILLISECONDS)__            }_        } else {_            log.debug("checkConnection() - Connection is still valid - no new connection required")__        }_    };validate,the,tcp,connection,return,null,if,the,connection,is,valid,otherwise,the,exception,encounted,checking,the,connection;void,check,connection,throws,ioexception,if,null,socket,socket,is,closed,socket,is,connected,socket,new,socket,if,get,configuration,has,keep,alive,socket,set,keep,alive,get,configuration,get,keep,alive,if,get,configuration,has,tcp,no,delay,socket,set,tcp,no,delay,get,configuration,get,tcp,no,delay,if,get,configuration,has,receive,buffer,size,socket,set,receive,buffer,size,get,configuration,get,receive,buffer,size,if,get,configuration,has,send,buffer,size,socket,set,send,buffer,size,get,configuration,get,send,buffer,size,if,get,configuration,has,reuse,address,socket,set,reuse,address,get,configuration,get,reuse,address,socket,set,so,linger,false,1,inet,socket,address,socket,address,if,null,get,endpoint,get,hostname,socket,address,new,inet,socket,address,get,endpoint,get,port,else,socket,address,new,inet,socket,address,get,endpoint,get,hostname,get,endpoint,get,port,socket,connect,socket,address,get,configuration,get,connect,timeout,socket,address,local,socket,address,socket,get,local,socket,address,if,local,socket,address,null,cached,local,address,local,socket,address,to,string,socket,address,remote,socket,address,socket,get,remote,socket,address,if,remote,socket,address,null,cached,remote,address,remote,socket,address,to,string,cached,combined,address,mllp,socket,buffer,format,address,string,local,socket,address,remote,socket,address,log,info,check,connection,established,new,connection,cached,combined,address,get,endpoint,update,last,connection,established,ticks,if,get,configuration,has,idle,timeout,idle,timeout,executor,schedule,this,get,configuration,get,idle,timeout,time,unit,milliseconds,else,log,debug,check,connection,connection,is,still,valid,no,new,connection,required
MllpTcpClientProducer -> void checkConnection() throws IOException;1520374125;Validate the TCP Connection__@return null if the connection is valid, otherwise the Exception encounted checking the connection;void checkConnection() throws IOException {_        if (null == socket || socket.isClosed() || !socket.isConnected()) {_            socket = new Socket()___            if (getConfiguration().hasKeepAlive()) {_                socket.setKeepAlive(getConfiguration().getKeepAlive())__            }_            if (getConfiguration().hasTcpNoDelay()) {_                socket.setTcpNoDelay(getConfiguration().getTcpNoDelay())__            }__            if (getConfiguration().hasReceiveBufferSize()) {_                socket.setReceiveBufferSize(getConfiguration().getReceiveBufferSize())__            }_            if (getConfiguration().hasSendBufferSize()) {_                socket.setSendBufferSize(getConfiguration().getSendBufferSize())__            }_            if (getConfiguration().hasReuseAddress()) {_                socket.setReuseAddress(getConfiguration().getReuseAddress())__            }__            socket.setSoLinger(false, -1)___            InetSocketAddress socketAddress__            if (null == getEndpoint().getHostname()) {_                socketAddress = new InetSocketAddress(getEndpoint().getPort())__            } else {_                socketAddress = new InetSocketAddress(getEndpoint().getHostname(), getEndpoint().getPort())__            }__            socket.connect(socketAddress, getConfiguration().getConnectTimeout())__            SocketAddress localSocketAddress = socket.getLocalSocketAddress()__            if (localSocketAddress != null) {_                cachedLocalAddress = localSocketAddress.toString()__            }_            SocketAddress remoteSocketAddress = socket.getRemoteSocketAddress()__            if (remoteSocketAddress != null) {_                cachedRemoteAddress = remoteSocketAddress.toString()__            }_            cachedCombinedAddress = MllpSocketBuffer.formatAddressString(localSocketAddress, remoteSocketAddress)___            log.info("checkConnection() - established new connection {}", cachedCombinedAddress)__            getEndpoint().updateLastConnectionEstablishedTicks()___            if (getConfiguration().hasIdleTimeout()) {_                idleTimeoutExecutor.schedule(this, getConfiguration().getIdleTimeout(), TimeUnit.MILLISECONDS)__            }_        } else {_            log.debug("checkConnection() - Connection is still valid - no new connection required")__        }_    };validate,the,tcp,connection,return,null,if,the,connection,is,valid,otherwise,the,exception,encounted,checking,the,connection;void,check,connection,throws,ioexception,if,null,socket,socket,is,closed,socket,is,connected,socket,new,socket,if,get,configuration,has,keep,alive,socket,set,keep,alive,get,configuration,get,keep,alive,if,get,configuration,has,tcp,no,delay,socket,set,tcp,no,delay,get,configuration,get,tcp,no,delay,if,get,configuration,has,receive,buffer,size,socket,set,receive,buffer,size,get,configuration,get,receive,buffer,size,if,get,configuration,has,send,buffer,size,socket,set,send,buffer,size,get,configuration,get,send,buffer,size,if,get,configuration,has,reuse,address,socket,set,reuse,address,get,configuration,get,reuse,address,socket,set,so,linger,false,1,inet,socket,address,socket,address,if,null,get,endpoint,get,hostname,socket,address,new,inet,socket,address,get,endpoint,get,port,else,socket,address,new,inet,socket,address,get,endpoint,get,hostname,get,endpoint,get,port,socket,connect,socket,address,get,configuration,get,connect,timeout,socket,address,local,socket,address,socket,get,local,socket,address,if,local,socket,address,null,cached,local,address,local,socket,address,to,string,socket,address,remote,socket,address,socket,get,remote,socket,address,if,remote,socket,address,null,cached,remote,address,remote,socket,address,to,string,cached,combined,address,mllp,socket,buffer,format,address,string,local,socket,address,remote,socket,address,log,info,check,connection,established,new,connection,cached,combined,address,get,endpoint,update,last,connection,established,ticks,if,get,configuration,has,idle,timeout,idle,timeout,executor,schedule,this,get,configuration,get,idle,timeout,time,unit,milliseconds,else,log,debug,check,connection,connection,is,still,valid,no,new,connection,required
MllpTcpClientProducer -> void checkConnection() throws IOException;1521820500;Validate the TCP Connection__@return null if the connection is valid, otherwise the Exception encounted checking the connection;void checkConnection() throws IOException {_        if (null == socket || socket.isClosed() || !socket.isConnected()) {_            if (socket == null) {_                log.debug("checkConnection() - Socket is null - attempting to establish connection", socket)__            } else if (socket.isClosed()) {_                log.info("checkConnection() - Socket {} is closed - attempting to establish new connection", socket)__            } else if (!socket.isConnected()) {_                log.info("checkConnection() - Socket {} is not connected - attempting to establish new connection", socket)__            }__            Socket newSocket = new Socket()___            if (getConfiguration().hasKeepAlive()) {_                newSocket.setKeepAlive(getConfiguration().getKeepAlive())__            }_            if (getConfiguration().hasTcpNoDelay()) {_                newSocket.setTcpNoDelay(getConfiguration().getTcpNoDelay())__            }__            if (getConfiguration().hasReceiveBufferSize()) {_                newSocket.setReceiveBufferSize(getConfiguration().getReceiveBufferSize())__            }_            if (getConfiguration().hasSendBufferSize()) {_                newSocket.setSendBufferSize(getConfiguration().getSendBufferSize())__            }_            if (getConfiguration().hasReuseAddress()) {_                newSocket.setReuseAddress(getConfiguration().getReuseAddress())__            }__            newSocket.setSoLinger(false, -1)___            InetSocketAddress socketAddress__            if (null == getEndpoint().getHostname()) {_                socketAddress = new InetSocketAddress(getEndpoint().getPort())__            } else {_                socketAddress = new InetSocketAddress(getEndpoint().getHostname(), getEndpoint().getPort())__            }__            newSocket.connect(socketAddress, getConfiguration().getConnectTimeout())__            log.info("checkConnection() - established new connection {}", newSocket)__            getEndpoint().updateLastConnectionEstablishedTicks()___            socket = newSocket___            SocketAddress localSocketAddress = socket.getLocalSocketAddress()__            if (localSocketAddress != null) {_                cachedLocalAddress = localSocketAddress.toString()__            }_            SocketAddress remoteSocketAddress = socket.getRemoteSocketAddress()__            if (remoteSocketAddress != null) {_                cachedRemoteAddress = remoteSocketAddress.toString()__            }_            cachedCombinedAddress = MllpSocketBuffer.formatAddressString(localSocketAddress, remoteSocketAddress)___            if (getConfiguration().hasIdleTimeout()) {_                log.debug("Scheduling initial idle producer connection check of {} in {} milliseconds", getConnectionAddress(), getConfiguration().getIdleTimeout())__                idleTimeoutExecutor.schedule(this, getConfiguration().getIdleTimeout(), TimeUnit.MILLISECONDS)__            }_        } else {_            log.debug("checkConnection() - Connection {} is still valid - no new connection required", socket)__        }_    };validate,the,tcp,connection,return,null,if,the,connection,is,valid,otherwise,the,exception,encounted,checking,the,connection;void,check,connection,throws,ioexception,if,null,socket,socket,is,closed,socket,is,connected,if,socket,null,log,debug,check,connection,socket,is,null,attempting,to,establish,connection,socket,else,if,socket,is,closed,log,info,check,connection,socket,is,closed,attempting,to,establish,new,connection,socket,else,if,socket,is,connected,log,info,check,connection,socket,is,not,connected,attempting,to,establish,new,connection,socket,socket,new,socket,new,socket,if,get,configuration,has,keep,alive,new,socket,set,keep,alive,get,configuration,get,keep,alive,if,get,configuration,has,tcp,no,delay,new,socket,set,tcp,no,delay,get,configuration,get,tcp,no,delay,if,get,configuration,has,receive,buffer,size,new,socket,set,receive,buffer,size,get,configuration,get,receive,buffer,size,if,get,configuration,has,send,buffer,size,new,socket,set,send,buffer,size,get,configuration,get,send,buffer,size,if,get,configuration,has,reuse,address,new,socket,set,reuse,address,get,configuration,get,reuse,address,new,socket,set,so,linger,false,1,inet,socket,address,socket,address,if,null,get,endpoint,get,hostname,socket,address,new,inet,socket,address,get,endpoint,get,port,else,socket,address,new,inet,socket,address,get,endpoint,get,hostname,get,endpoint,get,port,new,socket,connect,socket,address,get,configuration,get,connect,timeout,log,info,check,connection,established,new,connection,new,socket,get,endpoint,update,last,connection,established,ticks,socket,new,socket,socket,address,local,socket,address,socket,get,local,socket,address,if,local,socket,address,null,cached,local,address,local,socket,address,to,string,socket,address,remote,socket,address,socket,get,remote,socket,address,if,remote,socket,address,null,cached,remote,address,remote,socket,address,to,string,cached,combined,address,mllp,socket,buffer,format,address,string,local,socket,address,remote,socket,address,if,get,configuration,has,idle,timeout,log,debug,scheduling,initial,idle,producer,connection,check,of,in,milliseconds,get,connection,address,get,configuration,get,idle,timeout,idle,timeout,executor,schedule,this,get,configuration,get,idle,timeout,time,unit,milliseconds,else,log,debug,check,connection,connection,is,still,valid,no,new,connection,required,socket
MllpTcpClientProducer -> void checkConnection() throws IOException;1521820516;Validate the TCP Connection__@return null if the connection is valid, otherwise the Exception encounted checking the connection;void checkConnection() throws IOException {_        if (null == socket || socket.isClosed() || !socket.isConnected()) {_            if (socket == null) {_                log.debug("checkConnection() - Socket is null - attempting to establish connection", socket)__            } else if (socket.isClosed()) {_                log.info("checkConnection() - Socket {} is closed - attempting to establish new connection", socket)__            } else if (!socket.isConnected()) {_                log.info("checkConnection() - Socket {} is not connected - attempting to establish new connection", socket)__            }__            Socket newSocket = new Socket()___            if (getConfiguration().hasKeepAlive()) {_                newSocket.setKeepAlive(getConfiguration().getKeepAlive())__            }_            if (getConfiguration().hasTcpNoDelay()) {_                newSocket.setTcpNoDelay(getConfiguration().getTcpNoDelay())__            }__            if (getConfiguration().hasReceiveBufferSize()) {_                newSocket.setReceiveBufferSize(getConfiguration().getReceiveBufferSize())__            }_            if (getConfiguration().hasSendBufferSize()) {_                newSocket.setSendBufferSize(getConfiguration().getSendBufferSize())__            }_            if (getConfiguration().hasReuseAddress()) {_                newSocket.setReuseAddress(getConfiguration().getReuseAddress())__            }__            newSocket.setSoLinger(false, -1)___            InetSocketAddress socketAddress__            if (null == getEndpoint().getHostname()) {_                socketAddress = new InetSocketAddress(getEndpoint().getPort())__            } else {_                socketAddress = new InetSocketAddress(getEndpoint().getHostname(), getEndpoint().getPort())__            }__            newSocket.connect(socketAddress, getConfiguration().getConnectTimeout())__            log.info("checkConnection() - established new connection {}", newSocket)__            getEndpoint().updateLastConnectionEstablishedTicks()___            socket = newSocket___            SocketAddress localSocketAddress = socket.getLocalSocketAddress()__            if (localSocketAddress != null) {_                cachedLocalAddress = localSocketAddress.toString()__            }_            SocketAddress remoteSocketAddress = socket.getRemoteSocketAddress()__            if (remoteSocketAddress != null) {_                cachedRemoteAddress = remoteSocketAddress.toString()__            }_            cachedCombinedAddress = MllpSocketBuffer.formatAddressString(localSocketAddress, remoteSocketAddress)___            if (getConfiguration().hasIdleTimeout()) {_                log.debug("Scheduling initial idle producer connection check of {} in {} milliseconds", getConnectionAddress(), getConfiguration().getIdleTimeout())__                idleTimeoutExecutor.schedule(this, getConfiguration().getIdleTimeout(), TimeUnit.MILLISECONDS)__            }_        } else {_            log.debug("checkConnection() - Connection {} is still valid - no new connection required", socket)__        }_    };validate,the,tcp,connection,return,null,if,the,connection,is,valid,otherwise,the,exception,encounted,checking,the,connection;void,check,connection,throws,ioexception,if,null,socket,socket,is,closed,socket,is,connected,if,socket,null,log,debug,check,connection,socket,is,null,attempting,to,establish,connection,socket,else,if,socket,is,closed,log,info,check,connection,socket,is,closed,attempting,to,establish,new,connection,socket,else,if,socket,is,connected,log,info,check,connection,socket,is,not,connected,attempting,to,establish,new,connection,socket,socket,new,socket,new,socket,if,get,configuration,has,keep,alive,new,socket,set,keep,alive,get,configuration,get,keep,alive,if,get,configuration,has,tcp,no,delay,new,socket,set,tcp,no,delay,get,configuration,get,tcp,no,delay,if,get,configuration,has,receive,buffer,size,new,socket,set,receive,buffer,size,get,configuration,get,receive,buffer,size,if,get,configuration,has,send,buffer,size,new,socket,set,send,buffer,size,get,configuration,get,send,buffer,size,if,get,configuration,has,reuse,address,new,socket,set,reuse,address,get,configuration,get,reuse,address,new,socket,set,so,linger,false,1,inet,socket,address,socket,address,if,null,get,endpoint,get,hostname,socket,address,new,inet,socket,address,get,endpoint,get,port,else,socket,address,new,inet,socket,address,get,endpoint,get,hostname,get,endpoint,get,port,new,socket,connect,socket,address,get,configuration,get,connect,timeout,log,info,check,connection,established,new,connection,new,socket,get,endpoint,update,last,connection,established,ticks,socket,new,socket,socket,address,local,socket,address,socket,get,local,socket,address,if,local,socket,address,null,cached,local,address,local,socket,address,to,string,socket,address,remote,socket,address,socket,get,remote,socket,address,if,remote,socket,address,null,cached,remote,address,remote,socket,address,to,string,cached,combined,address,mllp,socket,buffer,format,address,string,local,socket,address,remote,socket,address,if,get,configuration,has,idle,timeout,log,debug,scheduling,initial,idle,producer,connection,check,of,in,milliseconds,get,connection,address,get,configuration,get,idle,timeout,idle,timeout,executor,schedule,this,get,configuration,get,idle,timeout,time,unit,milliseconds,else,log,debug,check,connection,connection,is,still,valid,no,new,connection,required,socket
MllpTcpClientProducer -> void checkConnection() throws IOException;1521842963;Validate the TCP Connection__@return null if the connection is valid, otherwise the Exception encounted checking the connection;void checkConnection() throws IOException {_        if (null == socket || socket.isClosed() || !socket.isConnected()) {_            if (socket == null) {_                log.debug("checkConnection() - Socket is null - attempting to establish connection", socket)__            } else if (socket.isClosed()) {_                log.info("checkConnection() - Socket {} is closed - attempting to establish new connection", socket)__            } else if (!socket.isConnected()) {_                log.info("checkConnection() - Socket {} is not connected - attempting to establish new connection", socket)__            }__            Socket newSocket = new Socket()___            if (getConfiguration().hasKeepAlive()) {_                newSocket.setKeepAlive(getConfiguration().getKeepAlive())__            }_            if (getConfiguration().hasTcpNoDelay()) {_                newSocket.setTcpNoDelay(getConfiguration().getTcpNoDelay())__            }__            if (getConfiguration().hasReceiveBufferSize()) {_                newSocket.setReceiveBufferSize(getConfiguration().getReceiveBufferSize())__            }_            if (getConfiguration().hasSendBufferSize()) {_                newSocket.setSendBufferSize(getConfiguration().getSendBufferSize())__            }_            if (getConfiguration().hasReuseAddress()) {_                newSocket.setReuseAddress(getConfiguration().getReuseAddress())__            }__            newSocket.setSoLinger(false, -1)___            InetSocketAddress socketAddress__            if (null == getEndpoint().getHostname()) {_                socketAddress = new InetSocketAddress(getEndpoint().getPort())__            } else {_                socketAddress = new InetSocketAddress(getEndpoint().getHostname(), getEndpoint().getPort())__            }__            newSocket.connect(socketAddress, getConfiguration().getConnectTimeout())__            log.info("checkConnection() - established new connection {}", newSocket)__            getEndpoint().updateLastConnectionEstablishedTicks()___            socket = newSocket___            SocketAddress localSocketAddress = socket.getLocalSocketAddress()__            if (localSocketAddress != null) {_                cachedLocalAddress = localSocketAddress.toString()__            }_            SocketAddress remoteSocketAddress = socket.getRemoteSocketAddress()__            if (remoteSocketAddress != null) {_                cachedRemoteAddress = remoteSocketAddress.toString()__            }_            cachedCombinedAddress = MllpSocketBuffer.formatAddressString(localSocketAddress, remoteSocketAddress)___            if (getConfiguration().hasIdleTimeout()) {_                log.debug("Scheduling initial idle producer connection check of {} in {} milliseconds", getConnectionAddress(), getConfiguration().getIdleTimeout())__                idleTimeoutExecutor.schedule(this, getConfiguration().getIdleTimeout(), TimeUnit.MILLISECONDS)__            }_        } else {_            log.debug("checkConnection() - Connection {} is still valid - no new connection required", socket)__        }_    };validate,the,tcp,connection,return,null,if,the,connection,is,valid,otherwise,the,exception,encounted,checking,the,connection;void,check,connection,throws,ioexception,if,null,socket,socket,is,closed,socket,is,connected,if,socket,null,log,debug,check,connection,socket,is,null,attempting,to,establish,connection,socket,else,if,socket,is,closed,log,info,check,connection,socket,is,closed,attempting,to,establish,new,connection,socket,else,if,socket,is,connected,log,info,check,connection,socket,is,not,connected,attempting,to,establish,new,connection,socket,socket,new,socket,new,socket,if,get,configuration,has,keep,alive,new,socket,set,keep,alive,get,configuration,get,keep,alive,if,get,configuration,has,tcp,no,delay,new,socket,set,tcp,no,delay,get,configuration,get,tcp,no,delay,if,get,configuration,has,receive,buffer,size,new,socket,set,receive,buffer,size,get,configuration,get,receive,buffer,size,if,get,configuration,has,send,buffer,size,new,socket,set,send,buffer,size,get,configuration,get,send,buffer,size,if,get,configuration,has,reuse,address,new,socket,set,reuse,address,get,configuration,get,reuse,address,new,socket,set,so,linger,false,1,inet,socket,address,socket,address,if,null,get,endpoint,get,hostname,socket,address,new,inet,socket,address,get,endpoint,get,port,else,socket,address,new,inet,socket,address,get,endpoint,get,hostname,get,endpoint,get,port,new,socket,connect,socket,address,get,configuration,get,connect,timeout,log,info,check,connection,established,new,connection,new,socket,get,endpoint,update,last,connection,established,ticks,socket,new,socket,socket,address,local,socket,address,socket,get,local,socket,address,if,local,socket,address,null,cached,local,address,local,socket,address,to,string,socket,address,remote,socket,address,socket,get,remote,socket,address,if,remote,socket,address,null,cached,remote,address,remote,socket,address,to,string,cached,combined,address,mllp,socket,buffer,format,address,string,local,socket,address,remote,socket,address,if,get,configuration,has,idle,timeout,log,debug,scheduling,initial,idle,producer,connection,check,of,in,milliseconds,get,connection,address,get,configuration,get,idle,timeout,idle,timeout,executor,schedule,this,get,configuration,get,idle,timeout,time,unit,milliseconds,else,log,debug,check,connection,connection,is,still,valid,no,new,connection,required,socket
MllpTcpClientProducer -> void checkConnection() throws IOException;1524063106;Validate the TCP Connection__@return null if the connection is valid, otherwise the Exception encounted checking the connection;void checkConnection() throws IOException {_        if (null == socket || socket.isClosed() || !socket.isConnected()) {_            if (socket == null) {_                log.debug("checkConnection() - Socket is null - attempting to establish connection", socket)__            } else if (socket.isClosed()) {_                log.info("checkConnection() - Socket {} is closed - attempting to establish new connection", socket)__            } else if (!socket.isConnected()) {_                log.info("checkConnection() - Socket {} is not connected - attempting to establish new connection", socket)__            }__            Socket newSocket = new Socket()___            if (getConfiguration().hasKeepAlive()) {_                newSocket.setKeepAlive(getConfiguration().getKeepAlive())__            }_            if (getConfiguration().hasTcpNoDelay()) {_                newSocket.setTcpNoDelay(getConfiguration().getTcpNoDelay())__            }__            if (getConfiguration().hasReceiveBufferSize()) {_                newSocket.setReceiveBufferSize(getConfiguration().getReceiveBufferSize())__            }_            if (getConfiguration().hasSendBufferSize()) {_                newSocket.setSendBufferSize(getConfiguration().getSendBufferSize())__            }_            if (getConfiguration().hasReuseAddress()) {_                newSocket.setReuseAddress(getConfiguration().getReuseAddress())__            }__            newSocket.setSoLinger(false, -1)___            InetSocketAddress socketAddress__            if (null == getEndpoint().getHostname()) {_                socketAddress = new InetSocketAddress(getEndpoint().getPort())__            } else {_                socketAddress = new InetSocketAddress(getEndpoint().getHostname(), getEndpoint().getPort())__            }__            newSocket.connect(socketAddress, getConfiguration().getConnectTimeout())__            log.info("checkConnection() - established new connection {}", newSocket)__            getEndpoint().updateLastConnectionEstablishedTicks()___            socket = newSocket___            SocketAddress localSocketAddress = socket.getLocalSocketAddress()__            if (localSocketAddress != null) {_                cachedLocalAddress = localSocketAddress.toString()__            }_            SocketAddress remoteSocketAddress = socket.getRemoteSocketAddress()__            if (remoteSocketAddress != null) {_                cachedRemoteAddress = remoteSocketAddress.toString()__            }_            cachedCombinedAddress = MllpSocketBuffer.formatAddressString(localSocketAddress, remoteSocketAddress)___            if (getConfiguration().hasIdleTimeout()) {_                log.debug("Scheduling initial idle producer connection check of {} in {} milliseconds", getConnectionAddress(), getConfiguration().getIdleTimeout())__                idleTimeoutExecutor.schedule(this, getConfiguration().getIdleTimeout(), TimeUnit.MILLISECONDS)__            }_        } else {_            log.debug("checkConnection() - Connection {} is still valid - no new connection required", socket)__        }_    };validate,the,tcp,connection,return,null,if,the,connection,is,valid,otherwise,the,exception,encounted,checking,the,connection;void,check,connection,throws,ioexception,if,null,socket,socket,is,closed,socket,is,connected,if,socket,null,log,debug,check,connection,socket,is,null,attempting,to,establish,connection,socket,else,if,socket,is,closed,log,info,check,connection,socket,is,closed,attempting,to,establish,new,connection,socket,else,if,socket,is,connected,log,info,check,connection,socket,is,not,connected,attempting,to,establish,new,connection,socket,socket,new,socket,new,socket,if,get,configuration,has,keep,alive,new,socket,set,keep,alive,get,configuration,get,keep,alive,if,get,configuration,has,tcp,no,delay,new,socket,set,tcp,no,delay,get,configuration,get,tcp,no,delay,if,get,configuration,has,receive,buffer,size,new,socket,set,receive,buffer,size,get,configuration,get,receive,buffer,size,if,get,configuration,has,send,buffer,size,new,socket,set,send,buffer,size,get,configuration,get,send,buffer,size,if,get,configuration,has,reuse,address,new,socket,set,reuse,address,get,configuration,get,reuse,address,new,socket,set,so,linger,false,1,inet,socket,address,socket,address,if,null,get,endpoint,get,hostname,socket,address,new,inet,socket,address,get,endpoint,get,port,else,socket,address,new,inet,socket,address,get,endpoint,get,hostname,get,endpoint,get,port,new,socket,connect,socket,address,get,configuration,get,connect,timeout,log,info,check,connection,established,new,connection,new,socket,get,endpoint,update,last,connection,established,ticks,socket,new,socket,socket,address,local,socket,address,socket,get,local,socket,address,if,local,socket,address,null,cached,local,address,local,socket,address,to,string,socket,address,remote,socket,address,socket,get,remote,socket,address,if,remote,socket,address,null,cached,remote,address,remote,socket,address,to,string,cached,combined,address,mllp,socket,buffer,format,address,string,local,socket,address,remote,socket,address,if,get,configuration,has,idle,timeout,log,debug,scheduling,initial,idle,producer,connection,check,of,in,milliseconds,get,connection,address,get,configuration,get,idle,timeout,idle,timeout,executor,schedule,this,get,configuration,get,idle,timeout,time,unit,milliseconds,else,log,debug,check,connection,connection,is,still,valid,no,new,connection,required,socket
MllpTcpClientProducer -> void checkConnection() throws IOException;1537290824;Validate the TCP Connection__@return null if the connection is valid, otherwise the Exception encounted checking the connection;void checkConnection() throws IOException {_        if (null == socket || socket.isClosed() || !socket.isConnected()) {_            if (socket == null) {_                log.debug("checkConnection() - Socket is null - attempting to establish connection", socket)__            } else if (socket.isClosed()) {_                log.info("checkConnection() - Socket {} is closed - attempting to establish new connection", socket)__            } else if (!socket.isConnected()) {_                log.info("checkConnection() - Socket {} is not connected - attempting to establish new connection", socket)__            }__            Socket newSocket = new Socket()___            if (getConfiguration().hasKeepAlive()) {_                newSocket.setKeepAlive(getConfiguration().getKeepAlive())__            }_            if (getConfiguration().hasTcpNoDelay()) {_                newSocket.setTcpNoDelay(getConfiguration().getTcpNoDelay())__            }__            if (getConfiguration().hasReceiveBufferSize()) {_                newSocket.setReceiveBufferSize(getConfiguration().getReceiveBufferSize())__            }_            if (getConfiguration().hasSendBufferSize()) {_                newSocket.setSendBufferSize(getConfiguration().getSendBufferSize())__            }_            if (getConfiguration().hasReuseAddress()) {_                newSocket.setReuseAddress(getConfiguration().getReuseAddress())__            }__            newSocket.setSoLinger(false, -1)___            InetSocketAddress socketAddress__            if (null == getEndpoint().getHostname()) {_                socketAddress = new InetSocketAddress(getEndpoint().getPort())__            } else {_                socketAddress = new InetSocketAddress(getEndpoint().getHostname(), getEndpoint().getPort())__            }__            newSocket.connect(socketAddress, getConfiguration().getConnectTimeout())__            log.info("checkConnection() - established new connection {}", newSocket)__            getEndpoint().updateLastConnectionEstablishedTicks()___            socket = newSocket___            SocketAddress localSocketAddress = socket.getLocalSocketAddress()__            if (localSocketAddress != null) {_                cachedLocalAddress = localSocketAddress.toString()__            }_            SocketAddress remoteSocketAddress = socket.getRemoteSocketAddress()__            if (remoteSocketAddress != null) {_                cachedRemoteAddress = remoteSocketAddress.toString()__            }_            cachedCombinedAddress = MllpSocketBuffer.formatAddressString(localSocketAddress, remoteSocketAddress)___            if (getConfiguration().hasIdleTimeout()) {_                log.debug("Scheduling initial idle producer connection check of {} in {} milliseconds", getConnectionAddress(), getConfiguration().getIdleTimeout())__                idleTimeoutExecutor.schedule(this, getConfiguration().getIdleTimeout(), TimeUnit.MILLISECONDS)__            }_        } else {_            log.debug("checkConnection() - Connection {} is still valid - no new connection required", socket)__        }_    };validate,the,tcp,connection,return,null,if,the,connection,is,valid,otherwise,the,exception,encounted,checking,the,connection;void,check,connection,throws,ioexception,if,null,socket,socket,is,closed,socket,is,connected,if,socket,null,log,debug,check,connection,socket,is,null,attempting,to,establish,connection,socket,else,if,socket,is,closed,log,info,check,connection,socket,is,closed,attempting,to,establish,new,connection,socket,else,if,socket,is,connected,log,info,check,connection,socket,is,not,connected,attempting,to,establish,new,connection,socket,socket,new,socket,new,socket,if,get,configuration,has,keep,alive,new,socket,set,keep,alive,get,configuration,get,keep,alive,if,get,configuration,has,tcp,no,delay,new,socket,set,tcp,no,delay,get,configuration,get,tcp,no,delay,if,get,configuration,has,receive,buffer,size,new,socket,set,receive,buffer,size,get,configuration,get,receive,buffer,size,if,get,configuration,has,send,buffer,size,new,socket,set,send,buffer,size,get,configuration,get,send,buffer,size,if,get,configuration,has,reuse,address,new,socket,set,reuse,address,get,configuration,get,reuse,address,new,socket,set,so,linger,false,1,inet,socket,address,socket,address,if,null,get,endpoint,get,hostname,socket,address,new,inet,socket,address,get,endpoint,get,port,else,socket,address,new,inet,socket,address,get,endpoint,get,hostname,get,endpoint,get,port,new,socket,connect,socket,address,get,configuration,get,connect,timeout,log,info,check,connection,established,new,connection,new,socket,get,endpoint,update,last,connection,established,ticks,socket,new,socket,socket,address,local,socket,address,socket,get,local,socket,address,if,local,socket,address,null,cached,local,address,local,socket,address,to,string,socket,address,remote,socket,address,socket,get,remote,socket,address,if,remote,socket,address,null,cached,remote,address,remote,socket,address,to,string,cached,combined,address,mllp,socket,buffer,format,address,string,local,socket,address,remote,socket,address,if,get,configuration,has,idle,timeout,log,debug,scheduling,initial,idle,producer,connection,check,of,in,milliseconds,get,connection,address,get,configuration,get,idle,timeout,idle,timeout,executor,schedule,this,get,configuration,get,idle,timeout,time,unit,milliseconds,else,log,debug,check,connection,connection,is,still,valid,no,new,connection,required,socket
MllpTcpClientProducer -> void checkConnection() throws IOException;1540108163;Validate the TCP Connection__@return null if the connection is valid, otherwise the Exception encounted checking the connection;void checkConnection() throws IOException {_        if (null == socket || socket.isClosed() || !socket.isConnected()) {_            if (socket == null) {_                log.debug("checkConnection() - Socket is null - attempting to establish connection", socket)__            } else if (socket.isClosed()) {_                log.info("checkConnection() - Socket {} is closed - attempting to establish new connection", socket)__            } else if (!socket.isConnected()) {_                log.info("checkConnection() - Socket {} is not connected - attempting to establish new connection", socket)__            }__            Socket newSocket = new Socket()___            if (getConfiguration().hasKeepAlive()) {_                newSocket.setKeepAlive(getConfiguration().getKeepAlive())__            }_            if (getConfiguration().hasTcpNoDelay()) {_                newSocket.setTcpNoDelay(getConfiguration().getTcpNoDelay())__            }__            if (getConfiguration().hasReceiveBufferSize()) {_                newSocket.setReceiveBufferSize(getConfiguration().getReceiveBufferSize())__            }_            if (getConfiguration().hasSendBufferSize()) {_                newSocket.setSendBufferSize(getConfiguration().getSendBufferSize())__            }_            if (getConfiguration().hasReuseAddress()) {_                newSocket.setReuseAddress(getConfiguration().getReuseAddress())__            }__            newSocket.setSoLinger(false, -1)___            InetSocketAddress socketAddress__            if (null == getEndpoint().getHostname()) {_                socketAddress = new InetSocketAddress(getEndpoint().getPort())__            } else {_                socketAddress = new InetSocketAddress(getEndpoint().getHostname(), getEndpoint().getPort())__            }__            newSocket.connect(socketAddress, getConfiguration().getConnectTimeout())__            log.info("checkConnection() - established new connection {}", newSocket)__            getEndpoint().updateLastConnectionEstablishedTicks()___            socket = newSocket___            SocketAddress localSocketAddress = socket.getLocalSocketAddress()__            if (localSocketAddress != null) {_                cachedLocalAddress = localSocketAddress.toString()__            }_            SocketAddress remoteSocketAddress = socket.getRemoteSocketAddress()__            if (remoteSocketAddress != null) {_                cachedRemoteAddress = remoteSocketAddress.toString()__            }_            cachedCombinedAddress = MllpSocketBuffer.formatAddressString(localSocketAddress, remoteSocketAddress)___            if (getConfiguration().hasIdleTimeout()) {_                log.debug("Scheduling initial idle producer connection check of {} in {} milliseconds", getConnectionAddress(), getConfiguration().getIdleTimeout())__                idleTimeoutExecutor.schedule(this, getConfiguration().getIdleTimeout(), TimeUnit.MILLISECONDS)__            }_        } else {_            log.debug("checkConnection() - Connection {} is still valid - no new connection required", socket)__        }_    };validate,the,tcp,connection,return,null,if,the,connection,is,valid,otherwise,the,exception,encounted,checking,the,connection;void,check,connection,throws,ioexception,if,null,socket,socket,is,closed,socket,is,connected,if,socket,null,log,debug,check,connection,socket,is,null,attempting,to,establish,connection,socket,else,if,socket,is,closed,log,info,check,connection,socket,is,closed,attempting,to,establish,new,connection,socket,else,if,socket,is,connected,log,info,check,connection,socket,is,not,connected,attempting,to,establish,new,connection,socket,socket,new,socket,new,socket,if,get,configuration,has,keep,alive,new,socket,set,keep,alive,get,configuration,get,keep,alive,if,get,configuration,has,tcp,no,delay,new,socket,set,tcp,no,delay,get,configuration,get,tcp,no,delay,if,get,configuration,has,receive,buffer,size,new,socket,set,receive,buffer,size,get,configuration,get,receive,buffer,size,if,get,configuration,has,send,buffer,size,new,socket,set,send,buffer,size,get,configuration,get,send,buffer,size,if,get,configuration,has,reuse,address,new,socket,set,reuse,address,get,configuration,get,reuse,address,new,socket,set,so,linger,false,1,inet,socket,address,socket,address,if,null,get,endpoint,get,hostname,socket,address,new,inet,socket,address,get,endpoint,get,port,else,socket,address,new,inet,socket,address,get,endpoint,get,hostname,get,endpoint,get,port,new,socket,connect,socket,address,get,configuration,get,connect,timeout,log,info,check,connection,established,new,connection,new,socket,get,endpoint,update,last,connection,established,ticks,socket,new,socket,socket,address,local,socket,address,socket,get,local,socket,address,if,local,socket,address,null,cached,local,address,local,socket,address,to,string,socket,address,remote,socket,address,socket,get,remote,socket,address,if,remote,socket,address,null,cached,remote,address,remote,socket,address,to,string,cached,combined,address,mllp,socket,buffer,format,address,string,local,socket,address,remote,socket,address,if,get,configuration,has,idle,timeout,log,debug,scheduling,initial,idle,producer,connection,check,of,in,milliseconds,get,connection,address,get,configuration,get,idle,timeout,idle,timeout,executor,schedule,this,get,configuration,get,idle,timeout,time,unit,milliseconds,else,log,debug,check,connection,connection,is,still,valid,no,new,connection,required,socket
MllpTcpClientProducer -> private void checkConnection() throws IOException;1494247089;Validate the TCP Connection, if closed opens up the socket with_the value set via endpoint configuration__@throws IOException if the connection is not valid, otherwise the Exception is not_encountered while checking the connection;private void checkConnection() throws IOException {_        if (null == socket || socket.isClosed() || !socket.isConnected()) {_            socket = new Socket()___            socket.setKeepAlive(endpoint.keepAlive)__            socket.setTcpNoDelay(endpoint.tcpNoDelay)__            if (null != endpoint.receiveBufferSize) {_                socket.setReceiveBufferSize(endpoint.receiveBufferSize)__            } else {_                endpoint.receiveBufferSize = socket.getReceiveBufferSize()__            }_            if (null != endpoint.sendBufferSize) {_                socket.setSendBufferSize(endpoint.sendBufferSize)__            } else {_                endpoint.sendBufferSize = socket.getSendBufferSize()__            }_            socket.setReuseAddress(endpoint.reuseAddress)__            socket.setSoLinger(false, -1)___            InetSocketAddress socketAddress__            if (null == endpoint.getHostname()) {_                socketAddress = new InetSocketAddress(endpoint.getPort())__            } else {_                socketAddress = new InetSocketAddress(endpoint.getHostname(), endpoint.getPort())__            }__            log.debug("Connecting to socket on {}", socketAddress)__            socket.connect(socketAddress, endpoint.connectTimeout)___            log.debug("Creating MllpSocketReader and MllpSocketWriter")__            mllpSocketReader = new MllpSocketReader(socket, endpoint.receiveTimeout, endpoint.readTimeout, true)__            if (endpoint.bufferWrites) {_                mllpSocketWriter = new MllpBufferedSocketWriter(socket, false)__            } else {_                mllpSocketWriter = new MllpSocketWriter(socket, false)__            }_        }_        return__    };validate,the,tcp,connection,if,closed,opens,up,the,socket,with,the,value,set,via,endpoint,configuration,throws,ioexception,if,the,connection,is,not,valid,otherwise,the,exception,is,not,encountered,while,checking,the,connection;private,void,check,connection,throws,ioexception,if,null,socket,socket,is,closed,socket,is,connected,socket,new,socket,socket,set,keep,alive,endpoint,keep,alive,socket,set,tcp,no,delay,endpoint,tcp,no,delay,if,null,endpoint,receive,buffer,size,socket,set,receive,buffer,size,endpoint,receive,buffer,size,else,endpoint,receive,buffer,size,socket,get,receive,buffer,size,if,null,endpoint,send,buffer,size,socket,set,send,buffer,size,endpoint,send,buffer,size,else,endpoint,send,buffer,size,socket,get,send,buffer,size,socket,set,reuse,address,endpoint,reuse,address,socket,set,so,linger,false,1,inet,socket,address,socket,address,if,null,endpoint,get,hostname,socket,address,new,inet,socket,address,endpoint,get,port,else,socket,address,new,inet,socket,address,endpoint,get,hostname,endpoint,get,port,log,debug,connecting,to,socket,on,socket,address,socket,connect,socket,address,endpoint,connect,timeout,log,debug,creating,mllp,socket,reader,and,mllp,socket,writer,mllp,socket,reader,new,mllp,socket,reader,socket,endpoint,receive,timeout,endpoint,read,timeout,true,if,endpoint,buffer,writes,mllp,socket,writer,new,mllp,buffered,socket,writer,socket,false,else,mllp,socket,writer,new,mllp,socket,writer,socket,false,return
MllpTcpClientProducer -> private void checkConnection() throws IOException;1513158838;Validate the TCP Connection, if closed opens up the socket with_the value set via endpoint configuration__@throws IOException if the connection is not valid, otherwise the Exception is not_encountered while checking the connection;private void checkConnection() throws IOException {_        if (null == socket || socket.isClosed() || !socket.isConnected()) {_            socket = new Socket()___            socket.setKeepAlive(endpoint.keepAlive)__            socket.setTcpNoDelay(endpoint.tcpNoDelay)__            if (null != endpoint.receiveBufferSize) {_                socket.setReceiveBufferSize(endpoint.receiveBufferSize)__            } else {_                endpoint.receiveBufferSize = socket.getReceiveBufferSize()__            }_            if (null != endpoint.sendBufferSize) {_                socket.setSendBufferSize(endpoint.sendBufferSize)__            } else {_                endpoint.sendBufferSize = socket.getSendBufferSize()__            }_            socket.setReuseAddress(endpoint.reuseAddress)__            socket.setSoLinger(false, -1)___            InetSocketAddress socketAddress__            if (null == endpoint.getHostname()) {_                socketAddress = new InetSocketAddress(endpoint.getPort())__            } else {_                socketAddress = new InetSocketAddress(endpoint.getHostname(), endpoint.getPort())__            }__            log.debug("Connecting to socket on {}", socketAddress)__            socket.connect(socketAddress, endpoint.connectTimeout)___            log.debug("Creating MllpSocketReader and MllpSocketWriter")__            mllpSocketReader = new MllpSocketReader(socket, endpoint.receiveTimeout, endpoint.readTimeout, true)__            if (endpoint.bufferWrites) {_                mllpSocketWriter = new MllpBufferedSocketWriter(socket, false)__            } else {_                mllpSocketWriter = new MllpSocketWriter(socket, false)__            }_        }_        return__    };validate,the,tcp,connection,if,closed,opens,up,the,socket,with,the,value,set,via,endpoint,configuration,throws,ioexception,if,the,connection,is,not,valid,otherwise,the,exception,is,not,encountered,while,checking,the,connection;private,void,check,connection,throws,ioexception,if,null,socket,socket,is,closed,socket,is,connected,socket,new,socket,socket,set,keep,alive,endpoint,keep,alive,socket,set,tcp,no,delay,endpoint,tcp,no,delay,if,null,endpoint,receive,buffer,size,socket,set,receive,buffer,size,endpoint,receive,buffer,size,else,endpoint,receive,buffer,size,socket,get,receive,buffer,size,if,null,endpoint,send,buffer,size,socket,set,send,buffer,size,endpoint,send,buffer,size,else,endpoint,send,buffer,size,socket,get,send,buffer,size,socket,set,reuse,address,endpoint,reuse,address,socket,set,so,linger,false,1,inet,socket,address,socket,address,if,null,endpoint,get,hostname,socket,address,new,inet,socket,address,endpoint,get,port,else,socket,address,new,inet,socket,address,endpoint,get,hostname,endpoint,get,port,log,debug,connecting,to,socket,on,socket,address,socket,connect,socket,address,endpoint,connect,timeout,log,debug,creating,mllp,socket,reader,and,mllp,socket,writer,mllp,socket,reader,new,mllp,socket,reader,socket,endpoint,receive,timeout,endpoint,read,timeout,true,if,endpoint,buffer,writes,mllp,socket,writer,new,mllp,buffered,socket,writer,socket,false,else,mllp,socket,writer,new,mllp,socket,writer,socket,false,return
MllpTcpClientProducer -> Exception checkConnection();1451464990;Validate the TCP Connection__@return null if the connection is valid, otherwise the Exception encounted checking the connection;Exception checkConnection() {_        if (null == socket || socket.isClosed() || !socket.isConnected()) {_            socket = new Socket()___            try {_                socket.setKeepAlive(endpoint.keepAlive)__                socket.setTcpNoDelay(endpoint.tcpNoDelay)__                if (null != endpoint.receiveBufferSize) {_                    socket.setReceiveBufferSize(endpoint.receiveBufferSize)__                }_                if (null != endpoint.sendBufferSize) {_                    socket.setSendBufferSize(endpoint.sendBufferSize)__                }_                socket.setReuseAddress(endpoint.reuseAddress)__                socket.setSoLinger(false, -1)___                _                socket.setSoTimeout(endpoint.responseTimeout)__            } catch (SocketException e) {_                return e__            }___            SocketAddress address = new InetSocketAddress(endpoint.getHostname(), endpoint.getPort())__            log.debug("Connecting to socket on {}", address)__            try {_                socket.connect(address, endpoint.connectTimeout)__            } catch (SocketTimeoutException e) {_                return e__            } catch (IOException e) {_                return e__            }_        }__        return null___    };validate,the,tcp,connection,return,null,if,the,connection,is,valid,otherwise,the,exception,encounted,checking,the,connection;exception,check,connection,if,null,socket,socket,is,closed,socket,is,connected,socket,new,socket,try,socket,set,keep,alive,endpoint,keep,alive,socket,set,tcp,no,delay,endpoint,tcp,no,delay,if,null,endpoint,receive,buffer,size,socket,set,receive,buffer,size,endpoint,receive,buffer,size,if,null,endpoint,send,buffer,size,socket,set,send,buffer,size,endpoint,send,buffer,size,socket,set,reuse,address,endpoint,reuse,address,socket,set,so,linger,false,1,socket,set,so,timeout,endpoint,response,timeout,catch,socket,exception,e,return,e,socket,address,address,new,inet,socket,address,endpoint,get,hostname,endpoint,get,port,log,debug,connecting,to,socket,on,address,try,socket,connect,address,endpoint,connect,timeout,catch,socket,timeout,exception,e,return,e,catch,ioexception,e,return,e,return,null
MllpTcpClientProducer -> Exception checkConnection();1451465974;Validate the TCP Connection__@return null if the connection is valid, otherwise the Exception encounted checking the connection;Exception checkConnection() {_        if (null == socket || socket.isClosed() || !socket.isConnected()) {_            socket = new Socket()___            try {_                socket.setKeepAlive(endpoint.keepAlive)__                socket.setTcpNoDelay(endpoint.tcpNoDelay)__                if (null != endpoint.receiveBufferSize) {_                    socket.setReceiveBufferSize(endpoint.receiveBufferSize)__                }_                if (null != endpoint.sendBufferSize) {_                    socket.setSendBufferSize(endpoint.sendBufferSize)__                }_                socket.setReuseAddress(endpoint.reuseAddress)__                socket.setSoLinger(false, -1)___                _                socket.setSoTimeout(endpoint.responseTimeout)__            } catch (SocketException e) {_                return e__            }___            SocketAddress address = new InetSocketAddress(endpoint.getHostname(), endpoint.getPort())__            log.debug("Connecting to socket on {}", address)__            try {_                socket.connect(address, endpoint.connectTimeout)__            } catch (SocketTimeoutException e) {_                return e__            } catch (IOException e) {_                return e__            }_        }__        return null__    };validate,the,tcp,connection,return,null,if,the,connection,is,valid,otherwise,the,exception,encounted,checking,the,connection;exception,check,connection,if,null,socket,socket,is,closed,socket,is,connected,socket,new,socket,try,socket,set,keep,alive,endpoint,keep,alive,socket,set,tcp,no,delay,endpoint,tcp,no,delay,if,null,endpoint,receive,buffer,size,socket,set,receive,buffer,size,endpoint,receive,buffer,size,if,null,endpoint,send,buffer,size,socket,set,send,buffer,size,endpoint,send,buffer,size,socket,set,reuse,address,endpoint,reuse,address,socket,set,so,linger,false,1,socket,set,so,timeout,endpoint,response,timeout,catch,socket,exception,e,return,e,socket,address,address,new,inet,socket,address,endpoint,get,hostname,endpoint,get,port,log,debug,connecting,to,socket,on,address,try,socket,connect,address,endpoint,connect,timeout,catch,socket,timeout,exception,e,return,e,catch,ioexception,e,return,e,return,null
MllpTcpClientProducer -> Exception checkConnection();1452098879;Validate the TCP Connection__@return null if the connection is valid, otherwise the Exception encounted checking the connection;Exception checkConnection() {_        if (null == socket || socket.isClosed() || !socket.isConnected()) {_            socket = new Socket()___            try {_                socket.setKeepAlive(endpoint.keepAlive)__                socket.setTcpNoDelay(endpoint.tcpNoDelay)__                if (null != endpoint.receiveBufferSize) {_                    socket.setReceiveBufferSize(endpoint.receiveBufferSize)__                }_                if (null != endpoint.sendBufferSize) {_                    socket.setSendBufferSize(endpoint.sendBufferSize)__                }_                socket.setReuseAddress(endpoint.reuseAddress)__                socket.setSoLinger(false, -1)___                _                socket.setSoTimeout(endpoint.receiveTimeout)__            } catch (SocketException e) {_                return e__            }___            SocketAddress address = new InetSocketAddress(endpoint.getHostname(), endpoint.getPort())__            log.debug("Connecting to socket on {}", address)__            try {_                socket.connect(address, endpoint.connectTimeout)__            } catch (SocketTimeoutException e) {_                return e__            } catch (IOException e) {_                return e__            }_        }__        return null__    };validate,the,tcp,connection,return,null,if,the,connection,is,valid,otherwise,the,exception,encounted,checking,the,connection;exception,check,connection,if,null,socket,socket,is,closed,socket,is,connected,socket,new,socket,try,socket,set,keep,alive,endpoint,keep,alive,socket,set,tcp,no,delay,endpoint,tcp,no,delay,if,null,endpoint,receive,buffer,size,socket,set,receive,buffer,size,endpoint,receive,buffer,size,if,null,endpoint,send,buffer,size,socket,set,send,buffer,size,endpoint,send,buffer,size,socket,set,reuse,address,endpoint,reuse,address,socket,set,so,linger,false,1,socket,set,so,timeout,endpoint,receive,timeout,catch,socket,exception,e,return,e,socket,address,address,new,inet,socket,address,endpoint,get,hostname,endpoint,get,port,log,debug,connecting,to,socket,on,address,try,socket,connect,address,endpoint,connect,timeout,catch,socket,timeout,exception,e,return,e,catch,ioexception,e,return,e,return,null
MllpTcpClientProducer -> Exception checkConnection();1452098879;Validate the TCP Connection__@return null if the connection is valid, otherwise the Exception encounted checking the connection;Exception checkConnection() {_        if (null == socket || socket.isClosed() || !socket.isConnected()) {_            socket = new Socket()___            try {_                socket.setKeepAlive(endpoint.keepAlive)__                socket.setTcpNoDelay(endpoint.tcpNoDelay)__                if (null != endpoint.receiveBufferSize) {_                    socket.setReceiveBufferSize(endpoint.receiveBufferSize)__                }_                if (null != endpoint.sendBufferSize) {_                    socket.setSendBufferSize(endpoint.sendBufferSize)__                }_                socket.setReuseAddress(endpoint.reuseAddress)__                socket.setSoLinger(false, -1)___                _                socket.setSoTimeout(endpoint.receiveTimeout)__            } catch (SocketException e) {_                return e__            }___            SocketAddress address = new InetSocketAddress(endpoint.getHostname(), endpoint.getPort())__            log.debug("Connecting to socket on {}", address)__            try {_                socket.connect(address, endpoint.connectTimeout)__            } catch (SocketTimeoutException e) {_                return e__            } catch (IOException e) {_                return e__            }_        }__        return null__    };validate,the,tcp,connection,return,null,if,the,connection,is,valid,otherwise,the,exception,encounted,checking,the,connection;exception,check,connection,if,null,socket,socket,is,closed,socket,is,connected,socket,new,socket,try,socket,set,keep,alive,endpoint,keep,alive,socket,set,tcp,no,delay,endpoint,tcp,no,delay,if,null,endpoint,receive,buffer,size,socket,set,receive,buffer,size,endpoint,receive,buffer,size,if,null,endpoint,send,buffer,size,socket,set,send,buffer,size,endpoint,send,buffer,size,socket,set,reuse,address,endpoint,reuse,address,socket,set,so,linger,false,1,socket,set,so,timeout,endpoint,receive,timeout,catch,socket,exception,e,return,e,socket,address,address,new,inet,socket,address,endpoint,get,hostname,endpoint,get,port,log,debug,connecting,to,socket,on,address,try,socket,connect,address,endpoint,connect,timeout,catch,socket,timeout,exception,e,return,e,catch,ioexception,e,return,e,return,null
MllpTcpClientProducer -> Exception checkConnection();1452098880;Validate the TCP Connection__@return null if the connection is valid, otherwise the Exception encounted checking the connection;Exception checkConnection() {_        if (null == socket || socket.isClosed() || !socket.isConnected()) {_            socket = new Socket()___            try {_                socket.setKeepAlive(endpoint.keepAlive)__                socket.setTcpNoDelay(endpoint.tcpNoDelay)__                if (null != endpoint.receiveBufferSize) {_                    socket.setReceiveBufferSize(endpoint.receiveBufferSize)__                }_                if (null != endpoint.sendBufferSize) {_                    socket.setSendBufferSize(endpoint.sendBufferSize)__                }_                socket.setReuseAddress(endpoint.reuseAddress)__                socket.setSoLinger(false, -1)___                _                socket.setSoTimeout(endpoint.receiveTimeout)__            } catch (SocketException e) {_                return e__            }___            SocketAddress address = new InetSocketAddress(endpoint.getHostname(), endpoint.getPort())__            log.debug("Connecting to socket on {}", address)__            try {_                socket.connect(address, endpoint.connectTimeout)__            } catch (SocketTimeoutException e) {_                return e__            } catch (IOException e) {_                return e__            }_        }__        return null__    };validate,the,tcp,connection,return,null,if,the,connection,is,valid,otherwise,the,exception,encounted,checking,the,connection;exception,check,connection,if,null,socket,socket,is,closed,socket,is,connected,socket,new,socket,try,socket,set,keep,alive,endpoint,keep,alive,socket,set,tcp,no,delay,endpoint,tcp,no,delay,if,null,endpoint,receive,buffer,size,socket,set,receive,buffer,size,endpoint,receive,buffer,size,if,null,endpoint,send,buffer,size,socket,set,send,buffer,size,endpoint,send,buffer,size,socket,set,reuse,address,endpoint,reuse,address,socket,set,so,linger,false,1,socket,set,so,timeout,endpoint,receive,timeout,catch,socket,exception,e,return,e,socket,address,address,new,inet,socket,address,endpoint,get,hostname,endpoint,get,port,log,debug,connecting,to,socket,on,address,try,socket,connect,address,endpoint,connect,timeout,catch,socket,timeout,exception,e,return,e,catch,ioexception,e,return,e,return,null
MllpTcpClientProducer -> Exception checkConnection();1453968697;Validate the TCP Connection__@return null if the connection is valid, otherwise the Exception encounted checking the connection;Exception checkConnection() {_        if (null == socket || socket.isClosed() || !socket.isConnected()) {_            socket = new Socket()___            try {_                socket.setKeepAlive(endpoint.keepAlive)__                socket.setTcpNoDelay(endpoint.tcpNoDelay)__                if (null != endpoint.receiveBufferSize) {_                    socket.setReceiveBufferSize(endpoint.receiveBufferSize)__                }_                if (null != endpoint.sendBufferSize) {_                    socket.setSendBufferSize(endpoint.sendBufferSize)__                }_                socket.setReuseAddress(endpoint.reuseAddress)__                socket.setSoLinger(false, -1)___                _                socket.setSoTimeout(endpoint.receiveTimeout)__            } catch (SocketException e) {_                return e__            }___            InetSocketAddress socketAddress__            if (null == endpoint.getHostname()) {_                socketAddress = new InetSocketAddress(endpoint.getPort())__            } else {_                socketAddress = new InetSocketAddress(endpoint.getHostname(), endpoint.getPort())__            }_            log.debug("Connecting to socket on {}", socketAddress)__            try {_                socket.connect(socketAddress, endpoint.connectTimeout)__            } catch (SocketTimeoutException e) {_                return e__            } catch (IOException e) {_                return e__            }_        }__        return null__    };validate,the,tcp,connection,return,null,if,the,connection,is,valid,otherwise,the,exception,encounted,checking,the,connection;exception,check,connection,if,null,socket,socket,is,closed,socket,is,connected,socket,new,socket,try,socket,set,keep,alive,endpoint,keep,alive,socket,set,tcp,no,delay,endpoint,tcp,no,delay,if,null,endpoint,receive,buffer,size,socket,set,receive,buffer,size,endpoint,receive,buffer,size,if,null,endpoint,send,buffer,size,socket,set,send,buffer,size,endpoint,send,buffer,size,socket,set,reuse,address,endpoint,reuse,address,socket,set,so,linger,false,1,socket,set,so,timeout,endpoint,receive,timeout,catch,socket,exception,e,return,e,inet,socket,address,socket,address,if,null,endpoint,get,hostname,socket,address,new,inet,socket,address,endpoint,get,port,else,socket,address,new,inet,socket,address,endpoint,get,hostname,endpoint,get,port,log,debug,connecting,to,socket,on,socket,address,try,socket,connect,socket,address,endpoint,connect,timeout,catch,socket,timeout,exception,e,return,e,catch,ioexception,e,return,e,return,null
MllpTcpClientProducer -> Exception checkConnection();1457097808;Validate the TCP Connection__@return null if the connection is valid, otherwise the Exception encounted checking the connection;Exception checkConnection() {_        if (null == socket || socket.isClosed() || !socket.isConnected()) {_            socket = new Socket()___            try {_                socket.setKeepAlive(endpoint.keepAlive)__                socket.setTcpNoDelay(endpoint.tcpNoDelay)__                if (null != endpoint.receiveBufferSize) {_                    socket.setReceiveBufferSize(endpoint.receiveBufferSize)__                }_                if (null != endpoint.sendBufferSize) {_                    socket.setSendBufferSize(endpoint.sendBufferSize)__                }_                socket.setReuseAddress(endpoint.reuseAddress)__                socket.setSoLinger(false, -1)___                _                socket.setSoTimeout(endpoint.receiveTimeout)__            } catch (SocketException e) {_                return e__            }___            InetSocketAddress socketAddress__            if (null == endpoint.getHostname()) {_                socketAddress = new InetSocketAddress(endpoint.getPort())__            } else {_                socketAddress = new InetSocketAddress(endpoint.getHostname(), endpoint.getPort())__            }_            log.debug("Connecting to socket on {}", socketAddress)__            try {_                socket.connect(socketAddress, endpoint.connectTimeout)__            } catch (SocketTimeoutException e) {_                return e__            } catch (IOException e) {_                return e__            }_        }__        return null__    };validate,the,tcp,connection,return,null,if,the,connection,is,valid,otherwise,the,exception,encounted,checking,the,connection;exception,check,connection,if,null,socket,socket,is,closed,socket,is,connected,socket,new,socket,try,socket,set,keep,alive,endpoint,keep,alive,socket,set,tcp,no,delay,endpoint,tcp,no,delay,if,null,endpoint,receive,buffer,size,socket,set,receive,buffer,size,endpoint,receive,buffer,size,if,null,endpoint,send,buffer,size,socket,set,send,buffer,size,endpoint,send,buffer,size,socket,set,reuse,address,endpoint,reuse,address,socket,set,so,linger,false,1,socket,set,so,timeout,endpoint,receive,timeout,catch,socket,exception,e,return,e,inet,socket,address,socket,address,if,null,endpoint,get,hostname,socket,address,new,inet,socket,address,endpoint,get,port,else,socket,address,new,inet,socket,address,endpoint,get,hostname,endpoint,get,port,log,debug,connecting,to,socket,on,socket,address,try,socket,connect,socket,address,endpoint,connect,timeout,catch,socket,timeout,exception,e,return,e,catch,ioexception,e,return,e,return,null
MllpTcpClientProducer -> Exception checkConnection();1473189753;Validate the TCP Connection__@return null if the connection is valid, otherwise the Exception encounted checking the connection;Exception checkConnection() {_        if (null == socket || socket.isClosed() || !socket.isConnected()) {_            socket = new Socket()___            try {_                socket.setKeepAlive(endpoint.keepAlive)__                socket.setTcpNoDelay(endpoint.tcpNoDelay)__                if (null != endpoint.receiveBufferSize) {_                    socket.setReceiveBufferSize(endpoint.receiveBufferSize)__                }_                if (null != endpoint.sendBufferSize) {_                    socket.setSendBufferSize(endpoint.sendBufferSize)__                }_                socket.setReuseAddress(endpoint.reuseAddress)__                socket.setSoLinger(false, -1)___                _                socket.setSoTimeout(endpoint.receiveTimeout)__            } catch (SocketException e) {_                return e__            }___            InetSocketAddress socketAddress__            if (null == endpoint.getHostname()) {_                socketAddress = new InetSocketAddress(endpoint.getPort())__            } else {_                socketAddress = new InetSocketAddress(endpoint.getHostname(), endpoint.getPort())__            }_            log.debug("Connecting to socket on {}", socketAddress)__            try {_                socket.connect(socketAddress, endpoint.connectTimeout)__            } catch (SocketTimeoutException e) {_                return e__            } catch (IOException e) {_                return e__            }_        }__        return null__    };validate,the,tcp,connection,return,null,if,the,connection,is,valid,otherwise,the,exception,encounted,checking,the,connection;exception,check,connection,if,null,socket,socket,is,closed,socket,is,connected,socket,new,socket,try,socket,set,keep,alive,endpoint,keep,alive,socket,set,tcp,no,delay,endpoint,tcp,no,delay,if,null,endpoint,receive,buffer,size,socket,set,receive,buffer,size,endpoint,receive,buffer,size,if,null,endpoint,send,buffer,size,socket,set,send,buffer,size,endpoint,send,buffer,size,socket,set,reuse,address,endpoint,reuse,address,socket,set,so,linger,false,1,socket,set,so,timeout,endpoint,receive,timeout,catch,socket,exception,e,return,e,inet,socket,address,socket,address,if,null,endpoint,get,hostname,socket,address,new,inet,socket,address,endpoint,get,port,else,socket,address,new,inet,socket,address,endpoint,get,hostname,endpoint,get,port,log,debug,connecting,to,socket,on,socket,address,try,socket,connect,socket,address,endpoint,connect,timeout,catch,socket,timeout,exception,e,return,e,catch,ioexception,e,return,e,return,null
MllpTcpClientProducer -> Exception checkConnection();1473924202;Validate the TCP Connection__@return null if the connection is valid, otherwise the Exception encounted checking the connection;Exception checkConnection() {_        if (null == socket || socket.isClosed() || !socket.isConnected()) {_            socket = new Socket()___            try {_                socket.setKeepAlive(endpoint.keepAlive)__                socket.setTcpNoDelay(endpoint.tcpNoDelay)__                if (null != endpoint.receiveBufferSize) {_                    socket.setReceiveBufferSize(endpoint.receiveBufferSize)__                }_                if (null != endpoint.sendBufferSize) {_                    socket.setSendBufferSize(endpoint.sendBufferSize)__                }_                socket.setReuseAddress(endpoint.reuseAddress)__                socket.setSoLinger(false, -1)___                _                socket.setSoTimeout(endpoint.receiveTimeout)__            } catch (SocketException e) {_                return e__            }___            InetSocketAddress socketAddress__            if (null == endpoint.getHostname()) {_                socketAddress = new InetSocketAddress(endpoint.getPort())__            } else {_                socketAddress = new InetSocketAddress(endpoint.getHostname(), endpoint.getPort())__            }_            log.debug("Connecting to socket on {}", socketAddress)__            try {_                socket.connect(socketAddress, endpoint.connectTimeout)__            } catch (SocketTimeoutException e) {_                return e__            } catch (IOException e) {_                return e__            }_        }__        return null__    };validate,the,tcp,connection,return,null,if,the,connection,is,valid,otherwise,the,exception,encounted,checking,the,connection;exception,check,connection,if,null,socket,socket,is,closed,socket,is,connected,socket,new,socket,try,socket,set,keep,alive,endpoint,keep,alive,socket,set,tcp,no,delay,endpoint,tcp,no,delay,if,null,endpoint,receive,buffer,size,socket,set,receive,buffer,size,endpoint,receive,buffer,size,if,null,endpoint,send,buffer,size,socket,set,send,buffer,size,endpoint,send,buffer,size,socket,set,reuse,address,endpoint,reuse,address,socket,set,so,linger,false,1,socket,set,so,timeout,endpoint,receive,timeout,catch,socket,exception,e,return,e,inet,socket,address,socket,address,if,null,endpoint,get,hostname,socket,address,new,inet,socket,address,endpoint,get,port,else,socket,address,new,inet,socket,address,endpoint,get,hostname,endpoint,get,port,log,debug,connecting,to,socket,on,socket,address,try,socket,connect,socket,address,endpoint,connect,timeout,catch,socket,timeout,exception,e,return,e,catch,ioexception,e,return,e,return,null
MllpTcpClientProducer -> @Override     public synchronized void run();1515779403;Check for idle connection;@Override_    public synchronized void run() {_        if (getConfiguration().hasIdleTimeout()) {_            if (null != socket && !socket.isClosed() && socket.isConnected()) {_                if (lastProcessCallTicks > 0) {_                    long idleTime = System.currentTimeMillis() - lastProcessCallTicks__                    if (log.isDebugEnabled()) {_                        log.debug("Checking {} for idle connection: {} - {}", getConnectionAddress(), idleTime, getConfiguration().getIdleTimeout())__                    }_                    if (idleTime >= getConfiguration().getIdleTimeout()) {_                        log.info("MLLP Connection idle time of '{}' milliseconds met or exceeded the idle producer timeout of '{}' milliseconds - resetting conection",_                            idleTime, getConfiguration().getIdleTimeout())__                        mllpBuffer.resetSocket(socket)__                    } else {_                        long minDelay = 100__                        long delay = Long.min(Long.max(minDelay, getConfiguration().getIdleTimeout() - idleTime), getConfiguration().getIdleTimeout())__                        if (log.isDebugEnabled()) {_                            log.debug("Scheduling idle producer connection check of {} in {} milliseconds", getConnectionAddress(), delay)__                        }_                        idleTimeoutExecutor.schedule(this, delay, TimeUnit.MILLISECONDS)__                    }_                } else {_                    log.debug("Scheduling idle producer connection check in {} milliseconds", getConfiguration().getIdleTimeout())__                    idleTimeoutExecutor.schedule(this, getConfiguration().getIdleTimeout(), TimeUnit.MILLISECONDS)__                }_            }_        }_    };check,for,idle,connection;override,public,synchronized,void,run,if,get,configuration,has,idle,timeout,if,null,socket,socket,is,closed,socket,is,connected,if,last,process,call,ticks,0,long,idle,time,system,current,time,millis,last,process,call,ticks,if,log,is,debug,enabled,log,debug,checking,for,idle,connection,get,connection,address,idle,time,get,configuration,get,idle,timeout,if,idle,time,get,configuration,get,idle,timeout,log,info,mllp,connection,idle,time,of,milliseconds,met,or,exceeded,the,idle,producer,timeout,of,milliseconds,resetting,conection,idle,time,get,configuration,get,idle,timeout,mllp,buffer,reset,socket,socket,else,long,min,delay,100,long,delay,long,min,long,max,min,delay,get,configuration,get,idle,timeout,idle,time,get,configuration,get,idle,timeout,if,log,is,debug,enabled,log,debug,scheduling,idle,producer,connection,check,of,in,milliseconds,get,connection,address,delay,idle,timeout,executor,schedule,this,delay,time,unit,milliseconds,else,log,debug,scheduling,idle,producer,connection,check,in,milliseconds,get,configuration,get,idle,timeout,idle,timeout,executor,schedule,this,get,configuration,get,idle,timeout,time,unit,milliseconds
MllpTcpClientProducer -> @Override     public synchronized void run();1515781364;Check for idle connection;@Override_    public synchronized void run() {_        if (getConfiguration().hasIdleTimeout()) {_            if (null != socket && !socket.isClosed() && socket.isConnected()) {_                if (lastProcessCallTicks > 0) {_                    long idleTime = System.currentTimeMillis() - lastProcessCallTicks__                    if (log.isDebugEnabled()) {_                        log.debug("Checking {} for idle connection: {} - {}", getConnectionAddress(), idleTime, getConfiguration().getIdleTimeout())__                    }_                    if (idleTime >= getConfiguration().getIdleTimeout()) {_                        log.info("MLLP Connection idle time of '{}' milliseconds met or exceeded the idle producer timeout of '{}' milliseconds - resetting conection",_                            idleTime, getConfiguration().getIdleTimeout())__                        mllpBuffer.resetSocket(socket)__                    } else {_                        long minDelay = 100__                        long delay = Long.min(Long.max(minDelay, getConfiguration().getIdleTimeout() - idleTime), getConfiguration().getIdleTimeout())__                        if (log.isDebugEnabled()) {_                            log.debug("Scheduling idle producer connection check of {} in {} milliseconds", getConnectionAddress(), delay)__                        }_                        idleTimeoutExecutor.schedule(this, delay, TimeUnit.MILLISECONDS)__                    }_                } else {_                    log.debug("Scheduling idle producer connection check in {} milliseconds", getConfiguration().getIdleTimeout())__                    idleTimeoutExecutor.schedule(this, getConfiguration().getIdleTimeout(), TimeUnit.MILLISECONDS)__                }_            }_        }_    };check,for,idle,connection;override,public,synchronized,void,run,if,get,configuration,has,idle,timeout,if,null,socket,socket,is,closed,socket,is,connected,if,last,process,call,ticks,0,long,idle,time,system,current,time,millis,last,process,call,ticks,if,log,is,debug,enabled,log,debug,checking,for,idle,connection,get,connection,address,idle,time,get,configuration,get,idle,timeout,if,idle,time,get,configuration,get,idle,timeout,log,info,mllp,connection,idle,time,of,milliseconds,met,or,exceeded,the,idle,producer,timeout,of,milliseconds,resetting,conection,idle,time,get,configuration,get,idle,timeout,mllp,buffer,reset,socket,socket,else,long,min,delay,100,long,delay,long,min,long,max,min,delay,get,configuration,get,idle,timeout,idle,time,get,configuration,get,idle,timeout,if,log,is,debug,enabled,log,debug,scheduling,idle,producer,connection,check,of,in,milliseconds,get,connection,address,delay,idle,timeout,executor,schedule,this,delay,time,unit,milliseconds,else,log,debug,scheduling,idle,producer,connection,check,in,milliseconds,get,configuration,get,idle,timeout,idle,timeout,executor,schedule,this,get,configuration,get,idle,timeout,time,unit,milliseconds
MllpTcpClientProducer -> @Override     public synchronized void run();1516727639;Check for idle connection;@Override_    public synchronized void run() {_        if (getConfiguration().hasIdleTimeout()) {_            if (null != socket && !socket.isClosed() && socket.isConnected()) {_                if (lastProcessCallTicks > 0) {_                    long idleTime = System.currentTimeMillis() - lastProcessCallTicks__                    if (log.isDebugEnabled()) {_                        log.debug("Checking {} for idle connection: {} - {}", getConnectionAddress(), idleTime, getConfiguration().getIdleTimeout())__                    }_                    if (idleTime >= getConfiguration().getIdleTimeout()) {_                        log.info("MLLP Connection idle time of '{}' milliseconds met or exceeded the idle producer timeout of '{}' milliseconds - resetting conection",_                            idleTime, getConfiguration().getIdleTimeout())__                        mllpBuffer.resetSocket(socket)__                    } else {_                        long minDelay = 100__                        long delay = Long.min(Long.max(minDelay, getConfiguration().getIdleTimeout() - idleTime), getConfiguration().getIdleTimeout())__                        if (log.isDebugEnabled()) {_                            log.debug("Scheduling idle producer connection check of {} in {} milliseconds", getConnectionAddress(), delay)__                        }_                        idleTimeoutExecutor.schedule(this, delay, TimeUnit.MILLISECONDS)__                    }_                } else {_                    log.debug("Scheduling idle producer connection check in {} milliseconds", getConfiguration().getIdleTimeout())__                    idleTimeoutExecutor.schedule(this, getConfiguration().getIdleTimeout(), TimeUnit.MILLISECONDS)__                }_            }_        }_    };check,for,idle,connection;override,public,synchronized,void,run,if,get,configuration,has,idle,timeout,if,null,socket,socket,is,closed,socket,is,connected,if,last,process,call,ticks,0,long,idle,time,system,current,time,millis,last,process,call,ticks,if,log,is,debug,enabled,log,debug,checking,for,idle,connection,get,connection,address,idle,time,get,configuration,get,idle,timeout,if,idle,time,get,configuration,get,idle,timeout,log,info,mllp,connection,idle,time,of,milliseconds,met,or,exceeded,the,idle,producer,timeout,of,milliseconds,resetting,conection,idle,time,get,configuration,get,idle,timeout,mllp,buffer,reset,socket,socket,else,long,min,delay,100,long,delay,long,min,long,max,min,delay,get,configuration,get,idle,timeout,idle,time,get,configuration,get,idle,timeout,if,log,is,debug,enabled,log,debug,scheduling,idle,producer,connection,check,of,in,milliseconds,get,connection,address,delay,idle,timeout,executor,schedule,this,delay,time,unit,milliseconds,else,log,debug,scheduling,idle,producer,connection,check,in,milliseconds,get,configuration,get,idle,timeout,idle,timeout,executor,schedule,this,get,configuration,get,idle,timeout,time,unit,milliseconds
MllpTcpClientProducer -> @Override     public synchronized void run();1518733370;Check for idle connection;@Override_    public synchronized void run() {_        if (getConfiguration().hasIdleTimeout()) {_            if (null != socket && !socket.isClosed() && socket.isConnected()) {_                if (lastProcessCallTicks > 0) {_                    long idleTime = System.currentTimeMillis() - lastProcessCallTicks__                    if (log.isDebugEnabled()) {_                        log.debug("Checking {} for idle connection: {} - {}", getConnectionAddress(), idleTime, getConfiguration().getIdleTimeout())__                    }_                    if (idleTime >= getConfiguration().getIdleTimeout()) {_                        log.info("MLLP Connection idle time of '{}' milliseconds met or exceeded the idle producer timeout of '{}' milliseconds - resetting conection",_                            idleTime, getConfiguration().getIdleTimeout())__                        mllpBuffer.resetSocket(socket)__                    } else {_                        long minDelay = 100__                        long delay = Long.min(Long.max(minDelay, getConfiguration().getIdleTimeout() - idleTime), getConfiguration().getIdleTimeout())__                        if (log.isDebugEnabled()) {_                            log.debug("Scheduling idle producer connection check of {} in {} milliseconds", getConnectionAddress(), delay)__                        }_                        idleTimeoutExecutor.schedule(this, delay, TimeUnit.MILLISECONDS)__                    }_                } else {_                    log.debug("Scheduling idle producer connection check in {} milliseconds", getConfiguration().getIdleTimeout())__                    idleTimeoutExecutor.schedule(this, getConfiguration().getIdleTimeout(), TimeUnit.MILLISECONDS)__                }_            }_        }_    };check,for,idle,connection;override,public,synchronized,void,run,if,get,configuration,has,idle,timeout,if,null,socket,socket,is,closed,socket,is,connected,if,last,process,call,ticks,0,long,idle,time,system,current,time,millis,last,process,call,ticks,if,log,is,debug,enabled,log,debug,checking,for,idle,connection,get,connection,address,idle,time,get,configuration,get,idle,timeout,if,idle,time,get,configuration,get,idle,timeout,log,info,mllp,connection,idle,time,of,milliseconds,met,or,exceeded,the,idle,producer,timeout,of,milliseconds,resetting,conection,idle,time,get,configuration,get,idle,timeout,mllp,buffer,reset,socket,socket,else,long,min,delay,100,long,delay,long,min,long,max,min,delay,get,configuration,get,idle,timeout,idle,time,get,configuration,get,idle,timeout,if,log,is,debug,enabled,log,debug,scheduling,idle,producer,connection,check,of,in,milliseconds,get,connection,address,delay,idle,timeout,executor,schedule,this,delay,time,unit,milliseconds,else,log,debug,scheduling,idle,producer,connection,check,in,milliseconds,get,configuration,get,idle,timeout,idle,timeout,executor,schedule,this,get,configuration,get,idle,timeout,time,unit,milliseconds
MllpTcpClientProducer -> @Override     public synchronized void run();1520374125;Check for idle connection;@Override_    public synchronized void run() {_        if (getConfiguration().hasIdleTimeout()) {_            if (null != socket && !socket.isClosed() && socket.isConnected()) {_                if (lastProcessCallTicks > 0) {_                    long idleTime = System.currentTimeMillis() - lastProcessCallTicks__                    if (log.isDebugEnabled()) {_                        log.debug("Checking {} for idle connection: {} - {}", getConnectionAddress(), idleTime, getConfiguration().getIdleTimeout())__                    }_                    if (idleTime >= getConfiguration().getIdleTimeout()) {_                        log.info("MLLP Connection idle time of '{}' milliseconds met or exceeded the idle producer timeout of '{}' milliseconds - resetting conection",_                            idleTime, getConfiguration().getIdleTimeout())__                        mllpBuffer.resetSocket(socket)__                    } else {_                        long minDelay = 100__                        long delay = Long.min(Long.max(minDelay, getConfiguration().getIdleTimeout() - idleTime), getConfiguration().getIdleTimeout())__                        if (log.isDebugEnabled()) {_                            log.debug("Scheduling idle producer connection check of {} in {} milliseconds", getConnectionAddress(), delay)__                        }_                        idleTimeoutExecutor.schedule(this, delay, TimeUnit.MILLISECONDS)__                    }_                } else {_                    log.debug("Scheduling idle producer connection check in {} milliseconds", getConfiguration().getIdleTimeout())__                    idleTimeoutExecutor.schedule(this, getConfiguration().getIdleTimeout(), TimeUnit.MILLISECONDS)__                }_            }_        }_    };check,for,idle,connection;override,public,synchronized,void,run,if,get,configuration,has,idle,timeout,if,null,socket,socket,is,closed,socket,is,connected,if,last,process,call,ticks,0,long,idle,time,system,current,time,millis,last,process,call,ticks,if,log,is,debug,enabled,log,debug,checking,for,idle,connection,get,connection,address,idle,time,get,configuration,get,idle,timeout,if,idle,time,get,configuration,get,idle,timeout,log,info,mllp,connection,idle,time,of,milliseconds,met,or,exceeded,the,idle,producer,timeout,of,milliseconds,resetting,conection,idle,time,get,configuration,get,idle,timeout,mllp,buffer,reset,socket,socket,else,long,min,delay,100,long,delay,long,min,long,max,min,delay,get,configuration,get,idle,timeout,idle,time,get,configuration,get,idle,timeout,if,log,is,debug,enabled,log,debug,scheduling,idle,producer,connection,check,of,in,milliseconds,get,connection,address,delay,idle,timeout,executor,schedule,this,delay,time,unit,milliseconds,else,log,debug,scheduling,idle,producer,connection,check,in,milliseconds,get,configuration,get,idle,timeout,idle,timeout,executor,schedule,this,get,configuration,get,idle,timeout,time,unit,milliseconds
MllpTcpClientProducer -> @Override     public synchronized void run();1521820500;Check for idle connection;@Override_    public synchronized void run() {_        if (getConfiguration().hasIdleTimeout()) {_            if (null != socket && !socket.isClosed() && socket.isConnected()) {_                if (getEndpoint().hasLastConnectionActivityTicks()) {_                    long idleTime = System.currentTimeMillis() - getEndpoint().getLastConnectionActivityTicks()__                    if (log.isDebugEnabled()) {_                        log.debug("Checking {} for idle connection: {} - {}", getConnectionAddress(), idleTime, getConfiguration().getIdleTimeout())__                    }_                    if (idleTime >= getConfiguration().getIdleTimeout()) {_                        log.info("MLLP Connection idle time of '{}' milliseconds met or exceeded the idle producer timeout of '{}' milliseconds - resetting connection",_                            idleTime, getConfiguration().getIdleTimeout())__                        mllpBuffer.resetSocket(socket)__                    } else {_                        long minDelay = 100__                        long delay = Long.min(Long.max(minDelay, getConfiguration().getIdleTimeout() - idleTime), getConfiguration().getIdleTimeout())__                        if (log.isDebugEnabled()) {_                            log.debug("Scheduling idle producer connection check of {} in {} milliseconds", getConnectionAddress(), delay)__                        }_                        idleTimeoutExecutor.schedule(this, delay, TimeUnit.MILLISECONDS)__                    }_                } else {_                    log.debug("No activity detected since initial connection - scheduling idle producer connection check in {} milliseconds", getConfiguration().getIdleTimeout())__                    idleTimeoutExecutor.schedule(this, getConfiguration().getIdleTimeout(), TimeUnit.MILLISECONDS)__                }_            }_        }_    };check,for,idle,connection;override,public,synchronized,void,run,if,get,configuration,has,idle,timeout,if,null,socket,socket,is,closed,socket,is,connected,if,get,endpoint,has,last,connection,activity,ticks,long,idle,time,system,current,time,millis,get,endpoint,get,last,connection,activity,ticks,if,log,is,debug,enabled,log,debug,checking,for,idle,connection,get,connection,address,idle,time,get,configuration,get,idle,timeout,if,idle,time,get,configuration,get,idle,timeout,log,info,mllp,connection,idle,time,of,milliseconds,met,or,exceeded,the,idle,producer,timeout,of,milliseconds,resetting,connection,idle,time,get,configuration,get,idle,timeout,mllp,buffer,reset,socket,socket,else,long,min,delay,100,long,delay,long,min,long,max,min,delay,get,configuration,get,idle,timeout,idle,time,get,configuration,get,idle,timeout,if,log,is,debug,enabled,log,debug,scheduling,idle,producer,connection,check,of,in,milliseconds,get,connection,address,delay,idle,timeout,executor,schedule,this,delay,time,unit,milliseconds,else,log,debug,no,activity,detected,since,initial,connection,scheduling,idle,producer,connection,check,in,milliseconds,get,configuration,get,idle,timeout,idle,timeout,executor,schedule,this,get,configuration,get,idle,timeout,time,unit,milliseconds
MllpTcpClientProducer -> @Override     public synchronized void run();1521820516;Check for idle connection;@Override_    public synchronized void run() {_        if (getConfiguration().hasIdleTimeout()) {_            if (null != socket && !socket.isClosed() && socket.isConnected()) {_                if (getEndpoint().hasLastConnectionActivityTicks()) {_                    long idleTime = System.currentTimeMillis() - getEndpoint().getLastConnectionActivityTicks()__                    if (log.isDebugEnabled()) {_                        log.debug("Checking {} for idle connection: {} - {}", getConnectionAddress(), idleTime, getConfiguration().getIdleTimeout())__                    }_                    if (idleTime >= getConfiguration().getIdleTimeout()) {_                        log.info("MLLP Connection idle time of '{}' milliseconds met or exceeded the idle producer timeout of '{}' milliseconds - resetting connection",_                            idleTime, getConfiguration().getIdleTimeout())__                        mllpBuffer.resetSocket(socket)__                    } else {_                        long minDelay = 100__                        long delay = Long.min(Long.max(minDelay, getConfiguration().getIdleTimeout() - idleTime), getConfiguration().getIdleTimeout())__                        if (log.isDebugEnabled()) {_                            log.debug("Scheduling idle producer connection check of {} in {} milliseconds", getConnectionAddress(), delay)__                        }_                        idleTimeoutExecutor.schedule(this, delay, TimeUnit.MILLISECONDS)__                    }_                } else {_                    log.debug("No activity detected since initial connection - scheduling idle producer connection check in {} milliseconds", getConfiguration().getIdleTimeout())__                    idleTimeoutExecutor.schedule(this, getConfiguration().getIdleTimeout(), TimeUnit.MILLISECONDS)__                }_            }_        }_    };check,for,idle,connection;override,public,synchronized,void,run,if,get,configuration,has,idle,timeout,if,null,socket,socket,is,closed,socket,is,connected,if,get,endpoint,has,last,connection,activity,ticks,long,idle,time,system,current,time,millis,get,endpoint,get,last,connection,activity,ticks,if,log,is,debug,enabled,log,debug,checking,for,idle,connection,get,connection,address,idle,time,get,configuration,get,idle,timeout,if,idle,time,get,configuration,get,idle,timeout,log,info,mllp,connection,idle,time,of,milliseconds,met,or,exceeded,the,idle,producer,timeout,of,milliseconds,resetting,connection,idle,time,get,configuration,get,idle,timeout,mllp,buffer,reset,socket,socket,else,long,min,delay,100,long,delay,long,min,long,max,min,delay,get,configuration,get,idle,timeout,idle,time,get,configuration,get,idle,timeout,if,log,is,debug,enabled,log,debug,scheduling,idle,producer,connection,check,of,in,milliseconds,get,connection,address,delay,idle,timeout,executor,schedule,this,delay,time,unit,milliseconds,else,log,debug,no,activity,detected,since,initial,connection,scheduling,idle,producer,connection,check,in,milliseconds,get,configuration,get,idle,timeout,idle,timeout,executor,schedule,this,get,configuration,get,idle,timeout,time,unit,milliseconds
MllpTcpClientProducer -> @Override     public synchronized void run();1521842963;Check for idle connection;@Override_    public synchronized void run() {_        if (getConfiguration().hasIdleTimeout()) {_            if (null != socket && !socket.isClosed() && socket.isConnected()) {_                if (getEndpoint().hasLastConnectionActivityTicks()) {_                    long idleTime = System.currentTimeMillis() - getEndpoint().getLastConnectionActivityTicks()__                    if (log.isDebugEnabled()) {_                        log.debug("Checking {} for idle connection: {} - {}", getConnectionAddress(), idleTime, getConfiguration().getIdleTimeout())__                    }_                    if (idleTime >= getConfiguration().getIdleTimeout()) {_                        log.info("MLLP Connection idle time of '{}' milliseconds met or exceeded the idle producer timeout of '{}' milliseconds - resetting connection",_                            idleTime, getConfiguration().getIdleTimeout())__                        mllpBuffer.resetSocket(socket)__                    } else {_                        long minDelay = 100__                        long delay = Long.min(Long.max(minDelay, getConfiguration().getIdleTimeout() - idleTime), getConfiguration().getIdleTimeout())__                        if (log.isDebugEnabled()) {_                            log.debug("Scheduling idle producer connection check of {} in {} milliseconds", getConnectionAddress(), delay)__                        }_                        idleTimeoutExecutor.schedule(this, delay, TimeUnit.MILLISECONDS)__                    }_                } else {_                    log.debug("No activity detected since initial connection - scheduling idle producer connection check in {} milliseconds", getConfiguration().getIdleTimeout())__                    idleTimeoutExecutor.schedule(this, getConfiguration().getIdleTimeout(), TimeUnit.MILLISECONDS)__                }_            }_        }_    };check,for,idle,connection;override,public,synchronized,void,run,if,get,configuration,has,idle,timeout,if,null,socket,socket,is,closed,socket,is,connected,if,get,endpoint,has,last,connection,activity,ticks,long,idle,time,system,current,time,millis,get,endpoint,get,last,connection,activity,ticks,if,log,is,debug,enabled,log,debug,checking,for,idle,connection,get,connection,address,idle,time,get,configuration,get,idle,timeout,if,idle,time,get,configuration,get,idle,timeout,log,info,mllp,connection,idle,time,of,milliseconds,met,or,exceeded,the,idle,producer,timeout,of,milliseconds,resetting,connection,idle,time,get,configuration,get,idle,timeout,mllp,buffer,reset,socket,socket,else,long,min,delay,100,long,delay,long,min,long,max,min,delay,get,configuration,get,idle,timeout,idle,time,get,configuration,get,idle,timeout,if,log,is,debug,enabled,log,debug,scheduling,idle,producer,connection,check,of,in,milliseconds,get,connection,address,delay,idle,timeout,executor,schedule,this,delay,time,unit,milliseconds,else,log,debug,no,activity,detected,since,initial,connection,scheduling,idle,producer,connection,check,in,milliseconds,get,configuration,get,idle,timeout,idle,timeout,executor,schedule,this,get,configuration,get,idle,timeout,time,unit,milliseconds
MllpTcpClientProducer -> @Override     public synchronized void run();1524063106;Check for idle connection;@Override_    public synchronized void run() {_        if (getConfiguration().hasIdleTimeout()) {_            if (null != socket && !socket.isClosed() && socket.isConnected()) {_                if (getEndpoint().hasLastConnectionActivityTicks()) {_                    long idleTime = System.currentTimeMillis() - getEndpoint().getLastConnectionActivityTicks()__                    if (log.isDebugEnabled()) {_                        log.debug("Checking {} for idle connection: {} - {}", getConnectionAddress(), idleTime, getConfiguration().getIdleTimeout())__                    }_                    if (idleTime >= getConfiguration().getIdleTimeout()) {_                        log.info("MLLP Connection idle time of '{}' milliseconds met or exceeded the idle producer timeout of '{}' milliseconds - resetting connection",_                            idleTime, getConfiguration().getIdleTimeout())__                        mllpBuffer.resetSocket(socket)__                    } else {_                        long minDelay = 100__                        long delay = Long.min(Long.max(minDelay, getConfiguration().getIdleTimeout() - idleTime), getConfiguration().getIdleTimeout())__                        if (log.isDebugEnabled()) {_                            log.debug("Scheduling idle producer connection check of {} in {} milliseconds", getConnectionAddress(), delay)__                        }_                        idleTimeoutExecutor.schedule(this, delay, TimeUnit.MILLISECONDS)__                    }_                } else {_                    log.debug("No activity detected since initial connection - scheduling idle producer connection check in {} milliseconds", getConfiguration().getIdleTimeout())__                    idleTimeoutExecutor.schedule(this, getConfiguration().getIdleTimeout(), TimeUnit.MILLISECONDS)__                }_            }_        }_    };check,for,idle,connection;override,public,synchronized,void,run,if,get,configuration,has,idle,timeout,if,null,socket,socket,is,closed,socket,is,connected,if,get,endpoint,has,last,connection,activity,ticks,long,idle,time,system,current,time,millis,get,endpoint,get,last,connection,activity,ticks,if,log,is,debug,enabled,log,debug,checking,for,idle,connection,get,connection,address,idle,time,get,configuration,get,idle,timeout,if,idle,time,get,configuration,get,idle,timeout,log,info,mllp,connection,idle,time,of,milliseconds,met,or,exceeded,the,idle,producer,timeout,of,milliseconds,resetting,connection,idle,time,get,configuration,get,idle,timeout,mllp,buffer,reset,socket,socket,else,long,min,delay,100,long,delay,long,min,long,max,min,delay,get,configuration,get,idle,timeout,idle,time,get,configuration,get,idle,timeout,if,log,is,debug,enabled,log,debug,scheduling,idle,producer,connection,check,of,in,milliseconds,get,connection,address,delay,idle,timeout,executor,schedule,this,delay,time,unit,milliseconds,else,log,debug,no,activity,detected,since,initial,connection,scheduling,idle,producer,connection,check,in,milliseconds,get,configuration,get,idle,timeout,idle,timeout,executor,schedule,this,get,configuration,get,idle,timeout,time,unit,milliseconds
MllpTcpClientProducer -> @Override     public synchronized void run();1537290824;Check for idle connection;@Override_    public synchronized void run() {_        if (getConfiguration().hasIdleTimeout()) {_            if (null != socket && !socket.isClosed() && socket.isConnected()) {_                if (getEndpoint().hasLastConnectionActivityTicks()) {_                    long idleTime = System.currentTimeMillis() - getEndpoint().getLastConnectionActivityTicks()__                    if (log.isDebugEnabled()) {_                        log.debug("Checking {} for idle connection: {} - {}", getConnectionAddress(), idleTime, getConfiguration().getIdleTimeout())__                    }_                    if (idleTime >= getConfiguration().getIdleTimeout()) {_                        log.info("MLLP Connection idle time of '{}' milliseconds met or exceeded the idle producer timeout of '{}' milliseconds - resetting connection",_                            idleTime, getConfiguration().getIdleTimeout())__                        mllpBuffer.resetSocket(socket)__                    } else {_                        long minDelay = 100__                        long delay = Long.min(Long.max(minDelay, getConfiguration().getIdleTimeout() - idleTime), getConfiguration().getIdleTimeout())__                        if (log.isDebugEnabled()) {_                            log.debug("Scheduling idle producer connection check of {} in {} milliseconds", getConnectionAddress(), delay)__                        }_                        idleTimeoutExecutor.schedule(this, delay, TimeUnit.MILLISECONDS)__                    }_                } else {_                    log.debug("No activity detected since initial connection - scheduling idle producer connection check in {} milliseconds", getConfiguration().getIdleTimeout())__                    idleTimeoutExecutor.schedule(this, getConfiguration().getIdleTimeout(), TimeUnit.MILLISECONDS)__                }_            }_        }_    };check,for,idle,connection;override,public,synchronized,void,run,if,get,configuration,has,idle,timeout,if,null,socket,socket,is,closed,socket,is,connected,if,get,endpoint,has,last,connection,activity,ticks,long,idle,time,system,current,time,millis,get,endpoint,get,last,connection,activity,ticks,if,log,is,debug,enabled,log,debug,checking,for,idle,connection,get,connection,address,idle,time,get,configuration,get,idle,timeout,if,idle,time,get,configuration,get,idle,timeout,log,info,mllp,connection,idle,time,of,milliseconds,met,or,exceeded,the,idle,producer,timeout,of,milliseconds,resetting,connection,idle,time,get,configuration,get,idle,timeout,mllp,buffer,reset,socket,socket,else,long,min,delay,100,long,delay,long,min,long,max,min,delay,get,configuration,get,idle,timeout,idle,time,get,configuration,get,idle,timeout,if,log,is,debug,enabled,log,debug,scheduling,idle,producer,connection,check,of,in,milliseconds,get,connection,address,delay,idle,timeout,executor,schedule,this,delay,time,unit,milliseconds,else,log,debug,no,activity,detected,since,initial,connection,scheduling,idle,producer,connection,check,in,milliseconds,get,configuration,get,idle,timeout,idle,timeout,executor,schedule,this,get,configuration,get,idle,timeout,time,unit,milliseconds
MllpTcpClientProducer -> @Override     public synchronized void run();1540108163;Check for idle connection;@Override_    public synchronized void run() {_        if (getConfiguration().hasIdleTimeout()) {_            if (null != socket && !socket.isClosed() && socket.isConnected()) {_                if (getEndpoint().hasLastConnectionActivityTicks()) {_                    long idleTime = System.currentTimeMillis() - getEndpoint().getLastConnectionActivityTicks()__                    if (log.isDebugEnabled()) {_                        log.debug("Checking {} for idle connection: {} - {}", getConnectionAddress(), idleTime, getConfiguration().getIdleTimeout())__                    }_                    if (idleTime >= getConfiguration().getIdleTimeout()) {_                        log.info("MLLP Connection idle time of '{}' milliseconds met or exceeded the idle producer timeout of '{}' milliseconds - resetting connection",_                            idleTime, getConfiguration().getIdleTimeout())__                        mllpBuffer.resetSocket(socket)__                    } else {_                        long minDelay = 100__                        long delay = Long.min(Long.max(minDelay, getConfiguration().getIdleTimeout() - idleTime), getConfiguration().getIdleTimeout())__                        if (log.isDebugEnabled()) {_                            log.debug("Scheduling idle producer connection check of {} in {} milliseconds", getConnectionAddress(), delay)__                        }_                        idleTimeoutExecutor.schedule(this, delay, TimeUnit.MILLISECONDS)__                    }_                } else {_                    log.debug("No activity detected since initial connection - scheduling idle producer connection check in {} milliseconds", getConfiguration().getIdleTimeout())__                    idleTimeoutExecutor.schedule(this, getConfiguration().getIdleTimeout(), TimeUnit.MILLISECONDS)__                }_            }_        }_    };check,for,idle,connection;override,public,synchronized,void,run,if,get,configuration,has,idle,timeout,if,null,socket,socket,is,closed,socket,is,connected,if,get,endpoint,has,last,connection,activity,ticks,long,idle,time,system,current,time,millis,get,endpoint,get,last,connection,activity,ticks,if,log,is,debug,enabled,log,debug,checking,for,idle,connection,get,connection,address,idle,time,get,configuration,get,idle,timeout,if,idle,time,get,configuration,get,idle,timeout,log,info,mllp,connection,idle,time,of,milliseconds,met,or,exceeded,the,idle,producer,timeout,of,milliseconds,resetting,connection,idle,time,get,configuration,get,idle,timeout,mllp,buffer,reset,socket,socket,else,long,min,delay,100,long,delay,long,min,long,max,min,delay,get,configuration,get,idle,timeout,idle,time,get,configuration,get,idle,timeout,if,log,is,debug,enabled,log,debug,scheduling,idle,producer,connection,check,of,in,milliseconds,get,connection,address,delay,idle,timeout,executor,schedule,this,delay,time,unit,milliseconds,else,log,debug,no,activity,detected,since,initial,connection,scheduling,idle,producer,connection,check,in,milliseconds,get,configuration,get,idle,timeout,idle,timeout,executor,schedule,this,get,configuration,get,idle,timeout,time,unit,milliseconds
