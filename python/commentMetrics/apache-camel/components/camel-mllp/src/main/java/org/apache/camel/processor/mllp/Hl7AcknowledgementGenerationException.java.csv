commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public boolean hasHl7MessageBytes() {     return hl7MessageBytes != null && hl7MessageBytes.length > 0. }
false;public;0;3;;public byte[] getHl7MessageBytes() {     return hl7MessageBytes. }
true;public;0;20;/**  * Override the base version of this method, and include the HL7 Message and Acknowledgement, if any  *  * @return the detail message of this MLLP Exception  */ ;/**  * Override the base version of this method, and include the HL7 Message and Acknowledgement, if any  *  * @return the detail message of this MLLP Exception  */ @Override public String getMessage() {     if (hasHl7MessageBytes()) {         String parentMessage = super.getMessage().         StringBuilder messageBuilder = new StringBuilder(parentMessage.length() + hl7MessageBytes.length).         messageBuilder.append(parentMessage).append("\n\t{hl7MessageBytes [").append(hl7MessageBytes.length).append("] = ").         Hl7Util.appendBytesAsPrintFriendlyString(messageBuilder, hl7MessageBytes, 0, hl7MessageBytes.length).         messageBuilder.append('}').         return messageBuilder.toString().     }     return super.getMessage(). }
