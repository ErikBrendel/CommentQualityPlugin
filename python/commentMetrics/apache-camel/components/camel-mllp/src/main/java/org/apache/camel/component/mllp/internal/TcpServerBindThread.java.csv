# id;timestamp;commentText;codeText;commentWords;codeWords
TcpServerBindThread -> @Override     public void run();1517355620;Do the initial read on the Socket and try to determine if it has HL7 data, junk, or nothing.;@Override_    public void run() {__        MDC.put(MDCUnitOfWork.MDC_CAMEL_CONTEXT_ID, consumer.getEndpoint().getCamelContext().getName())___        Route route = consumer.getRoute()__        if (route != null) {_            String routeId = route.getId()__            if (routeId != null) {_                MDC.put(MDCUnitOfWork.MDC_ROUTE_ID, route.getId())__            }_        }__        try {_            ServerSocket serverSocket = new ServerSocket()__            if (consumer.getConfiguration().hasReceiveBufferSize()) {_                serverSocket.setReceiveBufferSize(consumer.getConfiguration().getReceiveBufferSize())__            }__            if (consumer.getConfiguration().hasReuseAddress()) {_                serverSocket.setReuseAddress(consumer.getConfiguration().getReuseAddress())__            }__            _            serverSocket.setSoTimeout(consumer.getConfiguration().getAcceptTimeout())___            InetSocketAddress socketAddress__            if (null == consumer.getEndpoint().getHostname()) {_                socketAddress = new InetSocketAddress(consumer.getEndpoint().getPort())__            } else {_                socketAddress = new InetSocketAddress(consumer.getEndpoint().getHostname(), consumer.getEndpoint().getPort())__            }__            log.debug("Attempting to bind to {}", socketAddress)___            long startTicks = System.currentTimeMillis()__            do {_                try {_                    if (consumer.getConfiguration().hasBacklog()) {_                        serverSocket.bind(socketAddress, consumer.getConfiguration().getBacklog())__                    } else {_                        serverSocket.bind(socketAddress)__                    }_                    consumer.startAcceptThread(serverSocket)__                } catch (BindException bindException) {_                    if (System.currentTimeMillis() > startTicks + consumer.getConfiguration().getBindTimeout()) {_                        log.error("Failed to bind to address {} within timeout {}", socketAddress, consumer.getConfiguration().getBindTimeout(), bindException)__                        break__                    } else {_                        log.warn("Failed to bind to address {} - retrying in {} milliseconds", socketAddress, consumer.getConfiguration().getBindRetryInterval())__                        try {_                            Thread.sleep(consumer.getConfiguration().getBindRetryInterval())__                        } catch (InterruptedException interruptedEx) {_                            log.info("Bind to address {} interrupted", socketAddress, interruptedEx)__                            if (!this.isInterrupted()) {_                                super.interrupt()__                            }_                            break__                        }_                    }_                } catch (IOException unexpectedEx) {_                    log.error("Unexpected exception encountered binding to address {}", socketAddress, unexpectedEx)__                    break__                }_            } while (!this.isInterrupted() && !serverSocket.isBound())___        } catch (IOException ioEx) {_            log.error("Unexpected exception encountered initializing ServerSocket before attempting to bind", ioEx)__        }_    };do,the,initial,read,on,the,socket,and,try,to,determine,if,it,has,hl7,data,junk,or,nothing;override,public,void,run,mdc,put,mdcunit,of,work,consumer,get,endpoint,get,camel,context,get,name,route,route,consumer,get,route,if,route,null,string,route,id,route,get,id,if,route,id,null,mdc,put,mdcunit,of,work,route,get,id,try,server,socket,server,socket,new,server,socket,if,consumer,get,configuration,has,receive,buffer,size,server,socket,set,receive,buffer,size,consumer,get,configuration,get,receive,buffer,size,if,consumer,get,configuration,has,reuse,address,server,socket,set,reuse,address,consumer,get,configuration,get,reuse,address,server,socket,set,so,timeout,consumer,get,configuration,get,accept,timeout,inet,socket,address,socket,address,if,null,consumer,get,endpoint,get,hostname,socket,address,new,inet,socket,address,consumer,get,endpoint,get,port,else,socket,address,new,inet,socket,address,consumer,get,endpoint,get,hostname,consumer,get,endpoint,get,port,log,debug,attempting,to,bind,to,socket,address,long,start,ticks,system,current,time,millis,do,try,if,consumer,get,configuration,has,backlog,server,socket,bind,socket,address,consumer,get,configuration,get,backlog,else,server,socket,bind,socket,address,consumer,start,accept,thread,server,socket,catch,bind,exception,bind,exception,if,system,current,time,millis,start,ticks,consumer,get,configuration,get,bind,timeout,log,error,failed,to,bind,to,address,within,timeout,socket,address,consumer,get,configuration,get,bind,timeout,bind,exception,break,else,log,warn,failed,to,bind,to,address,retrying,in,milliseconds,socket,address,consumer,get,configuration,get,bind,retry,interval,try,thread,sleep,consumer,get,configuration,get,bind,retry,interval,catch,interrupted,exception,interrupted,ex,log,info,bind,to,address,interrupted,socket,address,interrupted,ex,if,this,is,interrupted,super,interrupt,break,catch,ioexception,unexpected,ex,log,error,unexpected,exception,encountered,binding,to,address,socket,address,unexpected,ex,break,while,this,is,interrupted,server,socket,is,bound,catch,ioexception,io,ex,log,error,unexpected,exception,encountered,initializing,server,socket,before,attempting,to,bind,io,ex
TcpServerBindThread -> @Override     public void run();1517429197;Bind the TCP ServerSocket within the specified timeout.;@Override_    public void run() {_        MDC.put(MDCUnitOfWork.MDC_CAMEL_CONTEXT_ID, consumer.getEndpoint().getCamelContext().getName())___        Route route = consumer.getRoute()__        if (route != null) {_            String routeId = route.getId()__            if (routeId != null) {_                MDC.put(MDCUnitOfWork.MDC_ROUTE_ID, route.getId())__            }_        }__        try {_            ServerSocket serverSocket = new ServerSocket()__            if (consumer.getConfiguration().hasReceiveBufferSize()) {_                serverSocket.setReceiveBufferSize(consumer.getConfiguration().getReceiveBufferSize())__            }__            if (consumer.getConfiguration().hasReuseAddress()) {_                serverSocket.setReuseAddress(consumer.getConfiguration().getReuseAddress())__            }__            _            serverSocket.setSoTimeout(consumer.getConfiguration().getAcceptTimeout())___            InetSocketAddress socketAddress__            if (null == consumer.getEndpoint().getHostname()) {_                socketAddress = new InetSocketAddress(consumer.getEndpoint().getPort())__            } else {_                socketAddress = new InetSocketAddress(consumer.getEndpoint().getHostname(), consumer.getEndpoint().getPort())__            }__            log.debug("Attempting to bind to {}", socketAddress)___            long startTicks = System.currentTimeMillis()__            do {_                try {_                    if (consumer.getConfiguration().hasBacklog()) {_                        serverSocket.bind(socketAddress, consumer.getConfiguration().getBacklog())__                    } else {_                        serverSocket.bind(socketAddress)__                    }_                    consumer.startAcceptThread(serverSocket)__                } catch (BindException bindException) {_                    if (System.currentTimeMillis() > startTicks + consumer.getConfiguration().getBindTimeout()) {_                        log.error("Failed to bind to address {} within timeout {}", socketAddress, consumer.getConfiguration().getBindTimeout(), bindException)__                        break__                    } else {_                        log.warn("Failed to bind to address {} - retrying in {} milliseconds", socketAddress, consumer.getConfiguration().getBindRetryInterval())__                        try {_                            Thread.sleep(consumer.getConfiguration().getBindRetryInterval())__                        } catch (InterruptedException interruptedEx) {_                            log.info("Bind to address {} interrupted", socketAddress, interruptedEx)__                            if (!this.isInterrupted()) {_                                super.interrupt()__                            }_                            break__                        }_                    }_                } catch (IOException unexpectedEx) {_                    log.error("Unexpected exception encountered binding to address {}", socketAddress, unexpectedEx)__                    break__                }_            } while (!this.isInterrupted() && !serverSocket.isBound())___        } catch (IOException ioEx) {_            log.error("Unexpected exception encountered initializing ServerSocket before attempting to bind", ioEx)__        }_    };bind,the,tcp,server,socket,within,the,specified,timeout;override,public,void,run,mdc,put,mdcunit,of,work,consumer,get,endpoint,get,camel,context,get,name,route,route,consumer,get,route,if,route,null,string,route,id,route,get,id,if,route,id,null,mdc,put,mdcunit,of,work,route,get,id,try,server,socket,server,socket,new,server,socket,if,consumer,get,configuration,has,receive,buffer,size,server,socket,set,receive,buffer,size,consumer,get,configuration,get,receive,buffer,size,if,consumer,get,configuration,has,reuse,address,server,socket,set,reuse,address,consumer,get,configuration,get,reuse,address,server,socket,set,so,timeout,consumer,get,configuration,get,accept,timeout,inet,socket,address,socket,address,if,null,consumer,get,endpoint,get,hostname,socket,address,new,inet,socket,address,consumer,get,endpoint,get,port,else,socket,address,new,inet,socket,address,consumer,get,endpoint,get,hostname,consumer,get,endpoint,get,port,log,debug,attempting,to,bind,to,socket,address,long,start,ticks,system,current,time,millis,do,try,if,consumer,get,configuration,has,backlog,server,socket,bind,socket,address,consumer,get,configuration,get,backlog,else,server,socket,bind,socket,address,consumer,start,accept,thread,server,socket,catch,bind,exception,bind,exception,if,system,current,time,millis,start,ticks,consumer,get,configuration,get,bind,timeout,log,error,failed,to,bind,to,address,within,timeout,socket,address,consumer,get,configuration,get,bind,timeout,bind,exception,break,else,log,warn,failed,to,bind,to,address,retrying,in,milliseconds,socket,address,consumer,get,configuration,get,bind,retry,interval,try,thread,sleep,consumer,get,configuration,get,bind,retry,interval,catch,interrupted,exception,interrupted,ex,log,info,bind,to,address,interrupted,socket,address,interrupted,ex,if,this,is,interrupted,super,interrupt,break,catch,ioexception,unexpected,ex,log,error,unexpected,exception,encountered,binding,to,address,socket,address,unexpected,ex,break,while,this,is,interrupted,server,socket,is,bound,catch,ioexception,io,ex,log,error,unexpected,exception,encountered,initializing,server,socket,before,attempting,to,bind,io,ex
TcpServerBindThread -> @Override     public void run();1548332772;Bind the TCP ServerSocket within the specified timeout.;@Override_    public void run() {_        MDC.put(UnitOfWork.MDC_CAMEL_CONTEXT_ID, consumer.getEndpoint().getCamelContext().getName())___        Route route = consumer.getRoute()__        if (route != null) {_            String routeId = route.getId()__            if (routeId != null) {_                MDC.put(UnitOfWork.MDC_ROUTE_ID, route.getId())__            }_        }__        try {_            ServerSocket serverSocket = new ServerSocket()__            if (consumer.getConfiguration().hasReceiveBufferSize()) {_                serverSocket.setReceiveBufferSize(consumer.getConfiguration().getReceiveBufferSize())__            }__            if (consumer.getConfiguration().hasReuseAddress()) {_                serverSocket.setReuseAddress(consumer.getConfiguration().getReuseAddress())__            }__            _            serverSocket.setSoTimeout(consumer.getConfiguration().getAcceptTimeout())___            InetSocketAddress socketAddress__            if (null == consumer.getEndpoint().getHostname()) {_                socketAddress = new InetSocketAddress(consumer.getEndpoint().getPort())__            } else {_                socketAddress = new InetSocketAddress(consumer.getEndpoint().getHostname(), consumer.getEndpoint().getPort())__            }__            log.debug("Attempting to bind to {}", socketAddress)___            long startTicks = System.currentTimeMillis()__            do {_                try {_                    if (consumer.getConfiguration().hasBacklog()) {_                        serverSocket.bind(socketAddress, consumer.getConfiguration().getBacklog())__                    } else {_                        serverSocket.bind(socketAddress)__                    }_                    consumer.startAcceptThread(serverSocket)__                } catch (BindException bindException) {_                    if (System.currentTimeMillis() > startTicks + consumer.getConfiguration().getBindTimeout()) {_                        log.error("Failed to bind to address {} within timeout {}", socketAddress, consumer.getConfiguration().getBindTimeout(), bindException)__                        break__                    } else {_                        log.warn("Failed to bind to address {} - retrying in {} milliseconds", socketAddress, consumer.getConfiguration().getBindRetryInterval())__                        try {_                            Thread.sleep(consumer.getConfiguration().getBindRetryInterval())__                        } catch (InterruptedException interruptedEx) {_                            log.info("Bind to address {} interrupted", socketAddress, interruptedEx)__                            if (!this.isInterrupted()) {_                                super.interrupt()__                            }_                            break__                        }_                    }_                } catch (IOException unexpectedEx) {_                    log.error("Unexpected exception encountered binding to address {}", socketAddress, unexpectedEx)__                    break__                }_            } while (!this.isInterrupted() && !serverSocket.isBound())___        } catch (IOException ioEx) {_            log.error("Unexpected exception encountered initializing ServerSocket before attempting to bind", ioEx)__        }_    };bind,the,tcp,server,socket,within,the,specified,timeout;override,public,void,run,mdc,put,unit,of,work,consumer,get,endpoint,get,camel,context,get,name,route,route,consumer,get,route,if,route,null,string,route,id,route,get,id,if,route,id,null,mdc,put,unit,of,work,route,get,id,try,server,socket,server,socket,new,server,socket,if,consumer,get,configuration,has,receive,buffer,size,server,socket,set,receive,buffer,size,consumer,get,configuration,get,receive,buffer,size,if,consumer,get,configuration,has,reuse,address,server,socket,set,reuse,address,consumer,get,configuration,get,reuse,address,server,socket,set,so,timeout,consumer,get,configuration,get,accept,timeout,inet,socket,address,socket,address,if,null,consumer,get,endpoint,get,hostname,socket,address,new,inet,socket,address,consumer,get,endpoint,get,port,else,socket,address,new,inet,socket,address,consumer,get,endpoint,get,hostname,consumer,get,endpoint,get,port,log,debug,attempting,to,bind,to,socket,address,long,start,ticks,system,current,time,millis,do,try,if,consumer,get,configuration,has,backlog,server,socket,bind,socket,address,consumer,get,configuration,get,backlog,else,server,socket,bind,socket,address,consumer,start,accept,thread,server,socket,catch,bind,exception,bind,exception,if,system,current,time,millis,start,ticks,consumer,get,configuration,get,bind,timeout,log,error,failed,to,bind,to,address,within,timeout,socket,address,consumer,get,configuration,get,bind,timeout,bind,exception,break,else,log,warn,failed,to,bind,to,address,retrying,in,milliseconds,socket,address,consumer,get,configuration,get,bind,retry,interval,try,thread,sleep,consumer,get,configuration,get,bind,retry,interval,catch,interrupted,exception,interrupted,ex,log,info,bind,to,address,interrupted,socket,address,interrupted,ex,if,this,is,interrupted,super,interrupt,break,catch,ioexception,unexpected,ex,log,error,unexpected,exception,encountered,binding,to,address,socket,address,unexpected,ex,break,while,this,is,interrupted,server,socket,is,bound,catch,ioexception,io,ex,log,error,unexpected,exception,encountered,initializing,server,socket,before,attempting,to,bind,io,ex
