# id;timestamp;commentText;codeText;commentWords;codeWords
MllpConfiguration -> public void setReceiveTimeout(int receiveTimeout);1515779403;The SO_TIMEOUT value (in milliseconds) used when waiting for the start of an MLLP frame__@param receiveTimeout timeout in milliseconds;public void setReceiveTimeout(int receiveTimeout) {_        this.receiveTimeout = receiveTimeout__    };the,value,in,milliseconds,used,when,waiting,for,the,start,of,an,mllp,frame,param,receive,timeout,timeout,in,milliseconds;public,void,set,receive,timeout,int,receive,timeout,this,receive,timeout,receive,timeout
MllpConfiguration -> public void setReceiveTimeout(int receiveTimeout);1517355620;The SO_TIMEOUT value (in milliseconds) used when waiting for the start of an MLLP frame__@param receiveTimeout timeout in milliseconds;public void setReceiveTimeout(int receiveTimeout) {_        this.receiveTimeout = receiveTimeout__    };the,value,in,milliseconds,used,when,waiting,for,the,start,of,an,mllp,frame,param,receive,timeout,timeout,in,milliseconds;public,void,set,receive,timeout,int,receive,timeout,this,receive,timeout,receive,timeout
MllpConfiguration -> public void setReceiveTimeout(int receiveTimeout);1517429197;The SO_TIMEOUT value (in milliseconds) used when waiting for the start of an MLLP frame__@param receiveTimeout timeout in milliseconds;public void setReceiveTimeout(int receiveTimeout) {_        this.receiveTimeout = receiveTimeout__    };the,value,in,milliseconds,used,when,waiting,for,the,start,of,an,mllp,frame,param,receive,timeout,timeout,in,milliseconds;public,void,set,receive,timeout,int,receive,timeout,this,receive,timeout,receive,timeout
MllpConfiguration -> public void setReceiveTimeout(int receiveTimeout);1517599220;The SO_TIMEOUT value (in milliseconds) used when waiting for the start of an MLLP frame__@param receiveTimeout timeout in milliseconds;public void setReceiveTimeout(int receiveTimeout) {_        this.receiveTimeout = receiveTimeout__    };the,value,in,milliseconds,used,when,waiting,for,the,start,of,an,mllp,frame,param,receive,timeout,timeout,in,milliseconds;public,void,set,receive,timeout,int,receive,timeout,this,receive,timeout,receive,timeout
MllpConfiguration -> public void setReceiveTimeout(int receiveTimeout);1518733370;The SO_TIMEOUT value (in milliseconds) used when waiting for the start of an MLLP frame__@param receiveTimeout timeout in milliseconds;public void setReceiveTimeout(int receiveTimeout) {_        this.receiveTimeout = receiveTimeout__    };the,value,in,milliseconds,used,when,waiting,for,the,start,of,an,mllp,frame,param,receive,timeout,timeout,in,milliseconds;public,void,set,receive,timeout,int,receive,timeout,this,receive,timeout,receive,timeout
MllpConfiguration -> public void setReceiveTimeout(int receiveTimeout);1524063106;The SO_TIMEOUT value (in milliseconds) used when waiting for the start of an MLLP frame__@param receiveTimeout timeout in milliseconds;public void setReceiveTimeout(int receiveTimeout) {_        this.receiveTimeout = receiveTimeout__    };the,value,in,milliseconds,used,when,waiting,for,the,start,of,an,mllp,frame,param,receive,timeout,timeout,in,milliseconds;public,void,set,receive,timeout,int,receive,timeout,this,receive,timeout,receive,timeout
MllpConfiguration -> public void setReceiveTimeout(int receiveTimeout);1540108163;The SO_TIMEOUT value (in milliseconds) used when waiting for the start of an MLLP frame__@param receiveTimeout timeout in milliseconds;public void setReceiveTimeout(int receiveTimeout) {_        this.receiveTimeout = receiveTimeout__    };the,value,in,milliseconds,used,when,waiting,for,the,start,of,an,mllp,frame,param,receive,timeout,timeout,in,milliseconds;public,void,set,receive,timeout,int,receive,timeout,this,receive,timeout,receive,timeout
MllpConfiguration -> public void setRequireEndOfData(boolean requireEndOfData);1515779403;Enable disable strict compliance to the MLLP standard.__The MLLP standard specifies [START_OF_BLOCK]hl7 payload[END_OF_BLOCK][END_OF_DATA], however, some systems do not send_the final END_OF_DATA byte.  This setting controls whether or not the final END_OF_DATA byte is required or optional.__@param requireEndOfData the trailing END_OF_DATA byte is required if true_ optional otherwise;public void setRequireEndOfData(boolean requireEndOfData) {_        this.requireEndOfData = requireEndOfData__    };enable,disable,strict,compliance,to,the,mllp,standard,the,mllp,standard,specifies,hl7,payload,however,some,systems,do,not,send,the,final,byte,this,setting,controls,whether,or,not,the,final,byte,is,required,or,optional,param,require,end,of,data,the,trailing,byte,is,required,if,true,optional,otherwise;public,void,set,require,end,of,data,boolean,require,end,of,data,this,require,end,of,data,require,end,of,data
MllpConfiguration -> public void setRequireEndOfData(boolean requireEndOfData);1517355620;Enable disable strict compliance to the MLLP standard.__The MLLP standard specifies [START_OF_BLOCK]hl7 payload[END_OF_BLOCK][END_OF_DATA], however, some systems do not send_the final END_OF_DATA byte.  This setting controls whether or not the final END_OF_DATA byte is required or optional.__@param requireEndOfData the trailing END_OF_DATA byte is required if true_ optional otherwise;public void setRequireEndOfData(boolean requireEndOfData) {_        this.requireEndOfData = requireEndOfData__    };enable,disable,strict,compliance,to,the,mllp,standard,the,mllp,standard,specifies,hl7,payload,however,some,systems,do,not,send,the,final,byte,this,setting,controls,whether,or,not,the,final,byte,is,required,or,optional,param,require,end,of,data,the,trailing,byte,is,required,if,true,optional,otherwise;public,void,set,require,end,of,data,boolean,require,end,of,data,this,require,end,of,data,require,end,of,data
MllpConfiguration -> public void setRequireEndOfData(boolean requireEndOfData);1517429197;Enable/Disable strict compliance to the MLLP standard.__The MLLP standard specifies [START_OF_BLOCK]hl7 payload[END_OF_BLOCK][END_OF_DATA], however, some systems do not send_the final END_OF_DATA byte.  This setting controls whether or not the final END_OF_DATA byte is required or optional.__@param requireEndOfData the trailing END_OF_DATA byte is required if true_ optional otherwise;public void setRequireEndOfData(boolean requireEndOfData) {_        this.requireEndOfData = requireEndOfData__    };enable,disable,strict,compliance,to,the,mllp,standard,the,mllp,standard,specifies,hl7,payload,however,some,systems,do,not,send,the,final,byte,this,setting,controls,whether,or,not,the,final,byte,is,required,or,optional,param,require,end,of,data,the,trailing,byte,is,required,if,true,optional,otherwise;public,void,set,require,end,of,data,boolean,require,end,of,data,this,require,end,of,data,require,end,of,data
MllpConfiguration -> public void setRequireEndOfData(boolean requireEndOfData);1517599220;Enable/Disable strict compliance to the MLLP standard.__The MLLP standard specifies [START_OF_BLOCK]hl7 payload[END_OF_BLOCK][END_OF_DATA], however, some systems do not send_the final END_OF_DATA byte.  This setting controls whether or not the final END_OF_DATA byte is required or optional.__@param requireEndOfData the trailing END_OF_DATA byte is required if true_ optional otherwise;public void setRequireEndOfData(boolean requireEndOfData) {_        this.requireEndOfData = requireEndOfData__    };enable,disable,strict,compliance,to,the,mllp,standard,the,mllp,standard,specifies,hl7,payload,however,some,systems,do,not,send,the,final,byte,this,setting,controls,whether,or,not,the,final,byte,is,required,or,optional,param,require,end,of,data,the,trailing,byte,is,required,if,true,optional,otherwise;public,void,set,require,end,of,data,boolean,require,end,of,data,this,require,end,of,data,require,end,of,data
MllpConfiguration -> public void setRequireEndOfData(boolean requireEndOfData);1518733370;Enable/Disable strict compliance to the MLLP standard.__The MLLP standard specifies [START_OF_BLOCK]hl7 payload[END_OF_BLOCK][END_OF_DATA], however, some systems do not send_the final END_OF_DATA byte.  This setting controls whether or not the final END_OF_DATA byte is required or optional.__@param requireEndOfData the trailing END_OF_DATA byte is required if true_ optional otherwise;public void setRequireEndOfData(boolean requireEndOfData) {_        this.requireEndOfData = requireEndOfData__    };enable,disable,strict,compliance,to,the,mllp,standard,the,mllp,standard,specifies,hl7,payload,however,some,systems,do,not,send,the,final,byte,this,setting,controls,whether,or,not,the,final,byte,is,required,or,optional,param,require,end,of,data,the,trailing,byte,is,required,if,true,optional,otherwise;public,void,set,require,end,of,data,boolean,require,end,of,data,this,require,end,of,data,require,end,of,data
MllpConfiguration -> public void setRequireEndOfData(boolean requireEndOfData);1524063106;Enable/Disable strict compliance to the MLLP standard.__The MLLP standard specifies [START_OF_BLOCK]hl7 payload[END_OF_BLOCK][END_OF_DATA], however, some systems do not send_the final END_OF_DATA byte.  This setting controls whether or not the final END_OF_DATA byte is required or optional.__@param requireEndOfData the trailing END_OF_DATA byte is required if true_ optional otherwise;public void setRequireEndOfData(boolean requireEndOfData) {_        this.requireEndOfData = requireEndOfData__    };enable,disable,strict,compliance,to,the,mllp,standard,the,mllp,standard,specifies,hl7,payload,however,some,systems,do,not,send,the,final,byte,this,setting,controls,whether,or,not,the,final,byte,is,required,or,optional,param,require,end,of,data,the,trailing,byte,is,required,if,true,optional,otherwise;public,void,set,require,end,of,data,boolean,require,end,of,data,this,require,end,of,data,require,end,of,data
MllpConfiguration -> public void setRequireEndOfData(boolean requireEndOfData);1540108163;Enable/Disable strict compliance to the MLLP standard.__The MLLP standard specifies [START_OF_BLOCK]hl7 payload[END_OF_BLOCK][END_OF_DATA], however, some systems do not send_the final END_OF_DATA byte.  This setting controls whether or not the final END_OF_DATA byte is required or optional.__@param requireEndOfData the trailing END_OF_DATA byte is required if true_ optional otherwise;public void setRequireEndOfData(boolean requireEndOfData) {_        this.requireEndOfData = requireEndOfData__    };enable,disable,strict,compliance,to,the,mllp,standard,the,mllp,standard,specifies,hl7,payload,however,some,systems,do,not,send,the,final,byte,this,setting,controls,whether,or,not,the,final,byte,is,required,or,optional,param,require,end,of,data,the,trailing,byte,is,required,if,true,optional,otherwise;public,void,set,require,end,of,data,boolean,require,end,of,data,this,require,end,of,data,require,end,of,data
MllpConfiguration -> public void setSynchronous(boolean synchronous);1517429197;Sets whether synchronous processing should be strictly used (this component only supports synchronous operations).__@param synchronous;public void setSynchronous(boolean synchronous) {_    };sets,whether,synchronous,processing,should,be,strictly,used,this,component,only,supports,synchronous,operations,param,synchronous;public,void,set,synchronous,boolean,synchronous
MllpConfiguration -> public void setSynchronous(boolean synchronous);1517599220;Sets whether synchronous processing should be strictly used (this component only supports synchronous operations).__@param synchronous;public void setSynchronous(boolean synchronous) {_    };sets,whether,synchronous,processing,should,be,strictly,used,this,component,only,supports,synchronous,operations,param,synchronous;public,void,set,synchronous,boolean,synchronous
MllpConfiguration -> public void setSynchronous(boolean synchronous);1518733370;Sets whether synchronous processing should be strictly used (this component only supports synchronous operations).__@param synchronous;public void setSynchronous(boolean synchronous) {_    };sets,whether,synchronous,processing,should,be,strictly,used,this,component,only,supports,synchronous,operations,param,synchronous;public,void,set,synchronous,boolean,synchronous
MllpConfiguration -> public void setSynchronous(boolean synchronous);1524063106;Sets whether synchronous processing should be strictly used (this component only supports synchronous operations).__@param synchronous;public void setSynchronous(boolean synchronous) {_    };sets,whether,synchronous,processing,should,be,strictly,used,this,component,only,supports,synchronous,operations,param,synchronous;public,void,set,synchronous,boolean,synchronous
MllpConfiguration -> public void setSynchronous(boolean synchronous);1540108163;Sets whether synchronous processing should be strictly used (this component only supports synchronous operations).__@param synchronous;public void setSynchronous(boolean synchronous) {_    };sets,whether,synchronous,processing,should,be,strictly,used,this,component,only,supports,synchronous,operations,param,synchronous;public,void,set,synchronous,boolean,synchronous
MllpConfiguration -> public void setBacklog(Integer backlog);1515779403;The maximum queue length for incoming connection indications (a request to connect) is set to the backlog parameter. If a connection indication arrives when the queue is full, the connection is_refused.;public void setBacklog(Integer backlog) {_        this.backlog = backlog__    };the,maximum,queue,length,for,incoming,connection,indications,a,request,to,connect,is,set,to,the,backlog,parameter,if,a,connection,indication,arrives,when,the,queue,is,full,the,connection,is,refused;public,void,set,backlog,integer,backlog,this,backlog,backlog
MllpConfiguration -> public void setBacklog(Integer backlog);1517355620;The maximum queue length for incoming connection indications (a request to connect) is set to the backlog parameter. If a connection indication arrives when the queue is full, the connection is_refused.;public void setBacklog(Integer backlog) {_        this.backlog = backlog__    };the,maximum,queue,length,for,incoming,connection,indications,a,request,to,connect,is,set,to,the,backlog,parameter,if,a,connection,indication,arrives,when,the,queue,is,full,the,connection,is,refused;public,void,set,backlog,integer,backlog,this,backlog,backlog
MllpConfiguration -> public void setBacklog(Integer backlog);1517429197;The maximum queue length for incoming connection indications (a request to connect) is set to the backlog parameter. If a connection indication arrives when the queue is full, the connection is_refused.;public void setBacklog(Integer backlog) {_        this.backlog = backlog__    };the,maximum,queue,length,for,incoming,connection,indications,a,request,to,connect,is,set,to,the,backlog,parameter,if,a,connection,indication,arrives,when,the,queue,is,full,the,connection,is,refused;public,void,set,backlog,integer,backlog,this,backlog,backlog
MllpConfiguration -> public void setBacklog(Integer backlog);1517599220;The maximum queue length for incoming connection indications (a request to connect) is set to the backlog parameter. If a connection indication arrives when the queue is full, the connection is_refused.;public void setBacklog(Integer backlog) {_        this.backlog = backlog__    };the,maximum,queue,length,for,incoming,connection,indications,a,request,to,connect,is,set,to,the,backlog,parameter,if,a,connection,indication,arrives,when,the,queue,is,full,the,connection,is,refused;public,void,set,backlog,integer,backlog,this,backlog,backlog
MllpConfiguration -> public void setBacklog(Integer backlog);1518733370;The maximum queue length for incoming connection indications (a request to connect) is set to the backlog parameter. If a connection indication arrives when the queue is full, the connection is_refused.;public void setBacklog(Integer backlog) {_        this.backlog = backlog__    };the,maximum,queue,length,for,incoming,connection,indications,a,request,to,connect,is,set,to,the,backlog,parameter,if,a,connection,indication,arrives,when,the,queue,is,full,the,connection,is,refused;public,void,set,backlog,integer,backlog,this,backlog,backlog
MllpConfiguration -> public void setBacklog(Integer backlog);1524063106;The maximum queue length for incoming connection indications (a request to connect) is set to the backlog parameter. If a connection indication arrives when the queue is full, the connection is_refused.;public void setBacklog(Integer backlog) {_        this.backlog = backlog__    };the,maximum,queue,length,for,incoming,connection,indications,a,request,to,connect,is,set,to,the,backlog,parameter,if,a,connection,indication,arrives,when,the,queue,is,full,the,connection,is,refused;public,void,set,backlog,integer,backlog,this,backlog,backlog
MllpConfiguration -> public void setBacklog(Integer backlog);1540108163;The maximum queue length for incoming connection indications (a request to connect) is set to the backlog parameter. If a connection indication arrives when the queue is full, the connection is_refused.;public void setBacklog(Integer backlog) {_        this.backlog = backlog__    };the,maximum,queue,length,for,incoming,connection,indications,a,request,to,connect,is,set,to,the,backlog,parameter,if,a,connection,indication,arrives,when,the,queue,is,full,the,connection,is,refused;public,void,set,backlog,integer,backlog,this,backlog,backlog
MllpConfiguration -> public void setKeepAlive(Boolean keepAlive);1515779403;Enable/disable the SO_KEEPALIVE socket option.__@param keepAlive enable SO_KEEPALIVE when true_ disable SO_KEEPALIVE when false_ use system default when null;public void setKeepAlive(Boolean keepAlive) {_        this.keepAlive = keepAlive__    };enable,disable,the,socket,option,param,keep,alive,enable,when,true,disable,when,false,use,system,default,when,null;public,void,set,keep,alive,boolean,keep,alive,this,keep,alive,keep,alive
MllpConfiguration -> public void setKeepAlive(Boolean keepAlive);1517355620;Enable/disable the SO_KEEPALIVE socket option.__@param keepAlive enable SO_KEEPALIVE when true_ disable SO_KEEPALIVE when false_ use system default when null;public void setKeepAlive(Boolean keepAlive) {_        this.keepAlive = keepAlive__    };enable,disable,the,socket,option,param,keep,alive,enable,when,true,disable,when,false,use,system,default,when,null;public,void,set,keep,alive,boolean,keep,alive,this,keep,alive,keep,alive
MllpConfiguration -> public void setKeepAlive(Boolean keepAlive);1517429197;Enable/disable the SO_KEEPALIVE socket option.__@param keepAlive enable SO_KEEPALIVE when true_ disable SO_KEEPALIVE when false_ use system default when null;public void setKeepAlive(Boolean keepAlive) {_        this.keepAlive = keepAlive__    };enable,disable,the,socket,option,param,keep,alive,enable,when,true,disable,when,false,use,system,default,when,null;public,void,set,keep,alive,boolean,keep,alive,this,keep,alive,keep,alive
MllpConfiguration -> public void setKeepAlive(Boolean keepAlive);1517599220;Enable/disable the SO_KEEPALIVE socket option.__@param keepAlive enable SO_KEEPALIVE when true_ disable SO_KEEPALIVE when false_ use system default when null;public void setKeepAlive(Boolean keepAlive) {_        this.keepAlive = keepAlive__    };enable,disable,the,socket,option,param,keep,alive,enable,when,true,disable,when,false,use,system,default,when,null;public,void,set,keep,alive,boolean,keep,alive,this,keep,alive,keep,alive
MllpConfiguration -> public void setKeepAlive(Boolean keepAlive);1518733370;Enable/disable the SO_KEEPALIVE socket option.__@param keepAlive enable SO_KEEPALIVE when true_ disable SO_KEEPALIVE when false_ use system default when null;public void setKeepAlive(Boolean keepAlive) {_        this.keepAlive = keepAlive__    };enable,disable,the,socket,option,param,keep,alive,enable,when,true,disable,when,false,use,system,default,when,null;public,void,set,keep,alive,boolean,keep,alive,this,keep,alive,keep,alive
MllpConfiguration -> public void setKeepAlive(Boolean keepAlive);1524063106;Enable/disable the SO_KEEPALIVE socket option.__@param keepAlive enable SO_KEEPALIVE when true_ disable SO_KEEPALIVE when false_ use system default when null;public void setKeepAlive(Boolean keepAlive) {_        this.keepAlive = keepAlive__    };enable,disable,the,socket,option,param,keep,alive,enable,when,true,disable,when,false,use,system,default,when,null;public,void,set,keep,alive,boolean,keep,alive,this,keep,alive,keep,alive
MllpConfiguration -> public void setKeepAlive(Boolean keepAlive);1540108163;Enable/disable the SO_KEEPALIVE socket option.__@param keepAlive enable SO_KEEPALIVE when true_ disable SO_KEEPALIVE when false_ use system default when null;public void setKeepAlive(Boolean keepAlive) {_        this.keepAlive = keepAlive__    };enable,disable,the,socket,option,param,keep,alive,enable,when,true,disable,when,false,use,system,default,when,null;public,void,set,keep,alive,boolean,keep,alive,this,keep,alive,keep,alive
MllpConfiguration -> public void setStringPayload(boolean stringPayload);1515779403;Enable/Disable converting the payload to a String.__If enabled, HL7 Payloads received from external systems will be validated converted to a String.__If the charsetName property is set, that character set will be used for the conversion.  If the charsetName property is_not set, the value of MSH-18 will be used to determine th appropriate character set.  If MSH-18 is not set, then_the default ASCII character set will be use.__@param stringPayload enabled if true, otherwise disabled;public void setStringPayload(boolean stringPayload) {_        this.stringPayload = stringPayload__    };enable,disable,converting,the,payload,to,a,string,if,enabled,hl7,payloads,received,from,external,systems,will,be,validated,converted,to,a,string,if,the,charset,name,property,is,set,that,character,set,will,be,used,for,the,conversion,if,the,charset,name,property,is,not,set,the,value,of,msh,18,will,be,used,to,determine,th,appropriate,character,set,if,msh,18,is,not,set,then,the,default,ascii,character,set,will,be,use,param,string,payload,enabled,if,true,otherwise,disabled;public,void,set,string,payload,boolean,string,payload,this,string,payload,string,payload
MllpConfiguration -> public void setStringPayload(boolean stringPayload);1517355620;Enable/Disable converting the payload to a String.__If enabled, HL7 Payloads received from external systems will be validated converted to a String.__If the charsetName property is set, that character set will be used for the conversion.  If the charsetName property is_not set, the value of MSH-18 will be used to determine th appropriate character set.  If MSH-18 is not set, then_the default ASCII character set will be use.__@param stringPayload enabled if true, otherwise disabled;public void setStringPayload(boolean stringPayload) {_        this.stringPayload = stringPayload__    };enable,disable,converting,the,payload,to,a,string,if,enabled,hl7,payloads,received,from,external,systems,will,be,validated,converted,to,a,string,if,the,charset,name,property,is,set,that,character,set,will,be,used,for,the,conversion,if,the,charset,name,property,is,not,set,the,value,of,msh,18,will,be,used,to,determine,th,appropriate,character,set,if,msh,18,is,not,set,then,the,default,ascii,character,set,will,be,use,param,string,payload,enabled,if,true,otherwise,disabled;public,void,set,string,payload,boolean,string,payload,this,string,payload,string,payload
MllpConfiguration -> public void setStringPayload(boolean stringPayload);1517429197;Enable/Disable converting the payload to a String.__If enabled, HL7 Payloads received from external systems will be validated converted to a String.__If the charsetName property is set, that character set will be used for the conversion.  If the charsetName property is_not set, the value of MSH-18 will be used to determine th appropriate character set.  If MSH-18 is not set, then_the default ASCII character set will be use.__@param stringPayload enabled if true, otherwise disabled;public void setStringPayload(boolean stringPayload) {_        this.stringPayload = stringPayload__    };enable,disable,converting,the,payload,to,a,string,if,enabled,hl7,payloads,received,from,external,systems,will,be,validated,converted,to,a,string,if,the,charset,name,property,is,set,that,character,set,will,be,used,for,the,conversion,if,the,charset,name,property,is,not,set,the,value,of,msh,18,will,be,used,to,determine,th,appropriate,character,set,if,msh,18,is,not,set,then,the,default,ascii,character,set,will,be,use,param,string,payload,enabled,if,true,otherwise,disabled;public,void,set,string,payload,boolean,string,payload,this,string,payload,string,payload
MllpConfiguration -> public void setStringPayload(boolean stringPayload);1517599220;Enable/Disable converting the payload to a String.__If enabled, HL7 Payloads received from external systems will be validated converted to a String.__If the charsetName property is set, that character set will be used for the conversion.  If the charsetName property is_not set, the value of MSH-18 will be used to determine th appropriate character set.  If MSH-18 is not set, then_the default ASCII character set will be use.__@param stringPayload enabled if true, otherwise disabled;public void setStringPayload(boolean stringPayload) {_        this.stringPayload = stringPayload__    };enable,disable,converting,the,payload,to,a,string,if,enabled,hl7,payloads,received,from,external,systems,will,be,validated,converted,to,a,string,if,the,charset,name,property,is,set,that,character,set,will,be,used,for,the,conversion,if,the,charset,name,property,is,not,set,the,value,of,msh,18,will,be,used,to,determine,th,appropriate,character,set,if,msh,18,is,not,set,then,the,default,ascii,character,set,will,be,use,param,string,payload,enabled,if,true,otherwise,disabled;public,void,set,string,payload,boolean,string,payload,this,string,payload,string,payload
MllpConfiguration -> public void setStringPayload(boolean stringPayload);1518733370;Enable/Disable converting the payload to a String.__If enabled, HL7 Payloads received from external systems will be validated converted to a String.__If the charsetName property is set, that character set will be used for the conversion.  If the charsetName property is_not set, the value of MSH-18 will be used to determine th appropriate character set.  If MSH-18 is not set, then_the default ISO-8859-1 character set will be use.__@param stringPayload enabled if true, otherwise disabled;public void setStringPayload(boolean stringPayload) {_        this.stringPayload = stringPayload__    };enable,disable,converting,the,payload,to,a,string,if,enabled,hl7,payloads,received,from,external,systems,will,be,validated,converted,to,a,string,if,the,charset,name,property,is,set,that,character,set,will,be,used,for,the,conversion,if,the,charset,name,property,is,not,set,the,value,of,msh,18,will,be,used,to,determine,th,appropriate,character,set,if,msh,18,is,not,set,then,the,default,iso,8859,1,character,set,will,be,use,param,string,payload,enabled,if,true,otherwise,disabled;public,void,set,string,payload,boolean,string,payload,this,string,payload,string,payload
MllpConfiguration -> public void setStringPayload(boolean stringPayload);1524063106;Enable/Disable converting the payload to a String.__If enabled, HL7 Payloads received from external systems will be validated converted to a String.__If the charsetName property is set, that character set will be used for the conversion.  If the charsetName property is_not set, the value of MSH-18 will be used to determine th appropriate character set.  If MSH-18 is not set, then_the default ISO-8859-1 character set will be use.__@param stringPayload enabled if true, otherwise disabled;public void setStringPayload(boolean stringPayload) {_        this.stringPayload = stringPayload__    };enable,disable,converting,the,payload,to,a,string,if,enabled,hl7,payloads,received,from,external,systems,will,be,validated,converted,to,a,string,if,the,charset,name,property,is,set,that,character,set,will,be,used,for,the,conversion,if,the,charset,name,property,is,not,set,the,value,of,msh,18,will,be,used,to,determine,th,appropriate,character,set,if,msh,18,is,not,set,then,the,default,iso,8859,1,character,set,will,be,use,param,string,payload,enabled,if,true,otherwise,disabled;public,void,set,string,payload,boolean,string,payload,this,string,payload,string,payload
MllpConfiguration -> public void setStringPayload(boolean stringPayload);1540108163;Enable/Disable converting the payload to a String.__If enabled, HL7 Payloads received from external systems will be validated converted to a String.__If the charsetName property is set, that character set will be used for the conversion.  If the charsetName property is_not set, the value of MSH-18 will be used to determine th appropriate character set.  If MSH-18 is not set, then_the default ISO-8859-1 character set will be use.__@param stringPayload enabled if true, otherwise disabled;public void setStringPayload(boolean stringPayload) {_        this.stringPayload = stringPayload__    };enable,disable,converting,the,payload,to,a,string,if,enabled,hl7,payloads,received,from,external,systems,will,be,validated,converted,to,a,string,if,the,charset,name,property,is,set,that,character,set,will,be,used,for,the,conversion,if,the,charset,name,property,is,not,set,the,value,of,msh,18,will,be,used,to,determine,th,appropriate,character,set,if,msh,18,is,not,set,then,the,default,iso,8859,1,character,set,will,be,use,param,string,payload,enabled,if,true,otherwise,disabled;public,void,set,string,payload,boolean,string,payload,this,string,payload,string,payload
MllpConfiguration -> public void setCharsetName(String charsetName);1515779403;Set the CamelCharsetName property on the exchange__@param charsetName the charset;public void setCharsetName(String charsetName) {_        this.charsetName = charsetName__    };set,the,camel,charset,name,property,on,the,exchange,param,charset,name,the,charset;public,void,set,charset,name,string,charset,name,this,charset,name,charset,name
MllpConfiguration -> public void setCharsetName(String charsetName);1517355620;Set the CamelCharsetName property on the exchange__@param charsetName the charset;public void setCharsetName(String charsetName) {_        this.charsetName = charsetName__    };set,the,camel,charset,name,property,on,the,exchange,param,charset,name,the,charset;public,void,set,charset,name,string,charset,name,this,charset,name,charset,name
MllpConfiguration -> public void setCharsetName(String charsetName);1517429197;Set the CamelCharsetName property on the exchange__@param charsetName the charset;public void setCharsetName(String charsetName) {_        this.charsetName = charsetName__    };set,the,camel,charset,name,property,on,the,exchange,param,charset,name,the,charset;public,void,set,charset,name,string,charset,name,this,charset,name,charset,name
MllpConfiguration -> public void setCharsetName(String charsetName);1517599220;Set the CamelCharsetName property on the exchange__@param charsetName the charset;public void setCharsetName(String charsetName) {_        this.charsetName = charsetName__    };set,the,camel,charset,name,property,on,the,exchange,param,charset,name,the,charset;public,void,set,charset,name,string,charset,name,this,charset,name,charset,name
MllpConfiguration -> public void setCharsetName(String charsetName);1518733370;Set the CamelCharsetName property on the exchange__@param charsetName the charset;public void setCharsetName(String charsetName) {_        this.charsetName = charsetName__    };set,the,camel,charset,name,property,on,the,exchange,param,charset,name,the,charset;public,void,set,charset,name,string,charset,name,this,charset,name,charset,name
MllpConfiguration -> public void setCharsetName(String charsetName);1524063106;Set the CamelCharsetName property on the exchange__@param charsetName the charset;public void setCharsetName(String charsetName) {_        this.charsetName = charsetName__    };set,the,camel,charset,name,property,on,the,exchange,param,charset,name,the,charset;public,void,set,charset,name,string,charset,name,this,charset,name,charset,name
MllpConfiguration -> public void setCharsetName(String charsetName);1540108163;Set the CamelCharsetName property on the exchange__@param charsetName the charset;public void setCharsetName(String charsetName) {_        this.charsetName = charsetName__    };set,the,camel,charset,name,property,on,the,exchange,param,charset,name,the,charset;public,void,set,charset,name,string,charset,name,this,charset,name,charset,name
MllpConfiguration -> public void setAutoAck(boolean autoAck);1515779403;Enable/Disable the automatic generation of a MLLP Acknowledgement__MLLP Consumers only__@param autoAck enabled if true, otherwise disabled;public void setAutoAck(boolean autoAck) {_        this.autoAck = autoAck__    };enable,disable,the,automatic,generation,of,a,mllp,acknowledgement,mllp,consumers,only,param,auto,ack,enabled,if,true,otherwise,disabled;public,void,set,auto,ack,boolean,auto,ack,this,auto,ack,auto,ack
MllpConfiguration -> public void setAutoAck(boolean autoAck);1517355620;Enable/Disable the automatic generation of a MLLP Acknowledgement__MLLP Consumers only__@param autoAck enabled if true, otherwise disabled;public void setAutoAck(boolean autoAck) {_        this.autoAck = autoAck__    };enable,disable,the,automatic,generation,of,a,mllp,acknowledgement,mllp,consumers,only,param,auto,ack,enabled,if,true,otherwise,disabled;public,void,set,auto,ack,boolean,auto,ack,this,auto,ack,auto,ack
MllpConfiguration -> public void setAutoAck(boolean autoAck);1517429197;Enable/Disable the automatic generation of a MLLP Acknowledgement__MLLP Consumers only__@param autoAck enabled if true, otherwise disabled;public void setAutoAck(boolean autoAck) {_        this.autoAck = autoAck__    };enable,disable,the,automatic,generation,of,a,mllp,acknowledgement,mllp,consumers,only,param,auto,ack,enabled,if,true,otherwise,disabled;public,void,set,auto,ack,boolean,auto,ack,this,auto,ack,auto,ack
MllpConfiguration -> public void setAutoAck(boolean autoAck);1517599220;Enable/Disable the automatic generation of a MLLP Acknowledgement__MLLP Consumers only__@param autoAck enabled if true, otherwise disabled;public void setAutoAck(boolean autoAck) {_        this.autoAck = autoAck__    };enable,disable,the,automatic,generation,of,a,mllp,acknowledgement,mllp,consumers,only,param,auto,ack,enabled,if,true,otherwise,disabled;public,void,set,auto,ack,boolean,auto,ack,this,auto,ack,auto,ack
MllpConfiguration -> public void setAutoAck(boolean autoAck);1518733370;Enable/Disable the automatic generation of a MLLP Acknowledgement__MLLP Consumers only__@param autoAck enabled if true, otherwise disabled;public void setAutoAck(boolean autoAck) {_        this.autoAck = autoAck__    };enable,disable,the,automatic,generation,of,a,mllp,acknowledgement,mllp,consumers,only,param,auto,ack,enabled,if,true,otherwise,disabled;public,void,set,auto,ack,boolean,auto,ack,this,auto,ack,auto,ack
MllpConfiguration -> public void setAutoAck(boolean autoAck);1524063106;Enable/Disable the automatic generation of a MLLP Acknowledgement__MLLP Consumers only__@param autoAck enabled if true, otherwise disabled;public void setAutoAck(boolean autoAck) {_        this.autoAck = autoAck__    };enable,disable,the,automatic,generation,of,a,mllp,acknowledgement,mllp,consumers,only,param,auto,ack,enabled,if,true,otherwise,disabled;public,void,set,auto,ack,boolean,auto,ack,this,auto,ack,auto,ack
MllpConfiguration -> public void setAutoAck(boolean autoAck);1540108163;Enable/Disable the automatic generation of a MLLP Acknowledgement__MLLP Consumers only__@param autoAck enabled if true, otherwise disabled;public void setAutoAck(boolean autoAck) {_        this.autoAck = autoAck__    };enable,disable,the,automatic,generation,of,a,mllp,acknowledgement,mllp,consumers,only,param,auto,ack,enabled,if,true,otherwise,disabled;public,void,set,auto,ack,boolean,auto,ack,this,auto,ack,auto,ack
MllpConfiguration -> @Deprecated     public void setBufferWrites(boolean bufferWrites);1524063106;Enable/Disable the buffering of HL7 payloads before writing to the socket.__@deprecated the parameter will be ignored__@param bufferWrites enabled if true, otherwise disabled;@Deprecated_    public void setBufferWrites(boolean bufferWrites) {_        this.bufferWrites = bufferWrites__    };enable,disable,the,buffering,of,hl7,payloads,before,writing,to,the,socket,deprecated,the,parameter,will,be,ignored,param,buffer,writes,enabled,if,true,otherwise,disabled;deprecated,public,void,set,buffer,writes,boolean,buffer,writes,this,buffer,writes,buffer,writes
MllpConfiguration -> @Deprecated     public void setBufferWrites(boolean bufferWrites);1540108163;Enable/Disable the buffering of HL7 payloads before writing to the socket.__@deprecated the parameter will be ignored__@param bufferWrites enabled if true, otherwise disabled;@Deprecated_    public void setBufferWrites(boolean bufferWrites) {_        this.bufferWrites = bufferWrites__    };enable,disable,the,buffering,of,hl7,payloads,before,writing,to,the,socket,deprecated,the,parameter,will,be,ignored,param,buffer,writes,enabled,if,true,otherwise,disabled;deprecated,public,void,set,buffer,writes,boolean,buffer,writes,this,buffer,writes,buffer,writes
MllpConfiguration -> public Integer getMaxReceiveTimeouts();1515779403;Retrieve the value of the maxReceiveTimeouts URI parameter.__@return the maximum number of receive timeouts before the TCP Socket is reset__@deprecated Use the idleTimeout URI parameter;public Integer getMaxReceiveTimeouts() {_        return maxReceiveTimeouts__    };retrieve,the,value,of,the,max,receive,timeouts,uri,parameter,return,the,maximum,number,of,receive,timeouts,before,the,tcp,socket,is,reset,deprecated,use,the,idle,timeout,uri,parameter;public,integer,get,max,receive,timeouts,return,max,receive,timeouts
MllpConfiguration -> public Integer getMaxReceiveTimeouts();1517355620;Retrieve the value of the maxReceiveTimeouts URI parameter.__@return the maximum number of receive timeouts before the TCP Socket is reset__@deprecated Use the idleTimeout URI parameter;public Integer getMaxReceiveTimeouts() {_        return maxReceiveTimeouts__    };retrieve,the,value,of,the,max,receive,timeouts,uri,parameter,return,the,maximum,number,of,receive,timeouts,before,the,tcp,socket,is,reset,deprecated,use,the,idle,timeout,uri,parameter;public,integer,get,max,receive,timeouts,return,max,receive,timeouts
MllpConfiguration -> public Integer getMaxReceiveTimeouts();1517429197;Retrieve the value of the maxReceiveTimeouts URI parameter.__@return the maximum number of receive timeouts before the TCP Socket is reset__@deprecated Use the idleTimeout URI parameter;public Integer getMaxReceiveTimeouts() {_        return maxReceiveTimeouts__    };retrieve,the,value,of,the,max,receive,timeouts,uri,parameter,return,the,maximum,number,of,receive,timeouts,before,the,tcp,socket,is,reset,deprecated,use,the,idle,timeout,uri,parameter;public,integer,get,max,receive,timeouts,return,max,receive,timeouts
MllpConfiguration -> public Integer getMaxReceiveTimeouts();1517599220;Retrieve the value of the maxReceiveTimeouts URI parameter.__@return the maximum number of receive timeouts before the TCP Socket is reset__@deprecated Use the idleTimeout URI parameter;public Integer getMaxReceiveTimeouts() {_        return maxReceiveTimeouts__    };retrieve,the,value,of,the,max,receive,timeouts,uri,parameter,return,the,maximum,number,of,receive,timeouts,before,the,tcp,socket,is,reset,deprecated,use,the,idle,timeout,uri,parameter;public,integer,get,max,receive,timeouts,return,max,receive,timeouts
MllpConfiguration -> public Integer getMaxReceiveTimeouts();1518733370;Retrieve the value of the maxReceiveTimeouts URI parameter.__@return the maximum number of receive timeouts before the TCP Socket is reset__@deprecated Use the idleTimeout URI parameter;public Integer getMaxReceiveTimeouts() {_        return maxReceiveTimeouts__    };retrieve,the,value,of,the,max,receive,timeouts,uri,parameter,return,the,maximum,number,of,receive,timeouts,before,the,tcp,socket,is,reset,deprecated,use,the,idle,timeout,uri,parameter;public,integer,get,max,receive,timeouts,return,max,receive,timeouts
MllpConfiguration -> public void setExchangePattern(ExchangePattern exchangePattern);1517429197;Sets the exchange pattern when the consumer creates an exchange.__@param exchangePattern;public void setExchangePattern(ExchangePattern exchangePattern) {_        this.exchangePattern = exchangePattern__    };sets,the,exchange,pattern,when,the,consumer,creates,an,exchange,param,exchange,pattern;public,void,set,exchange,pattern,exchange,pattern,exchange,pattern,this,exchange,pattern,exchange,pattern
MllpConfiguration -> public void setExchangePattern(ExchangePattern exchangePattern);1517599220;Sets the exchange pattern when the consumer creates an exchange.__@param exchangePattern;public void setExchangePattern(ExchangePattern exchangePattern) {_        this.exchangePattern = exchangePattern__    };sets,the,exchange,pattern,when,the,consumer,creates,an,exchange,param,exchange,pattern;public,void,set,exchange,pattern,exchange,pattern,exchange,pattern,this,exchange,pattern,exchange,pattern
MllpConfiguration -> public void setExchangePattern(ExchangePattern exchangePattern);1518733370;Sets the exchange pattern when the consumer creates an exchange.__@param exchangePattern;public void setExchangePattern(ExchangePattern exchangePattern) {_        this.exchangePattern = exchangePattern__    };sets,the,exchange,pattern,when,the,consumer,creates,an,exchange,param,exchange,pattern;public,void,set,exchange,pattern,exchange,pattern,exchange,pattern,this,exchange,pattern,exchange,pattern
MllpConfiguration -> public void setExchangePattern(ExchangePattern exchangePattern);1524063106;Sets the exchange pattern when the consumer creates an exchange.__@param exchangePattern;public void setExchangePattern(ExchangePattern exchangePattern) {_        this.exchangePattern = exchangePattern__    };sets,the,exchange,pattern,when,the,consumer,creates,an,exchange,param,exchange,pattern;public,void,set,exchange,pattern,exchange,pattern,exchange,pattern,this,exchange,pattern,exchange,pattern
MllpConfiguration -> public void setExchangePattern(ExchangePattern exchangePattern);1540108163;Sets the exchange pattern when the consumer creates an exchange.__@param exchangePattern;public void setExchangePattern(ExchangePattern exchangePattern) {_        this.exchangePattern = exchangePattern__    };sets,the,exchange,pattern,when,the,consumer,creates,an,exchange,param,exchange,pattern;public,void,set,exchange,pattern,exchange,pattern,exchange,pattern,this,exchange,pattern,exchange,pattern
MllpConfiguration -> public void setConnectTimeout(int connectTimeout);1515779403;Timeout (in milliseconds) for establishing for a TCP connection_<p/>_TCP Client only__@param connectTimeout timeout in milliseconds;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };timeout,in,milliseconds,for,establishing,for,a,tcp,connection,p,tcp,client,only,param,connect,timeout,timeout,in,milliseconds;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
MllpConfiguration -> public void setConnectTimeout(int connectTimeout);1517355620;Timeout (in milliseconds) for establishing for a TCP connection_<p/>_TCP Client only__@param connectTimeout timeout in milliseconds;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };timeout,in,milliseconds,for,establishing,for,a,tcp,connection,p,tcp,client,only,param,connect,timeout,timeout,in,milliseconds;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
MllpConfiguration -> public void setConnectTimeout(int connectTimeout);1517429197;Timeout (in milliseconds) for establishing for a TCP connection_<p/>_TCP Client only__@param connectTimeout timeout in milliseconds;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };timeout,in,milliseconds,for,establishing,for,a,tcp,connection,p,tcp,client,only,param,connect,timeout,timeout,in,milliseconds;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
MllpConfiguration -> public void setConnectTimeout(int connectTimeout);1517599220;Timeout (in milliseconds) for establishing for a TCP connection_<p/>_TCP Client only__@param connectTimeout timeout in milliseconds;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };timeout,in,milliseconds,for,establishing,for,a,tcp,connection,p,tcp,client,only,param,connect,timeout,timeout,in,milliseconds;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
MllpConfiguration -> public void setConnectTimeout(int connectTimeout);1518733370;Timeout (in milliseconds) for establishing for a TCP connection_<p/>_TCP Client only__@param connectTimeout timeout in milliseconds;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };timeout,in,milliseconds,for,establishing,for,a,tcp,connection,p,tcp,client,only,param,connect,timeout,timeout,in,milliseconds;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
MllpConfiguration -> public void setConnectTimeout(int connectTimeout);1524063106;Timeout (in milliseconds) for establishing for a TCP connection_<p/>_TCP Client only__@param connectTimeout timeout in milliseconds;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };timeout,in,milliseconds,for,establishing,for,a,tcp,connection,p,tcp,client,only,param,connect,timeout,timeout,in,milliseconds;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
MllpConfiguration -> public void setConnectTimeout(int connectTimeout);1540108163;Timeout (in milliseconds) for establishing for a TCP connection_<p/>_TCP Client only__@param connectTimeout timeout in milliseconds;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };timeout,in,milliseconds,for,establishing,for,a,tcp,connection,p,tcp,client,only,param,connect,timeout,timeout,in,milliseconds;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
MllpConfiguration -> public void setTcpNoDelay(Boolean tcpNoDelay);1515779403;Enable/disable the TCP_NODELAY socket option.__@param tcpNoDelay enable TCP_NODELAY when true_ disable TCP_NODELAY when false_ use system default when null;public void setTcpNoDelay(Boolean tcpNoDelay) {_        this.tcpNoDelay = tcpNoDelay__    };enable,disable,the,socket,option,param,tcp,no,delay,enable,when,true,disable,when,false,use,system,default,when,null;public,void,set,tcp,no,delay,boolean,tcp,no,delay,this,tcp,no,delay,tcp,no,delay
MllpConfiguration -> public void setTcpNoDelay(Boolean tcpNoDelay);1517355620;Enable/disable the TCP_NODELAY socket option.__@param tcpNoDelay enable TCP_NODELAY when true_ disable TCP_NODELAY when false_ use system default when null;public void setTcpNoDelay(Boolean tcpNoDelay) {_        this.tcpNoDelay = tcpNoDelay__    };enable,disable,the,socket,option,param,tcp,no,delay,enable,when,true,disable,when,false,use,system,default,when,null;public,void,set,tcp,no,delay,boolean,tcp,no,delay,this,tcp,no,delay,tcp,no,delay
MllpConfiguration -> public void setTcpNoDelay(Boolean tcpNoDelay);1517429197;Enable/disable the TCP_NODELAY socket option.__@param tcpNoDelay enable TCP_NODELAY when true_ disable TCP_NODELAY when false_ use system default when null;public void setTcpNoDelay(Boolean tcpNoDelay) {_        this.tcpNoDelay = tcpNoDelay__    };enable,disable,the,socket,option,param,tcp,no,delay,enable,when,true,disable,when,false,use,system,default,when,null;public,void,set,tcp,no,delay,boolean,tcp,no,delay,this,tcp,no,delay,tcp,no,delay
MllpConfiguration -> public void setTcpNoDelay(Boolean tcpNoDelay);1517599220;Enable/disable the TCP_NODELAY socket option.__@param tcpNoDelay enable TCP_NODELAY when true_ disable TCP_NODELAY when false_ use system default when null;public void setTcpNoDelay(Boolean tcpNoDelay) {_        this.tcpNoDelay = tcpNoDelay__    };enable,disable,the,socket,option,param,tcp,no,delay,enable,when,true,disable,when,false,use,system,default,when,null;public,void,set,tcp,no,delay,boolean,tcp,no,delay,this,tcp,no,delay,tcp,no,delay
MllpConfiguration -> public void setTcpNoDelay(Boolean tcpNoDelay);1518733370;Enable/disable the TCP_NODELAY socket option.__@param tcpNoDelay enable TCP_NODELAY when true_ disable TCP_NODELAY when false_ use system default when null;public void setTcpNoDelay(Boolean tcpNoDelay) {_        this.tcpNoDelay = tcpNoDelay__    };enable,disable,the,socket,option,param,tcp,no,delay,enable,when,true,disable,when,false,use,system,default,when,null;public,void,set,tcp,no,delay,boolean,tcp,no,delay,this,tcp,no,delay,tcp,no,delay
MllpConfiguration -> public void setTcpNoDelay(Boolean tcpNoDelay);1524063106;Enable/disable the TCP_NODELAY socket option.__@param tcpNoDelay enable TCP_NODELAY when true_ disable TCP_NODELAY when false_ use system default when null;public void setTcpNoDelay(Boolean tcpNoDelay) {_        this.tcpNoDelay = tcpNoDelay__    };enable,disable,the,socket,option,param,tcp,no,delay,enable,when,true,disable,when,false,use,system,default,when,null;public,void,set,tcp,no,delay,boolean,tcp,no,delay,this,tcp,no,delay,tcp,no,delay
MllpConfiguration -> public void setTcpNoDelay(Boolean tcpNoDelay);1540108163;Enable/disable the TCP_NODELAY socket option.__@param tcpNoDelay enable TCP_NODELAY when true_ disable TCP_NODELAY when false_ use system default when null;public void setTcpNoDelay(Boolean tcpNoDelay) {_        this.tcpNoDelay = tcpNoDelay__    };enable,disable,the,socket,option,param,tcp,no,delay,enable,when,true,disable,when,false,use,system,default,when,null;public,void,set,tcp,no,delay,boolean,tcp,no,delay,this,tcp,no,delay,tcp,no,delay
MllpConfiguration -> @Deprecated     public void setMaxReceiveTimeouts(Integer maxReceiveTimeouts);1524063106;The maximum number of timeouts (specified by receiveTimeout) allowed before the TCP Connection will be reset.__@param maxReceiveTimeouts maximum number of receiveTimeouts__@deprecated Use the idleTimeout URI parameter.  For backward compibility, setting this parameter will result in an_idle timeout of maxReceiveTimeouts * receiveTimeout.  If idleTimeout is also specified, this parameter will be ignored.;@Deprecated_    public void setMaxReceiveTimeouts(Integer maxReceiveTimeouts) {_        this.maxReceiveTimeouts = maxReceiveTimeouts__    };the,maximum,number,of,timeouts,specified,by,receive,timeout,allowed,before,the,tcp,connection,will,be,reset,param,max,receive,timeouts,maximum,number,of,receive,timeouts,deprecated,use,the,idle,timeout,uri,parameter,for,backward,compibility,setting,this,parameter,will,result,in,an,idle,timeout,of,max,receive,timeouts,receive,timeout,if,idle,timeout,is,also,specified,this,parameter,will,be,ignored;deprecated,public,void,set,max,receive,timeouts,integer,max,receive,timeouts,this,max,receive,timeouts,max,receive,timeouts
MllpConfiguration -> @Deprecated     public void setMaxReceiveTimeouts(Integer maxReceiveTimeouts);1540108163;The maximum number of timeouts (specified by receiveTimeout) allowed before the TCP Connection will be reset.__@param maxReceiveTimeouts maximum number of receiveTimeouts__@deprecated Use the idleTimeout URI parameter.  For backward compibility, setting this parameter will result in an_idle timeout of maxReceiveTimeouts * receiveTimeout.  If idleTimeout is also specified, this parameter will be ignored.;@Deprecated_    public void setMaxReceiveTimeouts(Integer maxReceiveTimeouts) {_        this.maxReceiveTimeouts = maxReceiveTimeouts__    };the,maximum,number,of,timeouts,specified,by,receive,timeout,allowed,before,the,tcp,connection,will,be,reset,param,max,receive,timeouts,maximum,number,of,receive,timeouts,deprecated,use,the,idle,timeout,uri,parameter,for,backward,compibility,setting,this,parameter,will,result,in,an,idle,timeout,of,max,receive,timeouts,receive,timeout,if,idle,timeout,is,also,specified,this,parameter,will,be,ignored;deprecated,public,void,set,max,receive,timeouts,integer,max,receive,timeouts,this,max,receive,timeouts,max,receive,timeouts
MllpConfiguration -> public void setValidatePayload(boolean validatePayload);1515779403;Enable/Disable the validation of HL7 Payloads__If enabled, HL7 Payloads received from external systems will be validated (see Hl7Util.generateInvalidPayloadExceptionMessage_for details on the validation). If and invalid payload is detected, a MllpInvalidMessageException (for consumers) or_a MllpInvalidAcknowledgementException will be thrown.__@param validatePayload enabled if true, otherwise disabled;public void setValidatePayload(boolean validatePayload) {_        this.validatePayload = validatePayload__    };enable,disable,the,validation,of,hl7,payloads,if,enabled,hl7,payloads,received,from,external,systems,will,be,validated,see,hl7util,generate,invalid,payload,exception,message,for,details,on,the,validation,if,and,invalid,payload,is,detected,a,mllp,invalid,message,exception,for,consumers,or,a,mllp,invalid,acknowledgement,exception,will,be,thrown,param,validate,payload,enabled,if,true,otherwise,disabled;public,void,set,validate,payload,boolean,validate,payload,this,validate,payload,validate,payload
MllpConfiguration -> public void setValidatePayload(boolean validatePayload);1517355620;Enable/Disable the validation of HL7 Payloads__If enabled, HL7 Payloads received from external systems will be validated (see Hl7Util.generateInvalidPayloadExceptionMessage_for details on the validation). If and invalid payload is detected, a MllpInvalidMessageException (for consumers) or_a MllpInvalidAcknowledgementException will be thrown.__@param validatePayload enabled if true, otherwise disabled;public void setValidatePayload(boolean validatePayload) {_        this.validatePayload = validatePayload__    };enable,disable,the,validation,of,hl7,payloads,if,enabled,hl7,payloads,received,from,external,systems,will,be,validated,see,hl7util,generate,invalid,payload,exception,message,for,details,on,the,validation,if,and,invalid,payload,is,detected,a,mllp,invalid,message,exception,for,consumers,or,a,mllp,invalid,acknowledgement,exception,will,be,thrown,param,validate,payload,enabled,if,true,otherwise,disabled;public,void,set,validate,payload,boolean,validate,payload,this,validate,payload,validate,payload
MllpConfiguration -> public void setValidatePayload(boolean validatePayload);1517429197;Enable/Disable the validation of HL7 Payloads__If enabled, HL7 Payloads received from external systems will be validated (see Hl7Util.generateInvalidPayloadExceptionMessage_for details on the validation). If and invalid payload is detected, a MllpInvalidMessageException (for consumers) or_a MllpInvalidAcknowledgementException will be thrown.__@param validatePayload enabled if true, otherwise disabled;public void setValidatePayload(boolean validatePayload) {_        this.validatePayload = validatePayload__    };enable,disable,the,validation,of,hl7,payloads,if,enabled,hl7,payloads,received,from,external,systems,will,be,validated,see,hl7util,generate,invalid,payload,exception,message,for,details,on,the,validation,if,and,invalid,payload,is,detected,a,mllp,invalid,message,exception,for,consumers,or,a,mllp,invalid,acknowledgement,exception,will,be,thrown,param,validate,payload,enabled,if,true,otherwise,disabled;public,void,set,validate,payload,boolean,validate,payload,this,validate,payload,validate,payload
MllpConfiguration -> public void setValidatePayload(boolean validatePayload);1517599220;Enable/Disable the validation of HL7 Payloads__If enabled, HL7 Payloads received from external systems will be validated (see Hl7Util.generateInvalidPayloadExceptionMessage_for details on the validation). If and invalid payload is detected, a MllpInvalidMessageException (for consumers) or_a MllpInvalidAcknowledgementException will be thrown.__@param validatePayload enabled if true, otherwise disabled;public void setValidatePayload(boolean validatePayload) {_        this.validatePayload = validatePayload__    };enable,disable,the,validation,of,hl7,payloads,if,enabled,hl7,payloads,received,from,external,systems,will,be,validated,see,hl7util,generate,invalid,payload,exception,message,for,details,on,the,validation,if,and,invalid,payload,is,detected,a,mllp,invalid,message,exception,for,consumers,or,a,mllp,invalid,acknowledgement,exception,will,be,thrown,param,validate,payload,enabled,if,true,otherwise,disabled;public,void,set,validate,payload,boolean,validate,payload,this,validate,payload,validate,payload
MllpConfiguration -> public void setValidatePayload(boolean validatePayload);1518733370;Enable/Disable the validation of HL7 Payloads__If enabled, HL7 Payloads received from external systems will be validated (see Hl7Util.generateInvalidPayloadExceptionMessage_for details on the validation). If and invalid payload is detected, a MllpInvalidMessageException (for consumers) or_a MllpInvalidAcknowledgementException will be thrown.__@param validatePayload enabled if true, otherwise disabled;public void setValidatePayload(boolean validatePayload) {_        this.validatePayload = validatePayload__    };enable,disable,the,validation,of,hl7,payloads,if,enabled,hl7,payloads,received,from,external,systems,will,be,validated,see,hl7util,generate,invalid,payload,exception,message,for,details,on,the,validation,if,and,invalid,payload,is,detected,a,mllp,invalid,message,exception,for,consumers,or,a,mllp,invalid,acknowledgement,exception,will,be,thrown,param,validate,payload,enabled,if,true,otherwise,disabled;public,void,set,validate,payload,boolean,validate,payload,this,validate,payload,validate,payload
MllpConfiguration -> public void setValidatePayload(boolean validatePayload);1524063106;Enable/Disable the validation of HL7 Payloads__If enabled, HL7 Payloads received from external systems will be validated (see Hl7Util.generateInvalidPayloadExceptionMessage_for details on the validation). If and invalid payload is detected, a MllpInvalidMessageException (for consumers) or_a MllpInvalidAcknowledgementException will be thrown.__@param validatePayload enabled if true, otherwise disabled;public void setValidatePayload(boolean validatePayload) {_        this.validatePayload = validatePayload__    };enable,disable,the,validation,of,hl7,payloads,if,enabled,hl7,payloads,received,from,external,systems,will,be,validated,see,hl7util,generate,invalid,payload,exception,message,for,details,on,the,validation,if,and,invalid,payload,is,detected,a,mllp,invalid,message,exception,for,consumers,or,a,mllp,invalid,acknowledgement,exception,will,be,thrown,param,validate,payload,enabled,if,true,otherwise,disabled;public,void,set,validate,payload,boolean,validate,payload,this,validate,payload,validate,payload
MllpConfiguration -> public void setValidatePayload(boolean validatePayload);1540108163;Enable/Disable the validation of HL7 Payloads__If enabled, HL7 Payloads received from external systems will be validated (see Hl7Util.generateInvalidPayloadExceptionMessage_for details on the validation). If and invalid payload is detected, a MllpInvalidMessageException (for consumers) or_a MllpInvalidAcknowledgementException will be thrown.__@param validatePayload enabled if true, otherwise disabled;public void setValidatePayload(boolean validatePayload) {_        this.validatePayload = validatePayload__    };enable,disable,the,validation,of,hl7,payloads,if,enabled,hl7,payloads,received,from,external,systems,will,be,validated,see,hl7util,generate,invalid,payload,exception,message,for,details,on,the,validation,if,and,invalid,payload,is,detected,a,mllp,invalid,message,exception,for,consumers,or,a,mllp,invalid,acknowledgement,exception,will,be,thrown,param,validate,payload,enabled,if,true,otherwise,disabled;public,void,set,validate,payload,boolean,validate,payload,this,validate,payload,validate,payload
MllpConfiguration -> public void setSendBufferSize(Integer sendBufferSize);1515779403;Sets the SO_SNDBUF option to the specified value (in bytes)__@param sendBufferSize the SO_SNDBUF option value.  If null, the system default is used;public void setSendBufferSize(Integer sendBufferSize) {_        this.sendBufferSize = sendBufferSize__    };sets,the,option,to,the,specified,value,in,bytes,param,send,buffer,size,the,option,value,if,null,the,system,default,is,used;public,void,set,send,buffer,size,integer,send,buffer,size,this,send,buffer,size,send,buffer,size
MllpConfiguration -> public void setSendBufferSize(Integer sendBufferSize);1517355620;Sets the SO_SNDBUF option to the specified value (in bytes)__@param sendBufferSize the SO_SNDBUF option value.  If null, the system default is used;public void setSendBufferSize(Integer sendBufferSize) {_        this.sendBufferSize = sendBufferSize__    };sets,the,option,to,the,specified,value,in,bytes,param,send,buffer,size,the,option,value,if,null,the,system,default,is,used;public,void,set,send,buffer,size,integer,send,buffer,size,this,send,buffer,size,send,buffer,size
MllpConfiguration -> public void setSendBufferSize(Integer sendBufferSize);1517429197;Sets the SO_SNDBUF option to the specified value (in bytes)__@param sendBufferSize the SO_SNDBUF option value.  If null, the system default is used;public void setSendBufferSize(Integer sendBufferSize) {_        this.sendBufferSize = sendBufferSize__    };sets,the,option,to,the,specified,value,in,bytes,param,send,buffer,size,the,option,value,if,null,the,system,default,is,used;public,void,set,send,buffer,size,integer,send,buffer,size,this,send,buffer,size,send,buffer,size
MllpConfiguration -> public void setSendBufferSize(Integer sendBufferSize);1517599220;Sets the SO_SNDBUF option to the specified value (in bytes)__@param sendBufferSize the SO_SNDBUF option value.  If null, the system default is used;public void setSendBufferSize(Integer sendBufferSize) {_        this.sendBufferSize = sendBufferSize__    };sets,the,option,to,the,specified,value,in,bytes,param,send,buffer,size,the,option,value,if,null,the,system,default,is,used;public,void,set,send,buffer,size,integer,send,buffer,size,this,send,buffer,size,send,buffer,size
MllpConfiguration -> public void setSendBufferSize(Integer sendBufferSize);1518733370;Sets the SO_SNDBUF option to the specified value (in bytes)__@param sendBufferSize the SO_SNDBUF option value.  If null, the system default is used;public void setSendBufferSize(Integer sendBufferSize) {_        this.sendBufferSize = sendBufferSize__    };sets,the,option,to,the,specified,value,in,bytes,param,send,buffer,size,the,option,value,if,null,the,system,default,is,used;public,void,set,send,buffer,size,integer,send,buffer,size,this,send,buffer,size,send,buffer,size
MllpConfiguration -> public void setSendBufferSize(Integer sendBufferSize);1524063106;Sets the SO_SNDBUF option to the specified value (in bytes)__@param sendBufferSize the SO_SNDBUF option value.  If null, the system default is used;public void setSendBufferSize(Integer sendBufferSize) {_        this.sendBufferSize = sendBufferSize__    };sets,the,option,to,the,specified,value,in,bytes,param,send,buffer,size,the,option,value,if,null,the,system,default,is,used;public,void,set,send,buffer,size,integer,send,buffer,size,this,send,buffer,size,send,buffer,size
MllpConfiguration -> public void setSendBufferSize(Integer sendBufferSize);1540108163;Sets the SO_SNDBUF option to the specified value (in bytes)__@param sendBufferSize the SO_SNDBUF option value.  If null, the system default is used;public void setSendBufferSize(Integer sendBufferSize) {_        this.sendBufferSize = sendBufferSize__    };sets,the,option,to,the,specified,value,in,bytes,param,send,buffer,size,the,option,value,if,null,the,system,default,is,used;public,void,set,send,buffer,size,integer,send,buffer,size,this,send,buffer,size,send,buffer,size
MllpConfiguration -> public void setAcceptTimeout(int acceptTimeout);1515779403;Timeout (in milliseconds) while waiting for a TCP connection_<p/>_TCP Server Only__@param acceptTimeout timeout in milliseconds;public void setAcceptTimeout(int acceptTimeout) {_        this.acceptTimeout = acceptTimeout__    };timeout,in,milliseconds,while,waiting,for,a,tcp,connection,p,tcp,server,only,param,accept,timeout,timeout,in,milliseconds;public,void,set,accept,timeout,int,accept,timeout,this,accept,timeout,accept,timeout
MllpConfiguration -> public void setAcceptTimeout(int acceptTimeout);1517355620;Timeout (in milliseconds) while waiting for a TCP connection_<p/>_TCP Server Only__@param acceptTimeout timeout in milliseconds;public void setAcceptTimeout(int acceptTimeout) {_        this.acceptTimeout = acceptTimeout__    };timeout,in,milliseconds,while,waiting,for,a,tcp,connection,p,tcp,server,only,param,accept,timeout,timeout,in,milliseconds;public,void,set,accept,timeout,int,accept,timeout,this,accept,timeout,accept,timeout
MllpConfiguration -> public void setAcceptTimeout(int acceptTimeout);1517429197;Timeout (in milliseconds) while waiting for a TCP connection_<p/>_TCP Server Only__@param acceptTimeout timeout in milliseconds;public void setAcceptTimeout(int acceptTimeout) {_        this.acceptTimeout = acceptTimeout__    };timeout,in,milliseconds,while,waiting,for,a,tcp,connection,p,tcp,server,only,param,accept,timeout,timeout,in,milliseconds;public,void,set,accept,timeout,int,accept,timeout,this,accept,timeout,accept,timeout
MllpConfiguration -> public void setAcceptTimeout(int acceptTimeout);1517599220;Timeout (in milliseconds) while waiting for a TCP connection_<p/>_TCP Server Only__@param acceptTimeout timeout in milliseconds;public void setAcceptTimeout(int acceptTimeout) {_        this.acceptTimeout = acceptTimeout__    };timeout,in,milliseconds,while,waiting,for,a,tcp,connection,p,tcp,server,only,param,accept,timeout,timeout,in,milliseconds;public,void,set,accept,timeout,int,accept,timeout,this,accept,timeout,accept,timeout
MllpConfiguration -> public void setAcceptTimeout(int acceptTimeout);1518733370;Timeout (in milliseconds) while waiting for a TCP connection_<p/>_TCP Server Only__@param acceptTimeout timeout in milliseconds;public void setAcceptTimeout(int acceptTimeout) {_        this.acceptTimeout = acceptTimeout__    };timeout,in,milliseconds,while,waiting,for,a,tcp,connection,p,tcp,server,only,param,accept,timeout,timeout,in,milliseconds;public,void,set,accept,timeout,int,accept,timeout,this,accept,timeout,accept,timeout
MllpConfiguration -> public void setAcceptTimeout(int acceptTimeout);1524063106;Timeout (in milliseconds) while waiting for a TCP connection_<p/>_TCP Server Only__@param acceptTimeout timeout in milliseconds;public void setAcceptTimeout(int acceptTimeout) {_        this.acceptTimeout = acceptTimeout__    };timeout,in,milliseconds,while,waiting,for,a,tcp,connection,p,tcp,server,only,param,accept,timeout,timeout,in,milliseconds;public,void,set,accept,timeout,int,accept,timeout,this,accept,timeout,accept,timeout
MllpConfiguration -> public void setAcceptTimeout(int acceptTimeout);1540108163;Timeout (in milliseconds) while waiting for a TCP connection_<p/>_TCP Server Only__@param acceptTimeout timeout in milliseconds;public void setAcceptTimeout(int acceptTimeout) {_        this.acceptTimeout = acceptTimeout__    };timeout,in,milliseconds,while,waiting,for,a,tcp,connection,p,tcp,server,only,param,accept,timeout,timeout,in,milliseconds;public,void,set,accept,timeout,int,accept,timeout,this,accept,timeout,accept,timeout
MllpConfiguration -> public void setReuseAddress(boolean reuseAddress);1515779403;Enable/disable the SO_REUSEADDR socket option.__@param reuseAddress enable SO_REUSEADDR when true_ disable SO_REUSEADDR when false_ use system default when null;public void setReuseAddress(boolean reuseAddress) {_        this.reuseAddress = reuseAddress__    };enable,disable,the,socket,option,param,reuse,address,enable,when,true,disable,when,false,use,system,default,when,null;public,void,set,reuse,address,boolean,reuse,address,this,reuse,address,reuse,address
MllpConfiguration -> public void setReuseAddress(boolean reuseAddress);1517355620;Enable/disable the SO_REUSEADDR socket option.__@param reuseAddress enable SO_REUSEADDR when true_ disable SO_REUSEADDR when false_ use system default when null;public void setReuseAddress(boolean reuseAddress) {_        this.reuseAddress = reuseAddress__    };enable,disable,the,socket,option,param,reuse,address,enable,when,true,disable,when,false,use,system,default,when,null;public,void,set,reuse,address,boolean,reuse,address,this,reuse,address,reuse,address
MllpConfiguration -> @Deprecated     public boolean hasMaxReceiveTimeouts();1524063106;Determine if the maxReceiveTimeouts URI parameter has been set__@return true if the parameter has been set_ false otherwise__@deprecated Use the idleTimeout URI parameter;@Deprecated_    public boolean hasMaxReceiveTimeouts() {_        return maxReceiveTimeouts != null__    };determine,if,the,max,receive,timeouts,uri,parameter,has,been,set,return,true,if,the,parameter,has,been,set,false,otherwise,deprecated,use,the,idle,timeout,uri,parameter;deprecated,public,boolean,has,max,receive,timeouts,return,max,receive,timeouts,null
MllpConfiguration -> @Deprecated     public boolean hasMaxReceiveTimeouts();1540108163;Determine if the maxReceiveTimeouts URI parameter has been set__@return true if the parameter has been set_ false otherwise__@deprecated Use the idleTimeout URI parameter;@Deprecated_    public boolean hasMaxReceiveTimeouts() {_        return maxReceiveTimeouts != null__    };determine,if,the,max,receive,timeouts,uri,parameter,has,been,set,return,true,if,the,parameter,has,been,set,false,otherwise,deprecated,use,the,idle,timeout,uri,parameter;deprecated,public,boolean,has,max,receive,timeouts,return,max,receive,timeouts,null
MllpConfiguration -> public void setReuseAddress(Boolean reuseAddress);1517429197;Enable/disable the SO_REUSEADDR socket option.__@param reuseAddress enable SO_REUSEADDR when true_ disable SO_REUSEADDR when false_ use system default when null;public void setReuseAddress(Boolean reuseAddress) {_        this.reuseAddress = reuseAddress__    };enable,disable,the,socket,option,param,reuse,address,enable,when,true,disable,when,false,use,system,default,when,null;public,void,set,reuse,address,boolean,reuse,address,this,reuse,address,reuse,address
MllpConfiguration -> public void setReuseAddress(Boolean reuseAddress);1517599220;Enable/disable the SO_REUSEADDR socket option.__@param reuseAddress enable SO_REUSEADDR when true_ disable SO_REUSEADDR when false_ use system default when null;public void setReuseAddress(Boolean reuseAddress) {_        this.reuseAddress = reuseAddress__    };enable,disable,the,socket,option,param,reuse,address,enable,when,true,disable,when,false,use,system,default,when,null;public,void,set,reuse,address,boolean,reuse,address,this,reuse,address,reuse,address
MllpConfiguration -> public void setReuseAddress(Boolean reuseAddress);1518733370;Enable/disable the SO_REUSEADDR socket option.__@param reuseAddress enable SO_REUSEADDR when true_ disable SO_REUSEADDR when false_ use system default when null;public void setReuseAddress(Boolean reuseAddress) {_        this.reuseAddress = reuseAddress__    };enable,disable,the,socket,option,param,reuse,address,enable,when,true,disable,when,false,use,system,default,when,null;public,void,set,reuse,address,boolean,reuse,address,this,reuse,address,reuse,address
MllpConfiguration -> public void setReuseAddress(Boolean reuseAddress);1524063106;Enable/disable the SO_REUSEADDR socket option.__@param reuseAddress enable SO_REUSEADDR when true_ disable SO_REUSEADDR when false_ use system default when null;public void setReuseAddress(Boolean reuseAddress) {_        this.reuseAddress = reuseAddress__    };enable,disable,the,socket,option,param,reuse,address,enable,when,true,disable,when,false,use,system,default,when,null;public,void,set,reuse,address,boolean,reuse,address,this,reuse,address,reuse,address
MllpConfiguration -> public void setReuseAddress(Boolean reuseAddress);1540108163;Enable/disable the SO_REUSEADDR socket option.__@param reuseAddress enable SO_REUSEADDR when true_ disable SO_REUSEADDR when false_ use system default when null;public void setReuseAddress(Boolean reuseAddress) {_        this.reuseAddress = reuseAddress__    };enable,disable,the,socket,option,param,reuse,address,enable,when,true,disable,when,false,use,system,default,when,null;public,void,set,reuse,address,boolean,reuse,address,this,reuse,address,reuse,address
MllpConfiguration -> public void setMaxReceiveTimeouts(Integer maxReceiveTimeouts);1515779403;The maximum number of timeouts (specified by receiveTimeout) allowed before the TCP Connection will be reset.__@param maxReceiveTimeouts maximum number of receiveTimeouts__@deprecated Use the idleTimeout URI parameter.  For backward compibility, setting this parameter will result in an_idle timeout of maxReceiveTimeouts * receiveTimeout.  If idleTimeout is also specified, this parameter will be ignored.;public void setMaxReceiveTimeouts(Integer maxReceiveTimeouts) {_        this.maxReceiveTimeouts = maxReceiveTimeouts__    };the,maximum,number,of,timeouts,specified,by,receive,timeout,allowed,before,the,tcp,connection,will,be,reset,param,max,receive,timeouts,maximum,number,of,receive,timeouts,deprecated,use,the,idle,timeout,uri,parameter,for,backward,compibility,setting,this,parameter,will,result,in,an,idle,timeout,of,max,receive,timeouts,receive,timeout,if,idle,timeout,is,also,specified,this,parameter,will,be,ignored;public,void,set,max,receive,timeouts,integer,max,receive,timeouts,this,max,receive,timeouts,max,receive,timeouts
MllpConfiguration -> public void setMaxReceiveTimeouts(Integer maxReceiveTimeouts);1517355620;The maximum number of timeouts (specified by receiveTimeout) allowed before the TCP Connection will be reset.__@param maxReceiveTimeouts maximum number of receiveTimeouts__@deprecated Use the idleTimeout URI parameter.  For backward compibility, setting this parameter will result in an_idle timeout of maxReceiveTimeouts * receiveTimeout.  If idleTimeout is also specified, this parameter will be ignored.;public void setMaxReceiveTimeouts(Integer maxReceiveTimeouts) {_        this.maxReceiveTimeouts = maxReceiveTimeouts__    };the,maximum,number,of,timeouts,specified,by,receive,timeout,allowed,before,the,tcp,connection,will,be,reset,param,max,receive,timeouts,maximum,number,of,receive,timeouts,deprecated,use,the,idle,timeout,uri,parameter,for,backward,compibility,setting,this,parameter,will,result,in,an,idle,timeout,of,max,receive,timeouts,receive,timeout,if,idle,timeout,is,also,specified,this,parameter,will,be,ignored;public,void,set,max,receive,timeouts,integer,max,receive,timeouts,this,max,receive,timeouts,max,receive,timeouts
MllpConfiguration -> public void setMaxReceiveTimeouts(Integer maxReceiveTimeouts);1517429197;The maximum number of timeouts (specified by receiveTimeout) allowed before the TCP Connection will be reset.__@param maxReceiveTimeouts maximum number of receiveTimeouts__@deprecated Use the idleTimeout URI parameter.  For backward compibility, setting this parameter will result in an_idle timeout of maxReceiveTimeouts * receiveTimeout.  If idleTimeout is also specified, this parameter will be ignored.;public void setMaxReceiveTimeouts(Integer maxReceiveTimeouts) {_        this.maxReceiveTimeouts = maxReceiveTimeouts__    };the,maximum,number,of,timeouts,specified,by,receive,timeout,allowed,before,the,tcp,connection,will,be,reset,param,max,receive,timeouts,maximum,number,of,receive,timeouts,deprecated,use,the,idle,timeout,uri,parameter,for,backward,compibility,setting,this,parameter,will,result,in,an,idle,timeout,of,max,receive,timeouts,receive,timeout,if,idle,timeout,is,also,specified,this,parameter,will,be,ignored;public,void,set,max,receive,timeouts,integer,max,receive,timeouts,this,max,receive,timeouts,max,receive,timeouts
MllpConfiguration -> public void setMaxReceiveTimeouts(Integer maxReceiveTimeouts);1517599220;The maximum number of timeouts (specified by receiveTimeout) allowed before the TCP Connection will be reset.__@param maxReceiveTimeouts maximum number of receiveTimeouts__@deprecated Use the idleTimeout URI parameter.  For backward compibility, setting this parameter will result in an_idle timeout of maxReceiveTimeouts * receiveTimeout.  If idleTimeout is also specified, this parameter will be ignored.;public void setMaxReceiveTimeouts(Integer maxReceiveTimeouts) {_        this.maxReceiveTimeouts = maxReceiveTimeouts__    };the,maximum,number,of,timeouts,specified,by,receive,timeout,allowed,before,the,tcp,connection,will,be,reset,param,max,receive,timeouts,maximum,number,of,receive,timeouts,deprecated,use,the,idle,timeout,uri,parameter,for,backward,compibility,setting,this,parameter,will,result,in,an,idle,timeout,of,max,receive,timeouts,receive,timeout,if,idle,timeout,is,also,specified,this,parameter,will,be,ignored;public,void,set,max,receive,timeouts,integer,max,receive,timeouts,this,max,receive,timeouts,max,receive,timeouts
MllpConfiguration -> public void setMaxReceiveTimeouts(Integer maxReceiveTimeouts);1518733370;The maximum number of timeouts (specified by receiveTimeout) allowed before the TCP Connection will be reset.__@param maxReceiveTimeouts maximum number of receiveTimeouts__@deprecated Use the idleTimeout URI parameter.  For backward compibility, setting this parameter will result in an_idle timeout of maxReceiveTimeouts * receiveTimeout.  If idleTimeout is also specified, this parameter will be ignored.;public void setMaxReceiveTimeouts(Integer maxReceiveTimeouts) {_        this.maxReceiveTimeouts = maxReceiveTimeouts__    };the,maximum,number,of,timeouts,specified,by,receive,timeout,allowed,before,the,tcp,connection,will,be,reset,param,max,receive,timeouts,maximum,number,of,receive,timeouts,deprecated,use,the,idle,timeout,uri,parameter,for,backward,compibility,setting,this,parameter,will,result,in,an,idle,timeout,of,max,receive,timeouts,receive,timeout,if,idle,timeout,is,also,specified,this,parameter,will,be,ignored;public,void,set,max,receive,timeouts,integer,max,receive,timeouts,this,max,receive,timeouts,max,receive,timeouts
MllpConfiguration -> public void setBufferWrites(boolean bufferWrites);1515779403;Enable/Disable the validation of HL7 Payloads__@deprecated the parameter will be ignored__@param bufferWrites enabled if true, otherwise disabled;public void setBufferWrites(boolean bufferWrites) {_        this.bufferWrites = bufferWrites__    };enable,disable,the,validation,of,hl7,payloads,deprecated,the,parameter,will,be,ignored,param,buffer,writes,enabled,if,true,otherwise,disabled;public,void,set,buffer,writes,boolean,buffer,writes,this,buffer,writes,buffer,writes
MllpConfiguration -> public void setBufferWrites(boolean bufferWrites);1517355620;Enable/Disable the validation of HL7 Payloads__@deprecated the parameter will be ignored__@param bufferWrites enabled if true, otherwise disabled;public void setBufferWrites(boolean bufferWrites) {_        this.bufferWrites = bufferWrites__    };enable,disable,the,validation,of,hl7,payloads,deprecated,the,parameter,will,be,ignored,param,buffer,writes,enabled,if,true,otherwise,disabled;public,void,set,buffer,writes,boolean,buffer,writes,this,buffer,writes,buffer,writes
MllpConfiguration -> public void setBufferWrites(boolean bufferWrites);1517429197;Enable/Disable the buffering of HL7 payloads before writing to the socket.__@deprecated the parameter will be ignored__@param bufferWrites enabled if true, otherwise disabled;public void setBufferWrites(boolean bufferWrites) {_        this.bufferWrites = bufferWrites__    };enable,disable,the,buffering,of,hl7,payloads,before,writing,to,the,socket,deprecated,the,parameter,will,be,ignored,param,buffer,writes,enabled,if,true,otherwise,disabled;public,void,set,buffer,writes,boolean,buffer,writes,this,buffer,writes,buffer,writes
MllpConfiguration -> public void setBufferWrites(boolean bufferWrites);1517599220;Enable/Disable the buffering of HL7 payloads before writing to the socket.__@deprecated the parameter will be ignored__@param bufferWrites enabled if true, otherwise disabled;public void setBufferWrites(boolean bufferWrites) {_        this.bufferWrites = bufferWrites__    };enable,disable,the,buffering,of,hl7,payloads,before,writing,to,the,socket,deprecated,the,parameter,will,be,ignored,param,buffer,writes,enabled,if,true,otherwise,disabled;public,void,set,buffer,writes,boolean,buffer,writes,this,buffer,writes,buffer,writes
MllpConfiguration -> public void setBufferWrites(boolean bufferWrites);1518733370;Enable/Disable the buffering of HL7 payloads before writing to the socket.__@deprecated the parameter will be ignored__@param bufferWrites enabled if true, otherwise disabled;public void setBufferWrites(boolean bufferWrites) {_        this.bufferWrites = bufferWrites__    };enable,disable,the,buffering,of,hl7,payloads,before,writing,to,the,socket,deprecated,the,parameter,will,be,ignored,param,buffer,writes,enabled,if,true,otherwise,disabled;public,void,set,buffer,writes,boolean,buffer,writes,this,buffer,writes,buffer,writes
MllpConfiguration -> public void setMaxConcurrentConsumers(int maxConcurrentConsumers);1515779403;The maximum number of concurrent MLLP Consumer connections that will be allowed.  If a new_connection is received and the maximum is number are already established, the new connection will be reset immediately.__@param maxConcurrentConsumers the maximum number of concurrent consumer connections allowed;public void setMaxConcurrentConsumers(int maxConcurrentConsumers) {_        this.maxConcurrentConsumers = maxConcurrentConsumers__    };the,maximum,number,of,concurrent,mllp,consumer,connections,that,will,be,allowed,if,a,new,connection,is,received,and,the,maximum,is,number,are,already,established,the,new,connection,will,be,reset,immediately,param,max,concurrent,consumers,the,maximum,number,of,concurrent,consumer,connections,allowed;public,void,set,max,concurrent,consumers,int,max,concurrent,consumers,this,max,concurrent,consumers,max,concurrent,consumers
MllpConfiguration -> public void setMaxConcurrentConsumers(int maxConcurrentConsumers);1517355620;The maximum number of concurrent MLLP Consumer connections that will be allowed.  If a new_connection is received and the maximum is number are already established, the new connection will be reset immediately.__@param maxConcurrentConsumers the maximum number of concurrent consumer connections allowed;public void setMaxConcurrentConsumers(int maxConcurrentConsumers) {_        this.maxConcurrentConsumers = maxConcurrentConsumers__    };the,maximum,number,of,concurrent,mllp,consumer,connections,that,will,be,allowed,if,a,new,connection,is,received,and,the,maximum,is,number,are,already,established,the,new,connection,will,be,reset,immediately,param,max,concurrent,consumers,the,maximum,number,of,concurrent,consumer,connections,allowed;public,void,set,max,concurrent,consumers,int,max,concurrent,consumers,this,max,concurrent,consumers,max,concurrent,consumers
MllpConfiguration -> public void setMaxConcurrentConsumers(int maxConcurrentConsumers);1517429197;The maximum number of concurrent MLLP Consumer connections that will be allowed.  If a new_connection is received and the maximum is number are already established, the new connection will be reset immediately.__@param maxConcurrentConsumers the maximum number of concurrent consumer connections allowed;public void setMaxConcurrentConsumers(int maxConcurrentConsumers) {_        this.maxConcurrentConsumers = maxConcurrentConsumers__    };the,maximum,number,of,concurrent,mllp,consumer,connections,that,will,be,allowed,if,a,new,connection,is,received,and,the,maximum,is,number,are,already,established,the,new,connection,will,be,reset,immediately,param,max,concurrent,consumers,the,maximum,number,of,concurrent,consumer,connections,allowed;public,void,set,max,concurrent,consumers,int,max,concurrent,consumers,this,max,concurrent,consumers,max,concurrent,consumers
MllpConfiguration -> public void setMaxConcurrentConsumers(int maxConcurrentConsumers);1517599220;The maximum number of concurrent MLLP Consumer connections that will be allowed.  If a new_connection is received and the maximum is number are already established, the new connection will be reset immediately.__@param maxConcurrentConsumers the maximum number of concurrent consumer connections allowed;public void setMaxConcurrentConsumers(int maxConcurrentConsumers) {_        this.maxConcurrentConsumers = maxConcurrentConsumers__    };the,maximum,number,of,concurrent,mllp,consumer,connections,that,will,be,allowed,if,a,new,connection,is,received,and,the,maximum,is,number,are,already,established,the,new,connection,will,be,reset,immediately,param,max,concurrent,consumers,the,maximum,number,of,concurrent,consumer,connections,allowed;public,void,set,max,concurrent,consumers,int,max,concurrent,consumers,this,max,concurrent,consumers,max,concurrent,consumers
MllpConfiguration -> public void setMaxConcurrentConsumers(int maxConcurrentConsumers);1518733370;The maximum number of concurrent MLLP Consumer connections that will be allowed.  If a new_connection is received and the maximum is number are already established, the new connection will be reset immediately.__@param maxConcurrentConsumers the maximum number of concurrent consumer connections allowed;public void setMaxConcurrentConsumers(int maxConcurrentConsumers) {_        this.maxConcurrentConsumers = maxConcurrentConsumers__    };the,maximum,number,of,concurrent,mllp,consumer,connections,that,will,be,allowed,if,a,new,connection,is,received,and,the,maximum,is,number,are,already,established,the,new,connection,will,be,reset,immediately,param,max,concurrent,consumers,the,maximum,number,of,concurrent,consumer,connections,allowed;public,void,set,max,concurrent,consumers,int,max,concurrent,consumers,this,max,concurrent,consumers,max,concurrent,consumers
MllpConfiguration -> public void setMaxConcurrentConsumers(int maxConcurrentConsumers);1524063106;The maximum number of concurrent MLLP Consumer connections that will be allowed.  If a new_connection is received and the maximum is number are already established, the new connection will be reset immediately.__@param maxConcurrentConsumers the maximum number of concurrent consumer connections allowed;public void setMaxConcurrentConsumers(int maxConcurrentConsumers) {_        this.maxConcurrentConsumers = maxConcurrentConsumers__    };the,maximum,number,of,concurrent,mllp,consumer,connections,that,will,be,allowed,if,a,new,connection,is,received,and,the,maximum,is,number,are,already,established,the,new,connection,will,be,reset,immediately,param,max,concurrent,consumers,the,maximum,number,of,concurrent,consumer,connections,allowed;public,void,set,max,concurrent,consumers,int,max,concurrent,consumers,this,max,concurrent,consumers,max,concurrent,consumers
MllpConfiguration -> public void setMaxConcurrentConsumers(int maxConcurrentConsumers);1540108163;The maximum number of concurrent MLLP Consumer connections that will be allowed.  If a new_connection is received and the maximum is number are already established, the new connection will be reset immediately.__@param maxConcurrentConsumers the maximum number of concurrent consumer connections allowed;public void setMaxConcurrentConsumers(int maxConcurrentConsumers) {_        this.maxConcurrentConsumers = maxConcurrentConsumers__    };the,maximum,number,of,concurrent,mllp,consumer,connections,that,will,be,allowed,if,a,new,connection,is,received,and,the,maximum,is,number,are,already,established,the,new,connection,will,be,reset,immediately,param,max,concurrent,consumers,the,maximum,number,of,concurrent,consumer,connections,allowed;public,void,set,max,concurrent,consumers,int,max,concurrent,consumers,this,max,concurrent,consumers,max,concurrent,consumers
MllpConfiguration -> public void setReceiveBufferSize(Integer receiveBufferSize);1515779403;Sets the SO_RCVBUF option to the specified value (in bytes)__@param receiveBufferSize the SO_RCVBUF option value.  If null, the system default is used;public void setReceiveBufferSize(Integer receiveBufferSize) {_        this.receiveBufferSize = receiveBufferSize__    };sets,the,option,to,the,specified,value,in,bytes,param,receive,buffer,size,the,option,value,if,null,the,system,default,is,used;public,void,set,receive,buffer,size,integer,receive,buffer,size,this,receive,buffer,size,receive,buffer,size
MllpConfiguration -> public void setReceiveBufferSize(Integer receiveBufferSize);1517355620;Sets the SO_RCVBUF option to the specified value (in bytes)__@param receiveBufferSize the SO_RCVBUF option value.  If null, the system default is used;public void setReceiveBufferSize(Integer receiveBufferSize) {_        this.receiveBufferSize = receiveBufferSize__    };sets,the,option,to,the,specified,value,in,bytes,param,receive,buffer,size,the,option,value,if,null,the,system,default,is,used;public,void,set,receive,buffer,size,integer,receive,buffer,size,this,receive,buffer,size,receive,buffer,size
MllpConfiguration -> public void setReceiveBufferSize(Integer receiveBufferSize);1517429197;Sets the SO_RCVBUF option to the specified value (in bytes)__@param receiveBufferSize the SO_RCVBUF option value.  If null, the system default is used;public void setReceiveBufferSize(Integer receiveBufferSize) {_        this.receiveBufferSize = receiveBufferSize__    };sets,the,option,to,the,specified,value,in,bytes,param,receive,buffer,size,the,option,value,if,null,the,system,default,is,used;public,void,set,receive,buffer,size,integer,receive,buffer,size,this,receive,buffer,size,receive,buffer,size
MllpConfiguration -> public void setReceiveBufferSize(Integer receiveBufferSize);1517599220;Sets the SO_RCVBUF option to the specified value (in bytes)__@param receiveBufferSize the SO_RCVBUF option value.  If null, the system default is used;public void setReceiveBufferSize(Integer receiveBufferSize) {_        this.receiveBufferSize = receiveBufferSize__    };sets,the,option,to,the,specified,value,in,bytes,param,receive,buffer,size,the,option,value,if,null,the,system,default,is,used;public,void,set,receive,buffer,size,integer,receive,buffer,size,this,receive,buffer,size,receive,buffer,size
MllpConfiguration -> public void setReceiveBufferSize(Integer receiveBufferSize);1518733370;Sets the SO_RCVBUF option to the specified value (in bytes)__@param receiveBufferSize the SO_RCVBUF option value.  If null, the system default is used;public void setReceiveBufferSize(Integer receiveBufferSize) {_        this.receiveBufferSize = receiveBufferSize__    };sets,the,option,to,the,specified,value,in,bytes,param,receive,buffer,size,the,option,value,if,null,the,system,default,is,used;public,void,set,receive,buffer,size,integer,receive,buffer,size,this,receive,buffer,size,receive,buffer,size
MllpConfiguration -> public void setReceiveBufferSize(Integer receiveBufferSize);1524063106;Sets the SO_RCVBUF option to the specified value (in bytes)__@param receiveBufferSize the SO_RCVBUF option value.  If null, the system default is used;public void setReceiveBufferSize(Integer receiveBufferSize) {_        this.receiveBufferSize = receiveBufferSize__    };sets,the,option,to,the,specified,value,in,bytes,param,receive,buffer,size,the,option,value,if,null,the,system,default,is,used;public,void,set,receive,buffer,size,integer,receive,buffer,size,this,receive,buffer,size,receive,buffer,size
MllpConfiguration -> public void setReceiveBufferSize(Integer receiveBufferSize);1540108163;Sets the SO_RCVBUF option to the specified value (in bytes)__@param receiveBufferSize the SO_RCVBUF option value.  If null, the system default is used;public void setReceiveBufferSize(Integer receiveBufferSize) {_        this.receiveBufferSize = receiveBufferSize__    };sets,the,option,to,the,specified,value,in,bytes,param,receive,buffer,size,the,option,value,if,null,the,system,default,is,used;public,void,set,receive,buffer,size,integer,receive,buffer,size,this,receive,buffer,size,receive,buffer,size
MllpConfiguration -> public void setBridgeErrorHandler(boolean bridgeErrorHandler);1517429197;Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while_the consumer is trying to receive incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler.__If disabled, the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions by logging them at WARN or ERROR level and ignored.__@param bridgeErrorHandler;public void setBridgeErrorHandler(boolean bridgeErrorHandler) {_        this.bridgeErrorHandler = bridgeErrorHandler__    };allows,for,bridging,the,consumer,to,the,camel,routing,error,handler,which,mean,any,exceptions,occurred,while,the,consumer,is,trying,to,receive,incoming,messages,or,the,likes,will,now,be,processed,as,a,message,and,handled,by,the,routing,error,handler,if,disabled,the,consumer,will,use,the,org,apache,camel,spi,exception,handler,to,deal,with,exceptions,by,logging,them,at,warn,or,error,level,and,ignored,param,bridge,error,handler;public,void,set,bridge,error,handler,boolean,bridge,error,handler,this,bridge,error,handler,bridge,error,handler
MllpConfiguration -> public void setBridgeErrorHandler(boolean bridgeErrorHandler);1517599220;Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while_the consumer is trying to receive incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler.__If disabled, the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions by logging them at WARN or ERROR level and ignored.__@param bridgeErrorHandler;public void setBridgeErrorHandler(boolean bridgeErrorHandler) {_        this.bridgeErrorHandler = bridgeErrorHandler__    };allows,for,bridging,the,consumer,to,the,camel,routing,error,handler,which,mean,any,exceptions,occurred,while,the,consumer,is,trying,to,receive,incoming,messages,or,the,likes,will,now,be,processed,as,a,message,and,handled,by,the,routing,error,handler,if,disabled,the,consumer,will,use,the,org,apache,camel,spi,exception,handler,to,deal,with,exceptions,by,logging,them,at,warn,or,error,level,and,ignored,param,bridge,error,handler;public,void,set,bridge,error,handler,boolean,bridge,error,handler,this,bridge,error,handler,bridge,error,handler
MllpConfiguration -> public void setBridgeErrorHandler(boolean bridgeErrorHandler);1518733370;Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while_the consumer is trying to receive incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler.__If disabled, the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions by logging them at WARN or ERROR level and ignored.__@param bridgeErrorHandler;public void setBridgeErrorHandler(boolean bridgeErrorHandler) {_        this.bridgeErrorHandler = bridgeErrorHandler__    };allows,for,bridging,the,consumer,to,the,camel,routing,error,handler,which,mean,any,exceptions,occurred,while,the,consumer,is,trying,to,receive,incoming,messages,or,the,likes,will,now,be,processed,as,a,message,and,handled,by,the,routing,error,handler,if,disabled,the,consumer,will,use,the,org,apache,camel,spi,exception,handler,to,deal,with,exceptions,by,logging,them,at,warn,or,error,level,and,ignored,param,bridge,error,handler;public,void,set,bridge,error,handler,boolean,bridge,error,handler,this,bridge,error,handler,bridge,error,handler
MllpConfiguration -> public void setBridgeErrorHandler(boolean bridgeErrorHandler);1524063106;Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while_the consumer is trying to receive incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler.__If disabled, the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions by logging them at WARN or ERROR level and ignored.__@param bridgeErrorHandler;public void setBridgeErrorHandler(boolean bridgeErrorHandler) {_        this.bridgeErrorHandler = bridgeErrorHandler__    };allows,for,bridging,the,consumer,to,the,camel,routing,error,handler,which,mean,any,exceptions,occurred,while,the,consumer,is,trying,to,receive,incoming,messages,or,the,likes,will,now,be,processed,as,a,message,and,handled,by,the,routing,error,handler,if,disabled,the,consumer,will,use,the,org,apache,camel,spi,exception,handler,to,deal,with,exceptions,by,logging,them,at,warn,or,error,level,and,ignored,param,bridge,error,handler;public,void,set,bridge,error,handler,boolean,bridge,error,handler,this,bridge,error,handler,bridge,error,handler
MllpConfiguration -> public void setBridgeErrorHandler(boolean bridgeErrorHandler);1540108163;Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while_the consumer is trying to receive incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler.__If disabled, the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions by logging them at WARN or ERROR level and ignored.__@param bridgeErrorHandler;public void setBridgeErrorHandler(boolean bridgeErrorHandler) {_        this.bridgeErrorHandler = bridgeErrorHandler__    };allows,for,bridging,the,consumer,to,the,camel,routing,error,handler,which,mean,any,exceptions,occurred,while,the,consumer,is,trying,to,receive,incoming,messages,or,the,likes,will,now,be,processed,as,a,message,and,handled,by,the,routing,error,handler,if,disabled,the,consumer,will,use,the,org,apache,camel,spi,exception,handler,to,deal,with,exceptions,by,logging,them,at,warn,or,error,level,and,ignored,param,bridge,error,handler;public,void,set,bridge,error,handler,boolean,bridge,error,handler,this,bridge,error,handler,bridge,error,handler
MllpConfiguration -> public void setLenientBind(boolean lenientBind);1517355620;TCP Server Only - Allow the endpoint to start before the TCP ServerSocket is bound.__In some environments, it may be desirable to allow the endpoint to start before the TCP ServerSocket_is bound.__@param lenientBind if true, the ServerSocket will be bound asynchronously_ otherwise the ServerSocket will be bound synchronously.;public void setLenientBind(boolean lenientBind) {_        this.lenientBind = lenientBind__    };tcp,server,only,allow,the,endpoint,to,start,before,the,tcp,server,socket,is,bound,in,some,environments,it,may,be,desirable,to,allow,the,endpoint,to,start,before,the,tcp,server,socket,is,bound,param,lenient,bind,if,true,the,server,socket,will,be,bound,asynchronously,otherwise,the,server,socket,will,be,bound,synchronously;public,void,set,lenient,bind,boolean,lenient,bind,this,lenient,bind,lenient,bind
MllpConfiguration -> public void setLenientBind(boolean lenientBind);1517429197;TCP Server Only - Allow the endpoint to start before the TCP ServerSocket is bound.__In some environments, it may be desirable to allow the endpoint to start before the TCP ServerSocket_is bound.__@param lenientBind if true, the ServerSocket will be bound asynchronously_ otherwise the ServerSocket will be bound synchronously.;public void setLenientBind(boolean lenientBind) {_        this.lenientBind = lenientBind__    };tcp,server,only,allow,the,endpoint,to,start,before,the,tcp,server,socket,is,bound,in,some,environments,it,may,be,desirable,to,allow,the,endpoint,to,start,before,the,tcp,server,socket,is,bound,param,lenient,bind,if,true,the,server,socket,will,be,bound,asynchronously,otherwise,the,server,socket,will,be,bound,synchronously;public,void,set,lenient,bind,boolean,lenient,bind,this,lenient,bind,lenient,bind
MllpConfiguration -> public void setLenientBind(boolean lenientBind);1517599220;TCP Server Only - Allow the endpoint to start before the TCP ServerSocket is bound.__In some environments, it may be desirable to allow the endpoint to start before the TCP ServerSocket_is bound.__@param lenientBind if true, the ServerSocket will be bound asynchronously_ otherwise the ServerSocket will be bound synchronously.;public void setLenientBind(boolean lenientBind) {_        this.lenientBind = lenientBind__    };tcp,server,only,allow,the,endpoint,to,start,before,the,tcp,server,socket,is,bound,in,some,environments,it,may,be,desirable,to,allow,the,endpoint,to,start,before,the,tcp,server,socket,is,bound,param,lenient,bind,if,true,the,server,socket,will,be,bound,asynchronously,otherwise,the,server,socket,will,be,bound,synchronously;public,void,set,lenient,bind,boolean,lenient,bind,this,lenient,bind,lenient,bind
MllpConfiguration -> public void setLenientBind(boolean lenientBind);1518733370;TCP Server Only - Allow the endpoint to start before the TCP ServerSocket is bound.__In some environments, it may be desirable to allow the endpoint to start before the TCP ServerSocket_is bound.__@param lenientBind if true, the ServerSocket will be bound asynchronously_ otherwise the ServerSocket will be bound synchronously.;public void setLenientBind(boolean lenientBind) {_        this.lenientBind = lenientBind__    };tcp,server,only,allow,the,endpoint,to,start,before,the,tcp,server,socket,is,bound,in,some,environments,it,may,be,desirable,to,allow,the,endpoint,to,start,before,the,tcp,server,socket,is,bound,param,lenient,bind,if,true,the,server,socket,will,be,bound,asynchronously,otherwise,the,server,socket,will,be,bound,synchronously;public,void,set,lenient,bind,boolean,lenient,bind,this,lenient,bind,lenient,bind
MllpConfiguration -> public void setLenientBind(boolean lenientBind);1524063106;TCP Server Only - Allow the endpoint to start before the TCP ServerSocket is bound.__In some environments, it may be desirable to allow the endpoint to start before the TCP ServerSocket_is bound.__@param lenientBind if true, the ServerSocket will be bound asynchronously_ otherwise the ServerSocket will be bound synchronously.;public void setLenientBind(boolean lenientBind) {_        this.lenientBind = lenientBind__    };tcp,server,only,allow,the,endpoint,to,start,before,the,tcp,server,socket,is,bound,in,some,environments,it,may,be,desirable,to,allow,the,endpoint,to,start,before,the,tcp,server,socket,is,bound,param,lenient,bind,if,true,the,server,socket,will,be,bound,asynchronously,otherwise,the,server,socket,will,be,bound,synchronously;public,void,set,lenient,bind,boolean,lenient,bind,this,lenient,bind,lenient,bind
MllpConfiguration -> public void setLenientBind(boolean lenientBind);1540108163;TCP Server Only - Allow the endpoint to start before the TCP ServerSocket is bound.__In some environments, it may be desirable to allow the endpoint to start before the TCP ServerSocket_is bound.__@param lenientBind if true, the ServerSocket will be bound asynchronously_ otherwise the ServerSocket will be bound synchronously.;public void setLenientBind(boolean lenientBind) {_        this.lenientBind = lenientBind__    };tcp,server,only,allow,the,endpoint,to,start,before,the,tcp,server,socket,is,bound,in,some,environments,it,may,be,desirable,to,allow,the,endpoint,to,start,before,the,tcp,server,socket,is,bound,param,lenient,bind,if,true,the,server,socket,will,be,bound,asynchronously,otherwise,the,server,socket,will,be,bound,synchronously;public,void,set,lenient,bind,boolean,lenient,bind,this,lenient,bind,lenient,bind
MllpConfiguration -> public void setIdleTimeout(Integer idleTimeout);1515779403;The approximate idle time allowed before the Client TCP Connection will be reset.__A null value or a value less than or equal to zero will disable the idle timeout.__@param idleTimeout timeout in milliseconds;public void setIdleTimeout(Integer idleTimeout) {_        this.idleTimeout = idleTimeout__    };the,approximate,idle,time,allowed,before,the,client,tcp,connection,will,be,reset,a,null,value,or,a,value,less,than,or,equal,to,zero,will,disable,the,idle,timeout,param,idle,timeout,timeout,in,milliseconds;public,void,set,idle,timeout,integer,idle,timeout,this,idle,timeout,idle,timeout
MllpConfiguration -> public void setIdleTimeout(Integer idleTimeout);1517355620;The approximate idle time allowed before the Client TCP Connection will be reset.__A null value or a value less than or equal to zero will disable the idle timeout.__@param idleTimeout timeout in milliseconds;public void setIdleTimeout(Integer idleTimeout) {_        this.idleTimeout = idleTimeout__    };the,approximate,idle,time,allowed,before,the,client,tcp,connection,will,be,reset,a,null,value,or,a,value,less,than,or,equal,to,zero,will,disable,the,idle,timeout,param,idle,timeout,timeout,in,milliseconds;public,void,set,idle,timeout,integer,idle,timeout,this,idle,timeout,idle,timeout
MllpConfiguration -> public void setIdleTimeout(Integer idleTimeout);1517429197;The approximate idle time allowed before the Client TCP Connection will be reset.__A null value or a value less than or equal to zero will disable the idle timeout.__@param idleTimeout timeout in milliseconds;public void setIdleTimeout(Integer idleTimeout) {_        this.idleTimeout = idleTimeout__    };the,approximate,idle,time,allowed,before,the,client,tcp,connection,will,be,reset,a,null,value,or,a,value,less,than,or,equal,to,zero,will,disable,the,idle,timeout,param,idle,timeout,timeout,in,milliseconds;public,void,set,idle,timeout,integer,idle,timeout,this,idle,timeout,idle,timeout
MllpConfiguration -> public void setIdleTimeout(Integer idleTimeout);1517599220;The approximate idle time allowed before the Client TCP Connection will be reset.__A null value or a value less than or equal to zero will disable the idle timeout.__@param idleTimeout timeout in milliseconds;public void setIdleTimeout(Integer idleTimeout) {_        this.idleTimeout = idleTimeout__    };the,approximate,idle,time,allowed,before,the,client,tcp,connection,will,be,reset,a,null,value,or,a,value,less,than,or,equal,to,zero,will,disable,the,idle,timeout,param,idle,timeout,timeout,in,milliseconds;public,void,set,idle,timeout,integer,idle,timeout,this,idle,timeout,idle,timeout
MllpConfiguration -> public void setIdleTimeout(Integer idleTimeout);1518733370;The approximate idle time allowed before the Client TCP Connection will be reset.__A null value or a value less than or equal to zero will disable the idle timeout.__@param idleTimeout timeout in milliseconds;public void setIdleTimeout(Integer idleTimeout) {_        this.idleTimeout = idleTimeout__    };the,approximate,idle,time,allowed,before,the,client,tcp,connection,will,be,reset,a,null,value,or,a,value,less,than,or,equal,to,zero,will,disable,the,idle,timeout,param,idle,timeout,timeout,in,milliseconds;public,void,set,idle,timeout,integer,idle,timeout,this,idle,timeout,idle,timeout
MllpConfiguration -> public void setIdleTimeout(Integer idleTimeout);1524063106;The approximate idle time allowed before the Client TCP Connection will be reset.__A null value or a value less than or equal to zero will disable the idle timeout.__@param idleTimeout timeout in milliseconds;public void setIdleTimeout(Integer idleTimeout) {_        this.idleTimeout = idleTimeout__    };the,approximate,idle,time,allowed,before,the,client,tcp,connection,will,be,reset,a,null,value,or,a,value,less,than,or,equal,to,zero,will,disable,the,idle,timeout,param,idle,timeout,timeout,in,milliseconds;public,void,set,idle,timeout,integer,idle,timeout,this,idle,timeout,idle,timeout
MllpConfiguration -> public void setIdleTimeout(Integer idleTimeout);1540108163;The approximate idle time allowed before the Client TCP Connection will be reset.__A null value or a value less than or equal to zero will disable the idle timeout.__@param idleTimeout timeout in milliseconds;public void setIdleTimeout(Integer idleTimeout) {_        this.idleTimeout = idleTimeout__    };the,approximate,idle,time,allowed,before,the,client,tcp,connection,will,be,reset,a,null,value,or,a,value,less,than,or,equal,to,zero,will,disable,the,idle,timeout,param,idle,timeout,timeout,in,milliseconds;public,void,set,idle,timeout,integer,idle,timeout,this,idle,timeout,idle,timeout
MllpConfiguration -> public void setBindTimeout(int bindTimeout);1515779403;TCP Server Only - The number of milliseconds to retry binding to a server port;public void setBindTimeout(int bindTimeout) {_        this.bindTimeout = bindTimeout__    };tcp,server,only,the,number,of,milliseconds,to,retry,binding,to,a,server,port;public,void,set,bind,timeout,int,bind,timeout,this,bind,timeout,bind,timeout
MllpConfiguration -> public void setBindTimeout(int bindTimeout);1517355620;TCP Server Only - The number of milliseconds to retry binding to a server port;public void setBindTimeout(int bindTimeout) {_        this.bindTimeout = bindTimeout__    };tcp,server,only,the,number,of,milliseconds,to,retry,binding,to,a,server,port;public,void,set,bind,timeout,int,bind,timeout,this,bind,timeout,bind,timeout
MllpConfiguration -> public void setBindTimeout(int bindTimeout);1517429197;TCP Server Only - The number of milliseconds to retry binding to a server port;public void setBindTimeout(int bindTimeout) {_        this.bindTimeout = bindTimeout__    };tcp,server,only,the,number,of,milliseconds,to,retry,binding,to,a,server,port;public,void,set,bind,timeout,int,bind,timeout,this,bind,timeout,bind,timeout
MllpConfiguration -> public void setBindTimeout(int bindTimeout);1517599220;TCP Server Only - The number of milliseconds to retry binding to a server port;public void setBindTimeout(int bindTimeout) {_        this.bindTimeout = bindTimeout__    };tcp,server,only,the,number,of,milliseconds,to,retry,binding,to,a,server,port;public,void,set,bind,timeout,int,bind,timeout,this,bind,timeout,bind,timeout
MllpConfiguration -> public void setBindTimeout(int bindTimeout);1518733370;TCP Server Only - The number of milliseconds to retry binding to a server port;public void setBindTimeout(int bindTimeout) {_        this.bindTimeout = bindTimeout__    };tcp,server,only,the,number,of,milliseconds,to,retry,binding,to,a,server,port;public,void,set,bind,timeout,int,bind,timeout,this,bind,timeout,bind,timeout
MllpConfiguration -> public void setBindTimeout(int bindTimeout);1524063106;TCP Server Only - The number of milliseconds to retry binding to a server port;public void setBindTimeout(int bindTimeout) {_        this.bindTimeout = bindTimeout__    };tcp,server,only,the,number,of,milliseconds,to,retry,binding,to,a,server,port;public,void,set,bind,timeout,int,bind,timeout,this,bind,timeout,bind,timeout
MllpConfiguration -> public void setBindTimeout(int bindTimeout);1540108163;TCP Server Only - The number of milliseconds to retry binding to a server port;public void setBindTimeout(int bindTimeout) {_        this.bindTimeout = bindTimeout__    };tcp,server,only,the,number,of,milliseconds,to,retry,binding,to,a,server,port;public,void,set,bind,timeout,int,bind,timeout,this,bind,timeout,bind,timeout
MllpConfiguration -> public void setReadTimeout(int readTimeout);1515779403;The SO_TIMEOUT value (in milliseconds) used after the start of an MLLP frame has been received__@param readTimeout timeout in milliseconds;public void setReadTimeout(int readTimeout) {_        this.readTimeout = readTimeout__    };the,value,in,milliseconds,used,after,the,start,of,an,mllp,frame,has,been,received,param,read,timeout,timeout,in,milliseconds;public,void,set,read,timeout,int,read,timeout,this,read,timeout,read,timeout
MllpConfiguration -> public void setReadTimeout(int readTimeout);1517355620;The SO_TIMEOUT value (in milliseconds) used after the start of an MLLP frame has been received__@param readTimeout timeout in milliseconds;public void setReadTimeout(int readTimeout) {_        this.readTimeout = readTimeout__    };the,value,in,milliseconds,used,after,the,start,of,an,mllp,frame,has,been,received,param,read,timeout,timeout,in,milliseconds;public,void,set,read,timeout,int,read,timeout,this,read,timeout,read,timeout
MllpConfiguration -> public void setReadTimeout(int readTimeout);1517429197;The SO_TIMEOUT value (in milliseconds) used after the start of an MLLP frame has been received__@param readTimeout timeout in milliseconds;public void setReadTimeout(int readTimeout) {_        this.readTimeout = readTimeout__    };the,value,in,milliseconds,used,after,the,start,of,an,mllp,frame,has,been,received,param,read,timeout,timeout,in,milliseconds;public,void,set,read,timeout,int,read,timeout,this,read,timeout,read,timeout
MllpConfiguration -> public void setReadTimeout(int readTimeout);1517599220;The SO_TIMEOUT value (in milliseconds) used after the start of an MLLP frame has been received__@param readTimeout timeout in milliseconds;public void setReadTimeout(int readTimeout) {_        this.readTimeout = readTimeout__    };the,value,in,milliseconds,used,after,the,start,of,an,mllp,frame,has,been,received,param,read,timeout,timeout,in,milliseconds;public,void,set,read,timeout,int,read,timeout,this,read,timeout,read,timeout
MllpConfiguration -> public void setReadTimeout(int readTimeout);1518733370;The SO_TIMEOUT value (in milliseconds) used after the start of an MLLP frame has been received__@param readTimeout timeout in milliseconds;public void setReadTimeout(int readTimeout) {_        this.readTimeout = readTimeout__    };the,value,in,milliseconds,used,after,the,start,of,an,mllp,frame,has,been,received,param,read,timeout,timeout,in,milliseconds;public,void,set,read,timeout,int,read,timeout,this,read,timeout,read,timeout
MllpConfiguration -> public void setReadTimeout(int readTimeout);1524063106;The SO_TIMEOUT value (in milliseconds) used after the start of an MLLP frame has been received__@param readTimeout timeout in milliseconds;public void setReadTimeout(int readTimeout) {_        this.readTimeout = readTimeout__    };the,value,in,milliseconds,used,after,the,start,of,an,mllp,frame,has,been,received,param,read,timeout,timeout,in,milliseconds;public,void,set,read,timeout,int,read,timeout,this,read,timeout,read,timeout
MllpConfiguration -> public void setReadTimeout(int readTimeout);1540108163;The SO_TIMEOUT value (in milliseconds) used after the start of an MLLP frame has been received__@param readTimeout timeout in milliseconds;public void setReadTimeout(int readTimeout) {_        this.readTimeout = readTimeout__    };the,value,in,milliseconds,used,after,the,start,of,an,mllp,frame,has,been,received,param,read,timeout,timeout,in,milliseconds;public,void,set,read,timeout,int,read,timeout,this,read,timeout,read,timeout
MllpConfiguration -> @Deprecated     public Integer getMaxReceiveTimeouts();1524063106;Retrieve the value of the maxReceiveTimeouts URI parameter.__@return the maximum number of receive timeouts before the TCP Socket is reset__@deprecated Use the idleTimeout URI parameter;@Deprecated_    public Integer getMaxReceiveTimeouts() {_        return maxReceiveTimeouts__    };retrieve,the,value,of,the,max,receive,timeouts,uri,parameter,return,the,maximum,number,of,receive,timeouts,before,the,tcp,socket,is,reset,deprecated,use,the,idle,timeout,uri,parameter;deprecated,public,integer,get,max,receive,timeouts,return,max,receive,timeouts
MllpConfiguration -> @Deprecated     public Integer getMaxReceiveTimeouts();1540108163;Retrieve the value of the maxReceiveTimeouts URI parameter.__@return the maximum number of receive timeouts before the TCP Socket is reset__@deprecated Use the idleTimeout URI parameter;@Deprecated_    public Integer getMaxReceiveTimeouts() {_        return maxReceiveTimeouts__    };retrieve,the,value,of,the,max,receive,timeouts,uri,parameter,return,the,maximum,number,of,receive,timeouts,before,the,tcp,socket,is,reset,deprecated,use,the,idle,timeout,uri,parameter;deprecated,public,integer,get,max,receive,timeouts,return,max,receive,timeouts
MllpConfiguration -> public boolean hasMaxReceiveTimeouts();1515779403;Determine if the maxReceiveTimeouts URI parameter has been set__@return true if the parameter has been set_ false otherwise__@deprecated Use the idleTimeout URI parameter;public boolean hasMaxReceiveTimeouts() {_        return maxReceiveTimeouts != null__    };determine,if,the,max,receive,timeouts,uri,parameter,has,been,set,return,true,if,the,parameter,has,been,set,false,otherwise,deprecated,use,the,idle,timeout,uri,parameter;public,boolean,has,max,receive,timeouts,return,max,receive,timeouts,null
MllpConfiguration -> public boolean hasMaxReceiveTimeouts();1517355620;Determine if the maxReceiveTimeouts URI parameter has been set__@return true if the parameter has been set_ false otherwise__@deprecated Use the idleTimeout URI parameter;public boolean hasMaxReceiveTimeouts() {_        return maxReceiveTimeouts != null__    };determine,if,the,max,receive,timeouts,uri,parameter,has,been,set,return,true,if,the,parameter,has,been,set,false,otherwise,deprecated,use,the,idle,timeout,uri,parameter;public,boolean,has,max,receive,timeouts,return,max,receive,timeouts,null
MllpConfiguration -> public boolean hasMaxReceiveTimeouts();1517429197;Determine if the maxReceiveTimeouts URI parameter has been set__@return true if the parameter has been set_ false otherwise__@deprecated Use the idleTimeout URI parameter;public boolean hasMaxReceiveTimeouts() {_        return maxReceiveTimeouts != null__    };determine,if,the,max,receive,timeouts,uri,parameter,has,been,set,return,true,if,the,parameter,has,been,set,false,otherwise,deprecated,use,the,idle,timeout,uri,parameter;public,boolean,has,max,receive,timeouts,return,max,receive,timeouts,null
MllpConfiguration -> public boolean hasMaxReceiveTimeouts();1517599220;Determine if the maxReceiveTimeouts URI parameter has been set__@return true if the parameter has been set_ false otherwise__@deprecated Use the idleTimeout URI parameter;public boolean hasMaxReceiveTimeouts() {_        return maxReceiveTimeouts != null__    };determine,if,the,max,receive,timeouts,uri,parameter,has,been,set,return,true,if,the,parameter,has,been,set,false,otherwise,deprecated,use,the,idle,timeout,uri,parameter;public,boolean,has,max,receive,timeouts,return,max,receive,timeouts,null
MllpConfiguration -> public boolean hasMaxReceiveTimeouts();1518733370;Determine if the maxReceiveTimeouts URI parameter has been set__@return true if the parameter has been set_ false otherwise__@deprecated Use the idleTimeout URI parameter;public boolean hasMaxReceiveTimeouts() {_        return maxReceiveTimeouts != null__    };determine,if,the,max,receive,timeouts,uri,parameter,has,been,set,return,true,if,the,parameter,has,been,set,false,otherwise,deprecated,use,the,idle,timeout,uri,parameter;public,boolean,has,max,receive,timeouts,return,max,receive,timeouts,null
MllpConfiguration -> public void setHl7Headers(boolean hl7Headers);1515779403;Enable/Disable the automatic generation of message headers from the HL7 Message__MLLP Consumers only__@param hl7Headers enabled if true, otherwise disabled;public void setHl7Headers(boolean hl7Headers) {_        this.hl7Headers = hl7Headers__    };enable,disable,the,automatic,generation,of,message,headers,from,the,hl7,message,mllp,consumers,only,param,hl7headers,enabled,if,true,otherwise,disabled;public,void,set,hl7headers,boolean,hl7headers,this,hl7headers,hl7headers
MllpConfiguration -> public void setHl7Headers(boolean hl7Headers);1517355620;Enable/Disable the automatic generation of message headers from the HL7 Message__MLLP Consumers only__@param hl7Headers enabled if true, otherwise disabled;public void setHl7Headers(boolean hl7Headers) {_        this.hl7Headers = hl7Headers__    };enable,disable,the,automatic,generation,of,message,headers,from,the,hl7,message,mllp,consumers,only,param,hl7headers,enabled,if,true,otherwise,disabled;public,void,set,hl7headers,boolean,hl7headers,this,hl7headers,hl7headers
MllpConfiguration -> public void setHl7Headers(boolean hl7Headers);1517429197;Enable/Disable the automatic generation of message headers from the HL7 Message__MLLP Consumers only__@param hl7Headers enabled if true, otherwise disabled;public void setHl7Headers(boolean hl7Headers) {_        this.hl7Headers = hl7Headers__    };enable,disable,the,automatic,generation,of,message,headers,from,the,hl7,message,mllp,consumers,only,param,hl7headers,enabled,if,true,otherwise,disabled;public,void,set,hl7headers,boolean,hl7headers,this,hl7headers,hl7headers
MllpConfiguration -> public void setHl7Headers(boolean hl7Headers);1517599220;Enable/Disable the automatic generation of message headers from the HL7 Message__MLLP Consumers only__@param hl7Headers enabled if true, otherwise disabled;public void setHl7Headers(boolean hl7Headers) {_        this.hl7Headers = hl7Headers__    };enable,disable,the,automatic,generation,of,message,headers,from,the,hl7,message,mllp,consumers,only,param,hl7headers,enabled,if,true,otherwise,disabled;public,void,set,hl7headers,boolean,hl7headers,this,hl7headers,hl7headers
MllpConfiguration -> public void setHl7Headers(boolean hl7Headers);1518733370;Enable/Disable the automatic generation of message headers from the HL7 Message__MLLP Consumers only__@param hl7Headers enabled if true, otherwise disabled;public void setHl7Headers(boolean hl7Headers) {_        this.hl7Headers = hl7Headers__    };enable,disable,the,automatic,generation,of,message,headers,from,the,hl7,message,mllp,consumers,only,param,hl7headers,enabled,if,true,otherwise,disabled;public,void,set,hl7headers,boolean,hl7headers,this,hl7headers,hl7headers
MllpConfiguration -> public void setHl7Headers(boolean hl7Headers);1524063106;Enable/Disable the automatic generation of message headers from the HL7 Message__MLLP Consumers only__@param hl7Headers enabled if true, otherwise disabled;public void setHl7Headers(boolean hl7Headers) {_        this.hl7Headers = hl7Headers__    };enable,disable,the,automatic,generation,of,message,headers,from,the,hl7,message,mllp,consumers,only,param,hl7headers,enabled,if,true,otherwise,disabled;public,void,set,hl7headers,boolean,hl7headers,this,hl7headers,hl7headers
MllpConfiguration -> public void setHl7Headers(boolean hl7Headers);1540108163;Enable/Disable the automatic generation of message headers from the HL7 Message__MLLP Consumers only__@param hl7Headers enabled if true, otherwise disabled;public void setHl7Headers(boolean hl7Headers) {_        this.hl7Headers = hl7Headers__    };enable,disable,the,automatic,generation,of,message,headers,from,the,hl7,message,mllp,consumers,only,param,hl7headers,enabled,if,true,otherwise,disabled;public,void,set,hl7headers,boolean,hl7headers,this,hl7headers,hl7headers
MllpConfiguration -> public void setBindRetryInterval(int bindRetryInterval);1515779403;TCP Server Only - The number of milliseconds to wait between bind attempts;public void setBindRetryInterval(int bindRetryInterval) {_        this.bindRetryInterval = bindRetryInterval__    };tcp,server,only,the,number,of,milliseconds,to,wait,between,bind,attempts;public,void,set,bind,retry,interval,int,bind,retry,interval,this,bind,retry,interval,bind,retry,interval
MllpConfiguration -> public void setBindRetryInterval(int bindRetryInterval);1517355620;TCP Server Only - The number of milliseconds to wait between bind attempts;public void setBindRetryInterval(int bindRetryInterval) {_        this.bindRetryInterval = bindRetryInterval__    };tcp,server,only,the,number,of,milliseconds,to,wait,between,bind,attempts;public,void,set,bind,retry,interval,int,bind,retry,interval,this,bind,retry,interval,bind,retry,interval
MllpConfiguration -> public void setBindRetryInterval(int bindRetryInterval);1517429197;TCP Server Only - The number of milliseconds to wait between bind attempts;public void setBindRetryInterval(int bindRetryInterval) {_        this.bindRetryInterval = bindRetryInterval__    };tcp,server,only,the,number,of,milliseconds,to,wait,between,bind,attempts;public,void,set,bind,retry,interval,int,bind,retry,interval,this,bind,retry,interval,bind,retry,interval
MllpConfiguration -> public void setBindRetryInterval(int bindRetryInterval);1517599220;TCP Server Only - The number of milliseconds to wait between bind attempts;public void setBindRetryInterval(int bindRetryInterval) {_        this.bindRetryInterval = bindRetryInterval__    };tcp,server,only,the,number,of,milliseconds,to,wait,between,bind,attempts;public,void,set,bind,retry,interval,int,bind,retry,interval,this,bind,retry,interval,bind,retry,interval
MllpConfiguration -> public void setBindRetryInterval(int bindRetryInterval);1518733370;TCP Server Only - The number of milliseconds to wait between bind attempts;public void setBindRetryInterval(int bindRetryInterval) {_        this.bindRetryInterval = bindRetryInterval__    };tcp,server,only,the,number,of,milliseconds,to,wait,between,bind,attempts;public,void,set,bind,retry,interval,int,bind,retry,interval,this,bind,retry,interval,bind,retry,interval
MllpConfiguration -> public void setBindRetryInterval(int bindRetryInterval);1524063106;TCP Server Only - The number of milliseconds to wait between bind attempts;public void setBindRetryInterval(int bindRetryInterval) {_        this.bindRetryInterval = bindRetryInterval__    };tcp,server,only,the,number,of,milliseconds,to,wait,between,bind,attempts;public,void,set,bind,retry,interval,int,bind,retry,interval,this,bind,retry,interval,bind,retry,interval
MllpConfiguration -> public void setBindRetryInterval(int bindRetryInterval);1540108163;TCP Server Only - The number of milliseconds to wait between bind attempts;public void setBindRetryInterval(int bindRetryInterval) {_        this.bindRetryInterval = bindRetryInterval__    };tcp,server,only,the,number,of,milliseconds,to,wait,between,bind,attempts;public,void,set,bind,retry,interval,int,bind,retry,interval,this,bind,retry,interval,bind,retry,interval
