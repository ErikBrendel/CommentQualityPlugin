# id;timestamp;commentText;codeText;commentWords;codeWords
MllpTcpClientProducerConnectionErrorTest -> @Test()     public void testConnectionResetBeforeSendingHL7Message() throws Exception;1515779403;The component should reconnect, so the route shouldn't see any errors.__@throws Exception;@Test()_    public void testConnectionResetBeforeSendingHL7Message() throws Exception {_        complete.expectedMessageCount(2)__        connectEx.expectedMessageCount(0)__        writeEx.expectedMessageCount(0)__        receiveEx.expectedMessageCount(0)___        NotifyBuilder oneDone = new NotifyBuilder(context).whenCompleted(1).create()__        NotifyBuilder twoDone = new NotifyBuilder(context).whenCompleted(2).create()___        _        source.sendBody(Hl7TestMessageGenerator.generateMessage())__        assertTrue("Should have completed an exchange", oneDone.matches(5, TimeUnit.SECONDS))___        mllpServer.resetClientConnections()___        source.sendBody(Hl7TestMessageGenerator.generateMessage())__        assertTrue("Should have completed two exchanges", twoDone.matches(5, TimeUnit.SECONDS))___        assertMockEndpointsSatisfied(5, TimeUnit.SECONDS)__    };the,component,should,reconnect,so,the,route,shouldn,t,see,any,errors,throws,exception;test,public,void,test,connection,reset,before,sending,hl7message,throws,exception,complete,expected,message,count,2,connect,ex,expected,message,count,0,write,ex,expected,message,count,0,receive,ex,expected,message,count,0,notify,builder,one,done,new,notify,builder,context,when,completed,1,create,notify,builder,two,done,new,notify,builder,context,when,completed,2,create,source,send,body,hl7test,message,generator,generate,message,assert,true,should,have,completed,an,exchange,one,done,matches,5,time,unit,seconds,mllp,server,reset,client,connections,source,send,body,hl7test,message,generator,generate,message,assert,true,should,have,completed,two,exchanges,two,done,matches,5,time,unit,seconds,assert,mock,endpoints,satisfied,5,time,unit,seconds
MllpTcpClientProducerConnectionErrorTest -> @Test()     public void testConnectionResetBeforeSendingHL7Message() throws Exception;1521820500;The component should reconnect, so the route shouldn't see any errors.__@throws Exception;@Test()_    public void testConnectionResetBeforeSendingHL7Message() throws Exception {_        target.expectedMessageCount(2)__        complete.expectedMessageCount(2)__        connectEx.expectedMessageCount(0)__        writeEx.expectedMessageCount(0)__        acknowledgementEx.expectedMessageCount(0)___        NotifyBuilder oneDone = new NotifyBuilder(context).whenCompleted(1).create()__        NotifyBuilder twoDone = new NotifyBuilder(context).whenCompleted(2).create()___        _        source.sendBody(Hl7TestMessageGenerator.generateMessage())__        assertTrue("Should have completed an exchange", oneDone.matches(5, TimeUnit.SECONDS))___        mllpServer.resetClientConnections()___        source.sendBody(Hl7TestMessageGenerator.generateMessage())__        assertTrue("Should have completed two exchanges", twoDone.matches(5, TimeUnit.SECONDS))___        assertMockEndpointsSatisfied(5, TimeUnit.SECONDS)__    };the,component,should,reconnect,so,the,route,shouldn,t,see,any,errors,throws,exception;test,public,void,test,connection,reset,before,sending,hl7message,throws,exception,target,expected,message,count,2,complete,expected,message,count,2,connect,ex,expected,message,count,0,write,ex,expected,message,count,0,acknowledgement,ex,expected,message,count,0,notify,builder,one,done,new,notify,builder,context,when,completed,1,create,notify,builder,two,done,new,notify,builder,context,when,completed,2,create,source,send,body,hl7test,message,generator,generate,message,assert,true,should,have,completed,an,exchange,one,done,matches,5,time,unit,seconds,mllp,server,reset,client,connections,source,send,body,hl7test,message,generator,generate,message,assert,true,should,have,completed,two,exchanges,two,done,matches,5,time,unit,seconds,assert,mock,endpoints,satisfied,5,time,unit,seconds
MllpTcpClientProducerConnectionErrorTest -> @Test()     public void testConnectionResetBeforeSendingHL7Message() throws Exception;1537290824;The component should reconnect, so the route shouldn't see any errors.__@throws Exception;@Test()_    public void testConnectionResetBeforeSendingHL7Message() throws Exception {_        target.expectedMessageCount(2)__        complete.expectedMessageCount(2)__        connectEx.expectedMessageCount(0)__        writeEx.expectedMessageCount(0)__        acknowledgementEx.expectedMessageCount(0)___        NotifyBuilder oneDone = new NotifyBuilder(context).whenCompleted(1).create()__        NotifyBuilder twoDone = new NotifyBuilder(context).whenCompleted(2).create()___        _        source.sendBody(Hl7TestMessageGenerator.generateMessage())__        assertTrue("Should have completed an exchange", oneDone.matches(5, TimeUnit.SECONDS))___        mllpServer.resetClientConnections()___        source.sendBody(Hl7TestMessageGenerator.generateMessage())__        assertTrue("Should have completed two exchanges", twoDone.matches(5, TimeUnit.SECONDS))___        assertMockEndpointsSatisfied(5, TimeUnit.SECONDS)__    };the,component,should,reconnect,so,the,route,shouldn,t,see,any,errors,throws,exception;test,public,void,test,connection,reset,before,sending,hl7message,throws,exception,target,expected,message,count,2,complete,expected,message,count,2,connect,ex,expected,message,count,0,write,ex,expected,message,count,0,acknowledgement,ex,expected,message,count,0,notify,builder,one,done,new,notify,builder,context,when,completed,1,create,notify,builder,two,done,new,notify,builder,context,when,completed,2,create,source,send,body,hl7test,message,generator,generate,message,assert,true,should,have,completed,an,exchange,one,done,matches,5,time,unit,seconds,mllp,server,reset,client,connections,source,send,body,hl7test,message,generator,generate,message,assert,true,should,have,completed,two,exchanges,two,done,matches,5,time,unit,seconds,assert,mock,endpoints,satisfied,5,time,unit,seconds
MllpTcpClientProducerConnectionErrorTest -> @Test     public void testConnectionClosedBeforeSendingHL7Message() throws Exception;1515779403;The component should reconnect, so the route shouldn't see any errors.__@throws Exception;@Test_    public void testConnectionClosedBeforeSendingHL7Message() throws Exception {_        complete.expectedMessageCount(2)__        connectEx.expectedMessageCount(0)__        writeEx.expectedMessageCount(0)__        receiveEx.expectedMessageCount(0)___        NotifyBuilder oneDone = new NotifyBuilder(context).whenCompleted(1).create()__        NotifyBuilder twoDone = new NotifyBuilder(context).whenCompleted(2).create()___        _        source.sendBody(Hl7TestMessageGenerator.generateMessage())__        assertTrue("Should have completed an exchange", oneDone.matches(5, TimeUnit.SECONDS))___        mllpServer.closeClientConnections()___        source.sendBody(Hl7TestMessageGenerator.generateMessage())___        assertTrue("Should have completed two exchanges", twoDone.matches(5, TimeUnit.SECONDS))___        assertMockEndpointsSatisfied(5, TimeUnit.SECONDS)__    };the,component,should,reconnect,so,the,route,shouldn,t,see,any,errors,throws,exception;test,public,void,test,connection,closed,before,sending,hl7message,throws,exception,complete,expected,message,count,2,connect,ex,expected,message,count,0,write,ex,expected,message,count,0,receive,ex,expected,message,count,0,notify,builder,one,done,new,notify,builder,context,when,completed,1,create,notify,builder,two,done,new,notify,builder,context,when,completed,2,create,source,send,body,hl7test,message,generator,generate,message,assert,true,should,have,completed,an,exchange,one,done,matches,5,time,unit,seconds,mllp,server,close,client,connections,source,send,body,hl7test,message,generator,generate,message,assert,true,should,have,completed,two,exchanges,two,done,matches,5,time,unit,seconds,assert,mock,endpoints,satisfied,5,time,unit,seconds
MllpTcpClientProducerConnectionErrorTest -> @Test     public void testConnectionClosedBeforeSendingHL7Message() throws Exception;1521820500;The component should reconnect, so the route shouldn't see any errors.__@throws Exception;@Test_    public void testConnectionClosedBeforeSendingHL7Message() throws Exception {_        target.expectedMessageCount(2)__        complete.expectedMessageCount(2)__        connectEx.expectedMessageCount(0)__        writeEx.expectedMessageCount(0)__        acknowledgementEx.expectedMessageCount(0)___        NotifyBuilder oneDone = new NotifyBuilder(context).whenCompleted(1).create()__        NotifyBuilder twoDone = new NotifyBuilder(context).whenCompleted(2).create()___        _        source.sendBody(Hl7TestMessageGenerator.generateMessage())__        assertTrue("Should have completed an exchange", oneDone.matches(5, TimeUnit.SECONDS))___        mllpServer.closeClientConnections()___        source.sendBody(Hl7TestMessageGenerator.generateMessage())___        assertTrue("Should have completed two exchanges", twoDone.matches(5, TimeUnit.SECONDS))___        assertMockEndpointsSatisfied(5, TimeUnit.SECONDS)__    };the,component,should,reconnect,so,the,route,shouldn,t,see,any,errors,throws,exception;test,public,void,test,connection,closed,before,sending,hl7message,throws,exception,target,expected,message,count,2,complete,expected,message,count,2,connect,ex,expected,message,count,0,write,ex,expected,message,count,0,acknowledgement,ex,expected,message,count,0,notify,builder,one,done,new,notify,builder,context,when,completed,1,create,notify,builder,two,done,new,notify,builder,context,when,completed,2,create,source,send,body,hl7test,message,generator,generate,message,assert,true,should,have,completed,an,exchange,one,done,matches,5,time,unit,seconds,mllp,server,close,client,connections,source,send,body,hl7test,message,generator,generate,message,assert,true,should,have,completed,two,exchanges,two,done,matches,5,time,unit,seconds,assert,mock,endpoints,satisfied,5,time,unit,seconds
MllpTcpClientProducerConnectionErrorTest -> @Test     public void testConnectionClosedBeforeSendingHL7Message() throws Exception;1537290824;The component should reconnect, so the route shouldn't see any errors.__@throws Exception;@Test_    public void testConnectionClosedBeforeSendingHL7Message() throws Exception {_        target.expectedMessageCount(2)__        complete.expectedMessageCount(2)__        connectEx.expectedMessageCount(0)__        writeEx.expectedMessageCount(0)__        acknowledgementEx.expectedMessageCount(0)___        NotifyBuilder oneDone = new NotifyBuilder(context).whenCompleted(1).create()__        NotifyBuilder twoDone = new NotifyBuilder(context).whenCompleted(2).create()___        _        source.sendBody(Hl7TestMessageGenerator.generateMessage())__        assertTrue("Should have completed an exchange", oneDone.matches(5, TimeUnit.SECONDS))___        mllpServer.closeClientConnections()___        source.sendBody(Hl7TestMessageGenerator.generateMessage())___        assertTrue("Should have completed two exchanges", twoDone.matches(5, TimeUnit.SECONDS))___        assertMockEndpointsSatisfied(5, TimeUnit.SECONDS)__    };the,component,should,reconnect,so,the,route,shouldn,t,see,any,errors,throws,exception;test,public,void,test,connection,closed,before,sending,hl7message,throws,exception,target,expected,message,count,2,complete,expected,message,count,2,connect,ex,expected,message,count,0,write,ex,expected,message,count,0,acknowledgement,ex,expected,message,count,0,notify,builder,one,done,new,notify,builder,context,when,completed,1,create,notify,builder,two,done,new,notify,builder,context,when,completed,2,create,source,send,body,hl7test,message,generator,generate,message,assert,true,should,have,completed,an,exchange,one,done,matches,5,time,unit,seconds,mllp,server,close,client,connections,source,send,body,hl7test,message,generator,generate,message,assert,true,should,have,completed,two,exchanges,two,done,matches,5,time,unit,seconds,assert,mock,endpoints,satisfied,5,time,unit,seconds
