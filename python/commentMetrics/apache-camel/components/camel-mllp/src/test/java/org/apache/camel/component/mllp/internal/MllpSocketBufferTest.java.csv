# id;timestamp;commentText;codeText;commentWords;codeWords
MllpSocketBufferTest -> @Test     public void testHasStartOfBlock() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasStartOfBlock() throws Exception {_        assertFalse("Unexpected initial value", instance.hasStartOfBlock())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertTrue(instance.hasStartOfBlock())___        instance.reset()__        assertFalse(instance.hasStartOfBlock())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertFalse(instance.hasStartOfBlock())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertTrue(instance.hasStartOfBlock())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertTrue(instance.hasStartOfBlock())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,start,of,block,throws,exception,assert,false,unexpected,initial,value,instance,has,start,of,block,instance,write,mllp,protocol,constants,assert,true,instance,has,start,of,block,instance,reset,assert,false,instance,has,start,of,block,instance,write,get,bytes,assert,false,instance,has,start,of,block,instance,write,mllp,protocol,constants,assert,true,instance,has,start,of,block,instance,write,get,bytes,assert,true,instance,has,start,of,block
MllpSocketBufferTest -> @Test     public void testHasStartOfBlock() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasStartOfBlock() throws Exception {_        assertFalse("Unexpected initial value", instance.hasStartOfBlock())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertTrue(instance.hasStartOfBlock())___        instance.reset()__        assertFalse(instance.hasStartOfBlock())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertFalse(instance.hasStartOfBlock())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertTrue(instance.hasStartOfBlock())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertTrue(instance.hasStartOfBlock())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,start,of,block,throws,exception,assert,false,unexpected,initial,value,instance,has,start,of,block,instance,write,mllp,protocol,constants,assert,true,instance,has,start,of,block,instance,reset,assert,false,instance,has,start,of,block,instance,write,get,bytes,assert,false,instance,has,start,of,block,instance,write,mllp,protocol,constants,assert,true,instance,has,start,of,block,instance,write,get,bytes,assert,true,instance,has,start,of,block
MllpSocketBufferTest -> @Test     public void testHasStartOfBlock() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasStartOfBlock() throws Exception {_        assertFalse("Unexpected initial value", instance.hasStartOfBlock())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertTrue(instance.hasStartOfBlock())___        instance.reset()__        assertFalse(instance.hasStartOfBlock())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertFalse(instance.hasStartOfBlock())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertTrue(instance.hasStartOfBlock())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertTrue(instance.hasStartOfBlock())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,start,of,block,throws,exception,assert,false,unexpected,initial,value,instance,has,start,of,block,instance,write,mllp,protocol,constants,assert,true,instance,has,start,of,block,instance,reset,assert,false,instance,has,start,of,block,instance,write,get,bytes,assert,false,instance,has,start,of,block,instance,write,mllp,protocol,constants,assert,true,instance,has,start,of,block,instance,write,get,bytes,assert,true,instance,has,start,of,block
MllpSocketBufferTest -> @Test     public void testHasStartOfBlock() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasStartOfBlock() throws Exception {_        assertFalse("Unexpected initial value", instance.hasStartOfBlock())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertTrue(instance.hasStartOfBlock())___        instance.reset()__        assertFalse(instance.hasStartOfBlock())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertFalse(instance.hasStartOfBlock())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertTrue(instance.hasStartOfBlock())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertTrue(instance.hasStartOfBlock())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,start,of,block,throws,exception,assert,false,unexpected,initial,value,instance,has,start,of,block,instance,write,mllp,protocol,constants,assert,true,instance,has,start,of,block,instance,reset,assert,false,instance,has,start,of,block,instance,write,get,bytes,assert,false,instance,has,start,of,block,instance,write,mllp,protocol,constants,assert,true,instance,has,start,of,block,instance,write,get,bytes,assert,true,instance,has,start,of,block
MllpSocketBufferTest -> @Test     public void testGetTrailingOutOfBandDataWithRequiredEndOfData() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testGetTrailingOutOfBandDataWithRequiredEndOfData() throws Exception {_        endpoint.setRequireEndOfData(true)___        assertNull("Unexpected initial value", instance.getTrailingOutOfBandData())___        _        instance.write(buildTestBytes(true, true, true))__        assertNull(instance.getTrailingOutOfBandData())___        byte[] expected = "BLAH".getBytes()__        instance.write(expected)__        assertArrayEquals(expected, instance.getTrailingOutOfBandData())___        instance.reset()__        assertNull(instance.getTrailingOutOfBandData())___        _        instance.write(buildTestBytes(true, true, false))__        instance.write(expected)__        assertNull(instance.getTrailingOutOfBandData())___        _        instance.reset()__        instance.write(expected)__        assertNull(instance.getTrailingOutOfBandData())___        _        instance.reset()__        instance.write(buildTestBytes(true, false, false))__        assertNull(instance.getTrailingOutOfBandData())___        instance.reset()___        _        instance.write(expected)__        instance.write(buildTestBytes(true, true, true))__        assertNull(instance.getTrailingOutOfBandData())___        _        instance.reset()__        instance.write(buildTestBytes(true, true, true))__        assertNull(instance.getTrailingOutOfBandData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,get,trailing,out,of,band,data,with,required,end,of,data,throws,exception,endpoint,set,require,end,of,data,true,assert,null,unexpected,initial,value,instance,get,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,true,assert,null,instance,get,trailing,out,of,band,data,byte,expected,blah,get,bytes,instance,write,expected,assert,array,equals,expected,instance,get,trailing,out,of,band,data,instance,reset,assert,null,instance,get,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,false,instance,write,expected,assert,null,instance,get,trailing,out,of,band,data,instance,reset,instance,write,expected,assert,null,instance,get,trailing,out,of,band,data,instance,reset,instance,write,build,test,bytes,true,false,false,assert,null,instance,get,trailing,out,of,band,data,instance,reset,instance,write,expected,instance,write,build,test,bytes,true,true,true,assert,null,instance,get,trailing,out,of,band,data,instance,reset,instance,write,build,test,bytes,true,true,true,assert,null,instance,get,trailing,out,of,band,data
MllpSocketBufferTest -> @Test     public void testGetTrailingOutOfBandDataWithRequiredEndOfData() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testGetTrailingOutOfBandDataWithRequiredEndOfData() throws Exception {_        endpoint.setRequireEndOfData(true)___        assertNull("Unexpected initial value", instance.getTrailingOutOfBandData())___        _        instance.write(buildTestBytes(true, true, true))__        assertNull(instance.getTrailingOutOfBandData())___        byte[] expected = "BLAH".getBytes()__        instance.write(expected)__        assertArrayEquals(expected, instance.getTrailingOutOfBandData())___        instance.reset()__        assertNull(instance.getTrailingOutOfBandData())___        _        instance.write(buildTestBytes(true, true, false))__        instance.write(expected)__        assertNull(instance.getTrailingOutOfBandData())___        _        instance.reset()__        instance.write(expected)__        assertNull(instance.getTrailingOutOfBandData())___        _        instance.reset()__        instance.write(buildTestBytes(true, false, false))__        assertNull(instance.getTrailingOutOfBandData())___        instance.reset()___        _        instance.write(expected)__        instance.write(buildTestBytes(true, true, true))__        assertNull(instance.getTrailingOutOfBandData())___        _        instance.reset()__        instance.write(buildTestBytes(true, true, true))__        assertNull(instance.getTrailingOutOfBandData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,get,trailing,out,of,band,data,with,required,end,of,data,throws,exception,endpoint,set,require,end,of,data,true,assert,null,unexpected,initial,value,instance,get,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,true,assert,null,instance,get,trailing,out,of,band,data,byte,expected,blah,get,bytes,instance,write,expected,assert,array,equals,expected,instance,get,trailing,out,of,band,data,instance,reset,assert,null,instance,get,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,false,instance,write,expected,assert,null,instance,get,trailing,out,of,band,data,instance,reset,instance,write,expected,assert,null,instance,get,trailing,out,of,band,data,instance,reset,instance,write,build,test,bytes,true,false,false,assert,null,instance,get,trailing,out,of,band,data,instance,reset,instance,write,expected,instance,write,build,test,bytes,true,true,true,assert,null,instance,get,trailing,out,of,band,data,instance,reset,instance,write,build,test,bytes,true,true,true,assert,null,instance,get,trailing,out,of,band,data
MllpSocketBufferTest -> @Test     public void testGetTrailingOutOfBandDataWithRequiredEndOfData() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testGetTrailingOutOfBandDataWithRequiredEndOfData() throws Exception {_        endpoint.setRequireEndOfData(true)___        assertNull("Unexpected initial value", instance.getTrailingOutOfBandData())___        _        instance.write(buildTestBytes(true, true, true))__        assertNull(instance.getTrailingOutOfBandData())___        byte[] expected = "BLAH".getBytes()__        instance.write(expected)__        assertArrayEquals(expected, instance.getTrailingOutOfBandData())___        instance.reset()__        assertNull(instance.getTrailingOutOfBandData())___        _        instance.write(buildTestBytes(true, true, false))__        instance.write(expected)__        assertNull(instance.getTrailingOutOfBandData())___        _        instance.reset()__        instance.write(expected)__        assertNull(instance.getTrailingOutOfBandData())___        _        instance.reset()__        instance.write(buildTestBytes(true, false, false))__        assertNull(instance.getTrailingOutOfBandData())___        instance.reset()___        _        instance.write(expected)__        instance.write(buildTestBytes(true, true, true))__        assertNull(instance.getTrailingOutOfBandData())___        _        instance.reset()__        instance.write(buildTestBytes(true, true, true))__        assertNull(instance.getTrailingOutOfBandData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,get,trailing,out,of,band,data,with,required,end,of,data,throws,exception,endpoint,set,require,end,of,data,true,assert,null,unexpected,initial,value,instance,get,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,true,assert,null,instance,get,trailing,out,of,band,data,byte,expected,blah,get,bytes,instance,write,expected,assert,array,equals,expected,instance,get,trailing,out,of,band,data,instance,reset,assert,null,instance,get,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,false,instance,write,expected,assert,null,instance,get,trailing,out,of,band,data,instance,reset,instance,write,expected,assert,null,instance,get,trailing,out,of,band,data,instance,reset,instance,write,build,test,bytes,true,false,false,assert,null,instance,get,trailing,out,of,band,data,instance,reset,instance,write,expected,instance,write,build,test,bytes,true,true,true,assert,null,instance,get,trailing,out,of,band,data,instance,reset,instance,write,build,test,bytes,true,true,true,assert,null,instance,get,trailing,out,of,band,data
MllpSocketBufferTest -> @Test     public void testGetTrailingOutOfBandDataWithRequiredEndOfData() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testGetTrailingOutOfBandDataWithRequiredEndOfData() throws Exception {_        endpoint.setRequireEndOfData(true)___        assertNull("Unexpected initial value", instance.getTrailingOutOfBandData())___        _        instance.write(buildTestBytes(true, true, true))__        assertNull(instance.getTrailingOutOfBandData())___        byte[] expected = "BLAH".getBytes()__        instance.write(expected)__        assertArrayEquals(expected, instance.getTrailingOutOfBandData())___        instance.reset()__        assertNull(instance.getTrailingOutOfBandData())___        _        instance.write(buildTestBytes(true, true, false))__        instance.write(expected)__        assertNull(instance.getTrailingOutOfBandData())___        _        instance.reset()__        instance.write(expected)__        assertNull(instance.getTrailingOutOfBandData())___        _        instance.reset()__        instance.write(buildTestBytes(true, false, false))__        assertNull(instance.getTrailingOutOfBandData())___        instance.reset()___        _        instance.write(expected)__        instance.write(buildTestBytes(true, true, true))__        assertNull(instance.getTrailingOutOfBandData())___        _        instance.reset()__        instance.write(buildTestBytes(true, true, true))__        assertNull(instance.getTrailingOutOfBandData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,get,trailing,out,of,band,data,with,required,end,of,data,throws,exception,endpoint,set,require,end,of,data,true,assert,null,unexpected,initial,value,instance,get,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,true,assert,null,instance,get,trailing,out,of,band,data,byte,expected,blah,get,bytes,instance,write,expected,assert,array,equals,expected,instance,get,trailing,out,of,band,data,instance,reset,assert,null,instance,get,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,false,instance,write,expected,assert,null,instance,get,trailing,out,of,band,data,instance,reset,instance,write,expected,assert,null,instance,get,trailing,out,of,band,data,instance,reset,instance,write,build,test,bytes,true,false,false,assert,null,instance,get,trailing,out,of,band,data,instance,reset,instance,write,expected,instance,write,build,test,bytes,true,true,true,assert,null,instance,get,trailing,out,of,band,data,instance,reset,instance,write,build,test,bytes,true,true,true,assert,null,instance,get,trailing,out,of,band,data
MllpSocketBufferTest -> @Test     public void testHasCompleteEnvelopeWithRequiredEndOfData() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasCompleteEnvelopeWithRequiredEndOfData() throws Exception {_        endpoint.setRequireEndOfData(true)__        assertFalse("Unexpected initial value", instance.hasCompleteEnvelope())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertFalse(instance.hasCompleteEnvelope())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertFalse(instance.hasCompleteEnvelope())___        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertFalse(instance.hasCompleteEnvelope())___        instance.write(MllpProtocolConstants.END_OF_DATA)__        assertTrue(instance.hasCompleteEnvelope())___        instance.reset()__        assertFalse(instance.hasCompleteEnvelope())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,complete,envelope,with,required,end,of,data,throws,exception,endpoint,set,require,end,of,data,true,assert,false,unexpected,initial,value,instance,has,complete,envelope,instance,write,mllp,protocol,constants,assert,false,instance,has,complete,envelope,instance,write,get,bytes,assert,false,instance,has,complete,envelope,instance,write,mllp,protocol,constants,assert,false,instance,has,complete,envelope,instance,write,mllp,protocol,constants,assert,true,instance,has,complete,envelope,instance,reset,assert,false,instance,has,complete,envelope
MllpSocketBufferTest -> @Test     public void testHasCompleteEnvelopeWithRequiredEndOfData() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasCompleteEnvelopeWithRequiredEndOfData() throws Exception {_        endpoint.setRequireEndOfData(true)__        assertFalse("Unexpected initial value", instance.hasCompleteEnvelope())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertFalse(instance.hasCompleteEnvelope())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertFalse(instance.hasCompleteEnvelope())___        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertFalse(instance.hasCompleteEnvelope())___        instance.write(MllpProtocolConstants.END_OF_DATA)__        assertTrue(instance.hasCompleteEnvelope())___        instance.reset()__        assertFalse(instance.hasCompleteEnvelope())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,complete,envelope,with,required,end,of,data,throws,exception,endpoint,set,require,end,of,data,true,assert,false,unexpected,initial,value,instance,has,complete,envelope,instance,write,mllp,protocol,constants,assert,false,instance,has,complete,envelope,instance,write,get,bytes,assert,false,instance,has,complete,envelope,instance,write,mllp,protocol,constants,assert,false,instance,has,complete,envelope,instance,write,mllp,protocol,constants,assert,true,instance,has,complete,envelope,instance,reset,assert,false,instance,has,complete,envelope
MllpSocketBufferTest -> @Test     public void testHasCompleteEnvelopeWithRequiredEndOfData() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasCompleteEnvelopeWithRequiredEndOfData() throws Exception {_        endpoint.setRequireEndOfData(true)__        assertFalse("Unexpected initial value", instance.hasCompleteEnvelope())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertFalse(instance.hasCompleteEnvelope())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertFalse(instance.hasCompleteEnvelope())___        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertFalse(instance.hasCompleteEnvelope())___        instance.write(MllpProtocolConstants.END_OF_DATA)__        assertTrue(instance.hasCompleteEnvelope())___        instance.reset()__        assertFalse(instance.hasCompleteEnvelope())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,complete,envelope,with,required,end,of,data,throws,exception,endpoint,set,require,end,of,data,true,assert,false,unexpected,initial,value,instance,has,complete,envelope,instance,write,mllp,protocol,constants,assert,false,instance,has,complete,envelope,instance,write,get,bytes,assert,false,instance,has,complete,envelope,instance,write,mllp,protocol,constants,assert,false,instance,has,complete,envelope,instance,write,mllp,protocol,constants,assert,true,instance,has,complete,envelope,instance,reset,assert,false,instance,has,complete,envelope
MllpSocketBufferTest -> @Test     public void testHasCompleteEnvelopeWithRequiredEndOfData() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasCompleteEnvelopeWithRequiredEndOfData() throws Exception {_        endpoint.setRequireEndOfData(true)__        assertFalse("Unexpected initial value", instance.hasCompleteEnvelope())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertFalse(instance.hasCompleteEnvelope())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertFalse(instance.hasCompleteEnvelope())___        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertFalse(instance.hasCompleteEnvelope())___        instance.write(MllpProtocolConstants.END_OF_DATA)__        assertTrue(instance.hasCompleteEnvelope())___        instance.reset()__        assertFalse(instance.hasCompleteEnvelope())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,complete,envelope,with,required,end,of,data,throws,exception,endpoint,set,require,end,of,data,true,assert,false,unexpected,initial,value,instance,has,complete,envelope,instance,write,mllp,protocol,constants,assert,false,instance,has,complete,envelope,instance,write,get,bytes,assert,false,instance,has,complete,envelope,instance,write,mllp,protocol,constants,assert,false,instance,has,complete,envelope,instance,write,mllp,protocol,constants,assert,true,instance,has,complete,envelope,instance,reset,assert,false,instance,has,complete,envelope
MllpSocketBufferTest -> @Test     public void testGetTrailingOutOfBandDataWithOptionalEndOfData() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testGetTrailingOutOfBandDataWithOptionalEndOfData() throws Exception {_        endpoint.setRequireEndOfData(false)___        assertNull("Unexpected initial value", instance.getTrailingOutOfBandData())___        _        instance.write(buildTestBytes(true, true, true))__        assertNull(instance.getTrailingOutOfBandData())___        byte[] expected = "BLAH".getBytes()__        instance.write(expected)__        assertArrayEquals(expected, instance.getTrailingOutOfBandData())___        instance.reset()__        assertNull(instance.getTrailingOutOfBandData())___        _        instance.write(buildTestBytes(true, true, false))__        instance.write(expected)__        assertArrayEquals(expected, instance.getTrailingOutOfBandData())___        _        instance.reset()__        instance.write(buildTestBytes(true, false, true))__        assertNull(instance.getTrailingOutOfBandData())___        _        instance.reset()__        instance.write(buildTestBytes(true, false, false))__        assertNull(instance.getTrailingOutOfBandData())___        instance.reset()___        _        instance.write(expected)__        instance.write(buildTestBytes(true, true, true))__        assertNull(instance.getTrailingOutOfBandData())___        _        instance.reset()__        instance.write(buildTestBytes(true, true, true))__        assertNull(instance.getTrailingOutOfBandData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,get,trailing,out,of,band,data,with,optional,end,of,data,throws,exception,endpoint,set,require,end,of,data,false,assert,null,unexpected,initial,value,instance,get,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,true,assert,null,instance,get,trailing,out,of,band,data,byte,expected,blah,get,bytes,instance,write,expected,assert,array,equals,expected,instance,get,trailing,out,of,band,data,instance,reset,assert,null,instance,get,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,false,instance,write,expected,assert,array,equals,expected,instance,get,trailing,out,of,band,data,instance,reset,instance,write,build,test,bytes,true,false,true,assert,null,instance,get,trailing,out,of,band,data,instance,reset,instance,write,build,test,bytes,true,false,false,assert,null,instance,get,trailing,out,of,band,data,instance,reset,instance,write,expected,instance,write,build,test,bytes,true,true,true,assert,null,instance,get,trailing,out,of,band,data,instance,reset,instance,write,build,test,bytes,true,true,true,assert,null,instance,get,trailing,out,of,band,data
MllpSocketBufferTest -> @Test     public void testGetTrailingOutOfBandDataWithOptionalEndOfData() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testGetTrailingOutOfBandDataWithOptionalEndOfData() throws Exception {_        endpoint.setRequireEndOfData(false)___        assertNull("Unexpected initial value", instance.getTrailingOutOfBandData())___        _        instance.write(buildTestBytes(true, true, true))__        assertNull(instance.getTrailingOutOfBandData())___        byte[] expected = "BLAH".getBytes()__        instance.write(expected)__        assertArrayEquals(expected, instance.getTrailingOutOfBandData())___        instance.reset()__        assertNull(instance.getTrailingOutOfBandData())___        _        instance.write(buildTestBytes(true, true, false))__        instance.write(expected)__        assertArrayEquals(expected, instance.getTrailingOutOfBandData())___        _        instance.reset()__        instance.write(buildTestBytes(true, false, true))__        assertNull(instance.getTrailingOutOfBandData())___        _        instance.reset()__        instance.write(buildTestBytes(true, false, false))__        assertNull(instance.getTrailingOutOfBandData())___        instance.reset()___        _        instance.write(expected)__        instance.write(buildTestBytes(true, true, true))__        assertNull(instance.getTrailingOutOfBandData())___        _        instance.reset()__        instance.write(buildTestBytes(true, true, true))__        assertNull(instance.getTrailingOutOfBandData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,get,trailing,out,of,band,data,with,optional,end,of,data,throws,exception,endpoint,set,require,end,of,data,false,assert,null,unexpected,initial,value,instance,get,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,true,assert,null,instance,get,trailing,out,of,band,data,byte,expected,blah,get,bytes,instance,write,expected,assert,array,equals,expected,instance,get,trailing,out,of,band,data,instance,reset,assert,null,instance,get,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,false,instance,write,expected,assert,array,equals,expected,instance,get,trailing,out,of,band,data,instance,reset,instance,write,build,test,bytes,true,false,true,assert,null,instance,get,trailing,out,of,band,data,instance,reset,instance,write,build,test,bytes,true,false,false,assert,null,instance,get,trailing,out,of,band,data,instance,reset,instance,write,expected,instance,write,build,test,bytes,true,true,true,assert,null,instance,get,trailing,out,of,band,data,instance,reset,instance,write,build,test,bytes,true,true,true,assert,null,instance,get,trailing,out,of,band,data
MllpSocketBufferTest -> @Test     public void testGetTrailingOutOfBandDataWithOptionalEndOfData() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testGetTrailingOutOfBandDataWithOptionalEndOfData() throws Exception {_        endpoint.setRequireEndOfData(false)___        assertNull("Unexpected initial value", instance.getTrailingOutOfBandData())___        _        instance.write(buildTestBytes(true, true, true))__        assertNull(instance.getTrailingOutOfBandData())___        byte[] expected = "BLAH".getBytes()__        instance.write(expected)__        assertArrayEquals(expected, instance.getTrailingOutOfBandData())___        instance.reset()__        assertNull(instance.getTrailingOutOfBandData())___        _        instance.write(buildTestBytes(true, true, false))__        instance.write(expected)__        assertArrayEquals(expected, instance.getTrailingOutOfBandData())___        _        instance.reset()__        instance.write(buildTestBytes(true, false, true))__        assertNull(instance.getTrailingOutOfBandData())___        _        instance.reset()__        instance.write(buildTestBytes(true, false, false))__        assertNull(instance.getTrailingOutOfBandData())___        instance.reset()___        _        instance.write(expected)__        instance.write(buildTestBytes(true, true, true))__        assertNull(instance.getTrailingOutOfBandData())___        _        instance.reset()__        instance.write(buildTestBytes(true, true, true))__        assertNull(instance.getTrailingOutOfBandData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,get,trailing,out,of,band,data,with,optional,end,of,data,throws,exception,endpoint,set,require,end,of,data,false,assert,null,unexpected,initial,value,instance,get,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,true,assert,null,instance,get,trailing,out,of,band,data,byte,expected,blah,get,bytes,instance,write,expected,assert,array,equals,expected,instance,get,trailing,out,of,band,data,instance,reset,assert,null,instance,get,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,false,instance,write,expected,assert,array,equals,expected,instance,get,trailing,out,of,band,data,instance,reset,instance,write,build,test,bytes,true,false,true,assert,null,instance,get,trailing,out,of,band,data,instance,reset,instance,write,build,test,bytes,true,false,false,assert,null,instance,get,trailing,out,of,band,data,instance,reset,instance,write,expected,instance,write,build,test,bytes,true,true,true,assert,null,instance,get,trailing,out,of,band,data,instance,reset,instance,write,build,test,bytes,true,true,true,assert,null,instance,get,trailing,out,of,band,data
MllpSocketBufferTest -> @Test     public void testGetTrailingOutOfBandDataWithOptionalEndOfData() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testGetTrailingOutOfBandDataWithOptionalEndOfData() throws Exception {_        endpoint.setRequireEndOfData(false)___        assertNull("Unexpected initial value", instance.getTrailingOutOfBandData())___        _        instance.write(buildTestBytes(true, true, true))__        assertNull(instance.getTrailingOutOfBandData())___        byte[] expected = "BLAH".getBytes()__        instance.write(expected)__        assertArrayEquals(expected, instance.getTrailingOutOfBandData())___        instance.reset()__        assertNull(instance.getTrailingOutOfBandData())___        _        instance.write(buildTestBytes(true, true, false))__        instance.write(expected)__        assertArrayEquals(expected, instance.getTrailingOutOfBandData())___        _        instance.reset()__        instance.write(buildTestBytes(true, false, true))__        assertNull(instance.getTrailingOutOfBandData())___        _        instance.reset()__        instance.write(buildTestBytes(true, false, false))__        assertNull(instance.getTrailingOutOfBandData())___        instance.reset()___        _        instance.write(expected)__        instance.write(buildTestBytes(true, true, true))__        assertNull(instance.getTrailingOutOfBandData())___        _        instance.reset()__        instance.write(buildTestBytes(true, true, true))__        assertNull(instance.getTrailingOutOfBandData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,get,trailing,out,of,band,data,with,optional,end,of,data,throws,exception,endpoint,set,require,end,of,data,false,assert,null,unexpected,initial,value,instance,get,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,true,assert,null,instance,get,trailing,out,of,band,data,byte,expected,blah,get,bytes,instance,write,expected,assert,array,equals,expected,instance,get,trailing,out,of,band,data,instance,reset,assert,null,instance,get,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,false,instance,write,expected,assert,array,equals,expected,instance,get,trailing,out,of,band,data,instance,reset,instance,write,build,test,bytes,true,false,true,assert,null,instance,get,trailing,out,of,band,data,instance,reset,instance,write,build,test,bytes,true,false,false,assert,null,instance,get,trailing,out,of,band,data,instance,reset,instance,write,expected,instance,write,build,test,bytes,true,true,true,assert,null,instance,get,trailing,out,of,band,data,instance,reset,instance,write,build,test,bytes,true,true,true,assert,null,instance,get,trailing,out,of,band,data
MllpSocketBufferTest -> @Test     public void testToHl7StringWithInvalidCharset() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testToHl7StringWithInvalidCharset() throws Exception {_        instance.write(buildTestBytes(true, true, true))__        assertEquals(TEST_HL7_MESSAGE, instance.toHl7String("FOO"))__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,to,hl7string,with,invalid,charset,throws,exception,instance,write,build,test,bytes,true,true,true,assert,equals,instance,to,hl7string,foo
MllpSocketBufferTest -> @Test     public void testToHl7StringWithInvalidCharset() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testToHl7StringWithInvalidCharset() throws Exception {_        instance.write(buildTestBytes(true, true, true))__        assertEquals(TEST_HL7_MESSAGE, instance.toHl7String("FOO"))__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,to,hl7string,with,invalid,charset,throws,exception,instance,write,build,test,bytes,true,true,true,assert,equals,instance,to,hl7string,foo
MllpSocketBufferTest -> @Test     public void testToHl7StringWithInvalidCharset() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testToHl7StringWithInvalidCharset() throws Exception {_        instance.write(buildTestBytes(true, true, true))__        assertEquals(TEST_HL7_MESSAGE, instance.toHl7String("FOO"))__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,to,hl7string,with,invalid,charset,throws,exception,instance,write,build,test,bytes,true,true,true,assert,equals,instance,to,hl7string,foo
MllpSocketBufferTest -> @Test     public void testToHl7StringWithInvalidCharset() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testToHl7StringWithInvalidCharset() throws Exception {_        instance.write(buildTestBytes(true, true, true))__        assertEquals(TEST_HL7_MESSAGE, instance.toHl7String("FOO"))__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,to,hl7string,with,invalid,charset,throws,exception,instance,write,build,test,bytes,true,true,true,assert,equals,instance,to,hl7string,foo
MllpSocketBufferTest -> @Test     public void testHasCompleteEnvelopeWithOptionalEndOfData() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasCompleteEnvelopeWithOptionalEndOfData() throws Exception {_        endpoint.setRequireEndOfData(false)__        assertFalse("Unexpected initial value", instance.hasCompleteEnvelope())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertFalse(instance.hasCompleteEnvelope())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertFalse(instance.hasCompleteEnvelope())___        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertTrue(instance.hasCompleteEnvelope())___        instance.write(MllpProtocolConstants.END_OF_DATA)__        assertTrue(instance.hasCompleteEnvelope())___        instance.reset()__        assertFalse(instance.hasCompleteEnvelope())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,complete,envelope,with,optional,end,of,data,throws,exception,endpoint,set,require,end,of,data,false,assert,false,unexpected,initial,value,instance,has,complete,envelope,instance,write,mllp,protocol,constants,assert,false,instance,has,complete,envelope,instance,write,get,bytes,assert,false,instance,has,complete,envelope,instance,write,mllp,protocol,constants,assert,true,instance,has,complete,envelope,instance,write,mllp,protocol,constants,assert,true,instance,has,complete,envelope,instance,reset,assert,false,instance,has,complete,envelope
MllpSocketBufferTest -> @Test     public void testHasCompleteEnvelopeWithOptionalEndOfData() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasCompleteEnvelopeWithOptionalEndOfData() throws Exception {_        endpoint.setRequireEndOfData(false)__        assertFalse("Unexpected initial value", instance.hasCompleteEnvelope())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertFalse(instance.hasCompleteEnvelope())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertFalse(instance.hasCompleteEnvelope())___        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertTrue(instance.hasCompleteEnvelope())___        instance.write(MllpProtocolConstants.END_OF_DATA)__        assertTrue(instance.hasCompleteEnvelope())___        instance.reset()__        assertFalse(instance.hasCompleteEnvelope())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,complete,envelope,with,optional,end,of,data,throws,exception,endpoint,set,require,end,of,data,false,assert,false,unexpected,initial,value,instance,has,complete,envelope,instance,write,mllp,protocol,constants,assert,false,instance,has,complete,envelope,instance,write,get,bytes,assert,false,instance,has,complete,envelope,instance,write,mllp,protocol,constants,assert,true,instance,has,complete,envelope,instance,write,mllp,protocol,constants,assert,true,instance,has,complete,envelope,instance,reset,assert,false,instance,has,complete,envelope
MllpSocketBufferTest -> @Test     public void testHasCompleteEnvelopeWithOptionalEndOfData() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasCompleteEnvelopeWithOptionalEndOfData() throws Exception {_        endpoint.setRequireEndOfData(false)__        assertFalse("Unexpected initial value", instance.hasCompleteEnvelope())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertFalse(instance.hasCompleteEnvelope())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertFalse(instance.hasCompleteEnvelope())___        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertTrue(instance.hasCompleteEnvelope())___        instance.write(MllpProtocolConstants.END_OF_DATA)__        assertTrue(instance.hasCompleteEnvelope())___        instance.reset()__        assertFalse(instance.hasCompleteEnvelope())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,complete,envelope,with,optional,end,of,data,throws,exception,endpoint,set,require,end,of,data,false,assert,false,unexpected,initial,value,instance,has,complete,envelope,instance,write,mllp,protocol,constants,assert,false,instance,has,complete,envelope,instance,write,get,bytes,assert,false,instance,has,complete,envelope,instance,write,mllp,protocol,constants,assert,true,instance,has,complete,envelope,instance,write,mllp,protocol,constants,assert,true,instance,has,complete,envelope,instance,reset,assert,false,instance,has,complete,envelope
MllpSocketBufferTest -> @Test     public void testHasCompleteEnvelopeWithOptionalEndOfData() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasCompleteEnvelopeWithOptionalEndOfData() throws Exception {_        endpoint.setRequireEndOfData(false)__        assertFalse("Unexpected initial value", instance.hasCompleteEnvelope())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertFalse(instance.hasCompleteEnvelope())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertFalse(instance.hasCompleteEnvelope())___        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertTrue(instance.hasCompleteEnvelope())___        instance.write(MllpProtocolConstants.END_OF_DATA)__        assertTrue(instance.hasCompleteEnvelope())___        instance.reset()__        assertFalse(instance.hasCompleteEnvelope())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,complete,envelope,with,optional,end,of,data,throws,exception,endpoint,set,require,end,of,data,false,assert,false,unexpected,initial,value,instance,has,complete,envelope,instance,write,mllp,protocol,constants,assert,false,instance,has,complete,envelope,instance,write,get,bytes,assert,false,instance,has,complete,envelope,instance,write,mllp,protocol,constants,assert,true,instance,has,complete,envelope,instance,write,mllp,protocol,constants,assert,true,instance,has,complete,envelope,instance,reset,assert,false,instance,has,complete,envelope
MllpSocketBufferTest -> @Test     public void testGetStartOfBlockIndex() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testGetStartOfBlockIndex() throws Exception {_        int expected = -1__        assertEquals("Unexpected initial value", expected, instance.getStartOfBlockIndex())___        expected = 0__        instance.startOfBlockIndex = expected__        assertEquals(expected, instance.getStartOfBlockIndex())___        expected = 5__        instance.startOfBlockIndex = expected__        assertEquals(expected, instance.getStartOfBlockIndex())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,get,start,of,block,index,throws,exception,int,expected,1,assert,equals,unexpected,initial,value,expected,instance,get,start,of,block,index,expected,0,instance,start,of,block,index,expected,assert,equals,expected,instance,get,start,of,block,index,expected,5,instance,start,of,block,index,expected,assert,equals,expected,instance,get,start,of,block,index
MllpSocketBufferTest -> @Test     public void testGetStartOfBlockIndex() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testGetStartOfBlockIndex() throws Exception {_        int expected = -1__        assertEquals("Unexpected initial value", expected, instance.getStartOfBlockIndex())___        expected = 0__        instance.startOfBlockIndex = expected__        assertEquals(expected, instance.getStartOfBlockIndex())___        expected = 5__        instance.startOfBlockIndex = expected__        assertEquals(expected, instance.getStartOfBlockIndex())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,get,start,of,block,index,throws,exception,int,expected,1,assert,equals,unexpected,initial,value,expected,instance,get,start,of,block,index,expected,0,instance,start,of,block,index,expected,assert,equals,expected,instance,get,start,of,block,index,expected,5,instance,start,of,block,index,expected,assert,equals,expected,instance,get,start,of,block,index
MllpSocketBufferTest -> @Test     public void testGetStartOfBlockIndex() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testGetStartOfBlockIndex() throws Exception {_        int expected = -1__        assertEquals("Unexpected initial value", expected, instance.getStartOfBlockIndex())___        expected = 0__        instance.startOfBlockIndex = expected__        assertEquals(expected, instance.getStartOfBlockIndex())___        expected = 5__        instance.startOfBlockIndex = expected__        assertEquals(expected, instance.getStartOfBlockIndex())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,get,start,of,block,index,throws,exception,int,expected,1,assert,equals,unexpected,initial,value,expected,instance,get,start,of,block,index,expected,0,instance,start,of,block,index,expected,assert,equals,expected,instance,get,start,of,block,index,expected,5,instance,start,of,block,index,expected,assert,equals,expected,instance,get,start,of,block,index
MllpSocketBufferTest -> @Test     public void testGetStartOfBlockIndex() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testGetStartOfBlockIndex() throws Exception {_        int expected = -1__        assertEquals("Unexpected initial value", expected, instance.getStartOfBlockIndex())___        expected = 0__        instance.startOfBlockIndex = expected__        assertEquals(expected, instance.getStartOfBlockIndex())___        expected = 5__        instance.startOfBlockIndex = expected__        assertEquals(expected, instance.getStartOfBlockIndex())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,get,start,of,block,index,throws,exception,int,expected,1,assert,equals,unexpected,initial,value,expected,instance,get,start,of,block,index,expected,0,instance,start,of,block,index,expected,assert,equals,expected,instance,get,start,of,block,index,expected,5,instance,start,of,block,index,expected,assert,equals,expected,instance,get,start,of,block,index
MllpSocketBufferTest -> @Test     public void testConstructorWithNullEndpoing() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testConstructorWithNullEndpoing() throws Exception {_        try {_            new MllpSocketBuffer(null)__            fail("Constructor should have thrown an exception with a null Endpoint argument")__        } catch (IllegalArgumentException expectedEx) {_            assertEquals("MllpEndpoint cannot be null", expectedEx.getMessage())__        }_    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,constructor,with,null,endpoing,throws,exception,try,new,mllp,socket,buffer,null,fail,constructor,should,have,thrown,an,exception,with,a,null,endpoint,argument,catch,illegal,argument,exception,expected,ex,assert,equals,mllp,endpoint,cannot,be,null,expected,ex,get,message
MllpSocketBufferTest -> @Test     public void testConstructorWithNullEndpoing() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testConstructorWithNullEndpoing() throws Exception {_        try {_            new MllpSocketBuffer(null)__            fail("Constructor should have thrown an exception with a null Endpoint argument")__        } catch (IllegalArgumentException expectedEx) {_            assertEquals("MllpEndpoint cannot be null", expectedEx.getMessage())__        }_    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,constructor,with,null,endpoing,throws,exception,try,new,mllp,socket,buffer,null,fail,constructor,should,have,thrown,an,exception,with,a,null,endpoint,argument,catch,illegal,argument,exception,expected,ex,assert,equals,mllp,endpoint,cannot,be,null,expected,ex,get,message
MllpSocketBufferTest -> @Test     public void testGetLeadingOutOfBandData() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testGetLeadingOutOfBandData() throws Exception {_        assertNull("Unexpected initial value", instance.getLeadingOutOfBandData())___        instance.write(buildTestBytes(true, true, true))__        assertNull(instance.getLeadingOutOfBandData())___        instance.write("BLAH".getBytes())__        assertNull(instance.getLeadingOutOfBandData())___        instance.reset()__        assertNull(instance.getLeadingOutOfBandData())___        byte[] expected = "BLAH".getBytes()__        instance.write(expected)__        instance.write(buildTestBytes(true, true, true))__        assertArrayEquals(expected, instance.getLeadingOutOfBandData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,get,leading,out,of,band,data,throws,exception,assert,null,unexpected,initial,value,instance,get,leading,out,of,band,data,instance,write,build,test,bytes,true,true,true,assert,null,instance,get,leading,out,of,band,data,instance,write,blah,get,bytes,assert,null,instance,get,leading,out,of,band,data,instance,reset,assert,null,instance,get,leading,out,of,band,data,byte,expected,blah,get,bytes,instance,write,expected,instance,write,build,test,bytes,true,true,true,assert,array,equals,expected,instance,get,leading,out,of,band,data
MllpSocketBufferTest -> @Test     public void testGetLeadingOutOfBandData() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testGetLeadingOutOfBandData() throws Exception {_        assertNull("Unexpected initial value", instance.getLeadingOutOfBandData())___        instance.write(buildTestBytes(true, true, true))__        assertNull(instance.getLeadingOutOfBandData())___        instance.write("BLAH".getBytes())__        assertNull(instance.getLeadingOutOfBandData())___        instance.reset()__        assertNull(instance.getLeadingOutOfBandData())___        byte[] expected = "BLAH".getBytes()__        instance.write(expected)__        instance.write(buildTestBytes(true, true, true))__        assertArrayEquals(expected, instance.getLeadingOutOfBandData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,get,leading,out,of,band,data,throws,exception,assert,null,unexpected,initial,value,instance,get,leading,out,of,band,data,instance,write,build,test,bytes,true,true,true,assert,null,instance,get,leading,out,of,band,data,instance,write,blah,get,bytes,assert,null,instance,get,leading,out,of,band,data,instance,reset,assert,null,instance,get,leading,out,of,band,data,byte,expected,blah,get,bytes,instance,write,expected,instance,write,build,test,bytes,true,true,true,assert,array,equals,expected,instance,get,leading,out,of,band,data
MllpSocketBufferTest -> @Test     public void testGetLeadingOutOfBandData() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testGetLeadingOutOfBandData() throws Exception {_        assertNull("Unexpected initial value", instance.getLeadingOutOfBandData())___        instance.write(buildTestBytes(true, true, true))__        assertNull(instance.getLeadingOutOfBandData())___        instance.write("BLAH".getBytes())__        assertNull(instance.getLeadingOutOfBandData())___        instance.reset()__        assertNull(instance.getLeadingOutOfBandData())___        byte[] expected = "BLAH".getBytes()__        instance.write(expected)__        instance.write(buildTestBytes(true, true, true))__        assertArrayEquals(expected, instance.getLeadingOutOfBandData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,get,leading,out,of,band,data,throws,exception,assert,null,unexpected,initial,value,instance,get,leading,out,of,band,data,instance,write,build,test,bytes,true,true,true,assert,null,instance,get,leading,out,of,band,data,instance,write,blah,get,bytes,assert,null,instance,get,leading,out,of,band,data,instance,reset,assert,null,instance,get,leading,out,of,band,data,byte,expected,blah,get,bytes,instance,write,expected,instance,write,build,test,bytes,true,true,true,assert,array,equals,expected,instance,get,leading,out,of,band,data
MllpSocketBufferTest -> @Test     public void testGetLeadingOutOfBandData() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testGetLeadingOutOfBandData() throws Exception {_        assertNull("Unexpected initial value", instance.getLeadingOutOfBandData())___        instance.write(buildTestBytes(true, true, true))__        assertNull(instance.getLeadingOutOfBandData())___        instance.write("BLAH".getBytes())__        assertNull(instance.getLeadingOutOfBandData())___        instance.reset()__        assertNull(instance.getLeadingOutOfBandData())___        byte[] expected = "BLAH".getBytes()__        instance.write(expected)__        instance.write(buildTestBytes(true, true, true))__        assertArrayEquals(expected, instance.getLeadingOutOfBandData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,get,leading,out,of,band,data,throws,exception,assert,null,unexpected,initial,value,instance,get,leading,out,of,band,data,instance,write,build,test,bytes,true,true,true,assert,null,instance,get,leading,out,of,band,data,instance,write,blah,get,bytes,assert,null,instance,get,leading,out,of,band,data,instance,reset,assert,null,instance,get,leading,out,of,band,data,byte,expected,blah,get,bytes,instance,write,expected,instance,write,build,test,bytes,true,true,true,assert,array,equals,expected,instance,get,leading,out,of,band,data
MllpSocketBufferTest -> @Test     public void testHasEndOfBlock() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasEndOfBlock() throws Exception {_        assertFalse("Unexpected initial value", instance.hasEndOfBlock())___        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertTrue(instance.hasEndOfBlock())___        instance.reset()__        assertFalse(instance.hasEndOfBlock())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertFalse(instance.hasEndOfBlock())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertFalse(instance.hasEndOfBlock())___        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertTrue(instance.hasEndOfBlock())___        instance.write(MllpProtocolConstants.END_OF_DATA)__        assertTrue(instance.hasEndOfBlock())___        instance.reset()__        assertFalse(instance.hasEndOfBlock())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertFalse(instance.hasEndOfBlock())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertFalse(instance.hasEndOfBlock())___        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertTrue(instance.hasEndOfBlock())___        instance.write("BLAH".getBytes())__        assertTrue(instance.hasEndOfBlock())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,end,of,block,throws,exception,assert,false,unexpected,initial,value,instance,has,end,of,block,instance,write,mllp,protocol,constants,assert,true,instance,has,end,of,block,instance,reset,assert,false,instance,has,end,of,block,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,block,instance,write,get,bytes,assert,false,instance,has,end,of,block,instance,write,mllp,protocol,constants,assert,true,instance,has,end,of,block,instance,write,mllp,protocol,constants,assert,true,instance,has,end,of,block,instance,reset,assert,false,instance,has,end,of,block,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,block,instance,write,get,bytes,assert,false,instance,has,end,of,block,instance,write,mllp,protocol,constants,assert,true,instance,has,end,of,block,instance,write,blah,get,bytes,assert,true,instance,has,end,of,block
MllpSocketBufferTest -> @Test     public void testHasEndOfBlock() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasEndOfBlock() throws Exception {_        assertFalse("Unexpected initial value", instance.hasEndOfBlock())___        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertFalse("START_OF_BLOCK before an END_OF_BLOCK", instance.hasEndOfBlock())___        instance.reset()__        assertFalse(instance.hasEndOfBlock())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertFalse(instance.hasEndOfBlock())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertFalse(instance.hasEndOfBlock())___        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertTrue(instance.hasEndOfBlock())___        instance.write(MllpProtocolConstants.END_OF_DATA)__        assertTrue(instance.hasEndOfBlock())___        instance.reset()__        assertFalse(instance.hasEndOfBlock())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertFalse(instance.hasEndOfBlock())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertFalse(instance.hasEndOfBlock())___        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertTrue(instance.hasEndOfBlock())___        instance.write("BLAH".getBytes())__        assertTrue(instance.hasEndOfBlock())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,end,of,block,throws,exception,assert,false,unexpected,initial,value,instance,has,end,of,block,instance,write,mllp,protocol,constants,assert,false,before,an,instance,has,end,of,block,instance,reset,assert,false,instance,has,end,of,block,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,block,instance,write,get,bytes,assert,false,instance,has,end,of,block,instance,write,mllp,protocol,constants,assert,true,instance,has,end,of,block,instance,write,mllp,protocol,constants,assert,true,instance,has,end,of,block,instance,reset,assert,false,instance,has,end,of,block,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,block,instance,write,get,bytes,assert,false,instance,has,end,of,block,instance,write,mllp,protocol,constants,assert,true,instance,has,end,of,block,instance,write,blah,get,bytes,assert,true,instance,has,end,of,block
MllpSocketBufferTest -> @Test     public void testHasEndOfBlock() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasEndOfBlock() throws Exception {_        assertFalse("Unexpected initial value", instance.hasEndOfBlock())___        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertFalse("START_OF_BLOCK before an END_OF_BLOCK", instance.hasEndOfBlock())___        instance.reset()__        assertFalse(instance.hasEndOfBlock())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertFalse(instance.hasEndOfBlock())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertFalse(instance.hasEndOfBlock())___        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertTrue(instance.hasEndOfBlock())___        instance.write(MllpProtocolConstants.END_OF_DATA)__        assertTrue(instance.hasEndOfBlock())___        instance.reset()__        assertFalse(instance.hasEndOfBlock())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertFalse(instance.hasEndOfBlock())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertFalse(instance.hasEndOfBlock())___        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertTrue(instance.hasEndOfBlock())___        instance.write("BLAH".getBytes())__        assertTrue(instance.hasEndOfBlock())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,end,of,block,throws,exception,assert,false,unexpected,initial,value,instance,has,end,of,block,instance,write,mllp,protocol,constants,assert,false,before,an,instance,has,end,of,block,instance,reset,assert,false,instance,has,end,of,block,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,block,instance,write,get,bytes,assert,false,instance,has,end,of,block,instance,write,mllp,protocol,constants,assert,true,instance,has,end,of,block,instance,write,mllp,protocol,constants,assert,true,instance,has,end,of,block,instance,reset,assert,false,instance,has,end,of,block,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,block,instance,write,get,bytes,assert,false,instance,has,end,of,block,instance,write,mllp,protocol,constants,assert,true,instance,has,end,of,block,instance,write,blah,get,bytes,assert,true,instance,has,end,of,block
MllpSocketBufferTest -> @Test     public void testHasEndOfBlock() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasEndOfBlock() throws Exception {_        assertFalse("Unexpected initial value", instance.hasEndOfBlock())___        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertFalse("START_OF_BLOCK before an END_OF_BLOCK", instance.hasEndOfBlock())___        instance.reset()__        assertFalse(instance.hasEndOfBlock())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertFalse(instance.hasEndOfBlock())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertFalse(instance.hasEndOfBlock())___        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertTrue(instance.hasEndOfBlock())___        instance.write(MllpProtocolConstants.END_OF_DATA)__        assertTrue(instance.hasEndOfBlock())___        instance.reset()__        assertFalse(instance.hasEndOfBlock())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertFalse(instance.hasEndOfBlock())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertFalse(instance.hasEndOfBlock())___        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertTrue(instance.hasEndOfBlock())___        instance.write("BLAH".getBytes())__        assertTrue(instance.hasEndOfBlock())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,end,of,block,throws,exception,assert,false,unexpected,initial,value,instance,has,end,of,block,instance,write,mllp,protocol,constants,assert,false,before,an,instance,has,end,of,block,instance,reset,assert,false,instance,has,end,of,block,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,block,instance,write,get,bytes,assert,false,instance,has,end,of,block,instance,write,mllp,protocol,constants,assert,true,instance,has,end,of,block,instance,write,mllp,protocol,constants,assert,true,instance,has,end,of,block,instance,reset,assert,false,instance,has,end,of,block,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,block,instance,write,get,bytes,assert,false,instance,has,end,of,block,instance,write,mllp,protocol,constants,assert,true,instance,has,end,of,block,instance,write,blah,get,bytes,assert,true,instance,has,end,of,block
MllpSocketBufferTest -> @Test     public void testHasLeadingOutOfBandData() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasLeadingOutOfBandData() throws Exception {_        assertFalse("Unexpected initial value", instance.hasLeadingOutOfBandData())___        instance.write(buildTestBytes(true, true, true))__        assertFalse(instance.hasLeadingOutOfBandData())___        instance.write("BLAH".getBytes())__        assertFalse(instance.hasLeadingOutOfBandData())___        instance.reset()__        assertFalse(instance.hasLeadingOutOfBandData())___        instance.write("BLAH".getBytes())__        instance.write(buildTestBytes(true, true, true))__        assertTrue(instance.hasLeadingOutOfBandData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,leading,out,of,band,data,throws,exception,assert,false,unexpected,initial,value,instance,has,leading,out,of,band,data,instance,write,build,test,bytes,true,true,true,assert,false,instance,has,leading,out,of,band,data,instance,write,blah,get,bytes,assert,false,instance,has,leading,out,of,band,data,instance,reset,assert,false,instance,has,leading,out,of,band,data,instance,write,blah,get,bytes,instance,write,build,test,bytes,true,true,true,assert,true,instance,has,leading,out,of,band,data
MllpSocketBufferTest -> @Test     public void testHasLeadingOutOfBandData() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasLeadingOutOfBandData() throws Exception {_        assertFalse("Unexpected initial value", instance.hasLeadingOutOfBandData())___        instance.write(buildTestBytes(true, true, true))__        assertFalse(instance.hasLeadingOutOfBandData())___        instance.write("BLAH".getBytes())__        assertFalse(instance.hasLeadingOutOfBandData())___        instance.reset()__        assertFalse(instance.hasLeadingOutOfBandData())___        instance.write("BLAH".getBytes())__        instance.write(buildTestBytes(true, true, true))__        assertTrue(instance.hasLeadingOutOfBandData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,leading,out,of,band,data,throws,exception,assert,false,unexpected,initial,value,instance,has,leading,out,of,band,data,instance,write,build,test,bytes,true,true,true,assert,false,instance,has,leading,out,of,band,data,instance,write,blah,get,bytes,assert,false,instance,has,leading,out,of,band,data,instance,reset,assert,false,instance,has,leading,out,of,band,data,instance,write,blah,get,bytes,instance,write,build,test,bytes,true,true,true,assert,true,instance,has,leading,out,of,band,data
MllpSocketBufferTest -> @Test     public void testHasLeadingOutOfBandData() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasLeadingOutOfBandData() throws Exception {_        assertFalse("Unexpected initial value", instance.hasLeadingOutOfBandData())___        instance.write(buildTestBytes(true, true, true))__        assertFalse(instance.hasLeadingOutOfBandData())___        instance.write("BLAH".getBytes())__        assertFalse(instance.hasLeadingOutOfBandData())___        instance.reset()__        assertFalse(instance.hasLeadingOutOfBandData())___        instance.write("BLAH".getBytes())__        instance.write(buildTestBytes(true, true, true))__        assertTrue(instance.hasLeadingOutOfBandData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,leading,out,of,band,data,throws,exception,assert,false,unexpected,initial,value,instance,has,leading,out,of,band,data,instance,write,build,test,bytes,true,true,true,assert,false,instance,has,leading,out,of,band,data,instance,write,blah,get,bytes,assert,false,instance,has,leading,out,of,band,data,instance,reset,assert,false,instance,has,leading,out,of,band,data,instance,write,blah,get,bytes,instance,write,build,test,bytes,true,true,true,assert,true,instance,has,leading,out,of,band,data
MllpSocketBufferTest -> @Test     public void testHasLeadingOutOfBandData() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasLeadingOutOfBandData() throws Exception {_        assertFalse("Unexpected initial value", instance.hasLeadingOutOfBandData())___        instance.write(buildTestBytes(true, true, true))__        assertFalse(instance.hasLeadingOutOfBandData())___        instance.write("BLAH".getBytes())__        assertFalse(instance.hasLeadingOutOfBandData())___        instance.reset()__        assertFalse(instance.hasLeadingOutOfBandData())___        instance.write("BLAH".getBytes())__        instance.write(buildTestBytes(true, true, true))__        assertTrue(instance.hasLeadingOutOfBandData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,leading,out,of,band,data,throws,exception,assert,false,unexpected,initial,value,instance,has,leading,out,of,band,data,instance,write,build,test,bytes,true,true,true,assert,false,instance,has,leading,out,of,band,data,instance,write,blah,get,bytes,assert,false,instance,has,leading,out,of,band,data,instance,reset,assert,false,instance,has,leading,out,of,band,data,instance,write,blah,get,bytes,instance,write,build,test,bytes,true,true,true,assert,true,instance,has,leading,out,of,band,data
MllpSocketBufferTest -> @Test     public void tesGgetEndOfBlockIndex() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void tesGgetEndOfBlockIndex() throws Exception {_        int expected = -1__        assertEquals("Unexpected initial value", expected, instance.getEndOfBlockIndex())___        expected = 0__        instance.endOfBlockIndex = expected__        assertEquals(expected, instance.getEndOfBlockIndex())___        expected = 5__        instance.endOfBlockIndex = expected__        assertEquals(expected, instance.getEndOfBlockIndex())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,tes,gget,end,of,block,index,throws,exception,int,expected,1,assert,equals,unexpected,initial,value,expected,instance,get,end,of,block,index,expected,0,instance,end,of,block,index,expected,assert,equals,expected,instance,get,end,of,block,index,expected,5,instance,end,of,block,index,expected,assert,equals,expected,instance,get,end,of,block,index
MllpSocketBufferTest -> @Test     public void tesGgetEndOfBlockIndex() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void tesGgetEndOfBlockIndex() throws Exception {_        int expected = -1__        assertEquals("Unexpected initial value", expected, instance.getEndOfBlockIndex())___        expected = 0__        instance.endOfBlockIndex = expected__        assertEquals(expected, instance.getEndOfBlockIndex())___        expected = 5__        instance.endOfBlockIndex = expected__        assertEquals(expected, instance.getEndOfBlockIndex())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,tes,gget,end,of,block,index,throws,exception,int,expected,1,assert,equals,unexpected,initial,value,expected,instance,get,end,of,block,index,expected,0,instance,end,of,block,index,expected,assert,equals,expected,instance,get,end,of,block,index,expected,5,instance,end,of,block,index,expected,assert,equals,expected,instance,get,end,of,block,index
MllpSocketBufferTest -> @Test     public void tesGgetEndOfBlockIndex() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void tesGgetEndOfBlockIndex() throws Exception {_        int expected = -1__        assertEquals("Unexpected initial value", expected, instance.getEndOfBlockIndex())___        expected = 0__        instance.endOfBlockIndex = expected__        assertEquals(expected, instance.getEndOfBlockIndex())___        expected = 5__        instance.endOfBlockIndex = expected__        assertEquals(expected, instance.getEndOfBlockIndex())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,tes,gget,end,of,block,index,throws,exception,int,expected,1,assert,equals,unexpected,initial,value,expected,instance,get,end,of,block,index,expected,0,instance,end,of,block,index,expected,assert,equals,expected,instance,get,end,of,block,index,expected,5,instance,end,of,block,index,expected,assert,equals,expected,instance,get,end,of,block,index
MllpSocketBufferTest -> @Test     public void tesGgetEndOfBlockIndex() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void tesGgetEndOfBlockIndex() throws Exception {_        int expected = -1__        assertEquals("Unexpected initial value", expected, instance.getEndOfBlockIndex())___        expected = 0__        instance.endOfBlockIndex = expected__        assertEquals(expected, instance.getEndOfBlockIndex())___        expected = 5__        instance.endOfBlockIndex = expected__        assertEquals(expected, instance.getEndOfBlockIndex())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,tes,gget,end,of,block,index,throws,exception,int,expected,1,assert,equals,unexpected,initial,value,expected,instance,get,end,of,block,index,expected,0,instance,end,of,block,index,expected,assert,equals,expected,instance,get,end,of,block,index,expected,5,instance,end,of,block,index,expected,assert,equals,expected,instance,get,end,of,block,index
MllpSocketBufferTest -> @Test     public void testToMllpPayloadWithRequiredEndOfData() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testToMllpPayloadWithRequiredEndOfData() throws Exception {_        assertNull(instance.toMllpPayload())___        instance.write(buildTestBytes(true, true, true))__        assertArrayEquals(TEST_HL7_MESSAGE.getBytes(), instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(true, true, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(true, false, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(false, true, true))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(false, true, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(false, false, false))__        assertNull(instance.toMllpPayload())____        instance.reset()__        instance.write(buildTestBytes(null, true, true, true))__        assertArrayEquals(new byte[0], instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, true, true, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, true, false, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, true))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, false, false, false))__        assertNull(instance.toMllpPayload())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,to,mllp,payload,with,required,end,of,data,throws,exception,assert,null,instance,to,mllp,payload,instance,write,build,test,bytes,true,true,true,assert,array,equals,get,bytes,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,true,true,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,true,false,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,false,true,true,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,false,true,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,false,false,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,true,true,true,assert,array,equals,new,byte,0,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,true,true,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,true,false,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,false,true,true,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,false,true,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,false,false,false,assert,null,instance,to,mllp,payload
MllpSocketBufferTest -> @Test     public void testToMllpPayloadWithRequiredEndOfData() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testToMllpPayloadWithRequiredEndOfData() throws Exception {_        assertNull(instance.toMllpPayload())___        instance.write(buildTestBytes(true, true, true))__        assertArrayEquals(TEST_HL7_MESSAGE.getBytes(), instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(true, true, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(true, false, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(false, true, true))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(false, true, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(false, false, false))__        assertNull(instance.toMllpPayload())____        instance.reset()__        instance.write(buildTestBytes(null, true, true, true))__        assertArrayEquals(new byte[0], instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, true, true, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, true, false, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, true))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, false, false, false))__        assertNull(instance.toMllpPayload())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,to,mllp,payload,with,required,end,of,data,throws,exception,assert,null,instance,to,mllp,payload,instance,write,build,test,bytes,true,true,true,assert,array,equals,get,bytes,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,true,true,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,true,false,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,false,true,true,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,false,true,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,false,false,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,true,true,true,assert,array,equals,new,byte,0,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,true,true,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,true,false,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,false,true,true,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,false,true,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,false,false,false,assert,null,instance,to,mllp,payload
MllpSocketBufferTest -> @Test     public void testToMllpPayloadWithRequiredEndOfData() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testToMllpPayloadWithRequiredEndOfData() throws Exception {_        assertNull(instance.toMllpPayload())___        instance.write(buildTestBytes(true, true, true))__        assertArrayEquals(TEST_HL7_MESSAGE.getBytes(), instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(true, true, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(true, false, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(false, true, true))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(false, true, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(false, false, false))__        assertNull(instance.toMllpPayload())____        instance.reset()__        instance.write(buildTestBytes(null, true, true, true))__        assertArrayEquals(new byte[0], instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, true, true, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, true, false, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, true))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, false, false, false))__        assertNull(instance.toMllpPayload())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,to,mllp,payload,with,required,end,of,data,throws,exception,assert,null,instance,to,mllp,payload,instance,write,build,test,bytes,true,true,true,assert,array,equals,get,bytes,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,true,true,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,true,false,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,false,true,true,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,false,true,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,false,false,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,true,true,true,assert,array,equals,new,byte,0,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,true,true,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,true,false,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,false,true,true,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,false,true,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,false,false,false,assert,null,instance,to,mllp,payload
MllpSocketBufferTest -> @Test     public void testToMllpPayloadWithRequiredEndOfData() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testToMllpPayloadWithRequiredEndOfData() throws Exception {_        assertNull(instance.toMllpPayload())___        instance.write(buildTestBytes(true, true, true))__        assertArrayEquals(TEST_HL7_MESSAGE.getBytes(), instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(true, true, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(true, false, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(false, true, true))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(false, true, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(false, false, false))__        assertNull(instance.toMllpPayload())____        instance.reset()__        instance.write(buildTestBytes(null, true, true, true))__        assertArrayEquals(new byte[0], instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, true, true, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, true, false, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, true))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, false, false, false))__        assertNull(instance.toMllpPayload())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,to,mllp,payload,with,required,end,of,data,throws,exception,assert,null,instance,to,mllp,payload,instance,write,build,test,bytes,true,true,true,assert,array,equals,get,bytes,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,true,true,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,true,false,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,false,true,true,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,false,true,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,false,false,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,true,true,true,assert,array,equals,new,byte,0,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,true,true,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,true,false,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,false,true,true,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,false,true,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,false,false,false,assert,null,instance,to,mllp,payload
MllpSocketBufferTest -> @Test     public void testHasEndOfData() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasEndOfData() throws Exception {_        assertFalse("Unexpected initial value", instance.hasEndOfData())___        _        instance.write(MllpProtocolConstants.END_OF_DATA)__        assertFalse(instance.hasEndOfData())___        instance.reset()__        assertFalse(instance.hasEndOfData())___        _        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertFalse(instance.hasEndOfData())___        instance.write(MllpProtocolConstants.END_OF_DATA)__        assertTrue(instance.hasEndOfData())___        instance.reset()__        assertFalse(instance.hasEndOfData())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertFalse(instance.hasEndOfData())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertFalse(instance.hasEndOfData())___        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertFalse(instance.hasEndOfData())___        instance.write(MllpProtocolConstants.END_OF_DATA)__        assertTrue(instance.hasEndOfData())___        instance.reset()__        assertFalse(instance.hasEndOfData())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertFalse(instance.hasEndOfData())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertFalse(instance.hasEndOfData())___        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertFalse(instance.hasEndOfData())___        instance.write("BLAH".getBytes())__        assertFalse(instance.hasEndOfData())___        instance.write(MllpProtocolConstants.END_OF_DATA)__        assertFalse(instance.hasEndOfData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,end,of,data,throws,exception,assert,false,unexpected,initial,value,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,data,instance,reset,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,true,instance,has,end,of,data,instance,reset,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,data,instance,write,get,bytes,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,true,instance,has,end,of,data,instance,reset,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,data,instance,write,get,bytes,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,data,instance,write,blah,get,bytes,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,data
MllpSocketBufferTest -> @Test     public void testHasEndOfData() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasEndOfData() throws Exception {_        assertFalse("Unexpected initial value", instance.hasEndOfData())___        _        instance.write(MllpProtocolConstants.END_OF_DATA)__        assertFalse(instance.hasEndOfData())___        instance.reset()__        assertFalse(instance.hasEndOfData())___        _        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertFalse(instance.hasEndOfData())___        instance.write(MllpProtocolConstants.END_OF_DATA)__        assertFalse("Need a START_OF_BLOCK before the END_OF_DATA",  instance.hasEndOfData())___        instance.reset()__        assertFalse(instance.hasEndOfData())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertFalse(instance.hasEndOfData())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertFalse(instance.hasEndOfData())___        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertFalse(instance.hasEndOfData())___        instance.write(MllpProtocolConstants.END_OF_DATA)__        assertTrue(instance.hasEndOfData())___        instance.reset()__        assertFalse(instance.hasEndOfData())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertFalse(instance.hasEndOfData())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertFalse(instance.hasEndOfData())___        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertFalse(instance.hasEndOfData())___        instance.write("BLAH".getBytes())__        assertFalse(instance.hasEndOfData())___        instance.write(MllpProtocolConstants.END_OF_DATA)__        assertFalse(instance.hasEndOfData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,end,of,data,throws,exception,assert,false,unexpected,initial,value,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,data,instance,reset,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,need,a,before,the,instance,has,end,of,data,instance,reset,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,data,instance,write,get,bytes,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,true,instance,has,end,of,data,instance,reset,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,data,instance,write,get,bytes,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,data,instance,write,blah,get,bytes,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,data
MllpSocketBufferTest -> @Test     public void testHasEndOfData() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasEndOfData() throws Exception {_        assertFalse("Unexpected initial value", instance.hasEndOfData())___        _        instance.write(MllpProtocolConstants.END_OF_DATA)__        assertFalse(instance.hasEndOfData())___        instance.reset()__        assertFalse(instance.hasEndOfData())___        _        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertFalse(instance.hasEndOfData())___        instance.write(MllpProtocolConstants.END_OF_DATA)__        assertFalse("Need a START_OF_BLOCK before the END_OF_DATA",  instance.hasEndOfData())___        instance.reset()__        assertFalse(instance.hasEndOfData())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertFalse(instance.hasEndOfData())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertFalse(instance.hasEndOfData())___        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertFalse(instance.hasEndOfData())___        instance.write(MllpProtocolConstants.END_OF_DATA)__        assertTrue(instance.hasEndOfData())___        instance.reset()__        assertFalse(instance.hasEndOfData())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertFalse(instance.hasEndOfData())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertFalse(instance.hasEndOfData())___        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertFalse(instance.hasEndOfData())___        instance.write("BLAH".getBytes())__        assertFalse(instance.hasEndOfData())___        instance.write(MllpProtocolConstants.END_OF_DATA)__        assertFalse(instance.hasEndOfData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,end,of,data,throws,exception,assert,false,unexpected,initial,value,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,data,instance,reset,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,need,a,before,the,instance,has,end,of,data,instance,reset,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,data,instance,write,get,bytes,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,true,instance,has,end,of,data,instance,reset,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,data,instance,write,get,bytes,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,data,instance,write,blah,get,bytes,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,data
MllpSocketBufferTest -> @Test     public void testHasEndOfData() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasEndOfData() throws Exception {_        assertFalse("Unexpected initial value", instance.hasEndOfData())___        _        instance.write(MllpProtocolConstants.END_OF_DATA)__        assertFalse(instance.hasEndOfData())___        instance.reset()__        assertFalse(instance.hasEndOfData())___        _        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertFalse(instance.hasEndOfData())___        instance.write(MllpProtocolConstants.END_OF_DATA)__        assertFalse("Need a START_OF_BLOCK before the END_OF_DATA",  instance.hasEndOfData())___        instance.reset()__        assertFalse(instance.hasEndOfData())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertFalse(instance.hasEndOfData())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertFalse(instance.hasEndOfData())___        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertFalse(instance.hasEndOfData())___        instance.write(MllpProtocolConstants.END_OF_DATA)__        assertTrue(instance.hasEndOfData())___        instance.reset()__        assertFalse(instance.hasEndOfData())___        instance.write(MllpProtocolConstants.START_OF_BLOCK)__        assertFalse(instance.hasEndOfData())___        instance.write(TEST_HL7_MESSAGE.getBytes())__        assertFalse(instance.hasEndOfData())___        instance.write(MllpProtocolConstants.END_OF_BLOCK)__        assertFalse(instance.hasEndOfData())___        instance.write("BLAH".getBytes())__        assertFalse(instance.hasEndOfData())___        instance.write(MllpProtocolConstants.END_OF_DATA)__        assertFalse(instance.hasEndOfData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,end,of,data,throws,exception,assert,false,unexpected,initial,value,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,data,instance,reset,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,need,a,before,the,instance,has,end,of,data,instance,reset,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,data,instance,write,get,bytes,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,true,instance,has,end,of,data,instance,reset,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,data,instance,write,get,bytes,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,data,instance,write,blah,get,bytes,assert,false,instance,has,end,of,data,instance,write,mllp,protocol,constants,assert,false,instance,has,end,of,data
MllpSocketBufferTest -> @Test     public void testToMllpPayloadWithOptionalEndOfData() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testToMllpPayloadWithOptionalEndOfData() throws Exception {_        endpoint.setRequireEndOfData(false)__        assertNull(instance.toMllpPayload())___        instance.write(buildTestBytes(true, true, true))__        assertArrayEquals(TEST_HL7_MESSAGE.getBytes(), instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(true, true, false))__        assertArrayEquals(TEST_HL7_MESSAGE.getBytes(), instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(true, false, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(false, true, true))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(false, true, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(false, false, false))__        assertNull(instance.toMllpPayload())____        instance.reset()__        instance.write(buildTestBytes(null, true, true, true))__        assertArrayEquals(new byte[0], instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, true, true, false))__        assertArrayEquals(new byte[0], instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, true, false, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, true))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, false, false, false))__        assertNull(instance.toMllpPayload())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,to,mllp,payload,with,optional,end,of,data,throws,exception,endpoint,set,require,end,of,data,false,assert,null,instance,to,mllp,payload,instance,write,build,test,bytes,true,true,true,assert,array,equals,get,bytes,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,true,true,false,assert,array,equals,get,bytes,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,true,false,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,false,true,true,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,false,true,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,false,false,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,true,true,true,assert,array,equals,new,byte,0,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,true,true,false,assert,array,equals,new,byte,0,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,true,false,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,false,true,true,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,false,true,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,false,false,false,assert,null,instance,to,mllp,payload
MllpSocketBufferTest -> @Test     public void testToMllpPayloadWithOptionalEndOfData() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testToMllpPayloadWithOptionalEndOfData() throws Exception {_        endpoint.setRequireEndOfData(false)__        assertNull(instance.toMllpPayload())___        instance.write(buildTestBytes(true, true, true))__        assertArrayEquals(TEST_HL7_MESSAGE.getBytes(), instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(true, true, false))__        assertArrayEquals(TEST_HL7_MESSAGE.getBytes(), instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(true, false, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(false, true, true))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(false, true, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(false, false, false))__        assertNull(instance.toMllpPayload())____        instance.reset()__        instance.write(buildTestBytes(null, true, true, true))__        assertArrayEquals(new byte[0], instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, true, true, false))__        assertArrayEquals(new byte[0], instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, true, false, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, true))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, false, false, false))__        assertNull(instance.toMllpPayload())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,to,mllp,payload,with,optional,end,of,data,throws,exception,endpoint,set,require,end,of,data,false,assert,null,instance,to,mllp,payload,instance,write,build,test,bytes,true,true,true,assert,array,equals,get,bytes,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,true,true,false,assert,array,equals,get,bytes,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,true,false,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,false,true,true,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,false,true,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,false,false,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,true,true,true,assert,array,equals,new,byte,0,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,true,true,false,assert,array,equals,new,byte,0,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,true,false,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,false,true,true,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,false,true,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,false,false,false,assert,null,instance,to,mllp,payload
MllpSocketBufferTest -> @Test     public void testToMllpPayloadWithOptionalEndOfData() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testToMllpPayloadWithOptionalEndOfData() throws Exception {_        endpoint.setRequireEndOfData(false)__        assertNull(instance.toMllpPayload())___        instance.write(buildTestBytes(true, true, true))__        assertArrayEquals(TEST_HL7_MESSAGE.getBytes(), instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(true, true, false))__        assertArrayEquals(TEST_HL7_MESSAGE.getBytes(), instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(true, false, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(false, true, true))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(false, true, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(false, false, false))__        assertNull(instance.toMllpPayload())____        instance.reset()__        instance.write(buildTestBytes(null, true, true, true))__        assertArrayEquals(new byte[0], instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, true, true, false))__        assertArrayEquals(new byte[0], instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, true, false, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, true))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, false, false, false))__        assertNull(instance.toMllpPayload())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,to,mllp,payload,with,optional,end,of,data,throws,exception,endpoint,set,require,end,of,data,false,assert,null,instance,to,mllp,payload,instance,write,build,test,bytes,true,true,true,assert,array,equals,get,bytes,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,true,true,false,assert,array,equals,get,bytes,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,true,false,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,false,true,true,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,false,true,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,false,false,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,true,true,true,assert,array,equals,new,byte,0,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,true,true,false,assert,array,equals,new,byte,0,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,true,false,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,false,true,true,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,false,true,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,false,false,false,assert,null,instance,to,mllp,payload
MllpSocketBufferTest -> @Test     public void testToMllpPayloadWithOptionalEndOfData() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testToMllpPayloadWithOptionalEndOfData() throws Exception {_        endpoint.setRequireEndOfData(false)__        assertNull(instance.toMllpPayload())___        instance.write(buildTestBytes(true, true, true))__        assertArrayEquals(TEST_HL7_MESSAGE.getBytes(), instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(true, true, false))__        assertArrayEquals(TEST_HL7_MESSAGE.getBytes(), instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(true, false, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(false, true, true))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(false, true, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(false, false, false))__        assertNull(instance.toMllpPayload())____        instance.reset()__        instance.write(buildTestBytes(null, true, true, true))__        assertArrayEquals(new byte[0], instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, true, true, false))__        assertArrayEquals(new byte[0], instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, true, false, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, true))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, false))__        assertNull(instance.toMllpPayload())___        instance.reset()__        instance.write(buildTestBytes(null, false, false, false))__        assertNull(instance.toMllpPayload())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,to,mllp,payload,with,optional,end,of,data,throws,exception,endpoint,set,require,end,of,data,false,assert,null,instance,to,mllp,payload,instance,write,build,test,bytes,true,true,true,assert,array,equals,get,bytes,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,true,true,false,assert,array,equals,get,bytes,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,true,false,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,false,true,true,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,false,true,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,false,false,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,true,true,true,assert,array,equals,new,byte,0,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,true,true,false,assert,array,equals,new,byte,0,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,true,false,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,false,true,true,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,false,true,false,assert,null,instance,to,mllp,payload,instance,reset,instance,write,build,test,bytes,null,false,false,false,assert,null,instance,to,mllp,payload
MllpSocketBufferTest -> @Test     public void testHasTrailingOutOfBandDataWithRequiredEndOfData() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasTrailingOutOfBandDataWithRequiredEndOfData() throws Exception {_        endpoint.setRequireEndOfData(true)___        assertFalse("Unexpected initial value", instance.hasTrailingOutOfBandData())___        instance.write(buildTestBytes(true, true, true))__        assertFalse(instance.hasTrailingOutOfBandData())___        instance.write("BLAH".getBytes())__        assertTrue(instance.hasTrailingOutOfBandData())___        instance.reset()__        assertFalse(instance.hasTrailingOutOfBandData())___        instance.write(buildTestBytes(true, true, false))__        assertFalse(instance.hasTrailingOutOfBandData())___        instance.write("BLAH".getBytes())__        assertFalse(instance.hasTrailingOutOfBandData())___        _        instance.reset()__        instance.write("BLAH".getBytes())__        instance.write(buildTestBytes(true, true, true))__        assertFalse(instance.hasTrailingOutOfBandData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,trailing,out,of,band,data,with,required,end,of,data,throws,exception,endpoint,set,require,end,of,data,true,assert,false,unexpected,initial,value,instance,has,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,true,assert,false,instance,has,trailing,out,of,band,data,instance,write,blah,get,bytes,assert,true,instance,has,trailing,out,of,band,data,instance,reset,assert,false,instance,has,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,false,assert,false,instance,has,trailing,out,of,band,data,instance,write,blah,get,bytes,assert,false,instance,has,trailing,out,of,band,data,instance,reset,instance,write,blah,get,bytes,instance,write,build,test,bytes,true,true,true,assert,false,instance,has,trailing,out,of,band,data
MllpSocketBufferTest -> @Test     public void testHasTrailingOutOfBandDataWithRequiredEndOfData() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasTrailingOutOfBandDataWithRequiredEndOfData() throws Exception {_        endpoint.setRequireEndOfData(true)___        assertFalse("Unexpected initial value", instance.hasTrailingOutOfBandData())___        instance.write(buildTestBytes(true, true, true))__        assertFalse(instance.hasTrailingOutOfBandData())___        instance.write("BLAH".getBytes())__        assertTrue(instance.hasTrailingOutOfBandData())___        instance.reset()__        assertFalse(instance.hasTrailingOutOfBandData())___        instance.write(buildTestBytes(true, true, false))__        assertFalse(instance.hasTrailingOutOfBandData())___        instance.write("BLAH".getBytes())__        assertFalse(instance.hasTrailingOutOfBandData())___        _        instance.reset()__        instance.write("BLAH".getBytes())__        instance.write(buildTestBytes(true, true, true))__        assertFalse(instance.hasTrailingOutOfBandData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,trailing,out,of,band,data,with,required,end,of,data,throws,exception,endpoint,set,require,end,of,data,true,assert,false,unexpected,initial,value,instance,has,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,true,assert,false,instance,has,trailing,out,of,band,data,instance,write,blah,get,bytes,assert,true,instance,has,trailing,out,of,band,data,instance,reset,assert,false,instance,has,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,false,assert,false,instance,has,trailing,out,of,band,data,instance,write,blah,get,bytes,assert,false,instance,has,trailing,out,of,band,data,instance,reset,instance,write,blah,get,bytes,instance,write,build,test,bytes,true,true,true,assert,false,instance,has,trailing,out,of,band,data
MllpSocketBufferTest -> @Test     public void testHasTrailingOutOfBandDataWithRequiredEndOfData() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasTrailingOutOfBandDataWithRequiredEndOfData() throws Exception {_        endpoint.setRequireEndOfData(true)___        assertFalse("Unexpected initial value", instance.hasTrailingOutOfBandData())___        instance.write(buildTestBytes(true, true, true))__        assertFalse(instance.hasTrailingOutOfBandData())___        instance.write("BLAH".getBytes())__        assertTrue(instance.hasTrailingOutOfBandData())___        instance.reset()__        assertFalse(instance.hasTrailingOutOfBandData())___        instance.write(buildTestBytes(true, true, false))__        assertFalse(instance.hasTrailingOutOfBandData())___        instance.write("BLAH".getBytes())__        assertFalse(instance.hasTrailingOutOfBandData())___        _        instance.reset()__        instance.write("BLAH".getBytes())__        instance.write(buildTestBytes(true, true, true))__        assertFalse(instance.hasTrailingOutOfBandData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,trailing,out,of,band,data,with,required,end,of,data,throws,exception,endpoint,set,require,end,of,data,true,assert,false,unexpected,initial,value,instance,has,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,true,assert,false,instance,has,trailing,out,of,band,data,instance,write,blah,get,bytes,assert,true,instance,has,trailing,out,of,band,data,instance,reset,assert,false,instance,has,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,false,assert,false,instance,has,trailing,out,of,band,data,instance,write,blah,get,bytes,assert,false,instance,has,trailing,out,of,band,data,instance,reset,instance,write,blah,get,bytes,instance,write,build,test,bytes,true,true,true,assert,false,instance,has,trailing,out,of,band,data
MllpSocketBufferTest -> @Test     public void testHasTrailingOutOfBandDataWithRequiredEndOfData() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasTrailingOutOfBandDataWithRequiredEndOfData() throws Exception {_        endpoint.setRequireEndOfData(true)___        assertFalse("Unexpected initial value", instance.hasTrailingOutOfBandData())___        instance.write(buildTestBytes(true, true, true))__        assertFalse(instance.hasTrailingOutOfBandData())___        instance.write("BLAH".getBytes())__        assertTrue(instance.hasTrailingOutOfBandData())___        instance.reset()__        assertFalse(instance.hasTrailingOutOfBandData())___        instance.write(buildTestBytes(true, true, false))__        assertFalse(instance.hasTrailingOutOfBandData())___        instance.write("BLAH".getBytes())__        assertFalse(instance.hasTrailingOutOfBandData())___        _        instance.reset()__        instance.write("BLAH".getBytes())__        instance.write(buildTestBytes(true, true, true))__        assertFalse(instance.hasTrailingOutOfBandData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,trailing,out,of,band,data,with,required,end,of,data,throws,exception,endpoint,set,require,end,of,data,true,assert,false,unexpected,initial,value,instance,has,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,true,assert,false,instance,has,trailing,out,of,band,data,instance,write,blah,get,bytes,assert,true,instance,has,trailing,out,of,band,data,instance,reset,assert,false,instance,has,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,false,assert,false,instance,has,trailing,out,of,band,data,instance,write,blah,get,bytes,assert,false,instance,has,trailing,out,of,band,data,instance,reset,instance,write,blah,get,bytes,instance,write,build,test,bytes,true,true,true,assert,false,instance,has,trailing,out,of,band,data
MllpSocketBufferTest -> @Test     public void testHasTrailingOutOfBandDataWithOptionalEndOfData() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasTrailingOutOfBandDataWithOptionalEndOfData() throws Exception {_        endpoint.setRequireEndOfData(false)___        assertFalse("Unexpected initial value", instance.hasTrailingOutOfBandData())___        instance.write(buildTestBytes(true, true, true))__        assertFalse(instance.hasTrailingOutOfBandData())___        instance.write("BLAH".getBytes())__        assertTrue(instance.hasTrailingOutOfBandData())___        instance.reset()__        assertFalse(instance.hasTrailingOutOfBandData())___        instance.write(buildTestBytes(true, true, false))__        assertFalse(instance.hasTrailingOutOfBandData())___        instance.write("BLAH".getBytes())__        assertTrue(instance.hasTrailingOutOfBandData())___        _        instance.reset()__        instance.write("BLAH".getBytes())__        instance.write(buildTestBytes(true, true, true))__        assertFalse(instance.hasTrailingOutOfBandData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,trailing,out,of,band,data,with,optional,end,of,data,throws,exception,endpoint,set,require,end,of,data,false,assert,false,unexpected,initial,value,instance,has,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,true,assert,false,instance,has,trailing,out,of,band,data,instance,write,blah,get,bytes,assert,true,instance,has,trailing,out,of,band,data,instance,reset,assert,false,instance,has,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,false,assert,false,instance,has,trailing,out,of,band,data,instance,write,blah,get,bytes,assert,true,instance,has,trailing,out,of,band,data,instance,reset,instance,write,blah,get,bytes,instance,write,build,test,bytes,true,true,true,assert,false,instance,has,trailing,out,of,band,data
MllpSocketBufferTest -> @Test     public void testHasTrailingOutOfBandDataWithOptionalEndOfData() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasTrailingOutOfBandDataWithOptionalEndOfData() throws Exception {_        endpoint.setRequireEndOfData(false)___        assertFalse("Unexpected initial value", instance.hasTrailingOutOfBandData())___        instance.write(buildTestBytes(true, true, true))__        assertFalse(instance.hasTrailingOutOfBandData())___        instance.write("BLAH".getBytes())__        assertTrue(instance.hasTrailingOutOfBandData())___        instance.reset()__        assertFalse(instance.hasTrailingOutOfBandData())___        instance.write(buildTestBytes(true, true, false))__        assertFalse(instance.hasTrailingOutOfBandData())___        instance.write("BLAH".getBytes())__        assertTrue(instance.hasTrailingOutOfBandData())___        _        instance.reset()__        instance.write("BLAH".getBytes())__        instance.write(buildTestBytes(true, true, true))__        assertFalse(instance.hasTrailingOutOfBandData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,trailing,out,of,band,data,with,optional,end,of,data,throws,exception,endpoint,set,require,end,of,data,false,assert,false,unexpected,initial,value,instance,has,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,true,assert,false,instance,has,trailing,out,of,band,data,instance,write,blah,get,bytes,assert,true,instance,has,trailing,out,of,band,data,instance,reset,assert,false,instance,has,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,false,assert,false,instance,has,trailing,out,of,band,data,instance,write,blah,get,bytes,assert,true,instance,has,trailing,out,of,band,data,instance,reset,instance,write,blah,get,bytes,instance,write,build,test,bytes,true,true,true,assert,false,instance,has,trailing,out,of,band,data
MllpSocketBufferTest -> @Test     public void testHasTrailingOutOfBandDataWithOptionalEndOfData() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasTrailingOutOfBandDataWithOptionalEndOfData() throws Exception {_        endpoint.setRequireEndOfData(false)___        assertFalse("Unexpected initial value", instance.hasTrailingOutOfBandData())___        instance.write(buildTestBytes(true, true, true))__        assertFalse(instance.hasTrailingOutOfBandData())___        instance.write("BLAH".getBytes())__        assertTrue(instance.hasTrailingOutOfBandData())___        instance.reset()__        assertFalse(instance.hasTrailingOutOfBandData())___        instance.write(buildTestBytes(true, true, false))__        assertFalse(instance.hasTrailingOutOfBandData())___        instance.write("BLAH".getBytes())__        assertTrue(instance.hasTrailingOutOfBandData())___        _        instance.reset()__        instance.write("BLAH".getBytes())__        instance.write(buildTestBytes(true, true, true))__        assertFalse(instance.hasTrailingOutOfBandData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,trailing,out,of,band,data,with,optional,end,of,data,throws,exception,endpoint,set,require,end,of,data,false,assert,false,unexpected,initial,value,instance,has,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,true,assert,false,instance,has,trailing,out,of,band,data,instance,write,blah,get,bytes,assert,true,instance,has,trailing,out,of,band,data,instance,reset,assert,false,instance,has,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,false,assert,false,instance,has,trailing,out,of,band,data,instance,write,blah,get,bytes,assert,true,instance,has,trailing,out,of,band,data,instance,reset,instance,write,blah,get,bytes,instance,write,build,test,bytes,true,true,true,assert,false,instance,has,trailing,out,of,band,data
MllpSocketBufferTest -> @Test     public void testHasTrailingOutOfBandDataWithOptionalEndOfData() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testHasTrailingOutOfBandDataWithOptionalEndOfData() throws Exception {_        endpoint.setRequireEndOfData(false)___        assertFalse("Unexpected initial value", instance.hasTrailingOutOfBandData())___        instance.write(buildTestBytes(true, true, true))__        assertFalse(instance.hasTrailingOutOfBandData())___        instance.write("BLAH".getBytes())__        assertTrue(instance.hasTrailingOutOfBandData())___        instance.reset()__        assertFalse(instance.hasTrailingOutOfBandData())___        instance.write(buildTestBytes(true, true, false))__        assertFalse(instance.hasTrailingOutOfBandData())___        instance.write("BLAH".getBytes())__        assertTrue(instance.hasTrailingOutOfBandData())___        _        instance.reset()__        instance.write("BLAH".getBytes())__        instance.write(buildTestBytes(true, true, true))__        assertFalse(instance.hasTrailingOutOfBandData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,has,trailing,out,of,band,data,with,optional,end,of,data,throws,exception,endpoint,set,require,end,of,data,false,assert,false,unexpected,initial,value,instance,has,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,true,assert,false,instance,has,trailing,out,of,band,data,instance,write,blah,get,bytes,assert,true,instance,has,trailing,out,of,band,data,instance,reset,assert,false,instance,has,trailing,out,of,band,data,instance,write,build,test,bytes,true,true,false,assert,false,instance,has,trailing,out,of,band,data,instance,write,blah,get,bytes,assert,true,instance,has,trailing,out,of,band,data,instance,reset,instance,write,blah,get,bytes,instance,write,build,test,bytes,true,true,true,assert,false,instance,has,trailing,out,of,band,data
MllpSocketBufferTest -> @Test     public void testToHl7StringWithOptionalEndOfData() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testToHl7StringWithOptionalEndOfData() throws Exception {_        endpoint.setRequireEndOfData(false)__        assertNull(instance.toHl7String())___        instance.write(buildTestBytes(true, true, true))__        assertEquals(TEST_HL7_MESSAGE, instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(true, true, false))__        assertEquals(TEST_HL7_MESSAGE, instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(true, false, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(false, true, true))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(false, true, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(false, false, false))__        assertNull(instance.toHl7String())____        instance.reset()__        instance.write(buildTestBytes(null, true, true, true))__        assertEquals("", instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, true, true, false))__        assertEquals("", instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, true, false, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, true))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, false, false, false))__        assertNull(instance.toHl7String())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,to,hl7string,with,optional,end,of,data,throws,exception,endpoint,set,require,end,of,data,false,assert,null,instance,to,hl7string,instance,write,build,test,bytes,true,true,true,assert,equals,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,true,true,false,assert,equals,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,true,false,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,false,true,true,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,false,true,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,false,false,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,true,true,true,assert,equals,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,true,true,false,assert,equals,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,true,false,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,false,true,true,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,false,true,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,false,false,false,assert,null,instance,to,hl7string
MllpSocketBufferTest -> @Test     public void testToHl7StringWithOptionalEndOfData() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testToHl7StringWithOptionalEndOfData() throws Exception {_        endpoint.setRequireEndOfData(false)__        assertNull(instance.toHl7String())___        instance.write(buildTestBytes(true, true, true))__        assertEquals(TEST_HL7_MESSAGE, instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(true, true, false))__        assertEquals(TEST_HL7_MESSAGE, instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(true, false, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(false, true, true))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(false, true, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(false, false, false))__        assertNull(instance.toHl7String())____        instance.reset()__        instance.write(buildTestBytes(null, true, true, true))__        assertEquals("", instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, true, true, false))__        assertEquals("", instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, true, false, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, true))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, false, false, false))__        assertNull(instance.toHl7String())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,to,hl7string,with,optional,end,of,data,throws,exception,endpoint,set,require,end,of,data,false,assert,null,instance,to,hl7string,instance,write,build,test,bytes,true,true,true,assert,equals,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,true,true,false,assert,equals,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,true,false,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,false,true,true,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,false,true,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,false,false,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,true,true,true,assert,equals,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,true,true,false,assert,equals,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,true,false,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,false,true,true,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,false,true,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,false,false,false,assert,null,instance,to,hl7string
MllpSocketBufferTest -> @Test     public void testToHl7StringWithOptionalEndOfData() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testToHl7StringWithOptionalEndOfData() throws Exception {_        endpoint.setRequireEndOfData(false)__        assertNull(instance.toHl7String())___        instance.write(buildTestBytes(true, true, true))__        assertEquals(TEST_HL7_MESSAGE, instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(true, true, false))__        assertEquals(TEST_HL7_MESSAGE, instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(true, false, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(false, true, true))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(false, true, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(false, false, false))__        assertNull(instance.toHl7String())____        instance.reset()__        instance.write(buildTestBytes(null, true, true, true))__        assertEquals("", instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, true, true, false))__        assertEquals("", instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, true, false, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, true))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, false, false, false))__        assertNull(instance.toHl7String())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,to,hl7string,with,optional,end,of,data,throws,exception,endpoint,set,require,end,of,data,false,assert,null,instance,to,hl7string,instance,write,build,test,bytes,true,true,true,assert,equals,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,true,true,false,assert,equals,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,true,false,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,false,true,true,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,false,true,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,false,false,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,true,true,true,assert,equals,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,true,true,false,assert,equals,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,true,false,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,false,true,true,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,false,true,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,false,false,false,assert,null,instance,to,hl7string
MllpSocketBufferTest -> @Test     public void testToHl7StringWithOptionalEndOfData() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testToHl7StringWithOptionalEndOfData() throws Exception {_        endpoint.setRequireEndOfData(false)__        assertNull(instance.toHl7String())___        instance.write(buildTestBytes(true, true, true))__        assertEquals(TEST_HL7_MESSAGE, instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(true, true, false))__        assertEquals(TEST_HL7_MESSAGE, instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(true, false, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(false, true, true))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(false, true, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(false, false, false))__        assertNull(instance.toHl7String())____        instance.reset()__        instance.write(buildTestBytes(null, true, true, true))__        assertEquals("", instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, true, true, false))__        assertEquals("", instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, true, false, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, true))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, false, false, false))__        assertNull(instance.toHl7String())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,to,hl7string,with,optional,end,of,data,throws,exception,endpoint,set,require,end,of,data,false,assert,null,instance,to,hl7string,instance,write,build,test,bytes,true,true,true,assert,equals,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,true,true,false,assert,equals,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,true,false,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,false,true,true,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,false,true,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,false,false,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,true,true,true,assert,equals,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,true,true,false,assert,equals,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,true,false,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,false,true,true,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,false,true,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,false,false,false,assert,null,instance,to,hl7string
MllpSocketBufferTest -> @Test     public void testhasOutOfBandData() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testhasOutOfBandData() throws Exception {_        assertFalse("Unexpected initial value", instance.hasOutOfBandData())___        instance.write(buildTestBytes(true, true, true))__        assertFalse(instance.hasOutOfBandData())___        instance.write("BLAH".getBytes())__        assertTrue(instance.hasOutOfBandData())___        instance.reset()__        assertFalse(instance.hasOutOfBandData())___        instance.write("BLAH".getBytes())__        instance.write(buildTestBytes(true, true, true))__        assertTrue(instance.hasOutOfBandData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,testhas,out,of,band,data,throws,exception,assert,false,unexpected,initial,value,instance,has,out,of,band,data,instance,write,build,test,bytes,true,true,true,assert,false,instance,has,out,of,band,data,instance,write,blah,get,bytes,assert,true,instance,has,out,of,band,data,instance,reset,assert,false,instance,has,out,of,band,data,instance,write,blah,get,bytes,instance,write,build,test,bytes,true,true,true,assert,true,instance,has,out,of,band,data
MllpSocketBufferTest -> @Test     public void testhasOutOfBandData() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testhasOutOfBandData() throws Exception {_        assertFalse("Unexpected initial value", instance.hasOutOfBandData())___        instance.write(buildTestBytes(true, true, true))__        assertFalse(instance.hasOutOfBandData())___        instance.write("BLAH".getBytes())__        assertTrue(instance.hasOutOfBandData())___        instance.reset()__        assertFalse(instance.hasOutOfBandData())___        instance.write("BLAH".getBytes())__        instance.write(buildTestBytes(true, true, true))__        assertTrue(instance.hasOutOfBandData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,testhas,out,of,band,data,throws,exception,assert,false,unexpected,initial,value,instance,has,out,of,band,data,instance,write,build,test,bytes,true,true,true,assert,false,instance,has,out,of,band,data,instance,write,blah,get,bytes,assert,true,instance,has,out,of,band,data,instance,reset,assert,false,instance,has,out,of,band,data,instance,write,blah,get,bytes,instance,write,build,test,bytes,true,true,true,assert,true,instance,has,out,of,band,data
MllpSocketBufferTest -> @Test     public void testhasOutOfBandData() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testhasOutOfBandData() throws Exception {_        assertFalse("Unexpected initial value", instance.hasOutOfBandData())___        instance.write(buildTestBytes(true, true, true))__        assertFalse(instance.hasOutOfBandData())___        instance.write("BLAH".getBytes())__        assertTrue(instance.hasOutOfBandData())___        instance.reset()__        assertFalse(instance.hasOutOfBandData())___        instance.write("BLAH".getBytes())__        instance.write(buildTestBytes(true, true, true))__        assertTrue(instance.hasOutOfBandData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,testhas,out,of,band,data,throws,exception,assert,false,unexpected,initial,value,instance,has,out,of,band,data,instance,write,build,test,bytes,true,true,true,assert,false,instance,has,out,of,band,data,instance,write,blah,get,bytes,assert,true,instance,has,out,of,band,data,instance,reset,assert,false,instance,has,out,of,band,data,instance,write,blah,get,bytes,instance,write,build,test,bytes,true,true,true,assert,true,instance,has,out,of,band,data
MllpSocketBufferTest -> @Test     public void testhasOutOfBandData() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testhasOutOfBandData() throws Exception {_        assertFalse("Unexpected initial value", instance.hasOutOfBandData())___        instance.write(buildTestBytes(true, true, true))__        assertFalse(instance.hasOutOfBandData())___        instance.write("BLAH".getBytes())__        assertTrue(instance.hasOutOfBandData())___        instance.reset()__        assertFalse(instance.hasOutOfBandData())___        instance.write("BLAH".getBytes())__        instance.write(buildTestBytes(true, true, true))__        assertTrue(instance.hasOutOfBandData())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,testhas,out,of,band,data,throws,exception,assert,false,unexpected,initial,value,instance,has,out,of,band,data,instance,write,build,test,bytes,true,true,true,assert,false,instance,has,out,of,band,data,instance,write,blah,get,bytes,assert,true,instance,has,out,of,band,data,instance,reset,assert,false,instance,has,out,of,band,data,instance,write,blah,get,bytes,instance,write,build,test,bytes,true,true,true,assert,true,instance,has,out,of,band,data
MllpSocketBufferTest -> @Test     public void testToHl7StringWithRequiredEndOfData() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testToHl7StringWithRequiredEndOfData() throws Exception {_        assertNull(instance.toHl7String())___        instance.write(buildTestBytes(true, true, true))__        assertEquals(TEST_HL7_MESSAGE, instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(true, true, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(true, false, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(false, true, true))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(false, true, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(false, false, false))__        assertNull(instance.toHl7String())____        instance.reset()__        instance.write(buildTestBytes(null, true, true, true))__        assertEquals("", instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, true, true, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, true, false, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, true))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, false, false, false))__        assertNull(instance.toHl7String())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,to,hl7string,with,required,end,of,data,throws,exception,assert,null,instance,to,hl7string,instance,write,build,test,bytes,true,true,true,assert,equals,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,true,true,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,true,false,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,false,true,true,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,false,true,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,false,false,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,true,true,true,assert,equals,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,true,true,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,true,false,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,false,true,true,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,false,true,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,false,false,false,assert,null,instance,to,hl7string
MllpSocketBufferTest -> @Test     public void testToHl7StringWithRequiredEndOfData() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testToHl7StringWithRequiredEndOfData() throws Exception {_        assertNull(instance.toHl7String())___        instance.write(buildTestBytes(true, true, true))__        assertEquals(TEST_HL7_MESSAGE, instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(true, true, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(true, false, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(false, true, true))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(false, true, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(false, false, false))__        assertNull(instance.toHl7String())____        instance.reset()__        instance.write(buildTestBytes(null, true, true, true))__        assertEquals("", instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, true, true, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, true, false, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, true))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, false, false, false))__        assertNull(instance.toHl7String())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,to,hl7string,with,required,end,of,data,throws,exception,assert,null,instance,to,hl7string,instance,write,build,test,bytes,true,true,true,assert,equals,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,true,true,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,true,false,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,false,true,true,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,false,true,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,false,false,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,true,true,true,assert,equals,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,true,true,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,true,false,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,false,true,true,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,false,true,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,false,false,false,assert,null,instance,to,hl7string
MllpSocketBufferTest -> @Test     public void testToHl7StringWithRequiredEndOfData() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testToHl7StringWithRequiredEndOfData() throws Exception {_        assertNull(instance.toHl7String())___        instance.write(buildTestBytes(true, true, true))__        assertEquals(TEST_HL7_MESSAGE, instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(true, true, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(true, false, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(false, true, true))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(false, true, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(false, false, false))__        assertNull(instance.toHl7String())____        instance.reset()__        instance.write(buildTestBytes(null, true, true, true))__        assertEquals("", instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, true, true, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, true, false, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, true))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, false, false, false))__        assertNull(instance.toHl7String())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,to,hl7string,with,required,end,of,data,throws,exception,assert,null,instance,to,hl7string,instance,write,build,test,bytes,true,true,true,assert,equals,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,true,true,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,true,false,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,false,true,true,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,false,true,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,false,false,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,true,true,true,assert,equals,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,true,true,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,true,false,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,false,true,true,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,false,true,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,false,false,false,assert,null,instance,to,hl7string
MllpSocketBufferTest -> @Test     public void testToHl7StringWithRequiredEndOfData() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testToHl7StringWithRequiredEndOfData() throws Exception {_        assertNull(instance.toHl7String())___        instance.write(buildTestBytes(true, true, true))__        assertEquals(TEST_HL7_MESSAGE, instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(true, true, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(true, false, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(false, true, true))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(false, true, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(false, false, false))__        assertNull(instance.toHl7String())____        instance.reset()__        instance.write(buildTestBytes(null, true, true, true))__        assertEquals("", instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, true, true, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, true, false, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, true))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, false, true, false))__        assertNull(instance.toHl7String())___        instance.reset()__        instance.write(buildTestBytes(null, false, false, false))__        assertNull(instance.toHl7String())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,to,hl7string,with,required,end,of,data,throws,exception,assert,null,instance,to,hl7string,instance,write,build,test,bytes,true,true,true,assert,equals,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,true,true,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,true,false,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,false,true,true,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,false,true,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,false,false,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,true,true,true,assert,equals,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,true,true,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,true,false,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,false,true,true,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,false,true,false,assert,null,instance,to,hl7string,instance,reset,instance,write,build,test,bytes,null,false,false,false,assert,null,instance,to,hl7string
