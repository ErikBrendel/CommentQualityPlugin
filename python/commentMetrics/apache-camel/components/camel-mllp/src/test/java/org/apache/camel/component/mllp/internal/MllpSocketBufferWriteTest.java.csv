# id;timestamp;commentText;codeText;commentWords;codeWords
MllpSocketBufferWriteTest -> @Test     public void testWriteIntWithEndOfBlock() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteIntWithEndOfBlock() throws Exception {_        instance.write(MllpProtocolConstants.END_OF_BLOCK)___        assertEquals(1, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(0, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,int,with,end,of,block,throws,exception,instance,write,mllp,protocol,constants,assert,equals,1,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,0,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteIntWithEndOfBlock() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteIntWithEndOfBlock() throws Exception {_        instance.write(MllpProtocolConstants.END_OF_BLOCK)___        assertEquals(1, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,int,with,end,of,block,throws,exception,instance,write,mllp,protocol,constants,assert,equals,1,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteIntWithEndOfBlock() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteIntWithEndOfBlock() throws Exception {_        instance.write(MllpProtocolConstants.END_OF_BLOCK)___        assertEquals(1, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,int,with,end,of,block,throws,exception,instance,write,mllp,protocol,constants,assert,equals,1,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteIntWithEndOfBlock() throws Exception;1524063106;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteIntWithEndOfBlock() throws Exception {_        instance.write(MllpProtocolConstants.END_OF_BLOCK)___        assertEquals(1, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,int,with,end,of,block,throws,exception,instance,write,mllp,protocol,constants,assert,equals,1,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteIntWithEndOfBlock() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteIntWithEndOfBlock() throws Exception {_        instance.write(MllpProtocolConstants.END_OF_BLOCK)___        assertEquals(1, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,int,with,end,of,block,throws,exception,instance,write,mllp,protocol,constants,assert,equals,1,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteByteArraySliceWithNullArray() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteByteArraySliceWithNullArray() throws Exception {_        instance.write(null, 0, 5)___        assertEquals(0, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,byte,array,slice,with,null,array,throws,exception,instance,write,null,0,5,assert,equals,0,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteByteArraySliceWithNullArray() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteByteArraySliceWithNullArray() throws Exception {_        instance.write(null, 0, 5)___        assertEquals(0, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,byte,array,slice,with,null,array,throws,exception,instance,write,null,0,5,assert,equals,0,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteByteArraySliceWithNullArray() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteByteArraySliceWithNullArray() throws Exception {_        instance.write(null, 0, 5)___        assertEquals(0, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,byte,array,slice,with,null,array,throws,exception,instance,write,null,0,5,assert,equals,0,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteByteArraySliceWithNullArray() throws Exception;1524063106;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteByteArraySliceWithNullArray() throws Exception {_        instance.write(null, 0, 5)___        assertEquals(0, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,byte,array,slice,with,null,array,throws,exception,instance,write,null,0,5,assert,equals,0,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteByteArraySliceWithNullArray() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteByteArraySliceWithNullArray() throws Exception {_        instance.write(null, 0, 5)___        assertEquals(0, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,byte,array,slice,with,null,array,throws,exception,instance,write,null,0,5,assert,equals,0,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteByteArraySliceWithNegativeOffset() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteByteArraySliceWithNegativeOffset() throws Exception {_        byte[] payload = "BLAH".getBytes()___        try {_            instance.write(payload, -5, payload.length)__            fail("Exception should have been thrown")__        } catch (IndexOutOfBoundsException expectedEx) {_            assertEquals("offset <-5> is less than zero", expectedEx.getMessage())__        }_    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,byte,array,slice,with,negative,offset,throws,exception,byte,payload,blah,get,bytes,try,instance,write,payload,5,payload,length,fail,exception,should,have,been,thrown,catch,index,out,of,bounds,exception,expected,ex,assert,equals,offset,5,is,less,than,zero,expected,ex,get,message
MllpSocketBufferWriteTest -> @Test     public void testWriteByteArraySliceWithNegativeOffset() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteByteArraySliceWithNegativeOffset() throws Exception {_        byte[] payload = "BLAH".getBytes()___        try {_            instance.write(payload, -5, payload.length)__            fail("Exception should have been thrown")__        } catch (IndexOutOfBoundsException expectedEx) {_            assertEquals("offset <-5> is less than zero", expectedEx.getMessage())__        }_    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,byte,array,slice,with,negative,offset,throws,exception,byte,payload,blah,get,bytes,try,instance,write,payload,5,payload,length,fail,exception,should,have,been,thrown,catch,index,out,of,bounds,exception,expected,ex,assert,equals,offset,5,is,less,than,zero,expected,ex,get,message
MllpSocketBufferWriteTest -> @Test     public void testWriteByteArraySliceWithNegativeOffset() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteByteArraySliceWithNegativeOffset() throws Exception {_        byte[] payload = "BLAH".getBytes()___        try {_            instance.write(payload, -5, payload.length)__            fail("Exception should have been thrown")__        } catch (IndexOutOfBoundsException expectedEx) {_            assertEquals("write(byte[4], offset[-5], writeCount[4]) - offset is less than zero", expectedEx.getMessage())__        }_    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,byte,array,slice,with,negative,offset,throws,exception,byte,payload,blah,get,bytes,try,instance,write,payload,5,payload,length,fail,exception,should,have,been,thrown,catch,index,out,of,bounds,exception,expected,ex,assert,equals,write,byte,4,offset,5,write,count,4,offset,is,less,than,zero,expected,ex,get,message
MllpSocketBufferWriteTest -> @Test     public void testWriteByteArraySliceWithNegativeOffset() throws Exception;1524063106;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteByteArraySliceWithNegativeOffset() throws Exception {_        byte[] payload = "BLAH".getBytes()___        try {_            instance.write(payload, -5, payload.length)__            fail("Exception should have been thrown")__        } catch (IndexOutOfBoundsException expectedEx) {_            assertEquals("write(byte[4], offset[-5], writeCount[4]) - offset is less than zero", expectedEx.getMessage())__        }_    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,byte,array,slice,with,negative,offset,throws,exception,byte,payload,blah,get,bytes,try,instance,write,payload,5,payload,length,fail,exception,should,have,been,thrown,catch,index,out,of,bounds,exception,expected,ex,assert,equals,write,byte,4,offset,5,write,count,4,offset,is,less,than,zero,expected,ex,get,message
MllpSocketBufferWriteTest -> @Test     public void testWriteByteArraySliceWithNegativeOffset() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteByteArraySliceWithNegativeOffset() throws Exception {_        byte[] payload = "BLAH".getBytes()___        try {_            instance.write(payload, -5, payload.length)__            fail("Exception should have been thrown")__        } catch (IndexOutOfBoundsException expectedEx) {_            assertEquals("write(byte[4], offset[-5], writeCount[4]) - offset is less than zero", expectedEx.getMessage())__        }_    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,byte,array,slice,with,negative,offset,throws,exception,byte,payload,blah,get,bytes,try,instance,write,payload,5,payload,length,fail,exception,should,have,been,thrown,catch,index,out,of,bounds,exception,expected,ex,assert,equals,write,byte,4,offset,5,write,count,4,offset,is,less,than,zero,expected,ex,get,message
MllpSocketBufferWriteTest -> @Test     public void testWriteByteArraySliceWithOffsetGreaterThanLength() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteByteArraySliceWithOffsetGreaterThanLength() throws Exception {_        byte[] payload = "BLAH".getBytes()___        try {_            instance.write(payload, payload.length + 1, payload.length)__            fail("Exception should have been thrown")__        } catch (IndexOutOfBoundsException expectedEx) {_            assertEquals("offset <5> is greater than write count <4>", expectedEx.getMessage())__        }_    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,byte,array,slice,with,offset,greater,than,length,throws,exception,byte,payload,blah,get,bytes,try,instance,write,payload,payload,length,1,payload,length,fail,exception,should,have,been,thrown,catch,index,out,of,bounds,exception,expected,ex,assert,equals,offset,5,is,greater,than,write,count,4,expected,ex,get,message
MllpSocketBufferWriteTest -> @Test     public void testWriteByteArraySliceWithOffsetGreaterThanLength() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteByteArraySliceWithOffsetGreaterThanLength() throws Exception {_        byte[] payload = "BLAH".getBytes()___        try {_            instance.write(payload, payload.length + 1, payload.length)__            fail("Exception should have been thrown")__        } catch (IndexOutOfBoundsException expectedEx) {_            assertEquals("offset <5> is greater than write count <4>", expectedEx.getMessage())__        }_    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,byte,array,slice,with,offset,greater,than,length,throws,exception,byte,payload,blah,get,bytes,try,instance,write,payload,payload,length,1,payload,length,fail,exception,should,have,been,thrown,catch,index,out,of,bounds,exception,expected,ex,assert,equals,offset,5,is,greater,than,write,count,4,expected,ex,get,message
MllpSocketBufferWriteTest -> @Test     public void testWriteByteArraySliceWithOffsetGreaterThanLength() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteByteArraySliceWithOffsetGreaterThanLength() throws Exception {_        byte[] payload = "BLAH".getBytes()___        try {_            instance.write(payload, payload.length + 1, payload.length)__            fail("Exception should have been thrown")__        } catch (IndexOutOfBoundsException expectedEx) {_            assertEquals("write(byte[4], offset[5], writeCount[4]) - offset is greater than write count", expectedEx.getMessage())__        }_    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,byte,array,slice,with,offset,greater,than,length,throws,exception,byte,payload,blah,get,bytes,try,instance,write,payload,payload,length,1,payload,length,fail,exception,should,have,been,thrown,catch,index,out,of,bounds,exception,expected,ex,assert,equals,write,byte,4,offset,5,write,count,4,offset,is,greater,than,write,count,expected,ex,get,message
MllpSocketBufferWriteTest -> @Test     public void testWriteByteArraySliceWithOffsetGreaterThanLength() throws Exception;1524063106;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteByteArraySliceWithOffsetGreaterThanLength() throws Exception {_        byte[] payload = "BLAH".getBytes()___        try {_            instance.write(payload, payload.length + 1, payload.length)__            fail("Exception should have been thrown")__        } catch (IndexOutOfBoundsException expectedEx) {_            assertEquals("write(byte[4], offset[5], writeCount[4]) - offset is greater than write count", expectedEx.getMessage())__        }_    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,byte,array,slice,with,offset,greater,than,length,throws,exception,byte,payload,blah,get,bytes,try,instance,write,payload,payload,length,1,payload,length,fail,exception,should,have,been,thrown,catch,index,out,of,bounds,exception,expected,ex,assert,equals,write,byte,4,offset,5,write,count,4,offset,is,greater,than,write,count,expected,ex,get,message
MllpSocketBufferWriteTest -> @Test     public void testWriteByteArraySliceWithOffsetGreaterThanLength() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteByteArraySliceWithOffsetGreaterThanLength() throws Exception {_        byte[] payload = "BLAH".getBytes()___        try {_            instance.write(payload, payload.length + 1, payload.length)__            fail("Exception should have been thrown")__        } catch (IndexOutOfBoundsException expectedEx) {_            assertEquals("write(byte[4], offset[5], writeCount[4]) - offset is greater than write count", expectedEx.getMessage())__        }_    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,byte,array,slice,with,offset,greater,than,length,throws,exception,byte,payload,blah,get,bytes,try,instance,write,payload,payload,length,1,payload,length,fail,exception,should,have,been,thrown,catch,index,out,of,bounds,exception,expected,ex,assert,equals,write,byte,4,offset,5,write,count,4,offset,is,greater,than,write,count,expected,ex,get,message
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithoutEnvelope() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithoutEnvelope() throws Exception {_        instance.write("BLAH".getBytes())___        assertEquals(4, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,without,envelope,throws,exception,instance,write,blah,get,bytes,assert,equals,4,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithoutEnvelope() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithoutEnvelope() throws Exception {_        instance.write("BLAH".getBytes())___        assertEquals(4, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,without,envelope,throws,exception,instance,write,blah,get,bytes,assert,equals,4,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithoutEnvelope() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithoutEnvelope() throws Exception {_        instance.write("BLAH".getBytes())___        assertEquals(4, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,without,envelope,throws,exception,instance,write,blah,get,bytes,assert,equals,4,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithoutEnvelope() throws Exception;1524063106;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithoutEnvelope() throws Exception {_        instance.write("BLAH".getBytes())___        assertEquals(4, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,without,envelope,throws,exception,instance,write,blah,get,bytes,assert,equals,4,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithoutEnvelope() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithoutEnvelope() throws Exception {_        instance.write("BLAH".getBytes())___        assertEquals(4, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,without,envelope,throws,exception,instance,write,blah,get,bytes,assert,equals,4,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithWithoutEndOfBlockOrEndOfData() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithWithoutEndOfBlockOrEndOfData() throws Exception {_        instance.write(buildTestBytes("BLAH", true, false, false))___        assertEquals(5, instance.size())__        assertEquals(0, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,without,end,of,block,or,end,of,data,throws,exception,instance,write,build,test,bytes,blah,true,false,false,assert,equals,5,instance,size,assert,equals,0,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithWithoutEndOfBlockOrEndOfData() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithWithoutEndOfBlockOrEndOfData() throws Exception {_        instance.write(buildTestBytes("BLAH", true, false, false))___        assertEquals(5, instance.size())__        assertEquals(0, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,without,end,of,block,or,end,of,data,throws,exception,instance,write,build,test,bytes,blah,true,false,false,assert,equals,5,instance,size,assert,equals,0,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithWithoutEndOfBlockOrEndOfData() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithWithoutEndOfBlockOrEndOfData() throws Exception {_        instance.write(buildTestBytes("BLAH", true, false, false))___        assertEquals(5, instance.size())__        assertEquals(0, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,without,end,of,block,or,end,of,data,throws,exception,instance,write,build,test,bytes,blah,true,false,false,assert,equals,5,instance,size,assert,equals,0,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithWithoutEndOfBlockOrEndOfData() throws Exception;1524063106;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithWithoutEndOfBlockOrEndOfData() throws Exception {_        instance.write(buildTestBytes("BLAH", true, false, false))___        assertEquals(5, instance.size())__        assertEquals(0, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,without,end,of,block,or,end,of,data,throws,exception,instance,write,build,test,bytes,blah,true,false,false,assert,equals,5,instance,size,assert,equals,0,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithWithoutEndOfBlockOrEndOfData() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithWithoutEndOfBlockOrEndOfData() throws Exception {_        instance.write(buildTestBytes("BLAH", true, false, false))___        assertEquals(5, instance.size())__        assertEquals(0, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,without,end,of,block,or,end,of,data,throws,exception,instance,write,build,test,bytes,blah,true,false,false,assert,equals,5,instance,size,assert,equals,0,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteByteArraySliceWithNegativeLength() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteByteArraySliceWithNegativeLength() throws Exception {_        try {_            instance.write("BLAH".getBytes(), 0, -5)__            fail("Exception should have been thrown")__        } catch (IndexOutOfBoundsException expectedEx) {_            assertEquals("write count <-5> is less than zero", expectedEx.getMessage())__        }_    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,byte,array,slice,with,negative,length,throws,exception,try,instance,write,blah,get,bytes,0,5,fail,exception,should,have,been,thrown,catch,index,out,of,bounds,exception,expected,ex,assert,equals,write,count,5,is,less,than,zero,expected,ex,get,message
MllpSocketBufferWriteTest -> @Test     public void testWriteByteArraySliceWithNegativeLength() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteByteArraySliceWithNegativeLength() throws Exception {_        try {_            instance.write("BLAH".getBytes(), 0, -5)__            fail("Exception should have been thrown")__        } catch (IndexOutOfBoundsException expectedEx) {_            assertEquals("write count <-5> is less than zero", expectedEx.getMessage())__        }_    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,byte,array,slice,with,negative,length,throws,exception,try,instance,write,blah,get,bytes,0,5,fail,exception,should,have,been,thrown,catch,index,out,of,bounds,exception,expected,ex,assert,equals,write,count,5,is,less,than,zero,expected,ex,get,message
MllpSocketBufferWriteTest -> @Test     public void testWriteByteArraySliceWithNegativeLength() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteByteArraySliceWithNegativeLength() throws Exception {_        try {_            instance.write("BLAH".getBytes(), 0, -5)__            fail("Exception should have been thrown")__        } catch (IndexOutOfBoundsException expectedEx) {_            assertEquals("write(byte[4], offset[0], writeCount[-5]) - write count is less than zero", expectedEx.getMessage())__        }_    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,byte,array,slice,with,negative,length,throws,exception,try,instance,write,blah,get,bytes,0,5,fail,exception,should,have,been,thrown,catch,index,out,of,bounds,exception,expected,ex,assert,equals,write,byte,4,offset,0,write,count,5,write,count,is,less,than,zero,expected,ex,get,message
MllpSocketBufferWriteTest -> @Test     public void testWriteByteArraySliceWithNegativeLength() throws Exception;1524063106;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteByteArraySliceWithNegativeLength() throws Exception {_        try {_            instance.write("BLAH".getBytes(), 0, -5)__            fail("Exception should have been thrown")__        } catch (IndexOutOfBoundsException expectedEx) {_            assertEquals("write(byte[4], offset[0], writeCount[-5]) - write count is less than zero", expectedEx.getMessage())__        }_    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,byte,array,slice,with,negative,length,throws,exception,try,instance,write,blah,get,bytes,0,5,fail,exception,should,have,been,thrown,catch,index,out,of,bounds,exception,expected,ex,assert,equals,write,byte,4,offset,0,write,count,5,write,count,is,less,than,zero,expected,ex,get,message
MllpSocketBufferWriteTest -> @Test     public void testWriteByteArraySliceWithNegativeLength() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteByteArraySliceWithNegativeLength() throws Exception {_        try {_            instance.write("BLAH".getBytes(), 0, -5)__            fail("Exception should have been thrown")__        } catch (IndexOutOfBoundsException expectedEx) {_            assertEquals("write(byte[4], offset[0], writeCount[-5]) - write count is less than zero", expectedEx.getMessage())__        }_    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,byte,array,slice,with,negative,length,throws,exception,try,instance,write,blah,get,bytes,0,5,fail,exception,should,have,been,thrown,catch,index,out,of,bounds,exception,expected,ex,assert,equals,write,byte,4,offset,0,write,count,5,write,count,is,less,than,zero,expected,ex,get,message
MllpSocketBufferWriteTest -> @Test     public void testWriteIntWithStartOfBlock() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteIntWithStartOfBlock() throws Exception {_        instance.write(MllpProtocolConstants.START_OF_BLOCK)___        assertEquals(1, instance.size())__        assertEquals(0, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,int,with,start,of,block,throws,exception,instance,write,mllp,protocol,constants,assert,equals,1,instance,size,assert,equals,0,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteIntWithStartOfBlock() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteIntWithStartOfBlock() throws Exception {_        instance.write(MllpProtocolConstants.START_OF_BLOCK)___        assertEquals(1, instance.size())__        assertEquals(0, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,int,with,start,of,block,throws,exception,instance,write,mllp,protocol,constants,assert,equals,1,instance,size,assert,equals,0,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteIntWithStartOfBlock() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteIntWithStartOfBlock() throws Exception {_        instance.write(MllpProtocolConstants.START_OF_BLOCK)___        assertEquals(1, instance.size())__        assertEquals(0, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,int,with,start,of,block,throws,exception,instance,write,mllp,protocol,constants,assert,equals,1,instance,size,assert,equals,0,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteIntWithStartOfBlock() throws Exception;1524063106;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteIntWithStartOfBlock() throws Exception {_        instance.write(MllpProtocolConstants.START_OF_BLOCK)___        assertEquals(1, instance.size())__        assertEquals(0, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,int,with,start,of,block,throws,exception,instance,write,mllp,protocol,constants,assert,equals,1,instance,size,assert,equals,0,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteIntWithStartOfBlock() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteIntWithStartOfBlock() throws Exception {_        instance.write(MllpProtocolConstants.START_OF_BLOCK)___        assertEquals(1, instance.size())__        assertEquals(0, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,int,with,start,of,block,throws,exception,instance,write,mllp,protocol,constants,assert,equals,1,instance,size,assert,equals,0,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteByteArraySliceWithLengthGreaterThanAvailable() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteByteArraySliceWithLengthGreaterThanAvailable() throws Exception {_        byte[] payload = "BLAH".getBytes()___        try {_            instance.write(payload, 0, payload.length + 1)__            fail("Exception should have been thrown")__        } catch (IndexOutOfBoundsException expectedEx) {_            assertEquals("write count <5> is greater than length of the source byte[] <4>", expectedEx.getMessage())__        }__        try {_            instance.write("BLAH".getBytes(), 1, payload.length)__            fail("Exception should have been thrown")__        } catch (IndexOutOfBoundsException expectedEx) {_            assertEquals("offset <1> plus write count <4> is <5> is greater than length <4> of the source byte[]", expectedEx.getMessage())__        }__        try {_            instance.write("BLAH".getBytes(), 2, payload.length - 1)__            fail("Exception should have been thrown")__        } catch (IndexOutOfBoundsException expectedEx) {_            assertEquals("offset <2> plus write count <3> is <5> is greater than length <4> of the source byte[]", expectedEx.getMessage())__        }_    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,byte,array,slice,with,length,greater,than,available,throws,exception,byte,payload,blah,get,bytes,try,instance,write,payload,0,payload,length,1,fail,exception,should,have,been,thrown,catch,index,out,of,bounds,exception,expected,ex,assert,equals,write,count,5,is,greater,than,length,of,the,source,byte,4,expected,ex,get,message,try,instance,write,blah,get,bytes,1,payload,length,fail,exception,should,have,been,thrown,catch,index,out,of,bounds,exception,expected,ex,assert,equals,offset,1,plus,write,count,4,is,5,is,greater,than,length,4,of,the,source,byte,expected,ex,get,message,try,instance,write,blah,get,bytes,2,payload,length,1,fail,exception,should,have,been,thrown,catch,index,out,of,bounds,exception,expected,ex,assert,equals,offset,2,plus,write,count,3,is,5,is,greater,than,length,4,of,the,source,byte,expected,ex,get,message
MllpSocketBufferWriteTest -> @Test     public void testWriteByteArraySliceWithLengthGreaterThanAvailable() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteByteArraySliceWithLengthGreaterThanAvailable() throws Exception {_        byte[] payload = "BLAH".getBytes()___        try {_            instance.write(payload, 0, payload.length + 1)__            fail("Exception should have been thrown")__        } catch (IndexOutOfBoundsException expectedEx) {_            assertEquals("write count <5> is greater than length of the source byte[] <4>", expectedEx.getMessage())__        }__        try {_            instance.write("BLAH".getBytes(), 1, payload.length)__            fail("Exception should have been thrown")__        } catch (IndexOutOfBoundsException expectedEx) {_            assertEquals("offset <1> plus write count <4> is <5> is greater than length <4> of the source byte[]", expectedEx.getMessage())__        }__        try {_            instance.write("BLAH".getBytes(), 2, payload.length - 1)__            fail("Exception should have been thrown")__        } catch (IndexOutOfBoundsException expectedEx) {_            assertEquals("offset <2> plus write count <3> is <5> is greater than length <4> of the source byte[]", expectedEx.getMessage())__        }_    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,byte,array,slice,with,length,greater,than,available,throws,exception,byte,payload,blah,get,bytes,try,instance,write,payload,0,payload,length,1,fail,exception,should,have,been,thrown,catch,index,out,of,bounds,exception,expected,ex,assert,equals,write,count,5,is,greater,than,length,of,the,source,byte,4,expected,ex,get,message,try,instance,write,blah,get,bytes,1,payload,length,fail,exception,should,have,been,thrown,catch,index,out,of,bounds,exception,expected,ex,assert,equals,offset,1,plus,write,count,4,is,5,is,greater,than,length,4,of,the,source,byte,expected,ex,get,message,try,instance,write,blah,get,bytes,2,payload,length,1,fail,exception,should,have,been,thrown,catch,index,out,of,bounds,exception,expected,ex,assert,equals,offset,2,plus,write,count,3,is,5,is,greater,than,length,4,of,the,source,byte,expected,ex,get,message
MllpSocketBufferWriteTest -> @Test     public void testWriteByteArraySliceWithLengthGreaterThanAvailable() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteByteArraySliceWithLengthGreaterThanAvailable() throws Exception {_        byte[] payload = "BLAH".getBytes()___        try {_            instance.write(payload, 0, payload.length + 1)__            fail("Exception should have been thrown")__        } catch (IndexOutOfBoundsException expectedEx) {_            assertEquals("write(byte[4], offset[0], writeCount[5]) - write count is greater than length of the source byte[]", expectedEx.getMessage())__        }__        try {_            instance.write("BLAH".getBytes(), 1, payload.length)__            fail("Exception should have been thrown")__        } catch (IndexOutOfBoundsException expectedEx) {_            assertEquals("write(byte[4], offset[1], writeCount[4]) - offset plus write count <5> is greater than length of the source byte[]", expectedEx.getMessage())__        }__        try {_            instance.write("BLAH".getBytes(), 2, payload.length - 1)__            fail("Exception should have been thrown")__        } catch (IndexOutOfBoundsException expectedEx) {_            assertEquals("write(byte[4], offset[2], writeCount[3]) - offset plus write count <5> is greater than length of the source byte[]", expectedEx.getMessage())__        }_    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,byte,array,slice,with,length,greater,than,available,throws,exception,byte,payload,blah,get,bytes,try,instance,write,payload,0,payload,length,1,fail,exception,should,have,been,thrown,catch,index,out,of,bounds,exception,expected,ex,assert,equals,write,byte,4,offset,0,write,count,5,write,count,is,greater,than,length,of,the,source,byte,expected,ex,get,message,try,instance,write,blah,get,bytes,1,payload,length,fail,exception,should,have,been,thrown,catch,index,out,of,bounds,exception,expected,ex,assert,equals,write,byte,4,offset,1,write,count,4,offset,plus,write,count,5,is,greater,than,length,of,the,source,byte,expected,ex,get,message,try,instance,write,blah,get,bytes,2,payload,length,1,fail,exception,should,have,been,thrown,catch,index,out,of,bounds,exception,expected,ex,assert,equals,write,byte,4,offset,2,write,count,3,offset,plus,write,count,5,is,greater,than,length,of,the,source,byte,expected,ex,get,message
MllpSocketBufferWriteTest -> @Test     public void testWriteByteArraySliceWithLengthGreaterThanAvailable() throws Exception;1524063106;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteByteArraySliceWithLengthGreaterThanAvailable() throws Exception {_        byte[] payload = "BLAH".getBytes()___        try {_            instance.write(payload, 0, payload.length + 1)__            fail("Exception should have been thrown")__        } catch (IndexOutOfBoundsException expectedEx) {_            assertEquals("write(byte[4], offset[0], writeCount[5]) - write count is greater than length of the source byte[]", expectedEx.getMessage())__        }__        try {_            instance.write("BLAH".getBytes(), 1, payload.length)__            fail("Exception should have been thrown")__        } catch (IndexOutOfBoundsException expectedEx) {_            assertEquals("write(byte[4], offset[1], writeCount[4]) - offset plus write count <5> is greater than length of the source byte[]", expectedEx.getMessage())__        }__        try {_            instance.write("BLAH".getBytes(), 2, payload.length - 1)__            fail("Exception should have been thrown")__        } catch (IndexOutOfBoundsException expectedEx) {_            assertEquals("write(byte[4], offset[2], writeCount[3]) - offset plus write count <5> is greater than length of the source byte[]", expectedEx.getMessage())__        }_    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,byte,array,slice,with,length,greater,than,available,throws,exception,byte,payload,blah,get,bytes,try,instance,write,payload,0,payload,length,1,fail,exception,should,have,been,thrown,catch,index,out,of,bounds,exception,expected,ex,assert,equals,write,byte,4,offset,0,write,count,5,write,count,is,greater,than,length,of,the,source,byte,expected,ex,get,message,try,instance,write,blah,get,bytes,1,payload,length,fail,exception,should,have,been,thrown,catch,index,out,of,bounds,exception,expected,ex,assert,equals,write,byte,4,offset,1,write,count,4,offset,plus,write,count,5,is,greater,than,length,of,the,source,byte,expected,ex,get,message,try,instance,write,blah,get,bytes,2,payload,length,1,fail,exception,should,have,been,thrown,catch,index,out,of,bounds,exception,expected,ex,assert,equals,write,byte,4,offset,2,write,count,3,offset,plus,write,count,5,is,greater,than,length,of,the,source,byte,expected,ex,get,message
MllpSocketBufferWriteTest -> @Test     public void testWriteByteArraySliceWithLengthGreaterThanAvailable() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteByteArraySliceWithLengthGreaterThanAvailable() throws Exception {_        byte[] payload = "BLAH".getBytes()___        try {_            instance.write(payload, 0, payload.length + 1)__            fail("Exception should have been thrown")__        } catch (IndexOutOfBoundsException expectedEx) {_            assertEquals("write(byte[4], offset[0], writeCount[5]) - write count is greater than length of the source byte[]", expectedEx.getMessage())__        }__        try {_            instance.write("BLAH".getBytes(), 1, payload.length)__            fail("Exception should have been thrown")__        } catch (IndexOutOfBoundsException expectedEx) {_            assertEquals("write(byte[4], offset[1], writeCount[4]) - offset plus write count <5> is greater than length of the source byte[]", expectedEx.getMessage())__        }__        try {_            instance.write("BLAH".getBytes(), 2, payload.length - 1)__            fail("Exception should have been thrown")__        } catch (IndexOutOfBoundsException expectedEx) {_            assertEquals("write(byte[4], offset[2], writeCount[3]) - offset plus write count <5> is greater than length of the source byte[]", expectedEx.getMessage())__        }_    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,byte,array,slice,with,length,greater,than,available,throws,exception,byte,payload,blah,get,bytes,try,instance,write,payload,0,payload,length,1,fail,exception,should,have,been,thrown,catch,index,out,of,bounds,exception,expected,ex,assert,equals,write,byte,4,offset,0,write,count,5,write,count,is,greater,than,length,of,the,source,byte,expected,ex,get,message,try,instance,write,blah,get,bytes,1,payload,length,fail,exception,should,have,been,thrown,catch,index,out,of,bounds,exception,expected,ex,assert,equals,write,byte,4,offset,1,write,count,4,offset,plus,write,count,5,is,greater,than,length,of,the,source,byte,expected,ex,get,message,try,instance,write,blah,get,bytes,2,payload,length,1,fail,exception,should,have,been,thrown,catch,index,out,of,bounds,exception,expected,ex,assert,equals,write,byte,4,offset,2,write,count,3,offset,plus,write,count,5,is,greater,than,length,of,the,source,byte,expected,ex,get,message
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithEmptyArray() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithEmptyArray() throws Exception {_        instance.write(new byte[0])___        assertEquals(0, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,empty,array,throws,exception,instance,write,new,byte,0,assert,equals,0,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithEmptyArray() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithEmptyArray() throws Exception {_        instance.write(new byte[0])___        assertEquals(0, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,empty,array,throws,exception,instance,write,new,byte,0,assert,equals,0,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithEmptyArray() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithEmptyArray() throws Exception {_        instance.write(new byte[0])___        assertEquals(0, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,empty,array,throws,exception,instance,write,new,byte,0,assert,equals,0,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithEmptyArray() throws Exception;1524063106;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithEmptyArray() throws Exception {_        instance.write(new byte[0])___        assertEquals(0, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,empty,array,throws,exception,instance,write,new,byte,0,assert,equals,0,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithEmptyArray() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithEmptyArray() throws Exception {_        instance.write(new byte[0])___        assertEquals(0, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,empty,array,throws,exception,instance,write,new,byte,0,assert,equals,0,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithWithoutEndOfData() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithWithoutEndOfData() throws Exception {_        instance.write(buildTestBytes("BLAH", true, true, false))___        assertEquals(6, instance.size())__        assertEquals(0, instance.startOfBlockIndex)__        assertEquals(5, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,without,end,of,data,throws,exception,instance,write,build,test,bytes,blah,true,true,false,assert,equals,6,instance,size,assert,equals,0,instance,start,of,block,index,assert,equals,5,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithWithoutEndOfData() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithWithoutEndOfData() throws Exception {_        instance.write(buildTestBytes("BLAH", true, true, false))___        assertEquals(6, instance.size())__        assertEquals(0, instance.startOfBlockIndex)__        assertEquals(5, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,without,end,of,data,throws,exception,instance,write,build,test,bytes,blah,true,true,false,assert,equals,6,instance,size,assert,equals,0,instance,start,of,block,index,assert,equals,5,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithWithoutEndOfData() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithWithoutEndOfData() throws Exception {_        instance.write(buildTestBytes("BLAH", true, true, false))___        assertEquals(6, instance.size())__        assertEquals(0, instance.startOfBlockIndex)__        assertEquals(5, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,without,end,of,data,throws,exception,instance,write,build,test,bytes,blah,true,true,false,assert,equals,6,instance,size,assert,equals,0,instance,start,of,block,index,assert,equals,5,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithWithoutEndOfData() throws Exception;1524063106;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithWithoutEndOfData() throws Exception {_        instance.write(buildTestBytes("BLAH", true, true, false))___        assertEquals(6, instance.size())__        assertEquals(0, instance.startOfBlockIndex)__        assertEquals(5, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,without,end,of,data,throws,exception,instance,write,build,test,bytes,blah,true,true,false,assert,equals,6,instance,size,assert,equals,0,instance,start,of,block,index,assert,equals,5,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithWithoutEndOfData() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithWithoutEndOfData() throws Exception {_        instance.write(buildTestBytes("BLAH", true, true, false))___        assertEquals(6, instance.size())__        assertEquals(0, instance.startOfBlockIndex)__        assertEquals(5, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,without,end,of,data,throws,exception,instance,write,build,test,bytes,blah,true,true,false,assert,equals,6,instance,size,assert,equals,0,instance,start,of,block,index,assert,equals,5,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteIntWithEndOfData() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteIntWithEndOfData() throws Exception {_        instance.write(MllpProtocolConstants.END_OF_DATA)___        assertEquals(1, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,int,with,end,of,data,throws,exception,instance,write,mllp,protocol,constants,assert,equals,1,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteIntWithEndOfData() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteIntWithEndOfData() throws Exception {_        instance.write(MllpProtocolConstants.END_OF_DATA)___        assertEquals(1, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,int,with,end,of,data,throws,exception,instance,write,mllp,protocol,constants,assert,equals,1,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteIntWithEndOfData() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteIntWithEndOfData() throws Exception {_        instance.write(MllpProtocolConstants.END_OF_DATA)___        assertEquals(1, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,int,with,end,of,data,throws,exception,instance,write,mllp,protocol,constants,assert,equals,1,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteIntWithEndOfData() throws Exception;1524063106;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteIntWithEndOfData() throws Exception {_        instance.write(MllpProtocolConstants.END_OF_DATA)___        assertEquals(1, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,int,with,end,of,data,throws,exception,instance,write,mllp,protocol,constants,assert,equals,1,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteIntWithEndOfData() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteIntWithEndOfData() throws Exception {_        instance.write(MllpProtocolConstants.END_OF_DATA)___        assertEquals(1, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,int,with,end,of,data,throws,exception,instance,write,mllp,protocol,constants,assert,equals,1,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test(expected = SocketTimeoutException.class)     public void testReadFrom() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test(expected = SocketTimeoutException.class)_    public void testReadFrom() throws Exception {_        SocketStub socketStub = new SocketStub()__        socketStub.inputStreamStub_            .addPacket("FOO".getBytes())_            .addPacket("BAR".getBytes())___        endpoint.setReceiveTimeout(500)__        endpoint.setReadTimeout(100)___        instance.readFrom(socketStub)___        assertArrayEquals("FOOBAR".getBytes(), instance.toByteArray())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,expected,socket,timeout,exception,class,public,void,test,read,from,throws,exception,socket,stub,socket,stub,new,socket,stub,socket,stub,input,stream,stub,add,packet,foo,get,bytes,add,packet,bar,get,bytes,endpoint,set,receive,timeout,500,endpoint,set,read,timeout,100,instance,read,from,socket,stub,assert,array,equals,foobar,get,bytes,instance,to,byte,array
MllpSocketBufferWriteTest -> @Test(expected = SocketTimeoutException.class)     public void testReadFrom() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test(expected = SocketTimeoutException.class)_    public void testReadFrom() throws Exception {_        SocketStub socketStub = new SocketStub()__        socketStub.inputStreamStub_            .addPacket("FOO".getBytes())_            .addPacket("BAR".getBytes())___        endpoint.setReceiveTimeout(500)__        endpoint.setReadTimeout(100)___        instance.readFrom(socketStub)___        assertArrayEquals("FOOBAR".getBytes(), instance.toByteArray())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,expected,socket,timeout,exception,class,public,void,test,read,from,throws,exception,socket,stub,socket,stub,new,socket,stub,socket,stub,input,stream,stub,add,packet,foo,get,bytes,add,packet,bar,get,bytes,endpoint,set,receive,timeout,500,endpoint,set,read,timeout,100,instance,read,from,socket,stub,assert,array,equals,foobar,get,bytes,instance,to,byte,array
MllpSocketBufferWriteTest -> @Test(expected = SocketTimeoutException.class)     public void testReadFrom() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test(expected = SocketTimeoutException.class)_    public void testReadFrom() throws Exception {_        SocketStub socketStub = new SocketStub()__        socketStub.inputStreamStub_            .addPacket("FOO".getBytes())_            .addPacket("BAR".getBytes())___        endpoint.setReceiveTimeout(500)__        endpoint.setReadTimeout(100)___        instance.readFrom(socketStub)___        assertArrayEquals("FOOBAR".getBytes(), instance.toByteArray())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,expected,socket,timeout,exception,class,public,void,test,read,from,throws,exception,socket,stub,socket,stub,new,socket,stub,socket,stub,input,stream,stub,add,packet,foo,get,bytes,add,packet,bar,get,bytes,endpoint,set,receive,timeout,500,endpoint,set,read,timeout,100,instance,read,from,socket,stub,assert,array,equals,foobar,get,bytes,instance,to,byte,array
MllpSocketBufferWriteTest -> @Test(expected = SocketTimeoutException.class)     public void testReadFrom() throws Exception;1524063106;Description of test.__@throws Exception in the event of a test error.;@Test(expected = SocketTimeoutException.class)_    public void testReadFrom() throws Exception {_        SocketStub socketStub = new SocketStub()__        socketStub.inputStreamStub_            .addPacket("FOO".getBytes())_            .addPacket("BAR".getBytes())___        endpoint.setReceiveTimeout(500)__        endpoint.setReadTimeout(100)___        instance.readFrom(socketStub)___        assertArrayEquals("FOOBAR".getBytes(), instance.toByteArray())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,expected,socket,timeout,exception,class,public,void,test,read,from,throws,exception,socket,stub,socket,stub,new,socket,stub,socket,stub,input,stream,stub,add,packet,foo,get,bytes,add,packet,bar,get,bytes,endpoint,set,receive,timeout,500,endpoint,set,read,timeout,100,instance,read,from,socket,stub,assert,array,equals,foobar,get,bytes,instance,to,byte,array
MllpSocketBufferWriteTest -> @Test(expected = SocketTimeoutException.class)     public void testReadFrom() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test(expected = SocketTimeoutException.class)_    public void testReadFrom() throws Exception {_        SocketStub socketStub = new SocketStub()__        socketStub.inputStreamStub_            .addPacket("FOO".getBytes())_            .addPacket("BAR".getBytes())___        endpoint.setReceiveTimeout(500)__        endpoint.setReadTimeout(100)___        instance.readFrom(socketStub)___        assertArrayEquals("FOOBAR".getBytes(), instance.toByteArray())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,expected,socket,timeout,exception,class,public,void,test,read,from,throws,exception,socket,stub,socket,stub,new,socket,stub,socket,stub,input,stream,stub,add,packet,foo,get,bytes,add,packet,bar,get,bytes,endpoint,set,receive,timeout,500,endpoint,set,read,timeout,100,instance,read,from,socket,stub,assert,array,equals,foobar,get,bytes,instance,to,byte,array
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithWithoutEndOfBlock() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithWithoutEndOfBlock() throws Exception {_        instance.write(buildTestBytes("BLAH", true, false, true))___        assertEquals(6, instance.size())__        assertEquals(0, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,without,end,of,block,throws,exception,instance,write,build,test,bytes,blah,true,false,true,assert,equals,6,instance,size,assert,equals,0,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithWithoutEndOfBlock() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithWithoutEndOfBlock() throws Exception {_        instance.write(buildTestBytes("BLAH", true, false, true))___        assertEquals(6, instance.size())__        assertEquals(0, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,without,end,of,block,throws,exception,instance,write,build,test,bytes,blah,true,false,true,assert,equals,6,instance,size,assert,equals,0,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithWithoutEndOfBlock() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithWithoutEndOfBlock() throws Exception {_        instance.write(buildTestBytes("BLAH", true, false, true))___        assertEquals(6, instance.size())__        assertEquals(0, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,without,end,of,block,throws,exception,instance,write,build,test,bytes,blah,true,false,true,assert,equals,6,instance,size,assert,equals,0,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithWithoutEndOfBlock() throws Exception;1524063106;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithWithoutEndOfBlock() throws Exception {_        instance.write(buildTestBytes("BLAH", true, false, true))___        assertEquals(6, instance.size())__        assertEquals(0, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,without,end,of,block,throws,exception,instance,write,build,test,bytes,blah,true,false,true,assert,equals,6,instance,size,assert,equals,0,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithWithoutEndOfBlock() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithWithoutEndOfBlock() throws Exception {_        instance.write(buildTestBytes("BLAH", true, false, true))___        assertEquals(6, instance.size())__        assertEquals(0, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,without,end,of,block,throws,exception,instance,write,build,test,bytes,blah,true,false,true,assert,equals,6,instance,size,assert,equals,0,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testEnsureCapacityWithAlreadyAllocateMaxBufferSize() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testEnsureCapacityWithAlreadyAllocateMaxBufferSize() throws Exception {_        assertEquals(instance.MIN_BUFFER_SIZE, instance.capacity())___        instance.ensureCapacity(instance.MAX_BUFFER_SIZE)___        try {_            instance.ensureCapacity(instance.MAX_BUFFER_SIZE + 1)__            fail("Should have thrown an exception")__        } catch (IllegalStateException expectedEx) {_            String expectedMessage = "Cannot increase the buffer size from <1073741824> to <1073741825> in order to increase the available capacity"_                + " from <1073741824> to <1073741825> because the buffer is already the maximum size <1073741824>"__            assertEquals(expectedMessage, expectedEx.getMessage())__        }___    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,ensure,capacity,with,already,allocate,max,buffer,size,throws,exception,assert,equals,instance,instance,capacity,instance,ensure,capacity,instance,try,instance,ensure,capacity,instance,1,fail,should,have,thrown,an,exception,catch,illegal,state,exception,expected,ex,string,expected,message,cannot,increase,the,buffer,size,from,1073741824,to,1073741825,in,order,to,increase,the,available,capacity,from,1073741824,to,1073741825,because,the,buffer,is,already,the,maximum,size,1073741824,assert,equals,expected,message,expected,ex,get,message
MllpSocketBufferWriteTest -> @Test     public void testEnsureCapacityWithAlreadyAllocateMaxBufferSize() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testEnsureCapacityWithAlreadyAllocateMaxBufferSize() throws Exception {_        assertEquals(instance.MIN_BUFFER_SIZE, instance.capacity())___        instance.ensureCapacity(instance.MAX_BUFFER_SIZE)___        try {_            instance.ensureCapacity(instance.MAX_BUFFER_SIZE + 1)__            fail("Should have thrown an exception")__        } catch (IllegalStateException expectedEx) {_            String expectedMessage = "Cannot increase the buffer size from <1073741824> to <1073741825> in order to increase the available capacity"_                + " from <1073741824> to <1073741825> because the buffer is already the maximum size <1073741824>"__            assertEquals(expectedMessage, expectedEx.getMessage())__        }___    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,ensure,capacity,with,already,allocate,max,buffer,size,throws,exception,assert,equals,instance,instance,capacity,instance,ensure,capacity,instance,try,instance,ensure,capacity,instance,1,fail,should,have,thrown,an,exception,catch,illegal,state,exception,expected,ex,string,expected,message,cannot,increase,the,buffer,size,from,1073741824,to,1073741825,in,order,to,increase,the,available,capacity,from,1073741824,to,1073741825,because,the,buffer,is,already,the,maximum,size,1073741824,assert,equals,expected,message,expected,ex,get,message
MllpSocketBufferWriteTest -> @Test     public void testEnsureCapacityWithAlreadyAllocateMaxBufferSize() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testEnsureCapacityWithAlreadyAllocateMaxBufferSize() throws Exception {_        assertEquals(instance.MIN_BUFFER_SIZE, instance.capacity())___        instance.ensureCapacity(instance.MAX_BUFFER_SIZE)___        try {_            instance.ensureCapacity(instance.MAX_BUFFER_SIZE + 1)__            fail("Should have thrown an exception")__        } catch (IllegalStateException expectedEx) {_            String expectedMessage = "Cannot increase the buffer size from <1073741824> to <1073741825> in order to increase the available capacity"_                + " from <1073741824> to <1073741825> because the buffer is already the maximum size <1073741824>"__            assertEquals(expectedMessage, expectedEx.getMessage())__        }___    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,ensure,capacity,with,already,allocate,max,buffer,size,throws,exception,assert,equals,instance,instance,capacity,instance,ensure,capacity,instance,try,instance,ensure,capacity,instance,1,fail,should,have,thrown,an,exception,catch,illegal,state,exception,expected,ex,string,expected,message,cannot,increase,the,buffer,size,from,1073741824,to,1073741825,in,order,to,increase,the,available,capacity,from,1073741824,to,1073741825,because,the,buffer,is,already,the,maximum,size,1073741824,assert,equals,expected,message,expected,ex,get,message
MllpSocketBufferWriteTest -> @Test     public void testEnsureCapacityWithAlreadyAllocateMaxBufferSize() throws Exception;1524063106;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testEnsureCapacityWithAlreadyAllocateMaxBufferSize() throws Exception {_        assertEquals(MllpSocketBuffer.MIN_BUFFER_SIZE, instance.capacity())___        instance.ensureCapacity(MllpSocketBuffer.MAX_BUFFER_SIZE)___        try {_            instance.ensureCapacity(MllpSocketBuffer.MAX_BUFFER_SIZE + 1)__            fail("Should have thrown an exception")__        } catch (IllegalStateException expectedEx) {_            String expectedMessage = "Cannot increase the buffer size from <1073741824> to <1073741825> in order to increase the available capacity"_                + " from <1073741824> to <1073741825> because the buffer is already the maximum size <1073741824>"__            assertEquals(expectedMessage, expectedEx.getMessage())__        }___    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,ensure,capacity,with,already,allocate,max,buffer,size,throws,exception,assert,equals,mllp,socket,buffer,instance,capacity,instance,ensure,capacity,mllp,socket,buffer,try,instance,ensure,capacity,mllp,socket,buffer,1,fail,should,have,thrown,an,exception,catch,illegal,state,exception,expected,ex,string,expected,message,cannot,increase,the,buffer,size,from,1073741824,to,1073741825,in,order,to,increase,the,available,capacity,from,1073741824,to,1073741825,because,the,buffer,is,already,the,maximum,size,1073741824,assert,equals,expected,message,expected,ex,get,message
MllpSocketBufferWriteTest -> @Test     public void testEnsureCapacityWithAlreadyAllocateMaxBufferSize() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testEnsureCapacityWithAlreadyAllocateMaxBufferSize() throws Exception {_        assertEquals(MllpSocketBuffer.MIN_BUFFER_SIZE, instance.capacity())___        instance.ensureCapacity(MllpSocketBuffer.MAX_BUFFER_SIZE)___        try {_            instance.ensureCapacity(MllpSocketBuffer.MAX_BUFFER_SIZE + 1)__            fail("Should have thrown an exception")__        } catch (IllegalStateException expectedEx) {_            String expectedMessage = "Cannot increase the buffer size from <1073741824> to <1073741825> in order to increase the available capacity"_                + " from <1073741824> to <1073741825> because the buffer is already the maximum size <1073741824>"__            assertEquals(expectedMessage, expectedEx.getMessage())__        }___    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,ensure,capacity,with,already,allocate,max,buffer,size,throws,exception,assert,equals,mllp,socket,buffer,instance,capacity,instance,ensure,capacity,mllp,socket,buffer,try,instance,ensure,capacity,mllp,socket,buffer,1,fail,should,have,thrown,an,exception,catch,illegal,state,exception,expected,ex,string,expected,message,cannot,increase,the,buffer,size,from,1073741824,to,1073741825,in,order,to,increase,the,available,capacity,from,1073741824,to,1073741825,because,the,buffer,is,already,the,maximum,size,1073741824,assert,equals,expected,message,expected,ex,get,message
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithWithoutStartOfBlock() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithWithoutStartOfBlock() throws Exception {_        instance.write(buildTestBytes("BLAH", false, true, true))___        assertEquals(6, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(4, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,without,start,of,block,throws,exception,instance,write,build,test,bytes,blah,false,true,true,assert,equals,6,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,4,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithWithoutStartOfBlock() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithWithoutStartOfBlock() throws Exception {_        instance.write(buildTestBytes("BLAH", false, true, true))___        assertEquals(6, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,without,start,of,block,throws,exception,instance,write,build,test,bytes,blah,false,true,true,assert,equals,6,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithWithoutStartOfBlock() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithWithoutStartOfBlock() throws Exception {_        instance.write(buildTestBytes("BLAH", false, true, true))___        assertEquals(6, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,without,start,of,block,throws,exception,instance,write,build,test,bytes,blah,false,true,true,assert,equals,6,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithWithoutStartOfBlock() throws Exception;1524063106;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithWithoutStartOfBlock() throws Exception {_        instance.write(buildTestBytes("BLAH", false, true, true))___        assertEquals(6, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,without,start,of,block,throws,exception,instance,write,build,test,bytes,blah,false,true,true,assert,equals,6,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithWithoutStartOfBlock() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithWithoutStartOfBlock() throws Exception {_        instance.write(buildTestBytes("BLAH", false, true, true))___        assertEquals(6, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,without,start,of,block,throws,exception,instance,write,build,test,bytes,blah,false,true,true,assert,equals,6,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testEnsureCapacityWithNegativeRequiredAvailability() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testEnsureCapacityWithNegativeRequiredAvailability() throws Exception {_        assertEquals(instance.MIN_BUFFER_SIZE, instance.capacity())___        instance.ensureCapacity(-1)___        assertEquals(instance.MIN_BUFFER_SIZE, instance.capacity())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,ensure,capacity,with,negative,required,availability,throws,exception,assert,equals,instance,instance,capacity,instance,ensure,capacity,1,assert,equals,instance,instance,capacity
MllpSocketBufferWriteTest -> @Test     public void testEnsureCapacityWithNegativeRequiredAvailability() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testEnsureCapacityWithNegativeRequiredAvailability() throws Exception {_        assertEquals(instance.MIN_BUFFER_SIZE, instance.capacity())___        instance.ensureCapacity(-1)___        assertEquals(instance.MIN_BUFFER_SIZE, instance.capacity())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,ensure,capacity,with,negative,required,availability,throws,exception,assert,equals,instance,instance,capacity,instance,ensure,capacity,1,assert,equals,instance,instance,capacity
MllpSocketBufferWriteTest -> @Test     public void testEnsureCapacityWithNegativeRequiredAvailability() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testEnsureCapacityWithNegativeRequiredAvailability() throws Exception {_        assertEquals(instance.MIN_BUFFER_SIZE, instance.capacity())___        instance.ensureCapacity(-1)___        assertEquals(instance.MIN_BUFFER_SIZE, instance.capacity())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,ensure,capacity,with,negative,required,availability,throws,exception,assert,equals,instance,instance,capacity,instance,ensure,capacity,1,assert,equals,instance,instance,capacity
MllpSocketBufferWriteTest -> @Test     public void testEnsureCapacityWithNegativeRequiredAvailability() throws Exception;1524063106;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testEnsureCapacityWithNegativeRequiredAvailability() throws Exception {_        assertEquals(MllpSocketBuffer.MIN_BUFFER_SIZE, instance.capacity())___        instance.ensureCapacity(-1)___        assertEquals(MllpSocketBuffer.MIN_BUFFER_SIZE, instance.capacity())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,ensure,capacity,with,negative,required,availability,throws,exception,assert,equals,mllp,socket,buffer,instance,capacity,instance,ensure,capacity,1,assert,equals,mllp,socket,buffer,instance,capacity
MllpSocketBufferWriteTest -> @Test     public void testEnsureCapacityWithNegativeRequiredAvailability() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testEnsureCapacityWithNegativeRequiredAvailability() throws Exception {_        assertEquals(MllpSocketBuffer.MIN_BUFFER_SIZE, instance.capacity())___        instance.ensureCapacity(-1)___        assertEquals(MllpSocketBuffer.MIN_BUFFER_SIZE, instance.capacity())__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,ensure,capacity,with,negative,required,availability,throws,exception,assert,equals,mllp,socket,buffer,instance,capacity,instance,ensure,capacity,1,assert,equals,mllp,socket,buffer,instance,capacity
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithFullEnvelope() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithFullEnvelope() throws Exception {_        instance.write(buildTestBytes("BLAH", true, true, true))___        assertEquals(7, instance.size())__        assertEquals(0, instance.startOfBlockIndex)__        assertEquals(5, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,full,envelope,throws,exception,instance,write,build,test,bytes,blah,true,true,true,assert,equals,7,instance,size,assert,equals,0,instance,start,of,block,index,assert,equals,5,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithFullEnvelope() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithFullEnvelope() throws Exception {_        instance.write(buildTestBytes("BLAH", true, true, true))___        assertEquals(7, instance.size())__        assertEquals(0, instance.startOfBlockIndex)__        assertEquals(5, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,full,envelope,throws,exception,instance,write,build,test,bytes,blah,true,true,true,assert,equals,7,instance,size,assert,equals,0,instance,start,of,block,index,assert,equals,5,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithFullEnvelope() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithFullEnvelope() throws Exception {_        instance.write(buildTestBytes("BLAH", true, true, true))___        assertEquals(7, instance.size())__        assertEquals(0, instance.startOfBlockIndex)__        assertEquals(5, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,full,envelope,throws,exception,instance,write,build,test,bytes,blah,true,true,true,assert,equals,7,instance,size,assert,equals,0,instance,start,of,block,index,assert,equals,5,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithFullEnvelope() throws Exception;1524063106;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithFullEnvelope() throws Exception {_        instance.write(buildTestBytes("BLAH", true, true, true))___        assertEquals(7, instance.size())__        assertEquals(0, instance.startOfBlockIndex)__        assertEquals(5, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,full,envelope,throws,exception,instance,write,build,test,bytes,blah,true,true,true,assert,equals,7,instance,size,assert,equals,0,instance,start,of,block,index,assert,equals,5,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithFullEnvelope() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithFullEnvelope() throws Exception {_        instance.write(buildTestBytes("BLAH", true, true, true))___        assertEquals(7, instance.size())__        assertEquals(0, instance.startOfBlockIndex)__        assertEquals(5, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,full,envelope,throws,exception,instance,write,build,test,bytes,blah,true,true,true,assert,equals,7,instance,size,assert,equals,0,instance,start,of,block,index,assert,equals,5,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithNullArray() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithNullArray() throws Exception {_        instance.write((byte[]) null)___        assertEquals(0, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,null,array,throws,exception,instance,write,byte,null,assert,equals,0,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithNullArray() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithNullArray() throws Exception {_        instance.write((byte[]) null)___        assertEquals(0, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,null,array,throws,exception,instance,write,byte,null,assert,equals,0,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithNullArray() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithNullArray() throws Exception {_        instance.write((byte[]) null)___        assertEquals(0, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,null,array,throws,exception,instance,write,byte,null,assert,equals,0,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithNullArray() throws Exception;1524063106;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithNullArray() throws Exception {_        instance.write((byte[]) null)___        assertEquals(0, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,null,array,throws,exception,instance,write,byte,null,assert,equals,0,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteBytesWithNullArray() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteBytesWithNullArray() throws Exception {_        instance.write((byte[]) null)___        assertEquals(0, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,bytes,with,null,array,throws,exception,instance,write,byte,null,assert,equals,0,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteByteArraySliceWithEmptyArray() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteByteArraySliceWithEmptyArray() throws Exception {_        instance.write(new byte[0], 0, 5)___        assertEquals(0, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,byte,array,slice,with,empty,array,throws,exception,instance,write,new,byte,0,0,5,assert,equals,0,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteByteArraySliceWithEmptyArray() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteByteArraySliceWithEmptyArray() throws Exception {_        instance.write(new byte[0], 0, 5)___        assertEquals(0, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,byte,array,slice,with,empty,array,throws,exception,instance,write,new,byte,0,0,5,assert,equals,0,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteByteArraySliceWithEmptyArray() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteByteArraySliceWithEmptyArray() throws Exception {_        instance.write(new byte[0], 0, 5)___        assertEquals(0, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,byte,array,slice,with,empty,array,throws,exception,instance,write,new,byte,0,0,5,assert,equals,0,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteByteArraySliceWithEmptyArray() throws Exception;1524063106;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteByteArraySliceWithEmptyArray() throws Exception {_        instance.write(new byte[0], 0, 5)___        assertEquals(0, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,byte,array,slice,with,empty,array,throws,exception,instance,write,new,byte,0,0,5,assert,equals,0,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testWriteByteArraySliceWithEmptyArray() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testWriteByteArraySliceWithEmptyArray() throws Exception {_        instance.write(new byte[0], 0, 5)___        assertEquals(0, instance.size())__        assertEquals(-1, instance.startOfBlockIndex)__        assertEquals(-1, instance.endOfBlockIndex)__    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,write,byte,array,slice,with,empty,array,throws,exception,instance,write,new,byte,0,0,5,assert,equals,0,instance,size,assert,equals,1,instance,start,of,block,index,assert,equals,1,instance,end,of,block,index
MllpSocketBufferWriteTest -> @Test     public void testEnsureCapacityWithOutOfRangeRequiredAvailability() throws Exception;1515779403;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testEnsureCapacityWithOutOfRangeRequiredAvailability() throws Exception {_        assertEquals(instance.MIN_BUFFER_SIZE, instance.capacity())___        try {_            instance.ensureCapacity(Integer.MAX_VALUE)__            fail("Should have thrown an exception")__        } catch (IllegalStateException expectedEx) {_            String expectedMessage = "Cannot increase the buffer size <2048> in order to increase the available capacity from <2048> to <2147483647>"_                + " because the required buffer size <2147483647> exceeds the maximum buffer size <1073741824>"__            assertEquals(expectedMessage, expectedEx.getMessage())__        }__        try {_            instance.ensureCapacity(instance.MAX_BUFFER_SIZE + 1)__            fail("Should have thrown an exception")__        } catch (IllegalStateException expectedEx) {_            String expectedMessage = "Cannot increase the buffer size <2048> in order to increase the available capacity from <2048> to <1073741825>"_                + " because the required buffer size <1073741825> exceeds the maximum buffer size <1073741824>"__            assertEquals(expectedMessage, expectedEx.getMessage())__        }__        try {_            instance.write("BLAH".getBytes())__            instance.ensureCapacity(instance.MAX_BUFFER_SIZE)__            fail("Should have thrown an exception")__        } catch (IllegalStateException expectedEx) {_            String expectedMessage = "Cannot increase the buffer size <2048> in order to increase the available capacity from <2044> to <1073741824>"_                + " because the required buffer size <1073741828> exceeds the maximum buffer size <1073741824>"__            assertEquals(expectedMessage, expectedEx.getMessage())__        }_    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,ensure,capacity,with,out,of,range,required,availability,throws,exception,assert,equals,instance,instance,capacity,try,instance,ensure,capacity,integer,fail,should,have,thrown,an,exception,catch,illegal,state,exception,expected,ex,string,expected,message,cannot,increase,the,buffer,size,2048,in,order,to,increase,the,available,capacity,from,2048,to,2147483647,because,the,required,buffer,size,2147483647,exceeds,the,maximum,buffer,size,1073741824,assert,equals,expected,message,expected,ex,get,message,try,instance,ensure,capacity,instance,1,fail,should,have,thrown,an,exception,catch,illegal,state,exception,expected,ex,string,expected,message,cannot,increase,the,buffer,size,2048,in,order,to,increase,the,available,capacity,from,2048,to,1073741825,because,the,required,buffer,size,1073741825,exceeds,the,maximum,buffer,size,1073741824,assert,equals,expected,message,expected,ex,get,message,try,instance,write,blah,get,bytes,instance,ensure,capacity,instance,fail,should,have,thrown,an,exception,catch,illegal,state,exception,expected,ex,string,expected,message,cannot,increase,the,buffer,size,2048,in,order,to,increase,the,available,capacity,from,2044,to,1073741824,because,the,required,buffer,size,1073741828,exceeds,the,maximum,buffer,size,1073741824,assert,equals,expected,message,expected,ex,get,message
MllpSocketBufferWriteTest -> @Test     public void testEnsureCapacityWithOutOfRangeRequiredAvailability() throws Exception;1517266680;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testEnsureCapacityWithOutOfRangeRequiredAvailability() throws Exception {_        assertEquals(instance.MIN_BUFFER_SIZE, instance.capacity())___        try {_            instance.ensureCapacity(Integer.MAX_VALUE)__            fail("Should have thrown an exception")__        } catch (IllegalStateException expectedEx) {_            String expectedMessage = "Cannot increase the buffer size <2048> in order to increase the available capacity from <2048> to <2147483647>"_                + " because the required buffer size <2147483647> exceeds the maximum buffer size <1073741824>"__            assertEquals(expectedMessage, expectedEx.getMessage())__        }__        try {_            instance.ensureCapacity(instance.MAX_BUFFER_SIZE + 1)__            fail("Should have thrown an exception")__        } catch (IllegalStateException expectedEx) {_            String expectedMessage = "Cannot increase the buffer size <2048> in order to increase the available capacity from <2048> to <1073741825>"_                + " because the required buffer size <1073741825> exceeds the maximum buffer size <1073741824>"__            assertEquals(expectedMessage, expectedEx.getMessage())__        }__        try {_            instance.write("BLAH".getBytes())__            instance.ensureCapacity(instance.MAX_BUFFER_SIZE)__            fail("Should have thrown an exception")__        } catch (IllegalStateException expectedEx) {_            String expectedMessage = "Cannot increase the buffer size <2048> in order to increase the available capacity from <2044> to <1073741824>"_                + " because the required buffer size <1073741828> exceeds the maximum buffer size <1073741824>"__            assertEquals(expectedMessage, expectedEx.getMessage())__        }_    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,ensure,capacity,with,out,of,range,required,availability,throws,exception,assert,equals,instance,instance,capacity,try,instance,ensure,capacity,integer,fail,should,have,thrown,an,exception,catch,illegal,state,exception,expected,ex,string,expected,message,cannot,increase,the,buffer,size,2048,in,order,to,increase,the,available,capacity,from,2048,to,2147483647,because,the,required,buffer,size,2147483647,exceeds,the,maximum,buffer,size,1073741824,assert,equals,expected,message,expected,ex,get,message,try,instance,ensure,capacity,instance,1,fail,should,have,thrown,an,exception,catch,illegal,state,exception,expected,ex,string,expected,message,cannot,increase,the,buffer,size,2048,in,order,to,increase,the,available,capacity,from,2048,to,1073741825,because,the,required,buffer,size,1073741825,exceeds,the,maximum,buffer,size,1073741824,assert,equals,expected,message,expected,ex,get,message,try,instance,write,blah,get,bytes,instance,ensure,capacity,instance,fail,should,have,thrown,an,exception,catch,illegal,state,exception,expected,ex,string,expected,message,cannot,increase,the,buffer,size,2048,in,order,to,increase,the,available,capacity,from,2044,to,1073741824,because,the,required,buffer,size,1073741828,exceeds,the,maximum,buffer,size,1073741824,assert,equals,expected,message,expected,ex,get,message
MllpSocketBufferWriteTest -> @Test     public void testEnsureCapacityWithOutOfRangeRequiredAvailability() throws Exception;1521820516;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testEnsureCapacityWithOutOfRangeRequiredAvailability() throws Exception {_        assertEquals(instance.MIN_BUFFER_SIZE, instance.capacity())___        try {_            instance.ensureCapacity(Integer.MAX_VALUE)__            fail("Should have thrown an exception")__        } catch (IllegalStateException expectedEx) {_            String expectedMessage = "Cannot increase the buffer size <2048> in order to increase the available capacity from <2048> to <2147483647>"_                + " because the required buffer size <2147483647> exceeds the maximum buffer size <1073741824>"__            assertEquals(expectedMessage, expectedEx.getMessage())__        }__        try {_            instance.ensureCapacity(instance.MAX_BUFFER_SIZE + 1)__            fail("Should have thrown an exception")__        } catch (IllegalStateException expectedEx) {_            String expectedMessage = "Cannot increase the buffer size <2048> in order to increase the available capacity from <2048> to <1073741825>"_                + " because the required buffer size <1073741825> exceeds the maximum buffer size <1073741824>"__            assertEquals(expectedMessage, expectedEx.getMessage())__        }__        try {_            instance.write("BLAH".getBytes())__            instance.ensureCapacity(instance.MAX_BUFFER_SIZE)__            fail("Should have thrown an exception")__        } catch (IllegalStateException expectedEx) {_            String expectedMessage = "Cannot increase the buffer size <2048> in order to increase the available capacity from <2044> to <1073741824>"_                + " because the required buffer size <1073741828> exceeds the maximum buffer size <1073741824>"__            assertEquals(expectedMessage, expectedEx.getMessage())__        }_    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,ensure,capacity,with,out,of,range,required,availability,throws,exception,assert,equals,instance,instance,capacity,try,instance,ensure,capacity,integer,fail,should,have,thrown,an,exception,catch,illegal,state,exception,expected,ex,string,expected,message,cannot,increase,the,buffer,size,2048,in,order,to,increase,the,available,capacity,from,2048,to,2147483647,because,the,required,buffer,size,2147483647,exceeds,the,maximum,buffer,size,1073741824,assert,equals,expected,message,expected,ex,get,message,try,instance,ensure,capacity,instance,1,fail,should,have,thrown,an,exception,catch,illegal,state,exception,expected,ex,string,expected,message,cannot,increase,the,buffer,size,2048,in,order,to,increase,the,available,capacity,from,2048,to,1073741825,because,the,required,buffer,size,1073741825,exceeds,the,maximum,buffer,size,1073741824,assert,equals,expected,message,expected,ex,get,message,try,instance,write,blah,get,bytes,instance,ensure,capacity,instance,fail,should,have,thrown,an,exception,catch,illegal,state,exception,expected,ex,string,expected,message,cannot,increase,the,buffer,size,2048,in,order,to,increase,the,available,capacity,from,2044,to,1073741824,because,the,required,buffer,size,1073741828,exceeds,the,maximum,buffer,size,1073741824,assert,equals,expected,message,expected,ex,get,message
MllpSocketBufferWriteTest -> @Test     public void testEnsureCapacityWithOutOfRangeRequiredAvailability() throws Exception;1524063106;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testEnsureCapacityWithOutOfRangeRequiredAvailability() throws Exception {_        assertEquals(MllpSocketBuffer.MIN_BUFFER_SIZE, instance.capacity())___        try {_            instance.ensureCapacity(Integer.MAX_VALUE)__            fail("Should have thrown an exception")__        } catch (IllegalStateException expectedEx) {_            String expectedMessage = "Cannot increase the buffer size <2048> in order to increase the available capacity from <2048> to <2147483647>"_                + " because the required buffer size <2147483647> exceeds the maximum buffer size <1073741824>"__            assertEquals(expectedMessage, expectedEx.getMessage())__        }__        try {_            instance.ensureCapacity(MllpSocketBuffer.MAX_BUFFER_SIZE + 1)__            fail("Should have thrown an exception")__        } catch (IllegalStateException expectedEx) {_            String expectedMessage = "Cannot increase the buffer size <2048> in order to increase the available capacity from <2048> to <1073741825>"_                + " because the required buffer size <1073741825> exceeds the maximum buffer size <1073741824>"__            assertEquals(expectedMessage, expectedEx.getMessage())__        }__        try {_            instance.write("BLAH".getBytes())__            instance.ensureCapacity(MllpSocketBuffer.MAX_BUFFER_SIZE)__            fail("Should have thrown an exception")__        } catch (IllegalStateException expectedEx) {_            String expectedMessage = "Cannot increase the buffer size <2048> in order to increase the available capacity from <2044> to <1073741824>"_                + " because the required buffer size <1073741828> exceeds the maximum buffer size <1073741824>"__            assertEquals(expectedMessage, expectedEx.getMessage())__        }_    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,ensure,capacity,with,out,of,range,required,availability,throws,exception,assert,equals,mllp,socket,buffer,instance,capacity,try,instance,ensure,capacity,integer,fail,should,have,thrown,an,exception,catch,illegal,state,exception,expected,ex,string,expected,message,cannot,increase,the,buffer,size,2048,in,order,to,increase,the,available,capacity,from,2048,to,2147483647,because,the,required,buffer,size,2147483647,exceeds,the,maximum,buffer,size,1073741824,assert,equals,expected,message,expected,ex,get,message,try,instance,ensure,capacity,mllp,socket,buffer,1,fail,should,have,thrown,an,exception,catch,illegal,state,exception,expected,ex,string,expected,message,cannot,increase,the,buffer,size,2048,in,order,to,increase,the,available,capacity,from,2048,to,1073741825,because,the,required,buffer,size,1073741825,exceeds,the,maximum,buffer,size,1073741824,assert,equals,expected,message,expected,ex,get,message,try,instance,write,blah,get,bytes,instance,ensure,capacity,mllp,socket,buffer,fail,should,have,thrown,an,exception,catch,illegal,state,exception,expected,ex,string,expected,message,cannot,increase,the,buffer,size,2048,in,order,to,increase,the,available,capacity,from,2044,to,1073741824,because,the,required,buffer,size,1073741828,exceeds,the,maximum,buffer,size,1073741824,assert,equals,expected,message,expected,ex,get,message
MllpSocketBufferWriteTest -> @Test     public void testEnsureCapacityWithOutOfRangeRequiredAvailability() throws Exception;1537290824;Description of test.__@throws Exception in the event of a test error.;@Test_    public void testEnsureCapacityWithOutOfRangeRequiredAvailability() throws Exception {_        assertEquals(MllpSocketBuffer.MIN_BUFFER_SIZE, instance.capacity())___        try {_            instance.ensureCapacity(Integer.MAX_VALUE)__            fail("Should have thrown an exception")__        } catch (IllegalStateException expectedEx) {_            String expectedMessage = "Cannot increase the buffer size <2048> in order to increase the available capacity from <2048> to <2147483647>"_                + " because the required buffer size <2147483647> exceeds the maximum buffer size <1073741824>"__            assertEquals(expectedMessage, expectedEx.getMessage())__        }__        try {_            instance.ensureCapacity(MllpSocketBuffer.MAX_BUFFER_SIZE + 1)__            fail("Should have thrown an exception")__        } catch (IllegalStateException expectedEx) {_            String expectedMessage = "Cannot increase the buffer size <2048> in order to increase the available capacity from <2048> to <1073741825>"_                + " because the required buffer size <1073741825> exceeds the maximum buffer size <1073741824>"__            assertEquals(expectedMessage, expectedEx.getMessage())__        }__        try {_            instance.write("BLAH".getBytes())__            instance.ensureCapacity(MllpSocketBuffer.MAX_BUFFER_SIZE)__            fail("Should have thrown an exception")__        } catch (IllegalStateException expectedEx) {_            String expectedMessage = "Cannot increase the buffer size <2048> in order to increase the available capacity from <2044> to <1073741824>"_                + " because the required buffer size <1073741828> exceeds the maximum buffer size <1073741824>"__            assertEquals(expectedMessage, expectedEx.getMessage())__        }_    };description,of,test,throws,exception,in,the,event,of,a,test,error;test,public,void,test,ensure,capacity,with,out,of,range,required,availability,throws,exception,assert,equals,mllp,socket,buffer,instance,capacity,try,instance,ensure,capacity,integer,fail,should,have,thrown,an,exception,catch,illegal,state,exception,expected,ex,string,expected,message,cannot,increase,the,buffer,size,2048,in,order,to,increase,the,available,capacity,from,2048,to,2147483647,because,the,required,buffer,size,2147483647,exceeds,the,maximum,buffer,size,1073741824,assert,equals,expected,message,expected,ex,get,message,try,instance,ensure,capacity,mllp,socket,buffer,1,fail,should,have,thrown,an,exception,catch,illegal,state,exception,expected,ex,string,expected,message,cannot,increase,the,buffer,size,2048,in,order,to,increase,the,available,capacity,from,2048,to,1073741825,because,the,required,buffer,size,1073741825,exceeds,the,maximum,buffer,size,1073741824,assert,equals,expected,message,expected,ex,get,message,try,instance,write,blah,get,bytes,instance,ensure,capacity,mllp,socket,buffer,fail,should,have,thrown,an,exception,catch,illegal,state,exception,expected,ex,string,expected,message,cannot,increase,the,buffer,size,2048,in,order,to,increase,the,available,capacity,from,2044,to,1073741824,because,the,required,buffer,size,1073741828,exceeds,the,maximum,buffer,size,1073741824,assert,equals,expected,message,expected,ex,get,message
