commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Before public void setUp() throws Exception {     initialLogPhiValue = MllpComponent.logPhi.     initialLogPhiMaxBytesValue = MllpComponent.logPhiMaxBytes.     instance = new MllpComponent(). }
false;public;0;5;;@After public void tearDown() throws Exception {     MllpComponent.logPhi = initialLogPhiValue.     MllpComponent.logPhiMaxBytes = initialLogPhiMaxBytesValue. }
false;public;0;11;;@Test public void testHasLogPhi() throws Exception {     MllpComponent.logPhi = null.     assertFalse(MllpComponent.hasLogPhi()).     MllpComponent.logPhi = false.     assertTrue(MllpComponent.hasLogPhi()).     MllpComponent.logPhi = true.     assertTrue(MllpComponent.hasLogPhi()). }
false;public;0;11;;@Test public void testIsLogPhi() throws Exception {     MllpComponent.logPhi = null.     assertEquals(MllpComponent.DEFAULT_LOG_PHI, MllpComponent.isLogPhi()).     MllpComponent.logPhi = false.     assertFalse(MllpComponent.isLogPhi()).     MllpComponent.logPhi = true.     assertTrue(MllpComponent.isLogPhi()). }
false;public;0;11;;@Test public void testSetLogPhi() throws Exception {     MllpComponent.setLogPhi(null).     assertNull(MllpComponent.logPhi).     MllpComponent.setLogPhi(true).     assertEquals(Boolean.TRUE, MllpComponent.logPhi).     MllpComponent.setLogPhi(false).     assertEquals(Boolean.FALSE, MllpComponent.logPhi). }
false;public;0;11;;@Test public void testHasLogPhiMaxBytes() throws Exception {     MllpComponent.logPhiMaxBytes = null.     assertFalse(MllpComponent.hasLogPhiMaxBytes()).     MllpComponent.logPhiMaxBytes = -1.     assertTrue(MllpComponent.hasLogPhiMaxBytes()).     MllpComponent.logPhiMaxBytes = 1024.     assertTrue(MllpComponent.hasLogPhiMaxBytes()). }
false;public;0;13;;@Test public void testGetLogPhiMaxBytes() throws Exception {     MllpComponent.logPhiMaxBytes = null.     assertEquals(MllpComponent.DEFAULT_LOG_PHI_MAX_BYTES, MllpComponent.getLogPhiMaxBytes()).     int expected = -1.     MllpComponent.logPhiMaxBytes = expected.     assertEquals(expected, MllpComponent.getLogPhiMaxBytes()).     expected = 1024.     MllpComponent.logPhiMaxBytes = expected.     assertEquals(expected, MllpComponent.getLogPhiMaxBytes()). }
false;public;0;14;;@Test public void testSetLogPhiMaxBytes() throws Exception {     Integer expected = null.     MllpComponent.setLogPhiMaxBytes(expected).     assertEquals(expected, MllpComponent.logPhiMaxBytes).     expected = -1.     MllpComponent.setLogPhiMaxBytes(expected).     assertEquals(expected, MllpComponent.logPhiMaxBytes).     expected = 1024.     MllpComponent.setLogPhiMaxBytes(expected).     assertEquals(expected, MllpComponent.logPhiMaxBytes). }
