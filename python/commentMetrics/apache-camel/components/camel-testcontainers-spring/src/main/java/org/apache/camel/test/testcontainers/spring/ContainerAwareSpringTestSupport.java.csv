commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;12;;// ****************** // Setup // ****************** @Override protected void setupResources() throws Exception {     super.setupResources().     containers.clear().     containers.addAll(createContainers()).     final Network network = containerNetwork().     final long timeout = containersStartupTimeout().     Containers.start(containers, network, timeout). }
false;protected;0;6;;@Override protected void cleanupResources() throws Exception {     super.cleanupResources().     Containers.stop(containers, containerShutdownTimeout()). }
false;protected;0;9;;@Override protected CamelContext createCamelContext() throws Exception {     final CamelContext context = super.createCamelContext().     final PropertiesComponent pc = context.getComponent("properties", PropertiesComponent.class).     pc.addFunction(new ContainerPropertiesFunction(containers)).     return context. }
false;protected;0;3;;// ****************** // Containers set-up // ****************** protected GenericContainer<?> createContainer() {     return null. }
false;protected;0;7;;protected List<GenericContainer<?>> createContainers() {     GenericContainer<?> container = createContainer().     return container == null ? Collections.emptyList() : Collections.singletonList(container). }
false;protected;0;3;;protected long containersStartupTimeout() {     return TimeUnit.MINUTES.toSeconds(1). }
false;protected;0;3;;protected long containerShutdownTimeout() {     return TimeUnit.MINUTES.toSeconds(1). }
false;protected;0;3;;protected Network containerNetwork() {     return null. }
false;protected;1;3;;// ****************** // Helpers // ****************** protected GenericContainer<?> getContainer(String containerName) {     return Containers.lookup(containers, containerName). }
false;protected;1;3;;protected String getContainerHost(String containerName) {     return getContainer(containerName).getContainerIpAddress(). }
false;protected;2;3;;protected int getContainerPort(String containerName, int originalPort) {     return getContainer(containerName).getMappedPort(originalPort). }
