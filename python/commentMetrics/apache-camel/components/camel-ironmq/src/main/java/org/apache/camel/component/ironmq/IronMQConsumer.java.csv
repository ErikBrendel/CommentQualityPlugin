# id;timestamp;commentText;codeText;commentWords;codeWords
IronMQConsumer -> protected void processRollback(Exchange exchange);1456589442;Strategy when processing the exchange failed.__@param exchange the exchange;protected void processRollback(Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: {}", exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,exchange,the,exchange;protected,void,process,rollback,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
IronMQConsumer -> protected void processRollback(Exchange exchange);1482077748;Strategy when processing the exchange failed.__@param exchange the exchange;protected void processRollback(Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: {}", exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,exchange,the,exchange;protected,void,process,rollback,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
IronMQConsumer -> protected void processRollback(Exchange exchange);1523994367;Strategy when processing the exchange failed.__@param exchange the exchange;protected void processRollback(Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: {}", exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,exchange,the,exchange;protected,void,process,rollback,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
IronMQConsumer -> protected void processRollback(Exchange exchange);1536687142;Strategy when processing the exchange failed.__@param exchange the exchange;protected void processRollback(Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: {}", exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: {}", exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,exchange,the,exchange;protected,void,process,rollback,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
IronMQConsumer -> protected void processRollback(Exchange exchange);1540108160;Strategy when processing the exchange failed.__@param exchange the exchange;protected void processRollback(Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            log.warn("Exchange failed, so rolling back message status: {}", exchange, cause)__        } else {_            log.warn("Exchange failed, so rolling back message status: {}", exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,exchange,the,exchange;protected,void,process,rollback,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
IronMQConsumer -> protected void processRollback(Exchange exchange);1540108163;Strategy when processing the exchange failed.__@param exchange the exchange;protected void processRollback(Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            log.warn("Exchange failed, so rolling back message status: {}", exchange, cause)__        } else {_            log.warn("Exchange failed, so rolling back message status: {}", exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,exchange,the,exchange;protected,void,process,rollback,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
IronMQConsumer -> protected void processRollback(Exchange exchange);1547827202;Strategy when processing the exchange failed.__@param exchange the exchange;protected void processRollback(Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            log.warn("Exchange failed, so rolling back message status: {}", exchange, cause)__        } else {_            log.warn("Exchange failed, so rolling back message status: {}", exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,exchange,the,exchange;protected,void,process,rollback,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
IronMQConsumer -> protected void processCommit(Exchange exchange, String messageid, String reservationId);1456589442;Strategy to delete the message after being processed.__@param exchange the exchange;protected void processCommit(Exchange exchange, String messageid, String reservationId) {_        try {_            LOG.trace("Deleting message with messageId {} and reservationId {}...", messageid, reservationId)__            this.ironQueue.deleteMessage(messageid, reservationId)__            LOG.trace("Message deleted")__        } catch (Exception e) {_            getExceptionHandler().handleException("Error occurred during delete of message. This exception is ignored.", exchange, e)__        }_    };strategy,to,delete,the,message,after,being,processed,param,exchange,the,exchange;protected,void,process,commit,exchange,exchange,string,messageid,string,reservation,id,try,log,trace,deleting,message,with,message,id,and,reservation,id,messageid,reservation,id,this,iron,queue,delete,message,messageid,reservation,id,log,trace,message,deleted,catch,exception,e,get,exception,handler,handle,exception,error,occurred,during,delete,of,message,this,exception,is,ignored,exchange,e
IronMQConsumer -> protected void processCommit(Exchange exchange, String messageid, String reservationId);1482077748;Strategy to delete the message after being processed.__@param exchange the exchange;protected void processCommit(Exchange exchange, String messageid, String reservationId) {_        try {_            LOG.trace("Deleting message with messageId {} and reservationId {}...", messageid, reservationId)__            this.ironQueue.deleteMessage(messageid, reservationId)__            LOG.trace("Message deleted")__        } catch (Exception e) {_            getExceptionHandler().handleException("Error occurred during delete of message. This exception is ignored.", exchange, e)__        }_    };strategy,to,delete,the,message,after,being,processed,param,exchange,the,exchange;protected,void,process,commit,exchange,exchange,string,messageid,string,reservation,id,try,log,trace,deleting,message,with,message,id,and,reservation,id,messageid,reservation,id,this,iron,queue,delete,message,messageid,reservation,id,log,trace,message,deleted,catch,exception,e,get,exception,handler,handle,exception,error,occurred,during,delete,of,message,this,exception,is,ignored,exchange,e
IronMQConsumer -> protected void processCommit(Exchange exchange, String messageid, String reservationId);1523994367;Strategy to delete the message after being processed.__@param exchange the exchange;protected void processCommit(Exchange exchange, String messageid, String reservationId) {_        try {_            LOG.trace("Deleting message with messageId {} and reservationId {}...", messageid, reservationId)__            this.ironQueue.deleteMessage(messageid, reservationId)__            LOG.trace("Message deleted")__        } catch (Exception e) {_            getExceptionHandler().handleException("Error occurred during delete of message. This exception is ignored.", exchange, e)__        }_    };strategy,to,delete,the,message,after,being,processed,param,exchange,the,exchange;protected,void,process,commit,exchange,exchange,string,messageid,string,reservation,id,try,log,trace,deleting,message,with,message,id,and,reservation,id,messageid,reservation,id,this,iron,queue,delete,message,messageid,reservation,id,log,trace,message,deleted,catch,exception,e,get,exception,handler,handle,exception,error,occurred,during,delete,of,message,this,exception,is,ignored,exchange,e
IronMQConsumer -> protected void processCommit(Exchange exchange, String messageid, String reservationId);1536687142;Strategy to delete the message after being processed.__@param exchange the exchange;protected void processCommit(Exchange exchange, String messageid, String reservationId) {_        try {_            LOG.trace("Deleting message with messageId {} and reservationId {}...", messageid, reservationId)__            this.ironQueue.deleteMessage(messageid, reservationId)__            LOG.trace("Message deleted")__        } catch (Exception e) {_            getExceptionHandler().handleException("Error occurred during delete of message. This exception is ignored.", exchange, e)__        }_    };strategy,to,delete,the,message,after,being,processed,param,exchange,the,exchange;protected,void,process,commit,exchange,exchange,string,messageid,string,reservation,id,try,log,trace,deleting,message,with,message,id,and,reservation,id,messageid,reservation,id,this,iron,queue,delete,message,messageid,reservation,id,log,trace,message,deleted,catch,exception,e,get,exception,handler,handle,exception,error,occurred,during,delete,of,message,this,exception,is,ignored,exchange,e
IronMQConsumer -> protected void processCommit(Exchange exchange, String messageid, String reservationId);1540108160;Strategy to delete the message after being processed.__@param exchange the exchange;protected void processCommit(Exchange exchange, String messageid, String reservationId) {_        try {_            log.trace("Deleting message with messageId {} and reservationId {}...", messageid, reservationId)__            this.ironQueue.deleteMessage(messageid, reservationId)__            log.trace("Message deleted")__        } catch (Exception e) {_            getExceptionHandler().handleException("Error occurred during delete of message. This exception is ignored.", exchange, e)__        }_    };strategy,to,delete,the,message,after,being,processed,param,exchange,the,exchange;protected,void,process,commit,exchange,exchange,string,messageid,string,reservation,id,try,log,trace,deleting,message,with,message,id,and,reservation,id,messageid,reservation,id,this,iron,queue,delete,message,messageid,reservation,id,log,trace,message,deleted,catch,exception,e,get,exception,handler,handle,exception,error,occurred,during,delete,of,message,this,exception,is,ignored,exchange,e
IronMQConsumer -> protected void processCommit(Exchange exchange, String messageid, String reservationId);1540108163;Strategy to delete the message after being processed.__@param exchange the exchange;protected void processCommit(Exchange exchange, String messageid, String reservationId) {_        try {_            log.trace("Deleting message with messageId {} and reservationId {}...", messageid, reservationId)__            this.ironQueue.deleteMessage(messageid, reservationId)__            log.trace("Message deleted")__        } catch (Exception e) {_            getExceptionHandler().handleException("Error occurred during delete of message. This exception is ignored.", exchange, e)__        }_    };strategy,to,delete,the,message,after,being,processed,param,exchange,the,exchange;protected,void,process,commit,exchange,exchange,string,messageid,string,reservation,id,try,log,trace,deleting,message,with,message,id,and,reservation,id,messageid,reservation,id,this,iron,queue,delete,message,messageid,reservation,id,log,trace,message,deleted,catch,exception,e,get,exception,handler,handle,exception,error,occurred,during,delete,of,message,this,exception,is,ignored,exchange,e
IronMQConsumer -> protected void processCommit(Exchange exchange, String messageid, String reservationId);1547827202;Strategy to delete the message after being processed.__@param exchange the exchange;protected void processCommit(Exchange exchange, String messageid, String reservationId) {_        try {_            log.trace("Deleting message with messageId {} and reservationId {}...", messageid, reservationId)__            this.ironQueue.deleteMessage(messageid, reservationId)__            log.trace("Message deleted")__        } catch (Exception e) {_            getExceptionHandler().handleException("Error occurred during delete of message. This exception is ignored.", exchange, e)__        }_    };strategy,to,delete,the,message,after,being,processed,param,exchange,the,exchange;protected,void,process,commit,exchange,exchange,string,messageid,string,reservation,id,try,log,trace,deleting,message,with,message,id,and,reservation,id,messageid,reservation,id,this,iron,queue,delete,message,messageid,reservation,id,log,trace,message,deleted,catch,exception,e,get,exception,handler,handle,exception,error,occurred,during,delete,of,message,this,exception,is,ignored,exchange,e
