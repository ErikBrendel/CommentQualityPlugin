commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public void process(Exchange exchange) throws Exception {     exchange.getIn().setBody("This is my message text."). }
false;public;0;34;;@Test public void shouldDeleteMessageFromQueue1() throws Exception {     result.setExpectedMessageCount(1).     template.send("direct:start", ExchangePattern.InOnly, new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             exchange.getIn().setBody("This is my message text.").         }     }).     assertMockEndpointsSatisfied().     try {         queue1.getClient().queue("testqueue").reserve().         fail("Message was in the first queue!").     } catch (IOException e) {         if (!(e instanceof EmptyQueueException)) {             // Unexpected exception.             throw e.         }     }     try {         queue2.getClient().queue("testqueue1").reserve().         fail("Message remained in second queue!").     } catch (IOException e) {         if (!(e instanceof EmptyQueueException)) {             // Unexpected exception.             throw e.         }     } }
false;protected;0;6;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry registry = super.createRegistry().     registry.bind("ironMock", new IronMQClientMock("dummy", "dummy")).     return registry. }
false;public;0;6;;@Override public void configure() {     from("direct:start").to("ironmq:testqueue?client=#ironMock").     from("ironmq:testqueue?client=#ironMock").to("ironmq:testqueue2?client=#ironMock").     from("ironmq:testqueue2?client=#ironMock").to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() {             from("direct:start").to("ironmq:testqueue?client=#ironMock").             from("ironmq:testqueue?client=#ironMock").to("ironmq:testqueue2?client=#ironMock").             from("ironmq:testqueue2?client=#ironMock").to("mock:result").         }     }. }
