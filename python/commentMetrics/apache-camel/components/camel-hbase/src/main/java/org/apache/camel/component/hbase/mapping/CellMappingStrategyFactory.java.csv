commented;modifiers;parameterAmount;loc;comment;code
false;public;1;19;;public CellMappingStrategy getStrategy(Message message) {     CellMappingStrategy strategy = null.     // Check if strategy has been explicitly set.     if (message.getHeader(STRATEGY) != null) {         strategy = DEFAULT_STRATEGIES.get(message.getHeader(STRATEGY, String.class)).     }     if (strategy == null && message.getHeader(STRATEGY_CLASS_NAME) != null) {         strategy = loadStrategyFromClassName(message.getHeader(STRATEGY_CLASS_NAME, String.class)).     }     if (strategy != null) {         return strategy.     }     // Fallback to the default strategy.     return DEFAULT_STRATEGIES.get(HEADER). }
false;private;1;13;;private CellMappingStrategy loadStrategyFromClassName(String strategyClassName) {     // TODO: We ought to use ClassResolver from CamelContext API     ClassLoader classLoader = Thread.currentThread().getContextClassLoader().     if (classLoader != null) {         try {             Class<?> clazz = classLoader.loadClass(strategyClassName).             return (CellMappingStrategy) clazz.newInstance().         } catch (Throwable e) {             LOG.warn("Failed to load HBase cell mapping strategy from class {}.", strategyClassName).         }     }     return null. }
