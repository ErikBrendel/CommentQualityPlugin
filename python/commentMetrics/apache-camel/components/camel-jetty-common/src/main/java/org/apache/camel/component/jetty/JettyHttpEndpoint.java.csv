# id;timestamp;commentText;codeText;commentWords;codeWords
JettyHttpEndpoint -> public void setContinuationTimeout(Long continuationTimeout);1434293741;Allows to set a timeout in millis when using Jetty as consumer (server)._By default Jetty uses 30000. You can use a value of <= 0 to never expire._If a timeout occurs then the request will be expired and Jetty will return back a http error 503 to the client._This option is only in use when using Jetty with the Asynchronous Routing Engine.;public void setContinuationTimeout(Long continuationTimeout) {_        this.continuationTimeout = continuationTimeout__    };allows,to,set,a,timeout,in,millis,when,using,jetty,as,consumer,server,by,default,jetty,uses,30000,you,can,use,a,value,of,0,to,never,expire,if,a,timeout,occurs,then,the,request,will,be,expired,and,jetty,will,return,back,a,http,error,503,to,the,client,this,option,is,only,in,use,when,using,jetty,with,the,asynchronous,routing,engine;public,void,set,continuation,timeout,long,continuation,timeout,this,continuation,timeout,continuation,timeout
JettyHttpEndpoint -> public void setContinuationTimeout(Long continuationTimeout);1437656672;Allows to set a timeout in millis when using Jetty as consumer (server)._By default Jetty uses 30000. You can use a value of <= 0 to never expire._If a timeout occurs then the request will be expired and Jetty will return back a http error 503 to the client._This option is only in use when using Jetty with the Asynchronous Routing Engine.;public void setContinuationTimeout(Long continuationTimeout) {_        this.continuationTimeout = continuationTimeout__    };allows,to,set,a,timeout,in,millis,when,using,jetty,as,consumer,server,by,default,jetty,uses,30000,you,can,use,a,value,of,0,to,never,expire,if,a,timeout,occurs,then,the,request,will,be,expired,and,jetty,will,return,back,a,http,error,503,to,the,client,this,option,is,only,in,use,when,using,jetty,with,the,asynchronous,routing,engine;public,void,set,continuation,timeout,long,continuation,timeout,this,continuation,timeout,continuation,timeout
JettyHttpEndpoint -> public void setContinuationTimeout(Long continuationTimeout);1439455823;Allows to set a timeout in millis when using Jetty as consumer (server)._By default Jetty uses 30000. You can use a value of <= 0 to never expire._If a timeout occurs then the request will be expired and Jetty will return back a http error 503 to the client._This option is only in use when using Jetty with the Asynchronous Routing Engine.;public void setContinuationTimeout(Long continuationTimeout) {_        this.continuationTimeout = continuationTimeout__    };allows,to,set,a,timeout,in,millis,when,using,jetty,as,consumer,server,by,default,jetty,uses,30000,you,can,use,a,value,of,0,to,never,expire,if,a,timeout,occurs,then,the,request,will,be,expired,and,jetty,will,return,back,a,http,error,503,to,the,client,this,option,is,only,in,use,when,using,jetty,with,the,asynchronous,routing,engine;public,void,set,continuation,timeout,long,continuation,timeout,this,continuation,timeout,continuation,timeout
JettyHttpEndpoint -> public void setContinuationTimeout(Long continuationTimeout);1447336366;Allows to set a timeout in millis when using Jetty as consumer (server)._By default Jetty uses 30000. You can use a value of <= 0 to never expire._If a timeout occurs then the request will be expired and Jetty will return back a http error 503 to the client._This option is only in use when using Jetty with the Asynchronous Routing Engine.;public void setContinuationTimeout(Long continuationTimeout) {_        this.continuationTimeout = continuationTimeout__    };allows,to,set,a,timeout,in,millis,when,using,jetty,as,consumer,server,by,default,jetty,uses,30000,you,can,use,a,value,of,0,to,never,expire,if,a,timeout,occurs,then,the,request,will,be,expired,and,jetty,will,return,back,a,http,error,503,to,the,client,this,option,is,only,in,use,when,using,jetty,with,the,asynchronous,routing,engine;public,void,set,continuation,timeout,long,continuation,timeout,this,continuation,timeout,continuation,timeout
JettyHttpEndpoint -> public void setContinuationTimeout(Long continuationTimeout);1451917458;Allows to set a timeout in millis when using Jetty as consumer (server)._By default Jetty uses 30000. You can use a value of <= 0 to never expire._If a timeout occurs then the request will be expired and Jetty will return back a http error 503 to the client._This option is only in use when using Jetty with the Asynchronous Routing Engine.;public void setContinuationTimeout(Long continuationTimeout) {_        this.continuationTimeout = continuationTimeout__    };allows,to,set,a,timeout,in,millis,when,using,jetty,as,consumer,server,by,default,jetty,uses,30000,you,can,use,a,value,of,0,to,never,expire,if,a,timeout,occurs,then,the,request,will,be,expired,and,jetty,will,return,back,a,http,error,503,to,the,client,this,option,is,only,in,use,when,using,jetty,with,the,asynchronous,routing,engine;public,void,set,continuation,timeout,long,continuation,timeout,this,continuation,timeout,continuation,timeout
JettyHttpEndpoint -> public void setContinuationTimeout(Long continuationTimeout);1452015455;Allows to set a timeout in millis when using Jetty as consumer (server)._By default Jetty uses 30000. You can use a value of <= 0 to never expire._If a timeout occurs then the request will be expired and Jetty will return back a http error 503 to the client._This option is only in use when using Jetty with the Asynchronous Routing Engine.;public void setContinuationTimeout(Long continuationTimeout) {_        this.continuationTimeout = continuationTimeout__    };allows,to,set,a,timeout,in,millis,when,using,jetty,as,consumer,server,by,default,jetty,uses,30000,you,can,use,a,value,of,0,to,never,expire,if,a,timeout,occurs,then,the,request,will,be,expired,and,jetty,will,return,back,a,http,error,503,to,the,client,this,option,is,only,in,use,when,using,jetty,with,the,asynchronous,routing,engine;public,void,set,continuation,timeout,long,continuation,timeout,this,continuation,timeout,continuation,timeout
JettyHttpEndpoint -> public void setContinuationTimeout(Long continuationTimeout);1456052964;Allows to set a timeout in millis when using Jetty as consumer (server)._By default Jetty uses 30000. You can use a value of <= 0 to never expire._If a timeout occurs then the request will be expired and Jetty will return back a http error 503 to the client._This option is only in use when using Jetty with the Asynchronous Routing Engine.;public void setContinuationTimeout(Long continuationTimeout) {_        this.continuationTimeout = continuationTimeout__    };allows,to,set,a,timeout,in,millis,when,using,jetty,as,consumer,server,by,default,jetty,uses,30000,you,can,use,a,value,of,0,to,never,expire,if,a,timeout,occurs,then,the,request,will,be,expired,and,jetty,will,return,back,a,http,error,503,to,the,client,this,option,is,only,in,use,when,using,jetty,with,the,asynchronous,routing,engine;public,void,set,continuation,timeout,long,continuation,timeout,this,continuation,timeout,continuation,timeout
JettyHttpEndpoint -> public void setContinuationTimeout(Long continuationTimeout);1458071281;Allows to set a timeout in millis when using Jetty as consumer (server)._By default Jetty uses 30000. You can use a value of <= 0 to never expire._If a timeout occurs then the request will be expired and Jetty will return back a http error 503 to the client._This option is only in use when using Jetty with the Asynchronous Routing Engine.;public void setContinuationTimeout(Long continuationTimeout) {_        this.continuationTimeout = continuationTimeout__    };allows,to,set,a,timeout,in,millis,when,using,jetty,as,consumer,server,by,default,jetty,uses,30000,you,can,use,a,value,of,0,to,never,expire,if,a,timeout,occurs,then,the,request,will,be,expired,and,jetty,will,return,back,a,http,error,503,to,the,client,this,option,is,only,in,use,when,using,jetty,with,the,asynchronous,routing,engine;public,void,set,continuation,timeout,long,continuation,timeout,this,continuation,timeout,continuation,timeout
JettyHttpEndpoint -> public void setContinuationTimeout(Long continuationTimeout);1463303302;Allows to set a timeout in millis when using Jetty as consumer (server)._By default Jetty uses 30000. You can use a value of <= 0 to never expire._If a timeout occurs then the request will be expired and Jetty will return back a http error 503 to the client._This option is only in use when using Jetty with the Asynchronous Routing Engine.;public void setContinuationTimeout(Long continuationTimeout) {_        this.continuationTimeout = continuationTimeout__    };allows,to,set,a,timeout,in,millis,when,using,jetty,as,consumer,server,by,default,jetty,uses,30000,you,can,use,a,value,of,0,to,never,expire,if,a,timeout,occurs,then,the,request,will,be,expired,and,jetty,will,return,back,a,http,error,503,to,the,client,this,option,is,only,in,use,when,using,jetty,with,the,asynchronous,routing,engine;public,void,set,continuation,timeout,long,continuation,timeout,this,continuation,timeout,continuation,timeout
JettyHttpEndpoint -> public void setContinuationTimeout(Long continuationTimeout);1476946116;Allows to set a timeout in millis when using Jetty as consumer (server)._By default Jetty uses 30000. You can use a value of <= 0 to never expire._If a timeout occurs then the request will be expired and Jetty will return back a http error 503 to the client._This option is only in use when using Jetty with the Asynchronous Routing Engine.;public void setContinuationTimeout(Long continuationTimeout) {_        this.continuationTimeout = continuationTimeout__    };allows,to,set,a,timeout,in,millis,when,using,jetty,as,consumer,server,by,default,jetty,uses,30000,you,can,use,a,value,of,0,to,never,expire,if,a,timeout,occurs,then,the,request,will,be,expired,and,jetty,will,return,back,a,http,error,503,to,the,client,this,option,is,only,in,use,when,using,jetty,with,the,asynchronous,routing,engine;public,void,set,continuation,timeout,long,continuation,timeout,this,continuation,timeout,continuation,timeout
JettyHttpEndpoint -> public void setContinuationTimeout(Long continuationTimeout);1491585299;Allows to set a timeout in millis when using Jetty as consumer (server)._By default Jetty uses 30000. You can use a value of <= 0 to never expire._If a timeout occurs then the request will be expired and Jetty will return back a http error 503 to the client._This option is only in use when using Jetty with the Asynchronous Routing Engine.;public void setContinuationTimeout(Long continuationTimeout) {_        this.continuationTimeout = continuationTimeout__    };allows,to,set,a,timeout,in,millis,when,using,jetty,as,consumer,server,by,default,jetty,uses,30000,you,can,use,a,value,of,0,to,never,expire,if,a,timeout,occurs,then,the,request,will,be,expired,and,jetty,will,return,back,a,http,error,503,to,the,client,this,option,is,only,in,use,when,using,jetty,with,the,asynchronous,routing,engine;public,void,set,continuation,timeout,long,continuation,timeout,this,continuation,timeout,continuation,timeout
JettyHttpEndpoint -> public void setContinuationTimeout(Long continuationTimeout);1524001544;Allows to set a timeout in millis when using Jetty as consumer (server)._By default Jetty uses 30000. You can use a value of <= 0 to never expire._If a timeout occurs then the request will be expired and Jetty will return back a http error 503 to the client._This option is only in use when using Jetty with the Asynchronous Routing Engine.;public void setContinuationTimeout(Long continuationTimeout) {_        this.continuationTimeout = continuationTimeout__    };allows,to,set,a,timeout,in,millis,when,using,jetty,as,consumer,server,by,default,jetty,uses,30000,you,can,use,a,value,of,0,to,never,expire,if,a,timeout,occurs,then,the,request,will,be,expired,and,jetty,will,return,back,a,http,error,503,to,the,client,this,option,is,only,in,use,when,using,jetty,with,the,asynchronous,routing,engine;public,void,set,continuation,timeout,long,continuation,timeout,this,continuation,timeout,continuation,timeout
JettyHttpEndpoint -> public void setContinuationTimeout(Long continuationTimeout);1540108161;Allows to set a timeout in millis when using Jetty as consumer (server)._By default Jetty uses 30000. You can use a value of <= 0 to never expire._If a timeout occurs then the request will be expired and Jetty will return back a http error 503 to the client._This option is only in use when using Jetty with the Asynchronous Routing Engine.;public void setContinuationTimeout(Long continuationTimeout) {_        this.continuationTimeout = continuationTimeout__    };allows,to,set,a,timeout,in,millis,when,using,jetty,as,consumer,server,by,default,jetty,uses,30000,you,can,use,a,value,of,0,to,never,expire,if,a,timeout,occurs,then,the,request,will,be,expired,and,jetty,will,return,back,a,http,error,503,to,the,client,this,option,is,only,in,use,when,using,jetty,with,the,asynchronous,routing,engine;public,void,set,continuation,timeout,long,continuation,timeout,this,continuation,timeout,continuation,timeout
JettyHttpEndpoint -> public void setContinuationTimeout(Long continuationTimeout);1540108163;Allows to set a timeout in millis when using Jetty as consumer (server)._By default Jetty uses 30000. You can use a value of <= 0 to never expire._If a timeout occurs then the request will be expired and Jetty will return back a http error 503 to the client._This option is only in use when using Jetty with the Asynchronous Routing Engine.;public void setContinuationTimeout(Long continuationTimeout) {_        this.continuationTimeout = continuationTimeout__    };allows,to,set,a,timeout,in,millis,when,using,jetty,as,consumer,server,by,default,jetty,uses,30000,you,can,use,a,value,of,0,to,never,expire,if,a,timeout,occurs,then,the,request,will,be,expired,and,jetty,will,return,back,a,http,error,503,to,the,client,this,option,is,only,in,use,when,using,jetty,with,the,asynchronous,routing,engine;public,void,set,continuation,timeout,long,continuation,timeout,this,continuation,timeout,continuation,timeout
JettyHttpEndpoint -> public void setContinuationTimeout(Long continuationTimeout);1545220307;Allows to set a timeout in millis when using Jetty as consumer (server)._By default Jetty uses 30000. You can use a value of <= 0 to never expire._If a timeout occurs then the request will be expired and Jetty will return back a http error 503 to the client._This option is only in use when using Jetty with the Asynchronous Routing Engine.;public void setContinuationTimeout(Long continuationTimeout) {_        this.continuationTimeout = continuationTimeout__    };allows,to,set,a,timeout,in,millis,when,using,jetty,as,consumer,server,by,default,jetty,uses,30000,you,can,use,a,value,of,0,to,never,expire,if,a,timeout,occurs,then,the,request,will,be,expired,and,jetty,will,return,back,a,http,error,503,to,the,client,this,option,is,only,in,use,when,using,jetty,with,the,asynchronous,routing,engine;public,void,set,continuation,timeout,long,continuation,timeout,this,continuation,timeout,continuation,timeout
JettyHttpEndpoint -> public void setContinuationTimeout(Long continuationTimeout);1548332772;Allows to set a timeout in millis when using Jetty as consumer (server)._By default Jetty uses 30000. You can use a value of <= 0 to never expire._If a timeout occurs then the request will be expired and Jetty will return back a http error 503 to the client._This option is only in use when using Jetty with the Asynchronous Routing Engine.;public void setContinuationTimeout(Long continuationTimeout) {_        this.continuationTimeout = continuationTimeout__    };allows,to,set,a,timeout,in,millis,when,using,jetty,as,consumer,server,by,default,jetty,uses,30000,you,can,use,a,value,of,0,to,never,expire,if,a,timeout,occurs,then,the,request,will,be,expired,and,jetty,will,return,back,a,http,error,503,to,the,client,this,option,is,only,in,use,when,using,jetty,with,the,asynchronous,routing,engine;public,void,set,continuation,timeout,long,continuation,timeout,this,continuation,timeout,continuation,timeout
JettyHttpEndpoint -> public void setContinuationTimeout(Long continuationTimeout);1548773544;Allows to set a timeout in millis when using Jetty as consumer (server)._By default Jetty uses 30000. You can use a value of <= 0 to never expire._If a timeout occurs then the request will be expired and Jetty will return back a http error 503 to the client._This option is only in use when using Jetty with the Asynchronous Routing Engine.;public void setContinuationTimeout(Long continuationTimeout) {_        this.continuationTimeout = continuationTimeout__    };allows,to,set,a,timeout,in,millis,when,using,jetty,as,consumer,server,by,default,jetty,uses,30000,you,can,use,a,value,of,0,to,never,expire,if,a,timeout,occurs,then,the,request,will,be,expired,and,jetty,will,return,back,a,http,error,503,to,the,client,this,option,is,only,in,use,when,using,jetty,with,the,asynchronous,routing,engine;public,void,set,continuation,timeout,long,continuation,timeout,this,continuation,timeout,continuation,timeout
JettyHttpEndpoint -> public void setHttpClient(HttpClient httpClient);1458071281;Sets a shared {@link HttpClient} to use for all producers_created by this endpoint. By default each producer will_use a new http client, and not share._<p/>_<b>Important: </b> Make sure to handle the lifecycle of the shared_client, such as stopping the client, when it is no longer in use._Camel will call the <tt>start</tt> method on the client to ensure_its started when this endpoint creates a producer._<p/>_This options should only be used in special circumstances.;public void setHttpClient(HttpClient httpClient) {_        this.httpClient = httpClient__    };sets,a,shared,link,http,client,to,use,for,all,producers,created,by,this,endpoint,by,default,each,producer,will,use,a,new,http,client,and,not,share,p,b,important,b,make,sure,to,handle,the,lifecycle,of,the,shared,client,such,as,stopping,the,client,when,it,is,no,longer,in,use,camel,will,call,the,tt,start,tt,method,on,the,client,to,ensure,its,started,when,this,endpoint,creates,a,producer,p,this,options,should,only,be,used,in,special,circumstances;public,void,set,http,client,http,client,http,client,this,http,client,http,client
JettyHttpEndpoint -> public void setHttpClient(HttpClient httpClient);1463303302;Sets a shared {@link HttpClient} to use for all producers_created by this endpoint. By default each producer will_use a new http client, and not share._<p/>_<b>Important: </b> Make sure to handle the lifecycle of the shared_client, such as stopping the client, when it is no longer in use._Camel will call the <tt>start</tt> method on the client to ensure_its started when this endpoint creates a producer._<p/>_This options should only be used in special circumstances.;public void setHttpClient(HttpClient httpClient) {_        this.httpClient = httpClient__    };sets,a,shared,link,http,client,to,use,for,all,producers,created,by,this,endpoint,by,default,each,producer,will,use,a,new,http,client,and,not,share,p,b,important,b,make,sure,to,handle,the,lifecycle,of,the,shared,client,such,as,stopping,the,client,when,it,is,no,longer,in,use,camel,will,call,the,tt,start,tt,method,on,the,client,to,ensure,its,started,when,this,endpoint,creates,a,producer,p,this,options,should,only,be,used,in,special,circumstances;public,void,set,http,client,http,client,http,client,this,http,client,http,client
JettyHttpEndpoint -> public void setHttpClient(HttpClient httpClient);1476946116;Sets a shared {@link HttpClient} to use for all producers_created by this endpoint. By default each producer will_use a new http client, and not share._<p/>_<b>Important: </b> Make sure to handle the lifecycle of the shared_client, such as stopping the client, when it is no longer in use._Camel will call the <tt>start</tt> method on the client to ensure_its started when this endpoint creates a producer._<p/>_This options should only be used in special circumstances.;public void setHttpClient(HttpClient httpClient) {_        this.httpClient = httpClient__    };sets,a,shared,link,http,client,to,use,for,all,producers,created,by,this,endpoint,by,default,each,producer,will,use,a,new,http,client,and,not,share,p,b,important,b,make,sure,to,handle,the,lifecycle,of,the,shared,client,such,as,stopping,the,client,when,it,is,no,longer,in,use,camel,will,call,the,tt,start,tt,method,on,the,client,to,ensure,its,started,when,this,endpoint,creates,a,producer,p,this,options,should,only,be,used,in,special,circumstances;public,void,set,http,client,http,client,http,client,this,http,client,http,client
JettyHttpEndpoint -> public void setHttpClient(HttpClient httpClient);1491585299;Sets a shared {@link HttpClient} to use for all producers_created by this endpoint. By default each producer will_use a new http client, and not share._<p/>_<b>Important: </b> Make sure to handle the lifecycle of the shared_client, such as stopping the client, when it is no longer in use._Camel will call the <tt>start</tt> method on the client to ensure_its started when this endpoint creates a producer._<p/>_This options should only be used in special circumstances.;public void setHttpClient(HttpClient httpClient) {_        this.httpClient = httpClient__    };sets,a,shared,link,http,client,to,use,for,all,producers,created,by,this,endpoint,by,default,each,producer,will,use,a,new,http,client,and,not,share,p,b,important,b,make,sure,to,handle,the,lifecycle,of,the,shared,client,such,as,stopping,the,client,when,it,is,no,longer,in,use,camel,will,call,the,tt,start,tt,method,on,the,client,to,ensure,its,started,when,this,endpoint,creates,a,producer,p,this,options,should,only,be,used,in,special,circumstances;public,void,set,http,client,http,client,http,client,this,http,client,http,client
JettyHttpEndpoint -> public void setHttpClient(HttpClient httpClient);1524001544;Sets a shared {@link HttpClient} to use for all producers_created by this endpoint. By default each producer will_use a new http client, and not share._<p/>_<b>Important: </b> Make sure to handle the lifecycle of the shared_client, such as stopping the client, when it is no longer in use._Camel will call the <tt>start</tt> method on the client to ensure_its started when this endpoint creates a producer._<p/>_This options should only be used in special circumstances.;public void setHttpClient(HttpClient httpClient) {_        this.httpClient = httpClient__    };sets,a,shared,link,http,client,to,use,for,all,producers,created,by,this,endpoint,by,default,each,producer,will,use,a,new,http,client,and,not,share,p,b,important,b,make,sure,to,handle,the,lifecycle,of,the,shared,client,such,as,stopping,the,client,when,it,is,no,longer,in,use,camel,will,call,the,tt,start,tt,method,on,the,client,to,ensure,its,started,when,this,endpoint,creates,a,producer,p,this,options,should,only,be,used,in,special,circumstances;public,void,set,http,client,http,client,http,client,this,http,client,http,client
JettyHttpEndpoint -> public void setHttpClient(HttpClient httpClient);1540108161;Sets a shared {@link HttpClient} to use for all producers_created by this endpoint. By default each producer will_use a new http client, and not share._<p/>_<b>Important: </b> Make sure to handle the lifecycle of the shared_client, such as stopping the client, when it is no longer in use._Camel will call the <tt>start</tt> method on the client to ensure_its started when this endpoint creates a producer._<p/>_This options should only be used in special circumstances.;public void setHttpClient(HttpClient httpClient) {_        this.httpClient = httpClient__    };sets,a,shared,link,http,client,to,use,for,all,producers,created,by,this,endpoint,by,default,each,producer,will,use,a,new,http,client,and,not,share,p,b,important,b,make,sure,to,handle,the,lifecycle,of,the,shared,client,such,as,stopping,the,client,when,it,is,no,longer,in,use,camel,will,call,the,tt,start,tt,method,on,the,client,to,ensure,its,started,when,this,endpoint,creates,a,producer,p,this,options,should,only,be,used,in,special,circumstances;public,void,set,http,client,http,client,http,client,this,http,client,http,client
JettyHttpEndpoint -> public void setHttpClient(HttpClient httpClient);1540108163;Sets a shared {@link HttpClient} to use for all producers_created by this endpoint. By default each producer will_use a new http client, and not share._<p/>_<b>Important: </b> Make sure to handle the lifecycle of the shared_client, such as stopping the client, when it is no longer in use._Camel will call the <tt>start</tt> method on the client to ensure_its started when this endpoint creates a producer._<p/>_This options should only be used in special circumstances.;public void setHttpClient(HttpClient httpClient) {_        this.httpClient = httpClient__    };sets,a,shared,link,http,client,to,use,for,all,producers,created,by,this,endpoint,by,default,each,producer,will,use,a,new,http,client,and,not,share,p,b,important,b,make,sure,to,handle,the,lifecycle,of,the,shared,client,such,as,stopping,the,client,when,it,is,no,longer,in,use,camel,will,call,the,tt,start,tt,method,on,the,client,to,ensure,its,started,when,this,endpoint,creates,a,producer,p,this,options,should,only,be,used,in,special,circumstances;public,void,set,http,client,http,client,http,client,this,http,client,http,client
JettyHttpEndpoint -> public void setHttpClient(HttpClient httpClient);1545220307;Sets a shared {@link HttpClient} to use for all producers_created by this endpoint. By default each producer will_use a new http client, and not share._<p/>_<b>Important: </b> Make sure to handle the lifecycle of the shared_client, such as stopping the client, when it is no longer in use._Camel will call the <tt>start</tt> method on the client to ensure_its started when this endpoint creates a producer._<p/>_This options should only be used in special circumstances.;public void setHttpClient(HttpClient httpClient) {_        this.httpClient = httpClient__    };sets,a,shared,link,http,client,to,use,for,all,producers,created,by,this,endpoint,by,default,each,producer,will,use,a,new,http,client,and,not,share,p,b,important,b,make,sure,to,handle,the,lifecycle,of,the,shared,client,such,as,stopping,the,client,when,it,is,no,longer,in,use,camel,will,call,the,tt,start,tt,method,on,the,client,to,ensure,its,started,when,this,endpoint,creates,a,producer,p,this,options,should,only,be,used,in,special,circumstances;public,void,set,http,client,http,client,http,client,this,http,client,http,client
JettyHttpEndpoint -> public void setHttpClient(HttpClient httpClient);1548332772;Sets a shared {@link HttpClient} to use for all producers_created by this endpoint. By default each producer will_use a new http client, and not share._<p/>_<b>Important: </b> Make sure to handle the lifecycle of the shared_client, such as stopping the client, when it is no longer in use._Camel will call the <tt>start</tt> method on the client to ensure_its started when this endpoint creates a producer._<p/>_This options should only be used in special circumstances.;public void setHttpClient(HttpClient httpClient) {_        this.httpClient = httpClient__    };sets,a,shared,link,http,client,to,use,for,all,producers,created,by,this,endpoint,by,default,each,producer,will,use,a,new,http,client,and,not,share,p,b,important,b,make,sure,to,handle,the,lifecycle,of,the,shared,client,such,as,stopping,the,client,when,it,is,no,longer,in,use,camel,will,call,the,tt,start,tt,method,on,the,client,to,ensure,its,started,when,this,endpoint,creates,a,producer,p,this,options,should,only,be,used,in,special,circumstances;public,void,set,http,client,http,client,http,client,this,http,client,http,client
JettyHttpEndpoint -> public void setHttpClient(HttpClient httpClient);1548773544;Sets a shared {@link HttpClient} to use for all producers_created by this endpoint. By default each producer will_use a new http client, and not share._<p/>_<b>Important: </b> Make sure to handle the lifecycle of the shared_client, such as stopping the client, when it is no longer in use._Camel will call the <tt>start</tt> method on the client to ensure_its started when this endpoint creates a producer._<p/>_This options should only be used in special circumstances.;public void setHttpClient(HttpClient httpClient) {_        this.httpClient = httpClient__    };sets,a,shared,link,http,client,to,use,for,all,producers,created,by,this,endpoint,by,default,each,producer,will,use,a,new,http,client,and,not,share,p,b,important,b,make,sure,to,handle,the,lifecycle,of,the,shared,client,such,as,stopping,the,client,when,it,is,no,longer,in,use,camel,will,call,the,tt,start,tt,method,on,the,client,to,ensure,its,started,when,this,endpoint,creates,a,producer,p,this,options,should,only,be,used,in,special,circumstances;public,void,set,http,client,http,client,http,client,this,http,client,http,client
JettyHttpEndpoint -> public void setJettyBinding(JettyHttpBinding jettyBinding);1451917458;To use a custom JettyHttpBinding which be used to customize how a response should be written for the producer.;public void setJettyBinding(JettyHttpBinding jettyBinding) {_        this.jettyBinding = jettyBinding__    };to,use,a,custom,jetty,http,binding,which,be,used,to,customize,how,a,response,should,be,written,for,the,producer;public,void,set,jetty,binding,jetty,http,binding,jetty,binding,this,jetty,binding,jetty,binding
JettyHttpEndpoint -> public void setJettyBinding(JettyHttpBinding jettyBinding);1452015455;To use a custom JettyHttpBinding which be used to customize how a response should be written for the producer.;public void setJettyBinding(JettyHttpBinding jettyBinding) {_        this.jettyBinding = jettyBinding__    };to,use,a,custom,jetty,http,binding,which,be,used,to,customize,how,a,response,should,be,written,for,the,producer;public,void,set,jetty,binding,jetty,http,binding,jetty,binding,this,jetty,binding,jetty,binding
JettyHttpEndpoint -> public void setJettyBinding(JettyHttpBinding jettyBinding);1456052964;To use a custom JettyHttpBinding which be used to customize how a response should be written for the producer.;public void setJettyBinding(JettyHttpBinding jettyBinding) {_        this.jettyBinding = jettyBinding__    };to,use,a,custom,jetty,http,binding,which,be,used,to,customize,how,a,response,should,be,written,for,the,producer;public,void,set,jetty,binding,jetty,http,binding,jetty,binding,this,jetty,binding,jetty,binding
JettyHttpEndpoint -> public void setJettyBinding(JettyHttpBinding jettyBinding);1458071281;To use a custom JettyHttpBinding which be used to customize how a response should be written for the producer.;public void setJettyBinding(JettyHttpBinding jettyBinding) {_        this.jettyBinding = jettyBinding__    };to,use,a,custom,jetty,http,binding,which,be,used,to,customize,how,a,response,should,be,written,for,the,producer;public,void,set,jetty,binding,jetty,http,binding,jetty,binding,this,jetty,binding,jetty,binding
JettyHttpEndpoint -> public void setJettyBinding(JettyHttpBinding jettyBinding);1463303302;To use a custom JettyHttpBinding which be used to customize how a response should be written for the producer.;public void setJettyBinding(JettyHttpBinding jettyBinding) {_        this.jettyBinding = jettyBinding__    };to,use,a,custom,jetty,http,binding,which,be,used,to,customize,how,a,response,should,be,written,for,the,producer;public,void,set,jetty,binding,jetty,http,binding,jetty,binding,this,jetty,binding,jetty,binding
JettyHttpEndpoint -> public void setJettyBinding(JettyHttpBinding jettyBinding);1476946116;To use a custom JettyHttpBinding which be used to customize how a response should be written for the producer.;public void setJettyBinding(JettyHttpBinding jettyBinding) {_        this.jettyBinding = jettyBinding__    };to,use,a,custom,jetty,http,binding,which,be,used,to,customize,how,a,response,should,be,written,for,the,producer;public,void,set,jetty,binding,jetty,http,binding,jetty,binding,this,jetty,binding,jetty,binding
JettyHttpEndpoint -> public void setJettyBinding(JettyHttpBinding jettyBinding);1491585299;To use a custom JettyHttpBinding which be used to customize how a response should be written for the producer.;public void setJettyBinding(JettyHttpBinding jettyBinding) {_        this.jettyBinding = jettyBinding__    };to,use,a,custom,jetty,http,binding,which,be,used,to,customize,how,a,response,should,be,written,for,the,producer;public,void,set,jetty,binding,jetty,http,binding,jetty,binding,this,jetty,binding,jetty,binding
JettyHttpEndpoint -> public void setJettyBinding(JettyHttpBinding jettyBinding);1524001544;To use a custom JettyHttpBinding which be used to customize how a response should be written for the producer.;public void setJettyBinding(JettyHttpBinding jettyBinding) {_        this.jettyBinding = jettyBinding__    };to,use,a,custom,jetty,http,binding,which,be,used,to,customize,how,a,response,should,be,written,for,the,producer;public,void,set,jetty,binding,jetty,http,binding,jetty,binding,this,jetty,binding,jetty,binding
JettyHttpEndpoint -> public void setJettyBinding(JettyHttpBinding jettyBinding);1540108161;To use a custom JettyHttpBinding which be used to customize how a response should be written for the producer.;public void setJettyBinding(JettyHttpBinding jettyBinding) {_        this.jettyBinding = jettyBinding__    };to,use,a,custom,jetty,http,binding,which,be,used,to,customize,how,a,response,should,be,written,for,the,producer;public,void,set,jetty,binding,jetty,http,binding,jetty,binding,this,jetty,binding,jetty,binding
JettyHttpEndpoint -> public void setJettyBinding(JettyHttpBinding jettyBinding);1540108163;To use a custom JettyHttpBinding which be used to customize how a response should be written for the producer.;public void setJettyBinding(JettyHttpBinding jettyBinding) {_        this.jettyBinding = jettyBinding__    };to,use,a,custom,jetty,http,binding,which,be,used,to,customize,how,a,response,should,be,written,for,the,producer;public,void,set,jetty,binding,jetty,http,binding,jetty,binding,this,jetty,binding,jetty,binding
JettyHttpEndpoint -> public void setJettyBinding(JettyHttpBinding jettyBinding);1545220307;To use a custom JettyHttpBinding which be used to customize how a response should be written for the producer.;public void setJettyBinding(JettyHttpBinding jettyBinding) {_        this.jettyBinding = jettyBinding__    };to,use,a,custom,jetty,http,binding,which,be,used,to,customize,how,a,response,should,be,written,for,the,producer;public,void,set,jetty,binding,jetty,http,binding,jetty,binding,this,jetty,binding,jetty,binding
JettyHttpEndpoint -> public void setJettyBinding(JettyHttpBinding jettyBinding);1548332772;To use a custom JettyHttpBinding which be used to customize how a response should be written for the producer.;public void setJettyBinding(JettyHttpBinding jettyBinding) {_        this.jettyBinding = jettyBinding__    };to,use,a,custom,jetty,http,binding,which,be,used,to,customize,how,a,response,should,be,written,for,the,producer;public,void,set,jetty,binding,jetty,http,binding,jetty,binding,this,jetty,binding,jetty,binding
JettyHttpEndpoint -> public void setJettyBinding(JettyHttpBinding jettyBinding);1548773544;To use a custom JettyHttpBinding which be used to customize how a response should be written for the producer.;public void setJettyBinding(JettyHttpBinding jettyBinding) {_        this.jettyBinding = jettyBinding__    };to,use,a,custom,jetty,http,binding,which,be,used,to,customize,how,a,response,should,be,written,for,the,producer;public,void,set,jetty,binding,jetty,http,binding,jetty,binding,this,jetty,binding,jetty,binding
JettyHttpEndpoint -> public void setFilters(List<Filter> filterList);1451917458;Allows using a custom filters which is putted into a list and can be find in the Registry._Multiple values can be separated by comma.;public void setFilters(List<Filter> filterList) {_        this.filters = filterList__    };allows,using,a,custom,filters,which,is,putted,into,a,list,and,can,be,find,in,the,registry,multiple,values,can,be,separated,by,comma;public,void,set,filters,list,filter,filter,list,this,filters,filter,list
JettyHttpEndpoint -> public void setFilters(List<Filter> filterList);1452015455;Allows using a custom filters which is putted into a list and can be find in the Registry._Multiple values can be separated by comma.;public void setFilters(List<Filter> filterList) {_        this.filters = filterList__    };allows,using,a,custom,filters,which,is,putted,into,a,list,and,can,be,find,in,the,registry,multiple,values,can,be,separated,by,comma;public,void,set,filters,list,filter,filter,list,this,filters,filter,list
JettyHttpEndpoint -> public void setFilters(List<Filter> filterList);1456052964;Allows using a custom filters which is putted into a list and can be find in the Registry._Multiple values can be separated by comma.;public void setFilters(List<Filter> filterList) {_        this.filters = filterList__    };allows,using,a,custom,filters,which,is,putted,into,a,list,and,can,be,find,in,the,registry,multiple,values,can,be,separated,by,comma;public,void,set,filters,list,filter,filter,list,this,filters,filter,list
JettyHttpEndpoint -> public void setFilters(List<Filter> filterList);1458071281;Allows using a custom filters which is putted into a list and can be find in the Registry._Multiple values can be separated by comma.;public void setFilters(List<Filter> filterList) {_        this.filters = filterList__    };allows,using,a,custom,filters,which,is,putted,into,a,list,and,can,be,find,in,the,registry,multiple,values,can,be,separated,by,comma;public,void,set,filters,list,filter,filter,list,this,filters,filter,list
JettyHttpEndpoint -> public void setFilters(List<Filter> filterList);1463303302;Allows using a custom filters which is putted into a list and can be find in the Registry._Multiple values can be separated by comma.;public void setFilters(List<Filter> filterList) {_        this.filters = filterList__    };allows,using,a,custom,filters,which,is,putted,into,a,list,and,can,be,find,in,the,registry,multiple,values,can,be,separated,by,comma;public,void,set,filters,list,filter,filter,list,this,filters,filter,list
JettyHttpEndpoint -> public void setFilters(List<Filter> filterList);1476946116;Allows using a custom filters which is putted into a list and can be find in the Registry._Multiple values can be separated by comma.;public void setFilters(List<Filter> filterList) {_        this.filters = filterList__    };allows,using,a,custom,filters,which,is,putted,into,a,list,and,can,be,find,in,the,registry,multiple,values,can,be,separated,by,comma;public,void,set,filters,list,filter,filter,list,this,filters,filter,list
JettyHttpEndpoint -> public void setFilters(List<Filter> filterList);1491585299;Allows using a custom filters which is putted into a list and can be find in the Registry._Multiple values can be separated by comma.;public void setFilters(List<Filter> filterList) {_        this.filters = filterList__    };allows,using,a,custom,filters,which,is,putted,into,a,list,and,can,be,find,in,the,registry,multiple,values,can,be,separated,by,comma;public,void,set,filters,list,filter,filter,list,this,filters,filter,list
JettyHttpEndpoint -> public void setFilters(List<Filter> filterList);1524001544;Allows using a custom filters which is putted into a list and can be find in the Registry._Multiple values can be separated by comma.;public void setFilters(List<Filter> filterList) {_        this.filters = filterList__    };allows,using,a,custom,filters,which,is,putted,into,a,list,and,can,be,find,in,the,registry,multiple,values,can,be,separated,by,comma;public,void,set,filters,list,filter,filter,list,this,filters,filter,list
JettyHttpEndpoint -> public void setFilters(List<Filter> filterList);1540108161;Allows using a custom filters which is putted into a list and can be find in the Registry._Multiple values can be separated by comma.;public void setFilters(List<Filter> filterList) {_        this.filters = filterList__    };allows,using,a,custom,filters,which,is,putted,into,a,list,and,can,be,find,in,the,registry,multiple,values,can,be,separated,by,comma;public,void,set,filters,list,filter,filter,list,this,filters,filter,list
JettyHttpEndpoint -> public void setFilters(List<Filter> filterList);1540108163;Allows using a custom filters which is putted into a list and can be find in the Registry._Multiple values can be separated by comma.;public void setFilters(List<Filter> filterList) {_        this.filters = filterList__    };allows,using,a,custom,filters,which,is,putted,into,a,list,and,can,be,find,in,the,registry,multiple,values,can,be,separated,by,comma;public,void,set,filters,list,filter,filter,list,this,filters,filter,list
JettyHttpEndpoint -> public void setFilters(List<Filter> filterList);1545220307;Allows using a custom filters which is putted into a list and can be find in the Registry._Multiple values can be separated by comma.;public void setFilters(List<Filter> filterList) {_        this.filters = filterList__    };allows,using,a,custom,filters,which,is,putted,into,a,list,and,can,be,find,in,the,registry,multiple,values,can,be,separated,by,comma;public,void,set,filters,list,filter,filter,list,this,filters,filter,list
JettyHttpEndpoint -> public void setFilters(List<Filter> filterList);1548332772;Allows using a custom filters which is putted into a list and can be find in the Registry._Multiple values can be separated by comma.;public void setFilters(List<Filter> filterList) {_        this.filters = filterList__    };allows,using,a,custom,filters,which,is,putted,into,a,list,and,can,be,find,in,the,registry,multiple,values,can,be,separated,by,comma;public,void,set,filters,list,filter,filter,list,this,filters,filter,list
JettyHttpEndpoint -> public void setFilters(List<Filter> filterList);1548773544;Allows using a custom filters which is putted into a list and can be find in the Registry._Multiple values can be separated by comma.;public void setFilters(List<Filter> filterList) {_        this.filters = filterList__    };allows,using,a,custom,filters,which,is,putted,into,a,list,and,can,be,find,in,the,registry,multiple,values,can,be,separated,by,comma;public,void,set,filters,list,filter,filter,list,this,filters,filter,list
JettyHttpEndpoint -> public void setFilterInitParameters(Map<String, String> filterInitParameters);1456052964;Configuration of the filter init parameters. These parameters will be applied to the filter list before starting the jetty server.;public void setFilterInitParameters(Map<String, String> filterInitParameters) {_        this.filterInitParameters = filterInitParameters__    };configuration,of,the,filter,init,parameters,these,parameters,will,be,applied,to,the,filter,list,before,starting,the,jetty,server;public,void,set,filter,init,parameters,map,string,string,filter,init,parameters,this,filter,init,parameters,filter,init,parameters
JettyHttpEndpoint -> public void setFilterInitParameters(Map<String, String> filterInitParameters);1458071281;Configuration of the filter init parameters. These parameters will be applied to the filter list before starting the jetty server.;public void setFilterInitParameters(Map<String, String> filterInitParameters) {_        this.filterInitParameters = filterInitParameters__    };configuration,of,the,filter,init,parameters,these,parameters,will,be,applied,to,the,filter,list,before,starting,the,jetty,server;public,void,set,filter,init,parameters,map,string,string,filter,init,parameters,this,filter,init,parameters,filter,init,parameters
JettyHttpEndpoint -> public void setFilterInitParameters(Map<String, String> filterInitParameters);1463303302;Configuration of the filter init parameters. These parameters will be applied to the filter list before starting the jetty server.;public void setFilterInitParameters(Map<String, String> filterInitParameters) {_        this.filterInitParameters = filterInitParameters__    };configuration,of,the,filter,init,parameters,these,parameters,will,be,applied,to,the,filter,list,before,starting,the,jetty,server;public,void,set,filter,init,parameters,map,string,string,filter,init,parameters,this,filter,init,parameters,filter,init,parameters
JettyHttpEndpoint -> public void setFilterInitParameters(Map<String, String> filterInitParameters);1476946116;Configuration of the filter init parameters. These parameters will be applied to the filter list before starting the jetty server.;public void setFilterInitParameters(Map<String, String> filterInitParameters) {_        this.filterInitParameters = filterInitParameters__    };configuration,of,the,filter,init,parameters,these,parameters,will,be,applied,to,the,filter,list,before,starting,the,jetty,server;public,void,set,filter,init,parameters,map,string,string,filter,init,parameters,this,filter,init,parameters,filter,init,parameters
JettyHttpEndpoint -> public void setFilterInitParameters(Map<String, String> filterInitParameters);1491585299;Configuration of the filter init parameters. These parameters will be applied to the filter list before starting the jetty server.;public void setFilterInitParameters(Map<String, String> filterInitParameters) {_        this.filterInitParameters = filterInitParameters__    };configuration,of,the,filter,init,parameters,these,parameters,will,be,applied,to,the,filter,list,before,starting,the,jetty,server;public,void,set,filter,init,parameters,map,string,string,filter,init,parameters,this,filter,init,parameters,filter,init,parameters
JettyHttpEndpoint -> public void setFilterInitParameters(Map<String, String> filterInitParameters);1524001544;Configuration of the filter init parameters. These parameters will be applied to the filter list before starting the jetty server.;public void setFilterInitParameters(Map<String, String> filterInitParameters) {_        this.filterInitParameters = filterInitParameters__    };configuration,of,the,filter,init,parameters,these,parameters,will,be,applied,to,the,filter,list,before,starting,the,jetty,server;public,void,set,filter,init,parameters,map,string,string,filter,init,parameters,this,filter,init,parameters,filter,init,parameters
JettyHttpEndpoint -> public void setFilterInitParameters(Map<String, String> filterInitParameters);1540108161;Configuration of the filter init parameters. These parameters will be applied to the filter list before starting the jetty server.;public void setFilterInitParameters(Map<String, String> filterInitParameters) {_        this.filterInitParameters = filterInitParameters__    };configuration,of,the,filter,init,parameters,these,parameters,will,be,applied,to,the,filter,list,before,starting,the,jetty,server;public,void,set,filter,init,parameters,map,string,string,filter,init,parameters,this,filter,init,parameters,filter,init,parameters
JettyHttpEndpoint -> public void setFilterInitParameters(Map<String, String> filterInitParameters);1540108163;Configuration of the filter init parameters. These parameters will be applied to the filter list before starting the jetty server.;public void setFilterInitParameters(Map<String, String> filterInitParameters) {_        this.filterInitParameters = filterInitParameters__    };configuration,of,the,filter,init,parameters,these,parameters,will,be,applied,to,the,filter,list,before,starting,the,jetty,server;public,void,set,filter,init,parameters,map,string,string,filter,init,parameters,this,filter,init,parameters,filter,init,parameters
JettyHttpEndpoint -> public void setFilterInitParameters(Map<String, String> filterInitParameters);1545220307;Configuration of the filter init parameters. These parameters will be applied to the filter list before starting the jetty server.;public void setFilterInitParameters(Map<String, String> filterInitParameters) {_        this.filterInitParameters = filterInitParameters__    };configuration,of,the,filter,init,parameters,these,parameters,will,be,applied,to,the,filter,list,before,starting,the,jetty,server;public,void,set,filter,init,parameters,map,string,string,filter,init,parameters,this,filter,init,parameters,filter,init,parameters
JettyHttpEndpoint -> public void setFilterInitParameters(Map<String, String> filterInitParameters);1548332772;Configuration of the filter init parameters. These parameters will be applied to the filter list before starting the jetty server.;public void setFilterInitParameters(Map<String, String> filterInitParameters) {_        this.filterInitParameters = filterInitParameters__    };configuration,of,the,filter,init,parameters,these,parameters,will,be,applied,to,the,filter,list,before,starting,the,jetty,server;public,void,set,filter,init,parameters,map,string,string,filter,init,parameters,this,filter,init,parameters,filter,init,parameters
JettyHttpEndpoint -> public void setFilterInitParameters(Map<String, String> filterInitParameters);1548773544;Configuration of the filter init parameters. These parameters will be applied to the filter list before starting the jetty server.;public void setFilterInitParameters(Map<String, String> filterInitParameters) {_        this.filterInitParameters = filterInitParameters__    };configuration,of,the,filter,init,parameters,these,parameters,will,be,applied,to,the,filter,list,before,starting,the,jetty,server;public,void,set,filter,init,parameters,map,string,string,filter,init,parameters,this,filter,init,parameters,filter,init,parameters
JettyHttpEndpoint -> public void setEnableMultipartFilter(boolean enableMultipartFilter);1434293741;Whether Jetty org.eclipse.jetty.servlets.MultiPartFilter is enabled or not._You should set this value to false when bridging endpoints, to ensure multipart requests is proxied/bridged as well.;public void setEnableMultipartFilter(boolean enableMultipartFilter) {_        this.enableMultipartFilter = enableMultipartFilter__    };whether,jetty,org,eclipse,jetty,servlets,multi,part,filter,is,enabled,or,not,you,should,set,this,value,to,false,when,bridging,endpoints,to,ensure,multipart,requests,is,proxied,bridged,as,well;public,void,set,enable,multipart,filter,boolean,enable,multipart,filter,this,enable,multipart,filter,enable,multipart,filter
JettyHttpEndpoint -> public void setEnableMultipartFilter(boolean enableMultipartFilter);1437656672;Whether Jetty org.eclipse.jetty.servlets.MultiPartFilter is enabled or not._You should set this value to false when bridging endpoints, to ensure multipart requests is proxied/bridged as well.;public void setEnableMultipartFilter(boolean enableMultipartFilter) {_        this.enableMultipartFilter = enableMultipartFilter__    };whether,jetty,org,eclipse,jetty,servlets,multi,part,filter,is,enabled,or,not,you,should,set,this,value,to,false,when,bridging,endpoints,to,ensure,multipart,requests,is,proxied,bridged,as,well;public,void,set,enable,multipart,filter,boolean,enable,multipart,filter,this,enable,multipart,filter,enable,multipart,filter
JettyHttpEndpoint -> public void setEnableMultipartFilter(boolean enableMultipartFilter);1439455823;Whether Jetty org.eclipse.jetty.servlets.MultiPartFilter is enabled or not._You should set this value to false when bridging endpoints, to ensure multipart requests is proxied/bridged as well.;public void setEnableMultipartFilter(boolean enableMultipartFilter) {_        this.enableMultipartFilter = enableMultipartFilter__    };whether,jetty,org,eclipse,jetty,servlets,multi,part,filter,is,enabled,or,not,you,should,set,this,value,to,false,when,bridging,endpoints,to,ensure,multipart,requests,is,proxied,bridged,as,well;public,void,set,enable,multipart,filter,boolean,enable,multipart,filter,this,enable,multipart,filter,enable,multipart,filter
JettyHttpEndpoint -> public void setEnableMultipartFilter(boolean enableMultipartFilter);1447336366;Whether Jetty org.eclipse.jetty.servlets.MultiPartFilter is enabled or not._You should set this value to false when bridging endpoints, to ensure multipart requests is proxied/bridged as well.;public void setEnableMultipartFilter(boolean enableMultipartFilter) {_        this.enableMultipartFilter = enableMultipartFilter__    };whether,jetty,org,eclipse,jetty,servlets,multi,part,filter,is,enabled,or,not,you,should,set,this,value,to,false,when,bridging,endpoints,to,ensure,multipart,requests,is,proxied,bridged,as,well;public,void,set,enable,multipart,filter,boolean,enable,multipart,filter,this,enable,multipart,filter,enable,multipart,filter
JettyHttpEndpoint -> public void setEnableMultipartFilter(boolean enableMultipartFilter);1451917458;Whether Jetty org.eclipse.jetty.servlets.MultiPartFilter is enabled or not._You should set this value to false when bridging endpoints, to ensure multipart requests is proxied/bridged as well.;public void setEnableMultipartFilter(boolean enableMultipartFilter) {_        this.enableMultipartFilter = enableMultipartFilter__    };whether,jetty,org,eclipse,jetty,servlets,multi,part,filter,is,enabled,or,not,you,should,set,this,value,to,false,when,bridging,endpoints,to,ensure,multipart,requests,is,proxied,bridged,as,well;public,void,set,enable,multipart,filter,boolean,enable,multipart,filter,this,enable,multipart,filter,enable,multipart,filter
JettyHttpEndpoint -> public void setEnableMultipartFilter(boolean enableMultipartFilter);1452015455;Whether Jetty org.eclipse.jetty.servlets.MultiPartFilter is enabled or not._You should set this value to false when bridging endpoints, to ensure multipart requests is proxied/bridged as well.;public void setEnableMultipartFilter(boolean enableMultipartFilter) {_        this.enableMultipartFilter = enableMultipartFilter__    };whether,jetty,org,eclipse,jetty,servlets,multi,part,filter,is,enabled,or,not,you,should,set,this,value,to,false,when,bridging,endpoints,to,ensure,multipart,requests,is,proxied,bridged,as,well;public,void,set,enable,multipart,filter,boolean,enable,multipart,filter,this,enable,multipart,filter,enable,multipart,filter
JettyHttpEndpoint -> public void setEnableMultipartFilter(boolean enableMultipartFilter);1456052964;Whether Jetty org.eclipse.jetty.servlets.MultiPartFilter is enabled or not._You should set this value to false when bridging endpoints, to ensure multipart requests is proxied/bridged as well.;public void setEnableMultipartFilter(boolean enableMultipartFilter) {_        this.enableMultipartFilter = enableMultipartFilter__    };whether,jetty,org,eclipse,jetty,servlets,multi,part,filter,is,enabled,or,not,you,should,set,this,value,to,false,when,bridging,endpoints,to,ensure,multipart,requests,is,proxied,bridged,as,well;public,void,set,enable,multipart,filter,boolean,enable,multipart,filter,this,enable,multipart,filter,enable,multipart,filter
JettyHttpEndpoint -> public void setEnableMultipartFilter(boolean enableMultipartFilter);1458071281;Whether Jetty org.eclipse.jetty.servlets.MultiPartFilter is enabled or not._You should set this value to false when bridging endpoints, to ensure multipart requests is proxied/bridged as well.;public void setEnableMultipartFilter(boolean enableMultipartFilter) {_        this.enableMultipartFilter = enableMultipartFilter__    };whether,jetty,org,eclipse,jetty,servlets,multi,part,filter,is,enabled,or,not,you,should,set,this,value,to,false,when,bridging,endpoints,to,ensure,multipart,requests,is,proxied,bridged,as,well;public,void,set,enable,multipart,filter,boolean,enable,multipart,filter,this,enable,multipart,filter,enable,multipart,filter
JettyHttpEndpoint -> public void setEnableMultipartFilter(boolean enableMultipartFilter);1463303302;Whether Jetty org.eclipse.jetty.servlets.MultiPartFilter is enabled or not._You should set this value to false when bridging endpoints, to ensure multipart requests is proxied/bridged as well.;public void setEnableMultipartFilter(boolean enableMultipartFilter) {_        this.enableMultipartFilter = enableMultipartFilter__    };whether,jetty,org,eclipse,jetty,servlets,multi,part,filter,is,enabled,or,not,you,should,set,this,value,to,false,when,bridging,endpoints,to,ensure,multipart,requests,is,proxied,bridged,as,well;public,void,set,enable,multipart,filter,boolean,enable,multipart,filter,this,enable,multipart,filter,enable,multipart,filter
JettyHttpEndpoint -> public void setEnableMultipartFilter(boolean enableMultipartFilter);1476946116;Whether Jetty org.eclipse.jetty.servlets.MultiPartFilter is enabled or not._You should set this value to false when bridging endpoints, to ensure multipart requests is proxied/bridged as well.;public void setEnableMultipartFilter(boolean enableMultipartFilter) {_        this.enableMultipartFilter = enableMultipartFilter__    };whether,jetty,org,eclipse,jetty,servlets,multi,part,filter,is,enabled,or,not,you,should,set,this,value,to,false,when,bridging,endpoints,to,ensure,multipart,requests,is,proxied,bridged,as,well;public,void,set,enable,multipart,filter,boolean,enable,multipart,filter,this,enable,multipart,filter,enable,multipart,filter
JettyHttpEndpoint -> public void setEnableMultipartFilter(boolean enableMultipartFilter);1491585299;Whether Jetty org.eclipse.jetty.servlets.MultiPartFilter is enabled or not._You should set this value to false when bridging endpoints, to ensure multipart requests is proxied/bridged as well.;public void setEnableMultipartFilter(boolean enableMultipartFilter) {_        this.enableMultipartFilter = enableMultipartFilter__    };whether,jetty,org,eclipse,jetty,servlets,multi,part,filter,is,enabled,or,not,you,should,set,this,value,to,false,when,bridging,endpoints,to,ensure,multipart,requests,is,proxied,bridged,as,well;public,void,set,enable,multipart,filter,boolean,enable,multipart,filter,this,enable,multipart,filter,enable,multipart,filter
JettyHttpEndpoint -> public void setEnableMultipartFilter(boolean enableMultipartFilter);1524001544;Whether Jetty org.eclipse.jetty.servlets.MultiPartFilter is enabled or not._You should set this value to false when bridging endpoints, to ensure multipart requests is proxied/bridged as well.;public void setEnableMultipartFilter(boolean enableMultipartFilter) {_        this.enableMultipartFilter = enableMultipartFilter__    };whether,jetty,org,eclipse,jetty,servlets,multi,part,filter,is,enabled,or,not,you,should,set,this,value,to,false,when,bridging,endpoints,to,ensure,multipart,requests,is,proxied,bridged,as,well;public,void,set,enable,multipart,filter,boolean,enable,multipart,filter,this,enable,multipart,filter,enable,multipart,filter
JettyHttpEndpoint -> public void setEnableMultipartFilter(boolean enableMultipartFilter);1540108161;Whether Jetty org.eclipse.jetty.servlets.MultiPartFilter is enabled or not._You should set this value to false when bridging endpoints, to ensure multipart requests is proxied/bridged as well.;public void setEnableMultipartFilter(boolean enableMultipartFilter) {_        this.enableMultipartFilter = enableMultipartFilter__    };whether,jetty,org,eclipse,jetty,servlets,multi,part,filter,is,enabled,or,not,you,should,set,this,value,to,false,when,bridging,endpoints,to,ensure,multipart,requests,is,proxied,bridged,as,well;public,void,set,enable,multipart,filter,boolean,enable,multipart,filter,this,enable,multipart,filter,enable,multipart,filter
JettyHttpEndpoint -> public void setEnableMultipartFilter(boolean enableMultipartFilter);1540108163;Whether Jetty org.eclipse.jetty.servlets.MultiPartFilter is enabled or not._You should set this value to false when bridging endpoints, to ensure multipart requests is proxied/bridged as well.;public void setEnableMultipartFilter(boolean enableMultipartFilter) {_        this.enableMultipartFilter = enableMultipartFilter__    };whether,jetty,org,eclipse,jetty,servlets,multi,part,filter,is,enabled,or,not,you,should,set,this,value,to,false,when,bridging,endpoints,to,ensure,multipart,requests,is,proxied,bridged,as,well;public,void,set,enable,multipart,filter,boolean,enable,multipart,filter,this,enable,multipart,filter,enable,multipart,filter
JettyHttpEndpoint -> public void setEnableMultipartFilter(boolean enableMultipartFilter);1545220307;Whether Jetty org.eclipse.jetty.servlets.MultiPartFilter is enabled or not._You should set this value to false when bridging endpoints, to ensure multipart requests is proxied/bridged as well.;public void setEnableMultipartFilter(boolean enableMultipartFilter) {_        this.enableMultipartFilter = enableMultipartFilter__    };whether,jetty,org,eclipse,jetty,servlets,multi,part,filter,is,enabled,or,not,you,should,set,this,value,to,false,when,bridging,endpoints,to,ensure,multipart,requests,is,proxied,bridged,as,well;public,void,set,enable,multipart,filter,boolean,enable,multipart,filter,this,enable,multipart,filter,enable,multipart,filter
JettyHttpEndpoint -> public void setEnableMultipartFilter(boolean enableMultipartFilter);1548332772;Whether Jetty org.eclipse.jetty.servlets.MultiPartFilter is enabled or not._You should set this value to false when bridging endpoints, to ensure multipart requests is proxied/bridged as well.;public void setEnableMultipartFilter(boolean enableMultipartFilter) {_        this.enableMultipartFilter = enableMultipartFilter__    };whether,jetty,org,eclipse,jetty,servlets,multi,part,filter,is,enabled,or,not,you,should,set,this,value,to,false,when,bridging,endpoints,to,ensure,multipart,requests,is,proxied,bridged,as,well;public,void,set,enable,multipart,filter,boolean,enable,multipart,filter,this,enable,multipart,filter,enable,multipart,filter
JettyHttpEndpoint -> public void setEnableMultipartFilter(boolean enableMultipartFilter);1548773544;Whether Jetty org.eclipse.jetty.servlets.MultiPartFilter is enabled or not._You should set this value to false when bridging endpoints, to ensure multipart requests is proxied/bridged as well.;public void setEnableMultipartFilter(boolean enableMultipartFilter) {_        this.enableMultipartFilter = enableMultipartFilter__    };whether,jetty,org,eclipse,jetty,servlets,multi,part,filter,is,enabled,or,not,you,should,set,this,value,to,false,when,bridging,endpoints,to,ensure,multipart,requests,is,proxied,bridged,as,well;public,void,set,enable,multipart,filter,boolean,enable,multipart,filter,this,enable,multipart,filter,enable,multipart,filter
JettyHttpEndpoint -> public void setSessionSupport(boolean support);1434293741;Specifies whether to enable the session manager on the server side of Jetty.;public void setSessionSupport(boolean support) {_        sessionSupport = support__    };specifies,whether,to,enable,the,session,manager,on,the,server,side,of,jetty;public,void,set,session,support,boolean,support,session,support,support
JettyHttpEndpoint -> public void setSessionSupport(boolean support);1437656672;Specifies whether to enable the session manager on the server side of Jetty.;public void setSessionSupport(boolean support) {_        sessionSupport = support__    };specifies,whether,to,enable,the,session,manager,on,the,server,side,of,jetty;public,void,set,session,support,boolean,support,session,support,support
JettyHttpEndpoint -> public void setSessionSupport(boolean support);1439455823;Specifies whether to enable the session manager on the server side of Jetty.;public void setSessionSupport(boolean support) {_        sessionSupport = support__    };specifies,whether,to,enable,the,session,manager,on,the,server,side,of,jetty;public,void,set,session,support,boolean,support,session,support,support
JettyHttpEndpoint -> public void setSessionSupport(boolean support);1447336366;Specifies whether to enable the session manager on the server side of Jetty.;public void setSessionSupport(boolean support) {_        sessionSupport = support__    };specifies,whether,to,enable,the,session,manager,on,the,server,side,of,jetty;public,void,set,session,support,boolean,support,session,support,support
JettyHttpEndpoint -> public void setSessionSupport(boolean support);1451917458;Specifies whether to enable the session manager on the server side of Jetty.;public void setSessionSupport(boolean support) {_        sessionSupport = support__    };specifies,whether,to,enable,the,session,manager,on,the,server,side,of,jetty;public,void,set,session,support,boolean,support,session,support,support
JettyHttpEndpoint -> public void setSessionSupport(boolean support);1452015455;Specifies whether to enable the session manager on the server side of Jetty.;public void setSessionSupport(boolean support) {_        sessionSupport = support__    };specifies,whether,to,enable,the,session,manager,on,the,server,side,of,jetty;public,void,set,session,support,boolean,support,session,support,support
JettyHttpEndpoint -> public void setSessionSupport(boolean support);1456052964;Specifies whether to enable the session manager on the server side of Jetty.;public void setSessionSupport(boolean support) {_        sessionSupport = support__    };specifies,whether,to,enable,the,session,manager,on,the,server,side,of,jetty;public,void,set,session,support,boolean,support,session,support,support
JettyHttpEndpoint -> public void setSessionSupport(boolean support);1458071281;Specifies whether to enable the session manager on the server side of Jetty.;public void setSessionSupport(boolean support) {_        sessionSupport = support__    };specifies,whether,to,enable,the,session,manager,on,the,server,side,of,jetty;public,void,set,session,support,boolean,support,session,support,support
JettyHttpEndpoint -> public void setSessionSupport(boolean support);1463303302;Specifies whether to enable the session manager on the server side of Jetty.;public void setSessionSupport(boolean support) {_        sessionSupport = support__    };specifies,whether,to,enable,the,session,manager,on,the,server,side,of,jetty;public,void,set,session,support,boolean,support,session,support,support
JettyHttpEndpoint -> public void setSessionSupport(boolean support);1476946116;Specifies whether to enable the session manager on the server side of Jetty.;public void setSessionSupport(boolean support) {_        sessionSupport = support__    };specifies,whether,to,enable,the,session,manager,on,the,server,side,of,jetty;public,void,set,session,support,boolean,support,session,support,support
JettyHttpEndpoint -> public void setSessionSupport(boolean support);1491585299;Specifies whether to enable the session manager on the server side of Jetty.;public void setSessionSupport(boolean support) {_        sessionSupport = support__    };specifies,whether,to,enable,the,session,manager,on,the,server,side,of,jetty;public,void,set,session,support,boolean,support,session,support,support
JettyHttpEndpoint -> public void setSessionSupport(boolean support);1524001544;Specifies whether to enable the session manager on the server side of Jetty.;public void setSessionSupport(boolean support) {_        sessionSupport = support__    };specifies,whether,to,enable,the,session,manager,on,the,server,side,of,jetty;public,void,set,session,support,boolean,support,session,support,support
JettyHttpEndpoint -> public void setSessionSupport(boolean support);1540108161;Specifies whether to enable the session manager on the server side of Jetty.;public void setSessionSupport(boolean support) {_        sessionSupport = support__    };specifies,whether,to,enable,the,session,manager,on,the,server,side,of,jetty;public,void,set,session,support,boolean,support,session,support,support
JettyHttpEndpoint -> public void setSessionSupport(boolean support);1540108163;Specifies whether to enable the session manager on the server side of Jetty.;public void setSessionSupport(boolean support) {_        sessionSupport = support__    };specifies,whether,to,enable,the,session,manager,on,the,server,side,of,jetty;public,void,set,session,support,boolean,support,session,support,support
JettyHttpEndpoint -> public void setSessionSupport(boolean support);1545220307;Specifies whether to enable the session manager on the server side of Jetty.;public void setSessionSupport(boolean support) {_        sessionSupport = support__    };specifies,whether,to,enable,the,session,manager,on,the,server,side,of,jetty;public,void,set,session,support,boolean,support,session,support,support
JettyHttpEndpoint -> public void setSessionSupport(boolean support);1548332772;Specifies whether to enable the session manager on the server side of Jetty.;public void setSessionSupport(boolean support) {_        sessionSupport = support__    };specifies,whether,to,enable,the,session,manager,on,the,server,side,of,jetty;public,void,set,session,support,boolean,support,session,support,support
JettyHttpEndpoint -> public void setSessionSupport(boolean support);1548773544;Specifies whether to enable the session manager on the server side of Jetty.;public void setSessionSupport(boolean support) {_        sessionSupport = support__    };specifies,whether,to,enable,the,session,manager,on,the,server,side,of,jetty;public,void,set,session,support,boolean,support,session,support,support
JettyHttpEndpoint -> public void setHttpClientMinThreads(Integer httpClientMinThreads);1434293741;To set a value for minimum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to min 8 threads used in Jettys thread pool.;public void setHttpClientMinThreads(Integer httpClientMinThreads) {_        this.httpClientMinThreads = httpClientMinThreads__    };to,set,a,value,for,minimum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,min,8,threads,used,in,jettys,thread,pool;public,void,set,http,client,min,threads,integer,http,client,min,threads,this,http,client,min,threads,http,client,min,threads
JettyHttpEndpoint -> public void setHttpClientMinThreads(Integer httpClientMinThreads);1437656672;To set a value for minimum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to min 8 threads used in Jettys thread pool.;public void setHttpClientMinThreads(Integer httpClientMinThreads) {_        this.httpClientMinThreads = httpClientMinThreads__    };to,set,a,value,for,minimum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,min,8,threads,used,in,jettys,thread,pool;public,void,set,http,client,min,threads,integer,http,client,min,threads,this,http,client,min,threads,http,client,min,threads
JettyHttpEndpoint -> public void setHttpClientMinThreads(Integer httpClientMinThreads);1439455823;To set a value for minimum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to min 8 threads used in Jettys thread pool.;public void setHttpClientMinThreads(Integer httpClientMinThreads) {_        this.httpClientMinThreads = httpClientMinThreads__    };to,set,a,value,for,minimum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,min,8,threads,used,in,jettys,thread,pool;public,void,set,http,client,min,threads,integer,http,client,min,threads,this,http,client,min,threads,http,client,min,threads
JettyHttpEndpoint -> public void setHttpClientMinThreads(Integer httpClientMinThreads);1447336366;To set a value for minimum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to min 8 threads used in Jettys thread pool.;public void setHttpClientMinThreads(Integer httpClientMinThreads) {_        this.httpClientMinThreads = httpClientMinThreads__    };to,set,a,value,for,minimum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,min,8,threads,used,in,jettys,thread,pool;public,void,set,http,client,min,threads,integer,http,client,min,threads,this,http,client,min,threads,http,client,min,threads
JettyHttpEndpoint -> public void setHttpClientMinThreads(Integer httpClientMinThreads);1451917458;To set a value for minimum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to min 8 threads used in Jettys thread pool.;public void setHttpClientMinThreads(Integer httpClientMinThreads) {_        this.httpClientMinThreads = httpClientMinThreads__    };to,set,a,value,for,minimum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,min,8,threads,used,in,jettys,thread,pool;public,void,set,http,client,min,threads,integer,http,client,min,threads,this,http,client,min,threads,http,client,min,threads
JettyHttpEndpoint -> public void setHttpClientMinThreads(Integer httpClientMinThreads);1452015455;To set a value for minimum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to min 8 threads used in Jettys thread pool.;public void setHttpClientMinThreads(Integer httpClientMinThreads) {_        this.httpClientMinThreads = httpClientMinThreads__    };to,set,a,value,for,minimum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,min,8,threads,used,in,jettys,thread,pool;public,void,set,http,client,min,threads,integer,http,client,min,threads,this,http,client,min,threads,http,client,min,threads
JettyHttpEndpoint -> public void setHttpClientMinThreads(Integer httpClientMinThreads);1456052964;To set a value for minimum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to min 8 threads used in Jettys thread pool.;public void setHttpClientMinThreads(Integer httpClientMinThreads) {_        this.httpClientMinThreads = httpClientMinThreads__    };to,set,a,value,for,minimum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,min,8,threads,used,in,jettys,thread,pool;public,void,set,http,client,min,threads,integer,http,client,min,threads,this,http,client,min,threads,http,client,min,threads
JettyHttpEndpoint -> public void setHttpClientMinThreads(Integer httpClientMinThreads);1458071281;To set a value for minimum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to min 8 threads used in Jettys thread pool.;public void setHttpClientMinThreads(Integer httpClientMinThreads) {_        this.httpClientMinThreads = httpClientMinThreads__    };to,set,a,value,for,minimum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,min,8,threads,used,in,jettys,thread,pool;public,void,set,http,client,min,threads,integer,http,client,min,threads,this,http,client,min,threads,http,client,min,threads
JettyHttpEndpoint -> public void setHttpClientMinThreads(Integer httpClientMinThreads);1463303302;To set a value for minimum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to min 8 threads used in Jettys thread pool.;public void setHttpClientMinThreads(Integer httpClientMinThreads) {_        this.httpClientMinThreads = httpClientMinThreads__    };to,set,a,value,for,minimum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,min,8,threads,used,in,jettys,thread,pool;public,void,set,http,client,min,threads,integer,http,client,min,threads,this,http,client,min,threads,http,client,min,threads
JettyHttpEndpoint -> public void setHttpClientMinThreads(Integer httpClientMinThreads);1476946116;To set a value for minimum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to min 8 threads used in Jettys thread pool.;public void setHttpClientMinThreads(Integer httpClientMinThreads) {_        this.httpClientMinThreads = httpClientMinThreads__    };to,set,a,value,for,minimum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,min,8,threads,used,in,jettys,thread,pool;public,void,set,http,client,min,threads,integer,http,client,min,threads,this,http,client,min,threads,http,client,min,threads
JettyHttpEndpoint -> public void setHttpClientMinThreads(Integer httpClientMinThreads);1491585299;To set a value for minimum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to min 8 threads used in Jettys thread pool.;public void setHttpClientMinThreads(Integer httpClientMinThreads) {_        this.httpClientMinThreads = httpClientMinThreads__    };to,set,a,value,for,minimum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,min,8,threads,used,in,jettys,thread,pool;public,void,set,http,client,min,threads,integer,http,client,min,threads,this,http,client,min,threads,http,client,min,threads
JettyHttpEndpoint -> public void setHttpClientMinThreads(Integer httpClientMinThreads);1524001544;To set a value for minimum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to min 8 threads used in Jettys thread pool.;public void setHttpClientMinThreads(Integer httpClientMinThreads) {_        this.httpClientMinThreads = httpClientMinThreads__    };to,set,a,value,for,minimum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,min,8,threads,used,in,jettys,thread,pool;public,void,set,http,client,min,threads,integer,http,client,min,threads,this,http,client,min,threads,http,client,min,threads
JettyHttpEndpoint -> public void setHttpClientMinThreads(Integer httpClientMinThreads);1540108161;To set a value for minimum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to min 8 threads used in Jettys thread pool.;public void setHttpClientMinThreads(Integer httpClientMinThreads) {_        this.httpClientMinThreads = httpClientMinThreads__    };to,set,a,value,for,minimum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,min,8,threads,used,in,jettys,thread,pool;public,void,set,http,client,min,threads,integer,http,client,min,threads,this,http,client,min,threads,http,client,min,threads
JettyHttpEndpoint -> public void setHttpClientMinThreads(Integer httpClientMinThreads);1540108163;To set a value for minimum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to min 8 threads used in Jettys thread pool.;public void setHttpClientMinThreads(Integer httpClientMinThreads) {_        this.httpClientMinThreads = httpClientMinThreads__    };to,set,a,value,for,minimum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,min,8,threads,used,in,jettys,thread,pool;public,void,set,http,client,min,threads,integer,http,client,min,threads,this,http,client,min,threads,http,client,min,threads
JettyHttpEndpoint -> public void setHttpClientMinThreads(Integer httpClientMinThreads);1545220307;To set a value for minimum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to min 8 threads used in Jettys thread pool.;public void setHttpClientMinThreads(Integer httpClientMinThreads) {_        this.httpClientMinThreads = httpClientMinThreads__    };to,set,a,value,for,minimum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,min,8,threads,used,in,jettys,thread,pool;public,void,set,http,client,min,threads,integer,http,client,min,threads,this,http,client,min,threads,http,client,min,threads
JettyHttpEndpoint -> public void setHttpClientMinThreads(Integer httpClientMinThreads);1548332772;To set a value for minimum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to min 8 threads used in Jettys thread pool.;public void setHttpClientMinThreads(Integer httpClientMinThreads) {_        this.httpClientMinThreads = httpClientMinThreads__    };to,set,a,value,for,minimum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,min,8,threads,used,in,jettys,thread,pool;public,void,set,http,client,min,threads,integer,http,client,min,threads,this,http,client,min,threads,http,client,min,threads
JettyHttpEndpoint -> public void setHttpClientMinThreads(Integer httpClientMinThreads);1548773544;To set a value for minimum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to min 8 threads used in Jettys thread pool.;public void setHttpClientMinThreads(Integer httpClientMinThreads) {_        this.httpClientMinThreads = httpClientMinThreads__    };to,set,a,value,for,minimum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,min,8,threads,used,in,jettys,thread,pool;public,void,set,http,client,min,threads,integer,http,client,min,threads,this,http,client,min,threads,http,client,min,threads
JettyHttpEndpoint -> public void setEnableJmx(boolean enableJmx);1434293741;If this option is true, Jetty JMX support will be enabled for this endpoint. See Jetty JMX support for more details.;public void setEnableJmx(boolean enableJmx) {_        this.enableJmx = enableJmx__    };if,this,option,is,true,jetty,jmx,support,will,be,enabled,for,this,endpoint,see,jetty,jmx,support,for,more,details;public,void,set,enable,jmx,boolean,enable,jmx,this,enable,jmx,enable,jmx
JettyHttpEndpoint -> public void setEnableJmx(boolean enableJmx);1437656672;If this option is true, Jetty JMX support will be enabled for this endpoint. See Jetty JMX support for more details.;public void setEnableJmx(boolean enableJmx) {_        this.enableJmx = enableJmx__    };if,this,option,is,true,jetty,jmx,support,will,be,enabled,for,this,endpoint,see,jetty,jmx,support,for,more,details;public,void,set,enable,jmx,boolean,enable,jmx,this,enable,jmx,enable,jmx
JettyHttpEndpoint -> public void setEnableJmx(boolean enableJmx);1439455823;If this option is true, Jetty JMX support will be enabled for this endpoint. See Jetty JMX support for more details.;public void setEnableJmx(boolean enableJmx) {_        this.enableJmx = enableJmx__    };if,this,option,is,true,jetty,jmx,support,will,be,enabled,for,this,endpoint,see,jetty,jmx,support,for,more,details;public,void,set,enable,jmx,boolean,enable,jmx,this,enable,jmx,enable,jmx
JettyHttpEndpoint -> public void setEnableJmx(boolean enableJmx);1447336366;If this option is true, Jetty JMX support will be enabled for this endpoint. See Jetty JMX support for more details.;public void setEnableJmx(boolean enableJmx) {_        this.enableJmx = enableJmx__    };if,this,option,is,true,jetty,jmx,support,will,be,enabled,for,this,endpoint,see,jetty,jmx,support,for,more,details;public,void,set,enable,jmx,boolean,enable,jmx,this,enable,jmx,enable,jmx
JettyHttpEndpoint -> public void setEnableJmx(boolean enableJmx);1451917458;If this option is true, Jetty JMX support will be enabled for this endpoint. See Jetty JMX support for more details.;public void setEnableJmx(boolean enableJmx) {_        this.enableJmx = enableJmx__    };if,this,option,is,true,jetty,jmx,support,will,be,enabled,for,this,endpoint,see,jetty,jmx,support,for,more,details;public,void,set,enable,jmx,boolean,enable,jmx,this,enable,jmx,enable,jmx
JettyHttpEndpoint -> public void setEnableJmx(boolean enableJmx);1452015455;If this option is true, Jetty JMX support will be enabled for this endpoint. See Jetty JMX support for more details.;public void setEnableJmx(boolean enableJmx) {_        this.enableJmx = enableJmx__    };if,this,option,is,true,jetty,jmx,support,will,be,enabled,for,this,endpoint,see,jetty,jmx,support,for,more,details;public,void,set,enable,jmx,boolean,enable,jmx,this,enable,jmx,enable,jmx
JettyHttpEndpoint -> public void setEnableJmx(boolean enableJmx);1456052964;If this option is true, Jetty JMX support will be enabled for this endpoint. See Jetty JMX support for more details.;public void setEnableJmx(boolean enableJmx) {_        this.enableJmx = enableJmx__    };if,this,option,is,true,jetty,jmx,support,will,be,enabled,for,this,endpoint,see,jetty,jmx,support,for,more,details;public,void,set,enable,jmx,boolean,enable,jmx,this,enable,jmx,enable,jmx
JettyHttpEndpoint -> public void setEnableJmx(boolean enableJmx);1458071281;If this option is true, Jetty JMX support will be enabled for this endpoint. See Jetty JMX support for more details.;public void setEnableJmx(boolean enableJmx) {_        this.enableJmx = enableJmx__    };if,this,option,is,true,jetty,jmx,support,will,be,enabled,for,this,endpoint,see,jetty,jmx,support,for,more,details;public,void,set,enable,jmx,boolean,enable,jmx,this,enable,jmx,enable,jmx
JettyHttpEndpoint -> public void setEnableJmx(boolean enableJmx);1463303302;If this option is true, Jetty JMX support will be enabled for this endpoint. See Jetty JMX support for more details.;public void setEnableJmx(boolean enableJmx) {_        this.enableJmx = enableJmx__    };if,this,option,is,true,jetty,jmx,support,will,be,enabled,for,this,endpoint,see,jetty,jmx,support,for,more,details;public,void,set,enable,jmx,boolean,enable,jmx,this,enable,jmx,enable,jmx
JettyHttpEndpoint -> public void setEnableJmx(boolean enableJmx);1476946116;If this option is true, Jetty JMX support will be enabled for this endpoint. See Jetty JMX support for more details.;public void setEnableJmx(boolean enableJmx) {_        this.enableJmx = enableJmx__    };if,this,option,is,true,jetty,jmx,support,will,be,enabled,for,this,endpoint,see,jetty,jmx,support,for,more,details;public,void,set,enable,jmx,boolean,enable,jmx,this,enable,jmx,enable,jmx
JettyHttpEndpoint -> public void setEnableJmx(boolean enableJmx);1491585299;If this option is true, Jetty JMX support will be enabled for this endpoint. See Jetty JMX support for more details.;public void setEnableJmx(boolean enableJmx) {_        this.enableJmx = enableJmx__    };if,this,option,is,true,jetty,jmx,support,will,be,enabled,for,this,endpoint,see,jetty,jmx,support,for,more,details;public,void,set,enable,jmx,boolean,enable,jmx,this,enable,jmx,enable,jmx
JettyHttpEndpoint -> public void setEnableJmx(boolean enableJmx);1524001544;If this option is true, Jetty JMX support will be enabled for this endpoint. See Jetty JMX support for more details.;public void setEnableJmx(boolean enableJmx) {_        this.enableJmx = enableJmx__    };if,this,option,is,true,jetty,jmx,support,will,be,enabled,for,this,endpoint,see,jetty,jmx,support,for,more,details;public,void,set,enable,jmx,boolean,enable,jmx,this,enable,jmx,enable,jmx
JettyHttpEndpoint -> public void setEnableJmx(boolean enableJmx);1540108161;If this option is true, Jetty JMX support will be enabled for this endpoint. See Jetty JMX support for more details.;public void setEnableJmx(boolean enableJmx) {_        this.enableJmx = enableJmx__    };if,this,option,is,true,jetty,jmx,support,will,be,enabled,for,this,endpoint,see,jetty,jmx,support,for,more,details;public,void,set,enable,jmx,boolean,enable,jmx,this,enable,jmx,enable,jmx
JettyHttpEndpoint -> public void setEnableJmx(boolean enableJmx);1540108163;If this option is true, Jetty JMX support will be enabled for this endpoint. See Jetty JMX support for more details.;public void setEnableJmx(boolean enableJmx) {_        this.enableJmx = enableJmx__    };if,this,option,is,true,jetty,jmx,support,will,be,enabled,for,this,endpoint,see,jetty,jmx,support,for,more,details;public,void,set,enable,jmx,boolean,enable,jmx,this,enable,jmx,enable,jmx
JettyHttpEndpoint -> public void setEnableJmx(boolean enableJmx);1545220307;If this option is true, Jetty JMX support will be enabled for this endpoint. See Jetty JMX support for more details.;public void setEnableJmx(boolean enableJmx) {_        this.enableJmx = enableJmx__    };if,this,option,is,true,jetty,jmx,support,will,be,enabled,for,this,endpoint,see,jetty,jmx,support,for,more,details;public,void,set,enable,jmx,boolean,enable,jmx,this,enable,jmx,enable,jmx
JettyHttpEndpoint -> public void setEnableJmx(boolean enableJmx);1548332772;If this option is true, Jetty JMX support will be enabled for this endpoint. See Jetty JMX support for more details.;public void setEnableJmx(boolean enableJmx) {_        this.enableJmx = enableJmx__    };if,this,option,is,true,jetty,jmx,support,will,be,enabled,for,this,endpoint,see,jetty,jmx,support,for,more,details;public,void,set,enable,jmx,boolean,enable,jmx,this,enable,jmx,enable,jmx
JettyHttpEndpoint -> public void setEnableJmx(boolean enableJmx);1548773544;If this option is true, Jetty JMX support will be enabled for this endpoint. See Jetty JMX support for more details.;public void setEnableJmx(boolean enableJmx) {_        this.enableJmx = enableJmx__    };if,this,option,is,true,jetty,jmx,support,will,be,enabled,for,this,endpoint,see,jetty,jmx,support,for,more,details;public,void,set,enable,jmx,boolean,enable,jmx,this,enable,jmx,enable,jmx
JettyHttpEndpoint -> public void setCookieHandler(CookieHandler cookieHandler);1476946116;Configure a cookie handler to maintain a HTTP session;public void setCookieHandler(CookieHandler cookieHandler) {_        this.cookieHandler = cookieHandler__    };configure,a,cookie,handler,to,maintain,a,http,session;public,void,set,cookie,handler,cookie,handler,cookie,handler,this,cookie,handler,cookie,handler
JettyHttpEndpoint -> public void setCookieHandler(CookieHandler cookieHandler);1491585299;Configure a cookie handler to maintain a HTTP session;public void setCookieHandler(CookieHandler cookieHandler) {_        this.cookieHandler = cookieHandler__    };configure,a,cookie,handler,to,maintain,a,http,session;public,void,set,cookie,handler,cookie,handler,cookie,handler,this,cookie,handler,cookie,handler
JettyHttpEndpoint -> public void setCookieHandler(CookieHandler cookieHandler);1524001544;Configure a cookie handler to maintain a HTTP session;public void setCookieHandler(CookieHandler cookieHandler) {_        this.cookieHandler = cookieHandler__    };configure,a,cookie,handler,to,maintain,a,http,session;public,void,set,cookie,handler,cookie,handler,cookie,handler,this,cookie,handler,cookie,handler
JettyHttpEndpoint -> public void setCookieHandler(CookieHandler cookieHandler);1540108161;Configure a cookie handler to maintain a HTTP session;public void setCookieHandler(CookieHandler cookieHandler) {_        this.cookieHandler = cookieHandler__    };configure,a,cookie,handler,to,maintain,a,http,session;public,void,set,cookie,handler,cookie,handler,cookie,handler,this,cookie,handler,cookie,handler
JettyHttpEndpoint -> public void setCookieHandler(CookieHandler cookieHandler);1540108163;Configure a cookie handler to maintain a HTTP session;public void setCookieHandler(CookieHandler cookieHandler) {_        this.cookieHandler = cookieHandler__    };configure,a,cookie,handler,to,maintain,a,http,session;public,void,set,cookie,handler,cookie,handler,cookie,handler,this,cookie,handler,cookie,handler
JettyHttpEndpoint -> public void setCookieHandler(CookieHandler cookieHandler);1545220307;Configure a cookie handler to maintain a HTTP session;public void setCookieHandler(CookieHandler cookieHandler) {_        this.cookieHandler = cookieHandler__    };configure,a,cookie,handler,to,maintain,a,http,session;public,void,set,cookie,handler,cookie,handler,cookie,handler,this,cookie,handler,cookie,handler
JettyHttpEndpoint -> public void setCookieHandler(CookieHandler cookieHandler);1548332772;Configure a cookie handler to maintain a HTTP session;public void setCookieHandler(CookieHandler cookieHandler) {_        this.cookieHandler = cookieHandler__    };configure,a,cookie,handler,to,maintain,a,http,session;public,void,set,cookie,handler,cookie,handler,cookie,handler,this,cookie,handler,cookie,handler
JettyHttpEndpoint -> public void setCookieHandler(CookieHandler cookieHandler);1548773544;Configure a cookie handler to maintain a HTTP session;public void setCookieHandler(CookieHandler cookieHandler) {_        this.cookieHandler = cookieHandler__    };configure,a,cookie,handler,to,maintain,a,http,session;public,void,set,cookie,handler,cookie,handler,cookie,handler,this,cookie,handler,cookie,handler
JettyHttpEndpoint -> public void setSendDateHeader(boolean sendDateHeader);1434293741;If the option is true, jetty server will send the date header to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendDateHeader(boolean sendDateHeader) { _        this.sendDateHeader = sendDateHeader__    };if,the,option,is,true,jetty,server,will,send,the,date,header,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,date,header,boolean,send,date,header,this,send,date,header,send,date,header
JettyHttpEndpoint -> public void setSendDateHeader(boolean sendDateHeader);1437656672;If the option is true, jetty server will send the date header to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendDateHeader(boolean sendDateHeader) { _        this.sendDateHeader = sendDateHeader__    };if,the,option,is,true,jetty,server,will,send,the,date,header,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,date,header,boolean,send,date,header,this,send,date,header,send,date,header
JettyHttpEndpoint -> public void setSendDateHeader(boolean sendDateHeader);1439455823;If the option is true, jetty server will send the date header to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendDateHeader(boolean sendDateHeader) { _        this.sendDateHeader = sendDateHeader__    };if,the,option,is,true,jetty,server,will,send,the,date,header,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,date,header,boolean,send,date,header,this,send,date,header,send,date,header
JettyHttpEndpoint -> public void setSendDateHeader(boolean sendDateHeader);1447336366;If the option is true, jetty server will send the date header to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendDateHeader(boolean sendDateHeader) { _        this.sendDateHeader = sendDateHeader__    };if,the,option,is,true,jetty,server,will,send,the,date,header,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,date,header,boolean,send,date,header,this,send,date,header,send,date,header
JettyHttpEndpoint -> public void setSendDateHeader(boolean sendDateHeader);1451917458;If the option is true, jetty server will send the date header to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendDateHeader(boolean sendDateHeader) { _        this.sendDateHeader = sendDateHeader__    };if,the,option,is,true,jetty,server,will,send,the,date,header,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,date,header,boolean,send,date,header,this,send,date,header,send,date,header
JettyHttpEndpoint -> public void setSendDateHeader(boolean sendDateHeader);1452015455;If the option is true, jetty server will send the date header to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendDateHeader(boolean sendDateHeader) { _        this.sendDateHeader = sendDateHeader__    };if,the,option,is,true,jetty,server,will,send,the,date,header,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,date,header,boolean,send,date,header,this,send,date,header,send,date,header
JettyHttpEndpoint -> public void setSendDateHeader(boolean sendDateHeader);1456052964;If the option is true, jetty server will send the date header to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendDateHeader(boolean sendDateHeader) { _        this.sendDateHeader = sendDateHeader__    };if,the,option,is,true,jetty,server,will,send,the,date,header,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,date,header,boolean,send,date,header,this,send,date,header,send,date,header
JettyHttpEndpoint -> public void setSendDateHeader(boolean sendDateHeader);1458071281;If the option is true, jetty server will send the date header to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendDateHeader(boolean sendDateHeader) { _        this.sendDateHeader = sendDateHeader__    };if,the,option,is,true,jetty,server,will,send,the,date,header,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,date,header,boolean,send,date,header,this,send,date,header,send,date,header
JettyHttpEndpoint -> public void setSendDateHeader(boolean sendDateHeader);1463303302;If the option is true, jetty server will send the date header to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendDateHeader(boolean sendDateHeader) { _        this.sendDateHeader = sendDateHeader__    };if,the,option,is,true,jetty,server,will,send,the,date,header,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,date,header,boolean,send,date,header,this,send,date,header,send,date,header
JettyHttpEndpoint -> public void setSendDateHeader(boolean sendDateHeader);1476946116;If the option is true, jetty server will send the date header to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendDateHeader(boolean sendDateHeader) { _        this.sendDateHeader = sendDateHeader__    };if,the,option,is,true,jetty,server,will,send,the,date,header,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,date,header,boolean,send,date,header,this,send,date,header,send,date,header
JettyHttpEndpoint -> public void setSendDateHeader(boolean sendDateHeader);1491585299;If the option is true, jetty server will send the date header to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendDateHeader(boolean sendDateHeader) { _        this.sendDateHeader = sendDateHeader__    };if,the,option,is,true,jetty,server,will,send,the,date,header,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,date,header,boolean,send,date,header,this,send,date,header,send,date,header
JettyHttpEndpoint -> public void setSendDateHeader(boolean sendDateHeader);1524001544;If the option is true, jetty server will send the date header to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendDateHeader(boolean sendDateHeader) { _        this.sendDateHeader = sendDateHeader__    };if,the,option,is,true,jetty,server,will,send,the,date,header,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,date,header,boolean,send,date,header,this,send,date,header,send,date,header
JettyHttpEndpoint -> public void setSendDateHeader(boolean sendDateHeader);1540108161;If the option is true, jetty server will send the date header to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendDateHeader(boolean sendDateHeader) { _        this.sendDateHeader = sendDateHeader__    };if,the,option,is,true,jetty,server,will,send,the,date,header,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,date,header,boolean,send,date,header,this,send,date,header,send,date,header
JettyHttpEndpoint -> public void setSendDateHeader(boolean sendDateHeader);1540108163;If the option is true, jetty server will send the date header to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendDateHeader(boolean sendDateHeader) { _        this.sendDateHeader = sendDateHeader__    };if,the,option,is,true,jetty,server,will,send,the,date,header,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,date,header,boolean,send,date,header,this,send,date,header,send,date,header
JettyHttpEndpoint -> public void setSendDateHeader(boolean sendDateHeader);1545220307;If the option is true, jetty server will send the date header to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendDateHeader(boolean sendDateHeader) { _        this.sendDateHeader = sendDateHeader__    };if,the,option,is,true,jetty,server,will,send,the,date,header,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,date,header,boolean,send,date,header,this,send,date,header,send,date,header
JettyHttpEndpoint -> public void setSendDateHeader(boolean sendDateHeader);1548332772;If the option is true, jetty server will send the date header to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendDateHeader(boolean sendDateHeader) { _        this.sendDateHeader = sendDateHeader__    };if,the,option,is,true,jetty,server,will,send,the,date,header,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,date,header,boolean,send,date,header,this,send,date,header,send,date,header
JettyHttpEndpoint -> public void setSendDateHeader(boolean sendDateHeader);1548773544;If the option is true, jetty server will send the date header to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendDateHeader(boolean sendDateHeader) { _        this.sendDateHeader = sendDateHeader__    };if,the,option,is,true,jetty,server,will,send,the,date,header,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,date,header,boolean,send,date,header,this,send,date,header,send,date,header
JettyHttpEndpoint -> public void setUseContinuation(Boolean useContinuation);1434293741;Whether or not to use Jetty continuations for the Jetty Server.;public void setUseContinuation(Boolean useContinuation) {_        this.useContinuation = useContinuation__    };whether,or,not,to,use,jetty,continuations,for,the,jetty,server;public,void,set,use,continuation,boolean,use,continuation,this,use,continuation,use,continuation
JettyHttpEndpoint -> public void setUseContinuation(Boolean useContinuation);1437656672;Whether or not to use Jetty continuations for the Jetty Server.;public void setUseContinuation(Boolean useContinuation) {_        this.useContinuation = useContinuation__    };whether,or,not,to,use,jetty,continuations,for,the,jetty,server;public,void,set,use,continuation,boolean,use,continuation,this,use,continuation,use,continuation
JettyHttpEndpoint -> public void setUseContinuation(Boolean useContinuation);1439455823;Whether or not to use Jetty continuations for the Jetty Server.;public void setUseContinuation(Boolean useContinuation) {_        this.useContinuation = useContinuation__    };whether,or,not,to,use,jetty,continuations,for,the,jetty,server;public,void,set,use,continuation,boolean,use,continuation,this,use,continuation,use,continuation
JettyHttpEndpoint -> public void setUseContinuation(Boolean useContinuation);1447336366;Whether or not to use Jetty continuations for the Jetty Server.;public void setUseContinuation(Boolean useContinuation) {_        this.useContinuation = useContinuation__    };whether,or,not,to,use,jetty,continuations,for,the,jetty,server;public,void,set,use,continuation,boolean,use,continuation,this,use,continuation,use,continuation
JettyHttpEndpoint -> public void setUseContinuation(Boolean useContinuation);1451917458;Whether or not to use Jetty continuations for the Jetty Server.;public void setUseContinuation(Boolean useContinuation) {_        this.useContinuation = useContinuation__    };whether,or,not,to,use,jetty,continuations,for,the,jetty,server;public,void,set,use,continuation,boolean,use,continuation,this,use,continuation,use,continuation
JettyHttpEndpoint -> public void setUseContinuation(Boolean useContinuation);1452015455;Whether or not to use Jetty continuations for the Jetty Server.;public void setUseContinuation(Boolean useContinuation) {_        this.useContinuation = useContinuation__    };whether,or,not,to,use,jetty,continuations,for,the,jetty,server;public,void,set,use,continuation,boolean,use,continuation,this,use,continuation,use,continuation
JettyHttpEndpoint -> public void setUseContinuation(Boolean useContinuation);1456052964;Whether or not to use Jetty continuations for the Jetty Server.;public void setUseContinuation(Boolean useContinuation) {_        this.useContinuation = useContinuation__    };whether,or,not,to,use,jetty,continuations,for,the,jetty,server;public,void,set,use,continuation,boolean,use,continuation,this,use,continuation,use,continuation
JettyHttpEndpoint -> public void setUseContinuation(Boolean useContinuation);1458071281;Whether or not to use Jetty continuations for the Jetty Server.;public void setUseContinuation(Boolean useContinuation) {_        this.useContinuation = useContinuation__    };whether,or,not,to,use,jetty,continuations,for,the,jetty,server;public,void,set,use,continuation,boolean,use,continuation,this,use,continuation,use,continuation
JettyHttpEndpoint -> public void setUseContinuation(Boolean useContinuation);1463303302;Whether or not to use Jetty continuations for the Jetty Server.;public void setUseContinuation(Boolean useContinuation) {_        this.useContinuation = useContinuation__    };whether,or,not,to,use,jetty,continuations,for,the,jetty,server;public,void,set,use,continuation,boolean,use,continuation,this,use,continuation,use,continuation
JettyHttpEndpoint -> public void setUseContinuation(Boolean useContinuation);1476946116;Whether or not to use Jetty continuations for the Jetty Server.;public void setUseContinuation(Boolean useContinuation) {_        this.useContinuation = useContinuation__    };whether,or,not,to,use,jetty,continuations,for,the,jetty,server;public,void,set,use,continuation,boolean,use,continuation,this,use,continuation,use,continuation
JettyHttpEndpoint -> public void setUseContinuation(Boolean useContinuation);1491585299;Whether or not to use Jetty continuations for the Jetty Server.;public void setUseContinuation(Boolean useContinuation) {_        this.useContinuation = useContinuation__    };whether,or,not,to,use,jetty,continuations,for,the,jetty,server;public,void,set,use,continuation,boolean,use,continuation,this,use,continuation,use,continuation
JettyHttpEndpoint -> public void setUseContinuation(Boolean useContinuation);1524001544;Whether or not to use Jetty continuations for the Jetty Server.;public void setUseContinuation(Boolean useContinuation) {_        this.useContinuation = useContinuation__    };whether,or,not,to,use,jetty,continuations,for,the,jetty,server;public,void,set,use,continuation,boolean,use,continuation,this,use,continuation,use,continuation
JettyHttpEndpoint -> public void setUseContinuation(Boolean useContinuation);1540108161;Whether or not to use Jetty continuations for the Jetty Server.;public void setUseContinuation(Boolean useContinuation) {_        this.useContinuation = useContinuation__    };whether,or,not,to,use,jetty,continuations,for,the,jetty,server;public,void,set,use,continuation,boolean,use,continuation,this,use,continuation,use,continuation
JettyHttpEndpoint -> public void setUseContinuation(Boolean useContinuation);1540108163;Whether or not to use Jetty continuations for the Jetty Server.;public void setUseContinuation(Boolean useContinuation) {_        this.useContinuation = useContinuation__    };whether,or,not,to,use,jetty,continuations,for,the,jetty,server;public,void,set,use,continuation,boolean,use,continuation,this,use,continuation,use,continuation
JettyHttpEndpoint -> public void setUseContinuation(Boolean useContinuation);1545220307;Whether or not to use Jetty continuations for the Jetty Server.;public void setUseContinuation(Boolean useContinuation) {_        this.useContinuation = useContinuation__    };whether,or,not,to,use,jetty,continuations,for,the,jetty,server;public,void,set,use,continuation,boolean,use,continuation,this,use,continuation,use,continuation
JettyHttpEndpoint -> public void setUseContinuation(Boolean useContinuation);1548332772;Whether or not to use Jetty continuations for the Jetty Server.;public void setUseContinuation(Boolean useContinuation) {_        this.useContinuation = useContinuation__    };whether,or,not,to,use,jetty,continuations,for,the,jetty,server;public,void,set,use,continuation,boolean,use,continuation,this,use,continuation,use,continuation
JettyHttpEndpoint -> public void setUseContinuation(Boolean useContinuation);1548773544;Whether or not to use Jetty continuations for the Jetty Server.;public void setUseContinuation(Boolean useContinuation) {_        this.useContinuation = useContinuation__    };whether,or,not,to,use,jetty,continuations,for,the,jetty,server;public,void,set,use,continuation,boolean,use,continuation,this,use,continuation,use,continuation
JettyHttpEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1434293741;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
JettyHttpEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1437656672;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
JettyHttpEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1439455823;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
JettyHttpEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1447336366;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
JettyHttpEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1451917458;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
JettyHttpEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1452015455;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
JettyHttpEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1456052964;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
JettyHttpEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1458071281;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
JettyHttpEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1463303302;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
JettyHttpEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1476946116;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
JettyHttpEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1491585299;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
JettyHttpEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1524001544;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
JettyHttpEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1540108161;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
JettyHttpEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1540108163;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
JettyHttpEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1545220307;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
JettyHttpEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1548332772;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
JettyHttpEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1548773544;To configure security using SSLContextParameters;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
JettyHttpEndpoint -> public void setSendServerVersion(boolean sendServerVersion);1434293741;If the option is true, jetty will send the server header with the jetty version information to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendServerVersion(boolean sendServerVersion) {_        this.sendServerVersion = sendServerVersion__    };if,the,option,is,true,jetty,will,send,the,server,header,with,the,jetty,version,information,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,server,version,boolean,send,server,version,this,send,server,version,send,server,version
JettyHttpEndpoint -> public void setSendServerVersion(boolean sendServerVersion);1437656672;If the option is true, jetty will send the server header with the jetty version information to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendServerVersion(boolean sendServerVersion) {_        this.sendServerVersion = sendServerVersion__    };if,the,option,is,true,jetty,will,send,the,server,header,with,the,jetty,version,information,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,server,version,boolean,send,server,version,this,send,server,version,send,server,version
JettyHttpEndpoint -> public void setSendServerVersion(boolean sendServerVersion);1439455823;If the option is true, jetty will send the server header with the jetty version information to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendServerVersion(boolean sendServerVersion) {_        this.sendServerVersion = sendServerVersion__    };if,the,option,is,true,jetty,will,send,the,server,header,with,the,jetty,version,information,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,server,version,boolean,send,server,version,this,send,server,version,send,server,version
JettyHttpEndpoint -> public void setSendServerVersion(boolean sendServerVersion);1447336366;If the option is true, jetty will send the server header with the jetty version information to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendServerVersion(boolean sendServerVersion) {_        this.sendServerVersion = sendServerVersion__    };if,the,option,is,true,jetty,will,send,the,server,header,with,the,jetty,version,information,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,server,version,boolean,send,server,version,this,send,server,version,send,server,version
JettyHttpEndpoint -> public void setSendServerVersion(boolean sendServerVersion);1451917458;If the option is true, jetty will send the server header with the jetty version information to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendServerVersion(boolean sendServerVersion) {_        this.sendServerVersion = sendServerVersion__    };if,the,option,is,true,jetty,will,send,the,server,header,with,the,jetty,version,information,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,server,version,boolean,send,server,version,this,send,server,version,send,server,version
JettyHttpEndpoint -> public void setSendServerVersion(boolean sendServerVersion);1452015455;If the option is true, jetty will send the server header with the jetty version information to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendServerVersion(boolean sendServerVersion) {_        this.sendServerVersion = sendServerVersion__    };if,the,option,is,true,jetty,will,send,the,server,header,with,the,jetty,version,information,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,server,version,boolean,send,server,version,this,send,server,version,send,server,version
JettyHttpEndpoint -> public void setSendServerVersion(boolean sendServerVersion);1456052964;If the option is true, jetty will send the server header with the jetty version information to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendServerVersion(boolean sendServerVersion) {_        this.sendServerVersion = sendServerVersion__    };if,the,option,is,true,jetty,will,send,the,server,header,with,the,jetty,version,information,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,server,version,boolean,send,server,version,this,send,server,version,send,server,version
JettyHttpEndpoint -> public void setSendServerVersion(boolean sendServerVersion);1458071281;If the option is true, jetty will send the server header with the jetty version information to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendServerVersion(boolean sendServerVersion) {_        this.sendServerVersion = sendServerVersion__    };if,the,option,is,true,jetty,will,send,the,server,header,with,the,jetty,version,information,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,server,version,boolean,send,server,version,this,send,server,version,send,server,version
JettyHttpEndpoint -> public void setSendServerVersion(boolean sendServerVersion);1463303302;If the option is true, jetty will send the server header with the jetty version information to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendServerVersion(boolean sendServerVersion) {_        this.sendServerVersion = sendServerVersion__    };if,the,option,is,true,jetty,will,send,the,server,header,with,the,jetty,version,information,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,server,version,boolean,send,server,version,this,send,server,version,send,server,version
JettyHttpEndpoint -> public void setSendServerVersion(boolean sendServerVersion);1476946116;If the option is true, jetty will send the server header with the jetty version information to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendServerVersion(boolean sendServerVersion) {_        this.sendServerVersion = sendServerVersion__    };if,the,option,is,true,jetty,will,send,the,server,header,with,the,jetty,version,information,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,server,version,boolean,send,server,version,this,send,server,version,send,server,version
JettyHttpEndpoint -> public void setSendServerVersion(boolean sendServerVersion);1491585299;If the option is true, jetty will send the server header with the jetty version information to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendServerVersion(boolean sendServerVersion) {_        this.sendServerVersion = sendServerVersion__    };if,the,option,is,true,jetty,will,send,the,server,header,with,the,jetty,version,information,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,server,version,boolean,send,server,version,this,send,server,version,send,server,version
JettyHttpEndpoint -> public void setSendServerVersion(boolean sendServerVersion);1524001544;If the option is true, jetty will send the server header with the jetty version information to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendServerVersion(boolean sendServerVersion) {_        this.sendServerVersion = sendServerVersion__    };if,the,option,is,true,jetty,will,send,the,server,header,with,the,jetty,version,information,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,server,version,boolean,send,server,version,this,send,server,version,send,server,version
JettyHttpEndpoint -> public void setSendServerVersion(boolean sendServerVersion);1540108161;If the option is true, jetty will send the server header with the jetty version information to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendServerVersion(boolean sendServerVersion) {_        this.sendServerVersion = sendServerVersion__    };if,the,option,is,true,jetty,will,send,the,server,header,with,the,jetty,version,information,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,server,version,boolean,send,server,version,this,send,server,version,send,server,version
JettyHttpEndpoint -> public void setSendServerVersion(boolean sendServerVersion);1540108163;If the option is true, jetty will send the server header with the jetty version information to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendServerVersion(boolean sendServerVersion) {_        this.sendServerVersion = sendServerVersion__    };if,the,option,is,true,jetty,will,send,the,server,header,with,the,jetty,version,information,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,server,version,boolean,send,server,version,this,send,server,version,send,server,version
JettyHttpEndpoint -> public void setSendServerVersion(boolean sendServerVersion);1545220307;If the option is true, jetty will send the server header with the jetty version information to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendServerVersion(boolean sendServerVersion) {_        this.sendServerVersion = sendServerVersion__    };if,the,option,is,true,jetty,will,send,the,server,header,with,the,jetty,version,information,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,server,version,boolean,send,server,version,this,send,server,version,send,server,version
JettyHttpEndpoint -> public void setSendServerVersion(boolean sendServerVersion);1548332772;If the option is true, jetty will send the server header with the jetty version information to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendServerVersion(boolean sendServerVersion) {_        this.sendServerVersion = sendServerVersion__    };if,the,option,is,true,jetty,will,send,the,server,header,with,the,jetty,version,information,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,server,version,boolean,send,server,version,this,send,server,version,send,server,version
JettyHttpEndpoint -> public void setSendServerVersion(boolean sendServerVersion);1548773544;If the option is true, jetty will send the server header with the jetty version information to the client which sends the request._NOTE please make sure there is no any other camel-jetty endpoint is share the same port, otherwise this option may not work as expected.;public void setSendServerVersion(boolean sendServerVersion) {_        this.sendServerVersion = sendServerVersion__    };if,the,option,is,true,jetty,will,send,the,server,header,with,the,jetty,version,information,to,the,client,which,sends,the,request,note,please,make,sure,there,is,no,any,other,camel,jetty,endpoint,is,share,the,same,port,otherwise,this,option,may,not,work,as,expected;public,void,set,send,server,version,boolean,send,server,version,this,send,server,version,send,server,version
JettyHttpEndpoint -> public void setHttpClientParameters(Map<String, Object> httpClientParameters);1434293741;Configuration of Jetty's HttpClient. For example, setting httpClient.idleTimeout=30000 sets the idle timeout to 30 seconds._And httpClient.timeout=30000 sets the request timeout to 30 seconds, in case you want to timeout sooner if you have long running request/response calls.;public void setHttpClientParameters(Map<String, Object> httpClientParameters) {_        this.httpClientParameters = httpClientParameters__    };configuration,of,jetty,s,http,client,for,example,setting,http,client,idle,timeout,30000,sets,the,idle,timeout,to,30,seconds,and,http,client,timeout,30000,sets,the,request,timeout,to,30,seconds,in,case,you,want,to,timeout,sooner,if,you,have,long,running,request,response,calls;public,void,set,http,client,parameters,map,string,object,http,client,parameters,this,http,client,parameters,http,client,parameters
JettyHttpEndpoint -> public void setHttpClientParameters(Map<String, Object> httpClientParameters);1437656672;Configuration of Jetty's HttpClient. For example, setting httpClient.idleTimeout=30000 sets the idle timeout to 30 seconds._And httpClient.timeout=30000 sets the request timeout to 30 seconds, in case you want to timeout sooner if you have long running request/response calls.;public void setHttpClientParameters(Map<String, Object> httpClientParameters) {_        this.httpClientParameters = httpClientParameters__    };configuration,of,jetty,s,http,client,for,example,setting,http,client,idle,timeout,30000,sets,the,idle,timeout,to,30,seconds,and,http,client,timeout,30000,sets,the,request,timeout,to,30,seconds,in,case,you,want,to,timeout,sooner,if,you,have,long,running,request,response,calls;public,void,set,http,client,parameters,map,string,object,http,client,parameters,this,http,client,parameters,http,client,parameters
JettyHttpEndpoint -> public void setHttpClientParameters(Map<String, Object> httpClientParameters);1439455823;Configuration of Jetty's HttpClient. For example, setting httpClient.idleTimeout=30000 sets the idle timeout to 30 seconds._And httpClient.timeout=30000 sets the request timeout to 30 seconds, in case you want to timeout sooner if you have long running request/response calls.;public void setHttpClientParameters(Map<String, Object> httpClientParameters) {_        this.httpClientParameters = httpClientParameters__    };configuration,of,jetty,s,http,client,for,example,setting,http,client,idle,timeout,30000,sets,the,idle,timeout,to,30,seconds,and,http,client,timeout,30000,sets,the,request,timeout,to,30,seconds,in,case,you,want,to,timeout,sooner,if,you,have,long,running,request,response,calls;public,void,set,http,client,parameters,map,string,object,http,client,parameters,this,http,client,parameters,http,client,parameters
JettyHttpEndpoint -> public void setHttpClientParameters(Map<String, Object> httpClientParameters);1447336366;Configuration of Jetty's HttpClient. For example, setting httpClient.idleTimeout=30000 sets the idle timeout to 30 seconds._And httpClient.timeout=30000 sets the request timeout to 30 seconds, in case you want to timeout sooner if you have long running request/response calls.;public void setHttpClientParameters(Map<String, Object> httpClientParameters) {_        this.httpClientParameters = httpClientParameters__    };configuration,of,jetty,s,http,client,for,example,setting,http,client,idle,timeout,30000,sets,the,idle,timeout,to,30,seconds,and,http,client,timeout,30000,sets,the,request,timeout,to,30,seconds,in,case,you,want,to,timeout,sooner,if,you,have,long,running,request,response,calls;public,void,set,http,client,parameters,map,string,object,http,client,parameters,this,http,client,parameters,http,client,parameters
JettyHttpEndpoint -> public void setHttpClientParameters(Map<String, Object> httpClientParameters);1451917458;Configuration of Jetty's HttpClient. For example, setting httpClient.idleTimeout=30000 sets the idle timeout to 30 seconds._And httpClient.timeout=30000 sets the request timeout to 30 seconds, in case you want to timeout sooner if you have long running request/response calls.;public void setHttpClientParameters(Map<String, Object> httpClientParameters) {_        this.httpClientParameters = httpClientParameters__    };configuration,of,jetty,s,http,client,for,example,setting,http,client,idle,timeout,30000,sets,the,idle,timeout,to,30,seconds,and,http,client,timeout,30000,sets,the,request,timeout,to,30,seconds,in,case,you,want,to,timeout,sooner,if,you,have,long,running,request,response,calls;public,void,set,http,client,parameters,map,string,object,http,client,parameters,this,http,client,parameters,http,client,parameters
JettyHttpEndpoint -> public void setHttpClientParameters(Map<String, Object> httpClientParameters);1452015455;Configuration of Jetty's HttpClient. For example, setting httpClient.idleTimeout=30000 sets the idle timeout to 30 seconds._And httpClient.timeout=30000 sets the request timeout to 30 seconds, in case you want to timeout sooner if you have long running request/response calls.;public void setHttpClientParameters(Map<String, Object> httpClientParameters) {_        this.httpClientParameters = httpClientParameters__    };configuration,of,jetty,s,http,client,for,example,setting,http,client,idle,timeout,30000,sets,the,idle,timeout,to,30,seconds,and,http,client,timeout,30000,sets,the,request,timeout,to,30,seconds,in,case,you,want,to,timeout,sooner,if,you,have,long,running,request,response,calls;public,void,set,http,client,parameters,map,string,object,http,client,parameters,this,http,client,parameters,http,client,parameters
JettyHttpEndpoint -> public void setHttpClientParameters(Map<String, Object> httpClientParameters);1456052964;Configuration of Jetty's HttpClient. For example, setting httpClient.idleTimeout=30000 sets the idle timeout to 30 seconds._And httpClient.timeout=30000 sets the request timeout to 30 seconds, in case you want to timeout sooner if you have long running request/response calls.;public void setHttpClientParameters(Map<String, Object> httpClientParameters) {_        this.httpClientParameters = httpClientParameters__    };configuration,of,jetty,s,http,client,for,example,setting,http,client,idle,timeout,30000,sets,the,idle,timeout,to,30,seconds,and,http,client,timeout,30000,sets,the,request,timeout,to,30,seconds,in,case,you,want,to,timeout,sooner,if,you,have,long,running,request,response,calls;public,void,set,http,client,parameters,map,string,object,http,client,parameters,this,http,client,parameters,http,client,parameters
JettyHttpEndpoint -> public void setHttpClientParameters(Map<String, Object> httpClientParameters);1458071281;Configuration of Jetty's HttpClient. For example, setting httpClient.idleTimeout=30000 sets the idle timeout to 30 seconds._And httpClient.timeout=30000 sets the request timeout to 30 seconds, in case you want to timeout sooner if you have long running request/response calls.;public void setHttpClientParameters(Map<String, Object> httpClientParameters) {_        this.httpClientParameters = httpClientParameters__    };configuration,of,jetty,s,http,client,for,example,setting,http,client,idle,timeout,30000,sets,the,idle,timeout,to,30,seconds,and,http,client,timeout,30000,sets,the,request,timeout,to,30,seconds,in,case,you,want,to,timeout,sooner,if,you,have,long,running,request,response,calls;public,void,set,http,client,parameters,map,string,object,http,client,parameters,this,http,client,parameters,http,client,parameters
JettyHttpEndpoint -> public void setHttpClientParameters(Map<String, Object> httpClientParameters);1463303302;Configuration of Jetty's HttpClient. For example, setting httpClient.idleTimeout=30000 sets the idle timeout to 30 seconds._And httpClient.timeout=30000 sets the request timeout to 30 seconds, in case you want to timeout sooner if you have long running request/response calls.;public void setHttpClientParameters(Map<String, Object> httpClientParameters) {_        this.httpClientParameters = httpClientParameters__    };configuration,of,jetty,s,http,client,for,example,setting,http,client,idle,timeout,30000,sets,the,idle,timeout,to,30,seconds,and,http,client,timeout,30000,sets,the,request,timeout,to,30,seconds,in,case,you,want,to,timeout,sooner,if,you,have,long,running,request,response,calls;public,void,set,http,client,parameters,map,string,object,http,client,parameters,this,http,client,parameters,http,client,parameters
JettyHttpEndpoint -> public void setHttpClientParameters(Map<String, Object> httpClientParameters);1476946116;Configuration of Jetty's HttpClient. For example, setting httpClient.idleTimeout=30000 sets the idle timeout to 30 seconds._And httpClient.timeout=30000 sets the request timeout to 30 seconds, in case you want to timeout sooner if you have long running request/response calls.;public void setHttpClientParameters(Map<String, Object> httpClientParameters) {_        this.httpClientParameters = httpClientParameters__    };configuration,of,jetty,s,http,client,for,example,setting,http,client,idle,timeout,30000,sets,the,idle,timeout,to,30,seconds,and,http,client,timeout,30000,sets,the,request,timeout,to,30,seconds,in,case,you,want,to,timeout,sooner,if,you,have,long,running,request,response,calls;public,void,set,http,client,parameters,map,string,object,http,client,parameters,this,http,client,parameters,http,client,parameters
JettyHttpEndpoint -> public void setHttpClientParameters(Map<String, Object> httpClientParameters);1491585299;Configuration of Jetty's HttpClient. For example, setting httpClient.idleTimeout=30000 sets the idle timeout to 30 seconds._And httpClient.timeout=30000 sets the request timeout to 30 seconds, in case you want to timeout sooner if you have long running request/response calls.;public void setHttpClientParameters(Map<String, Object> httpClientParameters) {_        this.httpClientParameters = httpClientParameters__    };configuration,of,jetty,s,http,client,for,example,setting,http,client,idle,timeout,30000,sets,the,idle,timeout,to,30,seconds,and,http,client,timeout,30000,sets,the,request,timeout,to,30,seconds,in,case,you,want,to,timeout,sooner,if,you,have,long,running,request,response,calls;public,void,set,http,client,parameters,map,string,object,http,client,parameters,this,http,client,parameters,http,client,parameters
JettyHttpEndpoint -> public void setHttpClientParameters(Map<String, Object> httpClientParameters);1524001544;Configuration of Jetty's HttpClient. For example, setting httpClient.idleTimeout=30000 sets the idle timeout to 30 seconds._And httpClient.timeout=30000 sets the request timeout to 30 seconds, in case you want to timeout sooner if you have long running request/response calls.;public void setHttpClientParameters(Map<String, Object> httpClientParameters) {_        this.httpClientParameters = httpClientParameters__    };configuration,of,jetty,s,http,client,for,example,setting,http,client,idle,timeout,30000,sets,the,idle,timeout,to,30,seconds,and,http,client,timeout,30000,sets,the,request,timeout,to,30,seconds,in,case,you,want,to,timeout,sooner,if,you,have,long,running,request,response,calls;public,void,set,http,client,parameters,map,string,object,http,client,parameters,this,http,client,parameters,http,client,parameters
JettyHttpEndpoint -> public void setHttpClientParameters(Map<String, Object> httpClientParameters);1540108161;Configuration of Jetty's HttpClient. For example, setting httpClient.idleTimeout=30000 sets the idle timeout to 30 seconds._And httpClient.timeout=30000 sets the request timeout to 30 seconds, in case you want to timeout sooner if you have long running request/response calls.;public void setHttpClientParameters(Map<String, Object> httpClientParameters) {_        this.httpClientParameters = httpClientParameters__    };configuration,of,jetty,s,http,client,for,example,setting,http,client,idle,timeout,30000,sets,the,idle,timeout,to,30,seconds,and,http,client,timeout,30000,sets,the,request,timeout,to,30,seconds,in,case,you,want,to,timeout,sooner,if,you,have,long,running,request,response,calls;public,void,set,http,client,parameters,map,string,object,http,client,parameters,this,http,client,parameters,http,client,parameters
JettyHttpEndpoint -> public void setHttpClientParameters(Map<String, Object> httpClientParameters);1540108163;Configuration of Jetty's HttpClient. For example, setting httpClient.idleTimeout=30000 sets the idle timeout to 30 seconds._And httpClient.timeout=30000 sets the request timeout to 30 seconds, in case you want to timeout sooner if you have long running request/response calls.;public void setHttpClientParameters(Map<String, Object> httpClientParameters) {_        this.httpClientParameters = httpClientParameters__    };configuration,of,jetty,s,http,client,for,example,setting,http,client,idle,timeout,30000,sets,the,idle,timeout,to,30,seconds,and,http,client,timeout,30000,sets,the,request,timeout,to,30,seconds,in,case,you,want,to,timeout,sooner,if,you,have,long,running,request,response,calls;public,void,set,http,client,parameters,map,string,object,http,client,parameters,this,http,client,parameters,http,client,parameters
JettyHttpEndpoint -> public void setHttpClientParameters(Map<String, Object> httpClientParameters);1545220307;Configuration of Jetty's HttpClient. For example, setting httpClient.idleTimeout=30000 sets the idle timeout to 30 seconds._And httpClient.timeout=30000 sets the request timeout to 30 seconds, in case you want to timeout sooner if you have long running request/response calls.;public void setHttpClientParameters(Map<String, Object> httpClientParameters) {_        this.httpClientParameters = httpClientParameters__    };configuration,of,jetty,s,http,client,for,example,setting,http,client,idle,timeout,30000,sets,the,idle,timeout,to,30,seconds,and,http,client,timeout,30000,sets,the,request,timeout,to,30,seconds,in,case,you,want,to,timeout,sooner,if,you,have,long,running,request,response,calls;public,void,set,http,client,parameters,map,string,object,http,client,parameters,this,http,client,parameters,http,client,parameters
JettyHttpEndpoint -> public void setHttpClientParameters(Map<String, Object> httpClientParameters);1548332772;Configuration of Jetty's HttpClient. For example, setting httpClient.idleTimeout=30000 sets the idle timeout to 30 seconds._And httpClient.timeout=30000 sets the request timeout to 30 seconds, in case you want to timeout sooner if you have long running request/response calls.;public void setHttpClientParameters(Map<String, Object> httpClientParameters) {_        this.httpClientParameters = httpClientParameters__    };configuration,of,jetty,s,http,client,for,example,setting,http,client,idle,timeout,30000,sets,the,idle,timeout,to,30,seconds,and,http,client,timeout,30000,sets,the,request,timeout,to,30,seconds,in,case,you,want,to,timeout,sooner,if,you,have,long,running,request,response,calls;public,void,set,http,client,parameters,map,string,object,http,client,parameters,this,http,client,parameters,http,client,parameters
JettyHttpEndpoint -> public void setHttpClientParameters(Map<String, Object> httpClientParameters);1548773544;Configuration of Jetty's HttpClient. For example, setting httpClient.idleTimeout=30000 sets the idle timeout to 30 seconds._And httpClient.timeout=30000 sets the request timeout to 30 seconds, in case you want to timeout sooner if you have long running request/response calls.;public void setHttpClientParameters(Map<String, Object> httpClientParameters) {_        this.httpClientParameters = httpClientParameters__    };configuration,of,jetty,s,http,client,for,example,setting,http,client,idle,timeout,30000,sets,the,idle,timeout,to,30,seconds,and,http,client,timeout,30000,sets,the,request,timeout,to,30,seconds,in,case,you,want,to,timeout,sooner,if,you,have,long,running,request,response,calls;public,void,set,http,client,parameters,map,string,object,http,client,parameters,this,http,client,parameters,http,client,parameters
JettyHttpEndpoint -> public void setMultipartFilter(Filter filter);1434293741;Allows using a custom multipart filter. Note: setting multipartFilter forces the value of enableMultipartFilter to true.;public void setMultipartFilter(Filter filter) {_        this.multipartFilter = filter__    };allows,using,a,custom,multipart,filter,note,setting,multipart,filter,forces,the,value,of,enable,multipart,filter,to,true;public,void,set,multipart,filter,filter,filter,this,multipart,filter,filter
JettyHttpEndpoint -> public void setMultipartFilter(Filter filter);1437656672;Allows using a custom multipart filter. Note: setting multipartFilter forces the value of enableMultipartFilter to true.;public void setMultipartFilter(Filter filter) {_        this.multipartFilter = filter__    };allows,using,a,custom,multipart,filter,note,setting,multipart,filter,forces,the,value,of,enable,multipart,filter,to,true;public,void,set,multipart,filter,filter,filter,this,multipart,filter,filter
JettyHttpEndpoint -> public void setMultipartFilter(Filter filter);1439455823;Allows using a custom multipart filter. Note: setting multipartFilter forces the value of enableMultipartFilter to true.;public void setMultipartFilter(Filter filter) {_        this.multipartFilter = filter__    };allows,using,a,custom,multipart,filter,note,setting,multipart,filter,forces,the,value,of,enable,multipart,filter,to,true;public,void,set,multipart,filter,filter,filter,this,multipart,filter,filter
JettyHttpEndpoint -> public void setMultipartFilter(Filter filter);1447336366;Allows using a custom multipart filter. Note: setting multipartFilter forces the value of enableMultipartFilter to true.;public void setMultipartFilter(Filter filter) {_        this.multipartFilter = filter__    };allows,using,a,custom,multipart,filter,note,setting,multipart,filter,forces,the,value,of,enable,multipart,filter,to,true;public,void,set,multipart,filter,filter,filter,this,multipart,filter,filter
JettyHttpEndpoint -> public void setMultipartFilter(Filter filter);1451917458;Allows using a custom multipart filter. Note: setting multipartFilter forces the value of enableMultipartFilter to true.;public void setMultipartFilter(Filter filter) {_        this.multipartFilter = filter__    };allows,using,a,custom,multipart,filter,note,setting,multipart,filter,forces,the,value,of,enable,multipart,filter,to,true;public,void,set,multipart,filter,filter,filter,this,multipart,filter,filter
JettyHttpEndpoint -> public void setMultipartFilter(Filter filter);1452015455;Allows using a custom multipart filter. Note: setting multipartFilter forces the value of enableMultipartFilter to true.;public void setMultipartFilter(Filter filter) {_        this.multipartFilter = filter__    };allows,using,a,custom,multipart,filter,note,setting,multipart,filter,forces,the,value,of,enable,multipart,filter,to,true;public,void,set,multipart,filter,filter,filter,this,multipart,filter,filter
JettyHttpEndpoint -> public void setMultipartFilter(Filter filter);1456052964;Allows using a custom multipart filter. Note: setting multipartFilter forces the value of enableMultipartFilter to true.;public void setMultipartFilter(Filter filter) {_        this.multipartFilter = filter__    };allows,using,a,custom,multipart,filter,note,setting,multipart,filter,forces,the,value,of,enable,multipart,filter,to,true;public,void,set,multipart,filter,filter,filter,this,multipart,filter,filter
JettyHttpEndpoint -> public void setMultipartFilter(Filter filter);1458071281;Allows using a custom multipart filter. Note: setting multipartFilter forces the value of enableMultipartFilter to true.;public void setMultipartFilter(Filter filter) {_        this.multipartFilter = filter__    };allows,using,a,custom,multipart,filter,note,setting,multipart,filter,forces,the,value,of,enable,multipart,filter,to,true;public,void,set,multipart,filter,filter,filter,this,multipart,filter,filter
JettyHttpEndpoint -> public void setMultipartFilter(Filter filter);1463303302;Allows using a custom multipart filter. Note: setting multipartFilter forces the value of enableMultipartFilter to true.;public void setMultipartFilter(Filter filter) {_        this.multipartFilter = filter__    };allows,using,a,custom,multipart,filter,note,setting,multipart,filter,forces,the,value,of,enable,multipart,filter,to,true;public,void,set,multipart,filter,filter,filter,this,multipart,filter,filter
JettyHttpEndpoint -> public void setMultipartFilter(Filter filter);1476946116;Allows using a custom multipart filter. Note: setting multipartFilter forces the value of enableMultipartFilter to true.;public void setMultipartFilter(Filter filter) {_        this.multipartFilter = filter__    };allows,using,a,custom,multipart,filter,note,setting,multipart,filter,forces,the,value,of,enable,multipart,filter,to,true;public,void,set,multipart,filter,filter,filter,this,multipart,filter,filter
JettyHttpEndpoint -> public void setMultipartFilter(Filter filter);1491585299;Allows using a custom multipart filter. Note: setting multipartFilter forces the value of enableMultipartFilter to true.;public void setMultipartFilter(Filter filter) {_        this.multipartFilter = filter__    };allows,using,a,custom,multipart,filter,note,setting,multipart,filter,forces,the,value,of,enable,multipart,filter,to,true;public,void,set,multipart,filter,filter,filter,this,multipart,filter,filter
JettyHttpEndpoint -> public void setMultipartFilter(Filter filter);1524001544;Allows using a custom multipart filter. Note: setting multipartFilter forces the value of enableMultipartFilter to true.;public void setMultipartFilter(Filter filter) {_        this.multipartFilter = filter__    };allows,using,a,custom,multipart,filter,note,setting,multipart,filter,forces,the,value,of,enable,multipart,filter,to,true;public,void,set,multipart,filter,filter,filter,this,multipart,filter,filter
JettyHttpEndpoint -> public void setMultipartFilter(Filter filter);1540108161;Allows using a custom multipart filter. Note: setting multipartFilter forces the value of enableMultipartFilter to true.;public void setMultipartFilter(Filter filter) {_        this.multipartFilter = filter__    };allows,using,a,custom,multipart,filter,note,setting,multipart,filter,forces,the,value,of,enable,multipart,filter,to,true;public,void,set,multipart,filter,filter,filter,this,multipart,filter,filter
JettyHttpEndpoint -> public void setMultipartFilter(Filter filter);1540108163;Allows using a custom multipart filter. Note: setting multipartFilter forces the value of enableMultipartFilter to true.;public void setMultipartFilter(Filter filter) {_        this.multipartFilter = filter__    };allows,using,a,custom,multipart,filter,note,setting,multipart,filter,forces,the,value,of,enable,multipart,filter,to,true;public,void,set,multipart,filter,filter,filter,this,multipart,filter,filter
JettyHttpEndpoint -> public void setMultipartFilter(Filter filter);1545220307;Allows using a custom multipart filter. Note: setting multipartFilter forces the value of enableMultipartFilter to true.;public void setMultipartFilter(Filter filter) {_        this.multipartFilter = filter__    };allows,using,a,custom,multipart,filter,note,setting,multipart,filter,forces,the,value,of,enable,multipart,filter,to,true;public,void,set,multipart,filter,filter,filter,this,multipart,filter,filter
JettyHttpEndpoint -> public void setMultipartFilter(Filter filter);1548332772;Allows using a custom multipart filter. Note: setting multipartFilter forces the value of enableMultipartFilter to true.;public void setMultipartFilter(Filter filter) {_        this.multipartFilter = filter__    };allows,using,a,custom,multipart,filter,note,setting,multipart,filter,forces,the,value,of,enable,multipart,filter,to,true;public,void,set,multipart,filter,filter,filter,this,multipart,filter,filter
JettyHttpEndpoint -> public void setMultipartFilter(Filter filter);1548773544;Allows using a custom multipart filter. Note: setting multipartFilter forces the value of enableMultipartFilter to true.;public void setMultipartFilter(Filter filter) {_        this.multipartFilter = filter__    };allows,using,a,custom,multipart,filter,note,setting,multipart,filter,forces,the,value,of,enable,multipart,filter,to,true;public,void,set,multipart,filter,filter,filter,this,multipart,filter,filter
JettyHttpEndpoint -> public void setHttpClientMaxThreads(Integer httpClientMaxThreads);1434293741;To set a value for maximum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to max 254 threads used in Jettys thread pool.;public void setHttpClientMaxThreads(Integer httpClientMaxThreads) {_        this.httpClientMaxThreads = httpClientMaxThreads__    };to,set,a,value,for,maximum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,max,254,threads,used,in,jettys,thread,pool;public,void,set,http,client,max,threads,integer,http,client,max,threads,this,http,client,max,threads,http,client,max,threads
JettyHttpEndpoint -> public void setHttpClientMaxThreads(Integer httpClientMaxThreads);1437656672;To set a value for maximum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to max 254 threads used in Jettys thread pool.;public void setHttpClientMaxThreads(Integer httpClientMaxThreads) {_        this.httpClientMaxThreads = httpClientMaxThreads__    };to,set,a,value,for,maximum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,max,254,threads,used,in,jettys,thread,pool;public,void,set,http,client,max,threads,integer,http,client,max,threads,this,http,client,max,threads,http,client,max,threads
JettyHttpEndpoint -> public void setHttpClientMaxThreads(Integer httpClientMaxThreads);1439455823;To set a value for maximum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to max 254 threads used in Jettys thread pool.;public void setHttpClientMaxThreads(Integer httpClientMaxThreads) {_        this.httpClientMaxThreads = httpClientMaxThreads__    };to,set,a,value,for,maximum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,max,254,threads,used,in,jettys,thread,pool;public,void,set,http,client,max,threads,integer,http,client,max,threads,this,http,client,max,threads,http,client,max,threads
JettyHttpEndpoint -> public void setHttpClientMaxThreads(Integer httpClientMaxThreads);1447336366;To set a value for maximum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to max 254 threads used in Jettys thread pool.;public void setHttpClientMaxThreads(Integer httpClientMaxThreads) {_        this.httpClientMaxThreads = httpClientMaxThreads__    };to,set,a,value,for,maximum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,max,254,threads,used,in,jettys,thread,pool;public,void,set,http,client,max,threads,integer,http,client,max,threads,this,http,client,max,threads,http,client,max,threads
JettyHttpEndpoint -> public void setHttpClientMaxThreads(Integer httpClientMaxThreads);1451917458;To set a value for maximum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to max 254 threads used in Jettys thread pool.;public void setHttpClientMaxThreads(Integer httpClientMaxThreads) {_        this.httpClientMaxThreads = httpClientMaxThreads__    };to,set,a,value,for,maximum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,max,254,threads,used,in,jettys,thread,pool;public,void,set,http,client,max,threads,integer,http,client,max,threads,this,http,client,max,threads,http,client,max,threads
JettyHttpEndpoint -> public void setHttpClientMaxThreads(Integer httpClientMaxThreads);1452015455;To set a value for maximum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to max 254 threads used in Jettys thread pool.;public void setHttpClientMaxThreads(Integer httpClientMaxThreads) {_        this.httpClientMaxThreads = httpClientMaxThreads__    };to,set,a,value,for,maximum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,max,254,threads,used,in,jettys,thread,pool;public,void,set,http,client,max,threads,integer,http,client,max,threads,this,http,client,max,threads,http,client,max,threads
JettyHttpEndpoint -> public void setHttpClientMaxThreads(Integer httpClientMaxThreads);1456052964;To set a value for maximum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to max 254 threads used in Jettys thread pool.;public void setHttpClientMaxThreads(Integer httpClientMaxThreads) {_        this.httpClientMaxThreads = httpClientMaxThreads__    };to,set,a,value,for,maximum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,max,254,threads,used,in,jettys,thread,pool;public,void,set,http,client,max,threads,integer,http,client,max,threads,this,http,client,max,threads,http,client,max,threads
JettyHttpEndpoint -> public void setHttpClientMaxThreads(Integer httpClientMaxThreads);1458071281;To set a value for maximum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to max 254 threads used in Jettys thread pool.;public void setHttpClientMaxThreads(Integer httpClientMaxThreads) {_        this.httpClientMaxThreads = httpClientMaxThreads__    };to,set,a,value,for,maximum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,max,254,threads,used,in,jettys,thread,pool;public,void,set,http,client,max,threads,integer,http,client,max,threads,this,http,client,max,threads,http,client,max,threads
JettyHttpEndpoint -> public void setHttpClientMaxThreads(Integer httpClientMaxThreads);1463303302;To set a value for maximum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to max 254 threads used in Jettys thread pool.;public void setHttpClientMaxThreads(Integer httpClientMaxThreads) {_        this.httpClientMaxThreads = httpClientMaxThreads__    };to,set,a,value,for,maximum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,max,254,threads,used,in,jettys,thread,pool;public,void,set,http,client,max,threads,integer,http,client,max,threads,this,http,client,max,threads,http,client,max,threads
JettyHttpEndpoint -> public void setHttpClientMaxThreads(Integer httpClientMaxThreads);1476946116;To set a value for maximum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to max 254 threads used in Jettys thread pool.;public void setHttpClientMaxThreads(Integer httpClientMaxThreads) {_        this.httpClientMaxThreads = httpClientMaxThreads__    };to,set,a,value,for,maximum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,max,254,threads,used,in,jettys,thread,pool;public,void,set,http,client,max,threads,integer,http,client,max,threads,this,http,client,max,threads,http,client,max,threads
JettyHttpEndpoint -> public void setHttpClientMaxThreads(Integer httpClientMaxThreads);1491585299;To set a value for maximum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to max 254 threads used in Jettys thread pool.;public void setHttpClientMaxThreads(Integer httpClientMaxThreads) {_        this.httpClientMaxThreads = httpClientMaxThreads__    };to,set,a,value,for,maximum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,max,254,threads,used,in,jettys,thread,pool;public,void,set,http,client,max,threads,integer,http,client,max,threads,this,http,client,max,threads,http,client,max,threads
JettyHttpEndpoint -> public void setHttpClientMaxThreads(Integer httpClientMaxThreads);1524001544;To set a value for maximum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to max 254 threads used in Jettys thread pool.;public void setHttpClientMaxThreads(Integer httpClientMaxThreads) {_        this.httpClientMaxThreads = httpClientMaxThreads__    };to,set,a,value,for,maximum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,max,254,threads,used,in,jettys,thread,pool;public,void,set,http,client,max,threads,integer,http,client,max,threads,this,http,client,max,threads,http,client,max,threads
JettyHttpEndpoint -> public void setHttpClientMaxThreads(Integer httpClientMaxThreads);1540108161;To set a value for maximum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to max 254 threads used in Jettys thread pool.;public void setHttpClientMaxThreads(Integer httpClientMaxThreads) {_        this.httpClientMaxThreads = httpClientMaxThreads__    };to,set,a,value,for,maximum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,max,254,threads,used,in,jettys,thread,pool;public,void,set,http,client,max,threads,integer,http,client,max,threads,this,http,client,max,threads,http,client,max,threads
JettyHttpEndpoint -> public void setHttpClientMaxThreads(Integer httpClientMaxThreads);1540108163;To set a value for maximum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to max 254 threads used in Jettys thread pool.;public void setHttpClientMaxThreads(Integer httpClientMaxThreads) {_        this.httpClientMaxThreads = httpClientMaxThreads__    };to,set,a,value,for,maximum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,max,254,threads,used,in,jettys,thread,pool;public,void,set,http,client,max,threads,integer,http,client,max,threads,this,http,client,max,threads,http,client,max,threads
JettyHttpEndpoint -> public void setHttpClientMaxThreads(Integer httpClientMaxThreads);1545220307;To set a value for maximum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to max 254 threads used in Jettys thread pool.;public void setHttpClientMaxThreads(Integer httpClientMaxThreads) {_        this.httpClientMaxThreads = httpClientMaxThreads__    };to,set,a,value,for,maximum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,max,254,threads,used,in,jettys,thread,pool;public,void,set,http,client,max,threads,integer,http,client,max,threads,this,http,client,max,threads,http,client,max,threads
JettyHttpEndpoint -> public void setHttpClientMaxThreads(Integer httpClientMaxThreads);1548332772;To set a value for maximum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to max 254 threads used in Jettys thread pool.;public void setHttpClientMaxThreads(Integer httpClientMaxThreads) {_        this.httpClientMaxThreads = httpClientMaxThreads__    };to,set,a,value,for,maximum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,max,254,threads,used,in,jettys,thread,pool;public,void,set,http,client,max,threads,integer,http,client,max,threads,this,http,client,max,threads,http,client,max,threads
JettyHttpEndpoint -> public void setHttpClientMaxThreads(Integer httpClientMaxThreads);1548773544;To set a value for maximum number of threads in HttpClient thread pool._This setting override any setting configured on component level._Notice that both a min and max size must be configured. If not set it default to max 254 threads used in Jettys thread pool.;public void setHttpClientMaxThreads(Integer httpClientMaxThreads) {_        this.httpClientMaxThreads = httpClientMaxThreads__    };to,set,a,value,for,maximum,number,of,threads,in,http,client,thread,pool,this,setting,override,any,setting,configured,on,component,level,notice,that,both,a,min,and,max,size,must,be,configured,if,not,set,it,default,to,max,254,threads,used,in,jettys,thread,pool;public,void,set,http,client,max,threads,integer,http,client,max,threads,this,http,client,max,threads,http,client,max,threads
JettyHttpEndpoint -> public void setHandlers(List<Handler> handlers);1451917458;Specifies a comma-delimited set of org.mortbay.jetty.Handler instances in your Registry (such as your Spring ApplicationContext)._These handlers are added to the Jetty servlet context (for example, to add security)._Important: You can not use different handlers with different Jetty endpoints using the same port number._The handlers is associated to the port number. If you need different handlers, then use different port numbers.;public void setHandlers(List<Handler> handlers) {_        this.handlers = handlers__    };specifies,a,comma,delimited,set,of,org,mortbay,jetty,handler,instances,in,your,registry,such,as,your,spring,application,context,these,handlers,are,added,to,the,jetty,servlet,context,for,example,to,add,security,important,you,can,not,use,different,handlers,with,different,jetty,endpoints,using,the,same,port,number,the,handlers,is,associated,to,the,port,number,if,you,need,different,handlers,then,use,different,port,numbers;public,void,set,handlers,list,handler,handlers,this,handlers,handlers
JettyHttpEndpoint -> public void setHandlers(List<Handler> handlers);1452015455;Specifies a comma-delimited set of org.mortbay.jetty.Handler instances in your Registry (such as your Spring ApplicationContext)._These handlers are added to the Jetty servlet context (for example, to add security)._Important: You can not use different handlers with different Jetty endpoints using the same port number._The handlers is associated to the port number. If you need different handlers, then use different port numbers.;public void setHandlers(List<Handler> handlers) {_        this.handlers = handlers__    };specifies,a,comma,delimited,set,of,org,mortbay,jetty,handler,instances,in,your,registry,such,as,your,spring,application,context,these,handlers,are,added,to,the,jetty,servlet,context,for,example,to,add,security,important,you,can,not,use,different,handlers,with,different,jetty,endpoints,using,the,same,port,number,the,handlers,is,associated,to,the,port,number,if,you,need,different,handlers,then,use,different,port,numbers;public,void,set,handlers,list,handler,handlers,this,handlers,handlers
JettyHttpEndpoint -> public void setHandlers(List<Handler> handlers);1456052964;Specifies a comma-delimited set of org.mortbay.jetty.Handler instances in your Registry (such as your Spring ApplicationContext)._These handlers are added to the Jetty servlet context (for example, to add security)._Important: You can not use different handlers with different Jetty endpoints using the same port number._The handlers is associated to the port number. If you need different handlers, then use different port numbers.;public void setHandlers(List<Handler> handlers) {_        this.handlers = handlers__    };specifies,a,comma,delimited,set,of,org,mortbay,jetty,handler,instances,in,your,registry,such,as,your,spring,application,context,these,handlers,are,added,to,the,jetty,servlet,context,for,example,to,add,security,important,you,can,not,use,different,handlers,with,different,jetty,endpoints,using,the,same,port,number,the,handlers,is,associated,to,the,port,number,if,you,need,different,handlers,then,use,different,port,numbers;public,void,set,handlers,list,handler,handlers,this,handlers,handlers
JettyHttpEndpoint -> public void setHandlers(List<Handler> handlers);1458071281;Specifies a comma-delimited set of org.mortbay.jetty.Handler instances in your Registry (such as your Spring ApplicationContext)._These handlers are added to the Jetty servlet context (for example, to add security)._Important: You can not use different handlers with different Jetty endpoints using the same port number._The handlers is associated to the port number. If you need different handlers, then use different port numbers.;public void setHandlers(List<Handler> handlers) {_        this.handlers = handlers__    };specifies,a,comma,delimited,set,of,org,mortbay,jetty,handler,instances,in,your,registry,such,as,your,spring,application,context,these,handlers,are,added,to,the,jetty,servlet,context,for,example,to,add,security,important,you,can,not,use,different,handlers,with,different,jetty,endpoints,using,the,same,port,number,the,handlers,is,associated,to,the,port,number,if,you,need,different,handlers,then,use,different,port,numbers;public,void,set,handlers,list,handler,handlers,this,handlers,handlers
JettyHttpEndpoint -> public void setHandlers(List<Handler> handlers);1463303302;Specifies a comma-delimited set of org.mortbay.jetty.Handler instances in your Registry (such as your Spring ApplicationContext)._These handlers are added to the Jetty servlet context (for example, to add security)._Important: You can not use different handlers with different Jetty endpoints using the same port number._The handlers is associated to the port number. If you need different handlers, then use different port numbers.;public void setHandlers(List<Handler> handlers) {_        this.handlers = handlers__    };specifies,a,comma,delimited,set,of,org,mortbay,jetty,handler,instances,in,your,registry,such,as,your,spring,application,context,these,handlers,are,added,to,the,jetty,servlet,context,for,example,to,add,security,important,you,can,not,use,different,handlers,with,different,jetty,endpoints,using,the,same,port,number,the,handlers,is,associated,to,the,port,number,if,you,need,different,handlers,then,use,different,port,numbers;public,void,set,handlers,list,handler,handlers,this,handlers,handlers
JettyHttpEndpoint -> public void setHandlers(List<Handler> handlers);1476946116;Specifies a comma-delimited set of org.mortbay.jetty.Handler instances in your Registry (such as your Spring ApplicationContext)._These handlers are added to the Jetty servlet context (for example, to add security)._Important: You can not use different handlers with different Jetty endpoints using the same port number._The handlers is associated to the port number. If you need different handlers, then use different port numbers.;public void setHandlers(List<Handler> handlers) {_        this.handlers = handlers__    };specifies,a,comma,delimited,set,of,org,mortbay,jetty,handler,instances,in,your,registry,such,as,your,spring,application,context,these,handlers,are,added,to,the,jetty,servlet,context,for,example,to,add,security,important,you,can,not,use,different,handlers,with,different,jetty,endpoints,using,the,same,port,number,the,handlers,is,associated,to,the,port,number,if,you,need,different,handlers,then,use,different,port,numbers;public,void,set,handlers,list,handler,handlers,this,handlers,handlers
JettyHttpEndpoint -> public void setHandlers(List<Handler> handlers);1491585299;Specifies a comma-delimited set of org.mortbay.jetty.Handler instances in your Registry (such as your Spring ApplicationContext)._These handlers are added to the Jetty servlet context (for example, to add security)._Important: You can not use different handlers with different Jetty endpoints using the same port number._The handlers is associated to the port number. If you need different handlers, then use different port numbers.;public void setHandlers(List<Handler> handlers) {_        this.handlers = handlers__    };specifies,a,comma,delimited,set,of,org,mortbay,jetty,handler,instances,in,your,registry,such,as,your,spring,application,context,these,handlers,are,added,to,the,jetty,servlet,context,for,example,to,add,security,important,you,can,not,use,different,handlers,with,different,jetty,endpoints,using,the,same,port,number,the,handlers,is,associated,to,the,port,number,if,you,need,different,handlers,then,use,different,port,numbers;public,void,set,handlers,list,handler,handlers,this,handlers,handlers
JettyHttpEndpoint -> public void setHandlers(List<Handler> handlers);1524001544;Specifies a comma-delimited set of org.mortbay.jetty.Handler instances in your Registry (such as your Spring ApplicationContext)._These handlers are added to the Jetty servlet context (for example, to add security)._Important: You can not use different handlers with different Jetty endpoints using the same port number._The handlers is associated to the port number. If you need different handlers, then use different port numbers.;public void setHandlers(List<Handler> handlers) {_        this.handlers = handlers__    };specifies,a,comma,delimited,set,of,org,mortbay,jetty,handler,instances,in,your,registry,such,as,your,spring,application,context,these,handlers,are,added,to,the,jetty,servlet,context,for,example,to,add,security,important,you,can,not,use,different,handlers,with,different,jetty,endpoints,using,the,same,port,number,the,handlers,is,associated,to,the,port,number,if,you,need,different,handlers,then,use,different,port,numbers;public,void,set,handlers,list,handler,handlers,this,handlers,handlers
JettyHttpEndpoint -> public void setHandlers(List<Handler> handlers);1540108161;Specifies a comma-delimited set of org.mortbay.jetty.Handler instances in your Registry (such as your Spring ApplicationContext)._These handlers are added to the Jetty servlet context (for example, to add security)._Important: You can not use different handlers with different Jetty endpoints using the same port number._The handlers is associated to the port number. If you need different handlers, then use different port numbers.;public void setHandlers(List<Handler> handlers) {_        this.handlers = handlers__    };specifies,a,comma,delimited,set,of,org,mortbay,jetty,handler,instances,in,your,registry,such,as,your,spring,application,context,these,handlers,are,added,to,the,jetty,servlet,context,for,example,to,add,security,important,you,can,not,use,different,handlers,with,different,jetty,endpoints,using,the,same,port,number,the,handlers,is,associated,to,the,port,number,if,you,need,different,handlers,then,use,different,port,numbers;public,void,set,handlers,list,handler,handlers,this,handlers,handlers
JettyHttpEndpoint -> public void setHandlers(List<Handler> handlers);1540108163;Specifies a comma-delimited set of org.mortbay.jetty.Handler instances in your Registry (such as your Spring ApplicationContext)._These handlers are added to the Jetty servlet context (for example, to add security)._Important: You can not use different handlers with different Jetty endpoints using the same port number._The handlers is associated to the port number. If you need different handlers, then use different port numbers.;public void setHandlers(List<Handler> handlers) {_        this.handlers = handlers__    };specifies,a,comma,delimited,set,of,org,mortbay,jetty,handler,instances,in,your,registry,such,as,your,spring,application,context,these,handlers,are,added,to,the,jetty,servlet,context,for,example,to,add,security,important,you,can,not,use,different,handlers,with,different,jetty,endpoints,using,the,same,port,number,the,handlers,is,associated,to,the,port,number,if,you,need,different,handlers,then,use,different,port,numbers;public,void,set,handlers,list,handler,handlers,this,handlers,handlers
JettyHttpEndpoint -> public void setHandlers(List<Handler> handlers);1545220307;Specifies a comma-delimited set of org.mortbay.jetty.Handler instances in your Registry (such as your Spring ApplicationContext)._These handlers are added to the Jetty servlet context (for example, to add security)._Important: You can not use different handlers with different Jetty endpoints using the same port number._The handlers is associated to the port number. If you need different handlers, then use different port numbers.;public void setHandlers(List<Handler> handlers) {_        this.handlers = handlers__    };specifies,a,comma,delimited,set,of,org,mortbay,jetty,handler,instances,in,your,registry,such,as,your,spring,application,context,these,handlers,are,added,to,the,jetty,servlet,context,for,example,to,add,security,important,you,can,not,use,different,handlers,with,different,jetty,endpoints,using,the,same,port,number,the,handlers,is,associated,to,the,port,number,if,you,need,different,handlers,then,use,different,port,numbers;public,void,set,handlers,list,handler,handlers,this,handlers,handlers
JettyHttpEndpoint -> public void setHandlers(List<Handler> handlers);1548332772;Specifies a comma-delimited set of org.mortbay.jetty.Handler instances in your Registry (such as your Spring ApplicationContext)._These handlers are added to the Jetty servlet context (for example, to add security)._Important: You can not use different handlers with different Jetty endpoints using the same port number._The handlers is associated to the port number. If you need different handlers, then use different port numbers.;public void setHandlers(List<Handler> handlers) {_        this.handlers = handlers__    };specifies,a,comma,delimited,set,of,org,mortbay,jetty,handler,instances,in,your,registry,such,as,your,spring,application,context,these,handlers,are,added,to,the,jetty,servlet,context,for,example,to,add,security,important,you,can,not,use,different,handlers,with,different,jetty,endpoints,using,the,same,port,number,the,handlers,is,associated,to,the,port,number,if,you,need,different,handlers,then,use,different,port,numbers;public,void,set,handlers,list,handler,handlers,this,handlers,handlers
JettyHttpEndpoint -> public void setHandlers(List<Handler> handlers);1548773544;Specifies a comma-delimited set of org.mortbay.jetty.Handler instances in your Registry (such as your Spring ApplicationContext)._These handlers are added to the Jetty servlet context (for example, to add security)._Important: You can not use different handlers with different Jetty endpoints using the same port number._The handlers is associated to the port number. If you need different handlers, then use different port numbers.;public void setHandlers(List<Handler> handlers) {_        this.handlers = handlers__    };specifies,a,comma,delimited,set,of,org,mortbay,jetty,handler,instances,in,your,registry,such,as,your,spring,application,context,these,handlers,are,added,to,the,jetty,servlet,context,for,example,to,add,security,important,you,can,not,use,different,handlers,with,different,jetty,endpoints,using,the,same,port,number,the,handlers,is,associated,to,the,port,number,if,you,need,different,handlers,then,use,different,port,numbers;public,void,set,handlers,list,handler,handlers,this,handlers,handlers
JettyHttpEndpoint -> @Deprecated     public void setSslContextParametersRef(String sslContextParametersRef);1452015455;To configure security using SSLContextParameters;@Deprecated_    public void setSslContextParametersRef(String sslContextParametersRef) {_        this.sslContextParametersRef = sslContextParametersRef__    };to,configure,security,using,sslcontext,parameters;deprecated,public,void,set,ssl,context,parameters,ref,string,ssl,context,parameters,ref,this,ssl,context,parameters,ref,ssl,context,parameters,ref
JettyHttpEndpoint -> @Deprecated     public void setSslContextParametersRef(String sslContextParametersRef);1456052964;To configure security using SSLContextParameters;@Deprecated_    public void setSslContextParametersRef(String sslContextParametersRef) {_        this.sslContextParametersRef = sslContextParametersRef__    };to,configure,security,using,sslcontext,parameters;deprecated,public,void,set,ssl,context,parameters,ref,string,ssl,context,parameters,ref,this,ssl,context,parameters,ref,ssl,context,parameters,ref
JettyHttpEndpoint -> @Deprecated     public void setSslContextParametersRef(String sslContextParametersRef);1458071281;To configure security using SSLContextParameters;@Deprecated_    public void setSslContextParametersRef(String sslContextParametersRef) {_        this.sslContextParametersRef = sslContextParametersRef__    };to,configure,security,using,sslcontext,parameters;deprecated,public,void,set,ssl,context,parameters,ref,string,ssl,context,parameters,ref,this,ssl,context,parameters,ref,ssl,context,parameters,ref
JettyHttpEndpoint -> @Deprecated     public void setSslContextParametersRef(String sslContextParametersRef);1463303302;To configure security using SSLContextParameters;@Deprecated_    public void setSslContextParametersRef(String sslContextParametersRef) {_        this.sslContextParametersRef = sslContextParametersRef__    };to,configure,security,using,sslcontext,parameters;deprecated,public,void,set,ssl,context,parameters,ref,string,ssl,context,parameters,ref,this,ssl,context,parameters,ref,ssl,context,parameters,ref
JettyHttpEndpoint -> @Deprecated     public void setSslContextParametersRef(String sslContextParametersRef);1476946116;To configure security using SSLContextParameters;@Deprecated_    public void setSslContextParametersRef(String sslContextParametersRef) {_        this.sslContextParametersRef = sslContextParametersRef__    };to,configure,security,using,sslcontext,parameters;deprecated,public,void,set,ssl,context,parameters,ref,string,ssl,context,parameters,ref,this,ssl,context,parameters,ref,ssl,context,parameters,ref
JettyHttpEndpoint -> public void setClient(HttpClient client);1421675044;Sets a shared {@link HttpClient} to use for all producers_created by this endpoint. By default each producer will_use a new http client, and not share._<p/>_<b>Important: </b> Make sure to handle the lifecycle of the shared_client, such as stopping the client, when it is no longer in use._Camel will call the <tt>start</tt> method on the client to ensure_its started when this endpoint creates a producer._<p/>_This options should only be used in special circumstances.;public void setClient(HttpClient client) {_        this.client = client__    };sets,a,shared,link,http,client,to,use,for,all,producers,created,by,this,endpoint,by,default,each,producer,will,use,a,new,http,client,and,not,share,p,b,important,b,make,sure,to,handle,the,lifecycle,of,the,shared,client,such,as,stopping,the,client,when,it,is,no,longer,in,use,camel,will,call,the,tt,start,tt,method,on,the,client,to,ensure,its,started,when,this,endpoint,creates,a,producer,p,this,options,should,only,be,used,in,special,circumstances;public,void,set,client,http,client,client,this,client,client
JettyHttpEndpoint -> public void setClient(HttpClient client);1425142361;Sets a shared {@link HttpClient} to use for all producers_created by this endpoint. By default each producer will_use a new http client, and not share._<p/>_<b>Important: </b> Make sure to handle the lifecycle of the shared_client, such as stopping the client, when it is no longer in use._Camel will call the <tt>start</tt> method on the client to ensure_its started when this endpoint creates a producer._<p/>_This options should only be used in special circumstances.;public void setClient(HttpClient client) {_        this.client = client__    };sets,a,shared,link,http,client,to,use,for,all,producers,created,by,this,endpoint,by,default,each,producer,will,use,a,new,http,client,and,not,share,p,b,important,b,make,sure,to,handle,the,lifecycle,of,the,shared,client,such,as,stopping,the,client,when,it,is,no,longer,in,use,camel,will,call,the,tt,start,tt,method,on,the,client,to,ensure,its,started,when,this,endpoint,creates,a,producer,p,this,options,should,only,be,used,in,special,circumstances;public,void,set,client,http,client,client,this,client,client
JettyHttpEndpoint -> public void setClient(HttpClient client);1434293741;Sets a shared {@link HttpClient} to use for all producers_created by this endpoint. By default each producer will_use a new http client, and not share._<p/>_<b>Important: </b> Make sure to handle the lifecycle of the shared_client, such as stopping the client, when it is no longer in use._Camel will call the <tt>start</tt> method on the client to ensure_its started when this endpoint creates a producer._<p/>_This options should only be used in special circumstances.;public void setClient(HttpClient client) {_        this.client = client__    };sets,a,shared,link,http,client,to,use,for,all,producers,created,by,this,endpoint,by,default,each,producer,will,use,a,new,http,client,and,not,share,p,b,important,b,make,sure,to,handle,the,lifecycle,of,the,shared,client,such,as,stopping,the,client,when,it,is,no,longer,in,use,camel,will,call,the,tt,start,tt,method,on,the,client,to,ensure,its,started,when,this,endpoint,creates,a,producer,p,this,options,should,only,be,used,in,special,circumstances;public,void,set,client,http,client,client,this,client,client
JettyHttpEndpoint -> public void setClient(HttpClient client);1437656672;Sets a shared {@link HttpClient} to use for all producers_created by this endpoint. By default each producer will_use a new http client, and not share._<p/>_<b>Important: </b> Make sure to handle the lifecycle of the shared_client, such as stopping the client, when it is no longer in use._Camel will call the <tt>start</tt> method on the client to ensure_its started when this endpoint creates a producer._<p/>_This options should only be used in special circumstances.;public void setClient(HttpClient client) {_        this.client = client__    };sets,a,shared,link,http,client,to,use,for,all,producers,created,by,this,endpoint,by,default,each,producer,will,use,a,new,http,client,and,not,share,p,b,important,b,make,sure,to,handle,the,lifecycle,of,the,shared,client,such,as,stopping,the,client,when,it,is,no,longer,in,use,camel,will,call,the,tt,start,tt,method,on,the,client,to,ensure,its,started,when,this,endpoint,creates,a,producer,p,this,options,should,only,be,used,in,special,circumstances;public,void,set,client,http,client,client,this,client,client
JettyHttpEndpoint -> public void setClient(HttpClient client);1439455823;Sets a shared {@link HttpClient} to use for all producers_created by this endpoint. By default each producer will_use a new http client, and not share._<p/>_<b>Important: </b> Make sure to handle the lifecycle of the shared_client, such as stopping the client, when it is no longer in use._Camel will call the <tt>start</tt> method on the client to ensure_its started when this endpoint creates a producer._<p/>_This options should only be used in special circumstances.;public void setClient(HttpClient client) {_        this.client = client__    };sets,a,shared,link,http,client,to,use,for,all,producers,created,by,this,endpoint,by,default,each,producer,will,use,a,new,http,client,and,not,share,p,b,important,b,make,sure,to,handle,the,lifecycle,of,the,shared,client,such,as,stopping,the,client,when,it,is,no,longer,in,use,camel,will,call,the,tt,start,tt,method,on,the,client,to,ensure,its,started,when,this,endpoint,creates,a,producer,p,this,options,should,only,be,used,in,special,circumstances;public,void,set,client,http,client,client,this,client,client
JettyHttpEndpoint -> public void setClient(HttpClient client);1447336366;Sets a shared {@link HttpClient} to use for all producers_created by this endpoint. By default each producer will_use a new http client, and not share._<p/>_<b>Important: </b> Make sure to handle the lifecycle of the shared_client, such as stopping the client, when it is no longer in use._Camel will call the <tt>start</tt> method on the client to ensure_its started when this endpoint creates a producer._<p/>_This options should only be used in special circumstances.;public void setClient(HttpClient client) {_        this.client = client__    };sets,a,shared,link,http,client,to,use,for,all,producers,created,by,this,endpoint,by,default,each,producer,will,use,a,new,http,client,and,not,share,p,b,important,b,make,sure,to,handle,the,lifecycle,of,the,shared,client,such,as,stopping,the,client,when,it,is,no,longer,in,use,camel,will,call,the,tt,start,tt,method,on,the,client,to,ensure,its,started,when,this,endpoint,creates,a,producer,p,this,options,should,only,be,used,in,special,circumstances;public,void,set,client,http,client,client,this,client,client
JettyHttpEndpoint -> public void setClient(HttpClient client);1451917458;Sets a shared {@link HttpClient} to use for all producers_created by this endpoint. By default each producer will_use a new http client, and not share._<p/>_<b>Important: </b> Make sure to handle the lifecycle of the shared_client, such as stopping the client, when it is no longer in use._Camel will call the <tt>start</tt> method on the client to ensure_its started when this endpoint creates a producer._<p/>_This options should only be used in special circumstances.;public void setClient(HttpClient client) {_        this.client = client__    };sets,a,shared,link,http,client,to,use,for,all,producers,created,by,this,endpoint,by,default,each,producer,will,use,a,new,http,client,and,not,share,p,b,important,b,make,sure,to,handle,the,lifecycle,of,the,shared,client,such,as,stopping,the,client,when,it,is,no,longer,in,use,camel,will,call,the,tt,start,tt,method,on,the,client,to,ensure,its,started,when,this,endpoint,creates,a,producer,p,this,options,should,only,be,used,in,special,circumstances;public,void,set,client,http,client,client,this,client,client
JettyHttpEndpoint -> public void setClient(HttpClient client);1452015455;Sets a shared {@link HttpClient} to use for all producers_created by this endpoint. By default each producer will_use a new http client, and not share._<p/>_<b>Important: </b> Make sure to handle the lifecycle of the shared_client, such as stopping the client, when it is no longer in use._Camel will call the <tt>start</tt> method on the client to ensure_its started when this endpoint creates a producer._<p/>_This options should only be used in special circumstances.;public void setClient(HttpClient client) {_        this.client = client__    };sets,a,shared,link,http,client,to,use,for,all,producers,created,by,this,endpoint,by,default,each,producer,will,use,a,new,http,client,and,not,share,p,b,important,b,make,sure,to,handle,the,lifecycle,of,the,shared,client,such,as,stopping,the,client,when,it,is,no,longer,in,use,camel,will,call,the,tt,start,tt,method,on,the,client,to,ensure,its,started,when,this,endpoint,creates,a,producer,p,this,options,should,only,be,used,in,special,circumstances;public,void,set,client,http,client,client,this,client,client
JettyHttpEndpoint -> public void setClient(HttpClient client);1456052964;Sets a shared {@link HttpClient} to use for all producers_created by this endpoint. By default each producer will_use a new http client, and not share._<p/>_<b>Important: </b> Make sure to handle the lifecycle of the shared_client, such as stopping the client, when it is no longer in use._Camel will call the <tt>start</tt> method on the client to ensure_its started when this endpoint creates a producer._<p/>_This options should only be used in special circumstances.;public void setClient(HttpClient client) {_        this.client = client__    };sets,a,shared,link,http,client,to,use,for,all,producers,created,by,this,endpoint,by,default,each,producer,will,use,a,new,http,client,and,not,share,p,b,important,b,make,sure,to,handle,the,lifecycle,of,the,shared,client,such,as,stopping,the,client,when,it,is,no,longer,in,use,camel,will,call,the,tt,start,tt,method,on,the,client,to,ensure,its,started,when,this,endpoint,creates,a,producer,p,this,options,should,only,be,used,in,special,circumstances;public,void,set,client,http,client,client,this,client,client
JettyHttpEndpoint -> public void setEnableCORS(boolean enableCORS);1451917458;If the option is true, Jetty server will setup the CrossOriginFilter which supports the CORS out of box.;public void setEnableCORS(boolean enableCORS) {_        this.enableCORS = enableCORS__    };if,the,option,is,true,jetty,server,will,setup,the,cross,origin,filter,which,supports,the,cors,out,of,box;public,void,set,enable,cors,boolean,enable,cors,this,enable,cors,enable,cors
JettyHttpEndpoint -> public void setEnableCORS(boolean enableCORS);1452015455;If the option is true, Jetty server will setup the CrossOriginFilter which supports the CORS out of box.;public void setEnableCORS(boolean enableCORS) {_        this.enableCORS = enableCORS__    };if,the,option,is,true,jetty,server,will,setup,the,cross,origin,filter,which,supports,the,cors,out,of,box;public,void,set,enable,cors,boolean,enable,cors,this,enable,cors,enable,cors
JettyHttpEndpoint -> public void setEnableCORS(boolean enableCORS);1456052964;If the option is true, Jetty server will setup the CrossOriginFilter which supports the CORS out of box.;public void setEnableCORS(boolean enableCORS) {_        this.enableCORS = enableCORS__    };if,the,option,is,true,jetty,server,will,setup,the,cross,origin,filter,which,supports,the,cors,out,of,box;public,void,set,enable,cors,boolean,enable,cors,this,enable,cors,enable,cors
JettyHttpEndpoint -> public void setEnableCORS(boolean enableCORS);1458071281;If the option is true, Jetty server will setup the CrossOriginFilter which supports the CORS out of box.;public void setEnableCORS(boolean enableCORS) {_        this.enableCORS = enableCORS__    };if,the,option,is,true,jetty,server,will,setup,the,cross,origin,filter,which,supports,the,cors,out,of,box;public,void,set,enable,cors,boolean,enable,cors,this,enable,cors,enable,cors
JettyHttpEndpoint -> public void setEnableCORS(boolean enableCORS);1463303302;If the option is true, Jetty server will setup the CrossOriginFilter which supports the CORS out of box.;public void setEnableCORS(boolean enableCORS) {_        this.enableCORS = enableCORS__    };if,the,option,is,true,jetty,server,will,setup,the,cross,origin,filter,which,supports,the,cors,out,of,box;public,void,set,enable,cors,boolean,enable,cors,this,enable,cors,enable,cors
JettyHttpEndpoint -> public void setEnableCORS(boolean enableCORS);1476946116;If the option is true, Jetty server will setup the CrossOriginFilter which supports the CORS out of box.;public void setEnableCORS(boolean enableCORS) {_        this.enableCORS = enableCORS__    };if,the,option,is,true,jetty,server,will,setup,the,cross,origin,filter,which,supports,the,cors,out,of,box;public,void,set,enable,cors,boolean,enable,cors,this,enable,cors,enable,cors
JettyHttpEndpoint -> public void setEnableCORS(boolean enableCORS);1491585299;If the option is true, Jetty server will setup the CrossOriginFilter which supports the CORS out of box.;public void setEnableCORS(boolean enableCORS) {_        this.enableCORS = enableCORS__    };if,the,option,is,true,jetty,server,will,setup,the,cross,origin,filter,which,supports,the,cors,out,of,box;public,void,set,enable,cors,boolean,enable,cors,this,enable,cors,enable,cors
JettyHttpEndpoint -> public void setEnableCORS(boolean enableCORS);1524001544;If the option is true, Jetty server will setup the CrossOriginFilter which supports the CORS out of box.;public void setEnableCORS(boolean enableCORS) {_        this.enableCORS = enableCORS__    };if,the,option,is,true,jetty,server,will,setup,the,cross,origin,filter,which,supports,the,cors,out,of,box;public,void,set,enable,cors,boolean,enable,cors,this,enable,cors,enable,cors
JettyHttpEndpoint -> public void setEnableCORS(boolean enableCORS);1540108161;If the option is true, Jetty server will setup the CrossOriginFilter which supports the CORS out of box.;public void setEnableCORS(boolean enableCORS) {_        this.enableCORS = enableCORS__    };if,the,option,is,true,jetty,server,will,setup,the,cross,origin,filter,which,supports,the,cors,out,of,box;public,void,set,enable,cors,boolean,enable,cors,this,enable,cors,enable,cors
JettyHttpEndpoint -> public void setEnableCORS(boolean enableCORS);1540108163;If the option is true, Jetty server will setup the CrossOriginFilter which supports the CORS out of box.;public void setEnableCORS(boolean enableCORS) {_        this.enableCORS = enableCORS__    };if,the,option,is,true,jetty,server,will,setup,the,cross,origin,filter,which,supports,the,cors,out,of,box;public,void,set,enable,cors,boolean,enable,cors,this,enable,cors,enable,cors
JettyHttpEndpoint -> public void setEnableCORS(boolean enableCORS);1545220307;If the option is true, Jetty server will setup the CrossOriginFilter which supports the CORS out of box.;public void setEnableCORS(boolean enableCORS) {_        this.enableCORS = enableCORS__    };if,the,option,is,true,jetty,server,will,setup,the,cross,origin,filter,which,supports,the,cors,out,of,box;public,void,set,enable,cors,boolean,enable,cors,this,enable,cors,enable,cors
JettyHttpEndpoint -> public void setEnableCORS(boolean enableCORS);1548332772;If the option is true, Jetty server will setup the CrossOriginFilter which supports the CORS out of box.;public void setEnableCORS(boolean enableCORS) {_        this.enableCORS = enableCORS__    };if,the,option,is,true,jetty,server,will,setup,the,cross,origin,filter,which,supports,the,cors,out,of,box;public,void,set,enable,cors,boolean,enable,cors,this,enable,cors,enable,cors
JettyHttpEndpoint -> public void setEnableCORS(boolean enableCORS);1548773544;If the option is true, Jetty server will setup the CrossOriginFilter which supports the CORS out of box.;public void setEnableCORS(boolean enableCORS) {_        this.enableCORS = enableCORS__    };if,the,option,is,true,jetty,server,will,setup,the,cross,origin,filter,which,supports,the,cors,out,of,box;public,void,set,enable,cors,boolean,enable,cors,this,enable,cors,enable,cors
