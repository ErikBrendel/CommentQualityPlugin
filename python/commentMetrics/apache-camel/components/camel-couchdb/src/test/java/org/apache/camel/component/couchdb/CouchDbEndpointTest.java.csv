commented;modifiers;parameterAmount;loc;comment;code
false;public;0;19;;@Test public void testCreateCouchExchangeHeadersAreSet() throws Exception {     CouchDbEndpoint endpoint = new CouchDbEndpoint("couchdb:http://localhost/db", "http://localhost/db", new CouchDbComponent(new DefaultCamelContext())).     String id = UUID.randomUUID().toString().     String rev = UUID.randomUUID().toString().     String seq = "seq123".     JsonObject doc = new JsonObject().     doc.addProperty("_id", id).     doc.addProperty("_rev", rev).     Exchange exchange = endpoint.createExchange(seq, id, doc, false).     assertEquals(id, exchange.getIn().getHeader(CouchDbConstants.HEADER_DOC_ID)).     assertEquals(rev, exchange.getIn().getHeader(CouchDbConstants.HEADER_DOC_REV)).     assertEquals(seq, exchange.getIn().getHeader(CouchDbConstants.HEADER_SEQ)).     assertEquals("UPDATE", exchange.getIn().getHeader(CouchDbConstants.HEADER_METHOD)).     assertEquals("db", exchange.getIn().getHeader(CouchDbConstants.HEADER_DATABASE)). }
false;public;0;5;;@Test public void assertSingleton() throws Exception {     CouchDbEndpoint endpoint = new CouchDbEndpoint("couchdb:http://localhost/db", "http://localhost/db", new CouchDbComponent()).     assertTrue(endpoint.isSingleton()). }
false;public;0;4;;@Test(expected = IllegalArgumentException.class) public void testDbRequired() throws Exception {     new CouchDbEndpoint("couchdb:http://localhost:80", "http://localhost:80", new CouchDbComponent()). }
false;public;0;5;;@Test public void testDefaultPortIsSet() throws Exception {     CouchDbEndpoint endpoint = new CouchDbEndpoint("couchdb:http://localhost/db", "http://localhost/db", new CouchDbComponent()).     assertEquals(CouchDbEndpoint.DEFAULT_PORT, endpoint.getPort()). }
false;public;0;4;;@Test(expected = IllegalArgumentException.class) public void testHostnameRequired() throws Exception {     new CouchDbEndpoint("couchdb:http://:80/db", "http://:80/db", new CouchDbComponent()). }
false;public;0;4;;@Test(expected = IllegalArgumentException.class) public void testSchemeRequired() throws Exception {     new CouchDbEndpoint("couchdb:localhost:80/db", "localhost:80/db", new CouchDbComponent()). }
