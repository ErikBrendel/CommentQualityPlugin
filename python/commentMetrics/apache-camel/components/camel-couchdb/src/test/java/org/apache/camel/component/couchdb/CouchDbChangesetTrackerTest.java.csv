commented;modifiers;parameterAmount;loc;comment;code
false;public;0;25;;@Before public void before() {     when(endpoint.isUpdates()).thenReturn(true).     when(client.context()).thenReturn(context).     when(context.info()).thenReturn(info).     when(info.getUpdateSeq()).thenReturn("100").     when(client.changes()).thenReturn(changes).     when(changes.continuousChanges()).thenReturn(changes).     when(changes.includeDocs(true)).thenReturn(changes).     when(changes.since(anyString())).thenReturn(changes).     when(changes.heartBeat(anyLong())).thenReturn(changes).     when(changes.style(ArgumentMatchers.isNull())).thenReturn(changes).     when(row1.getSeq()).thenReturn("seq1").     when(row2.getSeq()).thenReturn("seq2").     when(row3.getSeq()).thenReturn("seq3").     when(row1.getId()).thenReturn("id1").     when(row2.getId()).thenReturn("id2").     when(row3.getId()).thenReturn("id3").     tracker = new CouchDbChangesetTracker(endpoint, consumer, client). }
false;public;0;18;;@Test public void testExchangeCreatedWithCorrectProperties() throws Exception {     when(changes.hasNext()).thenReturn(true, true, true, false).     when(changes.next()).thenReturn(row1, row2, row3).     when(endpoint.createExchange("seq1", "id1", null, false)).thenReturn(exchange1).     when(endpoint.createExchange("seq2", "id2", null, false)).thenReturn(exchange2).     when(endpoint.createExchange("seq3", "id3", null, false)).thenReturn(exchange3).     when(consumer.getProcessor()).thenReturn(processor).     tracker.run().     verify(endpoint).createExchange("seq1", "id1", null, false).     verify(processor).process(exchange1).     verify(endpoint).createExchange("seq2", "id2", null, false).     verify(processor).process(exchange2).     verify(endpoint).createExchange("seq3", "id3", null, false).     verify(processor).process(exchange3). }
false;public;0;11;;@Test public void testProcessorInvoked() throws Exception {     when(changes.hasNext()).thenReturn(true, false).     when(changes.next()).thenReturn(row1).     when(consumer.getProcessor()).thenReturn(processor).     tracker.run().     verify(endpoint).createExchange("seq1", "id1", null, false).     verify(processor).process(ArgumentMatchers.isNull()). }
