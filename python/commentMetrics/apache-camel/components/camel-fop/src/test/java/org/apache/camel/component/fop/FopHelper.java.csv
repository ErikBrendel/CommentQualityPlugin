commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;6;;public static String extractTextFrom(PDDocument document) throws IOException {     Writer output = new StringWriter().     PDFTextStripper stripper = new PDFTextStripper().     stripper.writeText(document, output).     return output.toString().trim(). }
false;public,static;2;4;;public static String getDocumentMetadataValue(PDDocument document, COSName name) {     PDDocumentInformation info = document.getDocumentInformation().     return info.getCOSObject().getString(name). }
false;public,static;1;16;;public static String decorateTextWithXSLFO(String text) {     return "<fo:root xmlns:fo=\"http://www.w3.org/1999/XSL/Format\">\n" + "  <fo:layout-master-set>\n" + "    <fo:simple-page-master master-name=\"only\">\n" + "      <fo:region-body region-name=\"xsl-region-body\" margin=\"0.7in\"  padding=\"0\" />\n" + "      <fo:region-before region-name=\"xsl-region-before\" extent=\"0.7in\" />\n" + "        <fo:region-after region-name=\"xsl-region-after\" extent=\"0.7in\" />\n" + "      </fo:simple-page-master>\n" + "    </fo:layout-master-set>\n" + "    <fo:page-sequence master-reference=\"only\">\n" + "      <fo:flow flow-name=\"xsl-region-body\">\n" + "      <fo:block>" + text + "</fo:block>\n" + "    </fo:flow>\n" + "  </fo:page-sequence>\n" + "</fo:root>". }
