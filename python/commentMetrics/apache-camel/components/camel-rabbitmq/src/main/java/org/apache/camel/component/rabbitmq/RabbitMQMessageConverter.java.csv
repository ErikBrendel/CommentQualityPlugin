# id;timestamp;commentText;codeText;commentWords;codeWords
RabbitMQMessageConverter -> public void mergeAmqpProperties(Exchange exchange, AMQP.BasicProperties properties);1433798679;Will take an {@link Exchange} and add header values back to the {@link Exchange#getIn()};public void mergeAmqpProperties(Exchange exchange, AMQP.BasicProperties properties) {__        if (properties.getType() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.TYPE, properties.getType())__        }_        if (properties.getAppId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.APP_ID, properties.getAppId())__        }_        if (properties.getClusterId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CLUSTERID, properties.getClusterId())__        }_        if (properties.getContentEncoding() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CONTENT_ENCODING, properties.getContentEncoding())__        }_        if (properties.getContentType() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CONTENT_TYPE, properties.getContentType())__        }_        if (properties.getCorrelationId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CORRELATIONID, properties.getCorrelationId())__        }_        if (properties.getExpiration() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.EXPIRATION, properties.getExpiration())__        }_        if (properties.getMessageId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.MESSAGE_ID, properties.getMessageId())__        }_        if (properties.getPriority() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.PRIORITY, properties.getPriority())__        }_        if (properties.getReplyTo() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.REPLY_TO, properties.getReplyTo())__        }_        if (properties.getTimestamp() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.TIMESTAMP, properties.getTimestamp())__        }_        if (properties.getUserId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.USERID, properties.getUserId())__        }_    };will,take,an,link,exchange,and,add,header,values,back,to,the,link,exchange,get,in;public,void,merge,amqp,properties,exchange,exchange,amqp,basic,properties,properties,if,properties,get,type,null,exchange,get,in,set,header,rabbit,mqconstants,type,properties,get,type,if,properties,get,app,id,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,app,id,if,properties,get,cluster,id,null,exchange,get,in,set,header,rabbit,mqconstants,clusterid,properties,get,cluster,id,if,properties,get,content,encoding,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,content,encoding,if,properties,get,content,type,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,content,type,if,properties,get,correlation,id,null,exchange,get,in,set,header,rabbit,mqconstants,correlationid,properties,get,correlation,id,if,properties,get,expiration,null,exchange,get,in,set,header,rabbit,mqconstants,expiration,properties,get,expiration,if,properties,get,message,id,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,message,id,if,properties,get,priority,null,exchange,get,in,set,header,rabbit,mqconstants,priority,properties,get,priority,if,properties,get,reply,to,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,reply,to,if,properties,get,timestamp,null,exchange,get,in,set,header,rabbit,mqconstants,timestamp,properties,get,timestamp,if,properties,get,user,id,null,exchange,get,in,set,header,rabbit,mqconstants,userid,properties,get,user,id
RabbitMQMessageConverter -> public void mergeAmqpProperties(Exchange exchange, AMQP.BasicProperties properties);1433892126;Will take an {@link Exchange} and add header values back to the {@link Exchange#getIn()};public void mergeAmqpProperties(Exchange exchange, AMQP.BasicProperties properties) {__        if (properties.getType() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.TYPE, properties.getType())__        }_        if (properties.getAppId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.APP_ID, properties.getAppId())__        }_        if (properties.getClusterId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CLUSTERID, properties.getClusterId())__        }_        if (properties.getContentEncoding() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CONTENT_ENCODING, properties.getContentEncoding())__        }_        if (properties.getContentType() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CONTENT_TYPE, properties.getContentType())__        }_        if (properties.getCorrelationId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CORRELATIONID, properties.getCorrelationId())__        }_        if (properties.getExpiration() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.EXPIRATION, properties.getExpiration())__        }_        if (properties.getMessageId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.MESSAGE_ID, properties.getMessageId())__        }_        if (properties.getPriority() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.PRIORITY, properties.getPriority())__        }_        if (properties.getReplyTo() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.REPLY_TO, properties.getReplyTo())__        }_        if (properties.getTimestamp() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.TIMESTAMP, properties.getTimestamp())__        }_        if (properties.getUserId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.USERID, properties.getUserId())__        }_    };will,take,an,link,exchange,and,add,header,values,back,to,the,link,exchange,get,in;public,void,merge,amqp,properties,exchange,exchange,amqp,basic,properties,properties,if,properties,get,type,null,exchange,get,in,set,header,rabbit,mqconstants,type,properties,get,type,if,properties,get,app,id,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,app,id,if,properties,get,cluster,id,null,exchange,get,in,set,header,rabbit,mqconstants,clusterid,properties,get,cluster,id,if,properties,get,content,encoding,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,content,encoding,if,properties,get,content,type,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,content,type,if,properties,get,correlation,id,null,exchange,get,in,set,header,rabbit,mqconstants,correlationid,properties,get,correlation,id,if,properties,get,expiration,null,exchange,get,in,set,header,rabbit,mqconstants,expiration,properties,get,expiration,if,properties,get,message,id,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,message,id,if,properties,get,priority,null,exchange,get,in,set,header,rabbit,mqconstants,priority,properties,get,priority,if,properties,get,reply,to,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,reply,to,if,properties,get,timestamp,null,exchange,get,in,set,header,rabbit,mqconstants,timestamp,properties,get,timestamp,if,properties,get,user,id,null,exchange,get,in,set,header,rabbit,mqconstants,userid,properties,get,user,id
RabbitMQMessageConverter -> public void mergeAmqpProperties(Exchange exchange, AMQP.BasicProperties properties);1445674940;Will take an {@link Exchange} and add header values back to the {@link Exchange#getIn()};public void mergeAmqpProperties(Exchange exchange, AMQP.BasicProperties properties) {__        if (properties.getType() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.TYPE, properties.getType())__        }_        if (properties.getAppId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.APP_ID, properties.getAppId())__        }_        if (properties.getClusterId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CLUSTERID, properties.getClusterId())__        }_        if (properties.getContentEncoding() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CONTENT_ENCODING, properties.getContentEncoding())__        }_        if (properties.getContentType() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CONTENT_TYPE, properties.getContentType())__        }_        if (properties.getCorrelationId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CORRELATIONID, properties.getCorrelationId())__        }_        if (properties.getExpiration() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.EXPIRATION, properties.getExpiration())__        }_        if (properties.getMessageId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.MESSAGE_ID, properties.getMessageId())__        }_        if (properties.getPriority() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.PRIORITY, properties.getPriority())__        }_        if (properties.getReplyTo() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.REPLY_TO, properties.getReplyTo())__        }_        if (properties.getTimestamp() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.TIMESTAMP, properties.getTimestamp())__        }_        if (properties.getUserId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.USERID, properties.getUserId())__        }_    };will,take,an,link,exchange,and,add,header,values,back,to,the,link,exchange,get,in;public,void,merge,amqp,properties,exchange,exchange,amqp,basic,properties,properties,if,properties,get,type,null,exchange,get,in,set,header,rabbit,mqconstants,type,properties,get,type,if,properties,get,app,id,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,app,id,if,properties,get,cluster,id,null,exchange,get,in,set,header,rabbit,mqconstants,clusterid,properties,get,cluster,id,if,properties,get,content,encoding,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,content,encoding,if,properties,get,content,type,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,content,type,if,properties,get,correlation,id,null,exchange,get,in,set,header,rabbit,mqconstants,correlationid,properties,get,correlation,id,if,properties,get,expiration,null,exchange,get,in,set,header,rabbit,mqconstants,expiration,properties,get,expiration,if,properties,get,message,id,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,message,id,if,properties,get,priority,null,exchange,get,in,set,header,rabbit,mqconstants,priority,properties,get,priority,if,properties,get,reply,to,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,reply,to,if,properties,get,timestamp,null,exchange,get,in,set,header,rabbit,mqconstants,timestamp,properties,get,timestamp,if,properties,get,user,id,null,exchange,get,in,set,header,rabbit,mqconstants,userid,properties,get,user,id
RabbitMQMessageConverter -> public void mergeAmqpProperties(Exchange exchange, AMQP.BasicProperties properties);1451464800;Will take an {@link Exchange} and add header values back to the {@link Exchange#getIn()};public void mergeAmqpProperties(Exchange exchange, AMQP.BasicProperties properties) {__        if (properties.getType() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.TYPE, properties.getType())__        }_        if (properties.getAppId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.APP_ID, properties.getAppId())__        }_        if (properties.getClusterId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CLUSTERID, properties.getClusterId())__        }_        if (properties.getContentEncoding() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CONTENT_ENCODING, properties.getContentEncoding())__        }_        if (properties.getContentType() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CONTENT_TYPE, properties.getContentType())__        }_        if (properties.getCorrelationId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CORRELATIONID, properties.getCorrelationId())__        }_        if (properties.getExpiration() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.EXPIRATION, properties.getExpiration())__        }_        if (properties.getMessageId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.MESSAGE_ID, properties.getMessageId())__        }_        if (properties.getPriority() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.PRIORITY, properties.getPriority())__        }_        if (properties.getReplyTo() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.REPLY_TO, properties.getReplyTo())__        }_        if (properties.getTimestamp() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.TIMESTAMP, properties.getTimestamp())__        }_        if (properties.getUserId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.USERID, properties.getUserId())__        }_    };will,take,an,link,exchange,and,add,header,values,back,to,the,link,exchange,get,in;public,void,merge,amqp,properties,exchange,exchange,amqp,basic,properties,properties,if,properties,get,type,null,exchange,get,in,set,header,rabbit,mqconstants,type,properties,get,type,if,properties,get,app,id,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,app,id,if,properties,get,cluster,id,null,exchange,get,in,set,header,rabbit,mqconstants,clusterid,properties,get,cluster,id,if,properties,get,content,encoding,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,content,encoding,if,properties,get,content,type,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,content,type,if,properties,get,correlation,id,null,exchange,get,in,set,header,rabbit,mqconstants,correlationid,properties,get,correlation,id,if,properties,get,expiration,null,exchange,get,in,set,header,rabbit,mqconstants,expiration,properties,get,expiration,if,properties,get,message,id,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,message,id,if,properties,get,priority,null,exchange,get,in,set,header,rabbit,mqconstants,priority,properties,get,priority,if,properties,get,reply,to,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,reply,to,if,properties,get,timestamp,null,exchange,get,in,set,header,rabbit,mqconstants,timestamp,properties,get,timestamp,if,properties,get,user,id,null,exchange,get,in,set,header,rabbit,mqconstants,userid,properties,get,user,id
RabbitMQMessageConverter -> public void mergeAmqpProperties(Exchange exchange, AMQP.BasicProperties properties);1473104288;Will take an {@link Exchange} and add header values back to the {@link Exchange#getIn()};public void mergeAmqpProperties(Exchange exchange, AMQP.BasicProperties properties) {__        if (properties.getType() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.TYPE, properties.getType())__        }_        if (properties.getAppId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.APP_ID, properties.getAppId())__        }_        if (properties.getClusterId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CLUSTERID, properties.getClusterId())__        }_        if (properties.getContentEncoding() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CONTENT_ENCODING, properties.getContentEncoding())__        }_        if (properties.getContentType() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CONTENT_TYPE, properties.getContentType())__        }_        if (properties.getCorrelationId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CORRELATIONID, properties.getCorrelationId())__        }_        if (properties.getExpiration() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.EXPIRATION, properties.getExpiration())__        }_        if (properties.getMessageId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.MESSAGE_ID, properties.getMessageId())__        }_        if (properties.getPriority() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.PRIORITY, properties.getPriority())__        }_        if (properties.getReplyTo() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.REPLY_TO, properties.getReplyTo())__        }_        if (properties.getTimestamp() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.TIMESTAMP, properties.getTimestamp())__        }_        if (properties.getUserId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.USERID, properties.getUserId())__        }_    };will,take,an,link,exchange,and,add,header,values,back,to,the,link,exchange,get,in;public,void,merge,amqp,properties,exchange,exchange,amqp,basic,properties,properties,if,properties,get,type,null,exchange,get,in,set,header,rabbit,mqconstants,type,properties,get,type,if,properties,get,app,id,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,app,id,if,properties,get,cluster,id,null,exchange,get,in,set,header,rabbit,mqconstants,clusterid,properties,get,cluster,id,if,properties,get,content,encoding,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,content,encoding,if,properties,get,content,type,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,content,type,if,properties,get,correlation,id,null,exchange,get,in,set,header,rabbit,mqconstants,correlationid,properties,get,correlation,id,if,properties,get,expiration,null,exchange,get,in,set,header,rabbit,mqconstants,expiration,properties,get,expiration,if,properties,get,message,id,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,message,id,if,properties,get,priority,null,exchange,get,in,set,header,rabbit,mqconstants,priority,properties,get,priority,if,properties,get,reply,to,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,reply,to,if,properties,get,timestamp,null,exchange,get,in,set,header,rabbit,mqconstants,timestamp,properties,get,timestamp,if,properties,get,user,id,null,exchange,get,in,set,header,rabbit,mqconstants,userid,properties,get,user,id
RabbitMQMessageConverter -> public void mergeAmqpProperties(Exchange exchange, AMQP.BasicProperties properties);1473141803;Will take an {@link Exchange} and add header values back to the {@link Exchange#getIn()};public void mergeAmqpProperties(Exchange exchange, AMQP.BasicProperties properties) {__        if (properties.getType() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.TYPE, properties.getType())__        }_        if (properties.getAppId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.APP_ID, properties.getAppId())__        }_        if (properties.getClusterId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CLUSTERID, properties.getClusterId())__        }_        if (properties.getContentEncoding() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CONTENT_ENCODING, properties.getContentEncoding())__        }_        if (properties.getContentType() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CONTENT_TYPE, properties.getContentType())__        }_        if (properties.getCorrelationId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CORRELATIONID, properties.getCorrelationId())__        }_        if (properties.getExpiration() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.EXPIRATION, properties.getExpiration())__        }_        if (properties.getMessageId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.MESSAGE_ID, properties.getMessageId())__        }_        if (properties.getPriority() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.PRIORITY, properties.getPriority())__        }_        if (properties.getReplyTo() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.REPLY_TO, properties.getReplyTo())__        }_        if (properties.getTimestamp() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.TIMESTAMP, properties.getTimestamp())__        }_        if (properties.getUserId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.USERID, properties.getUserId())__        }_    };will,take,an,link,exchange,and,add,header,values,back,to,the,link,exchange,get,in;public,void,merge,amqp,properties,exchange,exchange,amqp,basic,properties,properties,if,properties,get,type,null,exchange,get,in,set,header,rabbit,mqconstants,type,properties,get,type,if,properties,get,app,id,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,app,id,if,properties,get,cluster,id,null,exchange,get,in,set,header,rabbit,mqconstants,clusterid,properties,get,cluster,id,if,properties,get,content,encoding,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,content,encoding,if,properties,get,content,type,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,content,type,if,properties,get,correlation,id,null,exchange,get,in,set,header,rabbit,mqconstants,correlationid,properties,get,correlation,id,if,properties,get,expiration,null,exchange,get,in,set,header,rabbit,mqconstants,expiration,properties,get,expiration,if,properties,get,message,id,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,message,id,if,properties,get,priority,null,exchange,get,in,set,header,rabbit,mqconstants,priority,properties,get,priority,if,properties,get,reply,to,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,reply,to,if,properties,get,timestamp,null,exchange,get,in,set,header,rabbit,mqconstants,timestamp,properties,get,timestamp,if,properties,get,user,id,null,exchange,get,in,set,header,rabbit,mqconstants,userid,properties,get,user,id
RabbitMQMessageConverter -> public void mergeAmqpProperties(Exchange exchange, AMQP.BasicProperties properties);1495703393;Will take an {@link Exchange} and add header values back to the {@link Exchange#getIn()};public void mergeAmqpProperties(Exchange exchange, AMQP.BasicProperties properties) {__        if (properties.getType() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.TYPE, properties.getType())__        }_        if (properties.getAppId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.APP_ID, properties.getAppId())__        }_        if (properties.getClusterId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CLUSTERID, properties.getClusterId())__        }_        if (properties.getContentEncoding() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CONTENT_ENCODING, properties.getContentEncoding())__        }_        if (properties.getContentType() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CONTENT_TYPE, properties.getContentType())__        }_        if (properties.getCorrelationId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CORRELATIONID, properties.getCorrelationId())__        }_        if (properties.getExpiration() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.EXPIRATION, properties.getExpiration())__        }_        if (properties.getMessageId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.MESSAGE_ID, properties.getMessageId())__        }_        if (properties.getPriority() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.PRIORITY, properties.getPriority())__        }_        if (properties.getReplyTo() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.REPLY_TO, properties.getReplyTo())__        }_        if (properties.getTimestamp() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.TIMESTAMP, properties.getTimestamp())__        }_        if (properties.getUserId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.USERID, properties.getUserId())__        }_    };will,take,an,link,exchange,and,add,header,values,back,to,the,link,exchange,get,in;public,void,merge,amqp,properties,exchange,exchange,amqp,basic,properties,properties,if,properties,get,type,null,exchange,get,in,set,header,rabbit,mqconstants,type,properties,get,type,if,properties,get,app,id,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,app,id,if,properties,get,cluster,id,null,exchange,get,in,set,header,rabbit,mqconstants,clusterid,properties,get,cluster,id,if,properties,get,content,encoding,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,content,encoding,if,properties,get,content,type,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,content,type,if,properties,get,correlation,id,null,exchange,get,in,set,header,rabbit,mqconstants,correlationid,properties,get,correlation,id,if,properties,get,expiration,null,exchange,get,in,set,header,rabbit,mqconstants,expiration,properties,get,expiration,if,properties,get,message,id,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,message,id,if,properties,get,priority,null,exchange,get,in,set,header,rabbit,mqconstants,priority,properties,get,priority,if,properties,get,reply,to,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,reply,to,if,properties,get,timestamp,null,exchange,get,in,set,header,rabbit,mqconstants,timestamp,properties,get,timestamp,if,properties,get,user,id,null,exchange,get,in,set,header,rabbit,mqconstants,userid,properties,get,user,id
RabbitMQMessageConverter -> public void mergeAmqpProperties(Exchange exchange, AMQP.BasicProperties properties);1511202557;Will take an {@link Exchange} and add header values back to the {@link Exchange#getIn()};public void mergeAmqpProperties(Exchange exchange, AMQP.BasicProperties properties) {__        if (properties.getType() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.TYPE, properties.getType())__        }_        if (properties.getAppId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.APP_ID, properties.getAppId())__        }_        if (properties.getClusterId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CLUSTERID, properties.getClusterId())__        }_        if (properties.getContentEncoding() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CONTENT_ENCODING, properties.getContentEncoding())__        }_        if (properties.getContentType() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CONTENT_TYPE, properties.getContentType())__        }_        if (properties.getCorrelationId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CORRELATIONID, properties.getCorrelationId())__        }_        if (properties.getExpiration() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.EXPIRATION, properties.getExpiration())__        }_        if (properties.getMessageId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.MESSAGE_ID, properties.getMessageId())__        }_        if (properties.getPriority() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.PRIORITY, properties.getPriority())__        }_        if (properties.getReplyTo() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.REPLY_TO, properties.getReplyTo())__        }_        if (properties.getTimestamp() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.TIMESTAMP, properties.getTimestamp())__        }_        if (properties.getUserId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.USERID, properties.getUserId())__        }_    };will,take,an,link,exchange,and,add,header,values,back,to,the,link,exchange,get,in;public,void,merge,amqp,properties,exchange,exchange,amqp,basic,properties,properties,if,properties,get,type,null,exchange,get,in,set,header,rabbit,mqconstants,type,properties,get,type,if,properties,get,app,id,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,app,id,if,properties,get,cluster,id,null,exchange,get,in,set,header,rabbit,mqconstants,clusterid,properties,get,cluster,id,if,properties,get,content,encoding,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,content,encoding,if,properties,get,content,type,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,content,type,if,properties,get,correlation,id,null,exchange,get,in,set,header,rabbit,mqconstants,correlationid,properties,get,correlation,id,if,properties,get,expiration,null,exchange,get,in,set,header,rabbit,mqconstants,expiration,properties,get,expiration,if,properties,get,message,id,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,message,id,if,properties,get,priority,null,exchange,get,in,set,header,rabbit,mqconstants,priority,properties,get,priority,if,properties,get,reply,to,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,reply,to,if,properties,get,timestamp,null,exchange,get,in,set,header,rabbit,mqconstants,timestamp,properties,get,timestamp,if,properties,get,user,id,null,exchange,get,in,set,header,rabbit,mqconstants,userid,properties,get,user,id
RabbitMQMessageConverter -> public void mergeAmqpProperties(Exchange exchange, AMQP.BasicProperties properties);1511246666;Will take an {@link Exchange} and add header values back to the {@link Exchange#getIn()};public void mergeAmqpProperties(Exchange exchange, AMQP.BasicProperties properties) {__        if (properties.getType() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.TYPE, properties.getType())__        }_        if (properties.getAppId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.APP_ID, properties.getAppId())__        }_        if (properties.getClusterId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CLUSTERID, properties.getClusterId())__        }_        if (properties.getContentEncoding() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CONTENT_ENCODING, properties.getContentEncoding())__        }_        if (properties.getContentType() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CONTENT_TYPE, properties.getContentType())__        }_        if (properties.getCorrelationId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CORRELATIONID, properties.getCorrelationId())__        }_        if (properties.getExpiration() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.EXPIRATION, properties.getExpiration())__        }_        if (properties.getMessageId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.MESSAGE_ID, properties.getMessageId())__        }_        if (properties.getPriority() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.PRIORITY, properties.getPriority())__        }_        if (properties.getReplyTo() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.REPLY_TO, properties.getReplyTo())__        }_        if (properties.getTimestamp() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.TIMESTAMP, properties.getTimestamp())__        }_        if (properties.getUserId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.USERID, properties.getUserId())__        }_    };will,take,an,link,exchange,and,add,header,values,back,to,the,link,exchange,get,in;public,void,merge,amqp,properties,exchange,exchange,amqp,basic,properties,properties,if,properties,get,type,null,exchange,get,in,set,header,rabbit,mqconstants,type,properties,get,type,if,properties,get,app,id,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,app,id,if,properties,get,cluster,id,null,exchange,get,in,set,header,rabbit,mqconstants,clusterid,properties,get,cluster,id,if,properties,get,content,encoding,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,content,encoding,if,properties,get,content,type,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,content,type,if,properties,get,correlation,id,null,exchange,get,in,set,header,rabbit,mqconstants,correlationid,properties,get,correlation,id,if,properties,get,expiration,null,exchange,get,in,set,header,rabbit,mqconstants,expiration,properties,get,expiration,if,properties,get,message,id,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,message,id,if,properties,get,priority,null,exchange,get,in,set,header,rabbit,mqconstants,priority,properties,get,priority,if,properties,get,reply,to,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,reply,to,if,properties,get,timestamp,null,exchange,get,in,set,header,rabbit,mqconstants,timestamp,properties,get,timestamp,if,properties,get,user,id,null,exchange,get,in,set,header,rabbit,mqconstants,userid,properties,get,user,id
RabbitMQMessageConverter -> public void mergeAmqpProperties(Exchange exchange, AMQP.BasicProperties properties);1524791183;Will take an {@link Exchange} and add header values back to the {@link Exchange#getIn()};public void mergeAmqpProperties(Exchange exchange, AMQP.BasicProperties properties) {__        if (properties.getType() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.TYPE, properties.getType())__        }_        if (properties.getAppId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.APP_ID, properties.getAppId())__        }_        if (properties.getClusterId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CLUSTERID, properties.getClusterId())__        }_        if (properties.getContentEncoding() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CONTENT_ENCODING, properties.getContentEncoding())__        }_        if (properties.getContentType() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CONTENT_TYPE, properties.getContentType())__        }_        if (properties.getCorrelationId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CORRELATIONID, properties.getCorrelationId())__        }_        if (properties.getExpiration() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.EXPIRATION, properties.getExpiration())__        }_        if (properties.getMessageId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.MESSAGE_ID, properties.getMessageId())__        }_        if (properties.getPriority() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.PRIORITY, properties.getPriority())__        }_        if (properties.getReplyTo() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.REPLY_TO, properties.getReplyTo())__        }_        if (properties.getTimestamp() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.TIMESTAMP, properties.getTimestamp())__        }_        if (properties.getUserId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.USERID, properties.getUserId())__        }_        if (properties.getDeliveryMode() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.DELIVERY_MODE, properties.getDeliveryMode())__        }_    };will,take,an,link,exchange,and,add,header,values,back,to,the,link,exchange,get,in;public,void,merge,amqp,properties,exchange,exchange,amqp,basic,properties,properties,if,properties,get,type,null,exchange,get,in,set,header,rabbit,mqconstants,type,properties,get,type,if,properties,get,app,id,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,app,id,if,properties,get,cluster,id,null,exchange,get,in,set,header,rabbit,mqconstants,clusterid,properties,get,cluster,id,if,properties,get,content,encoding,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,content,encoding,if,properties,get,content,type,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,content,type,if,properties,get,correlation,id,null,exchange,get,in,set,header,rabbit,mqconstants,correlationid,properties,get,correlation,id,if,properties,get,expiration,null,exchange,get,in,set,header,rabbit,mqconstants,expiration,properties,get,expiration,if,properties,get,message,id,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,message,id,if,properties,get,priority,null,exchange,get,in,set,header,rabbit,mqconstants,priority,properties,get,priority,if,properties,get,reply,to,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,reply,to,if,properties,get,timestamp,null,exchange,get,in,set,header,rabbit,mqconstants,timestamp,properties,get,timestamp,if,properties,get,user,id,null,exchange,get,in,set,header,rabbit,mqconstants,userid,properties,get,user,id,if,properties,get,delivery,mode,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,delivery,mode
RabbitMQMessageConverter -> public void mergeAmqpProperties(Exchange exchange, AMQP.BasicProperties properties);1532419836;Will take an {@link Exchange} and add header values back to the {@link Exchange#getIn()};public void mergeAmqpProperties(Exchange exchange, AMQP.BasicProperties properties) {__        if (properties.getType() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.TYPE, properties.getType())__        }_        if (properties.getAppId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.APP_ID, properties.getAppId())__        }_        if (properties.getClusterId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CLUSTERID, properties.getClusterId())__        }_        if (properties.getContentEncoding() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CONTENT_ENCODING, properties.getContentEncoding())__        }_        if (properties.getContentType() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CONTENT_TYPE, properties.getContentType())__        }_        if (properties.getCorrelationId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CORRELATIONID, properties.getCorrelationId())__        }_        if (properties.getExpiration() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.EXPIRATION, properties.getExpiration())__        }_        if (properties.getMessageId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.MESSAGE_ID, properties.getMessageId())__        }_        if (properties.getPriority() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.PRIORITY, properties.getPriority())__        }_        if (properties.getReplyTo() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.REPLY_TO, properties.getReplyTo())__        }_        if (properties.getTimestamp() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.TIMESTAMP, properties.getTimestamp())__        }_        if (properties.getUserId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.USERID, properties.getUserId())__        }_        if (properties.getDeliveryMode() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.DELIVERY_MODE, properties.getDeliveryMode())__        }_    };will,take,an,link,exchange,and,add,header,values,back,to,the,link,exchange,get,in;public,void,merge,amqp,properties,exchange,exchange,amqp,basic,properties,properties,if,properties,get,type,null,exchange,get,in,set,header,rabbit,mqconstants,type,properties,get,type,if,properties,get,app,id,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,app,id,if,properties,get,cluster,id,null,exchange,get,in,set,header,rabbit,mqconstants,clusterid,properties,get,cluster,id,if,properties,get,content,encoding,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,content,encoding,if,properties,get,content,type,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,content,type,if,properties,get,correlation,id,null,exchange,get,in,set,header,rabbit,mqconstants,correlationid,properties,get,correlation,id,if,properties,get,expiration,null,exchange,get,in,set,header,rabbit,mqconstants,expiration,properties,get,expiration,if,properties,get,message,id,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,message,id,if,properties,get,priority,null,exchange,get,in,set,header,rabbit,mqconstants,priority,properties,get,priority,if,properties,get,reply,to,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,reply,to,if,properties,get,timestamp,null,exchange,get,in,set,header,rabbit,mqconstants,timestamp,properties,get,timestamp,if,properties,get,user,id,null,exchange,get,in,set,header,rabbit,mqconstants,userid,properties,get,user,id,if,properties,get,delivery,mode,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,delivery,mode
RabbitMQMessageConverter -> public void mergeAmqpProperties(Exchange exchange, AMQP.BasicProperties properties);1540108163;Will take an {@link Exchange} and add header values back to the {@link Exchange#getIn()};public void mergeAmqpProperties(Exchange exchange, AMQP.BasicProperties properties) {__        if (properties.getType() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.TYPE, properties.getType())__        }_        if (properties.getAppId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.APP_ID, properties.getAppId())__        }_        if (properties.getClusterId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CLUSTERID, properties.getClusterId())__        }_        if (properties.getContentEncoding() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CONTENT_ENCODING, properties.getContentEncoding())__        }_        if (properties.getContentType() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CONTENT_TYPE, properties.getContentType())__        }_        if (properties.getCorrelationId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.CORRELATIONID, properties.getCorrelationId())__        }_        if (properties.getExpiration() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.EXPIRATION, properties.getExpiration())__        }_        if (properties.getMessageId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.MESSAGE_ID, properties.getMessageId())__        }_        if (properties.getPriority() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.PRIORITY, properties.getPriority())__        }_        if (properties.getReplyTo() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.REPLY_TO, properties.getReplyTo())__        }_        if (properties.getTimestamp() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.TIMESTAMP, properties.getTimestamp())__        }_        if (properties.getUserId() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.USERID, properties.getUserId())__        }_        if (properties.getDeliveryMode() != null) {_            exchange.getIn().setHeader(RabbitMQConstants.DELIVERY_MODE, properties.getDeliveryMode())__        }_    };will,take,an,link,exchange,and,add,header,values,back,to,the,link,exchange,get,in;public,void,merge,amqp,properties,exchange,exchange,amqp,basic,properties,properties,if,properties,get,type,null,exchange,get,in,set,header,rabbit,mqconstants,type,properties,get,type,if,properties,get,app,id,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,app,id,if,properties,get,cluster,id,null,exchange,get,in,set,header,rabbit,mqconstants,clusterid,properties,get,cluster,id,if,properties,get,content,encoding,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,content,encoding,if,properties,get,content,type,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,content,type,if,properties,get,correlation,id,null,exchange,get,in,set,header,rabbit,mqconstants,correlationid,properties,get,correlation,id,if,properties,get,expiration,null,exchange,get,in,set,header,rabbit,mqconstants,expiration,properties,get,expiration,if,properties,get,message,id,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,message,id,if,properties,get,priority,null,exchange,get,in,set,header,rabbit,mqconstants,priority,properties,get,priority,if,properties,get,reply,to,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,reply,to,if,properties,get,timestamp,null,exchange,get,in,set,header,rabbit,mqconstants,timestamp,properties,get,timestamp,if,properties,get,user,id,null,exchange,get,in,set,header,rabbit,mqconstants,userid,properties,get,user,id,if,properties,get,delivery,mode,null,exchange,get,in,set,header,rabbit,mqconstants,properties,get,delivery,mode
RabbitMQMessageConverter -> private Object getValidRabbitMQHeaderValue(Object headerValue);1433798679;Strategy to test if the given header is valid. Without this, the_com.rabbitmq.client.impl.Frame.java class will throw an_IllegalArgumentException (invalid value in table) and close the_connection.__@param headerValue the header value_@return the value to use, <tt>null</tt> to ignore this header_@see com.rabbitmq.client.impl.Frame#fieldValueSize;private Object getValidRabbitMQHeaderValue(Object headerValue) {_        if (headerValue instanceof String) {_            return headerValue__        } else if (headerValue instanceof BigDecimal) {_            return headerValue__        } else if (headerValue instanceof Number) {_            return headerValue__        } else if (headerValue instanceof Boolean) {_            return headerValue__        } else if (headerValue instanceof Date) {_            return headerValue__        } else if (headerValue instanceof byte[]) {_            return headerValue__        } else if (headerValue instanceof LongString) {_            return headerValue__        } else if (headerValue instanceof Timestamp) {_            return headerValue__        } else if (headerValue instanceof Byte) {_            return headerValue__        } else if (headerValue instanceof Double) {_            return headerValue__        } else if (headerValue instanceof Float) {_            return headerValue__        } else if (headerValue instanceof Long) {_            return headerValue__        }__        return null__    };strategy,to,test,if,the,given,header,is,valid,without,this,the,com,rabbitmq,client,impl,frame,java,class,will,throw,an,illegal,argument,exception,invalid,value,in,table,and,close,the,connection,param,header,value,the,header,value,return,the,value,to,use,tt,null,tt,to,ignore,this,header,see,com,rabbitmq,client,impl,frame,field,value,size;private,object,get,valid,rabbit,mqheader,value,object,header,value,if,header,value,instanceof,string,return,header,value,else,if,header,value,instanceof,big,decimal,return,header,value,else,if,header,value,instanceof,number,return,header,value,else,if,header,value,instanceof,boolean,return,header,value,else,if,header,value,instanceof,date,return,header,value,else,if,header,value,instanceof,byte,return,header,value,else,if,header,value,instanceof,long,string,return,header,value,else,if,header,value,instanceof,timestamp,return,header,value,else,if,header,value,instanceof,byte,return,header,value,else,if,header,value,instanceof,double,return,header,value,else,if,header,value,instanceof,float,return,header,value,else,if,header,value,instanceof,long,return,header,value,return,null
RabbitMQMessageConverter -> private Object getValidRabbitMQHeaderValue(Object headerValue);1433892126;Strategy to test if the given header is valid. Without this, the_com.rabbitmq.client.impl.Frame.java class will throw an_IllegalArgumentException (invalid value in table) and close the_connection.__@param headerValue the header value_@return the value to use, <tt>null</tt> to ignore this header_@see com.rabbitmq.client.impl.Frame#fieldValueSize;private Object getValidRabbitMQHeaderValue(Object headerValue) {_        if (headerValue instanceof String) {_            return headerValue__        } else if (headerValue instanceof BigDecimal) {_            return headerValue__        } else if (headerValue instanceof Number) {_            return headerValue__        } else if (headerValue instanceof Boolean) {_            return headerValue__        } else if (headerValue instanceof Date) {_            return headerValue__        } else if (headerValue instanceof byte[]) {_            return headerValue__        } else if (headerValue instanceof LongString) {_            return headerValue__        } else if (headerValue instanceof Timestamp) {_            return headerValue__        } else if (headerValue instanceof Byte) {_            return headerValue__        } else if (headerValue instanceof Double) {_            return headerValue__        } else if (headerValue instanceof Float) {_            return headerValue__        } else if (headerValue instanceof Long) {_            return headerValue__        }__        return null__    };strategy,to,test,if,the,given,header,is,valid,without,this,the,com,rabbitmq,client,impl,frame,java,class,will,throw,an,illegal,argument,exception,invalid,value,in,table,and,close,the,connection,param,header,value,the,header,value,return,the,value,to,use,tt,null,tt,to,ignore,this,header,see,com,rabbitmq,client,impl,frame,field,value,size;private,object,get,valid,rabbit,mqheader,value,object,header,value,if,header,value,instanceof,string,return,header,value,else,if,header,value,instanceof,big,decimal,return,header,value,else,if,header,value,instanceof,number,return,header,value,else,if,header,value,instanceof,boolean,return,header,value,else,if,header,value,instanceof,date,return,header,value,else,if,header,value,instanceof,byte,return,header,value,else,if,header,value,instanceof,long,string,return,header,value,else,if,header,value,instanceof,timestamp,return,header,value,else,if,header,value,instanceof,byte,return,header,value,else,if,header,value,instanceof,double,return,header,value,else,if,header,value,instanceof,float,return,header,value,else,if,header,value,instanceof,long,return,header,value,return,null
RabbitMQMessageConverter -> private Object getValidRabbitMQHeaderValue(Object headerValue);1445674940;Strategy to test if the given header is valid. Without this, the_com.rabbitmq.client.impl.Frame.java class will throw an_IllegalArgumentException (invalid value in table) and close the_connection.__@param headerValue the header value_@return the value to use, <tt>null</tt> to ignore this header_@see com.rabbitmq.client.impl.Frame#fieldValueSize;private Object getValidRabbitMQHeaderValue(Object headerValue) {_        if (headerValue instanceof String) {_            return headerValue__        } else if (headerValue instanceof BigDecimal) {_            return headerValue__        } else if (headerValue instanceof Number) {_            return headerValue__        } else if (headerValue instanceof Boolean) {_            return headerValue__        } else if (headerValue instanceof Date) {_            return headerValue__        } else if (headerValue instanceof byte[]) {_            return headerValue__        } else if (headerValue instanceof LongString) {_            return headerValue__        } else if (headerValue instanceof Timestamp) {_            return headerValue__        } else if (headerValue instanceof Byte) {_            return headerValue__        } else if (headerValue instanceof Double) {_            return headerValue__        } else if (headerValue instanceof Float) {_            return headerValue__        } else if (headerValue instanceof Long) {_            return headerValue__        }__        return null__    };strategy,to,test,if,the,given,header,is,valid,without,this,the,com,rabbitmq,client,impl,frame,java,class,will,throw,an,illegal,argument,exception,invalid,value,in,table,and,close,the,connection,param,header,value,the,header,value,return,the,value,to,use,tt,null,tt,to,ignore,this,header,see,com,rabbitmq,client,impl,frame,field,value,size;private,object,get,valid,rabbit,mqheader,value,object,header,value,if,header,value,instanceof,string,return,header,value,else,if,header,value,instanceof,big,decimal,return,header,value,else,if,header,value,instanceof,number,return,header,value,else,if,header,value,instanceof,boolean,return,header,value,else,if,header,value,instanceof,date,return,header,value,else,if,header,value,instanceof,byte,return,header,value,else,if,header,value,instanceof,long,string,return,header,value,else,if,header,value,instanceof,timestamp,return,header,value,else,if,header,value,instanceof,byte,return,header,value,else,if,header,value,instanceof,double,return,header,value,else,if,header,value,instanceof,float,return,header,value,else,if,header,value,instanceof,long,return,header,value,return,null
RabbitMQMessageConverter -> private Object getValidRabbitMQHeaderValue(Object headerValue);1451464800;Strategy to test if the given header is valid. Without this, the_com.rabbitmq.client.impl.Frame.java class will throw an_IllegalArgumentException (invalid value in table) and close the_connection.__@param headerValue the header value_@return the value to use, <tt>null</tt> to ignore this header_@see com.rabbitmq.client.impl.Frame#fieldValueSize;private Object getValidRabbitMQHeaderValue(Object headerValue) {_        if (headerValue instanceof String) {_            return headerValue__        } else if (headerValue instanceof Number) {_            return headerValue__        } else if (headerValue instanceof Boolean) {_            return headerValue__        } else if (headerValue instanceof Date) {_            return headerValue__        } else if (headerValue instanceof byte[]) {_            return headerValue__        } else if (headerValue instanceof LongString) {_            return headerValue__        }__        return null__    };strategy,to,test,if,the,given,header,is,valid,without,this,the,com,rabbitmq,client,impl,frame,java,class,will,throw,an,illegal,argument,exception,invalid,value,in,table,and,close,the,connection,param,header,value,the,header,value,return,the,value,to,use,tt,null,tt,to,ignore,this,header,see,com,rabbitmq,client,impl,frame,field,value,size;private,object,get,valid,rabbit,mqheader,value,object,header,value,if,header,value,instanceof,string,return,header,value,else,if,header,value,instanceof,number,return,header,value,else,if,header,value,instanceof,boolean,return,header,value,else,if,header,value,instanceof,date,return,header,value,else,if,header,value,instanceof,byte,return,header,value,else,if,header,value,instanceof,long,string,return,header,value,return,null
RabbitMQMessageConverter -> private Object getValidRabbitMQHeaderValue(Object headerValue);1473104288;Strategy to test if the given header is valid. Without this, the_com.rabbitmq.client.impl.Frame.java class will throw an_IllegalArgumentException (invalid value in table) and close the_connection.__@param headerValue the header value_@return the value to use, <tt>null</tt> to ignore this header_@see com.rabbitmq.client.impl.Frame#fieldValueSize;private Object getValidRabbitMQHeaderValue(Object headerValue) {_        if (headerValue instanceof String) {_            return headerValue__        } else if (headerValue instanceof Number) {_            return headerValue__        } else if (headerValue instanceof Boolean) {_            return headerValue__        } else if (headerValue instanceof Date) {_            return headerValue__        } else if (headerValue instanceof byte[]) {_            return headerValue__        } else if (headerValue instanceof LongString) {_            return headerValue__        }__        return null__    };strategy,to,test,if,the,given,header,is,valid,without,this,the,com,rabbitmq,client,impl,frame,java,class,will,throw,an,illegal,argument,exception,invalid,value,in,table,and,close,the,connection,param,header,value,the,header,value,return,the,value,to,use,tt,null,tt,to,ignore,this,header,see,com,rabbitmq,client,impl,frame,field,value,size;private,object,get,valid,rabbit,mqheader,value,object,header,value,if,header,value,instanceof,string,return,header,value,else,if,header,value,instanceof,number,return,header,value,else,if,header,value,instanceof,boolean,return,header,value,else,if,header,value,instanceof,date,return,header,value,else,if,header,value,instanceof,byte,return,header,value,else,if,header,value,instanceof,long,string,return,header,value,return,null
RabbitMQMessageConverter -> private Object getValidRabbitMQHeaderValue(Object headerValue);1473141803;Strategy to test if the given header is valid. Without this, the_com.rabbitmq.client.impl.Frame.java class will throw an_IllegalArgumentException (invalid value in table) and close the_connection.__@param headerValue the header value_@return the value to use, <tt>null</tt> to ignore this header_@see com.rabbitmq.client.impl.Frame#fieldValueSize;private Object getValidRabbitMQHeaderValue(Object headerValue) {_        if (headerValue instanceof String) {_            return headerValue__        } else if (headerValue instanceof Number) {_            return headerValue__        } else if (headerValue instanceof Boolean) {_            return headerValue__        } else if (headerValue instanceof Date) {_            return headerValue__        } else if (headerValue instanceof byte[]) {_            return headerValue__        } else if (headerValue instanceof LongString) {_            return headerValue__        }__        return null__    };strategy,to,test,if,the,given,header,is,valid,without,this,the,com,rabbitmq,client,impl,frame,java,class,will,throw,an,illegal,argument,exception,invalid,value,in,table,and,close,the,connection,param,header,value,the,header,value,return,the,value,to,use,tt,null,tt,to,ignore,this,header,see,com,rabbitmq,client,impl,frame,field,value,size;private,object,get,valid,rabbit,mqheader,value,object,header,value,if,header,value,instanceof,string,return,header,value,else,if,header,value,instanceof,number,return,header,value,else,if,header,value,instanceof,boolean,return,header,value,else,if,header,value,instanceof,date,return,header,value,else,if,header,value,instanceof,byte,return,header,value,else,if,header,value,instanceof,long,string,return,header,value,return,null
RabbitMQMessageConverter -> private Object getValidRabbitMQHeaderValue(Object headerValue);1495703393;Strategy to test if the given header is valid. Without this, the_com.rabbitmq.client.impl.Frame.java class will throw an_IllegalArgumentException (invalid value in table) and close the_connection.__@param headerValue the header value_@return the value to use, <tt>null</tt> to ignore this header_@see com.rabbitmq.client.impl.Frame#fieldValueSize;private Object getValidRabbitMQHeaderValue(Object headerValue) {_        if (headerValue instanceof String) {_            return headerValue__        } else if (headerValue instanceof Number) {_            return headerValue__        } else if (headerValue instanceof Boolean) {_            return headerValue__        } else if (headerValue instanceof Date) {_            return headerValue__        } else if (headerValue instanceof byte[]) {_            return headerValue__        } else if (headerValue instanceof LongString) {_            return headerValue__        }__        return null__    };strategy,to,test,if,the,given,header,is,valid,without,this,the,com,rabbitmq,client,impl,frame,java,class,will,throw,an,illegal,argument,exception,invalid,value,in,table,and,close,the,connection,param,header,value,the,header,value,return,the,value,to,use,tt,null,tt,to,ignore,this,header,see,com,rabbitmq,client,impl,frame,field,value,size;private,object,get,valid,rabbit,mqheader,value,object,header,value,if,header,value,instanceof,string,return,header,value,else,if,header,value,instanceof,number,return,header,value,else,if,header,value,instanceof,boolean,return,header,value,else,if,header,value,instanceof,date,return,header,value,else,if,header,value,instanceof,byte,return,header,value,else,if,header,value,instanceof,long,string,return,header,value,return,null
RabbitMQMessageConverter -> private Object getValidRabbitMQHeaderValue(Object headerValue);1511202557;Strategy to test if the given header is valid. Without this, the_com.rabbitmq.client.impl.Frame.java class will throw an_IllegalArgumentException (invalid value in table) and close the_connection.__@param headerValue the header value_@return the value to use, <tt>null</tt> to ignore this header_@see com.rabbitmq.client.impl.Frame#fieldValueSize;private Object getValidRabbitMQHeaderValue(Object headerValue) {_        if (headerValue instanceof String) {_            return headerValue__        } else if (headerValue instanceof Number) {_            return headerValue__        } else if (headerValue instanceof Boolean) {_            return headerValue__        } else if (headerValue instanceof Date) {_            return headerValue__        } else if (headerValue instanceof byte[]) {_            return headerValue__        } else if (headerValue instanceof LongString) {_            return headerValue__        }__        return null__    };strategy,to,test,if,the,given,header,is,valid,without,this,the,com,rabbitmq,client,impl,frame,java,class,will,throw,an,illegal,argument,exception,invalid,value,in,table,and,close,the,connection,param,header,value,the,header,value,return,the,value,to,use,tt,null,tt,to,ignore,this,header,see,com,rabbitmq,client,impl,frame,field,value,size;private,object,get,valid,rabbit,mqheader,value,object,header,value,if,header,value,instanceof,string,return,header,value,else,if,header,value,instanceof,number,return,header,value,else,if,header,value,instanceof,boolean,return,header,value,else,if,header,value,instanceof,date,return,header,value,else,if,header,value,instanceof,byte,return,header,value,else,if,header,value,instanceof,long,string,return,header,value,return,null
RabbitMQMessageConverter -> private Object getValidRabbitMQHeaderValue(Object headerValue);1511246666;Strategy to test if the given header is valid. Without this, the_com.rabbitmq.client.impl.Frame.java class will throw an_IllegalArgumentException (invalid value in table) and close the_connection.__@param headerValue the header value_@return the value to use, <tt>null</tt> to ignore this header_@see com.rabbitmq.client.impl.Frame#fieldValueSize;private Object getValidRabbitMQHeaderValue(Object headerValue) {_        if (headerValue instanceof String) {_            return headerValue__        } else if (headerValue instanceof Number) {_            return headerValue__        } else if (headerValue instanceof Boolean) {_            return headerValue__        } else if (headerValue instanceof Date) {_            return headerValue__        } else if (headerValue instanceof byte[]) {_            return headerValue__        } else if (headerValue instanceof LongString) {_            return headerValue__        }__        return null__    };strategy,to,test,if,the,given,header,is,valid,without,this,the,com,rabbitmq,client,impl,frame,java,class,will,throw,an,illegal,argument,exception,invalid,value,in,table,and,close,the,connection,param,header,value,the,header,value,return,the,value,to,use,tt,null,tt,to,ignore,this,header,see,com,rabbitmq,client,impl,frame,field,value,size;private,object,get,valid,rabbit,mqheader,value,object,header,value,if,header,value,instanceof,string,return,header,value,else,if,header,value,instanceof,number,return,header,value,else,if,header,value,instanceof,boolean,return,header,value,else,if,header,value,instanceof,date,return,header,value,else,if,header,value,instanceof,byte,return,header,value,else,if,header,value,instanceof,long,string,return,header,value,return,null
RabbitMQMessageConverter -> private Object getValidRabbitMQHeaderValue(Object headerValue);1524791183;Strategy to test if the given header is valid. Without this, the_com.rabbitmq.client.impl.Frame.java class will throw an_IllegalArgumentException (invalid value in table) and close the_connection.__@param headerValue the header value_@return the value to use, <tt>null</tt> to ignore this header_@see com.rabbitmq.client.impl.Frame#fieldValueSize;private Object getValidRabbitMQHeaderValue(Object headerValue) {_        if (headerValue instanceof String) {_            return headerValue__        } else if (headerValue instanceof Number) {_            return headerValue__        } else if (headerValue instanceof Boolean) {_            return headerValue__        } else if (headerValue instanceof Date) {_            return headerValue__        } else if (headerValue instanceof byte[]) {_            return headerValue__        } else if (headerValue instanceof LongString) {_            return headerValue__        }__        return null__    };strategy,to,test,if,the,given,header,is,valid,without,this,the,com,rabbitmq,client,impl,frame,java,class,will,throw,an,illegal,argument,exception,invalid,value,in,table,and,close,the,connection,param,header,value,the,header,value,return,the,value,to,use,tt,null,tt,to,ignore,this,header,see,com,rabbitmq,client,impl,frame,field,value,size;private,object,get,valid,rabbit,mqheader,value,object,header,value,if,header,value,instanceof,string,return,header,value,else,if,header,value,instanceof,number,return,header,value,else,if,header,value,instanceof,boolean,return,header,value,else,if,header,value,instanceof,date,return,header,value,else,if,header,value,instanceof,byte,return,header,value,else,if,header,value,instanceof,long,string,return,header,value,return,null
RabbitMQMessageConverter -> private Object getValidRabbitMQHeaderValue(Object headerValue);1532419836;Strategy to test if the given header is valid. Without this, the_com.rabbitmq.client.impl.Frame.java class will throw an_IllegalArgumentException (invalid value in table) and close the_connection.__@param headerValue the header value_@return the value to use, <tt>null</tt> to ignore this header_@see com.rabbitmq.client.impl.Frame#fieldValueSize;private Object getValidRabbitMQHeaderValue(Object headerValue) {_        if (headerValue instanceof String) {_            return headerValue__        } else if (headerValue instanceof Number) {_            return headerValue__        } else if (headerValue instanceof Boolean) {_            return headerValue__        } else if (headerValue instanceof Date) {_            return headerValue__        } else if (headerValue instanceof byte[]) {_            return headerValue__        } else if (headerValue instanceof LongString) {_            return headerValue__        }__        return null__    };strategy,to,test,if,the,given,header,is,valid,without,this,the,com,rabbitmq,client,impl,frame,java,class,will,throw,an,illegal,argument,exception,invalid,value,in,table,and,close,the,connection,param,header,value,the,header,value,return,the,value,to,use,tt,null,tt,to,ignore,this,header,see,com,rabbitmq,client,impl,frame,field,value,size;private,object,get,valid,rabbit,mqheader,value,object,header,value,if,header,value,instanceof,string,return,header,value,else,if,header,value,instanceof,number,return,header,value,else,if,header,value,instanceof,boolean,return,header,value,else,if,header,value,instanceof,date,return,header,value,else,if,header,value,instanceof,byte,return,header,value,else,if,header,value,instanceof,long,string,return,header,value,return,null
RabbitMQMessageConverter -> private Object getValidRabbitMQHeaderValue(Object headerValue);1540108163;Strategy to test if the given header is valid. Without this, the_com.rabbitmq.client.impl.Frame.java class will throw an_IllegalArgumentException (invalid value in table) and close the_connection.__@param headerValue the header value_@return the value to use, <tt>null</tt> to ignore this header_@see com.rabbitmq.client.impl.Frame#fieldValueSize;private Object getValidRabbitMQHeaderValue(Object headerValue) {_        if (headerValue instanceof String) {_            return headerValue__        } else if (headerValue instanceof Number) {_            return headerValue__        } else if (headerValue instanceof Boolean) {_            return headerValue__        } else if (headerValue instanceof Date) {_            return headerValue__        } else if (headerValue instanceof byte[]) {_            return headerValue__        } else if (headerValue instanceof LongString) {_            return headerValue__        }__        return null__    };strategy,to,test,if,the,given,header,is,valid,without,this,the,com,rabbitmq,client,impl,frame,java,class,will,throw,an,illegal,argument,exception,invalid,value,in,table,and,close,the,connection,param,header,value,the,header,value,return,the,value,to,use,tt,null,tt,to,ignore,this,header,see,com,rabbitmq,client,impl,frame,field,value,size;private,object,get,valid,rabbit,mqheader,value,object,header,value,if,header,value,instanceof,string,return,header,value,else,if,header,value,instanceof,number,return,header,value,else,if,header,value,instanceof,boolean,return,header,value,else,if,header,value,instanceof,date,return,header,value,else,if,header,value,instanceof,byte,return,header,value,else,if,header,value,instanceof,long,string,return,header,value,return,null
