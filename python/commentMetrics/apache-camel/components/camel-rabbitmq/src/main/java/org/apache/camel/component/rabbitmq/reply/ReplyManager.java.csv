# id;timestamp;commentText;codeText;commentWords;codeWords
ReplyManager -> void updateCorrelationId(String correlationId, String newCorrelationId, long requestTimeout)_;1433798679;Updates the correlation id to the new correlation id._<p/>_This is only used when <tt>useMessageIDasCorrelationID</tt> option is used, which means a_provisional correlation id is first used, then after the message has been sent, the real_correlation id is known. This allows us then to update the internal mapping to expect the_real correlation id.__@param correlationId     the provisional correlation id_@param newCorrelationId  the real correlation id_@param requestTimeout    the timeout;void updateCorrelationId(String correlationId, String newCorrelationId, long requestTimeout)_;updates,the,correlation,id,to,the,new,correlation,id,p,this,is,only,used,when,tt,use,message,idas,correlation,id,tt,option,is,used,which,means,a,provisional,correlation,id,is,first,used,then,after,the,message,has,been,sent,the,real,correlation,id,is,known,this,allows,us,then,to,update,the,internal,mapping,to,expect,the,real,correlation,id,param,correlation,id,the,provisional,correlation,id,param,new,correlation,id,the,real,correlation,id,param,request,timeout,the,timeout;void,update,correlation,id,string,correlation,id,string,new,correlation,id,long,request,timeout
ReplyManager -> void updateCorrelationId(String correlationId, String newCorrelationId, long requestTimeout)_;1433892126;Updates the correlation id to the new correlation id._<p/>_This is only used when <tt>useMessageIDasCorrelationID</tt> option is used, which means a_provisional correlation id is first used, then after the message has been sent, the real_correlation id is known. This allows us then to update the internal mapping to expect the_real correlation id.__@param correlationId     the provisional correlation id_@param newCorrelationId  the real correlation id_@param requestTimeout    the timeout;void updateCorrelationId(String correlationId, String newCorrelationId, long requestTimeout)_;updates,the,correlation,id,to,the,new,correlation,id,p,this,is,only,used,when,tt,use,message,idas,correlation,id,tt,option,is,used,which,means,a,provisional,correlation,id,is,first,used,then,after,the,message,has,been,sent,the,real,correlation,id,is,known,this,allows,us,then,to,update,the,internal,mapping,to,expect,the,real,correlation,id,param,correlation,id,the,provisional,correlation,id,param,new,correlation,id,the,real,correlation,id,param,request,timeout,the,timeout;void,update,correlation,id,string,correlation,id,string,new,correlation,id,long,request,timeout
ReplyManager -> void updateCorrelationId(String correlationId, String newCorrelationId, long requestTimeout)_;1453969280;Updates the correlation id to the new correlation id._<p/>_This is only used when <tt>useMessageIDasCorrelationID</tt> option is used, which means a_provisional correlation id is first used, then after the message has been sent, the real_correlation id is known. This allows us then to update the internal mapping to expect the_real correlation id.__@param correlationId     the provisional correlation id_@param newCorrelationId  the real correlation id_@param requestTimeout    the timeout;void updateCorrelationId(String correlationId, String newCorrelationId, long requestTimeout)_;updates,the,correlation,id,to,the,new,correlation,id,p,this,is,only,used,when,tt,use,message,idas,correlation,id,tt,option,is,used,which,means,a,provisional,correlation,id,is,first,used,then,after,the,message,has,been,sent,the,real,correlation,id,is,known,this,allows,us,then,to,update,the,internal,mapping,to,expect,the,real,correlation,id,param,correlation,id,the,provisional,correlation,id,param,new,correlation,id,the,real,correlation,id,param,request,timeout,the,timeout;void,update,correlation,id,string,correlation,id,string,new,correlation,id,long,request,timeout
ReplyManager -> void updateCorrelationId(String correlationId, String newCorrelationId, long requestTimeout)_;1455957587;Updates the correlation id to the new correlation id._<p/>_This is only used when <tt>useMessageIDasCorrelationID</tt> option is used, which means a_provisional correlation id is first used, then after the message has been sent, the real_correlation id is known. This allows us then to update the internal mapping to expect the_real correlation id.__@param correlationId     the provisional correlation id_@param newCorrelationId  the real correlation id_@param requestTimeout    the timeout;void updateCorrelationId(String correlationId, String newCorrelationId, long requestTimeout)_;updates,the,correlation,id,to,the,new,correlation,id,p,this,is,only,used,when,tt,use,message,idas,correlation,id,tt,option,is,used,which,means,a,provisional,correlation,id,is,first,used,then,after,the,message,has,been,sent,the,real,correlation,id,is,known,this,allows,us,then,to,update,the,internal,mapping,to,expect,the,real,correlation,id,param,correlation,id,the,provisional,correlation,id,param,new,correlation,id,the,real,correlation,id,param,request,timeout,the,timeout;void,update,correlation,id,string,correlation,id,string,new,correlation,id,long,request,timeout
ReplyManager -> void updateCorrelationId(String correlationId, String newCorrelationId, long requestTimeout)_;1540108161;Updates the correlation id to the new correlation id._<p/>_This is only used when <tt>useMessageIDasCorrelationID</tt> option is used, which means a_provisional correlation id is first used, then after the message has been sent, the real_correlation id is known. This allows us then to update the internal mapping to expect the_real correlation id.__@param correlationId     the provisional correlation id_@param newCorrelationId  the real correlation id_@param requestTimeout    the timeout;void updateCorrelationId(String correlationId, String newCorrelationId, long requestTimeout)_;updates,the,correlation,id,to,the,new,correlation,id,p,this,is,only,used,when,tt,use,message,idas,correlation,id,tt,option,is,used,which,means,a,provisional,correlation,id,is,first,used,then,after,the,message,has,been,sent,the,real,correlation,id,is,known,this,allows,us,then,to,update,the,internal,mapping,to,expect,the,real,correlation,id,param,correlation,id,the,provisional,correlation,id,param,new,correlation,id,the,real,correlation,id,param,request,timeout,the,timeout;void,update,correlation,id,string,correlation,id,string,new,correlation,id,long,request,timeout
ReplyManager -> void processReply(ReplyHolder holder)_;1433798679;Process the reply__@param holder  containing needed data to process the reply and continue routing;void processReply(ReplyHolder holder)_;process,the,reply,param,holder,containing,needed,data,to,process,the,reply,and,continue,routing;void,process,reply,reply,holder,holder
ReplyManager -> void processReply(ReplyHolder holder)_;1433892126;Process the reply__@param holder  containing needed data to process the reply and continue routing;void processReply(ReplyHolder holder)_;process,the,reply,param,holder,containing,needed,data,to,process,the,reply,and,continue,routing;void,process,reply,reply,holder,holder
ReplyManager -> void processReply(ReplyHolder holder)_;1453969280;Process the reply__@param holder  containing needed data to process the reply and continue routing;void processReply(ReplyHolder holder)_;process,the,reply,param,holder,containing,needed,data,to,process,the,reply,and,continue,routing;void,process,reply,reply,holder,holder
ReplyManager -> void processReply(ReplyHolder holder)_;1455957587;Process the reply__@param holder  containing needed data to process the reply and continue routing;void processReply(ReplyHolder holder)_;process,the,reply,param,holder,containing,needed,data,to,process,the,reply,and,continue,routing;void,process,reply,reply,holder,holder
ReplyManager -> void processReply(ReplyHolder holder)_;1540108161;Process the reply__@param holder  containing needed data to process the reply and continue routing;void processReply(ReplyHolder holder)_;process,the,reply,param,holder,containing,needed,data,to,process,the,reply,and,continue,routing;void,process,reply,reply,holder,holder
ReplyManager -> void setScheduledExecutorService(ScheduledExecutorService executorService)_;1433798679;Sets the scheduled to use when checking for timeouts (no reply received within a given time period);void setScheduledExecutorService(ScheduledExecutorService executorService)_;sets,the,scheduled,to,use,when,checking,for,timeouts,no,reply,received,within,a,given,time,period;void,set,scheduled,executor,service,scheduled,executor,service,executor,service
ReplyManager -> void setScheduledExecutorService(ScheduledExecutorService executorService)_;1433892126;Sets the scheduled to use when checking for timeouts (no reply received within a given time period);void setScheduledExecutorService(ScheduledExecutorService executorService)_;sets,the,scheduled,to,use,when,checking,for,timeouts,no,reply,received,within,a,given,time,period;void,set,scheduled,executor,service,scheduled,executor,service,executor,service
ReplyManager -> void setScheduledExecutorService(ScheduledExecutorService executorService)_;1453969280;Sets the scheduled to use when checking for timeouts (no reply received within a given time period);void setScheduledExecutorService(ScheduledExecutorService executorService)_;sets,the,scheduled,to,use,when,checking,for,timeouts,no,reply,received,within,a,given,time,period;void,set,scheduled,executor,service,scheduled,executor,service,executor,service
ReplyManager -> void setScheduledExecutorService(ScheduledExecutorService executorService)_;1455957587;Sets the scheduled to use when checking for timeouts (no reply received within a given time period);void setScheduledExecutorService(ScheduledExecutorService executorService)_;sets,the,scheduled,to,use,when,checking,for,timeouts,no,reply,received,within,a,given,time,period;void,set,scheduled,executor,service,scheduled,executor,service,executor,service
ReplyManager -> void setScheduledExecutorService(ScheduledExecutorService executorService)_;1540108161;Sets the scheduled to use when checking for timeouts (no reply received within a given time period);void setScheduledExecutorService(ScheduledExecutorService executorService)_;sets,the,scheduled,to,use,when,checking,for,timeouts,no,reply,received,within,a,given,time,period;void,set,scheduled,executor,service,scheduled,executor,service,executor,service
ReplyManager -> void cancelCorrelationId(String correlationId)_;1453969280;Unregister a correlationId when you no longer need a reply__@param correlationId;void cancelCorrelationId(String correlationId)_;unregister,a,correlation,id,when,you,no,longer,need,a,reply,param,correlation,id;void,cancel,correlation,id,string,correlation,id
ReplyManager -> void cancelCorrelationId(String correlationId)_;1455957587;Unregister a correlationId when you no longer need a reply;void cancelCorrelationId(String correlationId)_;unregister,a,correlation,id,when,you,no,longer,need,a,reply;void,cancel,correlation,id,string,correlation,id
ReplyManager -> void cancelCorrelationId(String correlationId)_;1540108161;Unregister a correlationId when you no longer need a reply;void cancelCorrelationId(String correlationId)_;unregister,a,correlation,id,when,you,no,longer,need,a,reply;void,cancel,correlation,id,string,correlation,id
ReplyManager -> String getReplyTo()_;1433798679;Gets the reply to queue being used;String getReplyTo()_;gets,the,reply,to,queue,being,used;string,get,reply,to
ReplyManager -> String getReplyTo()_;1433892126;Gets the reply to queue being used;String getReplyTo()_;gets,the,reply,to,queue,being,used;string,get,reply,to
ReplyManager -> String getReplyTo()_;1453969280;Gets the reply to queue being used;String getReplyTo()_;gets,the,reply,to,queue,being,used;string,get,reply,to
ReplyManager -> String getReplyTo()_;1455957587;Gets the reply to queue being used;String getReplyTo()_;gets,the,reply,to,queue,being,used;string,get,reply,to
ReplyManager -> String getReplyTo()_;1540108161;Gets the reply to queue being used;String getReplyTo()_;gets,the,reply,to,queue,being,used;string,get,reply,to
ReplyManager -> void setEndpoint(RabbitMQEndpoint endpoint)_;1433798679;Sets the belonging {@link org.apache.camel.component.jms.JmsEndpoint}.;void setEndpoint(RabbitMQEndpoint endpoint)_;sets,the,belonging,link,org,apache,camel,component,jms,jms,endpoint;void,set,endpoint,rabbit,mqendpoint,endpoint
ReplyManager -> void setEndpoint(RabbitMQEndpoint endpoint)_;1433892126;Sets the belonging {@link org.apache.camel.component.jms.JmsEndpoint}.;void setEndpoint(RabbitMQEndpoint endpoint)_;sets,the,belonging,link,org,apache,camel,component,jms,jms,endpoint;void,set,endpoint,rabbit,mqendpoint,endpoint
ReplyManager -> void setEndpoint(RabbitMQEndpoint endpoint)_;1453969280;Sets the belonging {@link org.apache.camel.component.jms.JmsEndpoint}.;void setEndpoint(RabbitMQEndpoint endpoint)_;sets,the,belonging,link,org,apache,camel,component,jms,jms,endpoint;void,set,endpoint,rabbit,mqendpoint,endpoint
ReplyManager -> void setEndpoint(RabbitMQEndpoint endpoint)_;1455957587;Sets the belonging {@link RabbitMQEndpoint};void setEndpoint(RabbitMQEndpoint endpoint)_;sets,the,belonging,link,rabbit,mqendpoint;void,set,endpoint,rabbit,mqendpoint,endpoint
ReplyManager -> void setEndpoint(RabbitMQEndpoint endpoint)_;1540108161;Sets the belonging {@link RabbitMQEndpoint};void setEndpoint(RabbitMQEndpoint endpoint)_;sets,the,belonging,link,rabbit,mqendpoint;void,set,endpoint,rabbit,mqendpoint,endpoint
ReplyManager -> void setReplyTo(String replyTo)_;1433798679;Sets the reply to queue the manager should listen for replies._<p/>_The queue is either a temporary or a persistent queue.;void setReplyTo(String replyTo)_;sets,the,reply,to,queue,the,manager,should,listen,for,replies,p,the,queue,is,either,a,temporary,or,a,persistent,queue;void,set,reply,to,string,reply,to
ReplyManager -> void setReplyTo(String replyTo)_;1433892126;Sets the reply to queue the manager should listen for replies._<p/>_The queue is either a temporary or a persistent queue.;void setReplyTo(String replyTo)_;sets,the,reply,to,queue,the,manager,should,listen,for,replies,p,the,queue,is,either,a,temporary,or,a,persistent,queue;void,set,reply,to,string,reply,to
ReplyManager -> void setReplyTo(String replyTo)_;1453969280;Sets the reply to queue the manager should listen for replies._<p/>_The queue is either a temporary or a persistent queue.;void setReplyTo(String replyTo)_;sets,the,reply,to,queue,the,manager,should,listen,for,replies,p,the,queue,is,either,a,temporary,or,a,persistent,queue;void,set,reply,to,string,reply,to
ReplyManager -> void setReplyTo(String replyTo)_;1455957587;Sets the reply to queue the manager should listen for replies._<p/>_The queue is either a temporary or a persistent queue.;void setReplyTo(String replyTo)_;sets,the,reply,to,queue,the,manager,should,listen,for,replies,p,the,queue,is,either,a,temporary,or,a,persistent,queue;void,set,reply,to,string,reply,to
ReplyManager -> void setReplyTo(String replyTo)_;1540108161;Sets the reply to queue the manager should listen for replies._<p/>_The queue is either a temporary or a persistent queue.;void setReplyTo(String replyTo)_;sets,the,reply,to,queue,the,manager,should,listen,for,replies,p,the,queue,is,either,a,temporary,or,a,persistent,queue;void,set,reply,to,string,reply,to
ReplyManager -> String registerReply(ReplyManager replyManager, Exchange exchange, AsyncCallback callback,                          String originalCorrelationId, String correlationId, long requestTimeout)_;1433798679;Register a reply__@param replyManager    the reply manager being used_@param exchange        the exchange_@param callback        the callback_@param originalCorrelationId  an optional original correlation id_@param correlationId   the correlation id to expect being used_@param requestTimeout  the timeout_@return the correlation id used;String registerReply(ReplyManager replyManager, Exchange exchange, AsyncCallback callback,_                         String originalCorrelationId, String correlationId, long requestTimeout)_;register,a,reply,param,reply,manager,the,reply,manager,being,used,param,exchange,the,exchange,param,callback,the,callback,param,original,correlation,id,an,optional,original,correlation,id,param,correlation,id,the,correlation,id,to,expect,being,used,param,request,timeout,the,timeout,return,the,correlation,id,used;string,register,reply,reply,manager,reply,manager,exchange,exchange,async,callback,callback,string,original,correlation,id,string,correlation,id,long,request,timeout
ReplyManager -> String registerReply(ReplyManager replyManager, Exchange exchange, AsyncCallback callback,                          String originalCorrelationId, String correlationId, long requestTimeout)_;1433892126;Register a reply__@param replyManager    the reply manager being used_@param exchange        the exchange_@param callback        the callback_@param originalCorrelationId  an optional original correlation id_@param correlationId   the correlation id to expect being used_@param requestTimeout  the timeout_@return the correlation id used;String registerReply(ReplyManager replyManager, Exchange exchange, AsyncCallback callback,_                         String originalCorrelationId, String correlationId, long requestTimeout)_;register,a,reply,param,reply,manager,the,reply,manager,being,used,param,exchange,the,exchange,param,callback,the,callback,param,original,correlation,id,an,optional,original,correlation,id,param,correlation,id,the,correlation,id,to,expect,being,used,param,request,timeout,the,timeout,return,the,correlation,id,used;string,register,reply,reply,manager,reply,manager,exchange,exchange,async,callback,callback,string,original,correlation,id,string,correlation,id,long,request,timeout
ReplyManager -> String registerReply(ReplyManager replyManager, Exchange exchange, AsyncCallback callback,                          String originalCorrelationId, String correlationId, long requestTimeout)_;1453969280;Register a reply__@param replyManager    the reply manager being used_@param exchange        the exchange_@param callback        the callback_@param originalCorrelationId  an optional original correlation id_@param correlationId   the correlation id to expect being used_@param requestTimeout  the timeout_@return the correlation id used;String registerReply(ReplyManager replyManager, Exchange exchange, AsyncCallback callback,_                         String originalCorrelationId, String correlationId, long requestTimeout)_;register,a,reply,param,reply,manager,the,reply,manager,being,used,param,exchange,the,exchange,param,callback,the,callback,param,original,correlation,id,an,optional,original,correlation,id,param,correlation,id,the,correlation,id,to,expect,being,used,param,request,timeout,the,timeout,return,the,correlation,id,used;string,register,reply,reply,manager,reply,manager,exchange,exchange,async,callback,callback,string,original,correlation,id,string,correlation,id,long,request,timeout
ReplyManager -> String registerReply(ReplyManager replyManager, Exchange exchange, AsyncCallback callback,                          String originalCorrelationId, String correlationId, long requestTimeout)_;1455957587;Register a reply__@param replyManager    the reply manager being used_@param exchange        the exchange_@param callback        the callback_@param originalCorrelationId  an optional original correlation id_@param correlationId   the correlation id to expect being used_@param requestTimeout  the timeout_@return the correlation id used;String registerReply(ReplyManager replyManager, Exchange exchange, AsyncCallback callback,_                         String originalCorrelationId, String correlationId, long requestTimeout)_;register,a,reply,param,reply,manager,the,reply,manager,being,used,param,exchange,the,exchange,param,callback,the,callback,param,original,correlation,id,an,optional,original,correlation,id,param,correlation,id,the,correlation,id,to,expect,being,used,param,request,timeout,the,timeout,return,the,correlation,id,used;string,register,reply,reply,manager,reply,manager,exchange,exchange,async,callback,callback,string,original,correlation,id,string,correlation,id,long,request,timeout
ReplyManager -> String registerReply(ReplyManager replyManager, Exchange exchange, AsyncCallback callback,                          String originalCorrelationId, String correlationId, long requestTimeout)_;1540108161;Register a reply__@param replyManager    the reply manager being used_@param exchange        the exchange_@param callback        the callback_@param originalCorrelationId  an optional original correlation id_@param correlationId   the correlation id to expect being used_@param requestTimeout  the timeout_@return the correlation id used;String registerReply(ReplyManager replyManager, Exchange exchange, AsyncCallback callback,_                         String originalCorrelationId, String correlationId, long requestTimeout)_;register,a,reply,param,reply,manager,the,reply,manager,being,used,param,exchange,the,exchange,param,callback,the,callback,param,original,correlation,id,an,optional,original,correlation,id,param,correlation,id,the,correlation,id,to,expect,being,used,param,request,timeout,the,timeout,return,the,correlation,id,used;string,register,reply,reply,manager,reply,manager,exchange,exchange,async,callback,callback,string,original,correlation,id,string,correlation,id,long,request,timeout
