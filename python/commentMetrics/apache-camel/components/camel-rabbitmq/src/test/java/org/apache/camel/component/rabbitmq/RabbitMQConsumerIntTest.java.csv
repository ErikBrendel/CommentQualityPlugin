# id;timestamp;commentText;codeText;commentWords;codeWords
RabbitMQConsumerIntTest -> @Test     public void sentMessageIsReceivedWithHeadersRouting() throws InterruptedException, IOException, TimeoutException;1485776994;Tests the proper rabbit binding arguments are in place when the headersExchangeWithQueue is created._Should only receive messages with the header [foo=bar];@Test_    public void sentMessageIsReceivedWithHeadersRouting() throws InterruptedException, IOException, TimeoutException {_        _        _        to.expectedMessageCount(1)___        AMQP.BasicProperties.Builder properties = new AMQP.BasicProperties.Builder()__        properties.headers(Collections.singletonMap(HEADER_KEY, HEADER_VALUE))___        AMQP.BasicProperties.Builder nonMatchingProperties = new AMQP.BasicProperties.Builder()__        nonMatchingProperties.headers(Collections.singletonMap(HEADER_KEY, "wrong-value"))___        Channel channel = connection().createChannel()__        channel.basicPublish(HEADERS_EXCHANGE, "", properties.build(), MSG.getBytes())__        channel.basicPublish(HEADERS_EXCHANGE, "", null, MSG.getBytes())__        channel.basicPublish(HEADERS_EXCHANGE, "", nonMatchingProperties.build(), MSG.getBytes())___        to.assertIsSatisfied()__    };tests,the,proper,rabbit,binding,arguments,are,in,place,when,the,headers,exchange,with,queue,is,created,should,only,receive,messages,with,the,header,foo,bar;test,public,void,sent,message,is,received,with,headers,routing,throws,interrupted,exception,ioexception,timeout,exception,to,expected,message,count,1,amqp,basic,properties,builder,properties,new,amqp,basic,properties,builder,properties,headers,collections,singleton,map,amqp,basic,properties,builder,non,matching,properties,new,amqp,basic,properties,builder,non,matching,properties,headers,collections,singleton,map,wrong,value,channel,channel,connection,create,channel,channel,basic,publish,properties,build,msg,get,bytes,channel,basic,publish,null,msg,get,bytes,channel,basic,publish,non,matching,properties,build,msg,get,bytes,to,assert,is,satisfied
RabbitMQConsumerIntTest -> @Test     public void sentMessageIsReceivedWithHeadersRouting() throws InterruptedException, IOException, TimeoutException;1486980059;Tests the proper rabbit binding arguments are in place when the headersExchangeWithQueue is created._Should only receive messages with the header [foo=bar];@Test_    public void sentMessageIsReceivedWithHeadersRouting() throws InterruptedException, IOException, TimeoutException {_        _        _        to.expectedMessageCount(1)___        Channel channel = connection().createChannel()__        channel.basicPublish(HEADERS_EXCHANGE, "", propertiesWithHeader("foo", "bar"), MSG.getBytes())__        channel.basicPublish(HEADERS_EXCHANGE, "", null, MSG.getBytes())__        channel.basicPublish(HEADERS_EXCHANGE, "", propertiesWithHeader("foo", "bra"), MSG.getBytes())___        to.assertIsSatisfied()__    };tests,the,proper,rabbit,binding,arguments,are,in,place,when,the,headers,exchange,with,queue,is,created,should,only,receive,messages,with,the,header,foo,bar;test,public,void,sent,message,is,received,with,headers,routing,throws,interrupted,exception,ioexception,timeout,exception,to,expected,message,count,1,channel,channel,connection,create,channel,channel,basic,publish,properties,with,header,foo,bar,msg,get,bytes,channel,basic,publish,null,msg,get,bytes,channel,basic,publish,properties,with,header,foo,bra,msg,get,bytes,to,assert,is,satisfied
RabbitMQConsumerIntTest -> @Test     public void sentMessageIsReceivedWithHeadersRouting() throws InterruptedException, IOException, TimeoutException;1524791183;Tests the proper rabbit binding arguments are in place when the headersExchangeWithQueue is created._Should only receive messages with the header [foo=bar];@Test_    public void sentMessageIsReceivedWithHeadersRouting() throws InterruptedException, IOException, TimeoutException {_        _        _        to.expectedMessageCount(1)___        Channel channel = connection().createChannel()__        channel.basicPublish(HEADERS_EXCHANGE, "", propertiesWithHeader("foo", "bar"), MSG.getBytes())__        channel.basicPublish(HEADERS_EXCHANGE, "", null, MSG.getBytes())__        channel.basicPublish(HEADERS_EXCHANGE, "", propertiesWithHeader("foo", "bra"), MSG.getBytes())___        to.assertIsSatisfied()__    };tests,the,proper,rabbit,binding,arguments,are,in,place,when,the,headers,exchange,with,queue,is,created,should,only,receive,messages,with,the,header,foo,bar;test,public,void,sent,message,is,received,with,headers,routing,throws,interrupted,exception,ioexception,timeout,exception,to,expected,message,count,1,channel,channel,connection,create,channel,channel,basic,publish,properties,with,header,foo,bar,msg,get,bytes,channel,basic,publish,null,msg,get,bytes,channel,basic,publish,properties,with,header,foo,bra,msg,get,bytes,to,assert,is,satisfied
RabbitMQConsumerIntTest -> @Test     public void sentMessageIsReceivedWithHeadersRouting() throws InterruptedException, IOException, TimeoutException;1540108158;Tests the proper rabbit binding arguments are in place when the headersExchangeWithQueue is created._Should only receive messages with the header [foo=bar];@Test_    public void sentMessageIsReceivedWithHeadersRouting() throws InterruptedException, IOException, TimeoutException {_        _        _        to.expectedMessageCount(1)___        Channel channel = connection().createChannel()__        channel.basicPublish(HEADERS_EXCHANGE, "", propertiesWithHeader("foo", "bar"), MSG.getBytes())__        channel.basicPublish(HEADERS_EXCHANGE, "", null, MSG.getBytes())__        channel.basicPublish(HEADERS_EXCHANGE, "", propertiesWithHeader("foo", "bra"), MSG.getBytes())___        to.assertIsSatisfied()__    };tests,the,proper,rabbit,binding,arguments,are,in,place,when,the,headers,exchange,with,queue,is,created,should,only,receive,messages,with,the,header,foo,bar;test,public,void,sent,message,is,received,with,headers,routing,throws,interrupted,exception,ioexception,timeout,exception,to,expected,message,count,1,channel,channel,connection,create,channel,channel,basic,publish,properties,with,header,foo,bar,msg,get,bytes,channel,basic,publish,null,msg,get,bytes,channel,basic,publish,properties,with,header,foo,bra,msg,get,bytes,to,assert,is,satisfied
