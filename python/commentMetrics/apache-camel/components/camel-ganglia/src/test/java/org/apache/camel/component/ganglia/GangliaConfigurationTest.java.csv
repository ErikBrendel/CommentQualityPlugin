commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Before public void setUp() {     configuration = new GangliaConfiguration(). }
false;public;0;6;;@Test public void getterShouldReturnTheDefaultValues() {     assertEquals("239.2.11.71", configuration.getHost()).     assertEquals(8649, configuration.getPort()).     assertEquals(true, configuration.getWireFormat31x()). }
false;public;0;8;;@Test public void getterShouldReturnTheSetValues() {     setNonDefaultValues(configuration).     assertEquals("10.10.1.1", configuration.getHost()).     assertEquals(18649, configuration.getPort()).     assertEquals(false, configuration.getWireFormat31x()). }
false;public;0;7;;@Test public void getterShouldReturnTheConfigureValuesFromURI() throws URISyntaxException {     configuration.configure(new URI("ganglia://192.168.1.1:28649?mode=UNICAST")).     assertEquals("192.168.1.1", configuration.getHost()).     assertEquals(28649, configuration.getPort()). }
false;public;0;8;;@Test public void cloneShouldReturnAnEqualInstance() {     setNonDefaultValues(configuration).     GangliaConfiguration config = configuration.copy().     assertEquals(config.getHost(), configuration.getHost()).     assertEquals(config.getPort(), configuration.getPort()). }
false;private;1;5;;private void setNonDefaultValues(GangliaConfiguration config) {     config.setHost("10.10.1.1").     config.setPort(18649).     config.setWireFormat31x(false). }
