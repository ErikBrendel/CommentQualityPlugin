commented;modifiers;parameterAmount;loc;comment;code
false;public;1;8;;@Override public void onNext(Object o) {     Exchange exchange = sourceEndpoint.createExchange().     exchange.getIn().setHeader(GrpcConstants.GRPC_EVENT_TYPE_HEADER, GrpcConstants.GRPC_EVENT_TYPE_ON_NEXT).     exchange.getIn().setBody(o).     doSend(exchange). }
false;public;1;9;;@Override public void onError(Throwable throwable) {     if (configuration.isForwardOnError()) {         Exchange exchange = sourceEndpoint.createExchange().         exchange.getIn().setHeader(GrpcConstants.GRPC_EVENT_TYPE_HEADER, GrpcConstants.GRPC_EVENT_TYPE_ON_ERROR).         exchange.getIn().setBody(throwable).         doSend(exchange).     } }
false;public;0;8;;@Override public void onCompleted() {     if (configuration.isForwardOnCompleted()) {         Exchange exchange = sourceEndpoint.createExchange().         exchange.getIn().setHeader(GrpcConstants.GRPC_EVENT_TYPE_HEADER, GrpcConstants.GRPC_EVENT_TYPE_ON_COMPLETED).         doSend(exchange).     } }
false;private;1;4;;private void doSend(Exchange exchange) {     producerCache.doInAsyncProducer(endpoint, exchange, doneSync -> {     }, AsyncProcessor::process). }
