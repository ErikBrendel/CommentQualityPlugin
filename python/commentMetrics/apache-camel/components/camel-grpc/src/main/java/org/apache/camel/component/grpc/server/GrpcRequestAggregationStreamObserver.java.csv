commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public void onNext(Object request) {     requestList.add(request). }
false;public;1;4;;@Override public void onError(Throwable t) {     exchange.setException(t). }
false;public;0;34;;@Override public void onCompleted() {     CountDownLatch latch = new CountDownLatch(1).     Object responseBody = null.     exchange.getIn().setBody(requestList).     exchange.getIn().setHeaders(headers).     consumer.process(exchange, doneSync -> {         latch.countDown().     }).     try {         latch.await().         if (exchange.hasOut()) {             responseBody = exchange.getOut().getBody().         } else {             responseBody = exchange.getIn().getBody().         }         if (responseBody instanceof List) {             List<?> responseList = (List<?>) responseBody.             responseList.forEach((responseItem) -> {                 responseObserver.onNext(responseItem).             }).         } else {             responseObserver.onNext(responseBody).         }         responseObserver.onCompleted().     } catch (InterruptedException e) {         responseObserver.onError(e).     } }
