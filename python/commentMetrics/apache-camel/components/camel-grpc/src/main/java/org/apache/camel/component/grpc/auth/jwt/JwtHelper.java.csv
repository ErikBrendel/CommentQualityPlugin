commented;modifiers;parameterAmount;loc;comment;code
false;public,static;4;11;;public static String createJwtToken(JwtAlgorithm algorithmName, String secret, String issuer, String subject) {     try {         Algorithm algorithm = selectAlgorithm(algorithmName, secret).         String token = JWT.create().withIssuer(issuer).withSubject(subject).sign(algorithm).         return token.     } catch (JWTCreationException e) {         throw new IllegalArgumentException("Unable to create JWT token", e).     } catch (UnsupportedEncodingException e) {         throw new IllegalArgumentException("UTF-8 encoding not supported during JWT token creation", e).     } }
false;public,static;2;12;;public static Algorithm selectAlgorithm(JwtAlgorithm algorithmName, String secret) throws IllegalArgumentException, UnsupportedEncodingException {     switch(algorithmName) {         case HMAC256:             return Algorithm.HMAC256(secret).         case HMAC384:             return Algorithm.HMAC384(secret).         case HMAC512:             return Algorithm.HMAC512(secret).         default:             throw new IllegalArgumentException("JWT algorithm " + algorithmName + " not implemented").     } }
