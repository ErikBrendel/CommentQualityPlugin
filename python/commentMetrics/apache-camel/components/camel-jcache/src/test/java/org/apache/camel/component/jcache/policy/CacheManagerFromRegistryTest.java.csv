commented;modifiers;parameterAmount;loc;comment;code
true;public;0;16;// Register cacheManager in CamelContext. Set cacheName ;// Register cacheManager in CamelContext. Set cacheName @Test public void testCacheManagerFromContext() throws Exception {     final String key = randomString().     // Send exchange     Object responseBody = this.template().requestBody("direct:policy-context-manager", key).     // Verify the cacheManager "hzsecond" registered in the CamelContext was used     assertNull(lookupCache("contextCacheManager")).     CacheManager cacheManager = Caching.getCachingProvider().getCacheManager(URI.create("hzsecond"), null).     Cache cache = cacheManager.getCache("contextCacheManager").     assertEquals(generateValue(key), cache.get(key)).     assertEquals(generateValue(key), responseBody).     assertEquals(1, getMockEndpoint("mock:value").getExchanges().size()). }
false;public;0;12;;@Override public void configure() throws Exception {     // Use the cacheManager registered in CamelContext. See createRegistry(). Set cacheName     // During the test JndiRegistry is used, so we add the cacheManager to JNDI. In Spring context a bean works.     JCachePolicy jcachePolicy = new JCachePolicy().     jcachePolicy.setCacheName("contextCacheManager").     from("direct:policy-context-manager").policy(jcachePolicy).to("mock:value"). }
false;protected;0;17;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // Use the cacheManager registered in CamelContext. See createRegistry(). Set cacheName             // During the test JndiRegistry is used, so we add the cacheManager to JNDI. In Spring context a bean works.             JCachePolicy jcachePolicy = new JCachePolicy().             jcachePolicy.setCacheName("contextCacheManager").             from("direct:policy-context-manager").policy(jcachePolicy).to("mock:value").         }     }. }
false;protected;0;9;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry registry = super.createRegistry().     // Register another CacheManager in registry     registry.bind("cachemanager-hzsecond", Caching.getCachingProvider().getCacheManager(URI.create("hzsecond"), null)).     return registry. }
false;public;0;10;;@After public void after() {     super.after().     CacheManager cacheManager = Caching.getCachingProvider().getCacheManager(URI.create("hzsecond"), null).     cacheManager.getCacheNames().forEach((s) -> cacheManager.destroyCache(s)).     Caching.getCachingProvider().close(URI.create("hzsecond"), null).     // We need to shutdown the second instance using the Hazelcast api. close(URI,ClassLoader) doesn't do that.     HazelcastInstanceFactory.getHazelcastInstance("hzsecond").shutdown(). }
