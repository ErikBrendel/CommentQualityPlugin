commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected AbstractXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/language/SpringSimplePropertyPlaceholderClashTest-context.xml"). }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").setHeader(Exchange.FILE_NAME, simple("{{file.rootdir}}/$simple{in.header.CamelFileName}")).to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").setHeader(Exchange.FILE_NAME, simple("{{file.rootdir}}/$simple{in.header.CamelFileName}")).to("mock:result").         }     }. }
false;public;0;8;;@Test public void testReplaceSimpleExpression() throws Exception {     getMockEndpoint("mock:result").expectedHeaderReceived(Exchange.FILE_NAME, "/root/dir/test.txt").     template.sendBodyAndHeader("direct:start", "Test", Exchange.FILE_NAME, "test.txt").     assertMockEndpointsSatisfied(). }
