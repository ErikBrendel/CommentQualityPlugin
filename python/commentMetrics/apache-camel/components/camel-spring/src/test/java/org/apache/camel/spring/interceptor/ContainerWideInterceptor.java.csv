commented;modifiers;parameterAmount;loc;comment;code
false;public;1;7;;public void process(Exchange exchange) throws Exception {     // we just count number of interceptions     count++.     LOG.info("I am the container wide interceptor. Intercepted total count: " + count).     // its important that we delegate to the real target so we let target process the exchange     target.process(exchange). }
false;public;0;4;;@Override public String toString() {     return "ContainerWideInterceptor[" + target + "]". }
false;public;4;20;;public Processor wrapProcessorInInterceptors(final CamelContext context, final NamedNode definition, final Processor target, final Processor nextTarget) throws Exception {     // where we implement our interception logic.     return new Processor() {          public void process(Exchange exchange) throws Exception {             // we just count number of interceptions             count++.             LOG.info("I am the container wide interceptor. Intercepted total count: " + count).             // its important that we delegate to the real target so we let target process the exchange             target.process(exchange).         }          @Override         public String toString() {             return "ContainerWideInterceptor[" + target + "]".         }     }. }
false;public;0;3;;public int getCount() {     return count. }
