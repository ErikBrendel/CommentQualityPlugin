commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Test public void testContextToString() throws Exception {     assertNotNull(context.toString()). }
false;public;0;20;;@Test public void testEndpointConfiguration() throws Exception {     Endpoint endpoint = getMandatoryBean(Endpoint.class, "endpoint1").     assertEquals("endpoint URI", "direct://start", endpoint.getEndpointUri()).     DummyBean dummyBean = getMandatoryBean(DummyBean.class, "mybean").     assertNotNull("The bean should have an endpoint injected", dummyBean.getEndpoint()).     assertEquals("endpoint URI", "direct://start", dummyBean.getEndpoint().getEndpointUri()).     log.debug("Found dummy bean: " + dummyBean).     MockEndpoint resultEndpoint = getMockEndpoint("mock:end").     resultEndpoint.expectedBodiesReceived(body).     // now lets send a message     template.sendBody("direct:start", body).     resultEndpoint.assertIsSatisfied(). }
false;protected;0;3;;protected SpringCamelContext createCamelContext() {     return applicationContext.getBean("camel", SpringCamelContext.class). }
false;public;0;9;;@Test public void testEndpointConfigurationAfterEnsuringThatTheStatementRouteBuilderWasCreated() throws Exception {     String[] names = applicationContext.getBeanDefinitionNames().     for (String name : names) {         log.debug("Found bean name: " + name).     }     testEndpointConfiguration(). }
false;public;0;11;;@Test public void testReferenceEndpointFromOtherCamelContext() throws Exception {     CamelContext context = applicationContext.getBean("camel2", CamelContext.class).     RouteContext routeContext = new DefaultRouteContext(context).     try {         routeContext.resolveEndpoint(null, "endpoint1").         fail("Should have thrown exception").     } catch (NoSuchEndpointException exception) {         assertTrue("Get a wrong exception message", exception.getMessage().contains("make sure the endpoint has the same camel context as the route does")).     } }
false;protected;0;3;;protected AbstractXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/spring/endpointReference.xml"). }
