commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;13;;protected CamelContext createCamelContext() throws Exception {     try {         createSpringCamelContext(this, "org/apache/camel/spring/processor/SpringTryCatchMustHaveExceptionConfiguredTest.xml").         fail("Should have thrown exception").     } catch (RuntimeCamelException e) {         FailedToCreateRouteException ftcre = assertIsInstanceOf(FailedToCreateRouteException.class, e.getCause()).         IllegalArgumentException iae = assertIsInstanceOf(IllegalArgumentException.class, ftcre.getCause()).         assertEquals("At least one Exception must be configured to catch", iae.getMessage()).     }     // return a working context instead, to let this test pass     return createSpringCamelContext(this, "org/apache/camel/spring/processor/convertBody.xml"). }
false;public;0;4;;@Test public void testTryCatchMustHaveExceptionConfigured() { // noop }
