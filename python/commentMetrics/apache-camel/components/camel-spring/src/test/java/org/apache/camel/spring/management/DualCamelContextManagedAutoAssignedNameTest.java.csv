commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;3;;protected AbstractXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/spring/management/dualCamelContextManagedAutoAssignedNameTest.xml"). }
false;public;0;46;;@Test public void testDualCamelContextManaged() throws Exception {     MBeanServer mbeanServer = context.getManagementStrategy().getManagementAgent().getMBeanServer().     Set<ObjectName> set = mbeanServer.queryNames(new ObjectName("*:type=routes,*"), null).     assertEquals(2, set.size()).     Iterator<ObjectName> it = set.iterator().     ObjectName on1 = it.next().     ObjectName on2 = it.next().     assertTrue("Route 1 is missing", on1.getCanonicalName().contains("route1") || on2.getCanonicalName().contains("route1")).     assertTrue("Route 2 is missing", on1.getCanonicalName().contains("route2") || on2.getCanonicalName().contains("route2")).     set = mbeanServer.queryNames(new ObjectName("*:type=endpoints,*"), null).     assertTrue("Size should be 4 or higher, was: " + set.size(), set.size() >= 4).     Set<String> ids1 = new TreeSet<>().     Set<String> ids2 = new TreeSet<>().     for (ObjectName on : set) {         String name = on.getCanonicalName().         log.info("ObjectName: {}", on).         if (name.contains("mock://mock1")) {             String id = (String) mbeanServer.getAttribute(on, "CamelId").             ids1.add(id).         } else if (name.contains("mock://mock2")) {             String id = (String) mbeanServer.getAttribute(on, "CamelId").             ids2.add(id).         } else if (name.contains("file://target/route1")) {             String id = (String) mbeanServer.getAttribute(on, "CamelId").             ids1.add(id).         } else if (name.contains("file://target/route2")) {             String id = (String) mbeanServer.getAttribute(on, "CamelId").             ids2.add(id).         }     }     assertEquals(1, ids1.size()).     assertEquals(1, ids2.size()).     String camel1 = ids1.iterator().next().     String camel2 = ids2.iterator().next().     // should be different Camels     assertNotEquals(camel1, camel2). }
