commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected AbstractXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/spring/config/SpringProduceInjectedPrototypeBeanTest.xml"). }
false;public;0;11;;@Test public void testProduceInjectedOnce() throws Exception {     getMockEndpoint("mock:result").expectedBodiesReceived("Hello World", "Bye World").     MyProduceBean bean = context.getRegistry().lookupByNameAndType("myProducerBean", MyProduceBean.class).     bean.testDoSomething("Hello World").     bean.testDoSomething("Bye World").     assertMockEndpointsSatisfied(). }
false;public;0;13;;@Test public void testProduceInjectedTwice() throws Exception {     getMockEndpoint("mock:result").expectedBodiesReceived("Hello World", "Bye World").     MyProduceBean bean = context.getRegistry().lookupByNameAndType("myProducerBean", MyProduceBean.class).     bean.testDoSomething("Hello World").     MyProduceBean bean2 = context.getRegistry().lookupByNameAndType("myProducerBean", MyProduceBean.class).     bean2.testDoSomething("Bye World").     assertMockEndpointsSatisfied(). }
