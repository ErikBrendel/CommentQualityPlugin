commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void testSendingToProcessorEndpoint() throws Exception {     ProcessorStub processor = getMandatoryBean(ProcessorStub.class, "myProcessor").     template.sendBody("myProcessor", body).     List<Exchange> list = processor.getExchanges().     assertEquals("Received exchange list: " + list, 1, list.size()).     log.debug("Found exchanges: " + list). }
false;public;0;12;;@Test public void testSendingToNonExistentEndpoint() throws Exception {     String uri = "unknownEndpoint".     Endpoint endpoint = context.getEndpoint(uri).     assertNull("Should not have found an endpoint! Was: " + endpoint, endpoint).     try {         template.sendBody(uri, body).         fail("We should have failed as this is a bad endpoint URI").     } catch (NoSuchEndpointException e) {         log.debug("Caught expected exception: " + e, e).     } }
false;protected;0;3;;protected AbstractXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/spring/bind/processorAsEndpoint.xml"). }
