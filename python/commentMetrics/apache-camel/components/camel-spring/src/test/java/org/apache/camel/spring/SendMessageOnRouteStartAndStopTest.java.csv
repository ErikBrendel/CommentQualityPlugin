commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;6;;@Override protected AbstractXmlApplicationContext createApplicationContext() {     deleteDirectory("target/startandstop").     return new ClassPathXmlApplicationContext("org/apache/camel/spring/SendMessageOnRouteStartAndStopTest.xml"). }
false;public;0;10;;@Override @Before public void setUp() throws Exception {     super.setUp().     // the event notifier should have send a message to the file endpoint     // so the start file is created on startup     File start = new File("target/startandstop/start.txt").     assertTrue("Start file should exist on startup", start.exists()). }
false;public;0;10;;@Override @After public void tearDown() throws Exception {     super.tearDown().     // the event notifier should have send a message to the file endpoint     // so the stop file is created on shutdown     File start = new File("target/startandstop/stop.txt").     assertTrue("Stop file should exist on shutdown", start.exists()). }
false;public;0;10;;@Test public void testSendMessageOnStartupAndStop() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(1).     // this is just to see that the route also works     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
