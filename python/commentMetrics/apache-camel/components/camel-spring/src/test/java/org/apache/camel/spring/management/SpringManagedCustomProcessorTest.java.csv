commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected boolean useJmx() {     return true. }
false;protected;0;4;;@Override protected AbstractXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/spring/management/SpringManagedCustomProcessorTest.xml"). }
false;protected;0;3;;protected MBeanServer getMBeanServer() {     return context.getManagementStrategy().getManagementAgent().getMBeanServer(). }
false;public;0;23;;@Test public void testManageCustomProcessor() throws Exception {     MBeanServer mbeanServer = getMBeanServer().     ObjectName on = ObjectName.getInstance("org.apache.camel:context=camel-1,type=processors,name=\"custom\"").     getMockEndpoint("mock:result").expectedMessageCount(1).     getMockEndpoint("mock:result").expectedHeaderReceived("foo", "hey").     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied().     String foo = (String) mbeanServer.getAttribute(on, "Foo").     assertEquals("hey", foo).     // change foo     mbeanServer.setAttribute(on, new Attribute("Foo", "changed")).     resetMocks().     getMockEndpoint("mock:result").expectedMessageCount(1).     getMockEndpoint("mock:result").expectedHeaderReceived("foo", "changed").     template.sendBody("direct:start", "Bye World").     assertMockEndpointsSatisfied(). }
false;public;0;4;;@ManagedAttribute(description = "Foo is the foo") public String getFoo() {     return foo. }
false;public;1;4;;@ManagedAttribute(description = "Foo is the foo") public void setFoo(String foo) {     this.foo = foo. }
false;public;1;3;;public void process(Exchange exchange) throws Exception {     exchange.getIn().setHeader("foo", getFoo()). }
