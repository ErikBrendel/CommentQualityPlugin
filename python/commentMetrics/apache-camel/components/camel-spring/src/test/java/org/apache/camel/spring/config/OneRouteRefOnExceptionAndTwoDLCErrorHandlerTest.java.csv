commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void testOneRouteRefNoOnExceptionAndTwoDLCErrorHandler() throws Exception {     getMockEndpoint("mock:foo").expectedMessageCount(1).     getMockEndpoint("mock:dead").expectedMessageCount(0).     getMockEndpoint("mock:dead2").expectedMessageCount(1).     getMockEndpoint("mock:handled").expectedMessageCount(0).     template.sendBody("direct:foo", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;11;;@Test public void testOneRouteRefOnExceptionAndTwoDLCErrorHandler() throws Exception {     getMockEndpoint("mock:bar").expectedMessageCount(1).     getMockEndpoint("mock:dead").expectedMessageCount(0).     getMockEndpoint("mock:dead2").expectedMessageCount(0).     getMockEndpoint("mock:handled").expectedMessageCount(1).     template.sendBody("direct:bar", "Hello World").     assertMockEndpointsSatisfied(). }
false;protected;0;4;;@Override protected AbstractXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/spring/config/OneRouteRefOnExceptionAndTwoDLCErrorHandler.xml"). }
