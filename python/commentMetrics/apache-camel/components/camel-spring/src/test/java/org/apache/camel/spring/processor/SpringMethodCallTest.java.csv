commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testMethodCallType() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived("Camel").     mock.expectedHeaderReceived("foo", "Hi Camel").     template.sendBody("direct:start", "Camel").     assertMockEndpointsSatisfied(). }
false;public;0;10;;@Test public void testMethodCallRef() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:ref").     mock.expectedBodiesReceived("Camel").     mock.expectedHeaderReceived("foo", "Hi Camel").     template.sendBody("direct:ref", "Camel").     assertMockEndpointsSatisfied(). }
false;public;0;10;;@Test public void testToBeanType() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived("Hi Camel", "Hi World").     template.sendBody("direct:tobeantype", "Camel").     template.sendBody("direct:tobeantype", "World").     assertMockEndpointsSatisfied(). }
false;protected;0;3;;protected CamelContext createCamelContext() throws Exception {     return createSpringCamelContext(this, "/org/apache/camel/spring/processor/SpringMethodCallTest.xml"). }
