commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;@Test public void testServiceFilter() throws Exception {     Exchange result.     result = template.request("direct:start", emptyProcessor()).     assertHeader(result, ServiceCallConstants.SERVICE_HOST, "host1").     assertHeader(result, ServiceCallConstants.SERVICE_PORT, 9093).     result = template.request("direct:start", emptyProcessor()).     assertHeader(result, ServiceCallConstants.SERVICE_HOST, "host4").     assertHeader(result, ServiceCallConstants.SERVICE_PORT, 9094). }
false;private;3;5;;// ********************* // Helpers // ********************* private void assertHeader(Exchange exchange, String header, Object expectedValue) {     Assert.assertNotNull(exchange).     Assert.assertTrue(exchange.getIn().getHeaders().containsKey(header)).     Assert.assertEquals(expectedValue, exchange.getIn().getHeader(header)). }
false;private;0;5;;private Processor emptyProcessor() {     return e -> {         return.     }. }
false;protected;0;4;;// ********************* // Application Context // ********************* @Override protected AbstractXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/spring/cloud/ServiceCallFilterTest.xml"). }
