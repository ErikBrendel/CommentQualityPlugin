commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected AbstractXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/language/SpringSimpleExpressionTest.xml"). }
false;public;0;8;;@Test public void testSimpleWhenString() throws Exception {     getMockEndpoint("mock:result").expectedBodiesReceived("correct").     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;8;;@Test public void testSimpleOtherwiseString() throws Exception {     getMockEndpoint("mock:result").expectedBodiesReceived("incorrect").     template.sendBody("direct:start", "Bye World").     assertMockEndpointsSatisfied(). }
