commented;modifiers;parameterAmount;loc;comment;code
false;public;0;22;;public void configure() throws Exception {     // START SNIPPET: e1     // on exception is also supported     // so if an IllegalArgumentException is thrown then we route it to the mock:error     // since we have handled = false then the exception is not handled and Camel will     // rollback     onException(IllegalArgumentException.class).handled(false).to("mock:error").     from("direct:okay").transacted().setBody(constant("Tiger in Action")).bean("bookService").setBody(constant("Elephant in Action")).bean("bookService").     from("direct:fail").transacted().setBody(constant("Tiger in Action")).bean("bookService").setBody(constant("Donkey in Action")).bean("bookService"). // END SNIPPET: e1 }
false;protected;0;26;;protected RouteBuilder createRouteBuilder() throws Exception {     return new SpringRouteBuilder() {          public void configure() throws Exception {             // START SNIPPET: e1             // on exception is also supported             // so if an IllegalArgumentException is thrown then we route it to the mock:error             // since we have handled = false then the exception is not handled and Camel will             // rollback             onException(IllegalArgumentException.class).handled(false).to("mock:error").             from("direct:okay").transacted().setBody(constant("Tiger in Action")).bean("bookService").setBody(constant("Elephant in Action")).bean("bookService").             from("direct:fail").transacted().setBody(constant("Tiger in Action")).bean("bookService").setBody(constant("Donkey in Action")).bean("bookService").         // END SNIPPET: e1         }     }. }
