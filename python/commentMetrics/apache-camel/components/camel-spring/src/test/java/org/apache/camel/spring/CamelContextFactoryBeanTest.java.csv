commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Before public void setUp() throws Exception {     factory = new CamelContextFactoryBean().     factory.setId("camelContext"). }
false;public;0;9;;@Test public void testGetDefaultUuidGenerator() throws Exception {     factory.setApplicationContext(new StaticApplicationContext()).     factory.afterPropertiesSet().     UuidGenerator uuidGenerator = factory.getContext().getUuidGenerator().     assertTrue(uuidGenerator instanceof DefaultUuidGenerator). }
false;public;0;11;;@Test public void testGetCustomUuidGenerator() throws Exception {     StaticApplicationContext applicationContext = new StaticApplicationContext().     applicationContext.registerSingleton("uuidGenerator", SimpleUuidGenerator.class).     factory.setApplicationContext(applicationContext).     factory.afterPropertiesSet().     UuidGenerator uuidGenerator = factory.getContext().getUuidGenerator().     assertTrue(uuidGenerator instanceof SimpleUuidGenerator). }
false;public;0;17;;@Test public void testSetEndpoints() throws Exception {     // Create a new Camel context and add an endpoint     CamelContextFactoryBean camelContext = new CamelContextFactoryBean().     List<CamelEndpointFactoryBean> endpoints = new LinkedList<>().     CamelEndpointFactoryBean endpoint = new CamelEndpointFactoryBean().     endpoint.setId("endpoint1").     endpoint.setUri("mock:end").     endpoints.add(endpoint).     camelContext.setEndpoints(endpoints).     // Compare the new context with our reference context     URL expectedContext = getClass().getResource("/org/apache/camel/spring/context-with-endpoint.xml").     Diff diff = DiffBuilder.compare(expectedContext).withTest(Input.fromJaxb(camelContext)).ignoreWhitespace().ignoreComments().checkForSimilar().build().     assertFalse("Expected context and actual context differ:\n" + diff.toString(), diff.hasDifferences()). }
false;public;0;11;;@Test public void testCustomModelJAXBContextFactory() throws Exception {     StaticApplicationContext applicationContext = new StaticApplicationContext().     applicationContext.registerSingleton("customModelJAXBContextFactory", CustomModelJAXBContextFactory.class).     factory.setApplicationContext(applicationContext).     factory.afterPropertiesSet().     ModelJAXBContextFactory modelJAXBContextFactory = factory.getContext().getModelJAXBContextFactory().     assertTrue(modelJAXBContextFactory instanceof CustomModelJAXBContextFactory). }
