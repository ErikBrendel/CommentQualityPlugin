commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected boolean useJmx() {     return true. }
false;public;0;7;;@Test public void testJmxConfiguration() throws Exception {     ManagementAgent agent = getMandatoryBean(DefaultManagementAgent.class, "agent").     assertNotNull("SpringInstrumentationAgent must be configured for JMX support", agent).     assertNotNull("MBeanServer must be configured for JMX support", agent.getMBeanServer()).     assertEquals("org.apache.camel.test", agent.getMBeanServer().getDefaultDomain()). }
false;protected;0;4;;@Override protected AbstractXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/spring/management/jmxInstrumentationWithConnector.xml"). }
false;public;0;4;;@Test public void testReferenceEndpointFromOtherCamelContext() throws Exception { // don't run the test in this method }
