commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;3;;protected AbstractXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/spring/config/errorHandler.xml"). }
false;public;0;16;;@Test public void testEndpointConfiguration() throws Exception {     SpringCamelContext context = applicationContext.getBeansOfType(SpringCamelContext.class).values().iterator().next().     List<Route> list = context.getRoutes().     assertEquals("Number routes created" + list, 2, list.size()).     for (Route route : list) {         EventDrivenConsumerRoute consumerRoute = assertIsInstanceOf(EventDrivenConsumerRoute.class, route).         Channel channel = unwrapChannel(consumerRoute.getProcessor()).         DeadLetterChannel deadLetterChannel = assertIsInstanceOf(DeadLetterChannel.class, channel.getErrorHandler()).         RedeliveryPolicy redeliveryPolicy = deadLetterChannel.getRedeliveryPolicy().         assertEquals("getMaximumRedeliveries()", 1, redeliveryPolicy.getMaximumRedeliveries()).         assertEquals("isUseExponentialBackOff()", true, redeliveryPolicy.isUseExponentialBackOff()).     } }
