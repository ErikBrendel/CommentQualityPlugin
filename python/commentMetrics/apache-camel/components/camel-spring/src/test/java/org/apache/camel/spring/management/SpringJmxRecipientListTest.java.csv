commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected boolean useJmx() {     return true. }
false;protected;0;4;;@Override protected AbstractXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/spring/management/SpringJmxRecipientListTest.xml"). }
false;protected;0;3;;protected MBeanServer getMBeanServer() {     return context.getManagementStrategy().getManagementAgent().getMBeanServer(). }
false;public;0;34;;@Test public void testJmxEndpointsAddedDynamicallyDefaultRegister() throws Exception {     MockEndpoint x = getMockEndpoint("mock:x").     MockEndpoint y = getMockEndpoint("mock:y").     MockEndpoint z = getMockEndpoint("mock:z").     x.expectedBodiesReceived("answer").     y.expectedBodiesReceived("answer").     z.expectedBodiesReceived("answer").     template.sendBodyAndHeader("direct:a", "answer", "recipientListHeader", "mock:x,mock:y,mock:z").     assertMockEndpointsSatisfied().     MBeanServer mbeanServer = getMBeanServer().     // this endpoint is part of the route and should be registered     ObjectName name = ObjectName.getInstance("org.apache.camel:context=camel-1,type=endpoints,name=\"direct://a\"").     assertTrue("Should be registered", mbeanServer.isRegistered(name)).     // endpoints added after routes has been started is by default not registered     name = ObjectName.getInstance("org.apache.camel:context=camel-1,type=endpoints,name=\"mock://x\"").     assertFalse("Should not be registered", mbeanServer.isRegistered(name)).     name = ObjectName.getInstance("org.apache.camel:context=camel-1,type=endpoints,name=\"mock://y\"").     assertFalse("Should not be registered", mbeanServer.isRegistered(name)).     name = ObjectName.getInstance("org.apache.camel:context=camel-1,type=endpoints,name=\"mock://z\"").     assertFalse("Should not be registered", mbeanServer.isRegistered(name)).     // however components is always registered     name = ObjectName.getInstance("org.apache.camel:context=camel-1,type=components,name=\"mock\"").     assertTrue("Should be registered", mbeanServer.isRegistered(name)). }
