commented;modifiers;parameterAmount;loc;comment;code
false;public;0;26;;public void configure() throws Exception {     from("direct:okay").transacted().choice().when(body().contains("Hello")).to("log:hello").otherwise().to("log:other").end().to("direct:tiger").setBody(constant("Elephant in Action")).bean("bookService").     from("direct:tiger").transacted().setBody(constant("Tiger in Action")).bean("bookService").     from("direct:donkey").setBody(constant("Donkey in Action")).bean("bookService").     // marks this route as transacted that will use the single policy defined in the registry     from("direct:fail").transacted().setBody(constant("Tiger in Action")).bean("bookService").to("direct:donkey"). }
false;protected;0;30;;protected RouteBuilder createRouteBuilder() throws Exception {     return new SpringRouteBuilder() {          public void configure() throws Exception {             from("direct:okay").transacted().choice().when(body().contains("Hello")).to("log:hello").otherwise().to("log:other").end().to("direct:tiger").setBody(constant("Elephant in Action")).bean("bookService").             from("direct:tiger").transacted().setBody(constant("Tiger in Action")).bean("bookService").             from("direct:donkey").setBody(constant("Donkey in Action")).bean("bookService").             // marks this route as transacted that will use the single policy defined in the registry             from("direct:fail").transacted().setBody(constant("Tiger in Action")).bean("bookService").to("direct:donkey").         }     }. }
