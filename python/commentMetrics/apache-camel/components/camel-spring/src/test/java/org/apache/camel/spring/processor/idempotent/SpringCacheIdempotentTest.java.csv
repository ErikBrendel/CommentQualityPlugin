commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;3;;protected CamelContext createCamelContext() throws Exception {     return createSpringCamelContext(this, "org/apache/camel/spring/processor/idempotent/SpringCacheIdempotentTest.xml"). }
false;public;0;12;;@Test public void testIdempotent() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(1).     String messageId = UUID.randomUUID().toString().     for (int i = 0. i < 5. i++) {         template.sendBodyAndHeader("direct:start", UUID.randomUUID().toString(), "MessageId", messageId).     }     mock.assertIsSatisfied(). }
