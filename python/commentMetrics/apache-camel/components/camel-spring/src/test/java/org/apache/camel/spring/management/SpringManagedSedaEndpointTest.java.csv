commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected boolean useJmx() {     return true. }
false;protected;0;4;;@Override protected AbstractXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/spring/management/SpringManagedSedaEndpointTest.xml"). }
false;protected;0;3;;protected MBeanServer getMBeanServer() {     return context.getManagementStrategy().getManagementAgent().getMBeanServer(). }
false;public;0;47;;@Test public void testSedaEndpoint() throws Exception {     getMockEndpoint("mock:result").expectedMessageCount(2).     template.sendBody("seda:start", "Hello World").     template.sendBody("seda:start", "Bye World").     assertMockEndpointsSatisfied().     MBeanServer mbeanServer = getMBeanServer().     ObjectName name = ObjectName.getInstance("org.apache.camel:context=camel-1,type=endpoints,name=\"seda://start\"").     String uri = (String) mbeanServer.getAttribute(name, "EndpointUri").     assertEquals("seda://start", uri).     Long timeout = (Long) mbeanServer.getAttribute(name, "Timeout").     assertEquals(30000, timeout.intValue()).     Integer size = (Integer) mbeanServer.getAttribute(name, "CurrentQueueSize").     assertEquals(0, size.intValue()).     // stop route     context.getRouteController().stopRoute("foo").     // send a message to queue     template.sendBody("seda:start", "Hi World").     size = (Integer) mbeanServer.getAttribute(name, "CurrentQueueSize").     assertEquals(1, size.intValue()).     Long size2 = (Long) mbeanServer.invoke(name, "queueSize", null, null).     assertEquals(1, size2.longValue()).     String out = (String) mbeanServer.invoke(name, "browseExchange", new Object[] { 0 }, new String[] { "java.lang.Integer" }).     assertNotNull(out).     // message body is not dumped when browsing exchange     assertFalse(out.contains("Hi World")).     out = (String) mbeanServer.invoke(name, "browseMessageBody", new Object[] { 0 }, new String[] { "java.lang.Integer" }).     assertNotNull(out).     assertTrue(out.contains("Hi World")).     mbeanServer.invoke(name, "purgeQueue", null, null).     size = (Integer) mbeanServer.getAttribute(name, "CurrentQueueSize").     assertEquals(0, size.intValue()). }
