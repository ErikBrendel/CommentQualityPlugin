commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Override @Before public void setUp() throws Exception {     deleteDirectory("target/transacted").     super.setUp(). }
false;public;0;10;;@Test public void testTransactionSuccess() throws Exception {     template.sendBodyAndHeader("file://target/transacted/okay", "Hello World", Exchange.FILE_NAME, "okay.txt").     await().atMost(3, TimeUnit.SECONDS).untilAsserted(() -> {         // wait for route to complete         int count = jdbc.queryForObject("select count(*) from books", Integer.class).         assertEquals("Number of books", 3, count).     }). }
false;public;0;10;;@Test public void testTransactionRollback() throws Exception {     template.sendBodyAndHeader("file://target/transacted/fail", "Hello World", Exchange.FILE_NAME, "fail.txt").     await().atMost(3, TimeUnit.SECONDS).untilAsserted(() -> {         // should not be able to process the file so we still got 1 book as we did from the start         int count = jdbc.queryForObject("select count(*) from books", Integer.class).         assertEquals("Number of books", 1, count).     }). }
false;public;0;11;;public void configure() throws Exception {     from("file://target/transacted/okay?initialDelay=0&delay=10").transacted().setBody(constant("Tiger in Action")).bean("bookService").setBody(constant("Elephant in Action")).bean("bookService").     from("file://target/transacted/fail?initialDelay=0&delay=10").transacted().setBody(constant("Tiger in Action")).bean("bookService").setBody(constant("Donkey in Action")).bean("bookService"). }
false;protected;0;15;;protected RouteBuilder createRouteBuilder() throws Exception {     return new SpringRouteBuilder() {          public void configure() throws Exception {             from("file://target/transacted/okay?initialDelay=0&delay=10").transacted().setBody(constant("Tiger in Action")).bean("bookService").setBody(constant("Elephant in Action")).bean("bookService").             from("file://target/transacted/fail?initialDelay=0&delay=10").transacted().setBody(constant("Tiger in Action")).bean("bookService").setBody(constant("Donkey in Action")).bean("bookService").         }     }. }
