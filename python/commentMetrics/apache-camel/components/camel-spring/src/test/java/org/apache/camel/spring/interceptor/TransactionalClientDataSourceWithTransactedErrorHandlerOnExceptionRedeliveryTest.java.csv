commented;modifiers;parameterAmount;loc;comment;code
false;public;0;28;;public void configure() throws Exception {     // START SNIPPET: e1     // configure transacted error handler to use up till 4 redeliveries     // we have not passed in any spring TX manager. Camel will automatic     // find it in the spring application context. You only need to help     // Camel in case you have multiple TX managers     errorHandler(transactionErrorHandler().maximumRedeliveries(6)).     // speical for this exception we only want to do it at most 4 times     onException(IllegalArgumentException.class).maximumRedeliveries(4).     from("direct:okay").transacted().setBody(constant("Tiger in Action")).bean("bookService").setBody(constant("Elephant in Action")).bean("bookService").     // marks this route as transacted that will use the single policy defined in the registry     from("direct:fail").transacted().setBody(constant("Tiger in Action")).bean("bookService").setBody(constant("Donkey in Action")).bean("bookService"). // END SNIPPET: e1 }
false;protected;0;32;;protected RouteBuilder createRouteBuilder() throws Exception {     return new SpringRouteBuilder() {          public void configure() throws Exception {             // START SNIPPET: e1             // configure transacted error handler to use up till 4 redeliveries             // we have not passed in any spring TX manager. Camel will automatic             // find it in the spring application context. You only need to help             // Camel in case you have multiple TX managers             errorHandler(transactionErrorHandler().maximumRedeliveries(6)).             // speical for this exception we only want to do it at most 4 times             onException(IllegalArgumentException.class).maximumRedeliveries(4).             from("direct:okay").transacted().setBody(constant("Tiger in Action")).bean("bookService").setBody(constant("Elephant in Action")).bean("bookService").             // marks this route as transacted that will use the single policy defined in the registry             from("direct:fail").transacted().setBody(constant("Tiger in Action")).bean("bookService").setBody(constant("Donkey in Action")).bean("bookService").         // END SNIPPET: e1         }     }. }
