# id;timestamp;commentText;codeText;commentWords;codeWords
ApplicationContextTestSupport -> public <T> T getMandatoryBean(Class<T> type, String name);1196161640;Looks up the mandatory spring bean of the given name and type, failing if_it is not present or the correct type;public <T> T getMandatoryBean(Class<T> type, String name) {_        Object value = applicationContext.getBean(name)__        assertNotNull("No spring bean found for name <" + name + ">", value)__        if (type.isInstance(value)) {_            return type.cast(value)__        } else {_            fail("Spring bean <" + name + "> is not an instanceof " + type.getName() + " but is of type " + ObjectHelper.className(value))__            return null__        }_    };looks,up,the,mandatory,spring,bean,of,the,given,name,and,type,failing,if,it,is,not,present,or,the,correct,type;public,t,t,get,mandatory,bean,class,t,type,string,name,object,value,application,context,get,bean,name,assert,not,null,no,spring,bean,found,for,name,name,value,if,type,is,instance,value,return,type,cast,value,else,fail,spring,bean,name,is,not,an,instanceof,type,get,name,but,is,of,type,object,helper,class,name,value,return,null
ApplicationContextTestSupport -> public <T> T getMandatoryBean(Class<T> type, String name);1203821224;Looks up the mandatory spring bean of the given name and type, failing if_it is not present or the correct type;public <T> T getMandatoryBean(Class<T> type, String name) {_        Object value = applicationContext.getBean(name)__        assertNotNull("No spring bean found for name <" + name + ">", value)__        if (type.isInstance(value)) {_            return type.cast(value)__        } else {_            fail("Spring bean <" + name + "> is not an instanceof " + type.getName() + " but is of type " + ObjectHelper.className(value))__            return null__        }_    };looks,up,the,mandatory,spring,bean,of,the,given,name,and,type,failing,if,it,is,not,present,or,the,correct,type;public,t,t,get,mandatory,bean,class,t,type,string,name,object,value,application,context,get,bean,name,assert,not,null,no,spring,bean,found,for,name,name,value,if,type,is,instance,value,return,type,cast,value,else,fail,spring,bean,name,is,not,an,instanceof,type,get,name,but,is,of,type,object,helper,class,name,value,return,null
ApplicationContextTestSupport -> public <T> T getMandatoryBean(Class<T> type, String name);1218169108;Looks up the mandatory spring bean of the given name and type, failing if_it is not present or the correct type;public <T> T getMandatoryBean(Class<T> type, String name) {_        Object value = applicationContext.getBean(name)__        assertNotNull("No spring bean found for name <" + name + ">", value)__        if (type.isInstance(value)) {_            return type.cast(value)__        } else {_            fail("Spring bean <" + name + "> is not an instanceof " + type.getName() + " but is of type " + ObjectHelper.className(value))__            return null__        }_    };looks,up,the,mandatory,spring,bean,of,the,given,name,and,type,failing,if,it,is,not,present,or,the,correct,type;public,t,t,get,mandatory,bean,class,t,type,string,name,object,value,application,context,get,bean,name,assert,not,null,no,spring,bean,found,for,name,name,value,if,type,is,instance,value,return,type,cast,value,else,fail,spring,bean,name,is,not,an,instanceof,type,get,name,but,is,of,type,object,helper,class,name,value,return,null
ApplicationContextTestSupport -> public <T> T getMandatoryBean(Class<T> type, String name);1297968761;Looks up the mandatory spring bean of the given name and type, failing if_it is not present or the correct type;public <T> T getMandatoryBean(Class<T> type, String name) {_        Object value = applicationContext.getBean(name)__        assertNotNull("No spring bean found for name <" + name + ">", value)__        if (type.isInstance(value)) {_            return type.cast(value)__        } else {_            fail("Spring bean <" + name + "> is not an instanceof " + type.getName() + " but is of type " + ObjectHelper.className(value))__            return null__        }_    };looks,up,the,mandatory,spring,bean,of,the,given,name,and,type,failing,if,it,is,not,present,or,the,correct,type;public,t,t,get,mandatory,bean,class,t,type,string,name,object,value,application,context,get,bean,name,assert,not,null,no,spring,bean,found,for,name,name,value,if,type,is,instance,value,return,type,cast,value,else,fail,spring,bean,name,is,not,an,instanceof,type,get,name,but,is,of,type,object,helper,class,name,value,return,null
ApplicationContextTestSupport -> public <T> T getMandatoryBean(Class<T> type, String name);1323680223;Looks up the mandatory spring bean of the given name and type, failing if_it is not present or the correct type;public <T> T getMandatoryBean(Class<T> type, String name) {_        return applicationContext.getBean(name, type)__    };looks,up,the,mandatory,spring,bean,of,the,given,name,and,type,failing,if,it,is,not,present,or,the,correct,type;public,t,t,get,mandatory,bean,class,t,type,string,name,return,application,context,get,bean,name,type
ApplicationContextTestSupport -> public <T> T getMandatoryBean(Class<T> type, String name);1324569391;Looks up the mandatory spring bean of the given name and type, failing if_it is not present or the correct type;public <T> T getMandatoryBean(Class<T> type, String name) {_        return applicationContext.getBean(name, type)__    };looks,up,the,mandatory,spring,bean,of,the,given,name,and,type,failing,if,it,is,not,present,or,the,correct,type;public,t,t,get,mandatory,bean,class,t,type,string,name,return,application,context,get,bean,name,type
ApplicationContextTestSupport -> public <T> T getMandatoryBean(Class<T> type, String name);1392400400;Looks up the mandatory spring bean of the given name and type, failing if_it is not present or the correct type;public <T> T getMandatoryBean(Class<T> type, String name) {_        return applicationContext.getBean(name, type)__    };looks,up,the,mandatory,spring,bean,of,the,given,name,and,type,failing,if,it,is,not,present,or,the,correct,type;public,t,t,get,mandatory,bean,class,t,type,string,name,return,application,context,get,bean,name,type
ApplicationContextTestSupport -> public <T> T getMandatoryBean(Class<T> type, String name);1536946015;Looks up the mandatory spring bean of the given name and type, failing if_it is not present or the correct type;public <T> T getMandatoryBean(Class<T> type, String name) {_        return applicationContext.getBean(name, type)__    };looks,up,the,mandatory,spring,bean,of,the,given,name,and,type,failing,if,it,is,not,present,or,the,correct,type;public,t,t,get,mandatory,bean,class,t,type,string,name,return,application,context,get,bean,name,type
ApplicationContextTestSupport -> public <T> T getMandatoryBean(Class<T> type, String name);1540108161;Looks up the mandatory spring bean of the given name and type, failing if_it is not present or the correct type;public <T> T getMandatoryBean(Class<T> type, String name) {_        return applicationContext.getBean(name, type)__    };looks,up,the,mandatory,spring,bean,of,the,given,name,and,type,failing,if,it,is,not,present,or,the,correct,type;public,t,t,get,mandatory,bean,class,t,type,string,name,return,application,context,get,bean,name,type
