commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testTransformMyExpression() throws InterruptedException {     getMockEndpoint("mock:result").expectedBodiesReceived("Yes Camel rocks", "Hello World").     template.sendBody("direct:start", "Camel").     template.sendBody("direct:start", "World").     assertMockEndpointsSatisfied(). }
false;protected;0;4;;@Override protected AbstractXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/spring/processor/SpringCustomExpressionTest.xml"). }
false;public;1;9;;@Override public Object evaluate(Exchange exchange) {     String body = exchange.getIn().getBody(String.class).     if (body.contains("Camel")) {         return "Yes Camel rocks".     } else {         return "Hello " + body.     } }
