commented;modifiers;parameterAmount;loc;comment;code
false;public;0;23;;@Test public void testAutoStartupFalse() throws Exception {     ac = new ClassPathXmlApplicationContext("org/apache/camel/spring/config/RouteAutoStartupFalseTest.xml").     SpringCamelContext camel = ac.getBeansOfType(SpringCamelContext.class).values().iterator().next().     assertEquals(false, camel.getRouteController().getRouteStatus("foo").isStarted()).     // now starting route manually     camel.startRoute("foo").     assertEquals(true, camel.getRouteController().getRouteStatus("foo").isStarted()).     // and now we can send a message to the route and see that it works     MockEndpoint mock = camel.getEndpoint("mock:result", MockEndpoint.class).     mock.expectedMessageCount(1).     ProducerTemplate template = camel.createProducerTemplate().     template.start().     template.sendBody("direct:start", "Hello World").     template.stop().     mock.assertIsSatisfied(). }
false;public;0;19;;@Test public void testAutoStartupTrue() throws Exception {     ac = new ClassPathXmlApplicationContext("org/apache/camel/spring/config/RouteAutoStartupTrueTest.xml").     SpringCamelContext camel = ac.getBeansOfType(SpringCamelContext.class).values().iterator().next().     assertEquals(true, camel.getRouteController().getRouteStatus("bar").isStarted()).     // and now we can send a message to the route and see that it works     MockEndpoint mock = camel.getEndpoint("mock:result", MockEndpoint.class).     mock.expectedMessageCount(1).     ProducerTemplate template = camel.createProducerTemplate().     template.start().     template.sendBody("direct:start", "Hello World").     template.stop().     mock.assertIsSatisfied(). }
false;public;0;5;;@After public void tearDown() throws Exception {     IOHelper.close(ac). }
