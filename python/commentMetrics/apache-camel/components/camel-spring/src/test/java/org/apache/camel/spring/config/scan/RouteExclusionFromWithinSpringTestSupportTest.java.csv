commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected AbstractXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext(new String[] { "org/apache/camel/spring/config/scan/componentScan.xml" }, getRouteExcludingApplicationContext()). }
false;public;0;10;;@Test public void testRouteExcluded() throws InterruptedException {     assertEquals(1, context.getRoutes().size()).     MockEndpoint mock = getMockEndpoint("mock:definitelyShouldNeverReceiveExchange").     mock.expectedMessageCount(0).     sendBody("seda:shouldNeverRecieveExchange", "dropped like a hot rock").     mock.await(500, TimeUnit.MILLISECONDS).     mock.assertIsSatisfied(). }
false;public;0;7;;@Test public void testRoutesNotExcludedWorkNormally() throws InterruptedException {     template.sendBody("direct:start", "request").     MockEndpoint mock = getMockEndpoint("mock:end").     mock.expectedMessageCount(1).     mock.assertIsSatisfied(). }
false;protected;0;5;;@Override protected Class<?> excludeRoute() {     return MyExcludedRouteBuilder.class. }
