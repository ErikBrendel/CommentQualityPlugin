commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void testHello() throws Exception {     getMockEndpoint("mock:hello").expectedMessageCount(1).     getMockEndpoint("mock:bye").expectedMessageCount(0).     getMockEndpoint("mock:otherwise").expectedMessageCount(0).     getMockEndpoint("mock:result").expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;11;;@Test public void testBye() throws Exception {     getMockEndpoint("mock:hello").expectedMessageCount(0).     getMockEndpoint("mock:bye").expectedMessageCount(1).     getMockEndpoint("mock:otherwise").expectedMessageCount(0).     getMockEndpoint("mock:result").expectedMessageCount(1).     template.sendBody("direct:start", "Bye World").     assertMockEndpointsSatisfied(). }
false;public;0;13;;@Test public void testOther() throws Exception {     getMockEndpoint("mock:hello").expectedMessageCount(0).     getMockEndpoint("mock:bye").expectedMessageCount(0).     getMockEndpoint("mock:otherwise").expectedMessageCount(1).     getMockEndpoint("mock:trapped").expectedMessageCount(1).     getMockEndpoint("mock:result").expectedBodiesReceived("Cowboys").     getMockEndpoint("mock:split").expectedBodiesReceived("Hi The good", "Hi The ugly").     template.sendBody("direct:start", "The good,The bad,The ugly").     assertMockEndpointsSatisfied(). }
false;protected;0;3;;protected CamelContext createCamelContext() throws Exception {     return createSpringCamelContext(this, "org/apache/camel/spring/processor/SpringComplexBlockWithEndTest.xml"). }
false;public;2;4;;public Exchange aggregate(Exchange oldExchange, Exchange newExchange) {     newExchange.getOut().setBody("Cowboys").     return newExchange. }
