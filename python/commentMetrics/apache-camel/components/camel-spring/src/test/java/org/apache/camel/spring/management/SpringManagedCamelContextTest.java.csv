commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected boolean useJmx() {     return true. }
false;protected;0;3;;protected CamelContext createCamelContext() throws Exception {     return createSpringCamelContext(this, "org/apache/camel/spring/management/SpringManagedCamelContextTest.xml"). }
false;public;0;22;;@Test public void testFindEipNames() throws Exception {     // JMX tests dont work well on AIX CI servers (hangs them)     if (isPlatform("aix")) {         return.     }     MBeanServer mbeanServer = getMBeanServer().     ObjectName on = ObjectName.getInstance("org.apache.camel:context=19-camel-1,type=context,name=\"camel-1\"").     assertTrue("Should be registered", mbeanServer.isRegistered(on)).     @SuppressWarnings("unchecked")     List<String> info = (List<String>) mbeanServer.invoke(on, "findEipNames", null, null).     assertNotNull(info).     assertTrue(info.size() > 150).     assertTrue(info.contains("transform")).     assertTrue(info.contains("split")).     assertTrue(info.contains("from")). }
false;public;0;23;;@Test public void testFindEips() throws Exception {     // JMX tests dont work well on AIX CI servers (hangs them)     if (isPlatform("aix")) {         return.     }     MBeanServer mbeanServer = getMBeanServer().     ObjectName on = ObjectName.getInstance("org.apache.camel:context=19-camel-1,type=context,name=\"camel-1\"").     assertTrue("Should be registered", mbeanServer.isRegistered(on)).     @SuppressWarnings("unchecked")     Map<String, Properties> info = (Map<String, Properties>) mbeanServer.invoke(on, "findEips", null, null).     assertNotNull(info).     assertTrue(info.size() > 150).     Properties prop = info.get("transform").     assertNotNull(prop).     assertEquals("transform", prop.get("name")).     assertEquals("org.apache.camel.model.TransformDefinition", prop.get("class")). }
false;public;0;17;;@Test public void testListEips() throws Exception {     // JMX tests dont work well on AIX CI servers (hangs them)     if (isPlatform("aix")) {         return.     }     MBeanServer mbeanServer = getMBeanServer().     ObjectName on = ObjectName.getInstance("org.apache.camel:context=19-camel-1,type=context,name=\"camel-1\"").     assertTrue("Should be registered", mbeanServer.isRegistered(on)).     TabularData data = (TabularData) mbeanServer.invoke(on, "listEips", null, null).     assertNotNull(data).     assertTrue(data.size() > 150). }
