# id;timestamp;commentText;codeText;commentWords;codeWords
PackageScanRouteBuilderFinder -> protected boolean shouldIgnoreBean(Class<?> type);1276607111;Lets ignore beans that are explicitly configured in the Spring XML files;protected boolean shouldIgnoreBean(Class<?> type) {_        Map beans = applicationContext.getBeansOfType(type, true, true)__        if (beans == null || beans.isEmpty()) {_            return false__        }_        return true__    };lets,ignore,beans,that,are,explicitly,configured,in,the,spring,xml,files;protected,boolean,should,ignore,bean,class,type,map,beans,application,context,get,beans,of,type,type,true,true,if,beans,null,beans,is,empty,return,false,return,true
PackageScanRouteBuilderFinder -> protected boolean shouldIgnoreBean(Class<?> type);1296495624;Lets ignore beans that are explicitly configured in the Spring XML files;protected boolean shouldIgnoreBean(Class<?> type) {_        Map beans = applicationContext.getBeansOfType(type, true, true)__        if (beans == null || beans.isEmpty()) {_            return false__        }_        return true__    };lets,ignore,beans,that,are,explicitly,configured,in,the,spring,xml,files;protected,boolean,should,ignore,bean,class,type,map,beans,application,context,get,beans,of,type,type,true,true,if,beans,null,beans,is,empty,return,false,return,true
PackageScanRouteBuilderFinder -> protected boolean shouldIgnoreBean(Class<?> type);1297968761;Lets ignore beans that are explicitly configured in the Spring XML files;protected boolean shouldIgnoreBean(Class<?> type) {_        Map beans = applicationContext.getBeansOfType(type, true, true)__        if (beans == null || beans.isEmpty()) {_            return false__        }_        return true__    };lets,ignore,beans,that,are,explicitly,configured,in,the,spring,xml,files;protected,boolean,should,ignore,bean,class,type,map,beans,application,context,get,beans,of,type,type,true,true,if,beans,null,beans,is,empty,return,false,return,true
PackageScanRouteBuilderFinder -> protected boolean shouldIgnoreBean(Class<?> type);1301257798;Lets ignore beans that are explicitly configured in the Spring XML files;protected boolean shouldIgnoreBean(Class<?> type) {_        Map beans = applicationContext.getBeansOfType(type, true, true)__        if (beans == null || beans.isEmpty()) {_            return false__        }_        return true__    };lets,ignore,beans,that,are,explicitly,configured,in,the,spring,xml,files;protected,boolean,should,ignore,bean,class,type,map,beans,application,context,get,beans,of,type,type,true,true,if,beans,null,beans,is,empty,return,false,return,true
PackageScanRouteBuilderFinder -> protected boolean shouldIgnoreBean(Class<?> type);1307685726;Lets ignore beans that are explicitly configured in the Spring XML files;protected boolean shouldIgnoreBean(Class<?> type) {_        Map beans = applicationContext.getBeansOfType(type, true, true)__        if (beans == null || beans.isEmpty()) {_            return false__        }_        return true__    };lets,ignore,beans,that,are,explicitly,configured,in,the,spring,xml,files;protected,boolean,should,ignore,bean,class,type,map,beans,application,context,get,beans,of,type,type,true,true,if,beans,null,beans,is,empty,return,false,return,true
PackageScanRouteBuilderFinder -> protected boolean shouldIgnoreBean(Class<?> type);1326206805;Lets ignore beans that are explicitly configured in the Spring XML files;protected boolean shouldIgnoreBean(Class<?> type) {_        Map beans = applicationContext.getBeansOfType(type, true, true)__        if (beans == null || beans.isEmpty()) {_            return false__        }_        return true__    };lets,ignore,beans,that,are,explicitly,configured,in,the,spring,xml,files;protected,boolean,should,ignore,bean,class,type,map,beans,application,context,get,beans,of,type,type,true,true,if,beans,null,beans,is,empty,return,false,return,true
PackageScanRouteBuilderFinder -> protected boolean shouldIgnoreBean(Class<?> type);1326392736;Lets ignore beans that are explicitly configured in the Spring XML files;protected boolean shouldIgnoreBean(Class<?> type) {_        Map<String, ?> beans = applicationContext.getBeansOfType(type, true, true)__        if (beans == null || beans.isEmpty()) {_            return false__        }_        return true__    };lets,ignore,beans,that,are,explicitly,configured,in,the,spring,xml,files;protected,boolean,should,ignore,bean,class,type,map,string,beans,application,context,get,beans,of,type,type,true,true,if,beans,null,beans,is,empty,return,false,return,true
PackageScanRouteBuilderFinder -> protected boolean shouldIgnoreBean(Class<?> type);1376549254;Lets ignore beans that are explicitly configured in the Spring XML files;protected boolean shouldIgnoreBean(Class<?> type) {_        Map<String, ?> beans = applicationContext.getBeansOfType(type, true, true)__        if (beans == null || beans.isEmpty()) {_            return false__        }_        return true__    };lets,ignore,beans,that,are,explicitly,configured,in,the,spring,xml,files;protected,boolean,should,ignore,bean,class,type,map,string,beans,application,context,get,beans,of,type,type,true,true,if,beans,null,beans,is,empty,return,false,return,true
PackageScanRouteBuilderFinder -> protected boolean shouldIgnoreBean(Class<?> type);1540108161;Lets ignore beans that are explicitly configured in the Spring XML files;protected boolean shouldIgnoreBean(Class<?> type) {_        Map<String, ?> beans = applicationContext.getBeansOfType(type, true, true)__        if (beans == null || beans.isEmpty()) {_            return false__        }_        return true__    };lets,ignore,beans,that,are,explicitly,configured,in,the,spring,xml,files;protected,boolean,should,ignore,bean,class,type,map,string,beans,application,context,get,beans,of,type,type,true,true,if,beans,null,beans,is,empty,return,false,return,true
PackageScanRouteBuilderFinder -> protected boolean isValidClass(Class type);1276607111;Returns true if the object is non-abstract and supports a zero argument constructor;protected boolean isValidClass(Class type) {_        if (!Modifier.isAbstract(type.getModifiers()) && !type.isInterface()) {_            return true__        }_        return false__    };returns,true,if,the,object,is,non,abstract,and,supports,a,zero,argument,constructor;protected,boolean,is,valid,class,class,type,if,modifier,is,abstract,type,get,modifiers,type,is,interface,return,true,return,false
PackageScanRouteBuilderFinder -> protected boolean isValidClass(Class type);1296495624;Returns true if the object is non-abstract and supports a zero argument constructor;protected boolean isValidClass(Class type) {_        if (!Modifier.isAbstract(type.getModifiers()) && !type.isInterface()) {_            return true__        }_        return false__    };returns,true,if,the,object,is,non,abstract,and,supports,a,zero,argument,constructor;protected,boolean,is,valid,class,class,type,if,modifier,is,abstract,type,get,modifiers,type,is,interface,return,true,return,false
PackageScanRouteBuilderFinder -> protected boolean isValidClass(Class type);1297968761;Returns true if the object is non-abstract and supports a zero argument constructor;protected boolean isValidClass(Class type) {_        if (!Modifier.isAbstract(type.getModifiers()) && !type.isInterface()) {_            return true__        }_        return false__    };returns,true,if,the,object,is,non,abstract,and,supports,a,zero,argument,constructor;protected,boolean,is,valid,class,class,type,if,modifier,is,abstract,type,get,modifiers,type,is,interface,return,true,return,false
PackageScanRouteBuilderFinder -> protected boolean isValidClass(Class type);1301257798;Returns true if the object is non-abstract and supports a zero argument constructor;protected boolean isValidClass(Class type) {_        if (!Modifier.isAbstract(type.getModifiers()) && !type.isInterface()) {_            return true__        }_        return false__    };returns,true,if,the,object,is,non,abstract,and,supports,a,zero,argument,constructor;protected,boolean,is,valid,class,class,type,if,modifier,is,abstract,type,get,modifiers,type,is,interface,return,true,return,false
PackageScanRouteBuilderFinder -> protected boolean isValidClass(Class type);1307685726;Returns true if the object is non-abstract and supports a zero argument constructor;protected boolean isValidClass(Class type) {_        if (!Modifier.isAbstract(type.getModifiers()) && !type.isInterface()) {_            return true__        }_        return false__    };returns,true,if,the,object,is,non,abstract,and,supports,a,zero,argument,constructor;protected,boolean,is,valid,class,class,type,if,modifier,is,abstract,type,get,modifiers,type,is,interface,return,true,return,false
PackageScanRouteBuilderFinder -> protected boolean isValidClass(Class type);1326206805;Returns <tt>true</tt>if the class is a public, non-abstract class;protected boolean isValidClass(Class type) {_        _        if (!Modifier.isPublic(type.getModifiers())) {_            return false__        }__        if (!Modifier.isAbstract(type.getModifiers()) && !type.isInterface()) {_            return true__        }_        return false__    };returns,tt,true,tt,if,the,class,is,a,public,non,abstract,class;protected,boolean,is,valid,class,class,type,if,modifier,is,public,type,get,modifiers,return,false,if,modifier,is,abstract,type,get,modifiers,type,is,interface,return,true,return,false
PackageScanRouteBuilderFinder -> public void appendBuilders(List<RoutesBuilder> list) throws IllegalAccessException, InstantiationException;1276607111;Appends all the {@link org.apache.camel.builder.RouteBuilder} instances that can be found on the classpath;public void appendBuilders(List<RoutesBuilder> list) throws IllegalAccessException, InstantiationException {_        Set<Class<?>> classes = resolver.findImplementations(RoutesBuilder.class, packages)__        for (Class aClass : classes) {_            if (LOG.isTraceEnabled()) {_                LOG.trace("Found RouteBuilder class: " + aClass)__            }__            _            if (shouldIgnoreBean(aClass)) {_                if (LOG.isDebugEnabled()) {_                    LOG.debug("Ignoring RouteBuilder class: " + aClass)__                }_                continue__            }__            if (!isValidClass(aClass)) {_                if (LOG.isDebugEnabled()) {_                    LOG.debug("Ignoring invalid RouteBuilder class: " + aClass)__                }_                continue__            }__            _            RoutesBuilder builder = instantiateBuilder(aClass)__            if (beanPostProcessor != null) {_                _                beanPostProcessor.postProcessBeforeInitialization(builder, builder.toString())__            }_            if (LOG.isDebugEnabled()) {_                LOG.debug("Adding instantiated RouteBuilder: " + builder)__            }_            list.add(builder)__        }_    };appends,all,the,link,org,apache,camel,builder,route,builder,instances,that,can,be,found,on,the,classpath;public,void,append,builders,list,routes,builder,list,throws,illegal,access,exception,instantiation,exception,set,class,classes,resolver,find,implementations,routes,builder,class,packages,for,class,a,class,classes,if,log,is,trace,enabled,log,trace,found,route,builder,class,a,class,if,should,ignore,bean,a,class,if,log,is,debug,enabled,log,debug,ignoring,route,builder,class,a,class,continue,if,is,valid,class,a,class,if,log,is,debug,enabled,log,debug,ignoring,invalid,route,builder,class,a,class,continue,routes,builder,builder,instantiate,builder,a,class,if,bean,post,processor,null,bean,post,processor,post,process,before,initialization,builder,builder,to,string,if,log,is,debug,enabled,log,debug,adding,instantiated,route,builder,builder,list,add,builder
PackageScanRouteBuilderFinder -> public void appendBuilders(List<RoutesBuilder> list) throws IllegalAccessException, InstantiationException;1296495624;Appends all the {@link org.apache.camel.builder.RouteBuilder} instances that can be found on the classpath;public void appendBuilders(List<RoutesBuilder> list) throws IllegalAccessException, InstantiationException {_        Set<Class<?>> classes = resolver.findImplementations(RoutesBuilder.class, packages)__        for (Class aClass : classes) {_            if (LOG.isTraceEnabled()) {_                LOG.trace("Found RouteBuilder class: " + aClass)__            }__            _            if (shouldIgnoreBean(aClass)) {_                if (LOG.isDebugEnabled()) {_                    LOG.debug("Ignoring RouteBuilder class: " + aClass)__                }_                continue__            }__            if (!isValidClass(aClass)) {_                if (LOG.isDebugEnabled()) {_                    LOG.debug("Ignoring invalid RouteBuilder class: " + aClass)__                }_                continue__            }__            _            RoutesBuilder builder = instantiateBuilder(aClass)__            if (beanPostProcessor != null) {_                _                beanPostProcessor.postProcessBeforeInitialization(builder, builder.toString())__            }_            if (LOG.isDebugEnabled()) {_                LOG.debug("Adding instantiated RouteBuilder: " + builder)__            }_            list.add(builder)__        }_    };appends,all,the,link,org,apache,camel,builder,route,builder,instances,that,can,be,found,on,the,classpath;public,void,append,builders,list,routes,builder,list,throws,illegal,access,exception,instantiation,exception,set,class,classes,resolver,find,implementations,routes,builder,class,packages,for,class,a,class,classes,if,log,is,trace,enabled,log,trace,found,route,builder,class,a,class,if,should,ignore,bean,a,class,if,log,is,debug,enabled,log,debug,ignoring,route,builder,class,a,class,continue,if,is,valid,class,a,class,if,log,is,debug,enabled,log,debug,ignoring,invalid,route,builder,class,a,class,continue,routes,builder,builder,instantiate,builder,a,class,if,bean,post,processor,null,bean,post,processor,post,process,before,initialization,builder,builder,to,string,if,log,is,debug,enabled,log,debug,adding,instantiated,route,builder,builder,list,add,builder
PackageScanRouteBuilderFinder -> public void appendBuilders(List<RoutesBuilder> list) throws IllegalAccessException, InstantiationException;1297968761;Appends all the {@link org.apache.camel.builder.RouteBuilder} instances that can be found on the classpath;public void appendBuilders(List<RoutesBuilder> list) throws IllegalAccessException, InstantiationException {_        Set<Class<?>> classes = resolver.findImplementations(RoutesBuilder.class, packages)__        for (Class aClass : classes) {_            if (LOG.isTraceEnabled()) {_                LOG.trace("Found RouteBuilder class: " + aClass)__            }__            _            if (shouldIgnoreBean(aClass)) {_                if (LOG.isDebugEnabled()) {_                    LOG.debug("Ignoring RouteBuilder class: " + aClass)__                }_                continue__            }__            if (!isValidClass(aClass)) {_                if (LOG.isDebugEnabled()) {_                    LOG.debug("Ignoring invalid RouteBuilder class: " + aClass)__                }_                continue__            }__            _            RoutesBuilder builder = instantiateBuilder(aClass)__            if (beanPostProcessor != null) {_                _                beanPostProcessor.postProcessBeforeInitialization(builder, builder.toString())__            }_            if (LOG.isDebugEnabled()) {_                LOG.debug("Adding instantiated RouteBuilder: " + builder)__            }_            list.add(builder)__        }_    };appends,all,the,link,org,apache,camel,builder,route,builder,instances,that,can,be,found,on,the,classpath;public,void,append,builders,list,routes,builder,list,throws,illegal,access,exception,instantiation,exception,set,class,classes,resolver,find,implementations,routes,builder,class,packages,for,class,a,class,classes,if,log,is,trace,enabled,log,trace,found,route,builder,class,a,class,if,should,ignore,bean,a,class,if,log,is,debug,enabled,log,debug,ignoring,route,builder,class,a,class,continue,if,is,valid,class,a,class,if,log,is,debug,enabled,log,debug,ignoring,invalid,route,builder,class,a,class,continue,routes,builder,builder,instantiate,builder,a,class,if,bean,post,processor,null,bean,post,processor,post,process,before,initialization,builder,builder,to,string,if,log,is,debug,enabled,log,debug,adding,instantiated,route,builder,builder,list,add,builder
PackageScanRouteBuilderFinder -> public void appendBuilders(List<RoutesBuilder> list) throws IllegalAccessException, InstantiationException;1301257798;Appends all the {@link org.apache.camel.builder.RouteBuilder} instances that can be found on the classpath;public void appendBuilders(List<RoutesBuilder> list) throws IllegalAccessException, InstantiationException {_        Set<Class<?>> classes = resolver.findImplementations(RoutesBuilder.class, packages)__        for (Class aClass : classes) {_            LOG.trace("Found RouteBuilder class: {}", aClass)___            _            if (shouldIgnoreBean(aClass)) {_                if (LOG.isDebugEnabled()) {_                    LOG.debug("Ignoring RouteBuilder class: " + aClass)__                }_                continue__            }__            if (!isValidClass(aClass)) {_                if (LOG.isDebugEnabled()) {_                    LOG.debug("Ignoring invalid RouteBuilder class: " + aClass)__                }_                continue__            }__            _            RoutesBuilder builder = instantiateBuilder(aClass)__            if (beanPostProcessor != null) {_                _                beanPostProcessor.postProcessBeforeInitialization(builder, builder.toString())__            }_            if (LOG.isDebugEnabled()) {_                LOG.debug("Adding instantiated RouteBuilder: " + builder)__            }_            list.add(builder)__        }_    };appends,all,the,link,org,apache,camel,builder,route,builder,instances,that,can,be,found,on,the,classpath;public,void,append,builders,list,routes,builder,list,throws,illegal,access,exception,instantiation,exception,set,class,classes,resolver,find,implementations,routes,builder,class,packages,for,class,a,class,classes,log,trace,found,route,builder,class,a,class,if,should,ignore,bean,a,class,if,log,is,debug,enabled,log,debug,ignoring,route,builder,class,a,class,continue,if,is,valid,class,a,class,if,log,is,debug,enabled,log,debug,ignoring,invalid,route,builder,class,a,class,continue,routes,builder,builder,instantiate,builder,a,class,if,bean,post,processor,null,bean,post,processor,post,process,before,initialization,builder,builder,to,string,if,log,is,debug,enabled,log,debug,adding,instantiated,route,builder,builder,list,add,builder
PackageScanRouteBuilderFinder -> public void appendBuilders(List<RoutesBuilder> list) throws IllegalAccessException, InstantiationException;1307685726;Appends all the {@link org.apache.camel.builder.RouteBuilder} instances that can be found on the classpath;public void appendBuilders(List<RoutesBuilder> list) throws IllegalAccessException, InstantiationException {_        Set<Class<?>> classes = resolver.findImplementations(RoutesBuilder.class, packages)__        for (Class aClass : classes) {_            LOG.trace("Found RouteBuilder class: {}", aClass)___            _            if (shouldIgnoreBean(aClass)) {_                LOG.debug("Ignoring RouteBuilder class: {}", aClass)__                continue__            }__            if (!isValidClass(aClass)) {_                LOG.debug("Ignoring invalid RouteBuilder class: {}", aClass)__                continue__            }__            _            RoutesBuilder builder = instantiateBuilder(aClass)__            if (beanPostProcessor != null) {_                _                beanPostProcessor.postProcessBeforeInitialization(builder, builder.toString())__            }_            LOG.debug("Adding instantiated RouteBuilder: {}", builder)__            list.add(builder)__        }_    };appends,all,the,link,org,apache,camel,builder,route,builder,instances,that,can,be,found,on,the,classpath;public,void,append,builders,list,routes,builder,list,throws,illegal,access,exception,instantiation,exception,set,class,classes,resolver,find,implementations,routes,builder,class,packages,for,class,a,class,classes,log,trace,found,route,builder,class,a,class,if,should,ignore,bean,a,class,log,debug,ignoring,route,builder,class,a,class,continue,if,is,valid,class,a,class,log,debug,ignoring,invalid,route,builder,class,a,class,continue,routes,builder,builder,instantiate,builder,a,class,if,bean,post,processor,null,bean,post,processor,post,process,before,initialization,builder,builder,to,string,log,debug,adding,instantiated,route,builder,builder,list,add,builder
PackageScanRouteBuilderFinder -> public void appendBuilders(List<RoutesBuilder> list) throws IllegalAccessException, InstantiationException;1326206805;Appends all the {@link org.apache.camel.builder.RouteBuilder} instances that can be found on the classpath;public void appendBuilders(List<RoutesBuilder> list) throws IllegalAccessException, InstantiationException {_        Set<Class<?>> classes = resolver.findImplementations(RoutesBuilder.class, packages)__        for (Class aClass : classes) {_            LOG.trace("Found RouteBuilder class: {}", aClass)___            _            if (shouldIgnoreBean(aClass)) {_                LOG.debug("Ignoring RouteBuilder class: {}", aClass)__                continue__            }__            if (!isValidClass(aClass)) {_                LOG.debug("Ignoring invalid RouteBuilder class: {}", aClass)__                continue__            }__            _            RoutesBuilder builder = instantiateBuilder(aClass)__            if (beanPostProcessor != null) {_                _                beanPostProcessor.postProcessBeforeInitialization(builder, builder.toString())__            }_            LOG.debug("Adding instantiated RouteBuilder: {}", builder)__            list.add(builder)__        }_    };appends,all,the,link,org,apache,camel,builder,route,builder,instances,that,can,be,found,on,the,classpath;public,void,append,builders,list,routes,builder,list,throws,illegal,access,exception,instantiation,exception,set,class,classes,resolver,find,implementations,routes,builder,class,packages,for,class,a,class,classes,log,trace,found,route,builder,class,a,class,if,should,ignore,bean,a,class,log,debug,ignoring,route,builder,class,a,class,continue,if,is,valid,class,a,class,log,debug,ignoring,invalid,route,builder,class,a,class,continue,routes,builder,builder,instantiate,builder,a,class,if,bean,post,processor,null,bean,post,processor,post,process,before,initialization,builder,builder,to,string,log,debug,adding,instantiated,route,builder,builder,list,add,builder
PackageScanRouteBuilderFinder -> public void appendBuilders(List<RoutesBuilder> list) throws IllegalAccessException, InstantiationException;1326392736;Appends all the {@link org.apache.camel.builder.RouteBuilder} instances that can be found on the classpath;public void appendBuilders(List<RoutesBuilder> list) throws IllegalAccessException, InstantiationException {_        Set<Class<?>> classes = resolver.findImplementations(RoutesBuilder.class, packages)__        for (Class<?> aClass : classes) {_            LOG.trace("Found RouteBuilder class: {}", aClass)___            _            if (shouldIgnoreBean(aClass)) {_                LOG.debug("Ignoring RouteBuilder class: {}", aClass)__                continue__            }__            if (!isValidClass(aClass)) {_                LOG.debug("Ignoring invalid RouteBuilder class: {}", aClass)__                continue__            }__            _            @SuppressWarnings("unchecked")_            RoutesBuilder builder = instantiateBuilder((Class<? extends RoutesBuilder>) aClass)__            if (beanPostProcessor != null) {_                _                beanPostProcessor.postProcessBeforeInitialization(builder, builder.toString())__            }_            LOG.debug("Adding instantiated RouteBuilder: {}", builder)__            list.add(builder)__        }_    };appends,all,the,link,org,apache,camel,builder,route,builder,instances,that,can,be,found,on,the,classpath;public,void,append,builders,list,routes,builder,list,throws,illegal,access,exception,instantiation,exception,set,class,classes,resolver,find,implementations,routes,builder,class,packages,for,class,a,class,classes,log,trace,found,route,builder,class,a,class,if,should,ignore,bean,a,class,log,debug,ignoring,route,builder,class,a,class,continue,if,is,valid,class,a,class,log,debug,ignoring,invalid,route,builder,class,a,class,continue,suppress,warnings,unchecked,routes,builder,builder,instantiate,builder,class,extends,routes,builder,a,class,if,bean,post,processor,null,bean,post,processor,post,process,before,initialization,builder,builder,to,string,log,debug,adding,instantiated,route,builder,builder,list,add,builder
PackageScanRouteBuilderFinder -> public void appendBuilders(List<RoutesBuilder> list) throws IllegalAccessException, InstantiationException;1376549254;Appends all the {@link org.apache.camel.builder.RouteBuilder} instances that can be found on the classpath;public void appendBuilders(List<RoutesBuilder> list) throws IllegalAccessException, InstantiationException {_        Set<Class<?>> classes = resolver.findImplementations(RoutesBuilder.class, packages)__        for (Class<?> aClass : classes) {_            LOG.trace("Found RouteBuilder class: {}", aClass)___            _            if (shouldIgnoreBean(aClass)) {_                LOG.debug("Ignoring RouteBuilder class: {}", aClass)__                continue__            }__            if (!isValidClass(aClass)) {_                LOG.debug("Ignoring invalid RouteBuilder class: {}", aClass)__                continue__            }__            _            @SuppressWarnings("unchecked")_            RoutesBuilder builder = instantiateBuilder((Class<? extends RoutesBuilder>) aClass)__            if (beanPostProcessor != null) {_                _                beanPostProcessor.postProcessBeforeInitialization(builder, builder.toString())__            }_            LOG.debug("Adding instantiated RouteBuilder: {}", builder)__            list.add(builder)__        }_    };appends,all,the,link,org,apache,camel,builder,route,builder,instances,that,can,be,found,on,the,classpath;public,void,append,builders,list,routes,builder,list,throws,illegal,access,exception,instantiation,exception,set,class,classes,resolver,find,implementations,routes,builder,class,packages,for,class,a,class,classes,log,trace,found,route,builder,class,a,class,if,should,ignore,bean,a,class,log,debug,ignoring,route,builder,class,a,class,continue,if,is,valid,class,a,class,log,debug,ignoring,invalid,route,builder,class,a,class,continue,suppress,warnings,unchecked,routes,builder,builder,instantiate,builder,class,extends,routes,builder,a,class,if,bean,post,processor,null,bean,post,processor,post,process,before,initialization,builder,builder,to,string,log,debug,adding,instantiated,route,builder,builder,list,add,builder
PackageScanRouteBuilderFinder -> public void appendBuilders(List<RoutesBuilder> list) throws IllegalAccessException, InstantiationException;1540108161;Appends all the {@link org.apache.camel.builder.RouteBuilder} instances that can be found on the classpath;public void appendBuilders(List<RoutesBuilder> list) throws IllegalAccessException, InstantiationException {_        Set<Class<?>> classes = resolver.findImplementations(RoutesBuilder.class, packages)__        for (Class<?> aClass : classes) {_            LOG.trace("Found RouteBuilder class: {}", aClass)___            _            if (shouldIgnoreBean(aClass)) {_                LOG.debug("Ignoring RouteBuilder class: {}", aClass)__                continue__            }__            if (!isValidClass(aClass)) {_                LOG.debug("Ignoring invalid RouteBuilder class: {}", aClass)__                continue__            }__            _            @SuppressWarnings("unchecked")_            RoutesBuilder builder = instantiateBuilder((Class<? extends RoutesBuilder>) aClass)__            if (beanPostProcessor != null) {_                _                beanPostProcessor.postProcessBeforeInitialization(builder, builder.toString())__            }_            LOG.debug("Adding instantiated RouteBuilder: {}", builder)__            list.add(builder)__        }_    };appends,all,the,link,org,apache,camel,builder,route,builder,instances,that,can,be,found,on,the,classpath;public,void,append,builders,list,routes,builder,list,throws,illegal,access,exception,instantiation,exception,set,class,classes,resolver,find,implementations,routes,builder,class,packages,for,class,a,class,classes,log,trace,found,route,builder,class,a,class,if,should,ignore,bean,a,class,log,debug,ignoring,route,builder,class,a,class,continue,if,is,valid,class,a,class,log,debug,ignoring,invalid,route,builder,class,a,class,continue,suppress,warnings,unchecked,routes,builder,builder,instantiate,builder,class,extends,routes,builder,a,class,if,bean,post,processor,null,bean,post,processor,post,process,before,initialization,builder,builder,to,string,log,debug,adding,instantiated,route,builder,builder,list,add,builder
PackageScanRouteBuilderFinder -> protected boolean isValidClass(Class<?> type);1326392736;Returns <tt>true</tt>if the class is a public, non-abstract class;protected boolean isValidClass(Class<?> type) {_        _        if (!Modifier.isPublic(type.getModifiers())) {_            return false__        }__        if (!Modifier.isAbstract(type.getModifiers()) && !type.isInterface()) {_            return true__        }_        return false__    };returns,tt,true,tt,if,the,class,is,a,public,non,abstract,class;protected,boolean,is,valid,class,class,type,if,modifier,is,public,type,get,modifiers,return,false,if,modifier,is,abstract,type,get,modifiers,type,is,interface,return,true,return,false
PackageScanRouteBuilderFinder -> protected boolean isValidClass(Class<?> type);1376549254;Returns <tt>true</tt>if the class is a public, non-abstract class;protected boolean isValidClass(Class<?> type) {_        _        if (!Modifier.isPublic(type.getModifiers())) {_            return false__        }__        if (!Modifier.isAbstract(type.getModifiers()) && !type.isInterface()) {_            return true__        }_        return false__    };returns,tt,true,tt,if,the,class,is,a,public,non,abstract,class;protected,boolean,is,valid,class,class,type,if,modifier,is,public,type,get,modifiers,return,false,if,modifier,is,abstract,type,get,modifiers,type,is,interface,return,true,return,false
PackageScanRouteBuilderFinder -> protected boolean isValidClass(Class<?> type);1540108161;Returns <tt>true</tt>if the class is a public, non-abstract class;protected boolean isValidClass(Class<?> type) {_        _        if (!Modifier.isPublic(type.getModifiers())) {_            return false__        }__        if (!Modifier.isAbstract(type.getModifiers()) && !type.isInterface()) {_            return true__        }_        return false__    };returns,tt,true,tt,if,the,class,is,a,public,non,abstract,class;protected,boolean,is,valid,class,class,type,if,modifier,is,public,type,get,modifiers,return,false,if,modifier,is,abstract,type,get,modifiers,type,is,interface,return,true,return,false
