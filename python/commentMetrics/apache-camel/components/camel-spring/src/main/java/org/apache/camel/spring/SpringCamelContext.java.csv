# id;timestamp;commentText;codeText;commentWords;codeWords
SpringCamelContext -> public void setShutdownEager(boolean shutdownEager);1395076208;@see #isShutdownEager();public void setShutdownEager(boolean shutdownEager) {_        this.shutdownEager = shutdownEager__    };see,is,shutdown,eager;public,void,set,shutdown,eager,boolean,shutdown,eager,this,shutdown,eager,shutdown,eager
SpringCamelContext -> public void setShutdownEager(boolean shutdownEager);1423922931;@see #isShutdownEager();public void setShutdownEager(boolean shutdownEager) {_        this.shutdownEager = shutdownEager__    };see,is,shutdown,eager;public,void,set,shutdown,eager,boolean,shutdown,eager,this,shutdown,eager,shutdown,eager
SpringCamelContext -> public void setShutdownEager(boolean shutdownEager);1441620354;@see #isShutdownEager();public void setShutdownEager(boolean shutdownEager) {_        this.shutdownEager = shutdownEager__    };see,is,shutdown,eager;public,void,set,shutdown,eager,boolean,shutdown,eager,this,shutdown,eager,shutdown,eager
SpringCamelContext -> public void setShutdownEager(boolean shutdownEager);1470902851;@see #isShutdownEager();public void setShutdownEager(boolean shutdownEager) {_        this.shutdownEager = shutdownEager__    };see,is,shutdown,eager;public,void,set,shutdown,eager,boolean,shutdown,eager,this,shutdown,eager,shutdown,eager
SpringCamelContext -> public void setShutdownEager(boolean shutdownEager);1495703392;@see #isShutdownEager();public void setShutdownEager(boolean shutdownEager) {_        this.shutdownEager = shutdownEager__    };see,is,shutdown,eager;public,void,set,shutdown,eager,boolean,shutdown,eager,this,shutdown,eager,shutdown,eager
SpringCamelContext -> public void setShutdownEager(boolean shutdownEager);1496001378;@see #isShutdownEager();public void setShutdownEager(boolean shutdownEager) {_        this.shutdownEager = shutdownEager__    };see,is,shutdown,eager;public,void,set,shutdown,eager,boolean,shutdown,eager,this,shutdown,eager,shutdown,eager
SpringCamelContext -> public void setShutdownEager(boolean shutdownEager);1506415037;@see #isShutdownEager();public void setShutdownEager(boolean shutdownEager) {_        this.shutdownEager = shutdownEager__    };see,is,shutdown,eager;public,void,set,shutdown,eager,boolean,shutdown,eager,this,shutdown,eager,shutdown,eager
SpringCamelContext -> public void setShutdownEager(boolean shutdownEager);1506430363;@see #isShutdownEager();public void setShutdownEager(boolean shutdownEager) {_        this.shutdownEager = shutdownEager__    };see,is,shutdown,eager;public,void,set,shutdown,eager,boolean,shutdown,eager,this,shutdown,eager,shutdown,eager
SpringCamelContext -> public void setShutdownEager(boolean shutdownEager);1540108158;@see #isShutdownEager();public void setShutdownEager(boolean shutdownEager) {_        this.shutdownEager = shutdownEager__    };see,is,shutdown,eager;public,void,set,shutdown,eager,boolean,shutdown,eager,this,shutdown,eager,shutdown,eager
SpringCamelContext -> public void setShutdownEager(boolean shutdownEager);1540108159;@see #isShutdownEager();public void setShutdownEager(boolean shutdownEager) {_        this.shutdownEager = shutdownEager__    };see,is,shutdown,eager;public,void,set,shutdown,eager,boolean,shutdown,eager,this,shutdown,eager,shutdown,eager
SpringCamelContext -> public void setShutdownEager(boolean shutdownEager);1540108161;@see #isShutdownEager();public void setShutdownEager(boolean shutdownEager) {_        this.shutdownEager = shutdownEager__    };see,is,shutdown,eager;public,void,set,shutdown,eager,boolean,shutdown,eager,this,shutdown,eager,shutdown,eager
SpringCamelContext -> public void setShutdownEager(boolean shutdownEager);1540108163;@see #isShutdownEager();public void setShutdownEager(boolean shutdownEager) {_        this.shutdownEager = shutdownEager__    };see,is,shutdown,eager;public,void,set,shutdown,eager,boolean,shutdown,eager,this,shutdown,eager,shutdown,eager
SpringCamelContext -> public void setShutdownEager(boolean shutdownEager);1540108165;@see #isShutdownEager();public void setShutdownEager(boolean shutdownEager) {_        this.shutdownEager = shutdownEager__    };see,is,shutdown,eager;public,void,set,shutdown,eager,boolean,shutdown,eager,this,shutdown,eager,shutdown,eager
SpringCamelContext -> public void setShutdownEager(boolean shutdownEager);1540472504;@see #isShutdownEager();public void setShutdownEager(boolean shutdownEager) {_        this.shutdownEager = shutdownEager__    };see,is,shutdown,eager;public,void,set,shutdown,eager,boolean,shutdown,eager,this,shutdown,eager,shutdown,eager
SpringCamelContext -> public void setShutdownEager(boolean shutdownEager);1541670803;@see #isShutdownEager();public void setShutdownEager(boolean shutdownEager) {_        this.shutdownEager = shutdownEager__    };see,is,shutdown,eager;public,void,set,shutdown,eager,boolean,shutdown,eager,this,shutdown,eager,shutdown,eager
SpringCamelContext -> public void setShutdownEager(boolean shutdownEager);1549004217;@see #isShutdownEager();public void setShutdownEager(boolean shutdownEager) {_        this.shutdownEager = shutdownEager__    };see,is,shutdown,eager;public,void,set,shutdown,eager,boolean,shutdown,eager,this,shutdown,eager,shutdown,eager
SpringCamelContext -> public void setShutdownEager(boolean shutdownEager);1551167777;@see #isShutdownEager();public void setShutdownEager(boolean shutdownEager) {_        this.shutdownEager = shutdownEager__    };see,is,shutdown,eager;public,void,set,shutdown,eager,boolean,shutdown,eager,this,shutdown,eager,shutdown,eager
SpringCamelContext -> @Deprecated     public static SpringCamelContext springCamelContext(String configLocations) throws Exception;1441620354;@deprecated its better to create and boot Spring the standard Spring way and to get hold of CamelContext_using the Spring API.;@Deprecated_    public static SpringCamelContext springCamelContext(String configLocations) throws Exception {_        return springCamelContext(new ClassPathXmlApplicationContext(configLocations))__    };deprecated,its,better,to,create,and,boot,spring,the,standard,spring,way,and,to,get,hold,of,camel,context,using,the,spring,api;deprecated,public,static,spring,camel,context,spring,camel,context,string,config,locations,throws,exception,return,spring,camel,context,new,class,path,xml,application,context,config,locations
SpringCamelContext -> @Deprecated     public static SpringCamelContext springCamelContext(String configLocations) throws Exception;1470902851;@deprecated its better to create and boot Spring the standard Spring way and to get hold of CamelContext_using the Spring API.;@Deprecated_    public static SpringCamelContext springCamelContext(String configLocations) throws Exception {_        return springCamelContext(new ClassPathXmlApplicationContext(configLocations))__    };deprecated,its,better,to,create,and,boot,spring,the,standard,spring,way,and,to,get,hold,of,camel,context,using,the,spring,api;deprecated,public,static,spring,camel,context,spring,camel,context,string,config,locations,throws,exception,return,spring,camel,context,new,class,path,xml,application,context,config,locations
SpringCamelContext -> @Deprecated     public static SpringCamelContext springCamelContext(String configLocations) throws Exception;1495703392;@deprecated its better to create and boot Spring the standard Spring way and to get hold of CamelContext_using the Spring API.;@Deprecated_    public static SpringCamelContext springCamelContext(String configLocations) throws Exception {_        return springCamelContext(new ClassPathXmlApplicationContext(configLocations))__    };deprecated,its,better,to,create,and,boot,spring,the,standard,spring,way,and,to,get,hold,of,camel,context,using,the,spring,api;deprecated,public,static,spring,camel,context,spring,camel,context,string,config,locations,throws,exception,return,spring,camel,context,new,class,path,xml,application,context,config,locations
SpringCamelContext -> @Deprecated     public static SpringCamelContext springCamelContext(String configLocations) throws Exception;1496001378;@deprecated its better to create and boot Spring the standard Spring way and to get hold of CamelContext_using the Spring API.;@Deprecated_    public static SpringCamelContext springCamelContext(String configLocations) throws Exception {_        return springCamelContext(new ClassPathXmlApplicationContext(configLocations))__    };deprecated,its,better,to,create,and,boot,spring,the,standard,spring,way,and,to,get,hold,of,camel,context,using,the,spring,api;deprecated,public,static,spring,camel,context,spring,camel,context,string,config,locations,throws,exception,return,spring,camel,context,new,class,path,xml,application,context,config,locations
SpringCamelContext -> @Deprecated     public static SpringCamelContext springCamelContext(String configLocations) throws Exception;1506415037;@deprecated its better to create and boot Spring the standard Spring way and to get hold of CamelContext_using the Spring API.;@Deprecated_    public static SpringCamelContext springCamelContext(String configLocations) throws Exception {_        return springCamelContext(new ClassPathXmlApplicationContext(configLocations))__    };deprecated,its,better,to,create,and,boot,spring,the,standard,spring,way,and,to,get,hold,of,camel,context,using,the,spring,api;deprecated,public,static,spring,camel,context,spring,camel,context,string,config,locations,throws,exception,return,spring,camel,context,new,class,path,xml,application,context,config,locations
SpringCamelContext -> @Deprecated     public static SpringCamelContext springCamelContext(String configLocations) throws Exception;1506430363;@deprecated its better to create and boot Spring the standard Spring way and to get hold of CamelContext_using the Spring API.;@Deprecated_    public static SpringCamelContext springCamelContext(String configLocations) throws Exception {_        return springCamelContext(new ClassPathXmlApplicationContext(configLocations))__    };deprecated,its,better,to,create,and,boot,spring,the,standard,spring,way,and,to,get,hold,of,camel,context,using,the,spring,api;deprecated,public,static,spring,camel,context,spring,camel,context,string,config,locations,throws,exception,return,spring,camel,context,new,class,path,xml,application,context,config,locations
SpringCamelContext -> @Deprecated     public static SpringCamelContext springCamelContext(String configLocations) throws Exception;1540108158;@deprecated its better to create and boot Spring the standard Spring way and to get hold of CamelContext_using the Spring API.;@Deprecated_    public static SpringCamelContext springCamelContext(String configLocations) throws Exception {_        return springCamelContext(new ClassPathXmlApplicationContext(configLocations))__    };deprecated,its,better,to,create,and,boot,spring,the,standard,spring,way,and,to,get,hold,of,camel,context,using,the,spring,api;deprecated,public,static,spring,camel,context,spring,camel,context,string,config,locations,throws,exception,return,spring,camel,context,new,class,path,xml,application,context,config,locations
SpringCamelContext -> @Deprecated     public static SpringCamelContext springCamelContext(ApplicationContext applicationContext) throws Exception;1441620354;@deprecated its better to create and boot Spring the standard Spring way and to get hold of CamelContext_using the Spring API.;@Deprecated_    public static SpringCamelContext springCamelContext(ApplicationContext applicationContext) throws Exception {_        return springCamelContext(applicationContext, true)__    };deprecated,its,better,to,create,and,boot,spring,the,standard,spring,way,and,to,get,hold,of,camel,context,using,the,spring,api;deprecated,public,static,spring,camel,context,spring,camel,context,application,context,application,context,throws,exception,return,spring,camel,context,application,context,true
SpringCamelContext -> @Deprecated     public static SpringCamelContext springCamelContext(ApplicationContext applicationContext) throws Exception;1470902851;@deprecated its better to create and boot Spring the standard Spring way and to get hold of CamelContext_using the Spring API.;@Deprecated_    public static SpringCamelContext springCamelContext(ApplicationContext applicationContext) throws Exception {_        return springCamelContext(applicationContext, true)__    };deprecated,its,better,to,create,and,boot,spring,the,standard,spring,way,and,to,get,hold,of,camel,context,using,the,spring,api;deprecated,public,static,spring,camel,context,spring,camel,context,application,context,application,context,throws,exception,return,spring,camel,context,application,context,true
SpringCamelContext -> @Deprecated     public static SpringCamelContext springCamelContext(ApplicationContext applicationContext) throws Exception;1495703392;@deprecated its better to create and boot Spring the standard Spring way and to get hold of CamelContext_using the Spring API.;@Deprecated_    public static SpringCamelContext springCamelContext(ApplicationContext applicationContext) throws Exception {_        return springCamelContext(applicationContext, true)__    };deprecated,its,better,to,create,and,boot,spring,the,standard,spring,way,and,to,get,hold,of,camel,context,using,the,spring,api;deprecated,public,static,spring,camel,context,spring,camel,context,application,context,application,context,throws,exception,return,spring,camel,context,application,context,true
SpringCamelContext -> @Deprecated     public static SpringCamelContext springCamelContext(ApplicationContext applicationContext) throws Exception;1496001378;@deprecated its better to create and boot Spring the standard Spring way and to get hold of CamelContext_using the Spring API.;@Deprecated_    public static SpringCamelContext springCamelContext(ApplicationContext applicationContext) throws Exception {_        return springCamelContext(applicationContext, true)__    };deprecated,its,better,to,create,and,boot,spring,the,standard,spring,way,and,to,get,hold,of,camel,context,using,the,spring,api;deprecated,public,static,spring,camel,context,spring,camel,context,application,context,application,context,throws,exception,return,spring,camel,context,application,context,true
SpringCamelContext -> @Deprecated     public static SpringCamelContext springCamelContext(ApplicationContext applicationContext) throws Exception;1506415037;@deprecated its better to create and boot Spring the standard Spring way and to get hold of CamelContext_using the Spring API.;@Deprecated_    public static SpringCamelContext springCamelContext(ApplicationContext applicationContext) throws Exception {_        return springCamelContext(applicationContext, true)__    };deprecated,its,better,to,create,and,boot,spring,the,standard,spring,way,and,to,get,hold,of,camel,context,using,the,spring,api;deprecated,public,static,spring,camel,context,spring,camel,context,application,context,application,context,throws,exception,return,spring,camel,context,application,context,true
SpringCamelContext -> @Deprecated     public static SpringCamelContext springCamelContext(ApplicationContext applicationContext) throws Exception;1506430363;@deprecated its better to create and boot Spring the standard Spring way and to get hold of CamelContext_using the Spring API.;@Deprecated_    public static SpringCamelContext springCamelContext(ApplicationContext applicationContext) throws Exception {_        return springCamelContext(applicationContext, true)__    };deprecated,its,better,to,create,and,boot,spring,the,standard,spring,way,and,to,get,hold,of,camel,context,using,the,spring,api;deprecated,public,static,spring,camel,context,spring,camel,context,application,context,application,context,throws,exception,return,spring,camel,context,application,context,true
SpringCamelContext -> @Deprecated     public static SpringCamelContext springCamelContext(ApplicationContext applicationContext) throws Exception;1540108158;@deprecated its better to create and boot Spring the standard Spring way and to get hold of CamelContext_using the Spring API.;@Deprecated_    public static SpringCamelContext springCamelContext(ApplicationContext applicationContext) throws Exception {_        return springCamelContext(applicationContext, true)__    };deprecated,its,better,to,create,and,boot,spring,the,standard,spring,way,and,to,get,hold,of,camel,context,using,the,spring,api;deprecated,public,static,spring,camel,context,spring,camel,context,application,context,application,context,throws,exception,return,spring,camel,context,application,context,true
SpringCamelContext -> public boolean isShutdownEager();1395076208;Whether to shutdown this {@link org.apache.camel.spring.SpringCamelContext} eager (first)_when Spring {@link org.springframework.context.ApplicationContext} is being stopped._<p/>_<b>Important:</b> This option is default <tt>true</tt> which ensures we shutdown Camel_before other beans. Setting this to <tt>false</tt> restores old behavior in earlier_Camel releases, which can be used for special cases to behave as before.__@return <tt>true</tt> to shutdown eager (first), <tt>false</tt> to shutdown last;public boolean isShutdownEager() {_        return shutdownEager__    };whether,to,shutdown,this,link,org,apache,camel,spring,spring,camel,context,eager,first,when,spring,link,org,springframework,context,application,context,is,being,stopped,p,b,important,b,this,option,is,default,tt,true,tt,which,ensures,we,shutdown,camel,before,other,beans,setting,this,to,tt,false,tt,restores,old,behavior,in,earlier,camel,releases,which,can,be,used,for,special,cases,to,behave,as,before,return,tt,true,tt,to,shutdown,eager,first,tt,false,tt,to,shutdown,last;public,boolean,is,shutdown,eager,return,shutdown,eager
SpringCamelContext -> public boolean isShutdownEager();1423922931;Whether to shutdown this {@link org.apache.camel.spring.SpringCamelContext} eager (first)_when Spring {@link org.springframework.context.ApplicationContext} is being stopped._<p/>_<b>Important:</b> This option is default <tt>true</tt> which ensures we shutdown Camel_before other beans. Setting this to <tt>false</tt> restores old behavior in earlier_Camel releases, which can be used for special cases to behave as before.__@return <tt>true</tt> to shutdown eager (first), <tt>false</tt> to shutdown last;public boolean isShutdownEager() {_        return shutdownEager__    };whether,to,shutdown,this,link,org,apache,camel,spring,spring,camel,context,eager,first,when,spring,link,org,springframework,context,application,context,is,being,stopped,p,b,important,b,this,option,is,default,tt,true,tt,which,ensures,we,shutdown,camel,before,other,beans,setting,this,to,tt,false,tt,restores,old,behavior,in,earlier,camel,releases,which,can,be,used,for,special,cases,to,behave,as,before,return,tt,true,tt,to,shutdown,eager,first,tt,false,tt,to,shutdown,last;public,boolean,is,shutdown,eager,return,shutdown,eager
SpringCamelContext -> public boolean isShutdownEager();1441620354;Whether to shutdown this {@link org.apache.camel.spring.SpringCamelContext} eager (first)_when Spring {@link org.springframework.context.ApplicationContext} is being stopped._<p/>_<b>Important:</b> This option is default <tt>true</tt> which ensures we shutdown Camel_before other beans. Setting this to <tt>false</tt> restores old behavior in earlier_Camel releases, which can be used for special cases to behave as before.__@return <tt>true</tt> to shutdown eager (first), <tt>false</tt> to shutdown last;public boolean isShutdownEager() {_        return shutdownEager__    };whether,to,shutdown,this,link,org,apache,camel,spring,spring,camel,context,eager,first,when,spring,link,org,springframework,context,application,context,is,being,stopped,p,b,important,b,this,option,is,default,tt,true,tt,which,ensures,we,shutdown,camel,before,other,beans,setting,this,to,tt,false,tt,restores,old,behavior,in,earlier,camel,releases,which,can,be,used,for,special,cases,to,behave,as,before,return,tt,true,tt,to,shutdown,eager,first,tt,false,tt,to,shutdown,last;public,boolean,is,shutdown,eager,return,shutdown,eager
SpringCamelContext -> public boolean isShutdownEager();1470902851;Whether to shutdown this {@link org.apache.camel.spring.SpringCamelContext} eager (first)_when Spring {@link org.springframework.context.ApplicationContext} is being stopped._<p/>_<b>Important:</b> This option is default <tt>true</tt> which ensures we shutdown Camel_before other beans. Setting this to <tt>false</tt> restores old behavior in earlier_Camel releases, which can be used for special cases to behave as before.__@return <tt>true</tt> to shutdown eager (first), <tt>false</tt> to shutdown last;public boolean isShutdownEager() {_        return shutdownEager__    };whether,to,shutdown,this,link,org,apache,camel,spring,spring,camel,context,eager,first,when,spring,link,org,springframework,context,application,context,is,being,stopped,p,b,important,b,this,option,is,default,tt,true,tt,which,ensures,we,shutdown,camel,before,other,beans,setting,this,to,tt,false,tt,restores,old,behavior,in,earlier,camel,releases,which,can,be,used,for,special,cases,to,behave,as,before,return,tt,true,tt,to,shutdown,eager,first,tt,false,tt,to,shutdown,last;public,boolean,is,shutdown,eager,return,shutdown,eager
SpringCamelContext -> public boolean isShutdownEager();1495703392;Whether to shutdown this {@link org.apache.camel.spring.SpringCamelContext} eager (first)_when Spring {@link org.springframework.context.ApplicationContext} is being stopped._<p/>_<b>Important:</b> This option is default <tt>true</tt> which ensures we shutdown Camel_before other beans. Setting this to <tt>false</tt> restores old behavior in earlier_Camel releases, which can be used for special cases to behave as before.__@return <tt>true</tt> to shutdown eager (first), <tt>false</tt> to shutdown last;public boolean isShutdownEager() {_        return shutdownEager__    };whether,to,shutdown,this,link,org,apache,camel,spring,spring,camel,context,eager,first,when,spring,link,org,springframework,context,application,context,is,being,stopped,p,b,important,b,this,option,is,default,tt,true,tt,which,ensures,we,shutdown,camel,before,other,beans,setting,this,to,tt,false,tt,restores,old,behavior,in,earlier,camel,releases,which,can,be,used,for,special,cases,to,behave,as,before,return,tt,true,tt,to,shutdown,eager,first,tt,false,tt,to,shutdown,last;public,boolean,is,shutdown,eager,return,shutdown,eager
SpringCamelContext -> public boolean isShutdownEager();1496001378;Whether to shutdown this {@link org.apache.camel.spring.SpringCamelContext} eager (first)_when Spring {@link org.springframework.context.ApplicationContext} is being stopped._<p/>_<b>Important:</b> This option is default <tt>true</tt> which ensures we shutdown Camel_before other beans. Setting this to <tt>false</tt> restores old behavior in earlier_Camel releases, which can be used for special cases to behave as before.__@return <tt>true</tt> to shutdown eager (first), <tt>false</tt> to shutdown last;public boolean isShutdownEager() {_        return shutdownEager__    };whether,to,shutdown,this,link,org,apache,camel,spring,spring,camel,context,eager,first,when,spring,link,org,springframework,context,application,context,is,being,stopped,p,b,important,b,this,option,is,default,tt,true,tt,which,ensures,we,shutdown,camel,before,other,beans,setting,this,to,tt,false,tt,restores,old,behavior,in,earlier,camel,releases,which,can,be,used,for,special,cases,to,behave,as,before,return,tt,true,tt,to,shutdown,eager,first,tt,false,tt,to,shutdown,last;public,boolean,is,shutdown,eager,return,shutdown,eager
SpringCamelContext -> public boolean isShutdownEager();1506415037;Whether to shutdown this {@link org.apache.camel.spring.SpringCamelContext} eager (first)_when Spring {@link org.springframework.context.ApplicationContext} is being stopped._<p/>_<b>Important:</b> This option is default <tt>true</tt> which ensures we shutdown Camel_before other beans. Setting this to <tt>false</tt> restores old behavior in earlier_Camel releases, which can be used for special cases to behave as before.__@return <tt>true</tt> to shutdown eager (first), <tt>false</tt> to shutdown last;public boolean isShutdownEager() {_        return shutdownEager__    };whether,to,shutdown,this,link,org,apache,camel,spring,spring,camel,context,eager,first,when,spring,link,org,springframework,context,application,context,is,being,stopped,p,b,important,b,this,option,is,default,tt,true,tt,which,ensures,we,shutdown,camel,before,other,beans,setting,this,to,tt,false,tt,restores,old,behavior,in,earlier,camel,releases,which,can,be,used,for,special,cases,to,behave,as,before,return,tt,true,tt,to,shutdown,eager,first,tt,false,tt,to,shutdown,last;public,boolean,is,shutdown,eager,return,shutdown,eager
SpringCamelContext -> public boolean isShutdownEager();1506430363;Whether to shutdown this {@link org.apache.camel.spring.SpringCamelContext} eager (first)_when Spring {@link org.springframework.context.ApplicationContext} is being stopped._<p/>_<b>Important:</b> This option is default <tt>true</tt> which ensures we shutdown Camel_before other beans. Setting this to <tt>false</tt> restores old behavior in earlier_Camel releases, which can be used for special cases to behave as before.__@return <tt>true</tt> to shutdown eager (first), <tt>false</tt> to shutdown last;public boolean isShutdownEager() {_        return shutdownEager__    };whether,to,shutdown,this,link,org,apache,camel,spring,spring,camel,context,eager,first,when,spring,link,org,springframework,context,application,context,is,being,stopped,p,b,important,b,this,option,is,default,tt,true,tt,which,ensures,we,shutdown,camel,before,other,beans,setting,this,to,tt,false,tt,restores,old,behavior,in,earlier,camel,releases,which,can,be,used,for,special,cases,to,behave,as,before,return,tt,true,tt,to,shutdown,eager,first,tt,false,tt,to,shutdown,last;public,boolean,is,shutdown,eager,return,shutdown,eager
SpringCamelContext -> public boolean isShutdownEager();1540108158;Whether to shutdown this {@link org.apache.camel.spring.SpringCamelContext} eager (first)_when Spring {@link org.springframework.context.ApplicationContext} is being stopped._<p/>_<b>Important:</b> This option is default <tt>true</tt> which ensures we shutdown Camel_before other beans. Setting this to <tt>false</tt> restores old behavior in earlier_Camel releases, which can be used for special cases to behave as before.__@return <tt>true</tt> to shutdown eager (first), <tt>false</tt> to shutdown last;public boolean isShutdownEager() {_        return shutdownEager__    };whether,to,shutdown,this,link,org,apache,camel,spring,spring,camel,context,eager,first,when,spring,link,org,springframework,context,application,context,is,being,stopped,p,b,important,b,this,option,is,default,tt,true,tt,which,ensures,we,shutdown,camel,before,other,beans,setting,this,to,tt,false,tt,restores,old,behavior,in,earlier,camel,releases,which,can,be,used,for,special,cases,to,behave,as,before,return,tt,true,tt,to,shutdown,eager,first,tt,false,tt,to,shutdown,last;public,boolean,is,shutdown,eager,return,shutdown,eager
SpringCamelContext -> public boolean isShutdownEager();1540108159;Whether to shutdown this {@link org.apache.camel.spring.SpringCamelContext} eager (first)_when Spring {@link org.springframework.context.ApplicationContext} is being stopped._<p/>_<b>Important:</b> This option is default <tt>true</tt> which ensures we shutdown Camel_before other beans. Setting this to <tt>false</tt> restores old behavior in earlier_Camel releases, which can be used for special cases to behave as before.__@return <tt>true</tt> to shutdown eager (first), <tt>false</tt> to shutdown last;public boolean isShutdownEager() {_        return shutdownEager__    };whether,to,shutdown,this,link,org,apache,camel,spring,spring,camel,context,eager,first,when,spring,link,org,springframework,context,application,context,is,being,stopped,p,b,important,b,this,option,is,default,tt,true,tt,which,ensures,we,shutdown,camel,before,other,beans,setting,this,to,tt,false,tt,restores,old,behavior,in,earlier,camel,releases,which,can,be,used,for,special,cases,to,behave,as,before,return,tt,true,tt,to,shutdown,eager,first,tt,false,tt,to,shutdown,last;public,boolean,is,shutdown,eager,return,shutdown,eager
SpringCamelContext -> public boolean isShutdownEager();1540108161;Whether to shutdown this {@link org.apache.camel.spring.SpringCamelContext} eager (first)_when Spring {@link org.springframework.context.ApplicationContext} is being stopped._<p/>_<b>Important:</b> This option is default <tt>true</tt> which ensures we shutdown Camel_before other beans. Setting this to <tt>false</tt> restores old behavior in earlier_Camel releases, which can be used for special cases to behave as before.__@return <tt>true</tt> to shutdown eager (first), <tt>false</tt> to shutdown last;public boolean isShutdownEager() {_        return shutdownEager__    };whether,to,shutdown,this,link,org,apache,camel,spring,spring,camel,context,eager,first,when,spring,link,org,springframework,context,application,context,is,being,stopped,p,b,important,b,this,option,is,default,tt,true,tt,which,ensures,we,shutdown,camel,before,other,beans,setting,this,to,tt,false,tt,restores,old,behavior,in,earlier,camel,releases,which,can,be,used,for,special,cases,to,behave,as,before,return,tt,true,tt,to,shutdown,eager,first,tt,false,tt,to,shutdown,last;public,boolean,is,shutdown,eager,return,shutdown,eager
SpringCamelContext -> public boolean isShutdownEager();1540108163;Whether to shutdown this {@link org.apache.camel.spring.SpringCamelContext} eager (first)_when Spring {@link org.springframework.context.ApplicationContext} is being stopped._<p/>_<b>Important:</b> This option is default <tt>true</tt> which ensures we shutdown Camel_before other beans. Setting this to <tt>false</tt> restores old behavior in earlier_Camel releases, which can be used for special cases to behave as before.__@return <tt>true</tt> to shutdown eager (first), <tt>false</tt> to shutdown last;public boolean isShutdownEager() {_        return shutdownEager__    };whether,to,shutdown,this,link,org,apache,camel,spring,spring,camel,context,eager,first,when,spring,link,org,springframework,context,application,context,is,being,stopped,p,b,important,b,this,option,is,default,tt,true,tt,which,ensures,we,shutdown,camel,before,other,beans,setting,this,to,tt,false,tt,restores,old,behavior,in,earlier,camel,releases,which,can,be,used,for,special,cases,to,behave,as,before,return,tt,true,tt,to,shutdown,eager,first,tt,false,tt,to,shutdown,last;public,boolean,is,shutdown,eager,return,shutdown,eager
SpringCamelContext -> public boolean isShutdownEager();1540108165;Whether to shutdown this {@link org.apache.camel.spring.SpringCamelContext} eager (first)_when Spring {@link org.springframework.context.ApplicationContext} is being stopped._<p/>_<b>Important:</b> This option is default <tt>true</tt> which ensures we shutdown Camel_before other beans. Setting this to <tt>false</tt> restores old behavior in earlier_Camel releases, which can be used for special cases to behave as before.__@return <tt>true</tt> to shutdown eager (first), <tt>false</tt> to shutdown last;public boolean isShutdownEager() {_        return shutdownEager__    };whether,to,shutdown,this,link,org,apache,camel,spring,spring,camel,context,eager,first,when,spring,link,org,springframework,context,application,context,is,being,stopped,p,b,important,b,this,option,is,default,tt,true,tt,which,ensures,we,shutdown,camel,before,other,beans,setting,this,to,tt,false,tt,restores,old,behavior,in,earlier,camel,releases,which,can,be,used,for,special,cases,to,behave,as,before,return,tt,true,tt,to,shutdown,eager,first,tt,false,tt,to,shutdown,last;public,boolean,is,shutdown,eager,return,shutdown,eager
SpringCamelContext -> public boolean isShutdownEager();1540472504;Whether to shutdown this {@link org.apache.camel.spring.SpringCamelContext} eager (first)_when Spring {@link org.springframework.context.ApplicationContext} is being stopped._<p/>_<b>Important:</b> This option is default <tt>true</tt> which ensures we shutdown Camel_before other beans. Setting this to <tt>false</tt> restores old behavior in earlier_Camel releases, which can be used for special cases to behave as before.__@return <tt>true</tt> to shutdown eager (first), <tt>false</tt> to shutdown last;public boolean isShutdownEager() {_        return shutdownEager__    };whether,to,shutdown,this,link,org,apache,camel,spring,spring,camel,context,eager,first,when,spring,link,org,springframework,context,application,context,is,being,stopped,p,b,important,b,this,option,is,default,tt,true,tt,which,ensures,we,shutdown,camel,before,other,beans,setting,this,to,tt,false,tt,restores,old,behavior,in,earlier,camel,releases,which,can,be,used,for,special,cases,to,behave,as,before,return,tt,true,tt,to,shutdown,eager,first,tt,false,tt,to,shutdown,last;public,boolean,is,shutdown,eager,return,shutdown,eager
SpringCamelContext -> public boolean isShutdownEager();1541670803;Whether to shutdown this {@link org.apache.camel.spring.SpringCamelContext} eager (first)_when Spring {@link org.springframework.context.ApplicationContext} is being stopped._<p/>_<b>Important:</b> This option is default <tt>true</tt> which ensures we shutdown Camel_before other beans. Setting this to <tt>false</tt> restores old behavior in earlier_Camel releases, which can be used for special cases to behave as before.__@return <tt>true</tt> to shutdown eager (first), <tt>false</tt> to shutdown last;public boolean isShutdownEager() {_        return shutdownEager__    };whether,to,shutdown,this,link,org,apache,camel,spring,spring,camel,context,eager,first,when,spring,link,org,springframework,context,application,context,is,being,stopped,p,b,important,b,this,option,is,default,tt,true,tt,which,ensures,we,shutdown,camel,before,other,beans,setting,this,to,tt,false,tt,restores,old,behavior,in,earlier,camel,releases,which,can,be,used,for,special,cases,to,behave,as,before,return,tt,true,tt,to,shutdown,eager,first,tt,false,tt,to,shutdown,last;public,boolean,is,shutdown,eager,return,shutdown,eager
SpringCamelContext -> public boolean isShutdownEager();1549004217;Whether to shutdown this {@link org.apache.camel.spring.SpringCamelContext} eager (first)_when Spring {@link org.springframework.context.ApplicationContext} is being stopped._<p/>_<b>Important:</b> This option is default <tt>true</tt> which ensures we shutdown Camel_before other beans. Setting this to <tt>false</tt> restores old behavior in earlier_Camel releases, which can be used for special cases to behave as before.__@return <tt>true</tt> to shutdown eager (first), <tt>false</tt> to shutdown last;public boolean isShutdownEager() {_        return shutdownEager__    };whether,to,shutdown,this,link,org,apache,camel,spring,spring,camel,context,eager,first,when,spring,link,org,springframework,context,application,context,is,being,stopped,p,b,important,b,this,option,is,default,tt,true,tt,which,ensures,we,shutdown,camel,before,other,beans,setting,this,to,tt,false,tt,restores,old,behavior,in,earlier,camel,releases,which,can,be,used,for,special,cases,to,behave,as,before,return,tt,true,tt,to,shutdown,eager,first,tt,false,tt,to,shutdown,last;public,boolean,is,shutdown,eager,return,shutdown,eager
SpringCamelContext -> public boolean isShutdownEager();1551167777;Whether to shutdown this {@link org.apache.camel.spring.SpringCamelContext} eager (first)_when Spring {@link org.springframework.context.ApplicationContext} is being stopped._<p/>_<b>Important:</b> This option is default <tt>true</tt> which ensures we shutdown Camel_before other beans. Setting this to <tt>false</tt> restores old behavior in earlier_Camel releases, which can be used for special cases to behave as before.__@return <tt>true</tt> to shutdown eager (first), <tt>false</tt> to shutdown last;public boolean isShutdownEager() {_        return shutdownEager__    };whether,to,shutdown,this,link,org,apache,camel,spring,spring,camel,context,eager,first,when,spring,link,org,springframework,context,application,context,is,being,stopped,p,b,important,b,this,option,is,default,tt,true,tt,which,ensures,we,shutdown,camel,before,other,beans,setting,this,to,tt,false,tt,restores,old,behavior,in,earlier,camel,releases,which,can,be,used,for,special,cases,to,behave,as,before,return,tt,true,tt,to,shutdown,eager,first,tt,false,tt,to,shutdown,last;public,boolean,is,shutdown,eager,return,shutdown,eager
SpringCamelContext -> @Deprecated     public static SpringCamelContext springCamelContext(ApplicationContext applicationContext, boolean maybeStart) throws Exception;1441620354;@deprecated its better to create and boot Spring the standard Spring way and to get hold of CamelContext_using the Spring API.;@Deprecated_    public static SpringCamelContext springCamelContext(ApplicationContext applicationContext, boolean maybeStart) throws Exception {_        if (applicationContext != null) {_            _            String[] names = applicationContext.getBeanNamesForType(SpringCamelContext.class)__            if (names.length == 1) {_                return applicationContext.getBean(names[0], SpringCamelContext.class)__            }_        }_        SpringCamelContext answer = new SpringCamelContext()__        answer.setApplicationContext(applicationContext)__        if (maybeStart) {_            answer.afterPropertiesSet()__        }_        return answer__    };deprecated,its,better,to,create,and,boot,spring,the,standard,spring,way,and,to,get,hold,of,camel,context,using,the,spring,api;deprecated,public,static,spring,camel,context,spring,camel,context,application,context,application,context,boolean,maybe,start,throws,exception,if,application,context,null,string,names,application,context,get,bean,names,for,type,spring,camel,context,class,if,names,length,1,return,application,context,get,bean,names,0,spring,camel,context,class,spring,camel,context,answer,new,spring,camel,context,answer,set,application,context,application,context,if,maybe,start,answer,after,properties,set,return,answer
SpringCamelContext -> @Deprecated     public static SpringCamelContext springCamelContext(ApplicationContext applicationContext, boolean maybeStart) throws Exception;1470902851;@deprecated its better to create and boot Spring the standard Spring way and to get hold of CamelContext_using the Spring API.;@Deprecated_    public static SpringCamelContext springCamelContext(ApplicationContext applicationContext, boolean maybeStart) throws Exception {_        if (applicationContext != null) {_            _            String[] names = applicationContext.getBeanNamesForType(SpringCamelContext.class)__            if (names.length == 1) {_                return applicationContext.getBean(names[0], SpringCamelContext.class)__            }_        }_        SpringCamelContext answer = new SpringCamelContext()__        answer.setApplicationContext(applicationContext)__        if (maybeStart) {_            answer.afterPropertiesSet()__        }_        return answer__    };deprecated,its,better,to,create,and,boot,spring,the,standard,spring,way,and,to,get,hold,of,camel,context,using,the,spring,api;deprecated,public,static,spring,camel,context,spring,camel,context,application,context,application,context,boolean,maybe,start,throws,exception,if,application,context,null,string,names,application,context,get,bean,names,for,type,spring,camel,context,class,if,names,length,1,return,application,context,get,bean,names,0,spring,camel,context,class,spring,camel,context,answer,new,spring,camel,context,answer,set,application,context,application,context,if,maybe,start,answer,after,properties,set,return,answer
SpringCamelContext -> @Deprecated     public static SpringCamelContext springCamelContext(ApplicationContext applicationContext, boolean maybeStart) throws Exception;1495703392;@deprecated its better to create and boot Spring the standard Spring way and to get hold of CamelContext_using the Spring API.;@Deprecated_    public static SpringCamelContext springCamelContext(ApplicationContext applicationContext, boolean maybeStart) throws Exception {_        if (applicationContext != null) {_            _            String[] names = applicationContext.getBeanNamesForType(SpringCamelContext.class)__            if (names.length == 1) {_                return applicationContext.getBean(names[0], SpringCamelContext.class)__            }_        }_        SpringCamelContext answer = new SpringCamelContext()__        answer.setApplicationContext(applicationContext)__        if (maybeStart) {_            answer.afterPropertiesSet()__        }_        return answer__    };deprecated,its,better,to,create,and,boot,spring,the,standard,spring,way,and,to,get,hold,of,camel,context,using,the,spring,api;deprecated,public,static,spring,camel,context,spring,camel,context,application,context,application,context,boolean,maybe,start,throws,exception,if,application,context,null,string,names,application,context,get,bean,names,for,type,spring,camel,context,class,if,names,length,1,return,application,context,get,bean,names,0,spring,camel,context,class,spring,camel,context,answer,new,spring,camel,context,answer,set,application,context,application,context,if,maybe,start,answer,after,properties,set,return,answer
SpringCamelContext -> @Deprecated     public static SpringCamelContext springCamelContext(ApplicationContext applicationContext, boolean maybeStart) throws Exception;1496001378;@deprecated its better to create and boot Spring the standard Spring way and to get hold of CamelContext_using the Spring API.;@Deprecated_    public static SpringCamelContext springCamelContext(ApplicationContext applicationContext, boolean maybeStart) throws Exception {_        if (applicationContext != null) {_            _            String[] names = applicationContext.getBeanNamesForType(SpringCamelContext.class)__            if (names.length == 1) {_                return applicationContext.getBean(names[0], SpringCamelContext.class)__            }_        }_        SpringCamelContext answer = new SpringCamelContext()__        answer.setApplicationContext(applicationContext)__        if (maybeStart) {_            answer.start()__        }_        return answer__    };deprecated,its,better,to,create,and,boot,spring,the,standard,spring,way,and,to,get,hold,of,camel,context,using,the,spring,api;deprecated,public,static,spring,camel,context,spring,camel,context,application,context,application,context,boolean,maybe,start,throws,exception,if,application,context,null,string,names,application,context,get,bean,names,for,type,spring,camel,context,class,if,names,length,1,return,application,context,get,bean,names,0,spring,camel,context,class,spring,camel,context,answer,new,spring,camel,context,answer,set,application,context,application,context,if,maybe,start,answer,start,return,answer
SpringCamelContext -> @Deprecated     public static SpringCamelContext springCamelContext(ApplicationContext applicationContext, boolean maybeStart) throws Exception;1506415037;@deprecated its better to create and boot Spring the standard Spring way and to get hold of CamelContext_using the Spring API.;@Deprecated_    public static SpringCamelContext springCamelContext(ApplicationContext applicationContext, boolean maybeStart) throws Exception {_        if (applicationContext != null) {_            _            String[] names = applicationContext.getBeanNamesForType(SpringCamelContext.class)__            if (names.length == 1) {_                return applicationContext.getBean(names[0], SpringCamelContext.class)__            }_        }_        SpringCamelContext answer = new SpringCamelContext()__        answer.setApplicationContext(applicationContext)__        if (maybeStart) {_            answer.start()__        }_        return answer__    };deprecated,its,better,to,create,and,boot,spring,the,standard,spring,way,and,to,get,hold,of,camel,context,using,the,spring,api;deprecated,public,static,spring,camel,context,spring,camel,context,application,context,application,context,boolean,maybe,start,throws,exception,if,application,context,null,string,names,application,context,get,bean,names,for,type,spring,camel,context,class,if,names,length,1,return,application,context,get,bean,names,0,spring,camel,context,class,spring,camel,context,answer,new,spring,camel,context,answer,set,application,context,application,context,if,maybe,start,answer,start,return,answer
SpringCamelContext -> @Deprecated     public static SpringCamelContext springCamelContext(ApplicationContext applicationContext, boolean maybeStart) throws Exception;1506430363;@deprecated its better to create and boot Spring the standard Spring way and to get hold of CamelContext_using the Spring API.;@Deprecated_    public static SpringCamelContext springCamelContext(ApplicationContext applicationContext, boolean maybeStart) throws Exception {_        if (applicationContext != null) {_            _            String[] names = applicationContext.getBeanNamesForType(SpringCamelContext.class)__            if (names.length == 1) {_                return applicationContext.getBean(names[0], SpringCamelContext.class)__            }_        }_        SpringCamelContext answer = new SpringCamelContext()__        answer.setApplicationContext(applicationContext)__        if (maybeStart) {_            answer.start()__        }_        return answer__    };deprecated,its,better,to,create,and,boot,spring,the,standard,spring,way,and,to,get,hold,of,camel,context,using,the,spring,api;deprecated,public,static,spring,camel,context,spring,camel,context,application,context,application,context,boolean,maybe,start,throws,exception,if,application,context,null,string,names,application,context,get,bean,names,for,type,spring,camel,context,class,if,names,length,1,return,application,context,get,bean,names,0,spring,camel,context,class,spring,camel,context,answer,new,spring,camel,context,answer,set,application,context,application,context,if,maybe,start,answer,start,return,answer
SpringCamelContext -> @Deprecated     public static SpringCamelContext springCamelContext(ApplicationContext applicationContext, boolean maybeStart) throws Exception;1540108158;@deprecated its better to create and boot Spring the standard Spring way and to get hold of CamelContext_using the Spring API.;@Deprecated_    public static SpringCamelContext springCamelContext(ApplicationContext applicationContext, boolean maybeStart) throws Exception {_        if (applicationContext != null) {_            _            String[] names = applicationContext.getBeanNamesForType(SpringCamelContext.class)__            if (names.length == 1) {_                return applicationContext.getBean(names[0], SpringCamelContext.class)__            }_        }_        SpringCamelContext answer = new SpringCamelContext()__        answer.setApplicationContext(applicationContext)__        if (maybeStart) {_            answer.start()__        }_        return answer__    };deprecated,its,better,to,create,and,boot,spring,the,standard,spring,way,and,to,get,hold,of,camel,context,using,the,spring,api;deprecated,public,static,spring,camel,context,spring,camel,context,application,context,application,context,boolean,maybe,start,throws,exception,if,application,context,null,string,names,application,context,get,bean,names,for,type,spring,camel,context,class,if,names,length,1,return,application,context,get,bean,names,0,spring,camel,context,class,spring,camel,context,answer,new,spring,camel,context,answer,set,application,context,application,context,if,maybe,start,answer,start,return,answer
SpringCamelContext -> @Deprecated     public static SpringCamelContext springCamelContext(ApplicationContext applicationContext, boolean maybeStart) throws Exception;1540108159;@deprecated its better to create and boot Spring the standard Spring way and to get hold of CamelContext_using the Spring API.;@Deprecated_    public static SpringCamelContext springCamelContext(ApplicationContext applicationContext, boolean maybeStart) throws Exception {_        if (applicationContext != null) {_            _            String[] names = applicationContext.getBeanNamesForType(SpringCamelContext.class)__            if (names.length == 1) {_                return applicationContext.getBean(names[0], SpringCamelContext.class)__            }_        }_        SpringCamelContext answer = new SpringCamelContext()__        answer.setApplicationContext(applicationContext)__        if (maybeStart) {_            answer.start()__        }_        return answer__    };deprecated,its,better,to,create,and,boot,spring,the,standard,spring,way,and,to,get,hold,of,camel,context,using,the,spring,api;deprecated,public,static,spring,camel,context,spring,camel,context,application,context,application,context,boolean,maybe,start,throws,exception,if,application,context,null,string,names,application,context,get,bean,names,for,type,spring,camel,context,class,if,names,length,1,return,application,context,get,bean,names,0,spring,camel,context,class,spring,camel,context,answer,new,spring,camel,context,answer,set,application,context,application,context,if,maybe,start,answer,start,return,answer
SpringCamelContext -> @Deprecated     public static SpringCamelContext springCamelContext(ApplicationContext applicationContext, boolean maybeStart) throws Exception;1540108161;@deprecated its better to create and boot Spring the standard Spring way and to get hold of CamelContext_using the Spring API.;@Deprecated_    public static SpringCamelContext springCamelContext(ApplicationContext applicationContext, boolean maybeStart) throws Exception {_        if (applicationContext != null) {_            _            String[] names = applicationContext.getBeanNamesForType(SpringCamelContext.class)__            if (names.length == 1) {_                return applicationContext.getBean(names[0], SpringCamelContext.class)__            }_        }_        SpringCamelContext answer = new SpringCamelContext()__        answer.setApplicationContext(applicationContext)__        if (maybeStart) {_            answer.start()__        }_        return answer__    };deprecated,its,better,to,create,and,boot,spring,the,standard,spring,way,and,to,get,hold,of,camel,context,using,the,spring,api;deprecated,public,static,spring,camel,context,spring,camel,context,application,context,application,context,boolean,maybe,start,throws,exception,if,application,context,null,string,names,application,context,get,bean,names,for,type,spring,camel,context,class,if,names,length,1,return,application,context,get,bean,names,0,spring,camel,context,class,spring,camel,context,answer,new,spring,camel,context,answer,set,application,context,application,context,if,maybe,start,answer,start,return,answer
SpringCamelContext -> @Deprecated     public static SpringCamelContext springCamelContext(ApplicationContext applicationContext, boolean maybeStart) throws Exception;1540108163;@deprecated its better to create and boot Spring the standard Spring way and to get hold of CamelContext_using the Spring API.;@Deprecated_    public static SpringCamelContext springCamelContext(ApplicationContext applicationContext, boolean maybeStart) throws Exception {_        if (applicationContext != null) {_            _            String[] names = applicationContext.getBeanNamesForType(SpringCamelContext.class)__            if (names.length == 1) {_                return applicationContext.getBean(names[0], SpringCamelContext.class)__            }_        }_        SpringCamelContext answer = new SpringCamelContext()__        answer.setApplicationContext(applicationContext)__        if (maybeStart) {_            answer.start()__        }_        return answer__    };deprecated,its,better,to,create,and,boot,spring,the,standard,spring,way,and,to,get,hold,of,camel,context,using,the,spring,api;deprecated,public,static,spring,camel,context,spring,camel,context,application,context,application,context,boolean,maybe,start,throws,exception,if,application,context,null,string,names,application,context,get,bean,names,for,type,spring,camel,context,class,if,names,length,1,return,application,context,get,bean,names,0,spring,camel,context,class,spring,camel,context,answer,new,spring,camel,context,answer,set,application,context,application,context,if,maybe,start,answer,start,return,answer
SpringCamelContext -> @Deprecated     public static SpringCamelContext springCamelContext(ApplicationContext applicationContext, boolean maybeStart) throws Exception;1540108165;@deprecated its better to create and boot Spring the standard Spring way and to get hold of CamelContext_using the Spring API.;@Deprecated_    public static SpringCamelContext springCamelContext(ApplicationContext applicationContext, boolean maybeStart) throws Exception {_        if (applicationContext != null) {_            _            String[] names = applicationContext.getBeanNamesForType(SpringCamelContext.class)__            if (names.length == 1) {_                return applicationContext.getBean(names[0], SpringCamelContext.class)__            }_        }_        SpringCamelContext answer = new SpringCamelContext()__        answer.setApplicationContext(applicationContext)__        if (maybeStart) {_            answer.start()__        }_        return answer__    };deprecated,its,better,to,create,and,boot,spring,the,standard,spring,way,and,to,get,hold,of,camel,context,using,the,spring,api;deprecated,public,static,spring,camel,context,spring,camel,context,application,context,application,context,boolean,maybe,start,throws,exception,if,application,context,null,string,names,application,context,get,bean,names,for,type,spring,camel,context,class,if,names,length,1,return,application,context,get,bean,names,0,spring,camel,context,class,spring,camel,context,answer,new,spring,camel,context,answer,set,application,context,application,context,if,maybe,start,answer,start,return,answer
SpringCamelContext -> @Deprecated     public static SpringCamelContext springCamelContext(ApplicationContext applicationContext, boolean maybeStart) throws Exception;1540472504;@deprecated its better to create and boot Spring the standard Spring way and to get hold of CamelContext_using the Spring API.;@Deprecated_    public static SpringCamelContext springCamelContext(ApplicationContext applicationContext, boolean maybeStart) throws Exception {_        if (applicationContext != null) {_            _            String[] names = applicationContext.getBeanNamesForType(SpringCamelContext.class)__            if (names.length == 1) {_                return applicationContext.getBean(names[0], SpringCamelContext.class)__            }_        }_        SpringCamelContext answer = new SpringCamelContext()__        answer.setApplicationContext(applicationContext)__        answer.init()__        if (maybeStart) {_            answer.start()__        }_        return answer__    };deprecated,its,better,to,create,and,boot,spring,the,standard,spring,way,and,to,get,hold,of,camel,context,using,the,spring,api;deprecated,public,static,spring,camel,context,spring,camel,context,application,context,application,context,boolean,maybe,start,throws,exception,if,application,context,null,string,names,application,context,get,bean,names,for,type,spring,camel,context,class,if,names,length,1,return,application,context,get,bean,names,0,spring,camel,context,class,spring,camel,context,answer,new,spring,camel,context,answer,set,application,context,application,context,answer,init,if,maybe,start,answer,start,return,answer
SpringCamelContext -> @Deprecated     public static SpringCamelContext springCamelContext(ApplicationContext applicationContext, boolean maybeStart) throws Exception;1541670803;@deprecated its better to create and boot Spring the standard Spring way and to get hold of CamelContext_using the Spring API.;@Deprecated_    public static SpringCamelContext springCamelContext(ApplicationContext applicationContext, boolean maybeStart) throws Exception {_        if (applicationContext != null) {_            _            String[] names = applicationContext.getBeanNamesForType(SpringCamelContext.class)__            if (names.length == 1) {_                return applicationContext.getBean(names[0], SpringCamelContext.class)__            }_        }_        SpringCamelContext answer = new SpringCamelContext()__        answer.setApplicationContext(applicationContext)__        answer.init()__        if (maybeStart) {_            answer.start()__        }_        return answer__    };deprecated,its,better,to,create,and,boot,spring,the,standard,spring,way,and,to,get,hold,of,camel,context,using,the,spring,api;deprecated,public,static,spring,camel,context,spring,camel,context,application,context,application,context,boolean,maybe,start,throws,exception,if,application,context,null,string,names,application,context,get,bean,names,for,type,spring,camel,context,class,if,names,length,1,return,application,context,get,bean,names,0,spring,camel,context,class,spring,camel,context,answer,new,spring,camel,context,answer,set,application,context,application,context,answer,init,if,maybe,start,answer,start,return,answer
SpringCamelContext -> @Deprecated     public static SpringCamelContext springCamelContext(ApplicationContext applicationContext, boolean maybeStart) throws Exception;1549004217;@deprecated its better to create and boot Spring the standard Spring way and to get hold of CamelContext_using the Spring API.;@Deprecated_    public static SpringCamelContext springCamelContext(ApplicationContext applicationContext, boolean maybeStart) throws Exception {_        if (applicationContext != null) {_            _            String[] names = applicationContext.getBeanNamesForType(SpringCamelContext.class)__            if (names.length == 1) {_                return applicationContext.getBean(names[0], SpringCamelContext.class)__            }_        }_        SpringCamelContext answer = new SpringCamelContext()__        answer.setApplicationContext(applicationContext)__        answer.init()__        if (maybeStart) {_            answer.start()__        }_        return answer__    };deprecated,its,better,to,create,and,boot,spring,the,standard,spring,way,and,to,get,hold,of,camel,context,using,the,spring,api;deprecated,public,static,spring,camel,context,spring,camel,context,application,context,application,context,boolean,maybe,start,throws,exception,if,application,context,null,string,names,application,context,get,bean,names,for,type,spring,camel,context,class,if,names,length,1,return,application,context,get,bean,names,0,spring,camel,context,class,spring,camel,context,answer,new,spring,camel,context,answer,set,application,context,application,context,answer,init,if,maybe,start,answer,start,return,answer
SpringCamelContext -> @Deprecated     public static SpringCamelContext springCamelContext(ApplicationContext applicationContext, boolean maybeStart) throws Exception;1551167777;@deprecated its better to create and boot Spring the standard Spring way and to get hold of CamelContext_using the Spring API.;@Deprecated_    public static SpringCamelContext springCamelContext(ApplicationContext applicationContext, boolean maybeStart) throws Exception {_        if (applicationContext != null) {_            _            String[] names = applicationContext.getBeanNamesForType(SpringCamelContext.class)__            if (names.length == 1) {_                return applicationContext.getBean(names[0], SpringCamelContext.class)__            }_        }_        SpringCamelContext answer = new SpringCamelContext()__        answer.setApplicationContext(applicationContext)__        answer.init()__        if (maybeStart) {_            answer.start()__        }_        return answer__    };deprecated,its,better,to,create,and,boot,spring,the,standard,spring,way,and,to,get,hold,of,camel,context,using,the,spring,api;deprecated,public,static,spring,camel,context,spring,camel,context,application,context,application,context,boolean,maybe,start,throws,exception,if,application,context,null,string,names,application,context,get,bean,names,for,type,spring,camel,context,class,if,names,length,1,return,application,context,get,bean,names,0,spring,camel,context,class,spring,camel,context,answer,new,spring,camel,context,answer,set,application,context,application,context,answer,init,if,maybe,start,answer,start,return,answer
