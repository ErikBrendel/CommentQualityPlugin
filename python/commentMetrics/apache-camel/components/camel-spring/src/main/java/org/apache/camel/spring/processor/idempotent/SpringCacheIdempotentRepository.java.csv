commented;modifiers;parameterAmount;loc;comment;code
false;public;1;5;;@Override @ManagedOperation(description = "Adds the key to the store") public boolean add(String key) {     return cache.putIfAbsent(key, true) == null. }
false;public;1;5;;@Override @ManagedOperation(description = "Does the store contain the given key") public boolean contains(String key) {     return cache.get(key) != null. }
false;public;1;6;;@Override @ManagedOperation(description = "Remove the key from the store") public boolean remove(String key) {     cache.evict(key).     return true. }
false;public;0;5;;@Override @ManagedOperation(description = "Clear the store") public void clear() {     cache.clear(). }
false;public;0;4;;@ManagedAttribute(description = "The processor name") public String getCacheName() {     return cacheName. }
false;public;1;4;;@Override public boolean confirm(String key) {     return true. }
false;protected;0;6;;@Override protected void doStart() throws Exception {     if (cache == null) {         cache = manager.getCache(cacheName).     } }
false;protected;0;4;;@Override protected void doStop() throws Exception {     cache = null. }
