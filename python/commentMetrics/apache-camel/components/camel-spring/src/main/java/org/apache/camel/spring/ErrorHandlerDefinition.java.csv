# id;timestamp;commentText;codeText;commentWords;codeWords
ErrorHandlerDefinition -> public void setRollbackLoggingLevel(LoggingLevel rollbackLoggingLevel);1470848893;Sets the logging level to use for logging transactional rollback._<p/>_This option is default WARN.;public void setRollbackLoggingLevel(LoggingLevel rollbackLoggingLevel) {_        this.rollbackLoggingLevel = rollbackLoggingLevel__    };sets,the,logging,level,to,use,for,logging,transactional,rollback,p,this,option,is,default,warn;public,void,set,rollback,logging,level,logging,level,rollback,logging,level,this,rollback,logging,level,rollback,logging,level
ErrorHandlerDefinition -> public void setRollbackLoggingLevel(LoggingLevel rollbackLoggingLevel);1470907849;Sets the logging level to use for logging transactional rollback._<p/>_This option is default WARN.;public void setRollbackLoggingLevel(LoggingLevel rollbackLoggingLevel) {_        this.rollbackLoggingLevel = rollbackLoggingLevel__    };sets,the,logging,level,to,use,for,logging,transactional,rollback,p,this,option,is,default,warn;public,void,set,rollback,logging,level,logging,level,rollback,logging,level,this,rollback,logging,level,rollback,logging,level
ErrorHandlerDefinition -> public void setRollbackLoggingLevel(LoggingLevel rollbackLoggingLevel);1540108161;Sets the logging level to use for logging transactional rollback._<p/>_This option is default WARN.;public void setRollbackLoggingLevel(LoggingLevel rollbackLoggingLevel) {_        this.rollbackLoggingLevel = rollbackLoggingLevel__    };sets,the,logging,level,to,use,for,logging,transactional,rollback,p,this,option,is,default,warn;public,void,set,rollback,logging,level,logging,level,rollback,logging,level,this,rollback,logging,level,rollback,logging,level
ErrorHandlerDefinition -> public void setRollbackLoggingLevel(LoggingLevel rollbackLoggingLevel);1547240981;Sets the logging level to use for logging transactional rollback._<p/>_This option is default WARN.;public void setRollbackLoggingLevel(LoggingLevel rollbackLoggingLevel) {_        this.rollbackLoggingLevel = rollbackLoggingLevel__    };sets,the,logging,level,to,use,for,logging,transactional,rollback,p,this,option,is,default,warn;public,void,set,rollback,logging,level,logging,level,rollback,logging,level,this,rollback,logging,level,rollback,logging,level
ErrorHandlerDefinition -> public void setUseOriginalMessage(Boolean useOriginalMessage);1470848893;Will use the original input message when an {@link org.apache.camel.Exchange} is moved to the dead letter queue._<p/>_<b>Notice:</b> this only applies when all redeliveries attempt have failed and the {@link org.apache.camel.Exchange} is doomed for failure._<br/>_Instead of using the current inprogress {@link org.apache.camel.Exchange} IN body we use the original IN body instead. This allows_you to store the original input in the dead letter queue instead of the inprogress snapshot of the IN body._For instance if you route transform the IN body during routing and then failed. With the original exchange_store in the dead letter queue it might be easier to manually re submit the {@link org.apache.camel.Exchange} again as the IN body_is the same as when Camel received it. So you should be able to send the {@link org.apache.camel.Exchange} to the same input._<p/>_By default this feature is off.;public void setUseOriginalMessage(Boolean useOriginalMessage) {_        this.useOriginalMessage = useOriginalMessage__    };will,use,the,original,input,message,when,an,link,org,apache,camel,exchange,is,moved,to,the,dead,letter,queue,p,b,notice,b,this,only,applies,when,all,redeliveries,attempt,have,failed,and,the,link,org,apache,camel,exchange,is,doomed,for,failure,br,instead,of,using,the,current,inprogress,link,org,apache,camel,exchange,in,body,we,use,the,original,in,body,instead,this,allows,you,to,store,the,original,input,in,the,dead,letter,queue,instead,of,the,inprogress,snapshot,of,the,in,body,for,instance,if,you,route,transform,the,in,body,during,routing,and,then,failed,with,the,original,exchange,store,in,the,dead,letter,queue,it,might,be,easier,to,manually,re,submit,the,link,org,apache,camel,exchange,again,as,the,in,body,is,the,same,as,when,camel,received,it,so,you,should,be,able,to,send,the,link,org,apache,camel,exchange,to,the,same,input,p,by,default,this,feature,is,off;public,void,set,use,original,message,boolean,use,original,message,this,use,original,message,use,original,message
ErrorHandlerDefinition -> public void setUseOriginalMessage(Boolean useOriginalMessage);1470907849;Will use the original input message when an {@link org.apache.camel.Exchange} is moved to the dead letter queue._<p/>_<b>Notice:</b> this only applies when all redeliveries attempt have failed and the {@link org.apache.camel.Exchange} is doomed for failure._<br/>_Instead of using the current inprogress {@link org.apache.camel.Exchange} IN body we use the original IN body instead. This allows_you to store the original input in the dead letter queue instead of the inprogress snapshot of the IN body._For instance if you route transform the IN body during routing and then failed. With the original exchange_store in the dead letter queue it might be easier to manually re submit the {@link org.apache.camel.Exchange} again as the IN body_is the same as when Camel received it. So you should be able to send the {@link org.apache.camel.Exchange} to the same input._<p/>_By default this feature is off.;public void setUseOriginalMessage(Boolean useOriginalMessage) {_        this.useOriginalMessage = useOriginalMessage__    };will,use,the,original,input,message,when,an,link,org,apache,camel,exchange,is,moved,to,the,dead,letter,queue,p,b,notice,b,this,only,applies,when,all,redeliveries,attempt,have,failed,and,the,link,org,apache,camel,exchange,is,doomed,for,failure,br,instead,of,using,the,current,inprogress,link,org,apache,camel,exchange,in,body,we,use,the,original,in,body,instead,this,allows,you,to,store,the,original,input,in,the,dead,letter,queue,instead,of,the,inprogress,snapshot,of,the,in,body,for,instance,if,you,route,transform,the,in,body,during,routing,and,then,failed,with,the,original,exchange,store,in,the,dead,letter,queue,it,might,be,easier,to,manually,re,submit,the,link,org,apache,camel,exchange,again,as,the,in,body,is,the,same,as,when,camel,received,it,so,you,should,be,able,to,send,the,link,org,apache,camel,exchange,to,the,same,input,p,by,default,this,feature,is,off;public,void,set,use,original,message,boolean,use,original,message,this,use,original,message,use,original,message
ErrorHandlerDefinition -> public void setUseOriginalMessage(Boolean useOriginalMessage);1540108161;Will use the original input message when an {@link org.apache.camel.Exchange} is moved to the dead letter queue._<p/>_<b>Notice:</b> this only applies when all redeliveries attempt have failed and the {@link org.apache.camel.Exchange} is doomed for failure._<br/>_Instead of using the current inprogress {@link org.apache.camel.Exchange} IN body we use the original IN body instead. This allows_you to store the original input in the dead letter queue instead of the inprogress snapshot of the IN body._For instance if you route transform the IN body during routing and then failed. With the original exchange_store in the dead letter queue it might be easier to manually re submit the {@link org.apache.camel.Exchange} again as the IN body_is the same as when Camel received it. So you should be able to send the {@link org.apache.camel.Exchange} to the same input._<p/>_By default this feature is off.;public void setUseOriginalMessage(Boolean useOriginalMessage) {_        this.useOriginalMessage = useOriginalMessage__    };will,use,the,original,input,message,when,an,link,org,apache,camel,exchange,is,moved,to,the,dead,letter,queue,p,b,notice,b,this,only,applies,when,all,redeliveries,attempt,have,failed,and,the,link,org,apache,camel,exchange,is,doomed,for,failure,br,instead,of,using,the,current,inprogress,link,org,apache,camel,exchange,in,body,we,use,the,original,in,body,instead,this,allows,you,to,store,the,original,input,in,the,dead,letter,queue,instead,of,the,inprogress,snapshot,of,the,in,body,for,instance,if,you,route,transform,the,in,body,during,routing,and,then,failed,with,the,original,exchange,store,in,the,dead,letter,queue,it,might,be,easier,to,manually,re,submit,the,link,org,apache,camel,exchange,again,as,the,in,body,is,the,same,as,when,camel,received,it,so,you,should,be,able,to,send,the,link,org,apache,camel,exchange,to,the,same,input,p,by,default,this,feature,is,off;public,void,set,use,original,message,boolean,use,original,message,this,use,original,message,use,original,message
ErrorHandlerDefinition -> public void setUseOriginalMessage(Boolean useOriginalMessage);1547240981;Will use the original input message when an {@link org.apache.camel.Exchange} is moved to the dead letter queue._<p/>_<b>Notice:</b> this only applies when all redeliveries attempt have failed and the {@link org.apache.camel.Exchange} is doomed for failure._<br/>_Instead of using the current inprogress {@link org.apache.camel.Exchange} IN body we use the original IN body instead. This allows_you to store the original input in the dead letter queue instead of the inprogress snapshot of the IN body._For instance if you route transform the IN body during routing and then failed. With the original exchange_store in the dead letter queue it might be easier to manually re submit the {@link org.apache.camel.Exchange} again as the IN body_is the same as when Camel received it. So you should be able to send the {@link org.apache.camel.Exchange} to the same input._<p/>_By default this feature is off.;public void setUseOriginalMessage(Boolean useOriginalMessage) {_        this.useOriginalMessage = useOriginalMessage__    };will,use,the,original,input,message,when,an,link,org,apache,camel,exchange,is,moved,to,the,dead,letter,queue,p,b,notice,b,this,only,applies,when,all,redeliveries,attempt,have,failed,and,the,link,org,apache,camel,exchange,is,doomed,for,failure,br,instead,of,using,the,current,inprogress,link,org,apache,camel,exchange,in,body,we,use,the,original,in,body,instead,this,allows,you,to,store,the,original,input,in,the,dead,letter,queue,instead,of,the,inprogress,snapshot,of,the,in,body,for,instance,if,you,route,transform,the,in,body,during,routing,and,then,failed,with,the,original,exchange,store,in,the,dead,letter,queue,it,might,be,easier,to,manually,re,submit,the,link,org,apache,camel,exchange,again,as,the,in,body,is,the,same,as,when,camel,received,it,so,you,should,be,able,to,send,the,link,org,apache,camel,exchange,to,the,same,input,p,by,default,this,feature,is,off;public,void,set,use,original,message,boolean,use,original,message,this,use,original,message,use,original,message
ErrorHandlerDefinition -> public void setLevel(LoggingLevel level);1470848893;Logging level to use when using the logging error handler type.;public void setLevel(LoggingLevel level) {_        this.level = level__    };logging,level,to,use,when,using,the,logging,error,handler,type;public,void,set,level,logging,level,level,this,level,level
ErrorHandlerDefinition -> public void setLevel(LoggingLevel level);1470907849;Logging level to use when using the logging error handler type.;public void setLevel(LoggingLevel level) {_        this.level = level__    };logging,level,to,use,when,using,the,logging,error,handler,type;public,void,set,level,logging,level,level,this,level,level
ErrorHandlerDefinition -> public void setLevel(LoggingLevel level);1540108161;Logging level to use when using the logging error handler type.;public void setLevel(LoggingLevel level) {_        this.level = level__    };logging,level,to,use,when,using,the,logging,error,handler,type;public,void,set,level,logging,level,level,this,level,level
ErrorHandlerDefinition -> public void setLevel(LoggingLevel level);1547240981;Logging level to use when using the logging error handler type.;public void setLevel(LoggingLevel level) {_        this.level = level__    };logging,level,to,use,when,using,the,logging,error,handler,type;public,void,set,level,logging,level,level,this,level,level
ErrorHandlerDefinition -> public void setRedeliveryPolicyRef(String redeliveryPolicyRef);1470848893;Sets a reference to a {@link RedeliveryPolicy} to be used for redelivery settings.;public void setRedeliveryPolicyRef(String redeliveryPolicyRef) {_        this.redeliveryPolicyRef = redeliveryPolicyRef__    };sets,a,reference,to,a,link,redelivery,policy,to,be,used,for,redelivery,settings;public,void,set,redelivery,policy,ref,string,redelivery,policy,ref,this,redelivery,policy,ref,redelivery,policy,ref
ErrorHandlerDefinition -> public void setRedeliveryPolicyRef(String redeliveryPolicyRef);1470907849;Sets a reference to a {@link RedeliveryPolicy} to be used for redelivery settings.;public void setRedeliveryPolicyRef(String redeliveryPolicyRef) {_        this.redeliveryPolicyRef = redeliveryPolicyRef__    };sets,a,reference,to,a,link,redelivery,policy,to,be,used,for,redelivery,settings;public,void,set,redelivery,policy,ref,string,redelivery,policy,ref,this,redelivery,policy,ref,redelivery,policy,ref
ErrorHandlerDefinition -> public void setRedeliveryPolicyRef(String redeliveryPolicyRef);1540108161;Sets a reference to a {@link RedeliveryPolicy} to be used for redelivery settings.;public void setRedeliveryPolicyRef(String redeliveryPolicyRef) {_        this.redeliveryPolicyRef = redeliveryPolicyRef__    };sets,a,reference,to,a,link,redelivery,policy,to,be,used,for,redelivery,settings;public,void,set,redelivery,policy,ref,string,redelivery,policy,ref,this,redelivery,policy,ref,redelivery,policy,ref
ErrorHandlerDefinition -> public void setRedeliveryPolicyRef(String redeliveryPolicyRef);1547240981;Sets a reference to a {@link RedeliveryPolicy} to be used for redelivery settings.;public void setRedeliveryPolicyRef(String redeliveryPolicyRef) {_        this.redeliveryPolicyRef = redeliveryPolicyRef__    };sets,a,reference,to,a,link,redelivery,policy,to,be,used,for,redelivery,settings;public,void,set,redelivery,policy,ref,string,redelivery,policy,ref,this,redelivery,policy,ref,redelivery,policy,ref
ErrorHandlerDefinition -> public void setOnPrepareFailureRef(String onPrepareFailureRef);1470848893;Sets a reference to a processor to prepare the {@link org.apache.camel.Exchange} before_handled by the failure processor / dead letter channel. This allows for example to enrich the message_before sending to a dead letter queue.;public void setOnPrepareFailureRef(String onPrepareFailureRef) {_        this.onPrepareFailureRef = onPrepareFailureRef__    };sets,a,reference,to,a,processor,to,prepare,the,link,org,apache,camel,exchange,before,handled,by,the,failure,processor,dead,letter,channel,this,allows,for,example,to,enrich,the,message,before,sending,to,a,dead,letter,queue;public,void,set,on,prepare,failure,ref,string,on,prepare,failure,ref,this,on,prepare,failure,ref,on,prepare,failure,ref
ErrorHandlerDefinition -> public void setOnPrepareFailureRef(String onPrepareFailureRef);1470907849;Sets a reference to a processor to prepare the {@link org.apache.camel.Exchange} before_handled by the failure processor / dead letter channel. This allows for example to enrich the message_before sending to a dead letter queue.;public void setOnPrepareFailureRef(String onPrepareFailureRef) {_        this.onPrepareFailureRef = onPrepareFailureRef__    };sets,a,reference,to,a,processor,to,prepare,the,link,org,apache,camel,exchange,before,handled,by,the,failure,processor,dead,letter,channel,this,allows,for,example,to,enrich,the,message,before,sending,to,a,dead,letter,queue;public,void,set,on,prepare,failure,ref,string,on,prepare,failure,ref,this,on,prepare,failure,ref,on,prepare,failure,ref
ErrorHandlerDefinition -> public void setOnPrepareFailureRef(String onPrepareFailureRef);1540108161;Sets a reference to a processor to prepare the {@link org.apache.camel.Exchange} before_handled by the failure processor / dead letter channel. This allows for example to enrich the message_before sending to a dead letter queue.;public void setOnPrepareFailureRef(String onPrepareFailureRef) {_        this.onPrepareFailureRef = onPrepareFailureRef__    };sets,a,reference,to,a,processor,to,prepare,the,link,org,apache,camel,exchange,before,handled,by,the,failure,processor,dead,letter,channel,this,allows,for,example,to,enrich,the,message,before,sending,to,a,dead,letter,queue;public,void,set,on,prepare,failure,ref,string,on,prepare,failure,ref,this,on,prepare,failure,ref,on,prepare,failure,ref
ErrorHandlerDefinition -> public void setOnPrepareFailureRef(String onPrepareFailureRef);1547240981;Sets a reference to a processor to prepare the {@link org.apache.camel.Exchange} before_handled by the failure processor / dead letter channel. This allows for example to enrich the message_before sending to a dead letter queue.;public void setOnPrepareFailureRef(String onPrepareFailureRef) {_        this.onPrepareFailureRef = onPrepareFailureRef__    };sets,a,reference,to,a,processor,to,prepare,the,link,org,apache,camel,exchange,before,handled,by,the,failure,processor,dead,letter,channel,this,allows,for,example,to,enrich,the,message,before,sending,to,a,dead,letter,queue;public,void,set,on,prepare,failure,ref,string,on,prepare,failure,ref,this,on,prepare,failure,ref,on,prepare,failure,ref
ErrorHandlerDefinition -> public void setRedeliveryPolicy(CamelRedeliveryPolicyFactoryBean redeliveryPolicy);1470848893;Sets the redelivery settings;public void setRedeliveryPolicy(CamelRedeliveryPolicyFactoryBean redeliveryPolicy) {_        this.redeliveryPolicy = redeliveryPolicy__    };sets,the,redelivery,settings;public,void,set,redelivery,policy,camel,redelivery,policy,factory,bean,redelivery,policy,this,redelivery,policy,redelivery,policy
ErrorHandlerDefinition -> public void setRedeliveryPolicy(CamelRedeliveryPolicyFactoryBean redeliveryPolicy);1470907849;Sets the redelivery settings;public void setRedeliveryPolicy(CamelRedeliveryPolicyFactoryBean redeliveryPolicy) {_        this.redeliveryPolicy = redeliveryPolicy__    };sets,the,redelivery,settings;public,void,set,redelivery,policy,camel,redelivery,policy,factory,bean,redelivery,policy,this,redelivery,policy,redelivery,policy
ErrorHandlerDefinition -> public void setRedeliveryPolicy(CamelRedeliveryPolicyFactoryBean redeliveryPolicy);1540108161;Sets the redelivery settings;public void setRedeliveryPolicy(CamelRedeliveryPolicyFactoryBean redeliveryPolicy) {_        this.redeliveryPolicy = redeliveryPolicy__    };sets,the,redelivery,settings;public,void,set,redelivery,policy,camel,redelivery,policy,factory,bean,redelivery,policy,this,redelivery,policy,redelivery,policy
ErrorHandlerDefinition -> public void setRedeliveryPolicy(CamelRedeliveryPolicyFactoryBean redeliveryPolicy);1547240981;Sets the redelivery settings;public void setRedeliveryPolicy(CamelRedeliveryPolicyFactoryBean redeliveryPolicy) {_        this.redeliveryPolicy = redeliveryPolicy__    };sets,the,redelivery,settings;public,void,set,redelivery,policy,camel,redelivery,policy,factory,bean,redelivery,policy,this,redelivery,policy,redelivery,policy
ErrorHandlerDefinition -> public void setTransactionTemplateRef(String transactionTemplateRef);1470848893;References to the {@link org.springframework.transaction.support.TransactionTemplate} to use with the transaction error handler.;public void setTransactionTemplateRef(String transactionTemplateRef) {_        this.transactionTemplateRef = transactionTemplateRef__    };references,to,the,link,org,springframework,transaction,support,transaction,template,to,use,with,the,transaction,error,handler;public,void,set,transaction,template,ref,string,transaction,template,ref,this,transaction,template,ref,transaction,template,ref
ErrorHandlerDefinition -> public void setTransactionTemplateRef(String transactionTemplateRef);1470907849;References to the {@link org.springframework.transaction.support.TransactionTemplate} to use with the transaction error handler.;public void setTransactionTemplateRef(String transactionTemplateRef) {_        this.transactionTemplateRef = transactionTemplateRef__    };references,to,the,link,org,springframework,transaction,support,transaction,template,to,use,with,the,transaction,error,handler;public,void,set,transaction,template,ref,string,transaction,template,ref,this,transaction,template,ref,transaction,template,ref
ErrorHandlerDefinition -> public void setTransactionTemplateRef(String transactionTemplateRef);1540108161;References to the {@link org.springframework.transaction.support.TransactionTemplate} to use with the transaction error handler.;public void setTransactionTemplateRef(String transactionTemplateRef) {_        this.transactionTemplateRef = transactionTemplateRef__    };references,to,the,link,org,springframework,transaction,support,transaction,template,to,use,with,the,transaction,error,handler;public,void,set,transaction,template,ref,string,transaction,template,ref,this,transaction,template,ref,transaction,template,ref
ErrorHandlerDefinition -> public void setTransactionTemplateRef(String transactionTemplateRef);1547240981;References to the {@link org.springframework.transaction.support.TransactionTemplate} to use with the transaction error handler.;public void setTransactionTemplateRef(String transactionTemplateRef) {_        this.transactionTemplateRef = transactionTemplateRef__    };references,to,the,link,org,springframework,transaction,support,transaction,template,to,use,with,the,transaction,error,handler;public,void,set,transaction,template,ref,string,transaction,template,ref,this,transaction,template,ref,transaction,template,ref
ErrorHandlerDefinition -> public void setOnRedeliveryRef(String onRedeliveryRef);1470848893;Sets a reference to a processor that should be processed <b>before</b> a redelivery attempt._<p/>_Can be used to change the {@link org.apache.camel.Exchange} <b>before</b> its being redelivered.;public void setOnRedeliveryRef(String onRedeliveryRef) {_        this.onRedeliveryRef = onRedeliveryRef__    };sets,a,reference,to,a,processor,that,should,be,processed,b,before,b,a,redelivery,attempt,p,can,be,used,to,change,the,link,org,apache,camel,exchange,b,before,b,its,being,redelivered;public,void,set,on,redelivery,ref,string,on,redelivery,ref,this,on,redelivery,ref,on,redelivery,ref
ErrorHandlerDefinition -> public void setOnRedeliveryRef(String onRedeliveryRef);1470907849;Sets a reference to a processor that should be processed <b>before</b> a redelivery attempt._<p/>_Can be used to change the {@link org.apache.camel.Exchange} <b>before</b> its being redelivered.;public void setOnRedeliveryRef(String onRedeliveryRef) {_        this.onRedeliveryRef = onRedeliveryRef__    };sets,a,reference,to,a,processor,that,should,be,processed,b,before,b,a,redelivery,attempt,p,can,be,used,to,change,the,link,org,apache,camel,exchange,b,before,b,its,being,redelivered;public,void,set,on,redelivery,ref,string,on,redelivery,ref,this,on,redelivery,ref,on,redelivery,ref
ErrorHandlerDefinition -> public void setOnRedeliveryRef(String onRedeliveryRef);1540108161;Sets a reference to a processor that should be processed <b>before</b> a redelivery attempt._<p/>_Can be used to change the {@link org.apache.camel.Exchange} <b>before</b> its being redelivered.;public void setOnRedeliveryRef(String onRedeliveryRef) {_        this.onRedeliveryRef = onRedeliveryRef__    };sets,a,reference,to,a,processor,that,should,be,processed,b,before,b,a,redelivery,attempt,p,can,be,used,to,change,the,link,org,apache,camel,exchange,b,before,b,its,being,redelivered;public,void,set,on,redelivery,ref,string,on,redelivery,ref,this,on,redelivery,ref,on,redelivery,ref
ErrorHandlerDefinition -> public void setOnRedeliveryRef(String onRedeliveryRef);1547240981;Sets a reference to a processor that should be processed <b>before</b> a redelivery attempt._<p/>_Can be used to change the {@link org.apache.camel.Exchange} <b>before</b> its being redelivered.;public void setOnRedeliveryRef(String onRedeliveryRef) {_        this.onRedeliveryRef = onRedeliveryRef__    };sets,a,reference,to,a,processor,that,should,be,processed,b,before,b,a,redelivery,attempt,p,can,be,used,to,change,the,link,org,apache,camel,exchange,b,before,b,its,being,redelivered;public,void,set,on,redelivery,ref,string,on,redelivery,ref,this,on,redelivery,ref,on,redelivery,ref
ErrorHandlerDefinition -> public void setDeadLetterHandleNewException(String deadLetterHandleNewException);1470848893;Whether the dead letter channel should handle (and ignore) any new exception that may been thrown during sending the_message to the dead letter endpoint._<p/>_The default value is <tt>true</tt> which means any such kind of exception is handled and ignored. Set this to <tt>false</tt>_to let the exception be propagated back on the {@link org.apache.camel.Exchange}. This can be used in situations_where you use transactions, and want to use Camel's dead letter channel to deal with exceptions during routing,_but if the dead letter channel itself fails because of a new exception being thrown, then by setting this to <tt>false</tt>_the new exceptions is propagated back and set on the {@link org.apache.camel.Exchange}, which allows the transaction_to detect the exception, and rollback.;public void setDeadLetterHandleNewException(String deadLetterHandleNewException) {_        this.deadLetterHandleNewException = deadLetterHandleNewException__    };whether,the,dead,letter,channel,should,handle,and,ignore,any,new,exception,that,may,been,thrown,during,sending,the,message,to,the,dead,letter,endpoint,p,the,default,value,is,tt,true,tt,which,means,any,such,kind,of,exception,is,handled,and,ignored,set,this,to,tt,false,tt,to,let,the,exception,be,propagated,back,on,the,link,org,apache,camel,exchange,this,can,be,used,in,situations,where,you,use,transactions,and,want,to,use,camel,s,dead,letter,channel,to,deal,with,exceptions,during,routing,but,if,the,dead,letter,channel,itself,fails,because,of,a,new,exception,being,thrown,then,by,setting,this,to,tt,false,tt,the,new,exceptions,is,propagated,back,and,set,on,the,link,org,apache,camel,exchange,which,allows,the,transaction,to,detect,the,exception,and,rollback;public,void,set,dead,letter,handle,new,exception,string,dead,letter,handle,new,exception,this,dead,letter,handle,new,exception,dead,letter,handle,new,exception
ErrorHandlerDefinition -> public void setDeadLetterHandleNewException(String deadLetterHandleNewException);1470907849;Whether the dead letter channel should handle (and ignore) any new exception that may been thrown during sending the_message to the dead letter endpoint._<p/>_The default value is <tt>true</tt> which means any such kind of exception is handled and ignored. Set this to <tt>false</tt>_to let the exception be propagated back on the {@link org.apache.camel.Exchange}. This can be used in situations_where you use transactions, and want to use Camel's dead letter channel to deal with exceptions during routing,_but if the dead letter channel itself fails because of a new exception being thrown, then by setting this to <tt>false</tt>_the new exceptions is propagated back and set on the {@link org.apache.camel.Exchange}, which allows the transaction_to detect the exception, and rollback.;public void setDeadLetterHandleNewException(String deadLetterHandleNewException) {_        this.deadLetterHandleNewException = deadLetterHandleNewException__    };whether,the,dead,letter,channel,should,handle,and,ignore,any,new,exception,that,may,been,thrown,during,sending,the,message,to,the,dead,letter,endpoint,p,the,default,value,is,tt,true,tt,which,means,any,such,kind,of,exception,is,handled,and,ignored,set,this,to,tt,false,tt,to,let,the,exception,be,propagated,back,on,the,link,org,apache,camel,exchange,this,can,be,used,in,situations,where,you,use,transactions,and,want,to,use,camel,s,dead,letter,channel,to,deal,with,exceptions,during,routing,but,if,the,dead,letter,channel,itself,fails,because,of,a,new,exception,being,thrown,then,by,setting,this,to,tt,false,tt,the,new,exceptions,is,propagated,back,and,set,on,the,link,org,apache,camel,exchange,which,allows,the,transaction,to,detect,the,exception,and,rollback;public,void,set,dead,letter,handle,new,exception,string,dead,letter,handle,new,exception,this,dead,letter,handle,new,exception,dead,letter,handle,new,exception
ErrorHandlerDefinition -> public void setDeadLetterHandleNewException(String deadLetterHandleNewException);1540108161;Whether the dead letter channel should handle (and ignore) any new exception that may been thrown during sending the_message to the dead letter endpoint._<p/>_The default value is <tt>true</tt> which means any such kind of exception is handled and ignored. Set this to <tt>false</tt>_to let the exception be propagated back on the {@link org.apache.camel.Exchange}. This can be used in situations_where you use transactions, and want to use Camel's dead letter channel to deal with exceptions during routing,_but if the dead letter channel itself fails because of a new exception being thrown, then by setting this to <tt>false</tt>_the new exceptions is propagated back and set on the {@link org.apache.camel.Exchange}, which allows the transaction_to detect the exception, and rollback.;public void setDeadLetterHandleNewException(String deadLetterHandleNewException) {_        this.deadLetterHandleNewException = deadLetterHandleNewException__    };whether,the,dead,letter,channel,should,handle,and,ignore,any,new,exception,that,may,been,thrown,during,sending,the,message,to,the,dead,letter,endpoint,p,the,default,value,is,tt,true,tt,which,means,any,such,kind,of,exception,is,handled,and,ignored,set,this,to,tt,false,tt,to,let,the,exception,be,propagated,back,on,the,link,org,apache,camel,exchange,this,can,be,used,in,situations,where,you,use,transactions,and,want,to,use,camel,s,dead,letter,channel,to,deal,with,exceptions,during,routing,but,if,the,dead,letter,channel,itself,fails,because,of,a,new,exception,being,thrown,then,by,setting,this,to,tt,false,tt,the,new,exceptions,is,propagated,back,and,set,on,the,link,org,apache,camel,exchange,which,allows,the,transaction,to,detect,the,exception,and,rollback;public,void,set,dead,letter,handle,new,exception,string,dead,letter,handle,new,exception,this,dead,letter,handle,new,exception,dead,letter,handle,new,exception
ErrorHandlerDefinition -> public void setDeadLetterHandleNewException(String deadLetterHandleNewException);1547240981;Whether the dead letter channel should handle (and ignore) any new exception that may been thrown during sending the_message to the dead letter endpoint._<p/>_The default value is <tt>true</tt> which means any such kind of exception is handled and ignored. Set this to <tt>false</tt>_to let the exception be propagated back on the {@link org.apache.camel.Exchange}. This can be used in situations_where you use transactions, and want to use Camel's dead letter channel to deal with exceptions during routing,_but if the dead letter channel itself fails because of a new exception being thrown, then by setting this to <tt>false</tt>_the new exceptions is propagated back and set on the {@link org.apache.camel.Exchange}, which allows the transaction_to detect the exception, and rollback.;public void setDeadLetterHandleNewException(String deadLetterHandleNewException) {_        this.deadLetterHandleNewException = deadLetterHandleNewException__    };whether,the,dead,letter,channel,should,handle,and,ignore,any,new,exception,that,may,been,thrown,during,sending,the,message,to,the,dead,letter,endpoint,p,the,default,value,is,tt,true,tt,which,means,any,such,kind,of,exception,is,handled,and,ignored,set,this,to,tt,false,tt,to,let,the,exception,be,propagated,back,on,the,link,org,apache,camel,exchange,this,can,be,used,in,situations,where,you,use,transactions,and,want,to,use,camel,s,dead,letter,channel,to,deal,with,exceptions,during,routing,but,if,the,dead,letter,channel,itself,fails,because,of,a,new,exception,being,thrown,then,by,setting,this,to,tt,false,tt,the,new,exceptions,is,propagated,back,and,set,on,the,link,org,apache,camel,exchange,which,allows,the,transaction,to,detect,the,exception,and,rollback;public,void,set,dead,letter,handle,new,exception,string,dead,letter,handle,new,exception,this,dead,letter,handle,new,exception,dead,letter,handle,new,exception
ErrorHandlerDefinition -> public void setRetryWhileRef(String retryWhileRef);1470848893;Sets a reference to an retry while expression._<p/>_Will continue retrying until expression evaluates to <tt>false</tt>.;public void setRetryWhileRef(String retryWhileRef) {_        this.retryWhileRef = retryWhileRef__    };sets,a,reference,to,an,retry,while,expression,p,will,continue,retrying,until,expression,evaluates,to,tt,false,tt;public,void,set,retry,while,ref,string,retry,while,ref,this,retry,while,ref,retry,while,ref
ErrorHandlerDefinition -> public void setRetryWhileRef(String retryWhileRef);1470907849;Sets a reference to an retry while expression._<p/>_Will continue retrying until expression evaluates to <tt>false</tt>.;public void setRetryWhileRef(String retryWhileRef) {_        this.retryWhileRef = retryWhileRef__    };sets,a,reference,to,an,retry,while,expression,p,will,continue,retrying,until,expression,evaluates,to,tt,false,tt;public,void,set,retry,while,ref,string,retry,while,ref,this,retry,while,ref,retry,while,ref
ErrorHandlerDefinition -> public void setRetryWhileRef(String retryWhileRef);1540108161;Sets a reference to an retry while expression._<p/>_Will continue retrying until expression evaluates to <tt>false</tt>.;public void setRetryWhileRef(String retryWhileRef) {_        this.retryWhileRef = retryWhileRef__    };sets,a,reference,to,an,retry,while,expression,p,will,continue,retrying,until,expression,evaluates,to,tt,false,tt;public,void,set,retry,while,ref,string,retry,while,ref,this,retry,while,ref,retry,while,ref
ErrorHandlerDefinition -> public void setRetryWhileRef(String retryWhileRef);1547240981;Sets a reference to an retry while expression._<p/>_Will continue retrying until expression evaluates to <tt>false</tt>.;public void setRetryWhileRef(String retryWhileRef) {_        this.retryWhileRef = retryWhileRef__    };sets,a,reference,to,an,retry,while,expression,p,will,continue,retrying,until,expression,evaluates,to,tt,false,tt;public,void,set,retry,while,ref,string,retry,while,ref,this,retry,while,ref,retry,while,ref
ErrorHandlerDefinition -> public void setOnExceptionOccurredRef(String onExceptionOccurredRef);1470848893;Sets a reference to a processor that should be processed <b>just after</b> an exception occurred._Can be used to perform custom logging about the occurred exception at the exact time it happened._<p/>_Important: Any exception thrown from this processor will be ignored.;public void setOnExceptionOccurredRef(String onExceptionOccurredRef) {_        this.onExceptionOccurredRef = onExceptionOccurredRef__    };sets,a,reference,to,a,processor,that,should,be,processed,b,just,after,b,an,exception,occurred,can,be,used,to,perform,custom,logging,about,the,occurred,exception,at,the,exact,time,it,happened,p,important,any,exception,thrown,from,this,processor,will,be,ignored;public,void,set,on,exception,occurred,ref,string,on,exception,occurred,ref,this,on,exception,occurred,ref,on,exception,occurred,ref
ErrorHandlerDefinition -> public void setOnExceptionOccurredRef(String onExceptionOccurredRef);1470907849;Sets a reference to a processor that should be processed <b>just after</b> an exception occurred._Can be used to perform custom logging about the occurred exception at the exact time it happened._<p/>_Important: Any exception thrown from this processor will be ignored.;public void setOnExceptionOccurredRef(String onExceptionOccurredRef) {_        this.onExceptionOccurredRef = onExceptionOccurredRef__    };sets,a,reference,to,a,processor,that,should,be,processed,b,just,after,b,an,exception,occurred,can,be,used,to,perform,custom,logging,about,the,occurred,exception,at,the,exact,time,it,happened,p,important,any,exception,thrown,from,this,processor,will,be,ignored;public,void,set,on,exception,occurred,ref,string,on,exception,occurred,ref,this,on,exception,occurred,ref,on,exception,occurred,ref
ErrorHandlerDefinition -> public void setOnExceptionOccurredRef(String onExceptionOccurredRef);1540108161;Sets a reference to a processor that should be processed <b>just after</b> an exception occurred._Can be used to perform custom logging about the occurred exception at the exact time it happened._<p/>_Important: Any exception thrown from this processor will be ignored.;public void setOnExceptionOccurredRef(String onExceptionOccurredRef) {_        this.onExceptionOccurredRef = onExceptionOccurredRef__    };sets,a,reference,to,a,processor,that,should,be,processed,b,just,after,b,an,exception,occurred,can,be,used,to,perform,custom,logging,about,the,occurred,exception,at,the,exact,time,it,happened,p,important,any,exception,thrown,from,this,processor,will,be,ignored;public,void,set,on,exception,occurred,ref,string,on,exception,occurred,ref,this,on,exception,occurred,ref,on,exception,occurred,ref
ErrorHandlerDefinition -> public void setOnExceptionOccurredRef(String onExceptionOccurredRef);1547240981;Sets a reference to a processor that should be processed <b>just after</b> an exception occurred._Can be used to perform custom logging about the occurred exception at the exact time it happened._<p/>_Important: Any exception thrown from this processor will be ignored.;public void setOnExceptionOccurredRef(String onExceptionOccurredRef) {_        this.onExceptionOccurredRef = onExceptionOccurredRef__    };sets,a,reference,to,a,processor,that,should,be,processed,b,just,after,b,an,exception,occurred,can,be,used,to,perform,custom,logging,about,the,occurred,exception,at,the,exact,time,it,happened,p,important,any,exception,thrown,from,this,processor,will,be,ignored;public,void,set,on,exception,occurred,ref,string,on,exception,occurred,ref,this,on,exception,occurred,ref,on,exception,occurred,ref
ErrorHandlerDefinition -> public void setExecutorServiceRef(String executorServiceRef);1470848893;Sets a reference to a thread pool to be used by the error handler;public void setExecutorServiceRef(String executorServiceRef) {_        this.executorServiceRef = executorServiceRef__    };sets,a,reference,to,a,thread,pool,to,be,used,by,the,error,handler;public,void,set,executor,service,ref,string,executor,service,ref,this,executor,service,ref,executor,service,ref
ErrorHandlerDefinition -> public void setExecutorServiceRef(String executorServiceRef);1470907849;Sets a reference to a thread pool to be used by the error handler;public void setExecutorServiceRef(String executorServiceRef) {_        this.executorServiceRef = executorServiceRef__    };sets,a,reference,to,a,thread,pool,to,be,used,by,the,error,handler;public,void,set,executor,service,ref,string,executor,service,ref,this,executor,service,ref,executor,service,ref
ErrorHandlerDefinition -> public void setExecutorServiceRef(String executorServiceRef);1540108161;Sets a reference to a thread pool to be used by the error handler;public void setExecutorServiceRef(String executorServiceRef) {_        this.executorServiceRef = executorServiceRef__    };sets,a,reference,to,a,thread,pool,to,be,used,by,the,error,handler;public,void,set,executor,service,ref,string,executor,service,ref,this,executor,service,ref,executor,service,ref
ErrorHandlerDefinition -> public void setExecutorServiceRef(String executorServiceRef);1547240981;Sets a reference to a thread pool to be used by the error handler;public void setExecutorServiceRef(String executorServiceRef) {_        this.executorServiceRef = executorServiceRef__    };sets,a,reference,to,a,thread,pool,to,be,used,by,the,error,handler;public,void,set,executor,service,ref,string,executor,service,ref,this,executor,service,ref,executor,service,ref
ErrorHandlerDefinition -> public void setType(ErrorHandlerType type);1470848893;The type of the error handler;public void setType(ErrorHandlerType type) {_        this.type = type__    };the,type,of,the,error,handler;public,void,set,type,error,handler,type,type,this,type,type
ErrorHandlerDefinition -> public void setType(ErrorHandlerType type);1470907849;The type of the error handler;public void setType(ErrorHandlerType type) {_        this.type = type__    };the,type,of,the,error,handler;public,void,set,type,error,handler,type,type,this,type,type
ErrorHandlerDefinition -> public void setType(ErrorHandlerType type);1540108161;The type of the error handler;public void setType(ErrorHandlerType type) {_        this.type = type__    };the,type,of,the,error,handler;public,void,set,type,error,handler,type,type,this,type,type
ErrorHandlerDefinition -> public void setType(ErrorHandlerType type);1547240981;The type of the error handler;public void setType(ErrorHandlerType type) {_        this.type = type__    };the,type,of,the,error,handler;public,void,set,type,error,handler,type,type,this,type,type
ErrorHandlerDefinition -> public void setDeadLetterUri(String deadLetterUri);1470848893;The dead letter endpoint uri for the Dead Letter error handler.;public void setDeadLetterUri(String deadLetterUri) {_        this.deadLetterUri = deadLetterUri__    };the,dead,letter,endpoint,uri,for,the,dead,letter,error,handler;public,void,set,dead,letter,uri,string,dead,letter,uri,this,dead,letter,uri,dead,letter,uri
ErrorHandlerDefinition -> public void setDeadLetterUri(String deadLetterUri);1470907849;The dead letter endpoint uri for the Dead Letter error handler.;public void setDeadLetterUri(String deadLetterUri) {_        this.deadLetterUri = deadLetterUri__    };the,dead,letter,endpoint,uri,for,the,dead,letter,error,handler;public,void,set,dead,letter,uri,string,dead,letter,uri,this,dead,letter,uri,dead,letter,uri
ErrorHandlerDefinition -> public void setDeadLetterUri(String deadLetterUri);1540108161;The dead letter endpoint uri for the Dead Letter error handler.;public void setDeadLetterUri(String deadLetterUri) {_        this.deadLetterUri = deadLetterUri__    };the,dead,letter,endpoint,uri,for,the,dead,letter,error,handler;public,void,set,dead,letter,uri,string,dead,letter,uri,this,dead,letter,uri,dead,letter,uri
ErrorHandlerDefinition -> public void setDeadLetterUri(String deadLetterUri);1547240981;The dead letter endpoint uri for the Dead Letter error handler.;public void setDeadLetterUri(String deadLetterUri) {_        this.deadLetterUri = deadLetterUri__    };the,dead,letter,endpoint,uri,for,the,dead,letter,error,handler;public,void,set,dead,letter,uri,string,dead,letter,uri,this,dead,letter,uri,dead,letter,uri
ErrorHandlerDefinition -> public void setTransactionManagerRef(String transactionManagerRef);1470848893;References to the {@link org.springframework.transaction.PlatformTransactionManager} to use with the transaction error handler.;public void setTransactionManagerRef(String transactionManagerRef) {_        this.transactionManagerRef = transactionManagerRef__    };references,to,the,link,org,springframework,transaction,platform,transaction,manager,to,use,with,the,transaction,error,handler;public,void,set,transaction,manager,ref,string,transaction,manager,ref,this,transaction,manager,ref,transaction,manager,ref
ErrorHandlerDefinition -> public void setTransactionManagerRef(String transactionManagerRef);1470907849;References to the {@link org.springframework.transaction.PlatformTransactionManager} to use with the transaction error handler.;public void setTransactionManagerRef(String transactionManagerRef) {_        this.transactionManagerRef = transactionManagerRef__    };references,to,the,link,org,springframework,transaction,platform,transaction,manager,to,use,with,the,transaction,error,handler;public,void,set,transaction,manager,ref,string,transaction,manager,ref,this,transaction,manager,ref,transaction,manager,ref
ErrorHandlerDefinition -> public void setTransactionManagerRef(String transactionManagerRef);1540108161;References to the {@link org.springframework.transaction.PlatformTransactionManager} to use with the transaction error handler.;public void setTransactionManagerRef(String transactionManagerRef) {_        this.transactionManagerRef = transactionManagerRef__    };references,to,the,link,org,springframework,transaction,platform,transaction,manager,to,use,with,the,transaction,error,handler;public,void,set,transaction,manager,ref,string,transaction,manager,ref,this,transaction,manager,ref,transaction,manager,ref
ErrorHandlerDefinition -> public void setTransactionManagerRef(String transactionManagerRef);1547240981;References to the {@link org.springframework.transaction.PlatformTransactionManager} to use with the transaction error handler.;public void setTransactionManagerRef(String transactionManagerRef) {_        this.transactionManagerRef = transactionManagerRef__    };references,to,the,link,org,springframework,transaction,platform,transaction,manager,to,use,with,the,transaction,error,handler;public,void,set,transaction,manager,ref,string,transaction,manager,ref,this,transaction,manager,ref,transaction,manager,ref
ErrorHandlerDefinition -> public void setLogName(String logName);1470848893;Name of the logger to use for the logging error handler;public void setLogName(String logName) {_        this.logName = logName__    };name,of,the,logger,to,use,for,the,logging,error,handler;public,void,set,log,name,string,log,name,this,log,name,log,name
ErrorHandlerDefinition -> public void setLogName(String logName);1470907849;Name of the logger to use for the logging error handler;public void setLogName(String logName) {_        this.logName = logName__    };name,of,the,logger,to,use,for,the,logging,error,handler;public,void,set,log,name,string,log,name,this,log,name,log,name
ErrorHandlerDefinition -> public void setLogName(String logName);1540108161;Name of the logger to use for the logging error handler;public void setLogName(String logName) {_        this.logName = logName__    };name,of,the,logger,to,use,for,the,logging,error,handler;public,void,set,log,name,string,log,name,this,log,name,log,name
ErrorHandlerDefinition -> public void setLogName(String logName);1547240981;Name of the logger to use for the logging error handler;public void setLogName(String logName) {_        this.logName = logName__    };name,of,the,logger,to,use,for,the,logging,error,handler;public,void,set,log,name,string,log,name,this,log,name,log,name
