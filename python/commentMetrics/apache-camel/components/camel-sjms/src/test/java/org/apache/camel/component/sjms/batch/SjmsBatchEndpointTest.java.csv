commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;9;;@BeforeClass public static void setupBroker() {     broker = new EmbeddedActiveMQBroker("localhost").     try {         broker.before().     } catch (Throwable t) {         throw new RuntimeException(t).     } }
false;public,static;0;4;;@AfterClass public static void shutDownBroker() {     broker.after(). }
false;protected;0;20;;@Override protected CamelContext createCamelContext() throws Exception {     SimpleRegistry registry = new SimpleRegistry().     registry.put("aggStrategy", AggregationStrategies.groupedExchange()).     ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory().     connectionFactory.setBrokerURL(broker.getTcpConnectorUri()).     SjmsComponent sjmsComponent = new SjmsComponent().     sjmsComponent.setConnectionFactory(connectionFactory).     SjmsBatchComponent sjmsBatchComponent = new SjmsBatchComponent().     sjmsBatchComponent.setConnectionFactory(connectionFactory).     CamelContext context = new DefaultCamelContext(registry).     context.addComponent("sjms-batch", sjmsBatchComponent).     context.addComponent("sjms", sjmsComponent).     return context. }
false;public;0;4;;@Override public boolean isUseAdviceWith() {     return true. }
false;public;0;3;;public void configure() throws Exception {     from("direct:in").to("sjms-batch:testQueue?aggregationStrategy=#unknown"). }
false;public;0;9;;@Test(expected = FailedToCreateRouteException.class) public void testProducerFailure() throws Exception {     context.addRoutes(new RouteBuilder() {          public void configure() throws Exception {             from("direct:in").to("sjms-batch:testQueue?aggregationStrategy=#unknown").         }     }).     context.start(). }
false;public;0;5;;@Override public void configure() throws Exception {     from("sjms-batch:in?aggregationStrategy=#aggStrategy&pollDuration=-1").to("mock:out"). }
false;public;0;11;;@Test(expected = FailedToCreateRouteException.class) public void testConsumerNegativePollDuration() throws Exception {     context.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("sjms-batch:in?aggregationStrategy=#aggStrategy&pollDuration=-1").to("mock:out").         }     }).     context.start(). }
false;public;0;5;;@Override public void configure() throws Exception {     from("sjms-batch:in?aggregationStrategy=#aggStrategy&consumerCount=-1").to("mock:out"). }
false;public;0;11;;@Test(expected = FailedToCreateRouteException.class) public void testConsumerNegativeConsumerCount() throws Exception {     context.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("sjms-batch:in?aggregationStrategy=#aggStrategy&consumerCount=-1").to("mock:out").         }     }).     context.start(). }
false;public;0;5;;@Override public void configure() throws Exception {     from("sjms-batch:topic:in?aggregationStrategy=#aggStrategy").to("mock:out"). }
false;public;0;11;;@Test(expected = FailedToCreateRouteException.class) public void testConsumerTopic() throws Exception {     context.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("sjms-batch:topic:in?aggregationStrategy=#aggStrategy").to("mock:out").         }     }).     context.start(). }
