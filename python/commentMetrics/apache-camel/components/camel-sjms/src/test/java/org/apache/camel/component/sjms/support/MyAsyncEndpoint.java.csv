commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;public Producer createProducer() throws Exception {     Producer answer = new MyAsyncProducer(this).     if (isSynchronous()) {         // force it to be synchronously         return new SynchronousDelegateProducer(answer).     } else {         return answer.     } }
false;public;1;3;;public Consumer createConsumer(Processor processor) throws Exception {     throw new UnsupportedOperationException("Consumer not supported"). }
false;public;0;3;;public boolean isSingleton() {     return false. }
false;public;0;3;;public String getReply() {     return reply. }
false;public;1;3;;public void setReply(String reply) {     this.reply = reply. }
false;public;0;3;;public long getDelay() {     return delay. }
false;public;1;3;;public void setDelay(long delay) {     this.delay = delay. }
false;public;0;3;;public int getFailFirstAttempts() {     return failFirstAttempts. }
false;public;1;3;;public void setFailFirstAttempts(int failFirstAttempts) {     this.failFirstAttempts = failFirstAttempts. }
