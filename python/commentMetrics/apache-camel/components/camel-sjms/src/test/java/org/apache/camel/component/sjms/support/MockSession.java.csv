commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;public Queue createQueue(String queueName) throws JMSException {     this.checkClosed().     return queueName.startsWith("ID:") ? new ActiveMQTempQueue(queueName) : new ActiveMQQueue(queueName). }
false;public;4;19;;public MessageConsumer createConsumer(Destination destination, String messageSelector, boolean noLocal, MessageListener messageListener) throws JMSException {     this.checkClosed().     if (destination instanceof CustomDestination) {         CustomDestination prefetchPolicy1 = (CustomDestination) destination.         return prefetchPolicy1.createConsumer(this, messageSelector, noLocal).     } else {         ActiveMQPrefetchPolicy prefetchPolicy = this.connection.getPrefetchPolicy().         int prefetch1.         if (destination instanceof Topic) {             prefetch1 = prefetchPolicy.getTopicPrefetch().         } else {             prefetch1 = prefetchPolicy.getQueuePrefetch().         }         ActiveMQDestination activemqDestination = ActiveMQMessageTransformation.transformDestination(destination).         return new MockMessageConsumer(this, this.getNextConsumerId(), activemqDestination, (String) null, messageSelector, prefetch1, prefetchPolicy.getMaximumPendingMessageLimit(), noLocal, false, this.isAsyncDispatch(), messageListener, isBadSession).     } }
