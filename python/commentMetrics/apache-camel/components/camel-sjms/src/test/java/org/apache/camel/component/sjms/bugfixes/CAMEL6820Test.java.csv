commented;modifiers;parameterAmount;loc;comment;code
false;public;0;32;;@Test public void testCamelGenericFileConverterMessage() throws Exception {     File f = new File(TEST_DATA_DIR).     // test that is run against an uncleaned target directory     if (f.exists()) {         FileUtils.deleteDirectory(new File(TEST_DATA_DIR)).     }     // Then add the directory back     f.mkdirs().     // Make sure the SjmsComponent is available     SjmsComponent component = context.getComponent("sjms", SjmsComponent.class).     assertNotNull(component).     // Create the test String     final String expectedBody = "Hello World".     // Create the Mock endpoint     MockEndpoint mock = getMockEndpoint(MOCK_RESULT_URI).     mock.expectedMessageCount(1).     mock.expectedBodiesReceived(expectedBody).     // Send the message to a file to be read by the file component     template.sendBody(FILE_OUTPUT_URI, expectedBody).     // Verify that it is working correctly     mock.assertIsSatisfied(). }
false;public;0;9;;public void configure() throws Exception {     from(FILE_INPUT_URI).convertBodyTo(InputStream.class).to(SJMS_QUEUE_URI).     from(SJMS_QUEUE_URI).convertBodyTo(String.class).to(MOCK_RESULT_URI). }
false;protected;0;13;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from(FILE_INPUT_URI).convertBodyTo(InputStream.class).to(SJMS_QUEUE_URI).             from(SJMS_QUEUE_URI).convertBodyTo(String.class).to(MOCK_RESULT_URI).         }     }. }
