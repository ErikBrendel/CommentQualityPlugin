commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void testSynchronous() throws Exception {     final String expectedBody = "Hello World".     MockEndpoint mock = getMockEndpoint(MOCK_RESULT).     mock.expectedMessageCount(1).     mock.expectedBodiesReceived(expectedBody).     template.sendBody(SJMS_QUEUE_NAME, expectedBody).     mock.assertIsSatisfied(). }
false;public;0;4;;@Override public void configure() throws Exception {     from(SJMS_QUEUE_NAME).to(MOCK_RESULT). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from(SJMS_QUEUE_NAME).to(MOCK_RESULT).         }     }. }
