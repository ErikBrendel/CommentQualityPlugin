commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected boolean useJmx() {     return true. }
false;public;0;5;;@Override public void configure() throws Exception {     from("direct:start").to("sjms:queue:foo").routeId(FROM_ROUTE).     from("sjms:queue:foo").to("log:test.log.1?showBody=true").routeId(TO_ROUTE). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("sjms:queue:foo").routeId(FROM_ROUTE).             from("sjms:queue:foo").to("log:test.log.1?showBody=true").routeId(TO_ROUTE).         }     }. }
true;public;0;5;/**  * Test that only 2 thread pools are created on start  *  * @throws Exception  */ ;/**  * Test that only 2 thread pools are created on start  *  * @throws Exception  */ @Test public void testContextStart() throws Exception {     assertProducerThreadPoolCount(1).     assertConsumerThreadPoolCount(1). }
true;public;0;5;/**  * Test that ThreadPool is removed when producer is removed  * @throws Exception  */ ;/**  * Test that ThreadPool is removed when producer is removed  * @throws Exception  */ @Test public void testProducerThreadThreadPoolRemoved() throws Exception {     context.getRouteController().stopRoute(FROM_ROUTE).     assertProducerThreadPoolCount(0). }
true;public;0;5;/**  * Test that ThreadPool is removed when consumer is removed  * @throws Exception  */ ;/**  * Test that ThreadPool is removed when consumer is removed  * @throws Exception  */ @Test public void testConsumerThreadThreadPoolRemoved() throws Exception {     context.getRouteController().stopRoute(TO_ROUTE).     assertConsumerThreadPoolCount(0). }
false;private;1;3;;private void assertProducerThreadPoolCount(final int count) throws Exception {     assertEquals(count, getMbeanCount("\"InOnlyProducer")). }
false;private;1;3;;private void assertConsumerThreadPoolCount(final int count) throws Exception {     assertEquals(count, getMbeanCount("\"SjmsConsumer")). }
false;private;1;13;;private int getMbeanCount(final String name) throws MalformedObjectNameException {     MBeanServer mbs = ManagementFactory.getPlatformMBeanServer().     Set<ObjectInstance> mbeans = mbs.queryMBeans(new ObjectName("org.apache.camel:type=threadpools,*"), null).     LOGGER.debug("mbeans size: " + mbeans.size()).     int count = 0.     for (ObjectInstance mbean : mbeans) {         LOGGER.debug("mbean: {}", mbean).         if (mbean.getObjectName().getKeyProperty("name").startsWith(name)) {             count++.         }     }     return count. }
