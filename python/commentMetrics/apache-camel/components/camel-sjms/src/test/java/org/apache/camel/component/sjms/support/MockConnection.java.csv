commented;modifiers;parameterAmount;loc;comment;code
false;public;2;22;;public Session createSession(boolean transacted, int acknowledgeMode) throws JMSException {     this.checkClosedOrFailed().     this.ensureConnectionInfoSent().     if (!transacted) {         if (acknowledgeMode == 0) {             throw new JMSException("acknowledgeMode SESSION_TRANSACTED cannot be used for an non-transacted Session").         }         if (acknowledgeMode < 0 || acknowledgeMode > 4) {             throw new JMSException("invalid acknowledgeMode: " + acknowledgeMode + ". Valid values are Session.AUTO_ACKNOWLEDGE (1), Session.CLIENT_ACKNOWLEDGE (2), " + "Session.DUPS_OK_ACKNOWLEDGE (3), ActiveMQSession.INDIVIDUAL_ACKNOWLEDGE (4) or for transacted sessions Session.SESSION_TRANSACTED (0)").         }     }     boolean useBadSession = false.     if (returnBadSessionNTimes > 0) {         useBadSession = true.         returnBadSessionNTimes = returnBadSessionNTimes - 1.     }     return new MockSession(this, this.getNextSessionId(), transacted ? 0 : acknowledgeMode, this.isDispatchAsync(), this.isAlwaysSessionAsync(), useBadSession). }
