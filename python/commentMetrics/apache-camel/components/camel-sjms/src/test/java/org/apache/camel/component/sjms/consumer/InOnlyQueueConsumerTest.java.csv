commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected boolean useJmx() {     return false. }
false;public;0;13;;@Test public void testInOnlyQueueProducer() throws Exception {     final String expectedBody = "Hello World".     MockEndpoint mock = getMockEndpoint("mock:test.done").     mock.expectedMessageCount(1).     mock.expectedBodiesReceived(expectedBody).     template.sendBody(TEST_DESTINATION_NAME, "World").     mock.assertIsSatisfied(). }
false;public;0;6;;public void configure() {     from(TEST_DESTINATION_NAME).transform(body().prepend("Hello ")).to("log:test?showAll=true", "mock:test.done"). }
true;protected;0;11;/**  * @see org.apache.camel.test.junit4.CamelTestSupport#createRouteBuilder()  *  * @return  * @throws Exception  */ ;/**  * @see org.apache.camel.test.junit4.CamelTestSupport#createRouteBuilder()  *  * @return  * @throws Exception  */ @Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() {             from(TEST_DESTINATION_NAME).transform(body().prepend("Hello ")).to("log:test?showAll=true", "mock:test.done").         }     }. }
