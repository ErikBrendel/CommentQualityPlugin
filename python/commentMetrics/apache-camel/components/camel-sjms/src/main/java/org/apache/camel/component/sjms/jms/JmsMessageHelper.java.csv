# id;timestamp;commentText;codeText;commentWords;codeWords
JmsMessageHelper -> public static Object getProperty(Message jmsMessage, String name) throws JMSException;1441617001;Gets a JMS property__@param jmsMessage the JMS message_@param name       name of the property to get_@return the property value, or <tt>null</tt> if does not exists_@throws JMSException can be thrown;public static Object getProperty(Message jmsMessage, String name) throws JMSException {_        Object value = jmsMessage.getObjectProperty(name)__        if (value == null) {_            value = jmsMessage.getStringProperty(name)__        }_        return value__    };gets,a,jms,property,param,jms,message,the,jms,message,param,name,name,of,the,property,to,get,return,the,property,value,or,tt,null,tt,if,does,not,exists,throws,jmsexception,can,be,thrown;public,static,object,get,property,message,jms,message,string,name,throws,jmsexception,object,value,jms,message,get,object,property,name,if,value,null,value,jms,message,get,string,property,name,return,value
JmsMessageHelper -> public static Object getProperty(Message jmsMessage, String name) throws JMSException;1524063178;Gets a JMS property__@param jmsMessage the JMS message_@param name       name of the property to get_@return the property value, or <tt>null</tt> if does not exists_@throws JMSException can be thrown;public static Object getProperty(Message jmsMessage, String name) throws JMSException {_        Object value = jmsMessage.getObjectProperty(name)__        if (value == null) {_            value = jmsMessage.getStringProperty(name)__        }_        return value__    };gets,a,jms,property,param,jms,message,the,jms,message,param,name,name,of,the,property,to,get,return,the,property,value,or,tt,null,tt,if,does,not,exists,throws,jmsexception,can,be,thrown;public,static,object,get,property,message,jms,message,string,name,throws,jmsexception,object,value,jms,message,get,object,property,name,if,value,null,value,jms,message,get,string,property,name,return,value
JmsMessageHelper -> public static Object getProperty(Message jmsMessage, String name) throws JMSException;1537290824;Gets a JMS property__@param jmsMessage the JMS message_@param name       name of the property to get_@return the property value, or <tt>null</tt> if does not exists_@throws JMSException can be thrown;public static Object getProperty(Message jmsMessage, String name) throws JMSException {_        Object value = jmsMessage.getObjectProperty(name)__        if (value == null) {_            value = jmsMessage.getStringProperty(name)__        }_        return value__    };gets,a,jms,property,param,jms,message,the,jms,message,param,name,name,of,the,property,to,get,return,the,property,value,or,tt,null,tt,if,does,not,exists,throws,jmsexception,can,be,thrown;public,static,object,get,property,message,jms,message,string,name,throws,jmsexception,object,value,jms,message,get,object,property,name,if,value,null,value,jms,message,get,string,property,name,return,value
JmsMessageHelper -> public static Object getProperty(Message jmsMessage, String name) throws JMSException;1540108158;Gets a JMS property__@param jmsMessage the JMS message_@param name       name of the property to get_@return the property value, or <tt>null</tt> if does not exists_@throws JMSException can be thrown;public static Object getProperty(Message jmsMessage, String name) throws JMSException {_        Object value = jmsMessage.getObjectProperty(name)__        if (value == null) {_            value = jmsMessage.getStringProperty(name)__        }_        return value__    };gets,a,jms,property,param,jms,message,the,jms,message,param,name,name,of,the,property,to,get,return,the,property,value,or,tt,null,tt,if,does,not,exists,throws,jmsexception,can,be,thrown;public,static,object,get,property,message,jms,message,string,name,throws,jmsexception,object,value,jms,message,get,object,property,name,if,value,null,value,jms,message,get,string,property,name,return,value
JmsMessageHelper -> public static Object getProperty(Message jmsMessage, String name) throws JMSException;1540108163;Gets a JMS property__@param jmsMessage the JMS message_@param name       name of the property to get_@return the property value, or <tt>null</tt> if does not exists_@throws JMSException can be thrown;public static Object getProperty(Message jmsMessage, String name) throws JMSException {_        Object value = jmsMessage.getObjectProperty(name)__        if (value == null) {_            value = jmsMessage.getStringProperty(name)__        }_        return value__    };gets,a,jms,property,param,jms,message,the,jms,message,param,name,name,of,the,property,to,get,return,the,property,value,or,tt,null,tt,if,does,not,exists,throws,jmsexception,can,be,thrown;public,static,object,get,property,message,jms,message,string,name,throws,jmsexception,object,value,jms,message,get,object,property,name,if,value,null,value,jms,message,get,string,property,name,return,value
JmsMessageHelper -> public static String getJMSMessageID(Message message);1441617001;Gets the JMSMessageID from the message.__@param message  the message_@return the JMSMessageID, or <tt>null</tt> if not able to get;public static String getJMSMessageID(Message message) {_        try {_            return message.getJMSMessageID()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsmessage,id,from,the,message,param,message,the,message,return,the,jmsmessage,id,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmsmessage,id,message,message,try,return,message,get,jmsmessage,id,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSMessageID(Message message);1524063178;Gets the JMSMessageID from the message.__@param message  the message_@return the JMSMessageID, or <tt>null</tt> if not able to get;public static String getJMSMessageID(Message message) {_        try {_            return message.getJMSMessageID()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsmessage,id,from,the,message,param,message,the,message,return,the,jmsmessage,id,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmsmessage,id,message,message,try,return,message,get,jmsmessage,id,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSMessageID(Message message);1537290824;Gets the JMSMessageID from the message.__@param message  the message_@return the JMSMessageID, or <tt>null</tt> if not able to get;public static String getJMSMessageID(Message message) {_        try {_            return message.getJMSMessageID()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsmessage,id,from,the,message,param,message,the,message,return,the,jmsmessage,id,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmsmessage,id,message,message,try,return,message,get,jmsmessage,id,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSMessageID(Message message);1540108158;Gets the JMSMessageID from the message.__@param message  the message_@return the JMSMessageID, or <tt>null</tt> if not able to get;public static String getJMSMessageID(Message message) {_        try {_            return message.getJMSMessageID()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsmessage,id,from,the,message,param,message,the,message,return,the,jmsmessage,id,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmsmessage,id,message,message,try,return,message,get,jmsmessage,id,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSMessageID(Message message);1540108163;Gets the JMSMessageID from the message.__@param message  the message_@return the JMSMessageID, or <tt>null</tt> if not able to get;public static String getJMSMessageID(Message message) {_        try {_            return message.getJMSMessageID()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsmessage,id,from,the,message,param,message,the,message,return,the,jmsmessage,id,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmsmessage,id,message,message,try,return,message,get,jmsmessage,id,catch,exception,e,return,null
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1343905000;Sets the JMSReplyTo on the message.__@param message  the message_@param replyTo  the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            if (LOGGER.isDebugEnabled()) {_                LOGGER.debug("Error setting the correlationId: {}", replyTo.toString())__            }_        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e,if,logger,is,debug,enabled,logger,debug,error,setting,the,correlation,id,reply,to,to,string
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1417253476;Sets the JMSReplyTo on the message.__@param message the message_@param replyTo the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            LOGGER.debug("Error setting the correlationId: {}", replyTo.toString())__        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e,logger,debug,error,setting,the,correlation,id,reply,to,to,string
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1417254093;Sets the JMSReplyTo on the message.__@param message the message_@param replyTo the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            LOGGER.debug("Error setting the correlationId: {}", replyTo.toString())__        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e,logger,debug,error,setting,the,correlation,id,reply,to,to,string
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1426413111;Sets the JMSReplyTo on the message.__@param message the message_@param replyTo the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            LOGGER.debug("Error setting the correlationId: {}", replyTo.toString())__        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e,logger,debug,error,setting,the,correlation,id,reply,to,to,string
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1426419511;Sets the JMSReplyTo on the message.__@param message the message_@param replyTo the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            LOGGER.debug("Error setting the correlationId: {}", replyTo.toString())__        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e,logger,debug,error,setting,the,correlation,id,reply,to,to,string
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1426643580;Sets the JMSReplyTo on the message.__@param message the message_@param replyTo the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            LOGGER.debug("Error setting the correlationId: {}", replyTo.toString())__        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e,logger,debug,error,setting,the,correlation,id,reply,to,to,string
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1437137782;Sets the JMSReplyTo on the message.__@param message the message_@param replyTo the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            LOGGER.debug("Error setting the correlationId: {}", replyTo.toString())__        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e,logger,debug,error,setting,the,correlation,id,reply,to,to,string
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1441611090;Sets the JMSReplyTo on the message.__@param message the message_@param replyTo the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            LOG.debug("Error setting the correlationId: {}", replyTo.toString())__        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e,log,debug,error,setting,the,correlation,id,reply,to,to,string
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1441617001;Sets the JMSReplyTo on the message.__@param message  the message_@param replyTo  the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            _        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1524063178;Sets the JMSReplyTo on the message.__@param message  the message_@param replyTo  the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            _        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1537290824;Sets the JMSReplyTo on the message.__@param message  the message_@param replyTo  the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            _        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1540108158;Sets the JMSReplyTo on the message.__@param message  the message_@param replyTo  the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            _        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1540108163;Sets the JMSReplyTo on the message.__@param message  the message_@param replyTo  the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            _        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1343905000;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1346298132;Sets the property on the given JMS message.__@param jmsMessage the JMS message_@param name name of the property to set_@param value the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte)value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean)value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double)value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float)value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer)value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long)value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short)value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String)value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1348673747;Sets the property on the given JMS message.__@param jmsMessage the JMS message_@param name name of the property to set_@param value the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte)value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean)value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double)value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float)value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer)value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long)value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short)value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String)value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1349476580;Sets the property on the given JMS message.__@param jmsMessage the JMS message_@param name name of the property to set_@param value the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte)value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean)value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double)value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float)value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer)value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long)value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short)value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String)value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1351626413;Sets the property on the given JMS message.__@param jmsMessage the JMS message_@param name name of the property to set_@param value the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte)value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean)value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double)value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float)value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer)value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long)value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short)value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String)value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1356513306;Sets the property on the given JMS message.__@param jmsMessage the JMS message_@param name name of the property to set_@param value the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte)value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean)value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double)value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float)value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer)value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long)value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short)value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String)value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1395086292;Sets the property on the given JMS message.__@param jmsMessage the JMS message_@param name name of the property to set_@param value the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte)value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean)value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double)value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float)value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer)value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long)value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short)value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String)value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1415211488;Sets the property on the given JMS message.__@param jmsMessage the JMS message_@param name       name of the property to set_@param value      the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1415517372;Sets the property on the given JMS message.__@param jmsMessage the JMS message_@param name       name of the property to set_@param value      the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1415518065;Sets the property on the given JMS message.__@param jmsMessage the JMS message_@param name       name of the property to set_@param value      the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1415709131;Sets the property on the given JMS message.__@param jmsMessage the JMS message_@param name       name of the property to set_@param value      the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1415709132;Sets the property on the given JMS message.__@param jmsMessage the JMS message_@param name       name of the property to set_@param value      the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1417253476;Sets the property on the given JMS message.__@param jmsMessage the JMS message_@param name       name of the property to set_@param value      the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            jmsMessage.setObjectProperty(name, null)__        } else if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,jms,message,set,object,property,name,null,else,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1417254093;Sets the property on the given JMS message.__@param jmsMessage the JMS message_@param name       name of the property to set_@param value      the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            jmsMessage.setObjectProperty(name, null)__        } else if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,jms,message,set,object,property,name,null,else,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1426413111;Sets the property on the given JMS message.__@param jmsMessage the JMS message_@param name       name of the property to set_@param value      the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            jmsMessage.setObjectProperty(name, null)__        } else if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,jms,message,set,object,property,name,null,else,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1426419511;Sets the property on the given JMS message.__@param jmsMessage the JMS message_@param name       name of the property to set_@param value      the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            jmsMessage.setObjectProperty(name, null)__        } else if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,jms,message,set,object,property,name,null,else,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1426643580;Sets the property on the given JMS message.__@param jmsMessage the JMS message_@param name       name of the property to set_@param value      the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            jmsMessage.setObjectProperty(name, null)__        } else if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,jms,message,set,object,property,name,null,else,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1437137782;Sets the property on the given JMS message.__@param jmsMessage the JMS message_@param name       name of the property to set_@param value      the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            jmsMessage.setObjectProperty(name, null)__        } else if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,jms,message,set,object,property,name,null,else,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1441611090;Sets the property on the given JMS message.__@param jmsMessage the JMS message_@param name       name of the property to set_@param value      the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            jmsMessage.setObjectProperty(name, null)__        } else if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,jms,message,set,object,property,name,null,else,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1441617001;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1524063178;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1537290824;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1540108158;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1540108163;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static String getStringProperty(Message message, String propertyName);1441617001;Gets the String Properties from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getStringProperty(Message message, String propertyName) {_        try {_            return message.getStringProperty(propertyName)__        } catch (Exception e) {_            _        }__        return null__    };gets,the,string,properties,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,string,property,message,message,string,property,name,try,return,message,get,string,property,property,name,catch,exception,e,return,null
JmsMessageHelper -> public static String getStringProperty(Message message, String propertyName);1524063178;Gets the String Properties from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getStringProperty(Message message, String propertyName) {_        try {_            return message.getStringProperty(propertyName)__        } catch (Exception e) {_            _        }__        return null__    };gets,the,string,properties,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,string,property,message,message,string,property,name,try,return,message,get,string,property,property,name,catch,exception,e,return,null
JmsMessageHelper -> public static String getStringProperty(Message message, String propertyName);1537290824;Gets the String Properties from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getStringProperty(Message message, String propertyName) {_        try {_            return message.getStringProperty(propertyName)__        } catch (Exception e) {_            _        }__        return null__    };gets,the,string,properties,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,string,property,message,message,string,property,name,try,return,message,get,string,property,property,name,catch,exception,e,return,null
JmsMessageHelper -> public static String getStringProperty(Message message, String propertyName);1540108158;Gets the String Properties from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getStringProperty(Message message, String propertyName) {_        try {_            return message.getStringProperty(propertyName)__        } catch (Exception e) {_            _        }__        return null__    };gets,the,string,properties,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,string,property,message,message,string,property,name,try,return,message,get,string,property,property,name,catch,exception,e,return,null
JmsMessageHelper -> public static String getStringProperty(Message message, String propertyName);1540108163;Gets the String Properties from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getStringProperty(Message message, String propertyName) {_        try {_            return message.getStringProperty(propertyName)__        } catch (Exception e) {_            _        }__        return null__    };gets,the,string,properties,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,string,property,message,message,string,property,name,try,return,message,get,string,property,property,name,catch,exception,e,return,null
JmsMessageHelper -> public static boolean isTopicPrefix(String destination);1441617001;Whether the destination name has either topic or temp topic prefix.__@param destination the destination_@return <tt>true</tt> if topic or temp-topic prefix, <tt>false</tt> otherwise;public static boolean isTopicPrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(JmsConstants.TOPIC_PREFIX) || destination.startsWith(JmsConstants.TEMP_TOPIC_PREFIX)__    };whether,the,destination,name,has,either,topic,or,temp,topic,prefix,param,destination,the,destination,return,tt,true,tt,if,topic,or,temp,topic,prefix,tt,false,tt,otherwise;public,static,boolean,is,topic,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,jms,constants,destination,starts,with,jms,constants
JmsMessageHelper -> public static boolean isTopicPrefix(String destination);1524063178;Whether the destination name has either topic or temp topic prefix.__@param destination the destination_@return <tt>true</tt> if topic or temp-topic prefix, <tt>false</tt> otherwise;public static boolean isTopicPrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(JmsConstants.TOPIC_PREFIX) || destination.startsWith(JmsConstants.TEMP_TOPIC_PREFIX)__    };whether,the,destination,name,has,either,topic,or,temp,topic,prefix,param,destination,the,destination,return,tt,true,tt,if,topic,or,temp,topic,prefix,tt,false,tt,otherwise;public,static,boolean,is,topic,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,jms,constants,destination,starts,with,jms,constants
JmsMessageHelper -> public static boolean isTopicPrefix(String destination);1537290824;Whether the destination name has either topic or temp topic prefix.__@param destination the destination_@return <tt>true</tt> if topic or temp-topic prefix, <tt>false</tt> otherwise;public static boolean isTopicPrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(JmsConstants.TOPIC_PREFIX) || destination.startsWith(JmsConstants.TEMP_TOPIC_PREFIX)__    };whether,the,destination,name,has,either,topic,or,temp,topic,prefix,param,destination,the,destination,return,tt,true,tt,if,topic,or,temp,topic,prefix,tt,false,tt,otherwise;public,static,boolean,is,topic,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,jms,constants,destination,starts,with,jms,constants
JmsMessageHelper -> public static boolean isTopicPrefix(String destination);1540108158;Whether the destination name has either topic or temp topic prefix.__@param destination the destination_@return <tt>true</tt> if topic or temp-topic prefix, <tt>false</tt> otherwise;public static boolean isTopicPrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(JmsConstants.TOPIC_PREFIX) || destination.startsWith(JmsConstants.TEMP_TOPIC_PREFIX)__    };whether,the,destination,name,has,either,topic,or,temp,topic,prefix,param,destination,the,destination,return,tt,true,tt,if,topic,or,temp,topic,prefix,tt,false,tt,otherwise;public,static,boolean,is,topic,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,jms,constants,destination,starts,with,jms,constants
JmsMessageHelper -> public static boolean isTopicPrefix(String destination);1540108163;Whether the destination name has either topic or temp topic prefix.__@param destination the destination_@return <tt>true</tt> if topic or temp-topic prefix, <tt>false</tt> otherwise;public static boolean isTopicPrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(JmsConstants.TOPIC_PREFIX) || destination.startsWith(JmsConstants.TEMP_TOPIC_PREFIX)__    };whether,the,destination,name,has,either,topic,or,temp,topic,prefix,param,destination,the,destination,return,tt,true,tt,if,topic,or,temp,topic,prefix,tt,false,tt,otherwise;public,static,boolean,is,topic,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,jms,constants,destination,starts,with,jms,constants
JmsMessageHelper -> public static void setMessageType(Message message, String type);1346298132;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message the JMS message_@param type the correlation id;public static void setMessageType(Message message, String type) {_        try {_            message.setJMSType(type)__        } catch (JMSException e) {_            if (LOGGER.isDebugEnabled()) {_                LOGGER.debug("Error setting the message type: {}", type)__            }_        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,type,the,correlation,id;public,static,void,set,message,type,message,message,string,type,try,message,set,jmstype,type,catch,jmsexception,e,if,logger,is,debug,enabled,logger,debug,error,setting,the,message,type,type
JmsMessageHelper -> public static void setMessageType(Message message, String type);1348673747;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message the JMS message_@param type the correlation id;public static void setMessageType(Message message, String type) {_        try {_            message.setJMSType(type)__        } catch (JMSException e) {_            if (LOGGER.isDebugEnabled()) {_                LOGGER.debug("Error setting the message type: {}", type)__            }_        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,type,the,correlation,id;public,static,void,set,message,type,message,message,string,type,try,message,set,jmstype,type,catch,jmsexception,e,if,logger,is,debug,enabled,logger,debug,error,setting,the,message,type,type
JmsMessageHelper -> public static void setMessageType(Message message, String type);1349476580;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message the JMS message_@param type the correlation id;public static void setMessageType(Message message, String type) {_        try {_            message.setJMSType(type)__        } catch (JMSException e) {_            if (LOGGER.isDebugEnabled()) {_                LOGGER.debug("Error setting the message type: {}", type)__            }_        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,type,the,correlation,id;public,static,void,set,message,type,message,message,string,type,try,message,set,jmstype,type,catch,jmsexception,e,if,logger,is,debug,enabled,logger,debug,error,setting,the,message,type,type
JmsMessageHelper -> public static void setMessageType(Message message, String type);1351626413;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message the JMS message_@param type the correlation id;public static void setMessageType(Message message, String type) {_        try {_            message.setJMSType(type)__        } catch (JMSException e) {_            if (LOGGER.isDebugEnabled()) {_                LOGGER.debug("Error setting the message type: {}", type)__            }_        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,type,the,correlation,id;public,static,void,set,message,type,message,message,string,type,try,message,set,jmstype,type,catch,jmsexception,e,if,logger,is,debug,enabled,logger,debug,error,setting,the,message,type,type
JmsMessageHelper -> public static void setMessageType(Message message, String type);1356513306;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message the JMS message_@param type the correlation id;public static void setMessageType(Message message, String type) {_        try {_            message.setJMSType(type)__        } catch (JMSException e) {_            if (LOGGER.isDebugEnabled()) {_                LOGGER.debug("Error setting the message type: {}", type)__            }_        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,type,the,correlation,id;public,static,void,set,message,type,message,message,string,type,try,message,set,jmstype,type,catch,jmsexception,e,if,logger,is,debug,enabled,logger,debug,error,setting,the,message,type,type
JmsMessageHelper -> public static void setMessageType(Message message, String type);1395086292;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message the JMS message_@param type the correlation id;public static void setMessageType(Message message, String type) {_        try {_            message.setJMSType(type)__        } catch (JMSException e) {_            if (LOGGER.isDebugEnabled()) {_                LOGGER.debug("Error setting the message type: {}", type)__            }_        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,type,the,correlation,id;public,static,void,set,message,type,message,message,string,type,try,message,set,jmstype,type,catch,jmsexception,e,if,logger,is,debug,enabled,logger,debug,error,setting,the,message,type,type
JmsMessageHelper -> public static void setMessageType(Message message, String type);1415211488;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message the JMS message_@param type    the correlation id;public static void setMessageType(Message message, String type) {_        try {_            message.setJMSType(type)__        } catch (JMSException e) {_            LOGGER.debug("Error setting the message type: {}", type, e)__        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,type,the,correlation,id;public,static,void,set,message,type,message,message,string,type,try,message,set,jmstype,type,catch,jmsexception,e,logger,debug,error,setting,the,message,type,type,e
JmsMessageHelper -> public static void setMessageType(Message message, String type);1415517372;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message the JMS message_@param type    the correlation id;public static void setMessageType(Message message, String type) {_        try {_            message.setJMSType(type)__        } catch (JMSException e) {_            LOGGER.debug("Error setting the message type: {}", type, e)__        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,type,the,correlation,id;public,static,void,set,message,type,message,message,string,type,try,message,set,jmstype,type,catch,jmsexception,e,logger,debug,error,setting,the,message,type,type,e
JmsMessageHelper -> public static void setMessageType(Message message, String type);1415518065;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message the JMS message_@param type    the correlation id;public static void setMessageType(Message message, String type) {_        try {_            message.setJMSType(type)__        } catch (JMSException e) {_            LOGGER.debug("Error setting the message type: {}", type, e)__        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,type,the,correlation,id;public,static,void,set,message,type,message,message,string,type,try,message,set,jmstype,type,catch,jmsexception,e,logger,debug,error,setting,the,message,type,type,e
JmsMessageHelper -> public static void setMessageType(Message message, String type);1415709131;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message the JMS message_@param type    the correlation id;public static void setMessageType(Message message, String type) {_        try {_            message.setJMSType(type)__        } catch (JMSException e) {_            LOGGER.debug("Error setting the message type: {}", type, e)__        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,type,the,correlation,id;public,static,void,set,message,type,message,message,string,type,try,message,set,jmstype,type,catch,jmsexception,e,logger,debug,error,setting,the,message,type,type,e
JmsMessageHelper -> public static void setMessageType(Message message, String type);1415709132;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message the JMS message_@param type    the correlation id;public static void setMessageType(Message message, String type) {_        try {_            message.setJMSType(type)__        } catch (JMSException e) {_            LOGGER.debug("Error setting the message type: {}", type, e)__        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,type,the,correlation,id;public,static,void,set,message,type,message,message,string,type,try,message,set,jmstype,type,catch,jmsexception,e,logger,debug,error,setting,the,message,type,type,e
JmsMessageHelper -> public static void setMessageType(Message message, String type);1417253476;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message the JMS message_@param type    the correlation id;public static void setMessageType(Message message, String type) {_        try {_            message.setJMSType(type)__        } catch (JMSException e) {_            LOGGER.debug("Error setting the message type: {}", type, e)__        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,type,the,correlation,id;public,static,void,set,message,type,message,message,string,type,try,message,set,jmstype,type,catch,jmsexception,e,logger,debug,error,setting,the,message,type,type,e
JmsMessageHelper -> public static void setMessageType(Message message, String type);1417254093;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message the JMS message_@param type    the correlation id;public static void setMessageType(Message message, String type) {_        try {_            message.setJMSType(type)__        } catch (JMSException e) {_            LOGGER.debug("Error setting the message type: {}", type, e)__        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,type,the,correlation,id;public,static,void,set,message,type,message,message,string,type,try,message,set,jmstype,type,catch,jmsexception,e,logger,debug,error,setting,the,message,type,type,e
JmsMessageHelper -> public static void setMessageType(Message message, String type);1426413111;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message the JMS message_@param type    the correlation id;public static void setMessageType(Message message, String type) {_        try {_            message.setJMSType(type)__        } catch (JMSException e) {_            LOGGER.debug("Error setting the message type: {}", type, e)__        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,type,the,correlation,id;public,static,void,set,message,type,message,message,string,type,try,message,set,jmstype,type,catch,jmsexception,e,logger,debug,error,setting,the,message,type,type,e
JmsMessageHelper -> public static void setMessageType(Message message, String type);1426419511;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message the JMS message_@param type    the correlation id;public static void setMessageType(Message message, String type) {_        try {_            message.setJMSType(type)__        } catch (JMSException e) {_            LOGGER.debug("Error setting the message type: {}", type, e)__        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,type,the,correlation,id;public,static,void,set,message,type,message,message,string,type,try,message,set,jmstype,type,catch,jmsexception,e,logger,debug,error,setting,the,message,type,type,e
JmsMessageHelper -> public static void setMessageType(Message message, String type);1426643580;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message the JMS message_@param type    the correlation id;public static void setMessageType(Message message, String type) {_        try {_            message.setJMSType(type)__        } catch (JMSException e) {_            LOGGER.debug("Error setting the message type: {}", type, e)__        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,type,the,correlation,id;public,static,void,set,message,type,message,message,string,type,try,message,set,jmstype,type,catch,jmsexception,e,logger,debug,error,setting,the,message,type,type,e
JmsMessageHelper -> public static void setMessageType(Message message, String type);1437137782;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message the JMS message_@param type    the correlation id;public static void setMessageType(Message message, String type) {_        try {_            message.setJMSType(type)__        } catch (JMSException e) {_            LOGGER.debug("Error setting the message type: {}", type, e)__        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,type,the,correlation,id;public,static,void,set,message,type,message,message,string,type,try,message,set,jmstype,type,catch,jmsexception,e,logger,debug,error,setting,the,message,type,type,e
JmsMessageHelper -> public static void setMessageType(Message message, String type);1441611090;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message the JMS message_@param type    the correlation id;public static void setMessageType(Message message, String type) {_        try {_            message.setJMSType(type)__        } catch (JMSException e) {_            LOG.debug("Error setting the message type: {}", type, e)__        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,type,the,correlation,id;public,static,void,set,message,type,message,message,string,type,try,message,set,jmstype,type,catch,jmsexception,e,log,debug,error,setting,the,message,type,type,e
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1343905000;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1441617001;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1524063178;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1537290824;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1540108158;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1540108163;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static String normalizeDestinationName(String destination, boolean includePrefix);1441611090;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@param includePrefix whether to include <tt>queue://</tt>, or <tt>topic://</tt> prefix in the normalized destination name_@return the normalized destination;public static String normalizeDestinationName(String destination, boolean includePrefix) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TEMP_QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TEMP_QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = TEMP_QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = TOPIC_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TEMP_TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TEMP_TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = TEMP_TOPIC_PREFIX + "//" + s__            }_            return s__        } else {_            return destination__        }_    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,param,include,prefix,whether,to,include,tt,queue,tt,or,tt,topic,tt,prefix,in,the,normalized,destination,name,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,boolean,include,prefix,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,return,destination
JmsMessageHelper -> public static String normalizeDestinationName(String destination, boolean includePrefix);1441617001;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@param includePrefix whether to include <tt>queue://</tt>, or <tt>topic://</tt> prefix in the normalized destination name_@return the normalized destination;public static String normalizeDestinationName(String destination, boolean includePrefix) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(JmsConstants.QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(JmsConstants.QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = JmsConstants.QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(JmsConstants.TEMP_QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(JmsConstants.TEMP_QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = JmsConstants.TEMP_QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(JmsConstants.TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(JmsConstants.TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = JmsConstants.TOPIC_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(JmsConstants.TEMP_TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(JmsConstants.TEMP_TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = JmsConstants.TEMP_TOPIC_PREFIX + "//" + s__            }_            return s__        } else {_            return destination__        }_    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,param,include,prefix,whether,to,include,tt,queue,tt,or,tt,topic,tt,prefix,in,the,normalized,destination,name,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,boolean,include,prefix,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,jms,constants,string,s,remove,starting,characters,destination,substring,jms,constants,length,if,include,prefix,s,jms,constants,s,return,s,else,if,destination,starts,with,jms,constants,string,s,remove,starting,characters,destination,substring,jms,constants,length,if,include,prefix,s,jms,constants,s,return,s,else,if,destination,starts,with,jms,constants,string,s,remove,starting,characters,destination,substring,jms,constants,length,if,include,prefix,s,jms,constants,s,return,s,else,if,destination,starts,with,jms,constants,string,s,remove,starting,characters,destination,substring,jms,constants,length,if,include,prefix,s,jms,constants,s,return,s,else,return,destination
JmsMessageHelper -> public static String normalizeDestinationName(String destination, boolean includePrefix);1524063178;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@param includePrefix whether to include <tt>queue://</tt>, or <tt>topic://</tt> prefix in the normalized destination name_@return the normalized destination;public static String normalizeDestinationName(String destination, boolean includePrefix) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(JmsConstants.QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(JmsConstants.QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = JmsConstants.QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(JmsConstants.TEMP_QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(JmsConstants.TEMP_QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = JmsConstants.TEMP_QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(JmsConstants.TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(JmsConstants.TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = JmsConstants.TOPIC_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(JmsConstants.TEMP_TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(JmsConstants.TEMP_TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = JmsConstants.TEMP_TOPIC_PREFIX + "//" + s__            }_            return s__        } else {_            return destination__        }_    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,param,include,prefix,whether,to,include,tt,queue,tt,or,tt,topic,tt,prefix,in,the,normalized,destination,name,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,boolean,include,prefix,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,jms,constants,string,s,remove,starting,characters,destination,substring,jms,constants,length,if,include,prefix,s,jms,constants,s,return,s,else,if,destination,starts,with,jms,constants,string,s,remove,starting,characters,destination,substring,jms,constants,length,if,include,prefix,s,jms,constants,s,return,s,else,if,destination,starts,with,jms,constants,string,s,remove,starting,characters,destination,substring,jms,constants,length,if,include,prefix,s,jms,constants,s,return,s,else,if,destination,starts,with,jms,constants,string,s,remove,starting,characters,destination,substring,jms,constants,length,if,include,prefix,s,jms,constants,s,return,s,else,return,destination
JmsMessageHelper -> public static String normalizeDestinationName(String destination, boolean includePrefix);1537290824;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@param includePrefix whether to include <tt>queue://</tt>, or <tt>topic://</tt> prefix in the normalized destination name_@return the normalized destination;public static String normalizeDestinationName(String destination, boolean includePrefix) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(JmsConstants.QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(JmsConstants.QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = JmsConstants.QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(JmsConstants.TEMP_QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(JmsConstants.TEMP_QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = JmsConstants.TEMP_QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(JmsConstants.TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(JmsConstants.TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = JmsConstants.TOPIC_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(JmsConstants.TEMP_TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(JmsConstants.TEMP_TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = JmsConstants.TEMP_TOPIC_PREFIX + "//" + s__            }_            return s__        } else {_            return destination__        }_    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,param,include,prefix,whether,to,include,tt,queue,tt,or,tt,topic,tt,prefix,in,the,normalized,destination,name,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,boolean,include,prefix,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,jms,constants,string,s,remove,starting,characters,destination,substring,jms,constants,length,if,include,prefix,s,jms,constants,s,return,s,else,if,destination,starts,with,jms,constants,string,s,remove,starting,characters,destination,substring,jms,constants,length,if,include,prefix,s,jms,constants,s,return,s,else,if,destination,starts,with,jms,constants,string,s,remove,starting,characters,destination,substring,jms,constants,length,if,include,prefix,s,jms,constants,s,return,s,else,if,destination,starts,with,jms,constants,string,s,remove,starting,characters,destination,substring,jms,constants,length,if,include,prefix,s,jms,constants,s,return,s,else,return,destination
JmsMessageHelper -> public static String normalizeDestinationName(String destination, boolean includePrefix);1540108158;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@param includePrefix whether to include <tt>queue://</tt>, or <tt>topic://</tt> prefix in the normalized destination name_@return the normalized destination;public static String normalizeDestinationName(String destination, boolean includePrefix) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(JmsConstants.QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(JmsConstants.QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = JmsConstants.QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(JmsConstants.TEMP_QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(JmsConstants.TEMP_QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = JmsConstants.TEMP_QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(JmsConstants.TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(JmsConstants.TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = JmsConstants.TOPIC_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(JmsConstants.TEMP_TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(JmsConstants.TEMP_TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = JmsConstants.TEMP_TOPIC_PREFIX + "//" + s__            }_            return s__        } else {_            return destination__        }_    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,param,include,prefix,whether,to,include,tt,queue,tt,or,tt,topic,tt,prefix,in,the,normalized,destination,name,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,boolean,include,prefix,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,jms,constants,string,s,remove,starting,characters,destination,substring,jms,constants,length,if,include,prefix,s,jms,constants,s,return,s,else,if,destination,starts,with,jms,constants,string,s,remove,starting,characters,destination,substring,jms,constants,length,if,include,prefix,s,jms,constants,s,return,s,else,if,destination,starts,with,jms,constants,string,s,remove,starting,characters,destination,substring,jms,constants,length,if,include,prefix,s,jms,constants,s,return,s,else,if,destination,starts,with,jms,constants,string,s,remove,starting,characters,destination,substring,jms,constants,length,if,include,prefix,s,jms,constants,s,return,s,else,return,destination
JmsMessageHelper -> public static String normalizeDestinationName(String destination, boolean includePrefix);1540108163;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@param includePrefix whether to include <tt>queue://</tt>, or <tt>topic://</tt> prefix in the normalized destination name_@return the normalized destination;public static String normalizeDestinationName(String destination, boolean includePrefix) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(JmsConstants.QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(JmsConstants.QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = JmsConstants.QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(JmsConstants.TEMP_QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(JmsConstants.TEMP_QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = JmsConstants.TEMP_QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(JmsConstants.TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(JmsConstants.TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = JmsConstants.TOPIC_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(JmsConstants.TEMP_TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(JmsConstants.TEMP_TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = JmsConstants.TEMP_TOPIC_PREFIX + "//" + s__            }_            return s__        } else {_            return destination__        }_    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,param,include,prefix,whether,to,include,tt,queue,tt,or,tt,topic,tt,prefix,in,the,normalized,destination,name,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,boolean,include,prefix,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,jms,constants,string,s,remove,starting,characters,destination,substring,jms,constants,length,if,include,prefix,s,jms,constants,s,return,s,else,if,destination,starts,with,jms,constants,string,s,remove,starting,characters,destination,substring,jms,constants,length,if,include,prefix,s,jms,constants,s,return,s,else,if,destination,starts,with,jms,constants,string,s,remove,starting,characters,destination,substring,jms,constants,length,if,include,prefix,s,jms,constants,s,return,s,else,if,destination,starts,with,jms,constants,string,s,remove,starting,characters,destination,substring,jms,constants,length,if,include,prefix,s,jms,constants,s,return,s,else,return,destination
JmsMessageHelper -> public static String getJMSCorrelationIDAsBytes(Message message);1441617001;Gets the JMSCorrelationIDAsBytes from the message.__@param message the message_@return the JMSCorrelationIDAsBytes, or <tt>null</tt> if not able to get;public static String getJMSCorrelationIDAsBytes(Message message) {_        try {_            return new String(message.getJMSCorrelationIDAsBytes())__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmscorrelation,idas,bytes,from,the,message,param,message,the,message,return,the,jmscorrelation,idas,bytes,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmscorrelation,idas,bytes,message,message,try,return,new,string,message,get,jmscorrelation,idas,bytes,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSCorrelationIDAsBytes(Message message);1524063178;Gets the JMSCorrelationIDAsBytes from the message.__@param message the message_@return the JMSCorrelationIDAsBytes, or <tt>null</tt> if not able to get;public static String getJMSCorrelationIDAsBytes(Message message) {_        try {_            return new String(message.getJMSCorrelationIDAsBytes())__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmscorrelation,idas,bytes,from,the,message,param,message,the,message,return,the,jmscorrelation,idas,bytes,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmscorrelation,idas,bytes,message,message,try,return,new,string,message,get,jmscorrelation,idas,bytes,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSCorrelationIDAsBytes(Message message);1537290824;Gets the JMSCorrelationIDAsBytes from the message.__@param message the message_@return the JMSCorrelationIDAsBytes, or <tt>null</tt> if not able to get;public static String getJMSCorrelationIDAsBytes(Message message) {_        try {_            return new String(message.getJMSCorrelationIDAsBytes())__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmscorrelation,idas,bytes,from,the,message,param,message,the,message,return,the,jmscorrelation,idas,bytes,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmscorrelation,idas,bytes,message,message,try,return,new,string,message,get,jmscorrelation,idas,bytes,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSCorrelationIDAsBytes(Message message);1540108158;Gets the JMSCorrelationIDAsBytes from the message.__@param message the message_@return the JMSCorrelationIDAsBytes, or <tt>null</tt> if not able to get;public static String getJMSCorrelationIDAsBytes(Message message) {_        try {_            return new String(message.getJMSCorrelationIDAsBytes())__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmscorrelation,idas,bytes,from,the,message,param,message,the,message,return,the,jmscorrelation,idas,bytes,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmscorrelation,idas,bytes,message,message,try,return,new,string,message,get,jmscorrelation,idas,bytes,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSCorrelationIDAsBytes(Message message);1540108163;Gets the JMSCorrelationIDAsBytes from the message.__@param message the message_@return the JMSCorrelationIDAsBytes, or <tt>null</tt> if not able to get;public static String getJMSCorrelationIDAsBytes(Message message) {_        try {_            return new String(message.getJMSCorrelationIDAsBytes())__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmscorrelation,idas,bytes,from,the,message,param,message,the,message,return,the,jmscorrelation,idas,bytes,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmscorrelation,idas,bytes,message,message,try,return,new,string,message,get,jmscorrelation,idas,bytes,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1343905000;Gets the JMSReplyTo from the message.__@param message  the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1417253476;Gets the JMSReplyTo from the message.__@param message the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }_        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1417254093;Gets the JMSReplyTo from the message.__@param message the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }_        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1426413111;Gets the JMSReplyTo from the message.__@param message the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }_        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1426419511;Gets the JMSReplyTo from the message.__@param message the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }_        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1426643580;Gets the JMSReplyTo from the message.__@param message the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }_        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1437137782;Gets the JMSReplyTo from the message.__@param message the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }_        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1441611090;Gets the JMSReplyTo from the message.__@param message the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }_        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1441617001;Gets the JMSReplyTo from the message.__@param message  the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1524063178;Gets the JMSReplyTo from the message.__@param message  the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1537290824;Gets the JMSReplyTo from the message.__@param message  the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1540108158;Gets the JMSReplyTo from the message.__@param message  the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1540108163;Gets the JMSReplyTo from the message.__@param message  the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> private static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException;1417253476;Adds or updates the {@link Message} headers. Header names and values are_checked for JMS 1.1 compliance.__@param jmsMessage        the {@link Message} to add or update the headers on_@param messageHeaders    a {@link Map} of String/Object pairs_@param keyFormatStrategy the a {@link KeyFormatStrategy} to used to_format keys in a JMS 1.1 compliant manner. If null the_{@link DefaultJmsKeyFormatStrategy} will be used._@return {@link Message};private static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException {_        Map<String, Object> headers = new HashMap<>(messageHeaders)__        for (final Map.Entry<String,Object> entry : headers.entrySet()) {_            String headerName = entry.getKey()__            Object headerValue = entry.getValue()___            if (headerName.equalsIgnoreCase(JMS_CORRELATION_ID)) {_                if (headerValue == null) {_                    _                    _                    setCorrelationId(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    setCorrelationId(jmsMessage, (String) headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_CORRELATION_ID + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_REPLY_TO)) {_                if (headerValue instanceof String) {_                    _                    _                    _                } else {_                    _                    _                    _                    _                    _                    _                }_            } else if (headerName.equalsIgnoreCase(JMS_TYPE)) {_                if (headerValue == null) {_                    _                    _                    setMessageType(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    _                    setMessageType(jmsMessage, (String) headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_TYPE + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_PRIORITY)) {_                if (headerValue instanceof Integer) {_                    try {_                        jmsMessage.setJMSPriority((Integer) headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_PRIORITY + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_PRIORITY + " must be a Integer.  Type found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_DELIVERY_MODE)) {_                try {_                    JmsMessageHelper.setJMSDeliveryMode(jmsMessage, headerValue)__                } catch (JMSException e) {_                    throw new IllegalHeaderException("Failed to set the " + JMS_DELIVERY_MODE + " header. Cause: " + e.getLocalizedMessage(), e)__                }_            } else if (headerName.equalsIgnoreCase(JMS_EXPIRATION)) {_                if (headerValue instanceof Long) {_                    try {_                        jmsMessage.setJMSExpiration((Long) headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_EXPIRATION + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_EXPIRATION + " must be a Long.  Type found: " + headerValue.getClass().getName())__                }_            } else {_                LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                if (headerName.equalsIgnoreCase(JMS_DESTINATION) || headerName.equalsIgnoreCase(JMS_MESSAGE_ID) || headerName.equalsIgnoreCase(JMS_TIMESTAMP)_                        || headerName.equalsIgnoreCase(JMS_REDELIVERED)) {_                    _                    _                    _                    _                    _                    _                    LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                } else {_                    if (!(headerValue instanceof JmsMessageType)) {_                        String encodedName = keyFormatStrategy.encodeKey(headerName)__                        try {_                            JmsMessageHelper.setProperty(jmsMessage, encodedName, headerValue)__                        } catch (JMSException e) {_                            throw new IllegalHeaderException("Failed to set the header " + encodedName + " header. Cause: " + e.getLocalizedMessage(), e)__                        }_                    }_                }_            }_        }_        return jmsMessage__    };adds,or,updates,the,link,message,headers,header,names,and,values,are,checked,for,jms,1,1,compliance,param,jms,message,the,link,message,to,add,or,update,the,headers,on,param,message,headers,a,link,map,of,string,object,pairs,param,key,format,strategy,the,a,link,key,format,strategy,to,used,to,format,keys,in,a,jms,1,1,compliant,manner,if,null,the,link,default,jms,key,format,strategy,will,be,used,return,link,message;private,static,message,set,jms,message,headers,final,message,jms,message,map,string,object,message,headers,key,format,strategy,key,format,strategy,throws,illegal,header,exception,map,string,object,headers,new,hash,map,message,headers,for,final,map,entry,string,object,entry,headers,entry,set,string,header,name,entry,get,key,object,header,value,entry,get,value,if,header,name,equals,ignore,case,if,header,value,null,set,correlation,id,jms,message,null,else,if,header,value,instanceof,string,set,correlation,id,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,string,else,else,if,header,name,equals,ignore,case,if,header,value,null,set,message,type,jms,message,null,else,if,header,value,instanceof,string,set,message,type,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,integer,try,jms,message,set,jmspriority,integer,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,integer,type,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,try,jms,message,helper,set,jmsdelivery,mode,jms,message,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,if,header,name,equals,ignore,case,if,header,value,instanceof,long,try,jms,message,set,jmsexpiration,long,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,long,type,found,header,value,get,class,get,name,else,logger,trace,ignoring,jms,header,with,value,header,name,header,value,if,header,name,equals,ignore,case,header,name,equals,ignore,case,header,name,equals,ignore,case,header,name,equals,ignore,case,logger,trace,ignoring,jms,header,with,value,header,name,header,value,else,if,header,value,instanceof,jms,message,type,string,encoded,name,key,format,strategy,encode,key,header,name,try,jms,message,helper,set,property,jms,message,encoded,name,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,encoded,name,header,cause,e,get,localized,message,e,return,jms,message
JmsMessageHelper -> private static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException;1417254093;Adds or updates the {@link Message} headers. Header names and values are_checked for JMS 1.1 compliance.__@param jmsMessage        the {@link Message} to add or update the headers on_@param messageHeaders    a {@link Map} of String/Object pairs_@param keyFormatStrategy the a {@link KeyFormatStrategy} to used to_format keys in a JMS 1.1 compliant manner. If null the_{@link DefaultJmsKeyFormatStrategy} will be used._@return {@link Message};private static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException {_        Map<String, Object> headers = new HashMap<String, Object>(messageHeaders)__        for (final Map.Entry<String, Object> entry : headers.entrySet()) {_            String headerName = entry.getKey()__            Object headerValue = entry.getValue()___            if (headerName.equalsIgnoreCase(JMS_CORRELATION_ID)) {_                if (headerValue == null) {_                    _                    _                    setCorrelationId(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    setCorrelationId(jmsMessage, (String) headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_CORRELATION_ID + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_REPLY_TO)) {_                if (headerValue instanceof String) {_                    _                    _                    _                } else {_                    _                    _                    _                    _                    _                    _                }_            } else if (headerName.equalsIgnoreCase(JMS_TYPE)) {_                if (headerValue == null) {_                    _                    _                    setMessageType(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    _                    setMessageType(jmsMessage, (String) headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_TYPE + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_PRIORITY)) {_                if (headerValue instanceof Integer) {_                    try {_                        jmsMessage.setJMSPriority((Integer) headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_PRIORITY + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_PRIORITY + " must be a Integer.  Type found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_DELIVERY_MODE)) {_                try {_                    JmsMessageHelper.setJMSDeliveryMode(jmsMessage, headerValue)__                } catch (JMSException e) {_                    throw new IllegalHeaderException("Failed to set the " + JMS_DELIVERY_MODE + " header. Cause: " + e.getLocalizedMessage(), e)__                }_            } else if (headerName.equalsIgnoreCase(JMS_EXPIRATION)) {_                if (headerValue instanceof Long) {_                    try {_                        jmsMessage.setJMSExpiration((Long) headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_EXPIRATION + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_EXPIRATION + " must be a Long.  Type found: " + headerValue.getClass().getName())__                }_            } else {_                LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                if (headerName.equalsIgnoreCase(JMS_DESTINATION) || headerName.equalsIgnoreCase(JMS_MESSAGE_ID) || headerName.equalsIgnoreCase(JMS_TIMESTAMP)_                        || headerName.equalsIgnoreCase(JMS_REDELIVERED)) {_                    _                    _                    _                    _                    _                    _                    LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                } else {_                    if (!(headerValue instanceof JmsMessageType)) {_                        String encodedName = keyFormatStrategy.encodeKey(headerName)__                        try {_                            JmsMessageHelper.setProperty(jmsMessage, encodedName, headerValue)__                        } catch (JMSException e) {_                            throw new IllegalHeaderException("Failed to set the header " + encodedName + " header. Cause: " + e.getLocalizedMessage(), e)__                        }_                    }_                }_            }_        }_        return jmsMessage__    };adds,or,updates,the,link,message,headers,header,names,and,values,are,checked,for,jms,1,1,compliance,param,jms,message,the,link,message,to,add,or,update,the,headers,on,param,message,headers,a,link,map,of,string,object,pairs,param,key,format,strategy,the,a,link,key,format,strategy,to,used,to,format,keys,in,a,jms,1,1,compliant,manner,if,null,the,link,default,jms,key,format,strategy,will,be,used,return,link,message;private,static,message,set,jms,message,headers,final,message,jms,message,map,string,object,message,headers,key,format,strategy,key,format,strategy,throws,illegal,header,exception,map,string,object,headers,new,hash,map,string,object,message,headers,for,final,map,entry,string,object,entry,headers,entry,set,string,header,name,entry,get,key,object,header,value,entry,get,value,if,header,name,equals,ignore,case,if,header,value,null,set,correlation,id,jms,message,null,else,if,header,value,instanceof,string,set,correlation,id,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,string,else,else,if,header,name,equals,ignore,case,if,header,value,null,set,message,type,jms,message,null,else,if,header,value,instanceof,string,set,message,type,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,integer,try,jms,message,set,jmspriority,integer,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,integer,type,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,try,jms,message,helper,set,jmsdelivery,mode,jms,message,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,if,header,name,equals,ignore,case,if,header,value,instanceof,long,try,jms,message,set,jmsexpiration,long,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,long,type,found,header,value,get,class,get,name,else,logger,trace,ignoring,jms,header,with,value,header,name,header,value,if,header,name,equals,ignore,case,header,name,equals,ignore,case,header,name,equals,ignore,case,header,name,equals,ignore,case,logger,trace,ignoring,jms,header,with,value,header,name,header,value,else,if,header,value,instanceof,jms,message,type,string,encoded,name,key,format,strategy,encode,key,header,name,try,jms,message,helper,set,property,jms,message,encoded,name,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,encoded,name,header,cause,e,get,localized,message,e,return,jms,message
JmsMessageHelper -> private static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException;1426413111;Adds or updates the {@link Message} headers. Header names and values are_checked for JMS 1.1 compliance.__@param jmsMessage        the {@link Message} to add or update the headers on_@param messageHeaders    a {@link Map} of String/Object pairs_@param keyFormatStrategy the a {@link KeyFormatStrategy} to used to_format keys in a JMS 1.1 compliant manner. If null the_{@link DefaultJmsKeyFormatStrategy} will be used._@return {@link Message};private static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException {_        Map<String, Object> headers = new HashMap<String, Object>(messageHeaders)__        for (final Map.Entry<String, Object> entry : headers.entrySet()) {_            String headerName = entry.getKey()__            Object headerValue = entry.getValue()___            if (headerName.equalsIgnoreCase(JMS_CORRELATION_ID)) {_                if (headerValue == null) {_                    _                    _                    setCorrelationId(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    setCorrelationId(jmsMessage, (String) headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_CORRELATION_ID + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_REPLY_TO)) {_                if (headerValue instanceof String) {_                    _                    _                    _                } else {_                    _                    _                    _                    _                    _                    _                }_            } else if (headerName.equalsIgnoreCase(JMS_TYPE)) {_                if (headerValue == null) {_                    _                    _                    setMessageType(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    _                    setMessageType(jmsMessage, (String) headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_TYPE + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_PRIORITY)) {_                if (headerValue instanceof Integer) {_                    try {_                        jmsMessage.setJMSPriority((Integer) headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_PRIORITY + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_PRIORITY + " must be a Integer.  Type found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_DELIVERY_MODE)) {_                try {_                    JmsMessageHelper.setJMSDeliveryMode(jmsMessage, headerValue)__                } catch (JMSException e) {_                    throw new IllegalHeaderException("Failed to set the " + JMS_DELIVERY_MODE + " header. Cause: " + e.getLocalizedMessage(), e)__                }_            } else if (headerName.equalsIgnoreCase(JMS_EXPIRATION)) {_                if (headerValue instanceof Long) {_                    try {_                        jmsMessage.setJMSExpiration((Long) headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_EXPIRATION + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_EXPIRATION + " must be a Long.  Type found: " + headerValue.getClass().getName())__                }_            } else {_                LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                if (headerName.equalsIgnoreCase(JMS_DESTINATION) || headerName.equalsIgnoreCase(JMS_MESSAGE_ID) || headerName.equalsIgnoreCase(JMS_TIMESTAMP)_                        || headerName.equalsIgnoreCase(JMS_REDELIVERED)) {_                    _                    _                    _                    _                    _                    _                    LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                } else {_                    if (!(headerValue instanceof JmsMessageType)) {_                        String encodedName = keyFormatStrategy.encodeKey(headerName)__                        try {_                            JmsMessageHelper.setProperty(jmsMessage, encodedName, headerValue)__                        } catch (JMSException e) {_                            throw new IllegalHeaderException("Failed to set the header " + encodedName + " header. Cause: " + e.getLocalizedMessage(), e)__                        }_                    }_                }_            }_        }_        return jmsMessage__    };adds,or,updates,the,link,message,headers,header,names,and,values,are,checked,for,jms,1,1,compliance,param,jms,message,the,link,message,to,add,or,update,the,headers,on,param,message,headers,a,link,map,of,string,object,pairs,param,key,format,strategy,the,a,link,key,format,strategy,to,used,to,format,keys,in,a,jms,1,1,compliant,manner,if,null,the,link,default,jms,key,format,strategy,will,be,used,return,link,message;private,static,message,set,jms,message,headers,final,message,jms,message,map,string,object,message,headers,key,format,strategy,key,format,strategy,throws,illegal,header,exception,map,string,object,headers,new,hash,map,string,object,message,headers,for,final,map,entry,string,object,entry,headers,entry,set,string,header,name,entry,get,key,object,header,value,entry,get,value,if,header,name,equals,ignore,case,if,header,value,null,set,correlation,id,jms,message,null,else,if,header,value,instanceof,string,set,correlation,id,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,string,else,else,if,header,name,equals,ignore,case,if,header,value,null,set,message,type,jms,message,null,else,if,header,value,instanceof,string,set,message,type,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,integer,try,jms,message,set,jmspriority,integer,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,integer,type,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,try,jms,message,helper,set,jmsdelivery,mode,jms,message,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,if,header,name,equals,ignore,case,if,header,value,instanceof,long,try,jms,message,set,jmsexpiration,long,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,long,type,found,header,value,get,class,get,name,else,logger,trace,ignoring,jms,header,with,value,header,name,header,value,if,header,name,equals,ignore,case,header,name,equals,ignore,case,header,name,equals,ignore,case,header,name,equals,ignore,case,logger,trace,ignoring,jms,header,with,value,header,name,header,value,else,if,header,value,instanceof,jms,message,type,string,encoded,name,key,format,strategy,encode,key,header,name,try,jms,message,helper,set,property,jms,message,encoded,name,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,encoded,name,header,cause,e,get,localized,message,e,return,jms,message
JmsMessageHelper -> private static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException;1426419511;Adds or updates the {@link Message} headers. Header names and values are_checked for JMS 1.1 compliance.__@param jmsMessage        the {@link Message} to add or update the headers on_@param messageHeaders    a {@link Map} of String/Object pairs_@param keyFormatStrategy the a {@link KeyFormatStrategy} to used to_format keys in a JMS 1.1 compliant manner. If null the_{@link DefaultJmsKeyFormatStrategy} will be used._@return {@link Message};private static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException {_        Map<String, Object> headers = new HashMap<String, Object>(messageHeaders)__        for (final Map.Entry<String, Object> entry : headers.entrySet()) {_            String headerName = entry.getKey()__            Object headerValue = entry.getValue()___            if (headerName.equalsIgnoreCase(JMS_CORRELATION_ID)) {_                if (headerValue == null) {_                    _                    _                    setCorrelationId(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    setCorrelationId(jmsMessage, (String) headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_CORRELATION_ID + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_REPLY_TO)) {_                if (headerValue instanceof String) {_                    _                    _                    _                } else {_                    _                    _                    _                    _                    _                    _                }_            } else if (headerName.equalsIgnoreCase(JMS_TYPE)) {_                if (headerValue == null) {_                    _                    _                    setMessageType(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    _                    setMessageType(jmsMessage, (String) headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_TYPE + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_PRIORITY)) {_                if (headerValue instanceof Integer) {_                    try {_                        jmsMessage.setJMSPriority((Integer) headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_PRIORITY + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_PRIORITY + " must be a Integer.  Type found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_DELIVERY_MODE)) {_                try {_                    JmsMessageHelper.setJMSDeliveryMode(jmsMessage, headerValue)__                } catch (JMSException e) {_                    throw new IllegalHeaderException("Failed to set the " + JMS_DELIVERY_MODE + " header. Cause: " + e.getLocalizedMessage(), e)__                }_            } else if (headerName.equalsIgnoreCase(JMS_EXPIRATION)) {_                if (headerValue instanceof Long) {_                    try {_                        jmsMessage.setJMSExpiration((Long) headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_EXPIRATION + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_EXPIRATION + " must be a Long.  Type found: " + headerValue.getClass().getName())__                }_            } else {_                LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                if (headerName.equalsIgnoreCase(JMS_DESTINATION) || headerName.equalsIgnoreCase(JMS_MESSAGE_ID) || headerName.equalsIgnoreCase(JMS_TIMESTAMP)_                        || headerName.equalsIgnoreCase(JMS_REDELIVERED)) {_                    _                    _                    _                    _                    _                    _                    LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                } else {_                    if (!(headerValue instanceof JmsMessageType)) {_                        String encodedName = keyFormatStrategy.encodeKey(headerName)__                        try {_                            JmsMessageHelper.setProperty(jmsMessage, encodedName, headerValue)__                        } catch (JMSException e) {_                            throw new IllegalHeaderException("Failed to set the header " + encodedName + " header. Cause: " + e.getLocalizedMessage(), e)__                        }_                    }_                }_            }_        }_        return jmsMessage__    };adds,or,updates,the,link,message,headers,header,names,and,values,are,checked,for,jms,1,1,compliance,param,jms,message,the,link,message,to,add,or,update,the,headers,on,param,message,headers,a,link,map,of,string,object,pairs,param,key,format,strategy,the,a,link,key,format,strategy,to,used,to,format,keys,in,a,jms,1,1,compliant,manner,if,null,the,link,default,jms,key,format,strategy,will,be,used,return,link,message;private,static,message,set,jms,message,headers,final,message,jms,message,map,string,object,message,headers,key,format,strategy,key,format,strategy,throws,illegal,header,exception,map,string,object,headers,new,hash,map,string,object,message,headers,for,final,map,entry,string,object,entry,headers,entry,set,string,header,name,entry,get,key,object,header,value,entry,get,value,if,header,name,equals,ignore,case,if,header,value,null,set,correlation,id,jms,message,null,else,if,header,value,instanceof,string,set,correlation,id,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,string,else,else,if,header,name,equals,ignore,case,if,header,value,null,set,message,type,jms,message,null,else,if,header,value,instanceof,string,set,message,type,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,integer,try,jms,message,set,jmspriority,integer,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,integer,type,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,try,jms,message,helper,set,jmsdelivery,mode,jms,message,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,if,header,name,equals,ignore,case,if,header,value,instanceof,long,try,jms,message,set,jmsexpiration,long,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,long,type,found,header,value,get,class,get,name,else,logger,trace,ignoring,jms,header,with,value,header,name,header,value,if,header,name,equals,ignore,case,header,name,equals,ignore,case,header,name,equals,ignore,case,header,name,equals,ignore,case,logger,trace,ignoring,jms,header,with,value,header,name,header,value,else,if,header,value,instanceof,jms,message,type,string,encoded,name,key,format,strategy,encode,key,header,name,try,jms,message,helper,set,property,jms,message,encoded,name,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,encoded,name,header,cause,e,get,localized,message,e,return,jms,message
JmsMessageHelper -> private static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException;1426643580;Adds or updates the {@link Message} headers. Header names and values are_checked for JMS 1.1 compliance.__@param jmsMessage        the {@link Message} to add or update the headers on_@param messageHeaders    a {@link Map} of String/Object pairs_@param keyFormatStrategy the a {@link KeyFormatStrategy} to used to_format keys in a JMS 1.1 compliant manner. If null the_{@link DefaultJmsKeyFormatStrategy} will be used._@return {@link Message};private static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException {_        Map<String, Object> headers = new HashMap<String, Object>(messageHeaders)__        for (final Map.Entry<String, Object> entry : headers.entrySet()) {_            String headerName = entry.getKey()__            Object headerValue = entry.getValue()___            if (headerName.equalsIgnoreCase(JMS_CORRELATION_ID)) {_                if (headerValue == null) {_                    _                    _                    setCorrelationId(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    setCorrelationId(jmsMessage, (String) headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_CORRELATION_ID + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_REPLY_TO)) {_                if (headerValue instanceof String) {_                    _                    _                    _                } else {_                    _                    _                    _                    _                    _                    _                }_            } else if (headerName.equalsIgnoreCase(JMS_TYPE)) {_                if (headerValue == null) {_                    _                    _                    setMessageType(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    _                    setMessageType(jmsMessage, (String) headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_TYPE + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_PRIORITY)) {_                if (headerValue instanceof Integer) {_                    try {_                        jmsMessage.setJMSPriority((Integer) headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_PRIORITY + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_PRIORITY + " must be a Integer.  Type found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_DELIVERY_MODE)) {_                try {_                    JmsMessageHelper.setJMSDeliveryMode(jmsMessage, headerValue)__                } catch (JMSException e) {_                    throw new IllegalHeaderException("Failed to set the " + JMS_DELIVERY_MODE + " header. Cause: " + e.getLocalizedMessage(), e)__                }_            } else if (headerName.equalsIgnoreCase(JMS_EXPIRATION)) {_                if (headerValue instanceof Long) {_                    try {_                        jmsMessage.setJMSExpiration((Long) headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_EXPIRATION + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_EXPIRATION + " must be a Long.  Type found: " + headerValue.getClass().getName())__                }_            } else {_                LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                if (headerName.equalsIgnoreCase(JMS_DESTINATION) || headerName.equalsIgnoreCase(JMS_MESSAGE_ID) || headerName.equalsIgnoreCase(JMS_TIMESTAMP)_                        || headerName.equalsIgnoreCase(JMS_REDELIVERED)) {_                    _                    _                    _                    _                    _                    _                    LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                } else {_                    if (!(headerValue instanceof JmsMessageType)) {_                        String encodedName = keyFormatStrategy.encodeKey(headerName)__                        try {_                            JmsMessageHelper.setProperty(jmsMessage, encodedName, headerValue)__                        } catch (JMSException e) {_                            throw new IllegalHeaderException("Failed to set the header " + encodedName + " header. Cause: " + e.getLocalizedMessage(), e)__                        }_                    }_                }_            }_        }_        return jmsMessage__    };adds,or,updates,the,link,message,headers,header,names,and,values,are,checked,for,jms,1,1,compliance,param,jms,message,the,link,message,to,add,or,update,the,headers,on,param,message,headers,a,link,map,of,string,object,pairs,param,key,format,strategy,the,a,link,key,format,strategy,to,used,to,format,keys,in,a,jms,1,1,compliant,manner,if,null,the,link,default,jms,key,format,strategy,will,be,used,return,link,message;private,static,message,set,jms,message,headers,final,message,jms,message,map,string,object,message,headers,key,format,strategy,key,format,strategy,throws,illegal,header,exception,map,string,object,headers,new,hash,map,string,object,message,headers,for,final,map,entry,string,object,entry,headers,entry,set,string,header,name,entry,get,key,object,header,value,entry,get,value,if,header,name,equals,ignore,case,if,header,value,null,set,correlation,id,jms,message,null,else,if,header,value,instanceof,string,set,correlation,id,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,string,else,else,if,header,name,equals,ignore,case,if,header,value,null,set,message,type,jms,message,null,else,if,header,value,instanceof,string,set,message,type,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,integer,try,jms,message,set,jmspriority,integer,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,integer,type,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,try,jms,message,helper,set,jmsdelivery,mode,jms,message,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,if,header,name,equals,ignore,case,if,header,value,instanceof,long,try,jms,message,set,jmsexpiration,long,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,long,type,found,header,value,get,class,get,name,else,logger,trace,ignoring,jms,header,with,value,header,name,header,value,if,header,name,equals,ignore,case,header,name,equals,ignore,case,header,name,equals,ignore,case,header,name,equals,ignore,case,logger,trace,ignoring,jms,header,with,value,header,name,header,value,else,if,header,value,instanceof,jms,message,type,string,encoded,name,key,format,strategy,encode,key,header,name,try,jms,message,helper,set,property,jms,message,encoded,name,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,encoded,name,header,cause,e,get,localized,message,e,return,jms,message
JmsMessageHelper -> private static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException;1437137782;Adds or updates the {@link Message} headers. Header names and values are_checked for JMS 1.1 compliance.__@param jmsMessage        the {@link Message} to add or update the headers on_@param messageHeaders    a {@link Map} of String/Object pairs_@param keyFormatStrategy the a {@link KeyFormatStrategy} to used to_format keys in a JMS 1.1 compliant manner._@return {@link Message};private static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException {__        Map<String, Object> headers = new HashMap<String, Object>(messageHeaders)__        for (final Map.Entry<String, Object> entry : headers.entrySet()) {_            String headerName = entry.getKey()__            Object headerValue = entry.getValue()___            if (headerName.equalsIgnoreCase(JMS_CORRELATION_ID)) {_                if (headerValue == null) {_                    _                    _                    setCorrelationId(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    setCorrelationId(jmsMessage, (String) headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_CORRELATION_ID + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_REPLY_TO)) {_                if (headerValue instanceof String) {_                    _                    _                    _                } else {_                    _                    _                    _                    _                    _                    _                }_            } else if (headerName.equalsIgnoreCase(JMS_TYPE)) {_                if (headerValue == null) {_                    _                    _                    setMessageType(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    _                    setMessageType(jmsMessage, (String) headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_TYPE + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_PRIORITY)) {_                if (headerValue instanceof Integer) {_                    try {_                        jmsMessage.setJMSPriority((Integer) headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_PRIORITY + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_PRIORITY + " must be a Integer.  Type found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_DELIVERY_MODE)) {_                try {_                    JmsMessageHelper.setJMSDeliveryMode(jmsMessage, headerValue)__                } catch (JMSException e) {_                    throw new IllegalHeaderException("Failed to set the " + JMS_DELIVERY_MODE + " header. Cause: " + e.getLocalizedMessage(), e)__                }_            } else if (headerName.equalsIgnoreCase(JMS_EXPIRATION)) {_                if (headerValue instanceof Long) {_                    try {_                        jmsMessage.setJMSExpiration((Long) headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_EXPIRATION + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_EXPIRATION + " must be a Long.  Type found: " + headerValue.getClass().getName())__                }_            } else {_                LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                if (headerName.equalsIgnoreCase(JMS_DESTINATION) || headerName.equalsIgnoreCase(JMS_MESSAGE_ID) || headerName.equalsIgnoreCase(JMS_TIMESTAMP)_                        || headerName.equalsIgnoreCase(JMS_REDELIVERED)) {_                    _                    _                    _                    _                    _                    _                    LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                } else {_                    if (!(headerValue instanceof JmsMessageType)) {_                        String encodedName = keyFormatStrategy.encodeKey(headerName)__                        try {_                            JmsMessageHelper.setProperty(jmsMessage, encodedName, headerValue)__                        } catch (JMSException e) {_                            throw new IllegalHeaderException("Failed to set the header " + encodedName + " header. Cause: " + e.getLocalizedMessage(), e)__                        }_                    }_                }_            }_        }_        return jmsMessage__    };adds,or,updates,the,link,message,headers,header,names,and,values,are,checked,for,jms,1,1,compliance,param,jms,message,the,link,message,to,add,or,update,the,headers,on,param,message,headers,a,link,map,of,string,object,pairs,param,key,format,strategy,the,a,link,key,format,strategy,to,used,to,format,keys,in,a,jms,1,1,compliant,manner,return,link,message;private,static,message,set,jms,message,headers,final,message,jms,message,map,string,object,message,headers,key,format,strategy,key,format,strategy,throws,illegal,header,exception,map,string,object,headers,new,hash,map,string,object,message,headers,for,final,map,entry,string,object,entry,headers,entry,set,string,header,name,entry,get,key,object,header,value,entry,get,value,if,header,name,equals,ignore,case,if,header,value,null,set,correlation,id,jms,message,null,else,if,header,value,instanceof,string,set,correlation,id,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,string,else,else,if,header,name,equals,ignore,case,if,header,value,null,set,message,type,jms,message,null,else,if,header,value,instanceof,string,set,message,type,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,integer,try,jms,message,set,jmspriority,integer,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,integer,type,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,try,jms,message,helper,set,jmsdelivery,mode,jms,message,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,if,header,name,equals,ignore,case,if,header,value,instanceof,long,try,jms,message,set,jmsexpiration,long,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,long,type,found,header,value,get,class,get,name,else,logger,trace,ignoring,jms,header,with,value,header,name,header,value,if,header,name,equals,ignore,case,header,name,equals,ignore,case,header,name,equals,ignore,case,header,name,equals,ignore,case,logger,trace,ignoring,jms,header,with,value,header,name,header,value,else,if,header,value,instanceof,jms,message,type,string,encoded,name,key,format,strategy,encode,key,header,name,try,jms,message,helper,set,property,jms,message,encoded,name,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,encoded,name,header,cause,e,get,localized,message,e,return,jms,message
JmsMessageHelper -> public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException;1346298132;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message the message_@param deliveryMode the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery_mode;public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String)deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = null__                try {_                    value = Integer.valueOf(s)__                } catch (NumberFormatException e) {_                    _                }_                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else if (deliveryMode instanceof Integer) {_            _            mode = (Integer)deliveryMode__        } else {_            throw new IllegalArgumentException("Unable to convert the given delivery mode of type " + deliveryMode.getClass().getName() + " with value: " + deliveryMode)__        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,null,try,value,integer,value,of,s,catch,number,format,exception,e,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,if,delivery,mode,instanceof,integer,mode,integer,delivery,mode,else,throw,new,illegal,argument,exception,unable,to,convert,the,given,delivery,mode,of,type,delivery,mode,get,class,get,name,with,value,delivery,mode,if,mode,null,message,set,jmsdelivery,mode,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException;1348673747;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message the message_@param deliveryMode the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery_mode;public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String)deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = null__                try {_                    value = Integer.valueOf(s)__                } catch (NumberFormatException e) {_                    _                }_                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else if (deliveryMode instanceof Integer) {_            _            mode = (Integer)deliveryMode__        } else {_            throw new IllegalArgumentException("Unable to convert the given delivery mode of type " + deliveryMode.getClass().getName() + " with value: " + deliveryMode)__        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,null,try,value,integer,value,of,s,catch,number,format,exception,e,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,if,delivery,mode,instanceof,integer,mode,integer,delivery,mode,else,throw,new,illegal,argument,exception,unable,to,convert,the,given,delivery,mode,of,type,delivery,mode,get,class,get,name,with,value,delivery,mode,if,mode,null,message,set,jmsdelivery,mode,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException;1349476580;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message the message_@param deliveryMode the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery_mode;public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String)deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = null__                try {_                    value = Integer.valueOf(s)__                } catch (NumberFormatException e) {_                    _                }_                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else if (deliveryMode instanceof Integer) {_            _            mode = (Integer)deliveryMode__        } else {_            throw new IllegalArgumentException("Unable to convert the given delivery mode of type " + deliveryMode.getClass().getName() + " with value: " + deliveryMode)__        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,null,try,value,integer,value,of,s,catch,number,format,exception,e,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,if,delivery,mode,instanceof,integer,mode,integer,delivery,mode,else,throw,new,illegal,argument,exception,unable,to,convert,the,given,delivery,mode,of,type,delivery,mode,get,class,get,name,with,value,delivery,mode,if,mode,null,message,set,jmsdelivery,mode,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException;1351626413;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message the message_@param deliveryMode the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery_mode;public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String)deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = null__                try {_                    value = Integer.valueOf(s)__                } catch (NumberFormatException e) {_                    _                }_                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else if (deliveryMode instanceof Integer) {_            _            mode = (Integer)deliveryMode__        } else {_            throw new IllegalArgumentException("Unable to convert the given delivery mode of type " + deliveryMode.getClass().getName() + " with value: " + deliveryMode)__        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,null,try,value,integer,value,of,s,catch,number,format,exception,e,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,if,delivery,mode,instanceof,integer,mode,integer,delivery,mode,else,throw,new,illegal,argument,exception,unable,to,convert,the,given,delivery,mode,of,type,delivery,mode,get,class,get,name,with,value,delivery,mode,if,mode,null,message,set,jmsdelivery,mode,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException;1356513306;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message the message_@param deliveryMode the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery_mode;public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String)deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = null__                try {_                    value = Integer.valueOf(s)__                } catch (NumberFormatException e) {_                    _                }_                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else if (deliveryMode instanceof Integer) {_            _            mode = (Integer)deliveryMode__        } else {_            throw new IllegalArgumentException("Unable to convert the given delivery mode of type " + deliveryMode.getClass().getName() + " with value: " + deliveryMode)__        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,null,try,value,integer,value,of,s,catch,number,format,exception,e,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,if,delivery,mode,instanceof,integer,mode,integer,delivery,mode,else,throw,new,illegal,argument,exception,unable,to,convert,the,given,delivery,mode,of,type,delivery,mode,get,class,get,name,with,value,delivery,mode,if,mode,null,message,set,jmsdelivery,mode,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException;1395086292;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message the message_@param deliveryMode the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery_mode;public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String)deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = null__                try {_                    value = Integer.valueOf(s)__                } catch (NumberFormatException e) {_                    _                }_                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else if (deliveryMode instanceof Integer) {_            _            mode = (Integer)deliveryMode__        } else {_            throw new IllegalArgumentException("Unable to convert the given delivery mode of type " + deliveryMode.getClass().getName() + " with value: " + deliveryMode)__        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,null,try,value,integer,value,of,s,catch,number,format,exception,e,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,if,delivery,mode,instanceof,integer,mode,integer,delivery,mode,else,throw,new,illegal,argument,exception,unable,to,convert,the,given,delivery,mode,of,type,delivery,mode,get,class,get,name,with,value,delivery,mode,if,mode,null,message,set,jmsdelivery,mode,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException;1415211488;Sets the JMSDeliveryMode on the message.__@param exchange     the exchange_@param message      the message_@param deliveryMode the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery_mode;public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = null__                try {_                    value = Integer.valueOf(s)__                } catch (NumberFormatException e) {_                    _                }_                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else if (deliveryMode instanceof Integer) {_            _            mode = (Integer) deliveryMode__        } else {_            throw new IllegalArgumentException("Unable to convert the given delivery mode of type " + deliveryMode.getClass().getName() + " with value: " + deliveryMode)__        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,null,try,value,integer,value,of,s,catch,number,format,exception,e,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,if,delivery,mode,instanceof,integer,mode,integer,delivery,mode,else,throw,new,illegal,argument,exception,unable,to,convert,the,given,delivery,mode,of,type,delivery,mode,get,class,get,name,with,value,delivery,mode,if,mode,null,message,set,jmsdelivery,mode,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException;1415517372;Sets the JMSDeliveryMode on the message.__@param exchange     the exchange_@param message      the message_@param deliveryMode the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery_mode;public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = null__                try {_                    value = Integer.valueOf(s)__                } catch (NumberFormatException e) {_                    _                }_                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else if (deliveryMode instanceof Integer) {_            _            mode = (Integer) deliveryMode__        } else {_            throw new IllegalArgumentException("Unable to convert the given delivery mode of type " + deliveryMode.getClass().getName() + " with value: " + deliveryMode)__        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,null,try,value,integer,value,of,s,catch,number,format,exception,e,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,if,delivery,mode,instanceof,integer,mode,integer,delivery,mode,else,throw,new,illegal,argument,exception,unable,to,convert,the,given,delivery,mode,of,type,delivery,mode,get,class,get,name,with,value,delivery,mode,if,mode,null,message,set,jmsdelivery,mode,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException;1415518065;Sets the JMSDeliveryMode on the message.__@param message      the message_@param deliveryMode the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException {_        Integer mode___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = null__                try {_                    value = Integer.valueOf(s)__                } catch (NumberFormatException e) {_                    _                }_                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else if (deliveryMode instanceof Integer) {_            _            mode = (Integer) deliveryMode__        } else {_            throw new IllegalArgumentException("Unable to convert the given delivery mode of type " + deliveryMode.getClass().getName() + " with value: " + deliveryMode)__        }__        message.setJMSDeliveryMode(mode)__    };sets,the,jmsdelivery,mode,on,the,message,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,message,message,object,delivery,mode,throws,jmsexception,integer,mode,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,null,try,value,integer,value,of,s,catch,number,format,exception,e,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,if,delivery,mode,instanceof,integer,mode,integer,delivery,mode,else,throw,new,illegal,argument,exception,unable,to,convert,the,given,delivery,mode,of,type,delivery,mode,get,class,get,name,with,value,delivery,mode,message,set,jmsdelivery,mode,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException;1415709131;Sets the JMSDeliveryMode on the message.__@param message      the message_@param deliveryMode the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException {_        Integer mode___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = null__                try {_                    value = Integer.valueOf(s)__                } catch (NumberFormatException e) {_                    _                }_                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else if (deliveryMode instanceof Integer) {_            _            mode = (Integer) deliveryMode__        } else {_            throw new IllegalArgumentException("Unable to convert the given delivery mode of type " + deliveryMode.getClass().getName() + " with value: " + deliveryMode)__        }__        message.setJMSDeliveryMode(mode)__    };sets,the,jmsdelivery,mode,on,the,message,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,message,message,object,delivery,mode,throws,jmsexception,integer,mode,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,null,try,value,integer,value,of,s,catch,number,format,exception,e,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,if,delivery,mode,instanceof,integer,mode,integer,delivery,mode,else,throw,new,illegal,argument,exception,unable,to,convert,the,given,delivery,mode,of,type,delivery,mode,get,class,get,name,with,value,delivery,mode,message,set,jmsdelivery,mode,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException;1415709132;Sets the JMSDeliveryMode on the message.__@param message      the message_@param deliveryMode the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException {_        Integer mode___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = null__                try {_                    value = Integer.valueOf(s)__                } catch (NumberFormatException e) {_                    _                }_                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else if (deliveryMode instanceof Integer) {_            _            mode = (Integer) deliveryMode__        } else {_            throw new IllegalArgumentException("Unable to convert the given delivery mode of type " + deliveryMode.getClass().getName() + " with value: " + deliveryMode)__        }__        message.setJMSDeliveryMode(mode)__    };sets,the,jmsdelivery,mode,on,the,message,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,message,message,object,delivery,mode,throws,jmsexception,integer,mode,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,null,try,value,integer,value,of,s,catch,number,format,exception,e,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,if,delivery,mode,instanceof,integer,mode,integer,delivery,mode,else,throw,new,illegal,argument,exception,unable,to,convert,the,given,delivery,mode,of,type,delivery,mode,get,class,get,name,with,value,delivery,mode,message,set,jmsdelivery,mode,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException;1417253476;Sets the JMSDeliveryMode on the message.__@param message      the message_@param deliveryMode the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException {_        Integer mode___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if (JMS_DELIVERY_MODE_PERSISTENT.equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if (JMS_DELIVERY_MODE_NON_PERSISTENT.equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = null__                try {_                    value = Integer.valueOf(s)__                } catch (NumberFormatException e) {_                    _                }_                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else if (deliveryMode instanceof Integer) {_            _            mode = (Integer) deliveryMode__        } else {_            throw new IllegalArgumentException("Unable to convert the given delivery mode of type " + deliveryMode.getClass().getName() + " with value: " + deliveryMode)__        }__        message.setJMSDeliveryMode(mode)__    };sets,the,jmsdelivery,mode,on,the,message,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,message,message,object,delivery,mode,throws,jmsexception,integer,mode,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,null,try,value,integer,value,of,s,catch,number,format,exception,e,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,if,delivery,mode,instanceof,integer,mode,integer,delivery,mode,else,throw,new,illegal,argument,exception,unable,to,convert,the,given,delivery,mode,of,type,delivery,mode,get,class,get,name,with,value,delivery,mode,message,set,jmsdelivery,mode,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException;1417254093;Sets the JMSDeliveryMode on the message.__@param message      the message_@param deliveryMode the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException {_        Integer mode___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if (JMS_DELIVERY_MODE_PERSISTENT.equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if (JMS_DELIVERY_MODE_NON_PERSISTENT.equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = null__                try {_                    value = Integer.valueOf(s)__                } catch (NumberFormatException e) {_                    _                }_                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else if (deliveryMode instanceof Integer) {_            _            mode = (Integer) deliveryMode__        } else {_            throw new IllegalArgumentException("Unable to convert the given delivery mode of type " + deliveryMode.getClass().getName() + " with value: " + deliveryMode)__        }__        message.setJMSDeliveryMode(mode)__    };sets,the,jmsdelivery,mode,on,the,message,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,message,message,object,delivery,mode,throws,jmsexception,integer,mode,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,null,try,value,integer,value,of,s,catch,number,format,exception,e,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,if,delivery,mode,instanceof,integer,mode,integer,delivery,mode,else,throw,new,illegal,argument,exception,unable,to,convert,the,given,delivery,mode,of,type,delivery,mode,get,class,get,name,with,value,delivery,mode,message,set,jmsdelivery,mode,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException;1426413111;Sets the JMSDeliveryMode on the message.__@param message      the message_@param deliveryMode the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException {_        Integer mode___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if (JMS_DELIVERY_MODE_PERSISTENT.equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if (JMS_DELIVERY_MODE_NON_PERSISTENT.equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = null__                try {_                    value = Integer.valueOf(s)__                } catch (NumberFormatException e) {_                    _                }_                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else if (deliveryMode instanceof Integer) {_            _            mode = (Integer) deliveryMode__        } else {_            throw new IllegalArgumentException("Unable to convert the given delivery mode of type " + deliveryMode.getClass().getName() + " with value: " + deliveryMode)__        }__        message.setJMSDeliveryMode(mode)__    };sets,the,jmsdelivery,mode,on,the,message,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,message,message,object,delivery,mode,throws,jmsexception,integer,mode,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,null,try,value,integer,value,of,s,catch,number,format,exception,e,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,if,delivery,mode,instanceof,integer,mode,integer,delivery,mode,else,throw,new,illegal,argument,exception,unable,to,convert,the,given,delivery,mode,of,type,delivery,mode,get,class,get,name,with,value,delivery,mode,message,set,jmsdelivery,mode,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException;1426419511;Sets the JMSDeliveryMode on the message.__@param message      the message_@param deliveryMode the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException {_        Integer mode___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if (JMS_DELIVERY_MODE_PERSISTENT.equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if (JMS_DELIVERY_MODE_NON_PERSISTENT.equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = null__                try {_                    value = Integer.valueOf(s)__                } catch (NumberFormatException e) {_                    _                }_                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else if (deliveryMode instanceof Integer) {_            _            mode = (Integer) deliveryMode__        } else {_            throw new IllegalArgumentException("Unable to convert the given delivery mode of type " + deliveryMode.getClass().getName() + " with value: " + deliveryMode)__        }__        message.setJMSDeliveryMode(mode)__    };sets,the,jmsdelivery,mode,on,the,message,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,message,message,object,delivery,mode,throws,jmsexception,integer,mode,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,null,try,value,integer,value,of,s,catch,number,format,exception,e,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,if,delivery,mode,instanceof,integer,mode,integer,delivery,mode,else,throw,new,illegal,argument,exception,unable,to,convert,the,given,delivery,mode,of,type,delivery,mode,get,class,get,name,with,value,delivery,mode,message,set,jmsdelivery,mode,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException;1426643580;Sets the JMSDeliveryMode on the message.__@param message      the message_@param deliveryMode the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException {_        Integer mode___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if (JMS_DELIVERY_MODE_PERSISTENT.equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if (JMS_DELIVERY_MODE_NON_PERSISTENT.equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = null__                try {_                    value = Integer.valueOf(s)__                } catch (NumberFormatException e) {_                    _                }_                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else if (deliveryMode instanceof Integer) {_            _            mode = (Integer) deliveryMode__        } else {_            throw new IllegalArgumentException("Unable to convert the given delivery mode of type " + deliveryMode.getClass().getName() + " with value: " + deliveryMode)__        }__        message.setJMSDeliveryMode(mode)__    };sets,the,jmsdelivery,mode,on,the,message,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,message,message,object,delivery,mode,throws,jmsexception,integer,mode,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,null,try,value,integer,value,of,s,catch,number,format,exception,e,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,if,delivery,mode,instanceof,integer,mode,integer,delivery,mode,else,throw,new,illegal,argument,exception,unable,to,convert,the,given,delivery,mode,of,type,delivery,mode,get,class,get,name,with,value,delivery,mode,message,set,jmsdelivery,mode,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException;1437137782;Sets the JMSDeliveryMode on the message.__@param message      the message_@param deliveryMode the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Message message, Object deliveryMode) throws JMSException {_        Integer mode___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if (JMS_DELIVERY_MODE_PERSISTENT.equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if (JMS_DELIVERY_MODE_NON_PERSISTENT.equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = null__                try {_                    value = Integer.valueOf(s)__                } catch (NumberFormatException e) {_                    _                }_                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else if (deliveryMode instanceof Integer) {_            _            mode = (Integer) deliveryMode__        } else {_            throw new IllegalArgumentException("Unable to convert the given delivery mode of type " + deliveryMode.getClass().getName() + " with value: " + deliveryMode)__        }__        message.setJMSDeliveryMode(mode)__    };sets,the,jmsdelivery,mode,on,the,message,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,message,message,object,delivery,mode,throws,jmsexception,integer,mode,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,null,try,value,integer,value,of,s,catch,number,format,exception,e,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,if,delivery,mode,instanceof,integer,mode,integer,delivery,mode,else,throw,new,illegal,argument,exception,unable,to,convert,the,given,delivery,mode,of,type,delivery,mode,get,class,get,name,with,value,delivery,mode,message,set,jmsdelivery,mode,mode
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1343905000;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            if (LOGGER.isDebugEnabled()) {_                LOGGER.debug("Error setting the correlationId: {}", correlationId)__            }_        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e,if,logger,is,debug,enabled,logger,debug,error,setting,the,correlation,id,correlation,id
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1346298132;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            if (LOGGER.isDebugEnabled()) {_                LOGGER.debug("Error setting the correlationId: {}", correlationId)__            }_        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e,if,logger,is,debug,enabled,logger,debug,error,setting,the,correlation,id,correlation,id
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1348673747;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            if (LOGGER.isDebugEnabled()) {_                LOGGER.debug("Error setting the correlationId: {}", correlationId)__            }_        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e,if,logger,is,debug,enabled,logger,debug,error,setting,the,correlation,id,correlation,id
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1349476580;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            if (LOGGER.isDebugEnabled()) {_                LOGGER.debug("Error setting the correlationId: {}", correlationId)__            }_        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e,if,logger,is,debug,enabled,logger,debug,error,setting,the,correlation,id,correlation,id
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1351626413;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            if (LOGGER.isDebugEnabled()) {_                LOGGER.debug("Error setting the correlationId: {}", correlationId)__            }_        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e,if,logger,is,debug,enabled,logger,debug,error,setting,the,correlation,id,correlation,id
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1356513306;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            if (LOGGER.isDebugEnabled()) {_                LOGGER.debug("Error setting the correlationId: {}", correlationId)__            }_        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e,if,logger,is,debug,enabled,logger,debug,error,setting,the,correlation,id,correlation,id
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1395086292;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            if (LOGGER.isDebugEnabled()) {_                LOGGER.debug("Error setting the correlationId: {}", correlationId)__            }_        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e,if,logger,is,debug,enabled,logger,debug,error,setting,the,correlation,id,correlation,id
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1415211488;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message       the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            LOGGER.debug("Error setting the correlationId: {}", correlationId, e)__        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e,logger,debug,error,setting,the,correlation,id,correlation,id,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1415517372;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message       the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            LOGGER.debug("Error setting the correlationId: {}", correlationId, e)__        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e,logger,debug,error,setting,the,correlation,id,correlation,id,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1415518065;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message       the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            LOGGER.debug("Error setting the correlationId: {}", correlationId, e)__        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e,logger,debug,error,setting,the,correlation,id,correlation,id,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1415709131;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message       the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            LOGGER.debug("Error setting the correlationId: {}", correlationId, e)__        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e,logger,debug,error,setting,the,correlation,id,correlation,id,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1415709132;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message       the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            LOGGER.debug("Error setting the correlationId: {}", correlationId, e)__        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e,logger,debug,error,setting,the,correlation,id,correlation,id,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1417253476;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message       the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            LOGGER.debug("Error setting the correlationId: {}", correlationId, e)__        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e,logger,debug,error,setting,the,correlation,id,correlation,id,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1417254093;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message       the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            LOGGER.debug("Error setting the correlationId: {}", correlationId, e)__        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e,logger,debug,error,setting,the,correlation,id,correlation,id,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1426413111;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message       the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            LOGGER.debug("Error setting the correlationId: {}", correlationId, e)__        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e,logger,debug,error,setting,the,correlation,id,correlation,id,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1426419511;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message       the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            LOGGER.debug("Error setting the correlationId: {}", correlationId, e)__        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e,logger,debug,error,setting,the,correlation,id,correlation,id,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1426643580;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message       the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            LOGGER.debug("Error setting the correlationId: {}", correlationId, e)__        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e,logger,debug,error,setting,the,correlation,id,correlation,id,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1437137782;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message       the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            LOGGER.debug("Error setting the correlationId: {}", correlationId, e)__        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e,logger,debug,error,setting,the,correlation,id,correlation,id,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1441611090;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message       the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            LOG.debug("Error setting the correlationId: {}", correlationId, e)__        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e,log,debug,error,setting,the,correlation,id,correlation,id,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1441617001;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1524063178;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1537290824;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1540108158;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1540108163;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static boolean isQueuePrefix(String destination);1441617001;Whether the destination name has either queue or temp queue prefix.__@param destination the destination_@return <tt>true</tt> if queue or temp-queue prefix, <tt>false</tt> otherwise;public static boolean isQueuePrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(JmsConstants.QUEUE_PREFIX) || destination.startsWith(JmsConstants.TEMP_QUEUE_PREFIX)__    };whether,the,destination,name,has,either,queue,or,temp,queue,prefix,param,destination,the,destination,return,tt,true,tt,if,queue,or,temp,queue,prefix,tt,false,tt,otherwise;public,static,boolean,is,queue,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,jms,constants,destination,starts,with,jms,constants
JmsMessageHelper -> public static boolean isQueuePrefix(String destination);1524063178;Whether the destination name has either queue or temp queue prefix.__@param destination the destination_@return <tt>true</tt> if queue or temp-queue prefix, <tt>false</tt> otherwise;public static boolean isQueuePrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(JmsConstants.QUEUE_PREFIX) || destination.startsWith(JmsConstants.TEMP_QUEUE_PREFIX)__    };whether,the,destination,name,has,either,queue,or,temp,queue,prefix,param,destination,the,destination,return,tt,true,tt,if,queue,or,temp,queue,prefix,tt,false,tt,otherwise;public,static,boolean,is,queue,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,jms,constants,destination,starts,with,jms,constants
JmsMessageHelper -> public static boolean isQueuePrefix(String destination);1537290824;Whether the destination name has either queue or temp queue prefix.__@param destination the destination_@return <tt>true</tt> if queue or temp-queue prefix, <tt>false</tt> otherwise;public static boolean isQueuePrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(JmsConstants.QUEUE_PREFIX) || destination.startsWith(JmsConstants.TEMP_QUEUE_PREFIX)__    };whether,the,destination,name,has,either,queue,or,temp,queue,prefix,param,destination,the,destination,return,tt,true,tt,if,queue,or,temp,queue,prefix,tt,false,tt,otherwise;public,static,boolean,is,queue,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,jms,constants,destination,starts,with,jms,constants
JmsMessageHelper -> public static boolean isQueuePrefix(String destination);1540108158;Whether the destination name has either queue or temp queue prefix.__@param destination the destination_@return <tt>true</tt> if queue or temp-queue prefix, <tt>false</tt> otherwise;public static boolean isQueuePrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(JmsConstants.QUEUE_PREFIX) || destination.startsWith(JmsConstants.TEMP_QUEUE_PREFIX)__    };whether,the,destination,name,has,either,queue,or,temp,queue,prefix,param,destination,the,destination,return,tt,true,tt,if,queue,or,temp,queue,prefix,tt,false,tt,otherwise;public,static,boolean,is,queue,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,jms,constants,destination,starts,with,jms,constants
JmsMessageHelper -> public static boolean isQueuePrefix(String destination);1540108163;Whether the destination name has either queue or temp queue prefix.__@param destination the destination_@return <tt>true</tt> if queue or temp-queue prefix, <tt>false</tt> otherwise;public static boolean isQueuePrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(JmsConstants.QUEUE_PREFIX) || destination.startsWith(JmsConstants.TEMP_QUEUE_PREFIX)__    };whether,the,destination,name,has,either,queue,or,temp,queue,prefix,param,destination,the,destination,return,tt,true,tt,if,queue,or,temp,queue,prefix,tt,false,tt,otherwise;public,static,boolean,is,queue,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,jms,constants,destination,starts,with,jms,constants
JmsMessageHelper -> public static Exchange createExchange(Message message, Endpoint endpoint, KeyFormatStrategy keyFormatStrategy);1437137782;Creates an Exchange from a JMS Message._@param message The JMS message._@param endpoint The Endpoint to use to create the Exchange object._@param keyFormatStrategy the a {@link KeyFormatStrategy} to used to_format keys in a JMS 1.1 compliant manner. If null the_{@link DefaultJmsKeyFormatStrategy} will be used._@return Populated Exchange.;public static Exchange createExchange(Message message, Endpoint endpoint, KeyFormatStrategy keyFormatStrategy) {_        Exchange exchange = endpoint.createExchange()__        KeyFormatStrategy initialisedKeyFormatStrategy = (keyFormatStrategy == null)_                ? new DefaultJmsKeyFormatStrategy() : keyFormatStrategy__        return populateExchange(message, exchange, false, initialisedKeyFormatStrategy)__    };creates,an,exchange,from,a,jms,message,param,message,the,jms,message,param,endpoint,the,endpoint,to,use,to,create,the,exchange,object,param,key,format,strategy,the,a,link,key,format,strategy,to,used,to,format,keys,in,a,jms,1,1,compliant,manner,if,null,the,link,default,jms,key,format,strategy,will,be,used,return,populated,exchange;public,static,exchange,create,exchange,message,message,endpoint,endpoint,key,format,strategy,key,format,strategy,exchange,exchange,endpoint,create,exchange,key,format,strategy,initialised,key,format,strategy,key,format,strategy,null,new,default,jms,key,format,strategy,key,format,strategy,return,populate,exchange,message,exchange,false,initialised,key,format,strategy
JmsMessageHelper -> public static Exchange createExchange(Message message, Endpoint endpoint, KeyFormatStrategy keyFormatStrategy);1441611090;Creates an Exchange from a JMS Message._@param message The JMS message._@param endpoint The Endpoint to use to create the Exchange object._@param keyFormatStrategy the a {@link KeyFormatStrategy} to used to_format keys in a JMS 1.1 compliant manner. If null the_{@link DefaultJmsKeyFormatStrategy} will be used._@return Populated Exchange.;public static Exchange createExchange(Message message, Endpoint endpoint, KeyFormatStrategy keyFormatStrategy) {_        Exchange exchange = endpoint.createExchange()__        KeyFormatStrategy initialisedKeyFormatStrategy = (keyFormatStrategy == null)_                ? new DefaultJmsKeyFormatStrategy() : keyFormatStrategy__        return populateExchange(message, exchange, false, initialisedKeyFormatStrategy)__    };creates,an,exchange,from,a,jms,message,param,message,the,jms,message,param,endpoint,the,endpoint,to,use,to,create,the,exchange,object,param,key,format,strategy,the,a,link,key,format,strategy,to,used,to,format,keys,in,a,jms,1,1,compliant,manner,if,null,the,link,default,jms,key,format,strategy,will,be,used,return,populated,exchange;public,static,exchange,create,exchange,message,message,endpoint,endpoint,key,format,strategy,key,format,strategy,exchange,exchange,endpoint,create,exchange,key,format,strategy,initialised,key,format,strategy,key,format,strategy,null,new,default,jms,key,format,strategy,key,format,strategy,return,populate,exchange,message,exchange,false,initialised,key,format,strategy
JmsMessageHelper -> public static Boolean getJMSRedelivered(Message message);1343905000;Gets the JMSRedelivered from the message.__@param message  the message_@return <tt>true</tt> if redelivered, <tt>false</tt> if not, <tt>null</tt> if not able to determine;public static Boolean getJMSRedelivered(Message message) {_        try {_            return message.getJMSRedelivered()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsredelivered,from,the,message,param,message,the,message,return,tt,true,tt,if,redelivered,tt,false,tt,if,not,tt,null,tt,if,not,able,to,determine;public,static,boolean,get,jmsredelivered,message,message,try,return,message,get,jmsredelivered,catch,exception,e,return,null
JmsMessageHelper -> public static Boolean getJMSRedelivered(Message message);1441617001;Gets the JMSRedelivered from the message.__@param message  the message_@return <tt>true</tt> if redelivered, <tt>false</tt> if not, <tt>null</tt> if not able to determine;public static Boolean getJMSRedelivered(Message message) {_        try {_            return message.getJMSRedelivered()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsredelivered,from,the,message,param,message,the,message,return,tt,true,tt,if,redelivered,tt,false,tt,if,not,tt,null,tt,if,not,able,to,determine;public,static,boolean,get,jmsredelivered,message,message,try,return,message,get,jmsredelivered,catch,exception,e,return,null
JmsMessageHelper -> public static Boolean getJMSRedelivered(Message message);1524063178;Gets the JMSRedelivered from the message.__@param message  the message_@return <tt>true</tt> if redelivered, <tt>false</tt> if not, <tt>null</tt> if not able to determine;public static Boolean getJMSRedelivered(Message message) {_        try {_            return message.getJMSRedelivered()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsredelivered,from,the,message,param,message,the,message,return,tt,true,tt,if,redelivered,tt,false,tt,if,not,tt,null,tt,if,not,able,to,determine;public,static,boolean,get,jmsredelivered,message,message,try,return,message,get,jmsredelivered,catch,exception,e,return,null
JmsMessageHelper -> public static Boolean getJMSRedelivered(Message message);1537290824;Gets the JMSRedelivered from the message.__@param message  the message_@return <tt>true</tt> if redelivered, <tt>false</tt> if not, <tt>null</tt> if not able to determine;public static Boolean getJMSRedelivered(Message message) {_        try {_            return message.getJMSRedelivered()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsredelivered,from,the,message,param,message,the,message,return,tt,true,tt,if,redelivered,tt,false,tt,if,not,tt,null,tt,if,not,able,to,determine;public,static,boolean,get,jmsredelivered,message,message,try,return,message,get,jmsredelivered,catch,exception,e,return,null
JmsMessageHelper -> public static Boolean getJMSRedelivered(Message message);1540108158;Gets the JMSRedelivered from the message.__@param message  the message_@return <tt>true</tt> if redelivered, <tt>false</tt> if not, <tt>null</tt> if not able to determine;public static Boolean getJMSRedelivered(Message message) {_        try {_            return message.getJMSRedelivered()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsredelivered,from,the,message,param,message,the,message,return,tt,true,tt,if,redelivered,tt,false,tt,if,not,tt,null,tt,if,not,able,to,determine;public,static,boolean,get,jmsredelivered,message,message,try,return,message,get,jmsredelivered,catch,exception,e,return,null
JmsMessageHelper -> public static Boolean getJMSRedelivered(Message message);1540108163;Gets the JMSRedelivered from the message.__@param message  the message_@return <tt>true</tt> if redelivered, <tt>false</tt> if not, <tt>null</tt> if not able to determine;public static Boolean getJMSRedelivered(Message message) {_        try {_            return message.getJMSRedelivered()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsredelivered,from,the,message,param,message,the,message,return,tt,true,tt,if,redelivered,tt,false,tt,if,not,tt,null,tt,if,not,able,to,determine;public,static,boolean,get,jmsredelivered,message,message,try,return,message,get,jmsredelivered,catch,exception,e,return,null
JmsMessageHelper -> public static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException;1346298132;Adds or updates the {@link Message} headers. Header names and values are_checked for JMS 1.1 compliance.__@param jmsMessage the {@link Message} to add or update the headers on_@param messageHeaders a {@link Map} of String/Object pairs_@param keyFormatStrategy the a {@link KeyFormatStrategy} to used to_format keys in a JMS 1.1 compliant manner. If null the_{@link DefaultJmsKeyFormatStrategy} will be used._@return {@link Message}_@throws Exception a;public static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException {_        _        KeyFormatStrategy localKeyFormatStrategy = null__        if (keyFormatStrategy == null) {_            localKeyFormatStrategy = new DefaultJmsKeyFormatStrategy()__        } else {_            localKeyFormatStrategy = keyFormatStrategy__        }__        Map<String, Object> headers = new HashMap<String, Object>(messageHeaders)__        Set<String> keys = headers.keySet()__        for (String headerName : keys) {_            Object headerValue = headers.get(headerName)___            if (headerName.equalsIgnoreCase(JMS_CORRELATION_ID)) {_                if (headerValue == null) {_                    _                    _                    setCorrelationId(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    setCorrelationId(jmsMessage, (String)headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_CORRELATION_ID + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_REPLY_TO)) {_                if (headerValue instanceof String) {_                    _                    _                    _                } else {_                    _                    _                    _                    _                    _                    _                }_            } else if (headerName.equalsIgnoreCase(JMS_TYPE)) {_                if (headerValue == null) {_                    _                    _                    setMessageType(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    _                    setMessageType(jmsMessage, (String)headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_TYPE + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_PRIORITY)) {_                if (headerValue instanceof Integer) {_                    try {_                        jmsMessage.setJMSPriority((Integer)headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_PRIORITY + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_PRIORITY + " must be a Integer.  Type found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_DELIVERY_MODE)) {_                try {_                    JmsMessageHelper.setJMSDeliveryMode(jmsMessage, headerValue)__                } catch (JMSException e) {_                    throw new IllegalHeaderException("Failed to set the " + JMS_DELIVERY_MODE + " header. Cause: " + e.getLocalizedMessage(), e)__                }_            } else if (headerName.equalsIgnoreCase(JMS_EXPIRATION)) {_                if (headerValue instanceof Long) {_                    try {_                        jmsMessage.setJMSExpiration((Long)headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_EXPIRATION + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_EXPIRATION + " must be a Long.  Type found: " + headerValue.getClass().getName())__                }_            } else {_                LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                if (headerName.equalsIgnoreCase(JMS_DESTINATION) || headerName.equalsIgnoreCase(JMS_MESSAGE_ID) || headerName.equalsIgnoreCase("JMSTimestamp")_                    || headerName.equalsIgnoreCase("JMSRedelivered")) {_                    _                    _                    _                    _                    _                    _                    LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                } else {_                    if (!(headerValue instanceof JmsMessageType)) {_                        String encodedName = localKeyFormatStrategy.encodeKey(headerName)__                        try {_                            JmsMessageHelper.setProperty(jmsMessage, encodedName, headerValue)__                        } catch (JMSException e) {_                            throw new IllegalHeaderException("Failed to set the header " + encodedName + " header. Cause: " + e.getLocalizedMessage(), e)__                        }_                    }_                }_                _            }_        }_        return jmsMessage__    };adds,or,updates,the,link,message,headers,header,names,and,values,are,checked,for,jms,1,1,compliance,param,jms,message,the,link,message,to,add,or,update,the,headers,on,param,message,headers,a,link,map,of,string,object,pairs,param,key,format,strategy,the,a,link,key,format,strategy,to,used,to,format,keys,in,a,jms,1,1,compliant,manner,if,null,the,link,default,jms,key,format,strategy,will,be,used,return,link,message,throws,exception,a;public,static,message,set,jms,message,headers,final,message,jms,message,map,string,object,message,headers,key,format,strategy,key,format,strategy,throws,illegal,header,exception,key,format,strategy,local,key,format,strategy,null,if,key,format,strategy,null,local,key,format,strategy,new,default,jms,key,format,strategy,else,local,key,format,strategy,key,format,strategy,map,string,object,headers,new,hash,map,string,object,message,headers,set,string,keys,headers,key,set,for,string,header,name,keys,object,header,value,headers,get,header,name,if,header,name,equals,ignore,case,if,header,value,null,set,correlation,id,jms,message,null,else,if,header,value,instanceof,string,set,correlation,id,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,string,else,else,if,header,name,equals,ignore,case,if,header,value,null,set,message,type,jms,message,null,else,if,header,value,instanceof,string,set,message,type,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,integer,try,jms,message,set,jmspriority,integer,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,integer,type,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,try,jms,message,helper,set,jmsdelivery,mode,jms,message,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,if,header,name,equals,ignore,case,if,header,value,instanceof,long,try,jms,message,set,jmsexpiration,long,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,long,type,found,header,value,get,class,get,name,else,logger,trace,ignoring,jms,header,with,value,header,name,header,value,if,header,name,equals,ignore,case,header,name,equals,ignore,case,header,name,equals,ignore,case,jmstimestamp,header,name,equals,ignore,case,jmsredelivered,logger,trace,ignoring,jms,header,with,value,header,name,header,value,else,if,header,value,instanceof,jms,message,type,string,encoded,name,local,key,format,strategy,encode,key,header,name,try,jms,message,helper,set,property,jms,message,encoded,name,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,encoded,name,header,cause,e,get,localized,message,e,return,jms,message
JmsMessageHelper -> public static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException;1348673747;Adds or updates the {@link Message} headers. Header names and values are_checked for JMS 1.1 compliance.__@param jmsMessage the {@link Message} to add or update the headers on_@param messageHeaders a {@link Map} of String/Object pairs_@param keyFormatStrategy the a {@link KeyFormatStrategy} to used to_format keys in a JMS 1.1 compliant manner. If null the_{@link DefaultJmsKeyFormatStrategy} will be used._@return {@link Message}_@throws Exception a;public static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException {_        _        KeyFormatStrategy localKeyFormatStrategy = null__        if (keyFormatStrategy == null) {_            localKeyFormatStrategy = new DefaultJmsKeyFormatStrategy()__        } else {_            localKeyFormatStrategy = keyFormatStrategy__        }__        Map<String, Object> headers = new HashMap<String, Object>(messageHeaders)__        Set<String> keys = headers.keySet()__        for (String headerName : keys) {_            Object headerValue = headers.get(headerName)___            if (headerName.equalsIgnoreCase(JMS_CORRELATION_ID)) {_                if (headerValue == null) {_                    _                    _                    setCorrelationId(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    setCorrelationId(jmsMessage, (String)headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_CORRELATION_ID + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_REPLY_TO)) {_                if (headerValue instanceof String) {_                    _                    _                    _                } else {_                    _                    _                    _                    _                    _                    _                }_            } else if (headerName.equalsIgnoreCase(JMS_TYPE)) {_                if (headerValue == null) {_                    _                    _                    setMessageType(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    _                    setMessageType(jmsMessage, (String)headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_TYPE + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_PRIORITY)) {_                if (headerValue instanceof Integer) {_                    try {_                        jmsMessage.setJMSPriority((Integer)headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_PRIORITY + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_PRIORITY + " must be a Integer.  Type found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_DELIVERY_MODE)) {_                try {_                    JmsMessageHelper.setJMSDeliveryMode(jmsMessage, headerValue)__                } catch (JMSException e) {_                    throw new IllegalHeaderException("Failed to set the " + JMS_DELIVERY_MODE + " header. Cause: " + e.getLocalizedMessage(), e)__                }_            } else if (headerName.equalsIgnoreCase(JMS_EXPIRATION)) {_                if (headerValue instanceof Long) {_                    try {_                        jmsMessage.setJMSExpiration((Long)headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_EXPIRATION + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_EXPIRATION + " must be a Long.  Type found: " + headerValue.getClass().getName())__                }_            } else {_                LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                if (headerName.equalsIgnoreCase(JMS_DESTINATION) || headerName.equalsIgnoreCase(JMS_MESSAGE_ID) || headerName.equalsIgnoreCase("JMSTimestamp")_                    || headerName.equalsIgnoreCase("JMSRedelivered")) {_                    _                    _                    _                    _                    _                    _                    LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                } else {_                    if (!(headerValue instanceof JmsMessageType)) {_                        String encodedName = localKeyFormatStrategy.encodeKey(headerName)__                        try {_                            JmsMessageHelper.setProperty(jmsMessage, encodedName, headerValue)__                        } catch (JMSException e) {_                            throw new IllegalHeaderException("Failed to set the header " + encodedName + " header. Cause: " + e.getLocalizedMessage(), e)__                        }_                    }_                }_                _            }_        }_        return jmsMessage__    };adds,or,updates,the,link,message,headers,header,names,and,values,are,checked,for,jms,1,1,compliance,param,jms,message,the,link,message,to,add,or,update,the,headers,on,param,message,headers,a,link,map,of,string,object,pairs,param,key,format,strategy,the,a,link,key,format,strategy,to,used,to,format,keys,in,a,jms,1,1,compliant,manner,if,null,the,link,default,jms,key,format,strategy,will,be,used,return,link,message,throws,exception,a;public,static,message,set,jms,message,headers,final,message,jms,message,map,string,object,message,headers,key,format,strategy,key,format,strategy,throws,illegal,header,exception,key,format,strategy,local,key,format,strategy,null,if,key,format,strategy,null,local,key,format,strategy,new,default,jms,key,format,strategy,else,local,key,format,strategy,key,format,strategy,map,string,object,headers,new,hash,map,string,object,message,headers,set,string,keys,headers,key,set,for,string,header,name,keys,object,header,value,headers,get,header,name,if,header,name,equals,ignore,case,if,header,value,null,set,correlation,id,jms,message,null,else,if,header,value,instanceof,string,set,correlation,id,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,string,else,else,if,header,name,equals,ignore,case,if,header,value,null,set,message,type,jms,message,null,else,if,header,value,instanceof,string,set,message,type,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,integer,try,jms,message,set,jmspriority,integer,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,integer,type,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,try,jms,message,helper,set,jmsdelivery,mode,jms,message,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,if,header,name,equals,ignore,case,if,header,value,instanceof,long,try,jms,message,set,jmsexpiration,long,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,long,type,found,header,value,get,class,get,name,else,logger,trace,ignoring,jms,header,with,value,header,name,header,value,if,header,name,equals,ignore,case,header,name,equals,ignore,case,header,name,equals,ignore,case,jmstimestamp,header,name,equals,ignore,case,jmsredelivered,logger,trace,ignoring,jms,header,with,value,header,name,header,value,else,if,header,value,instanceof,jms,message,type,string,encoded,name,local,key,format,strategy,encode,key,header,name,try,jms,message,helper,set,property,jms,message,encoded,name,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,encoded,name,header,cause,e,get,localized,message,e,return,jms,message
JmsMessageHelper -> public static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException;1349476580;Adds or updates the {@link Message} headers. Header names and values are_checked for JMS 1.1 compliance.__@param jmsMessage the {@link Message} to add or update the headers on_@param messageHeaders a {@link Map} of String/Object pairs_@param keyFormatStrategy the a {@link KeyFormatStrategy} to used to_format keys in a JMS 1.1 compliant manner. If null the_{@link DefaultJmsKeyFormatStrategy} will be used._@return {@link Message}_@throws Exception a;public static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException {_        _        KeyFormatStrategy localKeyFormatStrategy = null__        if (keyFormatStrategy == null) {_            localKeyFormatStrategy = new DefaultJmsKeyFormatStrategy()__        } else {_            localKeyFormatStrategy = keyFormatStrategy__        }__        Map<String, Object> headers = new HashMap<String, Object>(messageHeaders)__        Set<String> keys = headers.keySet()__        for (String headerName : keys) {_            Object headerValue = headers.get(headerName)___            if (headerName.equalsIgnoreCase(JMS_CORRELATION_ID)) {_                if (headerValue == null) {_                    _                    _                    setCorrelationId(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    setCorrelationId(jmsMessage, (String)headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_CORRELATION_ID + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_REPLY_TO)) {_                if (headerValue instanceof String) {_                    _                    _                    _                } else {_                    _                    _                    _                    _                    _                    _                }_            } else if (headerName.equalsIgnoreCase(JMS_TYPE)) {_                if (headerValue == null) {_                    _                    _                    setMessageType(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    _                    setMessageType(jmsMessage, (String)headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_TYPE + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_PRIORITY)) {_                if (headerValue instanceof Integer) {_                    try {_                        jmsMessage.setJMSPriority((Integer)headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_PRIORITY + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_PRIORITY + " must be a Integer.  Type found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_DELIVERY_MODE)) {_                try {_                    JmsMessageHelper.setJMSDeliveryMode(jmsMessage, headerValue)__                } catch (JMSException e) {_                    throw new IllegalHeaderException("Failed to set the " + JMS_DELIVERY_MODE + " header. Cause: " + e.getLocalizedMessage(), e)__                }_            } else if (headerName.equalsIgnoreCase(JMS_EXPIRATION)) {_                if (headerValue instanceof Long) {_                    try {_                        jmsMessage.setJMSExpiration((Long)headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_EXPIRATION + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_EXPIRATION + " must be a Long.  Type found: " + headerValue.getClass().getName())__                }_            } else {_                LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                if (headerName.equalsIgnoreCase(JMS_DESTINATION) || headerName.equalsIgnoreCase(JMS_MESSAGE_ID) || headerName.equalsIgnoreCase("JMSTimestamp")_                    || headerName.equalsIgnoreCase("JMSRedelivered")) {_                    _                    _                    _                    _                    _                    _                    LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                } else {_                    if (!(headerValue instanceof JmsMessageType)) {_                        String encodedName = localKeyFormatStrategy.encodeKey(headerName)__                        try {_                            JmsMessageHelper.setProperty(jmsMessage, encodedName, headerValue)__                        } catch (JMSException e) {_                            throw new IllegalHeaderException("Failed to set the header " + encodedName + " header. Cause: " + e.getLocalizedMessage(), e)__                        }_                    }_                }_                _            }_        }_        return jmsMessage__    };adds,or,updates,the,link,message,headers,header,names,and,values,are,checked,for,jms,1,1,compliance,param,jms,message,the,link,message,to,add,or,update,the,headers,on,param,message,headers,a,link,map,of,string,object,pairs,param,key,format,strategy,the,a,link,key,format,strategy,to,used,to,format,keys,in,a,jms,1,1,compliant,manner,if,null,the,link,default,jms,key,format,strategy,will,be,used,return,link,message,throws,exception,a;public,static,message,set,jms,message,headers,final,message,jms,message,map,string,object,message,headers,key,format,strategy,key,format,strategy,throws,illegal,header,exception,key,format,strategy,local,key,format,strategy,null,if,key,format,strategy,null,local,key,format,strategy,new,default,jms,key,format,strategy,else,local,key,format,strategy,key,format,strategy,map,string,object,headers,new,hash,map,string,object,message,headers,set,string,keys,headers,key,set,for,string,header,name,keys,object,header,value,headers,get,header,name,if,header,name,equals,ignore,case,if,header,value,null,set,correlation,id,jms,message,null,else,if,header,value,instanceof,string,set,correlation,id,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,string,else,else,if,header,name,equals,ignore,case,if,header,value,null,set,message,type,jms,message,null,else,if,header,value,instanceof,string,set,message,type,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,integer,try,jms,message,set,jmspriority,integer,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,integer,type,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,try,jms,message,helper,set,jmsdelivery,mode,jms,message,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,if,header,name,equals,ignore,case,if,header,value,instanceof,long,try,jms,message,set,jmsexpiration,long,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,long,type,found,header,value,get,class,get,name,else,logger,trace,ignoring,jms,header,with,value,header,name,header,value,if,header,name,equals,ignore,case,header,name,equals,ignore,case,header,name,equals,ignore,case,jmstimestamp,header,name,equals,ignore,case,jmsredelivered,logger,trace,ignoring,jms,header,with,value,header,name,header,value,else,if,header,value,instanceof,jms,message,type,string,encoded,name,local,key,format,strategy,encode,key,header,name,try,jms,message,helper,set,property,jms,message,encoded,name,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,encoded,name,header,cause,e,get,localized,message,e,return,jms,message
JmsMessageHelper -> public static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException;1351626413;Adds or updates the {@link Message} headers. Header names and values are_checked for JMS 1.1 compliance.__@param jmsMessage the {@link Message} to add or update the headers on_@param messageHeaders a {@link Map} of String/Object pairs_@param keyFormatStrategy the a {@link KeyFormatStrategy} to used to_format keys in a JMS 1.1 compliant manner. If null the_{@link DefaultJmsKeyFormatStrategy} will be used._@return {@link Message}_@throws Exception a;public static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException {_        _        KeyFormatStrategy localKeyFormatStrategy = null__        if (keyFormatStrategy == null) {_            localKeyFormatStrategy = new DefaultJmsKeyFormatStrategy()__        } else {_            localKeyFormatStrategy = keyFormatStrategy__        }__        Map<String, Object> headers = new HashMap<String, Object>(messageHeaders)__        Set<String> keys = headers.keySet()__        for (String headerName : keys) {_            Object headerValue = headers.get(headerName)___            if (headerName.equalsIgnoreCase(JMS_CORRELATION_ID)) {_                if (headerValue == null) {_                    _                    _                    setCorrelationId(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    setCorrelationId(jmsMessage, (String)headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_CORRELATION_ID + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_REPLY_TO)) {_                if (headerValue instanceof String) {_                    _                    _                    _                } else {_                    _                    _                    _                    _                    _                    _                }_            } else if (headerName.equalsIgnoreCase(JMS_TYPE)) {_                if (headerValue == null) {_                    _                    _                    setMessageType(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    _                    setMessageType(jmsMessage, (String)headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_TYPE + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_PRIORITY)) {_                if (headerValue instanceof Integer) {_                    try {_                        jmsMessage.setJMSPriority((Integer)headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_PRIORITY + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_PRIORITY + " must be a Integer.  Type found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_DELIVERY_MODE)) {_                try {_                    JmsMessageHelper.setJMSDeliveryMode(jmsMessage, headerValue)__                } catch (JMSException e) {_                    throw new IllegalHeaderException("Failed to set the " + JMS_DELIVERY_MODE + " header. Cause: " + e.getLocalizedMessage(), e)__                }_            } else if (headerName.equalsIgnoreCase(JMS_EXPIRATION)) {_                if (headerValue instanceof Long) {_                    try {_                        jmsMessage.setJMSExpiration((Long)headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_EXPIRATION + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_EXPIRATION + " must be a Long.  Type found: " + headerValue.getClass().getName())__                }_            } else {_                LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                if (headerName.equalsIgnoreCase(JMS_DESTINATION) || headerName.equalsIgnoreCase(JMS_MESSAGE_ID) || headerName.equalsIgnoreCase("JMSTimestamp")_                    || headerName.equalsIgnoreCase("JMSRedelivered")) {_                    _                    _                    _                    _                    _                    _                    LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                } else {_                    if (!(headerValue instanceof JmsMessageType)) {_                        String encodedName = localKeyFormatStrategy.encodeKey(headerName)__                        try {_                            JmsMessageHelper.setProperty(jmsMessage, encodedName, headerValue)__                        } catch (JMSException e) {_                            throw new IllegalHeaderException("Failed to set the header " + encodedName + " header. Cause: " + e.getLocalizedMessage(), e)__                        }_                    }_                }_                _            }_        }_        return jmsMessage__    };adds,or,updates,the,link,message,headers,header,names,and,values,are,checked,for,jms,1,1,compliance,param,jms,message,the,link,message,to,add,or,update,the,headers,on,param,message,headers,a,link,map,of,string,object,pairs,param,key,format,strategy,the,a,link,key,format,strategy,to,used,to,format,keys,in,a,jms,1,1,compliant,manner,if,null,the,link,default,jms,key,format,strategy,will,be,used,return,link,message,throws,exception,a;public,static,message,set,jms,message,headers,final,message,jms,message,map,string,object,message,headers,key,format,strategy,key,format,strategy,throws,illegal,header,exception,key,format,strategy,local,key,format,strategy,null,if,key,format,strategy,null,local,key,format,strategy,new,default,jms,key,format,strategy,else,local,key,format,strategy,key,format,strategy,map,string,object,headers,new,hash,map,string,object,message,headers,set,string,keys,headers,key,set,for,string,header,name,keys,object,header,value,headers,get,header,name,if,header,name,equals,ignore,case,if,header,value,null,set,correlation,id,jms,message,null,else,if,header,value,instanceof,string,set,correlation,id,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,string,else,else,if,header,name,equals,ignore,case,if,header,value,null,set,message,type,jms,message,null,else,if,header,value,instanceof,string,set,message,type,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,integer,try,jms,message,set,jmspriority,integer,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,integer,type,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,try,jms,message,helper,set,jmsdelivery,mode,jms,message,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,if,header,name,equals,ignore,case,if,header,value,instanceof,long,try,jms,message,set,jmsexpiration,long,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,long,type,found,header,value,get,class,get,name,else,logger,trace,ignoring,jms,header,with,value,header,name,header,value,if,header,name,equals,ignore,case,header,name,equals,ignore,case,header,name,equals,ignore,case,jmstimestamp,header,name,equals,ignore,case,jmsredelivered,logger,trace,ignoring,jms,header,with,value,header,name,header,value,else,if,header,value,instanceof,jms,message,type,string,encoded,name,local,key,format,strategy,encode,key,header,name,try,jms,message,helper,set,property,jms,message,encoded,name,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,encoded,name,header,cause,e,get,localized,message,e,return,jms,message
JmsMessageHelper -> public static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException;1356513306;Adds or updates the {@link Message} headers. Header names and values are_checked for JMS 1.1 compliance.__@param jmsMessage the {@link Message} to add or update the headers on_@param messageHeaders a {@link Map} of String/Object pairs_@param keyFormatStrategy the a {@link KeyFormatStrategy} to used to_format keys in a JMS 1.1 compliant manner. If null the_{@link DefaultJmsKeyFormatStrategy} will be used._@return {@link Message}_@throws Exception a;public static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException {_        _        KeyFormatStrategy localKeyFormatStrategy = null__        if (keyFormatStrategy == null) {_            localKeyFormatStrategy = new DefaultJmsKeyFormatStrategy()__        } else {_            localKeyFormatStrategy = keyFormatStrategy__        }__        Map<String, Object> headers = new HashMap<String, Object>(messageHeaders)__        Set<String> keys = headers.keySet()__        for (String headerName : keys) {_            Object headerValue = headers.get(headerName)___            if (headerName.equalsIgnoreCase(JMS_CORRELATION_ID)) {_                if (headerValue == null) {_                    _                    _                    setCorrelationId(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    setCorrelationId(jmsMessage, (String)headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_CORRELATION_ID + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_REPLY_TO)) {_                if (headerValue instanceof String) {_                    _                    _                    _                } else {_                    _                    _                    _                    _                    _                    _                }_            } else if (headerName.equalsIgnoreCase(JMS_TYPE)) {_                if (headerValue == null) {_                    _                    _                    setMessageType(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    _                    setMessageType(jmsMessage, (String)headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_TYPE + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_PRIORITY)) {_                if (headerValue instanceof Integer) {_                    try {_                        jmsMessage.setJMSPriority((Integer)headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_PRIORITY + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_PRIORITY + " must be a Integer.  Type found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_DELIVERY_MODE)) {_                try {_                    JmsMessageHelper.setJMSDeliveryMode(jmsMessage, headerValue)__                } catch (JMSException e) {_                    throw new IllegalHeaderException("Failed to set the " + JMS_DELIVERY_MODE + " header. Cause: " + e.getLocalizedMessage(), e)__                }_            } else if (headerName.equalsIgnoreCase(JMS_EXPIRATION)) {_                if (headerValue instanceof Long) {_                    try {_                        jmsMessage.setJMSExpiration((Long)headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_EXPIRATION + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_EXPIRATION + " must be a Long.  Type found: " + headerValue.getClass().getName())__                }_            } else {_                LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                if (headerName.equalsIgnoreCase(JMS_DESTINATION) || headerName.equalsIgnoreCase(JMS_MESSAGE_ID) || headerName.equalsIgnoreCase("JMSTimestamp")_                    || headerName.equalsIgnoreCase("JMSRedelivered")) {_                    _                    _                    _                    _                    _                    _                    LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                } else {_                    if (!(headerValue instanceof JmsMessageType)) {_                        String encodedName = localKeyFormatStrategy.encodeKey(headerName)__                        try {_                            JmsMessageHelper.setProperty(jmsMessage, encodedName, headerValue)__                        } catch (JMSException e) {_                            throw new IllegalHeaderException("Failed to set the header " + encodedName + " header. Cause: " + e.getLocalizedMessage(), e)__                        }_                    }_                }_                _            }_        }_        return jmsMessage__    };adds,or,updates,the,link,message,headers,header,names,and,values,are,checked,for,jms,1,1,compliance,param,jms,message,the,link,message,to,add,or,update,the,headers,on,param,message,headers,a,link,map,of,string,object,pairs,param,key,format,strategy,the,a,link,key,format,strategy,to,used,to,format,keys,in,a,jms,1,1,compliant,manner,if,null,the,link,default,jms,key,format,strategy,will,be,used,return,link,message,throws,exception,a;public,static,message,set,jms,message,headers,final,message,jms,message,map,string,object,message,headers,key,format,strategy,key,format,strategy,throws,illegal,header,exception,key,format,strategy,local,key,format,strategy,null,if,key,format,strategy,null,local,key,format,strategy,new,default,jms,key,format,strategy,else,local,key,format,strategy,key,format,strategy,map,string,object,headers,new,hash,map,string,object,message,headers,set,string,keys,headers,key,set,for,string,header,name,keys,object,header,value,headers,get,header,name,if,header,name,equals,ignore,case,if,header,value,null,set,correlation,id,jms,message,null,else,if,header,value,instanceof,string,set,correlation,id,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,string,else,else,if,header,name,equals,ignore,case,if,header,value,null,set,message,type,jms,message,null,else,if,header,value,instanceof,string,set,message,type,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,integer,try,jms,message,set,jmspriority,integer,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,integer,type,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,try,jms,message,helper,set,jmsdelivery,mode,jms,message,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,if,header,name,equals,ignore,case,if,header,value,instanceof,long,try,jms,message,set,jmsexpiration,long,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,long,type,found,header,value,get,class,get,name,else,logger,trace,ignoring,jms,header,with,value,header,name,header,value,if,header,name,equals,ignore,case,header,name,equals,ignore,case,header,name,equals,ignore,case,jmstimestamp,header,name,equals,ignore,case,jmsredelivered,logger,trace,ignoring,jms,header,with,value,header,name,header,value,else,if,header,value,instanceof,jms,message,type,string,encoded,name,local,key,format,strategy,encode,key,header,name,try,jms,message,helper,set,property,jms,message,encoded,name,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,encoded,name,header,cause,e,get,localized,message,e,return,jms,message
JmsMessageHelper -> public static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException;1395086292;Adds or updates the {@link Message} headers. Header names and values are_checked for JMS 1.1 compliance.__@param jmsMessage the {@link Message} to add or update the headers on_@param messageHeaders a {@link Map} of String/Object pairs_@param keyFormatStrategy the a {@link KeyFormatStrategy} to used to_format keys in a JMS 1.1 compliant manner. If null the_{@link DefaultJmsKeyFormatStrategy} will be used._@return {@link Message}_@throws Exception a;public static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException {_        _        KeyFormatStrategy localKeyFormatStrategy = null__        if (keyFormatStrategy == null) {_            localKeyFormatStrategy = new DefaultJmsKeyFormatStrategy()__        } else {_            localKeyFormatStrategy = keyFormatStrategy__        }__        Map<String, Object> headers = new HashMap<String, Object>(messageHeaders)__        Set<String> keys = headers.keySet()__        for (String headerName : keys) {_            Object headerValue = headers.get(headerName)___            if (headerName.equalsIgnoreCase(JMS_CORRELATION_ID)) {_                if (headerValue == null) {_                    _                    _                    setCorrelationId(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    setCorrelationId(jmsMessage, (String)headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_CORRELATION_ID + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_REPLY_TO)) {_                if (headerValue instanceof String) {_                    _                    _                    _                } else {_                    _                    _                    _                    _                    _                    _                }_            } else if (headerName.equalsIgnoreCase(JMS_TYPE)) {_                if (headerValue == null) {_                    _                    _                    setMessageType(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    _                    setMessageType(jmsMessage, (String)headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_TYPE + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_PRIORITY)) {_                if (headerValue instanceof Integer) {_                    try {_                        jmsMessage.setJMSPriority((Integer)headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_PRIORITY + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_PRIORITY + " must be a Integer.  Type found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_DELIVERY_MODE)) {_                try {_                    JmsMessageHelper.setJMSDeliveryMode(jmsMessage, headerValue)__                } catch (JMSException e) {_                    throw new IllegalHeaderException("Failed to set the " + JMS_DELIVERY_MODE + " header. Cause: " + e.getLocalizedMessage(), e)__                }_            } else if (headerName.equalsIgnoreCase(JMS_EXPIRATION)) {_                if (headerValue instanceof Long) {_                    try {_                        jmsMessage.setJMSExpiration((Long)headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_EXPIRATION + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_EXPIRATION + " must be a Long.  Type found: " + headerValue.getClass().getName())__                }_            } else {_                LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                if (headerName.equalsIgnoreCase(JMS_DESTINATION) || headerName.equalsIgnoreCase(JMS_MESSAGE_ID) || headerName.equalsIgnoreCase("JMSTimestamp")_                    || headerName.equalsIgnoreCase("JMSRedelivered")) {_                    _                    _                    _                    _                    _                    _                    LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                } else {_                    if (!(headerValue instanceof JmsMessageType)) {_                        String encodedName = localKeyFormatStrategy.encodeKey(headerName)__                        try {_                            JmsMessageHelper.setProperty(jmsMessage, encodedName, headerValue)__                        } catch (JMSException e) {_                            throw new IllegalHeaderException("Failed to set the header " + encodedName + " header. Cause: " + e.getLocalizedMessage(), e)__                        }_                    }_                }_                _            }_        }_        return jmsMessage__    };adds,or,updates,the,link,message,headers,header,names,and,values,are,checked,for,jms,1,1,compliance,param,jms,message,the,link,message,to,add,or,update,the,headers,on,param,message,headers,a,link,map,of,string,object,pairs,param,key,format,strategy,the,a,link,key,format,strategy,to,used,to,format,keys,in,a,jms,1,1,compliant,manner,if,null,the,link,default,jms,key,format,strategy,will,be,used,return,link,message,throws,exception,a;public,static,message,set,jms,message,headers,final,message,jms,message,map,string,object,message,headers,key,format,strategy,key,format,strategy,throws,illegal,header,exception,key,format,strategy,local,key,format,strategy,null,if,key,format,strategy,null,local,key,format,strategy,new,default,jms,key,format,strategy,else,local,key,format,strategy,key,format,strategy,map,string,object,headers,new,hash,map,string,object,message,headers,set,string,keys,headers,key,set,for,string,header,name,keys,object,header,value,headers,get,header,name,if,header,name,equals,ignore,case,if,header,value,null,set,correlation,id,jms,message,null,else,if,header,value,instanceof,string,set,correlation,id,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,string,else,else,if,header,name,equals,ignore,case,if,header,value,null,set,message,type,jms,message,null,else,if,header,value,instanceof,string,set,message,type,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,integer,try,jms,message,set,jmspriority,integer,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,integer,type,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,try,jms,message,helper,set,jmsdelivery,mode,jms,message,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,if,header,name,equals,ignore,case,if,header,value,instanceof,long,try,jms,message,set,jmsexpiration,long,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,long,type,found,header,value,get,class,get,name,else,logger,trace,ignoring,jms,header,with,value,header,name,header,value,if,header,name,equals,ignore,case,header,name,equals,ignore,case,header,name,equals,ignore,case,jmstimestamp,header,name,equals,ignore,case,jmsredelivered,logger,trace,ignoring,jms,header,with,value,header,name,header,value,else,if,header,value,instanceof,jms,message,type,string,encoded,name,local,key,format,strategy,encode,key,header,name,try,jms,message,helper,set,property,jms,message,encoded,name,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,encoded,name,header,cause,e,get,localized,message,e,return,jms,message
JmsMessageHelper -> public static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException;1415211488;Adds or updates the {@link Message} headers. Header names and values are_checked for JMS 1.1 compliance.__@param jmsMessage        the {@link Message} to add or update the headers on_@param messageHeaders    a {@link Map} of String/Object pairs_@param keyFormatStrategy the a {@link KeyFormatStrategy} to used to_format keys in a JMS 1.1 compliant manner. If null the_{@link DefaultJmsKeyFormatStrategy} will be used._@return {@link Message}_@throws Exception a;public static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException {_        _        KeyFormatStrategy localKeyFormatStrategy = null__        if (keyFormatStrategy == null) {_            localKeyFormatStrategy = new DefaultJmsKeyFormatStrategy()__        } else {_            localKeyFormatStrategy = keyFormatStrategy__        }__        Map<String, Object> headers = new HashMap<String, Object>(messageHeaders)__        Set<String> keys = headers.keySet()__        for (String headerName : keys) {_            Object headerValue = headers.get(headerName)___            if (headerName.equalsIgnoreCase(JMS_CORRELATION_ID)) {_                if (headerValue == null) {_                    _                    _                    setCorrelationId(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    setCorrelationId(jmsMessage, (String) headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_CORRELATION_ID + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_REPLY_TO)) {_                if (headerValue instanceof String) {_                    _                    _                    _                } else {_                    _                    _                    _                    _                    _                    _                }_            } else if (headerName.equalsIgnoreCase(JMS_TYPE)) {_                if (headerValue == null) {_                    _                    _                    setMessageType(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    _                    setMessageType(jmsMessage, (String) headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_TYPE + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_PRIORITY)) {_                if (headerValue instanceof Integer) {_                    try {_                        jmsMessage.setJMSPriority((Integer) headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_PRIORITY + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_PRIORITY + " must be a Integer.  Type found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_DELIVERY_MODE)) {_                try {_                    JmsMessageHelper.setJMSDeliveryMode(jmsMessage, headerValue)__                } catch (JMSException e) {_                    throw new IllegalHeaderException("Failed to set the " + JMS_DELIVERY_MODE + " header. Cause: " + e.getLocalizedMessage(), e)__                }_            } else if (headerName.equalsIgnoreCase(JMS_EXPIRATION)) {_                if (headerValue instanceof Long) {_                    try {_                        jmsMessage.setJMSExpiration((Long) headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_EXPIRATION + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_EXPIRATION + " must be a Long.  Type found: " + headerValue.getClass().getName())__                }_            } else {_                LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                if (headerName.equalsIgnoreCase(JMS_DESTINATION) || headerName.equalsIgnoreCase(JMS_MESSAGE_ID) || headerName.equalsIgnoreCase("JMSTimestamp")_                        || headerName.equalsIgnoreCase("JMSRedelivered")) {_                    _                    _                    _                    _                    _                    _                    LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                } else {_                    if (!(headerValue instanceof JmsMessageType)) {_                        String encodedName = localKeyFormatStrategy.encodeKey(headerName)__                        try {_                            JmsMessageHelper.setProperty(jmsMessage, encodedName, headerValue)__                        } catch (JMSException e) {_                            throw new IllegalHeaderException("Failed to set the header " + encodedName + " header. Cause: " + e.getLocalizedMessage(), e)__                        }_                    }_                }_                _            }_        }_        return jmsMessage__    };adds,or,updates,the,link,message,headers,header,names,and,values,are,checked,for,jms,1,1,compliance,param,jms,message,the,link,message,to,add,or,update,the,headers,on,param,message,headers,a,link,map,of,string,object,pairs,param,key,format,strategy,the,a,link,key,format,strategy,to,used,to,format,keys,in,a,jms,1,1,compliant,manner,if,null,the,link,default,jms,key,format,strategy,will,be,used,return,link,message,throws,exception,a;public,static,message,set,jms,message,headers,final,message,jms,message,map,string,object,message,headers,key,format,strategy,key,format,strategy,throws,illegal,header,exception,key,format,strategy,local,key,format,strategy,null,if,key,format,strategy,null,local,key,format,strategy,new,default,jms,key,format,strategy,else,local,key,format,strategy,key,format,strategy,map,string,object,headers,new,hash,map,string,object,message,headers,set,string,keys,headers,key,set,for,string,header,name,keys,object,header,value,headers,get,header,name,if,header,name,equals,ignore,case,if,header,value,null,set,correlation,id,jms,message,null,else,if,header,value,instanceof,string,set,correlation,id,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,string,else,else,if,header,name,equals,ignore,case,if,header,value,null,set,message,type,jms,message,null,else,if,header,value,instanceof,string,set,message,type,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,integer,try,jms,message,set,jmspriority,integer,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,integer,type,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,try,jms,message,helper,set,jmsdelivery,mode,jms,message,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,if,header,name,equals,ignore,case,if,header,value,instanceof,long,try,jms,message,set,jmsexpiration,long,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,long,type,found,header,value,get,class,get,name,else,logger,trace,ignoring,jms,header,with,value,header,name,header,value,if,header,name,equals,ignore,case,header,name,equals,ignore,case,header,name,equals,ignore,case,jmstimestamp,header,name,equals,ignore,case,jmsredelivered,logger,trace,ignoring,jms,header,with,value,header,name,header,value,else,if,header,value,instanceof,jms,message,type,string,encoded,name,local,key,format,strategy,encode,key,header,name,try,jms,message,helper,set,property,jms,message,encoded,name,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,encoded,name,header,cause,e,get,localized,message,e,return,jms,message
JmsMessageHelper -> public static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException;1415517372;Adds or updates the {@link Message} headers. Header names and values are_checked for JMS 1.1 compliance.__@param jmsMessage        the {@link Message} to add or update the headers on_@param messageHeaders    a {@link Map} of String/Object pairs_@param keyFormatStrategy the a {@link KeyFormatStrategy} to used to_format keys in a JMS 1.1 compliant manner. If null the_{@link DefaultJmsKeyFormatStrategy} will be used._@return {@link Message}_@throws Exception a;public static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException {_        _        KeyFormatStrategy localKeyFormatStrategy = null__        if (keyFormatStrategy == null) {_            localKeyFormatStrategy = new DefaultJmsKeyFormatStrategy()__        } else {_            localKeyFormatStrategy = keyFormatStrategy__        }__        Map<String, Object> headers = new HashMap<String, Object>(messageHeaders)__        Set<String> keys = headers.keySet()__        for (String headerName : keys) {_            Object headerValue = headers.get(headerName)___            if (headerName.equalsIgnoreCase(JMS_CORRELATION_ID)) {_                if (headerValue == null) {_                    _                    _                    setCorrelationId(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    setCorrelationId(jmsMessage, (String) headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_CORRELATION_ID + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_REPLY_TO)) {_                if (headerValue instanceof String) {_                    _                    _                    _                } else {_                    _                    _                    _                    _                    _                    _                }_            } else if (headerName.equalsIgnoreCase(JMS_TYPE)) {_                if (headerValue == null) {_                    _                    _                    setMessageType(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    _                    setMessageType(jmsMessage, (String) headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_TYPE + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_PRIORITY)) {_                if (headerValue instanceof Integer) {_                    try {_                        jmsMessage.setJMSPriority((Integer) headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_PRIORITY + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_PRIORITY + " must be a Integer.  Type found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_DELIVERY_MODE)) {_                try {_                    JmsMessageHelper.setJMSDeliveryMode(jmsMessage, headerValue)__                } catch (JMSException e) {_                    throw new IllegalHeaderException("Failed to set the " + JMS_DELIVERY_MODE + " header. Cause: " + e.getLocalizedMessage(), e)__                }_            } else if (headerName.equalsIgnoreCase(JMS_EXPIRATION)) {_                if (headerValue instanceof Long) {_                    try {_                        jmsMessage.setJMSExpiration((Long) headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_EXPIRATION + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_EXPIRATION + " must be a Long.  Type found: " + headerValue.getClass().getName())__                }_            } else {_                LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                if (headerName.equalsIgnoreCase(JMS_DESTINATION) || headerName.equalsIgnoreCase(JMS_MESSAGE_ID) || headerName.equalsIgnoreCase("JMSTimestamp")_                        || headerName.equalsIgnoreCase("JMSRedelivered")) {_                    _                    _                    _                    _                    _                    _                    LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                } else {_                    if (!(headerValue instanceof JmsMessageType)) {_                        String encodedName = localKeyFormatStrategy.encodeKey(headerName)__                        try {_                            JmsMessageHelper.setProperty(jmsMessage, encodedName, headerValue)__                        } catch (JMSException e) {_                            throw new IllegalHeaderException("Failed to set the header " + encodedName + " header. Cause: " + e.getLocalizedMessage(), e)__                        }_                    }_                }_                _            }_        }_        return jmsMessage__    };adds,or,updates,the,link,message,headers,header,names,and,values,are,checked,for,jms,1,1,compliance,param,jms,message,the,link,message,to,add,or,update,the,headers,on,param,message,headers,a,link,map,of,string,object,pairs,param,key,format,strategy,the,a,link,key,format,strategy,to,used,to,format,keys,in,a,jms,1,1,compliant,manner,if,null,the,link,default,jms,key,format,strategy,will,be,used,return,link,message,throws,exception,a;public,static,message,set,jms,message,headers,final,message,jms,message,map,string,object,message,headers,key,format,strategy,key,format,strategy,throws,illegal,header,exception,key,format,strategy,local,key,format,strategy,null,if,key,format,strategy,null,local,key,format,strategy,new,default,jms,key,format,strategy,else,local,key,format,strategy,key,format,strategy,map,string,object,headers,new,hash,map,string,object,message,headers,set,string,keys,headers,key,set,for,string,header,name,keys,object,header,value,headers,get,header,name,if,header,name,equals,ignore,case,if,header,value,null,set,correlation,id,jms,message,null,else,if,header,value,instanceof,string,set,correlation,id,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,string,else,else,if,header,name,equals,ignore,case,if,header,value,null,set,message,type,jms,message,null,else,if,header,value,instanceof,string,set,message,type,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,integer,try,jms,message,set,jmspriority,integer,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,integer,type,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,try,jms,message,helper,set,jmsdelivery,mode,jms,message,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,if,header,name,equals,ignore,case,if,header,value,instanceof,long,try,jms,message,set,jmsexpiration,long,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,long,type,found,header,value,get,class,get,name,else,logger,trace,ignoring,jms,header,with,value,header,name,header,value,if,header,name,equals,ignore,case,header,name,equals,ignore,case,header,name,equals,ignore,case,jmstimestamp,header,name,equals,ignore,case,jmsredelivered,logger,trace,ignoring,jms,header,with,value,header,name,header,value,else,if,header,value,instanceof,jms,message,type,string,encoded,name,local,key,format,strategy,encode,key,header,name,try,jms,message,helper,set,property,jms,message,encoded,name,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,encoded,name,header,cause,e,get,localized,message,e,return,jms,message
JmsMessageHelper -> public static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException;1415518065;Adds or updates the {@link Message} headers. Header names and values are_checked for JMS 1.1 compliance.__@param jmsMessage        the {@link Message} to add or update the headers on_@param messageHeaders    a {@link Map} of String/Object pairs_@param keyFormatStrategy the a {@link KeyFormatStrategy} to used to_format keys in a JMS 1.1 compliant manner. If null the_{@link DefaultJmsKeyFormatStrategy} will be used._@return {@link Message};public static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException {_        _        KeyFormatStrategy localKeyFormatStrategy = null__        if (keyFormatStrategy == null) {_            localKeyFormatStrategy = new DefaultJmsKeyFormatStrategy()__        } else {_            localKeyFormatStrategy = keyFormatStrategy__        }__        Map<String, Object> headers = new HashMap<String, Object>(messageHeaders)__        Set<String> keys = headers.keySet()__        for (String headerName : keys) {_            Object headerValue = headers.get(headerName)___            if (headerName.equalsIgnoreCase(JMS_CORRELATION_ID)) {_                if (headerValue == null) {_                    _                    _                    setCorrelationId(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    setCorrelationId(jmsMessage, (String) headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_CORRELATION_ID + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_REPLY_TO)) {_                if (headerValue instanceof String) {_                    _                    _                    _                } else {_                    _                    _                    _                    _                    _                    _                }_            } else if (headerName.equalsIgnoreCase(JMS_TYPE)) {_                if (headerValue == null) {_                    _                    _                    setMessageType(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    _                    setMessageType(jmsMessage, (String) headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_TYPE + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_PRIORITY)) {_                if (headerValue instanceof Integer) {_                    try {_                        jmsMessage.setJMSPriority((Integer) headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_PRIORITY + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_PRIORITY + " must be a Integer.  Type found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_DELIVERY_MODE)) {_                try {_                    JmsMessageHelper.setJMSDeliveryMode(jmsMessage, headerValue)__                } catch (JMSException e) {_                    throw new IllegalHeaderException("Failed to set the " + JMS_DELIVERY_MODE + " header. Cause: " + e.getLocalizedMessage(), e)__                }_            } else if (headerName.equalsIgnoreCase(JMS_EXPIRATION)) {_                if (headerValue instanceof Long) {_                    try {_                        jmsMessage.setJMSExpiration((Long) headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_EXPIRATION + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_EXPIRATION + " must be a Long.  Type found: " + headerValue.getClass().getName())__                }_            } else {_                LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                if (headerName.equalsIgnoreCase(JMS_DESTINATION) || headerName.equalsIgnoreCase(JMS_MESSAGE_ID) || headerName.equalsIgnoreCase("JMSTimestamp")_                        || headerName.equalsIgnoreCase("JMSRedelivered")) {_                    _                    _                    _                    _                    _                    _                    LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                } else {_                    if (!(headerValue instanceof JmsMessageType)) {_                        String encodedName = localKeyFormatStrategy.encodeKey(headerName)__                        try {_                            JmsMessageHelper.setProperty(jmsMessage, encodedName, headerValue)__                        } catch (JMSException e) {_                            throw new IllegalHeaderException("Failed to set the header " + encodedName + " header. Cause: " + e.getLocalizedMessage(), e)__                        }_                    }_                }_                _            }_        }_        return jmsMessage__    };adds,or,updates,the,link,message,headers,header,names,and,values,are,checked,for,jms,1,1,compliance,param,jms,message,the,link,message,to,add,or,update,the,headers,on,param,message,headers,a,link,map,of,string,object,pairs,param,key,format,strategy,the,a,link,key,format,strategy,to,used,to,format,keys,in,a,jms,1,1,compliant,manner,if,null,the,link,default,jms,key,format,strategy,will,be,used,return,link,message;public,static,message,set,jms,message,headers,final,message,jms,message,map,string,object,message,headers,key,format,strategy,key,format,strategy,throws,illegal,header,exception,key,format,strategy,local,key,format,strategy,null,if,key,format,strategy,null,local,key,format,strategy,new,default,jms,key,format,strategy,else,local,key,format,strategy,key,format,strategy,map,string,object,headers,new,hash,map,string,object,message,headers,set,string,keys,headers,key,set,for,string,header,name,keys,object,header,value,headers,get,header,name,if,header,name,equals,ignore,case,if,header,value,null,set,correlation,id,jms,message,null,else,if,header,value,instanceof,string,set,correlation,id,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,string,else,else,if,header,name,equals,ignore,case,if,header,value,null,set,message,type,jms,message,null,else,if,header,value,instanceof,string,set,message,type,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,integer,try,jms,message,set,jmspriority,integer,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,integer,type,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,try,jms,message,helper,set,jmsdelivery,mode,jms,message,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,if,header,name,equals,ignore,case,if,header,value,instanceof,long,try,jms,message,set,jmsexpiration,long,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,long,type,found,header,value,get,class,get,name,else,logger,trace,ignoring,jms,header,with,value,header,name,header,value,if,header,name,equals,ignore,case,header,name,equals,ignore,case,header,name,equals,ignore,case,jmstimestamp,header,name,equals,ignore,case,jmsredelivered,logger,trace,ignoring,jms,header,with,value,header,name,header,value,else,if,header,value,instanceof,jms,message,type,string,encoded,name,local,key,format,strategy,encode,key,header,name,try,jms,message,helper,set,property,jms,message,encoded,name,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,encoded,name,header,cause,e,get,localized,message,e,return,jms,message
JmsMessageHelper -> public static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException;1415709131;Adds or updates the {@link Message} headers. Header names and values are_checked for JMS 1.1 compliance.__@param jmsMessage        the {@link Message} to add or update the headers on_@param messageHeaders    a {@link Map} of String/Object pairs_@param keyFormatStrategy the a {@link KeyFormatStrategy} to used to_format keys in a JMS 1.1 compliant manner. If null the_{@link DefaultJmsKeyFormatStrategy} will be used._@return {@link Message};public static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException {_        _        KeyFormatStrategy localKeyFormatStrategy = null__        if (keyFormatStrategy == null) {_            localKeyFormatStrategy = new DefaultJmsKeyFormatStrategy()__        } else {_            localKeyFormatStrategy = keyFormatStrategy__        }__        Map<String, Object> headers = new HashMap<String, Object>(messageHeaders)__        Set<String> keys = headers.keySet()__        for (String headerName : keys) {_            Object headerValue = headers.get(headerName)___            if (headerName.equalsIgnoreCase(JMS_CORRELATION_ID)) {_                if (headerValue == null) {_                    _                    _                    setCorrelationId(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    setCorrelationId(jmsMessage, (String) headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_CORRELATION_ID + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_REPLY_TO)) {_                if (headerValue instanceof String) {_                    _                    _                    _                } else {_                    _                    _                    _                    _                    _                    _                }_            } else if (headerName.equalsIgnoreCase(JMS_TYPE)) {_                if (headerValue == null) {_                    _                    _                    setMessageType(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    _                    setMessageType(jmsMessage, (String) headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_TYPE + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_PRIORITY)) {_                if (headerValue instanceof Integer) {_                    try {_                        jmsMessage.setJMSPriority((Integer) headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_PRIORITY + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_PRIORITY + " must be a Integer.  Type found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_DELIVERY_MODE)) {_                try {_                    JmsMessageHelper.setJMSDeliveryMode(jmsMessage, headerValue)__                } catch (JMSException e) {_                    throw new IllegalHeaderException("Failed to set the " + JMS_DELIVERY_MODE + " header. Cause: " + e.getLocalizedMessage(), e)__                }_            } else if (headerName.equalsIgnoreCase(JMS_EXPIRATION)) {_                if (headerValue instanceof Long) {_                    try {_                        jmsMessage.setJMSExpiration((Long) headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_EXPIRATION + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_EXPIRATION + " must be a Long.  Type found: " + headerValue.getClass().getName())__                }_            } else {_                LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                if (headerName.equalsIgnoreCase(JMS_DESTINATION) || headerName.equalsIgnoreCase(JMS_MESSAGE_ID) || headerName.equalsIgnoreCase("JMSTimestamp")_                        || headerName.equalsIgnoreCase("JMSRedelivered")) {_                    _                    _                    _                    _                    _                    _                    LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                } else {_                    if (!(headerValue instanceof JmsMessageType)) {_                        String encodedName = localKeyFormatStrategy.encodeKey(headerName)__                        try {_                            JmsMessageHelper.setProperty(jmsMessage, encodedName, headerValue)__                        } catch (JMSException e) {_                            throw new IllegalHeaderException("Failed to set the header " + encodedName + " header. Cause: " + e.getLocalizedMessage(), e)__                        }_                    }_                }_                _            }_        }_        return jmsMessage__    };adds,or,updates,the,link,message,headers,header,names,and,values,are,checked,for,jms,1,1,compliance,param,jms,message,the,link,message,to,add,or,update,the,headers,on,param,message,headers,a,link,map,of,string,object,pairs,param,key,format,strategy,the,a,link,key,format,strategy,to,used,to,format,keys,in,a,jms,1,1,compliant,manner,if,null,the,link,default,jms,key,format,strategy,will,be,used,return,link,message;public,static,message,set,jms,message,headers,final,message,jms,message,map,string,object,message,headers,key,format,strategy,key,format,strategy,throws,illegal,header,exception,key,format,strategy,local,key,format,strategy,null,if,key,format,strategy,null,local,key,format,strategy,new,default,jms,key,format,strategy,else,local,key,format,strategy,key,format,strategy,map,string,object,headers,new,hash,map,string,object,message,headers,set,string,keys,headers,key,set,for,string,header,name,keys,object,header,value,headers,get,header,name,if,header,name,equals,ignore,case,if,header,value,null,set,correlation,id,jms,message,null,else,if,header,value,instanceof,string,set,correlation,id,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,string,else,else,if,header,name,equals,ignore,case,if,header,value,null,set,message,type,jms,message,null,else,if,header,value,instanceof,string,set,message,type,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,integer,try,jms,message,set,jmspriority,integer,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,integer,type,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,try,jms,message,helper,set,jmsdelivery,mode,jms,message,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,if,header,name,equals,ignore,case,if,header,value,instanceof,long,try,jms,message,set,jmsexpiration,long,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,long,type,found,header,value,get,class,get,name,else,logger,trace,ignoring,jms,header,with,value,header,name,header,value,if,header,name,equals,ignore,case,header,name,equals,ignore,case,header,name,equals,ignore,case,jmstimestamp,header,name,equals,ignore,case,jmsredelivered,logger,trace,ignoring,jms,header,with,value,header,name,header,value,else,if,header,value,instanceof,jms,message,type,string,encoded,name,local,key,format,strategy,encode,key,header,name,try,jms,message,helper,set,property,jms,message,encoded,name,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,encoded,name,header,cause,e,get,localized,message,e,return,jms,message
JmsMessageHelper -> public static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException;1415709132;Adds or updates the {@link Message} headers. Header names and values are_checked for JMS 1.1 compliance.__@param jmsMessage        the {@link Message} to add or update the headers on_@param messageHeaders    a {@link Map} of String/Object pairs_@param keyFormatStrategy the a {@link KeyFormatStrategy} to used to_format keys in a JMS 1.1 compliant manner. If null the_{@link DefaultJmsKeyFormatStrategy} will be used._@return {@link Message};public static Message setJmsMessageHeaders(final Message jmsMessage, Map<String, Object> messageHeaders, KeyFormatStrategy keyFormatStrategy) throws IllegalHeaderException {_        _        KeyFormatStrategy localKeyFormatStrategy = null__        if (keyFormatStrategy == null) {_            localKeyFormatStrategy = new DefaultJmsKeyFormatStrategy()__        } else {_            localKeyFormatStrategy = keyFormatStrategy__        }__        Map<String, Object> headers = new HashMap<String, Object>(messageHeaders)__        Set<String> keys = headers.keySet()__        for (String headerName : keys) {_            Object headerValue = headers.get(headerName)___            if (headerName.equalsIgnoreCase(JMS_CORRELATION_ID)) {_                if (headerValue == null) {_                    _                    _                    setCorrelationId(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    setCorrelationId(jmsMessage, (String) headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_CORRELATION_ID + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_REPLY_TO)) {_                if (headerValue instanceof String) {_                    _                    _                    _                } else {_                    _                    _                    _                    _                    _                    _                }_            } else if (headerName.equalsIgnoreCase(JMS_TYPE)) {_                if (headerValue == null) {_                    _                    _                    setMessageType(jmsMessage, null)__                } else if (headerValue instanceof String) {_                    _                    setMessageType(jmsMessage, (String) headerValue)__                } else {_                    throw new IllegalHeaderException("The " + JMS_TYPE + " must either be a String or null.  Found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_PRIORITY)) {_                if (headerValue instanceof Integer) {_                    try {_                        jmsMessage.setJMSPriority((Integer) headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_PRIORITY + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_PRIORITY + " must be a Integer.  Type found: " + headerValue.getClass().getName())__                }_            } else if (headerName.equalsIgnoreCase(JMS_DELIVERY_MODE)) {_                try {_                    JmsMessageHelper.setJMSDeliveryMode(jmsMessage, headerValue)__                } catch (JMSException e) {_                    throw new IllegalHeaderException("Failed to set the " + JMS_DELIVERY_MODE + " header. Cause: " + e.getLocalizedMessage(), e)__                }_            } else if (headerName.equalsIgnoreCase(JMS_EXPIRATION)) {_                if (headerValue instanceof Long) {_                    try {_                        jmsMessage.setJMSExpiration((Long) headerValue)__                    } catch (JMSException e) {_                        throw new IllegalHeaderException("Failed to set the " + JMS_EXPIRATION + " header. Cause: " + e.getLocalizedMessage(), e)__                    }_                } else {_                    throw new IllegalHeaderException("The " + JMS_EXPIRATION + " must be a Long.  Type found: " + headerValue.getClass().getName())__                }_            } else {_                LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                if (headerName.equalsIgnoreCase(JMS_DESTINATION) || headerName.equalsIgnoreCase(JMS_MESSAGE_ID) || headerName.equalsIgnoreCase("JMSTimestamp")_                        || headerName.equalsIgnoreCase("JMSRedelivered")) {_                    _                    _                    _                    _                    _                    _                    LOGGER.trace("Ignoring JMS header: {} with value: {}", headerName, headerValue)__                } else {_                    if (!(headerValue instanceof JmsMessageType)) {_                        String encodedName = localKeyFormatStrategy.encodeKey(headerName)__                        try {_                            JmsMessageHelper.setProperty(jmsMessage, encodedName, headerValue)__                        } catch (JMSException e) {_                            throw new IllegalHeaderException("Failed to set the header " + encodedName + " header. Cause: " + e.getLocalizedMessage(), e)__                        }_                    }_                }_                _            }_        }_        return jmsMessage__    };adds,or,updates,the,link,message,headers,header,names,and,values,are,checked,for,jms,1,1,compliance,param,jms,message,the,link,message,to,add,or,update,the,headers,on,param,message,headers,a,link,map,of,string,object,pairs,param,key,format,strategy,the,a,link,key,format,strategy,to,used,to,format,keys,in,a,jms,1,1,compliant,manner,if,null,the,link,default,jms,key,format,strategy,will,be,used,return,link,message;public,static,message,set,jms,message,headers,final,message,jms,message,map,string,object,message,headers,key,format,strategy,key,format,strategy,throws,illegal,header,exception,key,format,strategy,local,key,format,strategy,null,if,key,format,strategy,null,local,key,format,strategy,new,default,jms,key,format,strategy,else,local,key,format,strategy,key,format,strategy,map,string,object,headers,new,hash,map,string,object,message,headers,set,string,keys,headers,key,set,for,string,header,name,keys,object,header,value,headers,get,header,name,if,header,name,equals,ignore,case,if,header,value,null,set,correlation,id,jms,message,null,else,if,header,value,instanceof,string,set,correlation,id,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,string,else,else,if,header,name,equals,ignore,case,if,header,value,null,set,message,type,jms,message,null,else,if,header,value,instanceof,string,set,message,type,jms,message,string,header,value,else,throw,new,illegal,header,exception,the,must,either,be,a,string,or,null,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,if,header,value,instanceof,integer,try,jms,message,set,jmspriority,integer,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,integer,type,found,header,value,get,class,get,name,else,if,header,name,equals,ignore,case,try,jms,message,helper,set,jmsdelivery,mode,jms,message,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,if,header,name,equals,ignore,case,if,header,value,instanceof,long,try,jms,message,set,jmsexpiration,long,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,cause,e,get,localized,message,e,else,throw,new,illegal,header,exception,the,must,be,a,long,type,found,header,value,get,class,get,name,else,logger,trace,ignoring,jms,header,with,value,header,name,header,value,if,header,name,equals,ignore,case,header,name,equals,ignore,case,header,name,equals,ignore,case,jmstimestamp,header,name,equals,ignore,case,jmsredelivered,logger,trace,ignoring,jms,header,with,value,header,name,header,value,else,if,header,value,instanceof,jms,message,type,string,encoded,name,local,key,format,strategy,encode,key,header,name,try,jms,message,helper,set,property,jms,message,encoded,name,header,value,catch,jmsexception,e,throw,new,illegal,header,exception,failed,to,set,the,header,encoded,name,header,cause,e,get,localized,message,e,return,jms,message
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1343905000;Normalizes the destination name, by removing any leading queue or topic prefixes.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(QUEUE_PREFIX)) {_            return removeStartingCharacters(destination.substring(QUEUE_PREFIX.length()), '/')__        } else if (destination.startsWith(TOPIC_PREFIX)) {_            return removeStartingCharacters(destination.substring(TOPIC_PREFIX.length()), '/')__        } else {_            return destination__        }_    };normalizes,the,destination,name,by,removing,any,leading,queue,or,topic,prefixes,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,return,remove,starting,characters,destination,substring,length,else,if,destination,starts,with,return,remove,starting,characters,destination,substring,length,else,return,destination
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1441611090;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        _        return normalizeDestinationName(destination, false)__    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,return,normalize,destination,name,destination,false
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1441617001;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        _        return normalizeDestinationName(destination, false)__    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,return,normalize,destination,name,destination,false
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1524063178;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        _        return normalizeDestinationName(destination, false)__    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,return,normalize,destination,name,destination,false
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1537290824;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        _        return normalizeDestinationName(destination, false)__    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,return,normalize,destination,name,destination,false
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1540108158;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        _        return normalizeDestinationName(destination, false)__    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,return,normalize,destination,name,destination,false
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1540108163;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        _        return normalizeDestinationName(destination, false)__    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,return,normalize,destination,name,destination,false
JmsMessageHelper -> public static String getJMSType(Message message);1343905000;Gets the JMSType from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1417253476;Gets the JMSType from the message.__@param message the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1417254093;Gets the JMSType from the message.__@param message the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1426413111;Gets the JMSType from the message.__@param message the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1426419511;Gets the JMSType from the message.__@param message the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1426643580;Gets the JMSType from the message.__@param message the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1437137782;Gets the JMSType from the message.__@param message the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1441611090;Gets the JMSType from the message.__@param message the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1441617001;Gets the JMSType from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1524063178;Gets the JMSType from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1537290824;Gets the JMSType from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1540108158;Gets the JMSType from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1540108163;Gets the JMSType from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1343905000;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<String, Object>()__        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, jmsMessage.getObjectProperty(key))__            }_        }__        _        jmsMessage.clearProperties()__        for (Entry<String, Object> entry : map.entrySet()) {_            jmsMessage.setObjectProperty(entry.getKey(), entry.getValue())__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,string,object,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,jms,message,get,object,property,key,jms,message,clear,properties,for,entry,string,object,entry,map,entry,set,jms,message,set,object,property,entry,get,key,entry,get,value,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1441617001;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws javax.jms.JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<String, Object>()__        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, getProperty(jmsMessage, key))__            }_        }__        _        jmsMessage.clearProperties()__        for (Map.Entry<String, Object> entry : map.entrySet()) {_            jmsMessage.setObjectProperty(entry.getKey(), entry.getValue())__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,javax,jms,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,string,object,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,get,property,jms,message,key,jms,message,clear,properties,for,map,entry,string,object,entry,map,entry,set,jms,message,set,object,property,entry,get,key,entry,get,value,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1524063178;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws javax.jms.JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<>()__        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, getProperty(jmsMessage, key))__            }_        }__        _        jmsMessage.clearProperties()__        for (Map.Entry<String, Object> entry : map.entrySet()) {_            jmsMessage.setObjectProperty(entry.getKey(), entry.getValue())__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,javax,jms,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,get,property,jms,message,key,jms,message,clear,properties,for,map,entry,string,object,entry,map,entry,set,jms,message,set,object,property,entry,get,key,entry,get,value,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1537290824;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws javax.jms.JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<>()__        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, getProperty(jmsMessage, key))__            }_        }__        _        jmsMessage.clearProperties()__        for (Map.Entry<String, Object> entry : map.entrySet()) {_            jmsMessage.setObjectProperty(entry.getKey(), entry.getValue())__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,javax,jms,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,get,property,jms,message,key,jms,message,clear,properties,for,map,entry,string,object,entry,map,entry,set,jms,message,set,object,property,entry,get,key,entry,get,value,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1540108158;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws javax.jms.JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<>()__        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, getProperty(jmsMessage, key))__            }_        }__        _        jmsMessage.clearProperties()__        for (Map.Entry<String, Object> entry : map.entrySet()) {_            jmsMessage.setObjectProperty(entry.getKey(), entry.getValue())__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,javax,jms,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,get,property,jms,message,key,jms,message,clear,properties,for,map,entry,string,object,entry,map,entry,set,jms,message,set,object,property,entry,get,key,entry,get,value,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1540108163;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws javax.jms.JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<>()__        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, getProperty(jmsMessage, key))__            }_        }__        _        jmsMessage.clearProperties()__        for (Map.Entry<String, Object> entry : map.entrySet()) {_            jmsMessage.setObjectProperty(entry.getKey(), entry.getValue())__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,javax,jms,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,get,property,jms,message,key,jms,message,clear,properties,for,map,entry,string,object,entry,map,entry,set,jms,message,set,object,property,entry,get,key,entry,get,value,return,answer
JmsMessageHelper -> public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException;1343905000;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message  the message_@param deliveryMode  the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else {_            _            Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__            if (value != null) {_                mode = value__            }_        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__            message.setIntProperty(JmsConstants.JMS_DELIVERY_MODE, mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,exchange,exchange,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,if,mode,null,message,set,jmsdelivery,mode,mode,message,set,int,property,jms,constants,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException;1441611090;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message  the message_@param deliveryMode  the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else {_            _            Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__            if (value != null) {_                mode = value__            }_        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__            message.setIntProperty(JmsConstants.JMS_DELIVERY_MODE, mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,exchange,exchange,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,if,mode,null,message,set,jmsdelivery,mode,mode,message,set,int,property,jms,constants,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException;1441617001;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message  the message_@param deliveryMode  the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else {_            _            Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__            if (value != null) {_                mode = value__            }_        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__            message.setIntProperty(JmsConstants.JMS_DELIVERY_MODE, mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,exchange,exchange,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,if,mode,null,message,set,jmsdelivery,mode,mode,message,set,int,property,jms,constants,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException;1524063178;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message  the message_@param deliveryMode  the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else {_            _            Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__            if (value != null) {_                mode = value__            }_        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__            message.setIntProperty(JmsConstants.JMS_DELIVERY_MODE, mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,exchange,exchange,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,if,mode,null,message,set,jmsdelivery,mode,mode,message,set,int,property,jms,constants,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException;1537290824;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message  the message_@param deliveryMode  the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else {_            _            Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__            if (value != null) {_                mode = value__            }_        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__            message.setIntProperty(JmsConstants.JMS_DELIVERY_MODE, mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,exchange,exchange,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,if,mode,null,message,set,jmsdelivery,mode,mode,message,set,int,property,jms,constants,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException;1540108158;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message  the message_@param deliveryMode  the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else {_            _            Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__            if (value != null) {_                mode = value__            }_        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__            message.setIntProperty(JmsConstants.JMS_DELIVERY_MODE, mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,exchange,exchange,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,if,mode,null,message,set,jmsdelivery,mode,mode,message,set,int,property,jms,constants,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException;1540108163;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message  the message_@param deliveryMode  the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else {_            _            Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__            if (value != null) {_                mode = value__            }_        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__            message.setIntProperty(JmsConstants.JMS_DELIVERY_MODE, mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,exchange,exchange,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,if,mode,null,message,set,jmsdelivery,mode,mode,message,set,int,property,jms,constants,mode
