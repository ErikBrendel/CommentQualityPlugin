# id;timestamp;commentText;codeText;commentWords;codeWords
SjmsComponent -> public void setTimedTaskManager(TimedTaskManager timedTaskManager);1431945084;To use a custom TimedTaskManager;public void setTimedTaskManager(TimedTaskManager timedTaskManager) {_        this.timedTaskManager = timedTaskManager__    };to,use,a,custom,timed,task,manager;public,void,set,timed,task,manager,timed,task,manager,timed,task,manager,this,timed,task,manager,timed,task,manager
SjmsComponent -> public void setTimedTaskManager(TimedTaskManager timedTaskManager);1437137782;To use a custom TimedTaskManager;public void setTimedTaskManager(TimedTaskManager timedTaskManager) {_        this.timedTaskManager = timedTaskManager__    };to,use,a,custom,timed,task,manager;public,void,set,timed,task,manager,timed,task,manager,timed,task,manager,this,timed,task,manager,timed,task,manager
SjmsComponent -> public void setTimedTaskManager(TimedTaskManager timedTaskManager);1438158851;To use a custom TimedTaskManager;public void setTimedTaskManager(TimedTaskManager timedTaskManager) {_        this.timedTaskManager = timedTaskManager__    };to,use,a,custom,timed,task,manager;public,void,set,timed,task,manager,timed,task,manager,timed,task,manager,this,timed,task,manager,timed,task,manager
SjmsComponent -> public void setTimedTaskManager(TimedTaskManager timedTaskManager);1441617001;To use a custom TimedTaskManager;public void setTimedTaskManager(TimedTaskManager timedTaskManager) {_        this.timedTaskManager = timedTaskManager__    };to,use,a,custom,timed,task,manager;public,void,set,timed,task,manager,timed,task,manager,timed,task,manager,this,timed,task,manager,timed,task,manager
SjmsComponent -> public void setTimedTaskManager(TimedTaskManager timedTaskManager);1441617486;To use a custom TimedTaskManager;public void setTimedTaskManager(TimedTaskManager timedTaskManager) {_        this.timedTaskManager = timedTaskManager__    };to,use,a,custom,timed,task,manager;public,void,set,timed,task,manager,timed,task,manager,timed,task,manager,this,timed,task,manager,timed,task,manager
SjmsComponent -> public void setTimedTaskManager(TimedTaskManager timedTaskManager);1461839859;To use a custom TimedTaskManager;public void setTimedTaskManager(TimedTaskManager timedTaskManager) {_        this.timedTaskManager = timedTaskManager__    };to,use,a,custom,timed,task,manager;public,void,set,timed,task,manager,timed,task,manager,timed,task,manager,this,timed,task,manager,timed,task,manager
SjmsComponent -> public void setTimedTaskManager(TimedTaskManager timedTaskManager);1463119124;To use a custom TimedTaskManager;public void setTimedTaskManager(TimedTaskManager timedTaskManager) {_        this.timedTaskManager = timedTaskManager__    };to,use,a,custom,timed,task,manager;public,void,set,timed,task,manager,timed,task,manager,timed,task,manager,this,timed,task,manager,timed,task,manager
SjmsComponent -> public void setTimedTaskManager(TimedTaskManager timedTaskManager);1482332324;To use a custom TimedTaskManager;public void setTimedTaskManager(TimedTaskManager timedTaskManager) {_        this.timedTaskManager = timedTaskManager__    };to,use,a,custom,timed,task,manager;public,void,set,timed,task,manager,timed,task,manager,timed,task,manager,this,timed,task,manager,timed,task,manager
SjmsComponent -> public void setTimedTaskManager(TimedTaskManager timedTaskManager);1482346687;To use a custom TimedTaskManager;public void setTimedTaskManager(TimedTaskManager timedTaskManager) {_        this.timedTaskManager = timedTaskManager__    };to,use,a,custom,timed,task,manager;public,void,set,timed,task,manager,timed,task,manager,timed,task,manager,this,timed,task,manager,timed,task,manager
SjmsComponent -> public void setTimedTaskManager(TimedTaskManager timedTaskManager);1488894155;To use a custom TimedTaskManager;public void setTimedTaskManager(TimedTaskManager timedTaskManager) {_        this.timedTaskManager = timedTaskManager__    };to,use,a,custom,timed,task,manager;public,void,set,timed,task,manager,timed,task,manager,timed,task,manager,this,timed,task,manager,timed,task,manager
SjmsComponent -> public void setTimedTaskManager(TimedTaskManager timedTaskManager);1489430295;To use a custom TimedTaskManager;public void setTimedTaskManager(TimedTaskManager timedTaskManager) {_        this.timedTaskManager = timedTaskManager__    };to,use,a,custom,timed,task,manager;public,void,set,timed,task,manager,timed,task,manager,timed,task,manager,this,timed,task,manager,timed,task,manager
SjmsComponent -> public void setTimedTaskManager(TimedTaskManager timedTaskManager);1490689115;To use a custom TimedTaskManager;public void setTimedTaskManager(TimedTaskManager timedTaskManager) {_        this.timedTaskManager = timedTaskManager__    };to,use,a,custom,timed,task,manager;public,void,set,timed,task,manager,timed,task,manager,timed,task,manager,this,timed,task,manager,timed,task,manager
SjmsComponent -> public void setTimedTaskManager(TimedTaskManager timedTaskManager);1540108158;To use a custom TimedTaskManager;public void setTimedTaskManager(TimedTaskManager timedTaskManager) {_        this.timedTaskManager = timedTaskManager__    };to,use,a,custom,timed,task,manager;public,void,set,timed,task,manager,timed,task,manager,timed,task,manager,this,timed,task,manager,timed,task,manager
SjmsComponent -> public void setTimedTaskManager(TimedTaskManager timedTaskManager);1547241305;To use a custom TimedTaskManager;public void setTimedTaskManager(TimedTaskManager timedTaskManager) {_        this.timedTaskManager = timedTaskManager__    };to,use,a,custom,timed,task,manager;public,void,set,timed,task,manager,timed,task,manager,timed,task,manager,this,timed,task,manager,timed,task,manager
SjmsComponent -> public void setTimedTaskManager(TimedTaskManager timedTaskManager);1548332772;To use a custom TimedTaskManager;public void setTimedTaskManager(TimedTaskManager timedTaskManager) {_        this.timedTaskManager = timedTaskManager__    };to,use,a,custom,timed,task,manager;public,void,set,timed,task,manager,timed,task,manager,timed,task,manager,this,timed,task,manager,timed,task,manager
SjmsComponent -> private void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception;1343905000;Helper method used to verify that when there is a namedReplyTo value we_are using the InOut MEP. If namedReplyTo is defined and the MEP is InOnly_the endpoint won't be expecting a reply so throw an error to alert the_user.__@param parameters {@link Endpoint} parameters_@throws Exception throws a {@link CamelException} when MEP equals InOnly_and namedReplyTo is defined.;private void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception {_        boolean namedReplyToSet = parameters.containsKey("namedReplyTo")__        boolean mepSet = parameters.containsKey("exchangePattern")__        if (namedReplyToSet && mepSet) {_            if (!parameters.get("exchangePattern").equals(ExchangePattern.InOut.toString())) {_                String namedReplyTo = (String)parameters.get("namedReplyTo")__                ExchangePattern mep = ExchangePattern.valueOf((String)parameters.get("exchangePattern"))__                throw new CamelException(_                                         "Setting parameter namedReplyTo="_                                             + namedReplyTo_                                             + " requires a MEP of type InOut.  Parameter exchangePattern is set to "_                                             + mep)__            }_        }_    };helper,method,used,to,verify,that,when,there,is,a,named,reply,to,value,we,are,using,the,in,out,mep,if,named,reply,to,is,defined,and,the,mep,is,in,only,the,endpoint,won,t,be,expecting,a,reply,so,throw,an,error,to,alert,the,user,param,parameters,link,endpoint,parameters,throws,exception,throws,a,link,camel,exception,when,mep,equals,in,only,and,named,reply,to,is,defined;private,void,validate,mep,and,reply,to,map,string,object,parameters,throws,exception,boolean,named,reply,to,set,parameters,contains,key,named,reply,to,boolean,mep,set,parameters,contains,key,exchange,pattern,if,named,reply,to,set,mep,set,if,parameters,get,exchange,pattern,equals,exchange,pattern,in,out,to,string,string,named,reply,to,string,parameters,get,named,reply,to,exchange,pattern,mep,exchange,pattern,value,of,string,parameters,get,exchange,pattern,throw,new,camel,exception,setting,parameter,named,reply,to,named,reply,to,requires,a,mep,of,type,in,out,parameter,exchange,pattern,is,set,to,mep
SjmsComponent -> private void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception;1344346492;Helper method used to verify that when there is a namedReplyTo value we_are using the InOut MEP. If namedReplyTo is defined and the MEP is InOnly_the endpoint won't be expecting a reply so throw an error to alert the_user.__@param parameters {@link Endpoint} parameters_@throws Exception throws a {@link CamelException} when MEP equals InOnly_and namedReplyTo is defined.;private void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception {_        boolean namedReplyToSet = parameters.containsKey("namedReplyTo")__        boolean mepSet = parameters.containsKey("exchangePattern")__        if (namedReplyToSet && mepSet) {_            if (!parameters.get("exchangePattern").equals(ExchangePattern.InOut.toString())) {_                String namedReplyTo = (String)parameters.get("namedReplyTo")__                ExchangePattern mep = ExchangePattern.valueOf((String)parameters.get("exchangePattern"))__                throw new CamelException("Setting parameter namedReplyTo=" + namedReplyTo + " requires a MEP of type InOut.  Parameter exchangePattern is set to " + mep)__            }_        }_    };helper,method,used,to,verify,that,when,there,is,a,named,reply,to,value,we,are,using,the,in,out,mep,if,named,reply,to,is,defined,and,the,mep,is,in,only,the,endpoint,won,t,be,expecting,a,reply,so,throw,an,error,to,alert,the,user,param,parameters,link,endpoint,parameters,throws,exception,throws,a,link,camel,exception,when,mep,equals,in,only,and,named,reply,to,is,defined;private,void,validate,mep,and,reply,to,map,string,object,parameters,throws,exception,boolean,named,reply,to,set,parameters,contains,key,named,reply,to,boolean,mep,set,parameters,contains,key,exchange,pattern,if,named,reply,to,set,mep,set,if,parameters,get,exchange,pattern,equals,exchange,pattern,in,out,to,string,string,named,reply,to,string,parameters,get,named,reply,to,exchange,pattern,mep,exchange,pattern,value,of,string,parameters,get,exchange,pattern,throw,new,camel,exception,setting,parameter,named,reply,to,named,reply,to,requires,a,mep,of,type,in,out,parameter,exchange,pattern,is,set,to,mep
SjmsComponent -> private void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception;1346298132;Helper method used to verify that when there is a namedReplyTo value we_are using the InOut MEP. If namedReplyTo is defined and the MEP is InOnly_the endpoint won't be expecting a reply so throw an error to alert the_user.__@param parameters {@link Endpoint} parameters_@throws Exception throws a {@link CamelException} when MEP equals InOnly_and namedReplyTo is defined.;private void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception {_        boolean namedReplyToSet = parameters.containsKey("namedReplyTo")__        boolean mepSet = parameters.containsKey("exchangePattern")__        if (namedReplyToSet && mepSet) {_            if (!parameters.get("exchangePattern").equals(ExchangePattern.InOut.toString())) {_                String namedReplyTo = (String)parameters.get("namedReplyTo")__                ExchangePattern mep = ExchangePattern.valueOf((String)parameters.get("exchangePattern"))__                throw new CamelException("Setting parameter namedReplyTo=" + namedReplyTo + " requires a MEP of type InOut.  Parameter exchangePattern is set to " + mep)__            }_        }_    };helper,method,used,to,verify,that,when,there,is,a,named,reply,to,value,we,are,using,the,in,out,mep,if,named,reply,to,is,defined,and,the,mep,is,in,only,the,endpoint,won,t,be,expecting,a,reply,so,throw,an,error,to,alert,the,user,param,parameters,link,endpoint,parameters,throws,exception,throws,a,link,camel,exception,when,mep,equals,in,only,and,named,reply,to,is,defined;private,void,validate,mep,and,reply,to,map,string,object,parameters,throws,exception,boolean,named,reply,to,set,parameters,contains,key,named,reply,to,boolean,mep,set,parameters,contains,key,exchange,pattern,if,named,reply,to,set,mep,set,if,parameters,get,exchange,pattern,equals,exchange,pattern,in,out,to,string,string,named,reply,to,string,parameters,get,named,reply,to,exchange,pattern,mep,exchange,pattern,value,of,string,parameters,get,exchange,pattern,throw,new,camel,exception,setting,parameter,named,reply,to,named,reply,to,requires,a,mep,of,type,in,out,parameter,exchange,pattern,is,set,to,mep
SjmsComponent -> private void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception;1348524340;Helper method used to verify that when there is a namedReplyTo value we_are using the InOut MEP. If namedReplyTo is defined and the MEP is InOnly_the endpoint won't be expecting a reply so throw an error to alert the_user.__@param parameters {@link Endpoint} parameters_@throws Exception throws a {@link CamelException} when MEP equals InOnly_and namedReplyTo is defined.;private void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception {_        boolean namedReplyToSet = parameters.containsKey("namedReplyTo")__        boolean mepSet = parameters.containsKey("exchangePattern")__        if (namedReplyToSet && mepSet) {_            if (!parameters.get("exchangePattern").equals(ExchangePattern.InOut.toString())) {_                String namedReplyTo = (String)parameters.get("namedReplyTo")__                ExchangePattern mep = ExchangePattern.valueOf((String)parameters.get("exchangePattern"))__                throw new CamelException("Setting parameter namedReplyTo=" + namedReplyTo + " requires a MEP of type InOut.  Parameter exchangePattern is set to " + mep)__            }_        }_    };helper,method,used,to,verify,that,when,there,is,a,named,reply,to,value,we,are,using,the,in,out,mep,if,named,reply,to,is,defined,and,the,mep,is,in,only,the,endpoint,won,t,be,expecting,a,reply,so,throw,an,error,to,alert,the,user,param,parameters,link,endpoint,parameters,throws,exception,throws,a,link,camel,exception,when,mep,equals,in,only,and,named,reply,to,is,defined;private,void,validate,mep,and,reply,to,map,string,object,parameters,throws,exception,boolean,named,reply,to,set,parameters,contains,key,named,reply,to,boolean,mep,set,parameters,contains,key,exchange,pattern,if,named,reply,to,set,mep,set,if,parameters,get,exchange,pattern,equals,exchange,pattern,in,out,to,string,string,named,reply,to,string,parameters,get,named,reply,to,exchange,pattern,mep,exchange,pattern,value,of,string,parameters,get,exchange,pattern,throw,new,camel,exception,setting,parameter,named,reply,to,named,reply,to,requires,a,mep,of,type,in,out,parameter,exchange,pattern,is,set,to,mep
SjmsComponent -> private void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception;1348673753;Helper method used to verify that when there is a namedReplyTo value we_are using the InOut MEP. If namedReplyTo is defined and the MEP is InOnly_the endpoint won't be expecting a reply so throw an error to alert the_user.__@param parameters {@link Endpoint} parameters_@throws Exception throws a {@link CamelException} when MEP equals InOnly_and namedReplyTo is defined.;private void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception {_        boolean namedReplyToSet = parameters.containsKey("namedReplyTo")__        boolean mepSet = parameters.containsKey("exchangePattern")__        if (namedReplyToSet && mepSet) {_            if (!parameters.get("exchangePattern").equals(ExchangePattern.InOut.toString())) {_                String namedReplyTo = (String)parameters.get("namedReplyTo")__                ExchangePattern mep = ExchangePattern.valueOf((String)parameters.get("exchangePattern"))__                throw new CamelException("Setting parameter namedReplyTo=" + namedReplyTo + " requires a MEP of type InOut.  Parameter exchangePattern is set to " + mep)__            }_        }_    };helper,method,used,to,verify,that,when,there,is,a,named,reply,to,value,we,are,using,the,in,out,mep,if,named,reply,to,is,defined,and,the,mep,is,in,only,the,endpoint,won,t,be,expecting,a,reply,so,throw,an,error,to,alert,the,user,param,parameters,link,endpoint,parameters,throws,exception,throws,a,link,camel,exception,when,mep,equals,in,only,and,named,reply,to,is,defined;private,void,validate,mep,and,reply,to,map,string,object,parameters,throws,exception,boolean,named,reply,to,set,parameters,contains,key,named,reply,to,boolean,mep,set,parameters,contains,key,exchange,pattern,if,named,reply,to,set,mep,set,if,parameters,get,exchange,pattern,equals,exchange,pattern,in,out,to,string,string,named,reply,to,string,parameters,get,named,reply,to,exchange,pattern,mep,exchange,pattern,value,of,string,parameters,get,exchange,pattern,throw,new,camel,exception,setting,parameter,named,reply,to,named,reply,to,requires,a,mep,of,type,in,out,parameter,exchange,pattern,is,set,to,mep
SjmsComponent -> private void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception;1348675078;Helper method used to verify that when there is a namedReplyTo value we_are using the InOut MEP. If namedReplyTo is defined and the MEP is InOnly_the endpoint won't be expecting a reply so throw an error to alert the_user.__@param parameters {@link Endpoint} parameters_@throws Exception throws a {@link CamelException} when MEP equals InOnly_and namedReplyTo is defined.;private void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception {_        boolean namedReplyToSet = parameters.containsKey("namedReplyTo")__        boolean mepSet = parameters.containsKey("exchangePattern")__        if (namedReplyToSet && mepSet) {_            if (!parameters.get("exchangePattern").equals(ExchangePattern.InOut.toString())) {_                String namedReplyTo = (String)parameters.get("namedReplyTo")__                ExchangePattern mep = ExchangePattern.valueOf((String)parameters.get("exchangePattern"))__                throw new CamelException("Setting parameter namedReplyTo=" + namedReplyTo + " requires a MEP of type InOut.  Parameter exchangePattern is set to " + mep)__            }_        }_    };helper,method,used,to,verify,that,when,there,is,a,named,reply,to,value,we,are,using,the,in,out,mep,if,named,reply,to,is,defined,and,the,mep,is,in,only,the,endpoint,won,t,be,expecting,a,reply,so,throw,an,error,to,alert,the,user,param,parameters,link,endpoint,parameters,throws,exception,throws,a,link,camel,exception,when,mep,equals,in,only,and,named,reply,to,is,defined;private,void,validate,mep,and,reply,to,map,string,object,parameters,throws,exception,boolean,named,reply,to,set,parameters,contains,key,named,reply,to,boolean,mep,set,parameters,contains,key,exchange,pattern,if,named,reply,to,set,mep,set,if,parameters,get,exchange,pattern,equals,exchange,pattern,in,out,to,string,string,named,reply,to,string,parameters,get,named,reply,to,exchange,pattern,mep,exchange,pattern,value,of,string,parameters,get,exchange,pattern,throw,new,camel,exception,setting,parameter,named,reply,to,named,reply,to,requires,a,mep,of,type,in,out,parameter,exchange,pattern,is,set,to,mep
SjmsComponent -> private void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception;1349476580;Helper method used to verify that when there is a namedReplyTo value we_are using the InOut MEP. If namedReplyTo is defined and the MEP is InOnly_the endpoint won't be expecting a reply so throw an error to alert the_user.__@param parameters {@link Endpoint} parameters_@throws Exception throws a {@link CamelException} when MEP equals InOnly_and namedReplyTo is defined.;private void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception {_        boolean namedReplyToSet = parameters.containsKey("namedReplyTo")__        boolean mepSet = parameters.containsKey("exchangePattern")__        if (namedReplyToSet && mepSet) {_            if (!parameters.get("exchangePattern").equals(ExchangePattern.InOut.toString())) {_                String namedReplyTo = (String)parameters.get("namedReplyTo")__                ExchangePattern mep = ExchangePattern.valueOf((String)parameters.get("exchangePattern"))__                throw new CamelException("Setting parameter namedReplyTo=" + namedReplyTo + " requires a MEP of type InOut.  Parameter exchangePattern is set to " + mep)__            }_        }_    };helper,method,used,to,verify,that,when,there,is,a,named,reply,to,value,we,are,using,the,in,out,mep,if,named,reply,to,is,defined,and,the,mep,is,in,only,the,endpoint,won,t,be,expecting,a,reply,so,throw,an,error,to,alert,the,user,param,parameters,link,endpoint,parameters,throws,exception,throws,a,link,camel,exception,when,mep,equals,in,only,and,named,reply,to,is,defined;private,void,validate,mep,and,reply,to,map,string,object,parameters,throws,exception,boolean,named,reply,to,set,parameters,contains,key,named,reply,to,boolean,mep,set,parameters,contains,key,exchange,pattern,if,named,reply,to,set,mep,set,if,parameters,get,exchange,pattern,equals,exchange,pattern,in,out,to,string,string,named,reply,to,string,parameters,get,named,reply,to,exchange,pattern,mep,exchange,pattern,value,of,string,parameters,get,exchange,pattern,throw,new,camel,exception,setting,parameter,named,reply,to,named,reply,to,requires,a,mep,of,type,in,out,parameter,exchange,pattern,is,set,to,mep
SjmsComponent -> private void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception;1351626400;Helper method used to verify that when there is a namedReplyTo value we_are using the InOut MEP. If namedReplyTo is defined and the MEP is InOnly_the endpoint won't be expecting a reply so throw an error to alert the_user.__@param parameters {@link Endpoint} parameters_@throws Exception throws a {@link CamelException} when MEP equals InOnly_and namedReplyTo is defined.;private void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception {_        boolean namedReplyToSet = parameters.containsKey("namedReplyTo")__        boolean mepSet = parameters.containsKey("exchangePattern")__        if (namedReplyToSet && mepSet) {_            if (!parameters.get("exchangePattern").equals(ExchangePattern.InOut.toString())) {_                String namedReplyTo = (String)parameters.get("namedReplyTo")__                ExchangePattern mep = ExchangePattern.valueOf((String)parameters.get("exchangePattern"))__                throw new CamelException("Setting parameter namedReplyTo=" + namedReplyTo + " requires a MEP of type InOut.  Parameter exchangePattern is set to " + mep)__            }_        }_    };helper,method,used,to,verify,that,when,there,is,a,named,reply,to,value,we,are,using,the,in,out,mep,if,named,reply,to,is,defined,and,the,mep,is,in,only,the,endpoint,won,t,be,expecting,a,reply,so,throw,an,error,to,alert,the,user,param,parameters,link,endpoint,parameters,throws,exception,throws,a,link,camel,exception,when,mep,equals,in,only,and,named,reply,to,is,defined;private,void,validate,mep,and,reply,to,map,string,object,parameters,throws,exception,boolean,named,reply,to,set,parameters,contains,key,named,reply,to,boolean,mep,set,parameters,contains,key,exchange,pattern,if,named,reply,to,set,mep,set,if,parameters,get,exchange,pattern,equals,exchange,pattern,in,out,to,string,string,named,reply,to,string,parameters,get,named,reply,to,exchange,pattern,mep,exchange,pattern,value,of,string,parameters,get,exchange,pattern,throw,new,camel,exception,setting,parameter,named,reply,to,named,reply,to,requires,a,mep,of,type,in,out,parameter,exchange,pattern,is,set,to,mep
SjmsComponent -> public void setConnectionCount(Integer maxConnections);1431945084;The maximum number of connections available to endpoints started under this component;public void setConnectionCount(Integer maxConnections) {_        this.connectionCount = maxConnections__    };the,maximum,number,of,connections,available,to,endpoints,started,under,this,component;public,void,set,connection,count,integer,max,connections,this,connection,count,max,connections
SjmsComponent -> public void setConnectionCount(Integer maxConnections);1437137782;The maximum number of connections available to endpoints started under this component;public void setConnectionCount(Integer maxConnections) {_        this.connectionCount = maxConnections__    };the,maximum,number,of,connections,available,to,endpoints,started,under,this,component;public,void,set,connection,count,integer,max,connections,this,connection,count,max,connections
SjmsComponent -> public void setConnectionCount(Integer maxConnections);1438158851;The maximum number of connections available to endpoints started under this component;public void setConnectionCount(Integer maxConnections) {_        this.connectionCount = maxConnections__    };the,maximum,number,of,connections,available,to,endpoints,started,under,this,component;public,void,set,connection,count,integer,max,connections,this,connection,count,max,connections
SjmsComponent -> public void setConnectionCount(Integer maxConnections);1441617001;The maximum number of connections available to endpoints started under this component;public void setConnectionCount(Integer maxConnections) {_        this.connectionCount = maxConnections__    };the,maximum,number,of,connections,available,to,endpoints,started,under,this,component;public,void,set,connection,count,integer,max,connections,this,connection,count,max,connections
SjmsComponent -> public void setConnectionCount(Integer maxConnections);1441617486;The maximum number of connections available to endpoints started under this component;public void setConnectionCount(Integer maxConnections) {_        this.connectionCount = maxConnections__    };the,maximum,number,of,connections,available,to,endpoints,started,under,this,component;public,void,set,connection,count,integer,max,connections,this,connection,count,max,connections
SjmsComponent -> public void setConnectionCount(Integer maxConnections);1461839859;The maximum number of connections available to endpoints started under this component;public void setConnectionCount(Integer maxConnections) {_        this.connectionCount = maxConnections__    };the,maximum,number,of,connections,available,to,endpoints,started,under,this,component;public,void,set,connection,count,integer,max,connections,this,connection,count,max,connections
SjmsComponent -> public void setConnectionCount(Integer maxConnections);1463119124;The maximum number of connections available to endpoints started under this component;public void setConnectionCount(Integer maxConnections) {_        this.connectionCount = maxConnections__    };the,maximum,number,of,connections,available,to,endpoints,started,under,this,component;public,void,set,connection,count,integer,max,connections,this,connection,count,max,connections
SjmsComponent -> public void setConnectionCount(Integer maxConnections);1482332324;The maximum number of connections available to endpoints started under this component;public void setConnectionCount(Integer maxConnections) {_        this.connectionCount = maxConnections__    };the,maximum,number,of,connections,available,to,endpoints,started,under,this,component;public,void,set,connection,count,integer,max,connections,this,connection,count,max,connections
SjmsComponent -> public void setConnectionCount(Integer maxConnections);1482346687;The maximum number of connections available to endpoints started under this component;public void setConnectionCount(Integer maxConnections) {_        this.connectionCount = maxConnections__    };the,maximum,number,of,connections,available,to,endpoints,started,under,this,component;public,void,set,connection,count,integer,max,connections,this,connection,count,max,connections
SjmsComponent -> public void setConnectionCount(Integer maxConnections);1488894155;The maximum number of connections available to endpoints started under this component;public void setConnectionCount(Integer maxConnections) {_        this.connectionCount = maxConnections__    };the,maximum,number,of,connections,available,to,endpoints,started,under,this,component;public,void,set,connection,count,integer,max,connections,this,connection,count,max,connections
SjmsComponent -> public void setConnectionCount(Integer maxConnections);1489430295;The maximum number of connections available to endpoints started under this component;public void setConnectionCount(Integer maxConnections) {_        this.connectionCount = maxConnections__    };the,maximum,number,of,connections,available,to,endpoints,started,under,this,component;public,void,set,connection,count,integer,max,connections,this,connection,count,max,connections
SjmsComponent -> public void setConnectionCount(Integer maxConnections);1490689115;The maximum number of connections available to endpoints started under this component;public void setConnectionCount(Integer maxConnections) {_        this.connectionCount = maxConnections__    };the,maximum,number,of,connections,available,to,endpoints,started,under,this,component;public,void,set,connection,count,integer,max,connections,this,connection,count,max,connections
SjmsComponent -> public void setConnectionCount(Integer maxConnections);1540108158;The maximum number of connections available to endpoints started under this component;public void setConnectionCount(Integer maxConnections) {_        this.connectionCount = maxConnections__    };the,maximum,number,of,connections,available,to,endpoints,started,under,this,component;public,void,set,connection,count,integer,max,connections,this,connection,count,max,connections
SjmsComponent -> public void setConnectionCount(Integer maxConnections);1547241305;The maximum number of connections available to endpoints started under this component;public void setConnectionCount(Integer maxConnections) {_        this.connectionCount = maxConnections__    };the,maximum,number,of,connections,available,to,endpoints,started,under,this,component;public,void,set,connection,count,integer,max,connections,this,connection,count,max,connections
SjmsComponent -> public void setConnectionCount(Integer maxConnections);1548332772;The maximum number of connections available to endpoints started under this component;public void setConnectionCount(Integer maxConnections) {_        this.connectionCount = maxConnections__    };the,maximum,number,of,connections,available,to,endpoints,started,under,this,component;public,void,set,connection,count,integer,max,connections,this,connection,count,max,connections
SjmsComponent -> public void setConnectionTestOnBorrow(boolean connectionTestOnBorrow);1488894155;When using the default {@link org.apache.camel.component.sjms.jms.ConnectionFactoryResource} then should each {@link javax.jms.Connection}_be tested (calling start) before returned from the pool.;public void setConnectionTestOnBorrow(boolean connectionTestOnBorrow) {_        this.connectionTestOnBorrow = connectionTestOnBorrow__    };when,using,the,default,link,org,apache,camel,component,sjms,jms,connection,factory,resource,then,should,each,link,javax,jms,connection,be,tested,calling,start,before,returned,from,the,pool;public,void,set,connection,test,on,borrow,boolean,connection,test,on,borrow,this,connection,test,on,borrow,connection,test,on,borrow
SjmsComponent -> public void setConnectionTestOnBorrow(boolean connectionTestOnBorrow);1489430295;When using the default {@link org.apache.camel.component.sjms.jms.ConnectionFactoryResource} then should each {@link javax.jms.Connection}_be tested (calling start) before returned from the pool.;public void setConnectionTestOnBorrow(boolean connectionTestOnBorrow) {_        this.connectionTestOnBorrow = connectionTestOnBorrow__    };when,using,the,default,link,org,apache,camel,component,sjms,jms,connection,factory,resource,then,should,each,link,javax,jms,connection,be,tested,calling,start,before,returned,from,the,pool;public,void,set,connection,test,on,borrow,boolean,connection,test,on,borrow,this,connection,test,on,borrow,connection,test,on,borrow
SjmsComponent -> public void setConnectionTestOnBorrow(boolean connectionTestOnBorrow);1490689115;When using the default {@link org.apache.camel.component.sjms.jms.ConnectionFactoryResource} then should each {@link javax.jms.Connection}_be tested (calling start) before returned from the pool.;public void setConnectionTestOnBorrow(boolean connectionTestOnBorrow) {_        this.connectionTestOnBorrow = connectionTestOnBorrow__    };when,using,the,default,link,org,apache,camel,component,sjms,jms,connection,factory,resource,then,should,each,link,javax,jms,connection,be,tested,calling,start,before,returned,from,the,pool;public,void,set,connection,test,on,borrow,boolean,connection,test,on,borrow,this,connection,test,on,borrow,connection,test,on,borrow
SjmsComponent -> public void setConnectionTestOnBorrow(boolean connectionTestOnBorrow);1540108158;When using the default {@link org.apache.camel.component.sjms.jms.ConnectionFactoryResource} then should each {@link javax.jms.Connection}_be tested (calling start) before returned from the pool.;public void setConnectionTestOnBorrow(boolean connectionTestOnBorrow) {_        this.connectionTestOnBorrow = connectionTestOnBorrow__    };when,using,the,default,link,org,apache,camel,component,sjms,jms,connection,factory,resource,then,should,each,link,javax,jms,connection,be,tested,calling,start,before,returned,from,the,pool;public,void,set,connection,test,on,borrow,boolean,connection,test,on,borrow,this,connection,test,on,borrow,connection,test,on,borrow
SjmsComponent -> public void setConnectionTestOnBorrow(boolean connectionTestOnBorrow);1547241305;When using the default {@link org.apache.camel.component.sjms.jms.ConnectionFactoryResource} then should each {@link javax.jms.Connection}_be tested (calling start) before returned from the pool.;public void setConnectionTestOnBorrow(boolean connectionTestOnBorrow) {_        this.connectionTestOnBorrow = connectionTestOnBorrow__    };when,using,the,default,link,org,apache,camel,component,sjms,jms,connection,factory,resource,then,should,each,link,javax,jms,connection,be,tested,calling,start,before,returned,from,the,pool;public,void,set,connection,test,on,borrow,boolean,connection,test,on,borrow,this,connection,test,on,borrow,connection,test,on,borrow
SjmsComponent -> public void setConnectionTestOnBorrow(boolean connectionTestOnBorrow);1548332772;When using the default {@link org.apache.camel.component.sjms.jms.ConnectionFactoryResource} then should each {@link javax.jms.Connection}_be tested (calling start) before returned from the pool.;public void setConnectionTestOnBorrow(boolean connectionTestOnBorrow) {_        this.connectionTestOnBorrow = connectionTestOnBorrow__    };when,using,the,default,link,org,apache,camel,component,sjms,jms,connection,factory,resource,then,should,each,link,javax,jms,connection,be,tested,calling,start,before,returned,from,the,pool;public,void,set,connection,test,on,borrow,boolean,connection,test,on,borrow,this,connection,test,on,borrow,connection,test,on,borrow
SjmsComponent -> @Override     protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception;1346298132;@see_org.apache.camel.impl.DefaultComponent#createEndpoint(java.lang.String,_java.lang.String, java.util.Map)_@param uri The value passed into our call to create an endpoint_@param remaining_@param parameters_@return_@throws Exception;@Override_    protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {_        validateMepAndReplyTo(parameters)__        uri = normalizeUri(uri)__        SjmsEndpoint endpoint = new SjmsEndpoint(uri, this)__        setProperties(endpoint, parameters)__        if (endpoint.isTransacted()) {_            endpoint.setSynchronous(true)__        }_        return endpoint__    };see,org,apache,camel,impl,default,component,create,endpoint,java,lang,string,java,lang,string,java,util,map,param,uri,the,value,passed,into,our,call,to,create,an,endpoint,param,remaining,param,parameters,return,throws,exception;override,protected,endpoint,create,endpoint,string,uri,string,remaining,map,string,object,parameters,throws,exception,validate,mep,and,reply,to,parameters,uri,normalize,uri,uri,sjms,endpoint,endpoint,new,sjms,endpoint,uri,this,set,properties,endpoint,parameters,if,endpoint,is,transacted,endpoint,set,synchronous,true,return,endpoint
SjmsComponent -> @Override     protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception;1348524340;@see_org.apache.camel.impl.DefaultComponent#createEndpoint(java.lang.String,_java.lang.String, java.util.Map)_@param uri The value passed into our call to create an endpoint_@param remaining_@param parameters_@return_@throws Exception;@Override_    protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {_        validateMepAndReplyTo(parameters)__        uri = normalizeUri(uri)__        SjmsEndpoint endpoint = new SjmsEndpoint(uri, this)__        setProperties(endpoint, parameters)__        if (endpoint.isTransacted()) {_            endpoint.setSynchronous(true)__        }_        return endpoint__    };see,org,apache,camel,impl,default,component,create,endpoint,java,lang,string,java,lang,string,java,util,map,param,uri,the,value,passed,into,our,call,to,create,an,endpoint,param,remaining,param,parameters,return,throws,exception;override,protected,endpoint,create,endpoint,string,uri,string,remaining,map,string,object,parameters,throws,exception,validate,mep,and,reply,to,parameters,uri,normalize,uri,uri,sjms,endpoint,endpoint,new,sjms,endpoint,uri,this,set,properties,endpoint,parameters,if,endpoint,is,transacted,endpoint,set,synchronous,true,return,endpoint
SjmsComponent -> @Override     protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception;1348673753;@see_org.apache.camel.impl.DefaultComponent#createEndpoint(java.lang.String,_java.lang.String, java.util.Map)_@param uri The value passed into our call to create an endpoint_@param remaining_@param parameters_@return_@throws Exception;@Override_    protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {_        validateMepAndReplyTo(parameters)__        uri = normalizeUri(uri)__        SjmsEndpoint endpoint = new SjmsEndpoint(uri, this)__        setProperties(endpoint, parameters)__        if (endpoint.isTransacted()) {_            endpoint.setSynchronous(true)__        }_        if (transactionCommitStrategy != null) {_            endpoint.setTransactionCommitStrategy(transactionCommitStrategy)__        }_        return endpoint__    };see,org,apache,camel,impl,default,component,create,endpoint,java,lang,string,java,lang,string,java,util,map,param,uri,the,value,passed,into,our,call,to,create,an,endpoint,param,remaining,param,parameters,return,throws,exception;override,protected,endpoint,create,endpoint,string,uri,string,remaining,map,string,object,parameters,throws,exception,validate,mep,and,reply,to,parameters,uri,normalize,uri,uri,sjms,endpoint,endpoint,new,sjms,endpoint,uri,this,set,properties,endpoint,parameters,if,endpoint,is,transacted,endpoint,set,synchronous,true,if,transaction,commit,strategy,null,endpoint,set,transaction,commit,strategy,transaction,commit,strategy,return,endpoint
SjmsComponent -> @Override     protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception;1348675078;@see_org.apache.camel.impl.DefaultComponent#createEndpoint(java.lang.String,_java.lang.String, java.util.Map)_@param uri The value passed into our call to create an endpoint_@param remaining_@param parameters_@return_@throws Exception;@Override_    protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {_        validateMepAndReplyTo(parameters)__        uri = normalizeUri(uri)__        SjmsEndpoint endpoint = new SjmsEndpoint(uri, this)__        setProperties(endpoint, parameters)__        if (endpoint.isTransacted()) {_            endpoint.setSynchronous(true)__        }_        if (transactionCommitStrategy != null) {_            endpoint.setTransactionCommitStrategy(transactionCommitStrategy)__        }_        return endpoint__    };see,org,apache,camel,impl,default,component,create,endpoint,java,lang,string,java,lang,string,java,util,map,param,uri,the,value,passed,into,our,call,to,create,an,endpoint,param,remaining,param,parameters,return,throws,exception;override,protected,endpoint,create,endpoint,string,uri,string,remaining,map,string,object,parameters,throws,exception,validate,mep,and,reply,to,parameters,uri,normalize,uri,uri,sjms,endpoint,endpoint,new,sjms,endpoint,uri,this,set,properties,endpoint,parameters,if,endpoint,is,transacted,endpoint,set,synchronous,true,if,transaction,commit,strategy,null,endpoint,set,transaction,commit,strategy,transaction,commit,strategy,return,endpoint
SjmsComponent -> @Override     protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception;1349476580;@see_org.apache.camel.impl.DefaultComponent#createEndpoint(java.lang.String,_java.lang.String, java.util.Map)_@param uri The value passed into our call to create an endpoint_@param remaining_@param parameters_@return_@throws Exception;@Override_    protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {_        validateMepAndReplyTo(parameters)__        uri = normalizeUri(uri)__        SjmsEndpoint endpoint = new SjmsEndpoint(uri, this)__        setProperties(endpoint, parameters)__        if (endpoint.isTransacted()) {_            endpoint.setSynchronous(true)__        }_        if (transactionCommitStrategy != null) {_            endpoint.setTransactionCommitStrategy(transactionCommitStrategy)__        }_        return endpoint__    };see,org,apache,camel,impl,default,component,create,endpoint,java,lang,string,java,lang,string,java,util,map,param,uri,the,value,passed,into,our,call,to,create,an,endpoint,param,remaining,param,parameters,return,throws,exception;override,protected,endpoint,create,endpoint,string,uri,string,remaining,map,string,object,parameters,throws,exception,validate,mep,and,reply,to,parameters,uri,normalize,uri,uri,sjms,endpoint,endpoint,new,sjms,endpoint,uri,this,set,properties,endpoint,parameters,if,endpoint,is,transacted,endpoint,set,synchronous,true,if,transaction,commit,strategy,null,endpoint,set,transaction,commit,strategy,transaction,commit,strategy,return,endpoint
SjmsComponent -> @Override     protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception;1351626400;@see_org.apache.camel.impl.DefaultComponent#createEndpoint(java.lang.String,_java.lang.String, java.util.Map)_@param uri The value passed into our call to create an endpoint_@param remaining_@param parameters_@return_@throws Exception;@Override_    protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {_        validateMepAndReplyTo(parameters)__        uri = normalizeUri(uri)__        SjmsEndpoint endpoint = new SjmsEndpoint(uri, this)__        setProperties(endpoint, parameters)__        if (endpoint.isTransacted()) {_            endpoint.setSynchronous(true)__        }_        if (transactionCommitStrategy != null) {_            endpoint.setTransactionCommitStrategy(transactionCommitStrategy)__        }_        return endpoint__    };see,org,apache,camel,impl,default,component,create,endpoint,java,lang,string,java,lang,string,java,util,map,param,uri,the,value,passed,into,our,call,to,create,an,endpoint,param,remaining,param,parameters,return,throws,exception;override,protected,endpoint,create,endpoint,string,uri,string,remaining,map,string,object,parameters,throws,exception,validate,mep,and,reply,to,parameters,uri,normalize,uri,uri,sjms,endpoint,endpoint,new,sjms,endpoint,uri,this,set,properties,endpoint,parameters,if,endpoint,is,transacted,endpoint,set,synchronous,true,if,transaction,commit,strategy,null,endpoint,set,transaction,commit,strategy,transaction,commit,strategy,return,endpoint
SjmsComponent -> @Override     public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1431945084;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;@Override_    public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;override,public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy
SjmsComponent -> @Override     public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1437137782;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;@Override_    public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;override,public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy
SjmsComponent -> @Override     public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1438158851;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;@Override_    public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;override,public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy
SjmsComponent -> @Override     public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1441617001;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;@Override_    public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;override,public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy
SjmsComponent -> @Override     public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1441617486;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;@Override_    public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;override,public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy
SjmsComponent -> @Override     public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1461839859;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;@Override_    public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;override,public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy
SjmsComponent -> @Override     public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1463119124;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;@Override_    public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;override,public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy
SjmsComponent -> @Override     public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1482332324;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;@Override_    public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;override,public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy
SjmsComponent -> public void setConnectionFactory(ConnectionFactory connectionFactory);1343905000;Sets the ConnectionFactory value of connectionFactory for this instance_of SjmsComponent.__@param connectionFactory_Sets ConnectionFactory, default is TODO add default;public void setConnectionFactory(ConnectionFactory connectionFactory) {_        this.connectionFactory = connectionFactory__    };sets,the,connection,factory,value,of,connection,factory,for,this,instance,of,sjms,component,param,connection,factory,sets,connection,factory,default,is,todo,add,default;public,void,set,connection,factory,connection,factory,connection,factory,this,connection,factory,connection,factory
SjmsComponent -> public void setConnectionFactory(ConnectionFactory connectionFactory);1344346492;Sets the ConnectionFactory value of connectionFactory for this instance_of SjmsComponent.__@param connectionFactory Sets ConnectionFactory, default is TODO add_default;public void setConnectionFactory(ConnectionFactory connectionFactory) {_        this.connectionFactory = connectionFactory__    };sets,the,connection,factory,value,of,connection,factory,for,this,instance,of,sjms,component,param,connection,factory,sets,connection,factory,default,is,todo,add,default;public,void,set,connection,factory,connection,factory,connection,factory,this,connection,factory,connection,factory
SjmsComponent -> public void setConnectionFactory(ConnectionFactory connectionFactory);1346298132;Sets the ConnectionFactory value of connectionFactory for this instance_of SjmsComponent.__@param connectionFactory Sets ConnectionFactory, default is TODO add_default;public void setConnectionFactory(ConnectionFactory connectionFactory) {_        this.connectionFactory = connectionFactory__    };sets,the,connection,factory,value,of,connection,factory,for,this,instance,of,sjms,component,param,connection,factory,sets,connection,factory,default,is,todo,add,default;public,void,set,connection,factory,connection,factory,connection,factory,this,connection,factory,connection,factory
SjmsComponent -> public void setConnectionFactory(ConnectionFactory connectionFactory);1348524340;Sets the ConnectionFactory value of connectionFactory for this instance_of SjmsComponent.__@param connectionFactory Sets ConnectionFactory, default is TODO add_default;public void setConnectionFactory(ConnectionFactory connectionFactory) {_        this.connectionFactory = connectionFactory__    };sets,the,connection,factory,value,of,connection,factory,for,this,instance,of,sjms,component,param,connection,factory,sets,connection,factory,default,is,todo,add,default;public,void,set,connection,factory,connection,factory,connection,factory,this,connection,factory,connection,factory
SjmsComponent -> public void setConnectionFactory(ConnectionFactory connectionFactory);1348673753;Sets the ConnectionFactory value of connectionFactory for this instance_of SjmsComponent.__@param connectionFactory Sets ConnectionFactory, default is TODO add_default;public void setConnectionFactory(ConnectionFactory connectionFactory) {_        this.connectionFactory = connectionFactory__    };sets,the,connection,factory,value,of,connection,factory,for,this,instance,of,sjms,component,param,connection,factory,sets,connection,factory,default,is,todo,add,default;public,void,set,connection,factory,connection,factory,connection,factory,this,connection,factory,connection,factory
SjmsComponent -> public void setConnectionFactory(ConnectionFactory connectionFactory);1348675078;Sets the ConnectionFactory value of connectionFactory for this instance_of SjmsComponent.__@param connectionFactory Sets ConnectionFactory, default is TODO add_default;public void setConnectionFactory(ConnectionFactory connectionFactory) {_        this.connectionFactory = connectionFactory__    };sets,the,connection,factory,value,of,connection,factory,for,this,instance,of,sjms,component,param,connection,factory,sets,connection,factory,default,is,todo,add,default;public,void,set,connection,factory,connection,factory,connection,factory,this,connection,factory,connection,factory
SjmsComponent -> public void setConnectionFactory(ConnectionFactory connectionFactory);1349476580;Sets the ConnectionFactory value of connectionFactory for this instance_of SjmsComponent.__@param connectionFactory Sets ConnectionFactory, default is TODO add_default;public void setConnectionFactory(ConnectionFactory connectionFactory) {_        this.connectionFactory = connectionFactory__    };sets,the,connection,factory,value,of,connection,factory,for,this,instance,of,sjms,component,param,connection,factory,sets,connection,factory,default,is,todo,add,default;public,void,set,connection,factory,connection,factory,connection,factory,this,connection,factory,connection,factory
SjmsComponent -> public void setConnectionFactory(ConnectionFactory connectionFactory);1351626400;Sets the ConnectionFactory value of connectionFactory for this instance_of SjmsComponent.__@param connectionFactory Sets ConnectionFactory, default is TODO add_default;public void setConnectionFactory(ConnectionFactory connectionFactory) {_        this.connectionFactory = connectionFactory__    };sets,the,connection,factory,value,of,connection,factory,for,this,instance,of,sjms,component,param,connection,factory,sets,connection,factory,default,is,todo,add,default;public,void,set,connection,factory,connection,factory,connection,factory,this,connection,factory,connection,factory
SjmsComponent -> public void setConnectionFactory(ConnectionFactory connectionFactory);1352796608;Sets the ConnectionFactory value of connectionFactory for this instance_of SjmsComponent.;public void setConnectionFactory(ConnectionFactory connectionFactory) {_        this.connectionFactory = connectionFactory__    };sets,the,connection,factory,value,of,connection,factory,for,this,instance,of,sjms,component;public,void,set,connection,factory,connection,factory,connection,factory,this,connection,factory,connection,factory
SjmsComponent -> public void setConnectionFactory(ConnectionFactory connectionFactory);1366704138;Sets the ConnectionFactory value of connectionFactory for this instance_of SjmsComponent.;public void setConnectionFactory(ConnectionFactory connectionFactory) {_        this.connectionFactory = connectionFactory__    };sets,the,connection,factory,value,of,connection,factory,for,this,instance,of,sjms,component;public,void,set,connection,factory,connection,factory,connection,factory,this,connection,factory,connection,factory
SjmsComponent -> public void setConnectionFactory(ConnectionFactory connectionFactory);1373129971;Sets the ConnectionFactory value of connectionFactory for this instance_of SjmsComponent.;public void setConnectionFactory(ConnectionFactory connectionFactory) {_        this.connectionFactory = connectionFactory__    };sets,the,connection,factory,value,of,connection,factory,for,this,instance,of,sjms,component;public,void,set,connection,factory,connection,factory,connection,factory,this,connection,factory,connection,factory
SjmsComponent -> public void setConnectionFactory(ConnectionFactory connectionFactory);1376549254;Sets the ConnectionFactory value of connectionFactory for this instance_of SjmsComponent.;public void setConnectionFactory(ConnectionFactory connectionFactory) {_        this.connectionFactory = connectionFactory__    };sets,the,connection,factory,value,of,connection,factory,for,this,instance,of,sjms,component;public,void,set,connection,factory,connection,factory,connection,factory,this,connection,factory,connection,factory
SjmsComponent -> public void setConnectionFactory(ConnectionFactory connectionFactory);1379362077;Sets the ConnectionFactory value of connectionFactory for this instance_of SjmsComponent.;public void setConnectionFactory(ConnectionFactory connectionFactory) {_        this.connectionFactory = connectionFactory__    };sets,the,connection,factory,value,of,connection,factory,for,this,instance,of,sjms,component;public,void,set,connection,factory,connection,factory,connection,factory,this,connection,factory,connection,factory
SjmsComponent -> public void setConnectionFactory(ConnectionFactory connectionFactory);1415211488;Sets the ConnectionFactory value of connectionFactory for this instance_of SjmsComponent.;public void setConnectionFactory(ConnectionFactory connectionFactory) {_        this.connectionFactory = connectionFactory__    };sets,the,connection,factory,value,of,connection,factory,for,this,instance,of,sjms,component;public,void,set,connection,factory,connection,factory,connection,factory,this,connection,factory,connection,factory
SjmsComponent -> public void setConnectionFactory(ConnectionFactory connectionFactory);1415327622;Sets the ConnectionFactory value of connectionFactory for this instance_of SjmsComponent.;public void setConnectionFactory(ConnectionFactory connectionFactory) {_        this.connectionFactory = connectionFactory__    };sets,the,connection,factory,value,of,connection,factory,for,this,instance,of,sjms,component;public,void,set,connection,factory,connection,factory,connection,factory,this,connection,factory,connection,factory
SjmsComponent -> public void setConnectionFactory(ConnectionFactory connectionFactory);1431945084;A ConnectionFactory is required to enable the SjmsComponent._It can be set directly or set set as part of a ConnectionResource.;public void setConnectionFactory(ConnectionFactory connectionFactory) {_        this.connectionFactory = connectionFactory__    };a,connection,factory,is,required,to,enable,the,sjms,component,it,can,be,set,directly,or,set,set,as,part,of,a,connection,resource;public,void,set,connection,factory,connection,factory,connection,factory,this,connection,factory,connection,factory
SjmsComponent -> public void setConnectionFactory(ConnectionFactory connectionFactory);1437137782;A ConnectionFactory is required to enable the SjmsComponent._It can be set directly or set set as part of a ConnectionResource.;public void setConnectionFactory(ConnectionFactory connectionFactory) {_        this.connectionFactory = connectionFactory__    };a,connection,factory,is,required,to,enable,the,sjms,component,it,can,be,set,directly,or,set,set,as,part,of,a,connection,resource;public,void,set,connection,factory,connection,factory,connection,factory,this,connection,factory,connection,factory
SjmsComponent -> public void setConnectionFactory(ConnectionFactory connectionFactory);1438158851;A ConnectionFactory is required to enable the SjmsComponent._It can be set directly or set set as part of a ConnectionResource.;public void setConnectionFactory(ConnectionFactory connectionFactory) {_        this.connectionFactory = connectionFactory__    };a,connection,factory,is,required,to,enable,the,sjms,component,it,can,be,set,directly,or,set,set,as,part,of,a,connection,resource;public,void,set,connection,factory,connection,factory,connection,factory,this,connection,factory,connection,factory
SjmsComponent -> public void setConnectionFactory(ConnectionFactory connectionFactory);1441617001;A ConnectionFactory is required to enable the SjmsComponent._It can be set directly or set set as part of a ConnectionResource.;public void setConnectionFactory(ConnectionFactory connectionFactory) {_        this.connectionFactory = connectionFactory__    };a,connection,factory,is,required,to,enable,the,sjms,component,it,can,be,set,directly,or,set,set,as,part,of,a,connection,resource;public,void,set,connection,factory,connection,factory,connection,factory,this,connection,factory,connection,factory
SjmsComponent -> public void setConnectionFactory(ConnectionFactory connectionFactory);1441617486;A ConnectionFactory is required to enable the SjmsComponent._It can be set directly or set set as part of a ConnectionResource.;public void setConnectionFactory(ConnectionFactory connectionFactory) {_        this.connectionFactory = connectionFactory__    };a,connection,factory,is,required,to,enable,the,sjms,component,it,can,be,set,directly,or,set,set,as,part,of,a,connection,resource;public,void,set,connection,factory,connection,factory,connection,factory,this,connection,factory,connection,factory
SjmsComponent -> public void setConnectionFactory(ConnectionFactory connectionFactory);1461839859;A ConnectionFactory is required to enable the SjmsComponent._It can be set directly or set set as part of a ConnectionResource.;public void setConnectionFactory(ConnectionFactory connectionFactory) {_        this.connectionFactory = connectionFactory__    };a,connection,factory,is,required,to,enable,the,sjms,component,it,can,be,set,directly,or,set,set,as,part,of,a,connection,resource;public,void,set,connection,factory,connection,factory,connection,factory,this,connection,factory,connection,factory
SjmsComponent -> public void setConnectionFactory(ConnectionFactory connectionFactory);1463119124;A ConnectionFactory is required to enable the SjmsComponent._It can be set directly or set set as part of a ConnectionResource.;public void setConnectionFactory(ConnectionFactory connectionFactory) {_        this.connectionFactory = connectionFactory__    };a,connection,factory,is,required,to,enable,the,sjms,component,it,can,be,set,directly,or,set,set,as,part,of,a,connection,resource;public,void,set,connection,factory,connection,factory,connection,factory,this,connection,factory,connection,factory
SjmsComponent -> public void setConnectionFactory(ConnectionFactory connectionFactory);1482332324;A ConnectionFactory is required to enable the SjmsComponent._It can be set directly or set set as part of a ConnectionResource.;public void setConnectionFactory(ConnectionFactory connectionFactory) {_        this.connectionFactory = connectionFactory__    };a,connection,factory,is,required,to,enable,the,sjms,component,it,can,be,set,directly,or,set,set,as,part,of,a,connection,resource;public,void,set,connection,factory,connection,factory,connection,factory,this,connection,factory,connection,factory
SjmsComponent -> public void setConnectionFactory(ConnectionFactory connectionFactory);1482346687;A ConnectionFactory is required to enable the SjmsComponent._It can be set directly or set set as part of a ConnectionResource.;public void setConnectionFactory(ConnectionFactory connectionFactory) {_        this.connectionFactory = connectionFactory__    };a,connection,factory,is,required,to,enable,the,sjms,component,it,can,be,set,directly,or,set,set,as,part,of,a,connection,resource;public,void,set,connection,factory,connection,factory,connection,factory,this,connection,factory,connection,factory
SjmsComponent -> public void setConnectionFactory(ConnectionFactory connectionFactory);1488894155;A ConnectionFactory is required to enable the SjmsComponent._It can be set directly or set set as part of a ConnectionResource.;public void setConnectionFactory(ConnectionFactory connectionFactory) {_        this.connectionFactory = connectionFactory__    };a,connection,factory,is,required,to,enable,the,sjms,component,it,can,be,set,directly,or,set,set,as,part,of,a,connection,resource;public,void,set,connection,factory,connection,factory,connection,factory,this,connection,factory,connection,factory
SjmsComponent -> public void setConnectionFactory(ConnectionFactory connectionFactory);1489430295;A ConnectionFactory is required to enable the SjmsComponent._It can be set directly or set set as part of a ConnectionResource.;public void setConnectionFactory(ConnectionFactory connectionFactory) {_        this.connectionFactory = connectionFactory__    };a,connection,factory,is,required,to,enable,the,sjms,component,it,can,be,set,directly,or,set,set,as,part,of,a,connection,resource;public,void,set,connection,factory,connection,factory,connection,factory,this,connection,factory,connection,factory
SjmsComponent -> public void setConnectionFactory(ConnectionFactory connectionFactory);1490689115;A ConnectionFactory is required to enable the SjmsComponent._It can be set directly or set set as part of a ConnectionResource.;public void setConnectionFactory(ConnectionFactory connectionFactory) {_        this.connectionFactory = connectionFactory__    };a,connection,factory,is,required,to,enable,the,sjms,component,it,can,be,set,directly,or,set,set,as,part,of,a,connection,resource;public,void,set,connection,factory,connection,factory,connection,factory,this,connection,factory,connection,factory
SjmsComponent -> public void setConnectionFactory(ConnectionFactory connectionFactory);1540108158;A ConnectionFactory is required to enable the SjmsComponent._It can be set directly or set set as part of a ConnectionResource.;public void setConnectionFactory(ConnectionFactory connectionFactory) {_        this.connectionFactory = connectionFactory__    };a,connection,factory,is,required,to,enable,the,sjms,component,it,can,be,set,directly,or,set,set,as,part,of,a,connection,resource;public,void,set,connection,factory,connection,factory,connection,factory,this,connection,factory,connection,factory
SjmsComponent -> public void setConnectionFactory(ConnectionFactory connectionFactory);1547241305;A ConnectionFactory is required to enable the SjmsComponent._It can be set directly or set set as part of a ConnectionResource.;public void setConnectionFactory(ConnectionFactory connectionFactory) {_        this.connectionFactory = connectionFactory__    };a,connection,factory,is,required,to,enable,the,sjms,component,it,can,be,set,directly,or,set,set,as,part,of,a,connection,resource;public,void,set,connection,factory,connection,factory,connection,factory,this,connection,factory,connection,factory
SjmsComponent -> public void setConnectionFactory(ConnectionFactory connectionFactory);1548332772;A ConnectionFactory is required to enable the SjmsComponent._It can be set directly or set set as part of a ConnectionResource.;public void setConnectionFactory(ConnectionFactory connectionFactory) {_        this.connectionFactory = connectionFactory__    };a,connection,factory,is,required,to,enable,the,sjms,component,it,can,be,set,directly,or,set,set,as,part,of,a,connection,resource;public,void,set,connection,factory,connection,factory,connection,factory,this,connection,factory,connection,factory
SjmsComponent -> public void setMessageCreatedStrategy(MessageCreatedStrategy messageCreatedStrategy);1441617001;To use the given MessageCreatedStrategy which are invoked when Camel creates new instances of <tt>javax.jms.Message</tt>_objects when Camel is sending a JMS message.;public void setMessageCreatedStrategy(MessageCreatedStrategy messageCreatedStrategy) {_        this.messageCreatedStrategy = messageCreatedStrategy__    };to,use,the,given,message,created,strategy,which,are,invoked,when,camel,creates,new,instances,of,tt,javax,jms,message,tt,objects,when,camel,is,sending,a,jms,message;public,void,set,message,created,strategy,message,created,strategy,message,created,strategy,this,message,created,strategy,message,created,strategy
SjmsComponent -> public void setMessageCreatedStrategy(MessageCreatedStrategy messageCreatedStrategy);1441617486;To use the given MessageCreatedStrategy which are invoked when Camel creates new instances of <tt>javax.jms.Message</tt>_objects when Camel is sending a JMS message.;public void setMessageCreatedStrategy(MessageCreatedStrategy messageCreatedStrategy) {_        this.messageCreatedStrategy = messageCreatedStrategy__    };to,use,the,given,message,created,strategy,which,are,invoked,when,camel,creates,new,instances,of,tt,javax,jms,message,tt,objects,when,camel,is,sending,a,jms,message;public,void,set,message,created,strategy,message,created,strategy,message,created,strategy,this,message,created,strategy,message,created,strategy
SjmsComponent -> public void setMessageCreatedStrategy(MessageCreatedStrategy messageCreatedStrategy);1461839859;To use the given MessageCreatedStrategy which are invoked when Camel creates new instances of <tt>javax.jms.Message</tt>_objects when Camel is sending a JMS message.;public void setMessageCreatedStrategy(MessageCreatedStrategy messageCreatedStrategy) {_        this.messageCreatedStrategy = messageCreatedStrategy__    };to,use,the,given,message,created,strategy,which,are,invoked,when,camel,creates,new,instances,of,tt,javax,jms,message,tt,objects,when,camel,is,sending,a,jms,message;public,void,set,message,created,strategy,message,created,strategy,message,created,strategy,this,message,created,strategy,message,created,strategy
SjmsComponent -> public void setMessageCreatedStrategy(MessageCreatedStrategy messageCreatedStrategy);1463119124;To use the given MessageCreatedStrategy which are invoked when Camel creates new instances of <tt>javax.jms.Message</tt>_objects when Camel is sending a JMS message.;public void setMessageCreatedStrategy(MessageCreatedStrategy messageCreatedStrategy) {_        this.messageCreatedStrategy = messageCreatedStrategy__    };to,use,the,given,message,created,strategy,which,are,invoked,when,camel,creates,new,instances,of,tt,javax,jms,message,tt,objects,when,camel,is,sending,a,jms,message;public,void,set,message,created,strategy,message,created,strategy,message,created,strategy,this,message,created,strategy,message,created,strategy
SjmsComponent -> public void setMessageCreatedStrategy(MessageCreatedStrategy messageCreatedStrategy);1482332324;To use the given MessageCreatedStrategy which are invoked when Camel creates new instances of <tt>javax.jms.Message</tt>_objects when Camel is sending a JMS message.;public void setMessageCreatedStrategy(MessageCreatedStrategy messageCreatedStrategy) {_        this.messageCreatedStrategy = messageCreatedStrategy__    };to,use,the,given,message,created,strategy,which,are,invoked,when,camel,creates,new,instances,of,tt,javax,jms,message,tt,objects,when,camel,is,sending,a,jms,message;public,void,set,message,created,strategy,message,created,strategy,message,created,strategy,this,message,created,strategy,message,created,strategy
SjmsComponent -> public void setMessageCreatedStrategy(MessageCreatedStrategy messageCreatedStrategy);1482346687;To use the given MessageCreatedStrategy which are invoked when Camel creates new instances of <tt>javax.jms.Message</tt>_objects when Camel is sending a JMS message.;public void setMessageCreatedStrategy(MessageCreatedStrategy messageCreatedStrategy) {_        this.messageCreatedStrategy = messageCreatedStrategy__    };to,use,the,given,message,created,strategy,which,are,invoked,when,camel,creates,new,instances,of,tt,javax,jms,message,tt,objects,when,camel,is,sending,a,jms,message;public,void,set,message,created,strategy,message,created,strategy,message,created,strategy,this,message,created,strategy,message,created,strategy
SjmsComponent -> public void setMessageCreatedStrategy(MessageCreatedStrategy messageCreatedStrategy);1488894155;To use the given MessageCreatedStrategy which are invoked when Camel creates new instances of <tt>javax.jms.Message</tt>_objects when Camel is sending a JMS message.;public void setMessageCreatedStrategy(MessageCreatedStrategy messageCreatedStrategy) {_        this.messageCreatedStrategy = messageCreatedStrategy__    };to,use,the,given,message,created,strategy,which,are,invoked,when,camel,creates,new,instances,of,tt,javax,jms,message,tt,objects,when,camel,is,sending,a,jms,message;public,void,set,message,created,strategy,message,created,strategy,message,created,strategy,this,message,created,strategy,message,created,strategy
SjmsComponent -> public void setMessageCreatedStrategy(MessageCreatedStrategy messageCreatedStrategy);1489430295;To use the given MessageCreatedStrategy which are invoked when Camel creates new instances of <tt>javax.jms.Message</tt>_objects when Camel is sending a JMS message.;public void setMessageCreatedStrategy(MessageCreatedStrategy messageCreatedStrategy) {_        this.messageCreatedStrategy = messageCreatedStrategy__    };to,use,the,given,message,created,strategy,which,are,invoked,when,camel,creates,new,instances,of,tt,javax,jms,message,tt,objects,when,camel,is,sending,a,jms,message;public,void,set,message,created,strategy,message,created,strategy,message,created,strategy,this,message,created,strategy,message,created,strategy
SjmsComponent -> public void setMessageCreatedStrategy(MessageCreatedStrategy messageCreatedStrategy);1490689115;To use the given MessageCreatedStrategy which are invoked when Camel creates new instances of <tt>javax.jms.Message</tt>_objects when Camel is sending a JMS message.;public void setMessageCreatedStrategy(MessageCreatedStrategy messageCreatedStrategy) {_        this.messageCreatedStrategy = messageCreatedStrategy__    };to,use,the,given,message,created,strategy,which,are,invoked,when,camel,creates,new,instances,of,tt,javax,jms,message,tt,objects,when,camel,is,sending,a,jms,message;public,void,set,message,created,strategy,message,created,strategy,message,created,strategy,this,message,created,strategy,message,created,strategy
SjmsComponent -> public void setMessageCreatedStrategy(MessageCreatedStrategy messageCreatedStrategy);1540108158;To use the given MessageCreatedStrategy which are invoked when Camel creates new instances of <tt>javax.jms.Message</tt>_objects when Camel is sending a JMS message.;public void setMessageCreatedStrategy(MessageCreatedStrategy messageCreatedStrategy) {_        this.messageCreatedStrategy = messageCreatedStrategy__    };to,use,the,given,message,created,strategy,which,are,invoked,when,camel,creates,new,instances,of,tt,javax,jms,message,tt,objects,when,camel,is,sending,a,jms,message;public,void,set,message,created,strategy,message,created,strategy,message,created,strategy,this,message,created,strategy,message,created,strategy
SjmsComponent -> public void setMessageCreatedStrategy(MessageCreatedStrategy messageCreatedStrategy);1547241305;To use the given MessageCreatedStrategy which are invoked when Camel creates new instances of <tt>javax.jms.Message</tt>_objects when Camel is sending a JMS message.;public void setMessageCreatedStrategy(MessageCreatedStrategy messageCreatedStrategy) {_        this.messageCreatedStrategy = messageCreatedStrategy__    };to,use,the,given,message,created,strategy,which,are,invoked,when,camel,creates,new,instances,of,tt,javax,jms,message,tt,objects,when,camel,is,sending,a,jms,message;public,void,set,message,created,strategy,message,created,strategy,message,created,strategy,this,message,created,strategy,message,created,strategy
SjmsComponent -> public void setMessageCreatedStrategy(MessageCreatedStrategy messageCreatedStrategy);1548332772;To use the given MessageCreatedStrategy which are invoked when Camel creates new instances of <tt>javax.jms.Message</tt>_objects when Camel is sending a JMS message.;public void setMessageCreatedStrategy(MessageCreatedStrategy messageCreatedStrategy) {_        this.messageCreatedStrategy = messageCreatedStrategy__    };to,use,the,given,message,created,strategy,which,are,invoked,when,camel,creates,new,instances,of,tt,javax,jms,message,tt,objects,when,camel,is,sending,a,jms,message;public,void,set,message,created,strategy,message,created,strategy,message,created,strategy,this,message,created,strategy,message,created,strategy
SjmsComponent -> public ConnectionFactory getConnectionFactory();1343905000;Gets the ConnectionFactory value of connectionFactory for this instance_of SjmsComponent.__@return the connectionFactory;public ConnectionFactory getConnectionFactory() {_        return connectionFactory__    };gets,the,connection,factory,value,of,connection,factory,for,this,instance,of,sjms,component,return,the,connection,factory;public,connection,factory,get,connection,factory,return,connection,factory
SjmsComponent -> public ConnectionFactory getConnectionFactory();1344346492;Gets the ConnectionFactory value of connectionFactory for this instance_of SjmsComponent.__@return the connectionFactory;public ConnectionFactory getConnectionFactory() {_        return connectionFactory__    };gets,the,connection,factory,value,of,connection,factory,for,this,instance,of,sjms,component,return,the,connection,factory;public,connection,factory,get,connection,factory,return,connection,factory
SjmsComponent -> public ConnectionFactory getConnectionFactory();1346298132;Gets the ConnectionFactory value of connectionFactory for this instance_of SjmsComponent.__@return the connectionFactory;public ConnectionFactory getConnectionFactory() {_        return connectionFactory__    };gets,the,connection,factory,value,of,connection,factory,for,this,instance,of,sjms,component,return,the,connection,factory;public,connection,factory,get,connection,factory,return,connection,factory
SjmsComponent -> public ConnectionFactory getConnectionFactory();1348524340;Gets the ConnectionFactory value of connectionFactory for this instance_of SjmsComponent.__@return the connectionFactory;public ConnectionFactory getConnectionFactory() {_        return connectionFactory__    };gets,the,connection,factory,value,of,connection,factory,for,this,instance,of,sjms,component,return,the,connection,factory;public,connection,factory,get,connection,factory,return,connection,factory
SjmsComponent -> public ConnectionFactory getConnectionFactory();1348673753;Gets the ConnectionFactory value of connectionFactory for this instance_of SjmsComponent.__@return the connectionFactory;public ConnectionFactory getConnectionFactory() {_        return connectionFactory__    };gets,the,connection,factory,value,of,connection,factory,for,this,instance,of,sjms,component,return,the,connection,factory;public,connection,factory,get,connection,factory,return,connection,factory
SjmsComponent -> public ConnectionFactory getConnectionFactory();1348675078;Gets the ConnectionFactory value of connectionFactory for this instance_of SjmsComponent.__@return the connectionFactory;public ConnectionFactory getConnectionFactory() {_        return connectionFactory__    };gets,the,connection,factory,value,of,connection,factory,for,this,instance,of,sjms,component,return,the,connection,factory;public,connection,factory,get,connection,factory,return,connection,factory
SjmsComponent -> public ConnectionFactory getConnectionFactory();1349476580;Gets the ConnectionFactory value of connectionFactory for this instance_of SjmsComponent.__@return the connectionFactory;public ConnectionFactory getConnectionFactory() {_        return connectionFactory__    };gets,the,connection,factory,value,of,connection,factory,for,this,instance,of,sjms,component,return,the,connection,factory;public,connection,factory,get,connection,factory,return,connection,factory
SjmsComponent -> public ConnectionFactory getConnectionFactory();1351626400;Gets the ConnectionFactory value of connectionFactory for this instance_of SjmsComponent.__@return the connectionFactory;public ConnectionFactory getConnectionFactory() {_        return connectionFactory__    };gets,the,connection,factory,value,of,connection,factory,for,this,instance,of,sjms,component,return,the,connection,factory;public,connection,factory,get,connection,factory,return,connection,factory
SjmsComponent -> public ConnectionFactory getConnectionFactory();1352796608;Gets the ConnectionFactory value of connectionFactory for this instance_of SjmsComponent.__@return the connectionFactory;public ConnectionFactory getConnectionFactory() {_        return connectionFactory__    };gets,the,connection,factory,value,of,connection,factory,for,this,instance,of,sjms,component,return,the,connection,factory;public,connection,factory,get,connection,factory,return,connection,factory
SjmsComponent -> public ConnectionFactory getConnectionFactory();1366704138;Gets the ConnectionFactory value of connectionFactory for this instance_of SjmsComponent.__@return the connectionFactory;public ConnectionFactory getConnectionFactory() {_        return connectionFactory__    };gets,the,connection,factory,value,of,connection,factory,for,this,instance,of,sjms,component,return,the,connection,factory;public,connection,factory,get,connection,factory,return,connection,factory
SjmsComponent -> public ConnectionFactory getConnectionFactory();1373129971;Gets the ConnectionFactory value of connectionFactory for this instance_of SjmsComponent.__@return the connectionFactory;public ConnectionFactory getConnectionFactory() {_        return connectionFactory__    };gets,the,connection,factory,value,of,connection,factory,for,this,instance,of,sjms,component,return,the,connection,factory;public,connection,factory,get,connection,factory,return,connection,factory
SjmsComponent -> public ConnectionFactory getConnectionFactory();1376549254;Gets the ConnectionFactory value of connectionFactory for this instance_of SjmsComponent.__@return the connectionFactory;public ConnectionFactory getConnectionFactory() {_        return connectionFactory__    };gets,the,connection,factory,value,of,connection,factory,for,this,instance,of,sjms,component,return,the,connection,factory;public,connection,factory,get,connection,factory,return,connection,factory
SjmsComponent -> public ConnectionFactory getConnectionFactory();1379362077;Gets the ConnectionFactory value of connectionFactory for this instance_of SjmsComponent.__@return the connectionFactory;public ConnectionFactory getConnectionFactory() {_        return connectionFactory__    };gets,the,connection,factory,value,of,connection,factory,for,this,instance,of,sjms,component,return,the,connection,factory;public,connection,factory,get,connection,factory,return,connection,factory
SjmsComponent -> public ConnectionFactory getConnectionFactory();1415211488;Gets the ConnectionFactory value of connectionFactory for this instance_of SjmsComponent.__@return the connectionFactory;public ConnectionFactory getConnectionFactory() {_        return connectionFactory__    };gets,the,connection,factory,value,of,connection,factory,for,this,instance,of,sjms,component,return,the,connection,factory;public,connection,factory,get,connection,factory,return,connection,factory
SjmsComponent -> public ConnectionFactory getConnectionFactory();1415327622;Gets the ConnectionFactory value of connectionFactory for this instance_of SjmsComponent.__@return the connectionFactory;public ConnectionFactory getConnectionFactory() {_        return connectionFactory__    };gets,the,connection,factory,value,of,connection,factory,for,this,instance,of,sjms,component,return,the,connection,factory;public,connection,factory,get,connection,factory,return,connection,factory
SjmsComponent -> public void setConnectionUsername(String connectionUsername);1488894155;The username to use when creating {@link javax.jms.Connection} when using the default {@link org.apache.camel.component.sjms.jms.ConnectionFactoryResource}.;public void setConnectionUsername(String connectionUsername) {_        this.connectionUsername = connectionUsername__    };the,username,to,use,when,creating,link,javax,jms,connection,when,using,the,default,link,org,apache,camel,component,sjms,jms,connection,factory,resource;public,void,set,connection,username,string,connection,username,this,connection,username,connection,username
SjmsComponent -> public void setConnectionUsername(String connectionUsername);1489430295;The username to use when creating {@link javax.jms.Connection} when using the default {@link org.apache.camel.component.sjms.jms.ConnectionFactoryResource}.;public void setConnectionUsername(String connectionUsername) {_        this.connectionUsername = connectionUsername__    };the,username,to,use,when,creating,link,javax,jms,connection,when,using,the,default,link,org,apache,camel,component,sjms,jms,connection,factory,resource;public,void,set,connection,username,string,connection,username,this,connection,username,connection,username
SjmsComponent -> public void setConnectionUsername(String connectionUsername);1490689115;The username to use when creating {@link javax.jms.Connection} when using the default {@link org.apache.camel.component.sjms.jms.ConnectionFactoryResource}.;public void setConnectionUsername(String connectionUsername) {_        this.connectionUsername = connectionUsername__    };the,username,to,use,when,creating,link,javax,jms,connection,when,using,the,default,link,org,apache,camel,component,sjms,jms,connection,factory,resource;public,void,set,connection,username,string,connection,username,this,connection,username,connection,username
SjmsComponent -> public void setConnectionUsername(String connectionUsername);1540108158;The username to use when creating {@link javax.jms.Connection} when using the default {@link org.apache.camel.component.sjms.jms.ConnectionFactoryResource}.;public void setConnectionUsername(String connectionUsername) {_        this.connectionUsername = connectionUsername__    };the,username,to,use,when,creating,link,javax,jms,connection,when,using,the,default,link,org,apache,camel,component,sjms,jms,connection,factory,resource;public,void,set,connection,username,string,connection,username,this,connection,username,connection,username
SjmsComponent -> public void setConnectionUsername(String connectionUsername);1547241305;The username to use when creating {@link javax.jms.Connection} when using the default {@link org.apache.camel.component.sjms.jms.ConnectionFactoryResource}.;public void setConnectionUsername(String connectionUsername) {_        this.connectionUsername = connectionUsername__    };the,username,to,use,when,creating,link,javax,jms,connection,when,using,the,default,link,org,apache,camel,component,sjms,jms,connection,factory,resource;public,void,set,connection,username,string,connection,username,this,connection,username,connection,username
SjmsComponent -> public void setConnectionUsername(String connectionUsername);1548332772;The username to use when creating {@link javax.jms.Connection} when using the default {@link org.apache.camel.component.sjms.jms.ConnectionFactoryResource}.;public void setConnectionUsername(String connectionUsername) {_        this.connectionUsername = connectionUsername__    };the,username,to,use,when,creating,link,javax,jms,connection,when,using,the,default,link,org,apache,camel,component,sjms,jms,connection,factory,resource;public,void,set,connection,username,string,connection,username,this,connection,username,connection,username
SjmsComponent -> public void setConnectionPassword(String connectionPassword);1488894155;The password to use when creating {@link javax.jms.Connection} when using the default {@link org.apache.camel.component.sjms.jms.ConnectionFactoryResource}.;public void setConnectionPassword(String connectionPassword) {_        this.connectionPassword = connectionPassword__    };the,password,to,use,when,creating,link,javax,jms,connection,when,using,the,default,link,org,apache,camel,component,sjms,jms,connection,factory,resource;public,void,set,connection,password,string,connection,password,this,connection,password,connection,password
SjmsComponent -> public void setConnectionPassword(String connectionPassword);1489430295;The password to use when creating {@link javax.jms.Connection} when using the default {@link org.apache.camel.component.sjms.jms.ConnectionFactoryResource}.;public void setConnectionPassword(String connectionPassword) {_        this.connectionPassword = connectionPassword__    };the,password,to,use,when,creating,link,javax,jms,connection,when,using,the,default,link,org,apache,camel,component,sjms,jms,connection,factory,resource;public,void,set,connection,password,string,connection,password,this,connection,password,connection,password
SjmsComponent -> public void setConnectionPassword(String connectionPassword);1490689115;The password to use when creating {@link javax.jms.Connection} when using the default {@link org.apache.camel.component.sjms.jms.ConnectionFactoryResource}.;public void setConnectionPassword(String connectionPassword) {_        this.connectionPassword = connectionPassword__    };the,password,to,use,when,creating,link,javax,jms,connection,when,using,the,default,link,org,apache,camel,component,sjms,jms,connection,factory,resource;public,void,set,connection,password,string,connection,password,this,connection,password,connection,password
SjmsComponent -> public void setConnectionPassword(String connectionPassword);1540108158;The password to use when creating {@link javax.jms.Connection} when using the default {@link org.apache.camel.component.sjms.jms.ConnectionFactoryResource}.;public void setConnectionPassword(String connectionPassword) {_        this.connectionPassword = connectionPassword__    };the,password,to,use,when,creating,link,javax,jms,connection,when,using,the,default,link,org,apache,camel,component,sjms,jms,connection,factory,resource;public,void,set,connection,password,string,connection,password,this,connection,password,connection,password
SjmsComponent -> public void setConnectionPassword(String connectionPassword);1547241305;The password to use when creating {@link javax.jms.Connection} when using the default {@link org.apache.camel.component.sjms.jms.ConnectionFactoryResource}.;public void setConnectionPassword(String connectionPassword) {_        this.connectionPassword = connectionPassword__    };the,password,to,use,when,creating,link,javax,jms,connection,when,using,the,default,link,org,apache,camel,component,sjms,jms,connection,factory,resource;public,void,set,connection,password,string,connection,password,this,connection,password,connection,password
SjmsComponent -> public void setConnectionPassword(String connectionPassword);1548332772;The password to use when creating {@link javax.jms.Connection} when using the default {@link org.apache.camel.component.sjms.jms.ConnectionFactoryResource}.;public void setConnectionPassword(String connectionPassword) {_        this.connectionPassword = connectionPassword__    };the,password,to,use,when,creating,link,javax,jms,connection,when,using,the,default,link,org,apache,camel,component,sjms,jms,connection,factory,resource;public,void,set,connection,password,string,connection,password,this,connection,password,connection,password
SjmsComponent -> private String normalizeUri(String uri) throws Exception;1343905000;Helper method used to detect the type of endpoint and add the "queue"_protocol if it is a default endpoint URI.__@param uri The value passed into our call to create an endpoint_@return String_@throws Exception;private String normalizeUri(String uri) throws Exception {_        String tempUri = uri__        String endpointName = tempUri.substring(0, tempUri.indexOf(":"))__        tempUri = tempUri.substring(endpointName.length())__        if (tempUri.startsWith("://")) {_            tempUri = tempUri.substring(3)__        }_        String protocol = null__        if (tempUri.indexOf(":") > 0) {_            protocol = tempUri.substring(0, tempUri.indexOf(":"))__        }_        if (ObjectHelper.isEmpty(protocol)) {_            protocol = "queue"__        } else if (protocol.equals("queue") || protocol.equals("topic")) {_            tempUri = tempUri.substring(protocol.length() + 1)__        } else {_            throw new Exception("Unsupported Protocol: " + protocol)__        }__        String path = tempUri__        uri = endpointName + "://" + protocol + ":" + path__        return uri__    };helper,method,used,to,detect,the,type,of,endpoint,and,add,the,queue,protocol,if,it,is,a,default,endpoint,uri,param,uri,the,value,passed,into,our,call,to,create,an,endpoint,return,string,throws,exception;private,string,normalize,uri,string,uri,throws,exception,string,temp,uri,uri,string,endpoint,name,temp,uri,substring,0,temp,uri,index,of,temp,uri,temp,uri,substring,endpoint,name,length,if,temp,uri,starts,with,temp,uri,temp,uri,substring,3,string,protocol,null,if,temp,uri,index,of,0,protocol,temp,uri,substring,0,temp,uri,index,of,if,object,helper,is,empty,protocol,protocol,queue,else,if,protocol,equals,queue,protocol,equals,topic,temp,uri,temp,uri,substring,protocol,length,1,else,throw,new,exception,unsupported,protocol,protocol,string,path,temp,uri,uri,endpoint,name,protocol,path,return,uri
SjmsComponent -> private String normalizeUri(String uri) throws Exception;1344346492;Helper method used to detect the type of endpoint and add the "queue"_protocol if it is a default endpoint URI.__@param uri The value passed into our call to create an endpoint_@return String_@throws Exception;private String normalizeUri(String uri) throws Exception {_        String tempUri = uri__        String endpointName = tempUri.substring(0, tempUri.indexOf(":"))__        tempUri = tempUri.substring(endpointName.length())__        if (tempUri.startsWith("://")) {_            tempUri = tempUri.substring(3)__        }_        String protocol = null__        if (tempUri.indexOf(":") > 0) {_            protocol = tempUri.substring(0, tempUri.indexOf(":"))__        }_        if (ObjectHelper.isEmpty(protocol)) {_            protocol = "queue"__        } else if (protocol.equals("queue") || protocol.equals("topic")) {_            tempUri = tempUri.substring(protocol.length() + 1)__        } else {_            throw new Exception("Unsupported Protocol: " + protocol)__        }__        String path = tempUri__        uri = endpointName + "://" + protocol + ":" + path__        return uri__    };helper,method,used,to,detect,the,type,of,endpoint,and,add,the,queue,protocol,if,it,is,a,default,endpoint,uri,param,uri,the,value,passed,into,our,call,to,create,an,endpoint,return,string,throws,exception;private,string,normalize,uri,string,uri,throws,exception,string,temp,uri,uri,string,endpoint,name,temp,uri,substring,0,temp,uri,index,of,temp,uri,temp,uri,substring,endpoint,name,length,if,temp,uri,starts,with,temp,uri,temp,uri,substring,3,string,protocol,null,if,temp,uri,index,of,0,protocol,temp,uri,substring,0,temp,uri,index,of,if,object,helper,is,empty,protocol,protocol,queue,else,if,protocol,equals,queue,protocol,equals,topic,temp,uri,temp,uri,substring,protocol,length,1,else,throw,new,exception,unsupported,protocol,protocol,string,path,temp,uri,uri,endpoint,name,protocol,path,return,uri
SjmsComponent -> private String normalizeUri(String uri) throws Exception;1346298132;Helper method used to detect the type of endpoint and add the "queue"_protocol if it is a default endpoint URI.__@param uri The value passed into our call to create an endpoint_@return String_@throws Exception;private String normalizeUri(String uri) throws Exception {_        String tempUri = uri__        String endpointName = tempUri.substring(0, tempUri.indexOf(":"))__        tempUri = tempUri.substring(endpointName.length())__        if (tempUri.startsWith("://")) {_            tempUri = tempUri.substring(3)__        }_        String protocol = null__        if (tempUri.indexOf(":") > 0) {_            protocol = tempUri.substring(0, tempUri.indexOf(":"))__        }_        if (ObjectHelper.isEmpty(protocol)) {_            protocol = "queue"__        } else if (protocol.equals("queue") || protocol.equals("topic")) {_            tempUri = tempUri.substring(protocol.length() + 1)__        } else {_            throw new Exception("Unsupported Protocol: " + protocol)__        }__        String path = tempUri__        uri = endpointName + "://" + protocol + ":" + path__        return uri__    };helper,method,used,to,detect,the,type,of,endpoint,and,add,the,queue,protocol,if,it,is,a,default,endpoint,uri,param,uri,the,value,passed,into,our,call,to,create,an,endpoint,return,string,throws,exception;private,string,normalize,uri,string,uri,throws,exception,string,temp,uri,uri,string,endpoint,name,temp,uri,substring,0,temp,uri,index,of,temp,uri,temp,uri,substring,endpoint,name,length,if,temp,uri,starts,with,temp,uri,temp,uri,substring,3,string,protocol,null,if,temp,uri,index,of,0,protocol,temp,uri,substring,0,temp,uri,index,of,if,object,helper,is,empty,protocol,protocol,queue,else,if,protocol,equals,queue,protocol,equals,topic,temp,uri,temp,uri,substring,protocol,length,1,else,throw,new,exception,unsupported,protocol,protocol,string,path,temp,uri,uri,endpoint,name,protocol,path,return,uri
SjmsComponent -> private String normalizeUri(String uri) throws Exception;1348524340;Helper method used to detect the type of endpoint and add the "queue"_protocol if it is a default endpoint URI.__@param uri The value passed into our call to create an endpoint_@return String_@throws Exception;private String normalizeUri(String uri) throws Exception {_        String tempUri = uri__        String endpointName = tempUri.substring(0, tempUri.indexOf(":"))__        tempUri = tempUri.substring(endpointName.length())__        if (tempUri.startsWith("://")) {_            tempUri = tempUri.substring(3)__        }_        String protocol = null__        if (tempUri.indexOf(":") > 0) {_            protocol = tempUri.substring(0, tempUri.indexOf(":"))__        }_        if (ObjectHelper.isEmpty(protocol)) {_            protocol = "queue"__        } else if (protocol.equals("queue") || protocol.equals("topic")) {_            tempUri = tempUri.substring(protocol.length() + 1)__        } else {_            throw new Exception("Unsupported Protocol: " + protocol)__        }__        String path = tempUri__        uri = endpointName + "://" + protocol + ":" + path__        return uri__    };helper,method,used,to,detect,the,type,of,endpoint,and,add,the,queue,protocol,if,it,is,a,default,endpoint,uri,param,uri,the,value,passed,into,our,call,to,create,an,endpoint,return,string,throws,exception;private,string,normalize,uri,string,uri,throws,exception,string,temp,uri,uri,string,endpoint,name,temp,uri,substring,0,temp,uri,index,of,temp,uri,temp,uri,substring,endpoint,name,length,if,temp,uri,starts,with,temp,uri,temp,uri,substring,3,string,protocol,null,if,temp,uri,index,of,0,protocol,temp,uri,substring,0,temp,uri,index,of,if,object,helper,is,empty,protocol,protocol,queue,else,if,protocol,equals,queue,protocol,equals,topic,temp,uri,temp,uri,substring,protocol,length,1,else,throw,new,exception,unsupported,protocol,protocol,string,path,temp,uri,uri,endpoint,name,protocol,path,return,uri
SjmsComponent -> private String normalizeUri(String uri) throws Exception;1348673753;Helper method used to detect the type of endpoint and add the "queue"_protocol if it is a default endpoint URI.__@param uri The value passed into our call to create an endpoint_@return String_@throws Exception;private String normalizeUri(String uri) throws Exception {_        String tempUri = uri__        String endpointName = tempUri.substring(0, tempUri.indexOf(":"))__        tempUri = tempUri.substring(endpointName.length())__        if (tempUri.startsWith("://")) {_            tempUri = tempUri.substring(3)__        }_        String protocol = null__        if (tempUri.indexOf(":") > 0) {_            protocol = tempUri.substring(0, tempUri.indexOf(":"))__        }_        if (ObjectHelper.isEmpty(protocol)) {_            protocol = "queue"__        } else if (protocol.equals("queue") || protocol.equals("topic")) {_            tempUri = tempUri.substring(protocol.length() + 1)__        } else {_            throw new Exception("Unsupported Protocol: " + protocol)__        }__        String path = tempUri__        uri = endpointName + "://" + protocol + ":" + path__        return uri__    };helper,method,used,to,detect,the,type,of,endpoint,and,add,the,queue,protocol,if,it,is,a,default,endpoint,uri,param,uri,the,value,passed,into,our,call,to,create,an,endpoint,return,string,throws,exception;private,string,normalize,uri,string,uri,throws,exception,string,temp,uri,uri,string,endpoint,name,temp,uri,substring,0,temp,uri,index,of,temp,uri,temp,uri,substring,endpoint,name,length,if,temp,uri,starts,with,temp,uri,temp,uri,substring,3,string,protocol,null,if,temp,uri,index,of,0,protocol,temp,uri,substring,0,temp,uri,index,of,if,object,helper,is,empty,protocol,protocol,queue,else,if,protocol,equals,queue,protocol,equals,topic,temp,uri,temp,uri,substring,protocol,length,1,else,throw,new,exception,unsupported,protocol,protocol,string,path,temp,uri,uri,endpoint,name,protocol,path,return,uri
SjmsComponent -> private String normalizeUri(String uri) throws Exception;1348675078;Helper method used to detect the type of endpoint and add the "queue"_protocol if it is a default endpoint URI.__@param uri The value passed into our call to create an endpoint_@return String_@throws Exception;private String normalizeUri(String uri) throws Exception {_        String tempUri = uri__        String endpointName = tempUri.substring(0, tempUri.indexOf(":"))__        tempUri = tempUri.substring(endpointName.length())__        if (tempUri.startsWith("://")) {_            tempUri = tempUri.substring(3)__        }_        String protocol = null__        if (tempUri.indexOf(":") > 0) {_            protocol = tempUri.substring(0, tempUri.indexOf(":"))__        }_        if (ObjectHelper.isEmpty(protocol)) {_            protocol = "queue"__        } else if (protocol.equals("queue") || protocol.equals("topic")) {_            tempUri = tempUri.substring(protocol.length() + 1)__        } else {_            throw new Exception("Unsupported Protocol: " + protocol)__        }__        String path = tempUri__        uri = endpointName + "://" + protocol + ":" + path__        return uri__    };helper,method,used,to,detect,the,type,of,endpoint,and,add,the,queue,protocol,if,it,is,a,default,endpoint,uri,param,uri,the,value,passed,into,our,call,to,create,an,endpoint,return,string,throws,exception;private,string,normalize,uri,string,uri,throws,exception,string,temp,uri,uri,string,endpoint,name,temp,uri,substring,0,temp,uri,index,of,temp,uri,temp,uri,substring,endpoint,name,length,if,temp,uri,starts,with,temp,uri,temp,uri,substring,3,string,protocol,null,if,temp,uri,index,of,0,protocol,temp,uri,substring,0,temp,uri,index,of,if,object,helper,is,empty,protocol,protocol,queue,else,if,protocol,equals,queue,protocol,equals,topic,temp,uri,temp,uri,substring,protocol,length,1,else,throw,new,exception,unsupported,protocol,protocol,string,path,temp,uri,uri,endpoint,name,protocol,path,return,uri
SjmsComponent -> private String normalizeUri(String uri) throws Exception;1349476580;Helper method used to detect the type of endpoint and add the "queue"_protocol if it is a default endpoint URI.__@param uri The value passed into our call to create an endpoint_@return String_@throws Exception;private String normalizeUri(String uri) throws Exception {_        String tempUri = uri__        String endpointName = tempUri.substring(0, tempUri.indexOf(":"))__        tempUri = tempUri.substring(endpointName.length())__        if (tempUri.startsWith("://")) {_            tempUri = tempUri.substring(3)__        }_        String protocol = null__        if (tempUri.indexOf(":") > 0) {_            protocol = tempUri.substring(0, tempUri.indexOf(":"))__        }_        if (ObjectHelper.isEmpty(protocol)) {_            protocol = "queue"__        } else if (protocol.equals("queue") || protocol.equals("topic")) {_            tempUri = tempUri.substring(protocol.length() + 1)__        } else {_            throw new Exception("Unsupported Protocol: " + protocol)__        }__        String path = tempUri__        uri = endpointName + "://" + protocol + ":" + path__        return uri__    };helper,method,used,to,detect,the,type,of,endpoint,and,add,the,queue,protocol,if,it,is,a,default,endpoint,uri,param,uri,the,value,passed,into,our,call,to,create,an,endpoint,return,string,throws,exception;private,string,normalize,uri,string,uri,throws,exception,string,temp,uri,uri,string,endpoint,name,temp,uri,substring,0,temp,uri,index,of,temp,uri,temp,uri,substring,endpoint,name,length,if,temp,uri,starts,with,temp,uri,temp,uri,substring,3,string,protocol,null,if,temp,uri,index,of,0,protocol,temp,uri,substring,0,temp,uri,index,of,if,object,helper,is,empty,protocol,protocol,queue,else,if,protocol,equals,queue,protocol,equals,topic,temp,uri,temp,uri,substring,protocol,length,1,else,throw,new,exception,unsupported,protocol,protocol,string,path,temp,uri,uri,endpoint,name,protocol,path,return,uri
SjmsComponent -> private String normalizeUri(String uri) throws Exception;1351626400;Helper method used to detect the type of endpoint and add the "queue"_protocol if it is a default endpoint URI.__@param uri The value passed into our call to create an endpoint_@return String_@throws Exception;private String normalizeUri(String uri) throws Exception {_        String tempUri = uri__        String endpointName = tempUri.substring(0, tempUri.indexOf(":"))__        tempUri = tempUri.substring(endpointName.length())__        if (tempUri.startsWith("://")) {_            tempUri = tempUri.substring(3)__        }_        String protocol = null__        if (tempUri.indexOf(":") > 0) {_            protocol = tempUri.substring(0, tempUri.indexOf(":"))__        }_        if (ObjectHelper.isEmpty(protocol)) {_            protocol = "queue"__        } else if (protocol.equals("queue") || protocol.equals("topic")) {_            tempUri = tempUri.substring(protocol.length() + 1)__        } else {_            throw new Exception("Unsupported Protocol: " + protocol)__        }__        String path = tempUri__        uri = endpointName + "://" + protocol + ":" + path__        return uri__    };helper,method,used,to,detect,the,type,of,endpoint,and,add,the,queue,protocol,if,it,is,a,default,endpoint,uri,param,uri,the,value,passed,into,our,call,to,create,an,endpoint,return,string,throws,exception;private,string,normalize,uri,string,uri,throws,exception,string,temp,uri,uri,string,endpoint,name,temp,uri,substring,0,temp,uri,index,of,temp,uri,temp,uri,substring,endpoint,name,length,if,temp,uri,starts,with,temp,uri,temp,uri,substring,3,string,protocol,null,if,temp,uri,index,of,0,protocol,temp,uri,substring,0,temp,uri,index,of,if,object,helper,is,empty,protocol,protocol,queue,else,if,protocol,equals,queue,protocol,equals,topic,temp,uri,temp,uri,substring,protocol,length,1,else,throw,new,exception,unsupported,protocol,protocol,string,path,temp,uri,uri,endpoint,name,protocol,path,return,uri
SjmsComponent -> public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy);1348524340;Sets the TransactionCommitStrategy value of transactionCommitStrategy for this_instance of SjmsComponent.__@param transactionCommitStrategy Sets TransactionCommitStrategy, default is TODO add_default;public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy) {_        this.transactionCommitStrategy = commitStrategy__    };sets,the,transaction,commit,strategy,value,of,transaction,commit,strategy,for,this,instance,of,sjms,component,param,transaction,commit,strategy,sets,transaction,commit,strategy,default,is,todo,add,default;public,void,set,transaction,commit,strategy,transaction,commit,strategy,commit,strategy,this,transaction,commit,strategy,commit,strategy
SjmsComponent -> public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy);1348673753;Sets the TransactionCommitStrategy value of transactionCommitStrategy for this_instance of SjmsComponent.__@param transactionCommitStrategy Sets TransactionCommitStrategy, default is TODO add_default;public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy) {_        this.transactionCommitStrategy = commitStrategy__    };sets,the,transaction,commit,strategy,value,of,transaction,commit,strategy,for,this,instance,of,sjms,component,param,transaction,commit,strategy,sets,transaction,commit,strategy,default,is,todo,add,default;public,void,set,transaction,commit,strategy,transaction,commit,strategy,commit,strategy,this,transaction,commit,strategy,commit,strategy
SjmsComponent -> public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy);1348675078;Sets the TransactionCommitStrategy value of transactionCommitStrategy for this_instance of SjmsComponent.__@param transactionCommitStrategy Sets TransactionCommitStrategy, default is TODO add_default;public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy) {_        this.transactionCommitStrategy = commitStrategy__    };sets,the,transaction,commit,strategy,value,of,transaction,commit,strategy,for,this,instance,of,sjms,component,param,transaction,commit,strategy,sets,transaction,commit,strategy,default,is,todo,add,default;public,void,set,transaction,commit,strategy,transaction,commit,strategy,commit,strategy,this,transaction,commit,strategy,commit,strategy
SjmsComponent -> public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy);1349476580;Sets the TransactionCommitStrategy value of transactionCommitStrategy for this_instance of SjmsComponent.__@param transactionCommitStrategy Sets TransactionCommitStrategy, default is TODO add_default;public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy) {_        this.transactionCommitStrategy = commitStrategy__    };sets,the,transaction,commit,strategy,value,of,transaction,commit,strategy,for,this,instance,of,sjms,component,param,transaction,commit,strategy,sets,transaction,commit,strategy,default,is,todo,add,default;public,void,set,transaction,commit,strategy,transaction,commit,strategy,commit,strategy,this,transaction,commit,strategy,commit,strategy
SjmsComponent -> public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy);1351626400;Sets the TransactionCommitStrategy value of transactionCommitStrategy for this_instance of SjmsComponent.__@param transactionCommitStrategy Sets TransactionCommitStrategy, default is TODO add_default;public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy) {_        this.transactionCommitStrategy = commitStrategy__    };sets,the,transaction,commit,strategy,value,of,transaction,commit,strategy,for,this,instance,of,sjms,component,param,transaction,commit,strategy,sets,transaction,commit,strategy,default,is,todo,add,default;public,void,set,transaction,commit,strategy,transaction,commit,strategy,commit,strategy,this,transaction,commit,strategy,commit,strategy
SjmsComponent -> public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy);1352796608;Sets the TransactionCommitStrategy value of transactionCommitStrategy for this_instance of SjmsComponent.;public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy) {_        this.transactionCommitStrategy = commitStrategy__    };sets,the,transaction,commit,strategy,value,of,transaction,commit,strategy,for,this,instance,of,sjms,component;public,void,set,transaction,commit,strategy,transaction,commit,strategy,commit,strategy,this,transaction,commit,strategy,commit,strategy
SjmsComponent -> public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy);1366704138;Sets the TransactionCommitStrategy value of transactionCommitStrategy for this_instance of SjmsComponent.;public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy) {_        this.transactionCommitStrategy = commitStrategy__    };sets,the,transaction,commit,strategy,value,of,transaction,commit,strategy,for,this,instance,of,sjms,component;public,void,set,transaction,commit,strategy,transaction,commit,strategy,commit,strategy,this,transaction,commit,strategy,commit,strategy
SjmsComponent -> public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy);1373129971;Sets the TransactionCommitStrategy value of transactionCommitStrategy for this_instance of SjmsComponent.;public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy) {_        this.transactionCommitStrategy = commitStrategy__    };sets,the,transaction,commit,strategy,value,of,transaction,commit,strategy,for,this,instance,of,sjms,component;public,void,set,transaction,commit,strategy,transaction,commit,strategy,commit,strategy,this,transaction,commit,strategy,commit,strategy
SjmsComponent -> public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy);1376549254;Sets the TransactionCommitStrategy value of transactionCommitStrategy for this_instance of SjmsComponent.;public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy) {_        this.transactionCommitStrategy = commitStrategy__    };sets,the,transaction,commit,strategy,value,of,transaction,commit,strategy,for,this,instance,of,sjms,component;public,void,set,transaction,commit,strategy,transaction,commit,strategy,commit,strategy,this,transaction,commit,strategy,commit,strategy
SjmsComponent -> public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy);1379362077;Sets the TransactionCommitStrategy value of transactionCommitStrategy for this_instance of SjmsComponent.;public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy) {_        this.transactionCommitStrategy = commitStrategy__    };sets,the,transaction,commit,strategy,value,of,transaction,commit,strategy,for,this,instance,of,sjms,component;public,void,set,transaction,commit,strategy,transaction,commit,strategy,commit,strategy,this,transaction,commit,strategy,commit,strategy
SjmsComponent -> public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy);1415211488;Sets the TransactionCommitStrategy value of transactionCommitStrategy for this_instance of SjmsComponent.;public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy) {_        this.transactionCommitStrategy = commitStrategy__    };sets,the,transaction,commit,strategy,value,of,transaction,commit,strategy,for,this,instance,of,sjms,component;public,void,set,transaction,commit,strategy,transaction,commit,strategy,commit,strategy,this,transaction,commit,strategy,commit,strategy
SjmsComponent -> public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy);1415327622;Sets the TransactionCommitStrategy value of transactionCommitStrategy for this_instance of SjmsComponent.;public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy) {_        this.transactionCommitStrategy = commitStrategy__    };sets,the,transaction,commit,strategy,value,of,transaction,commit,strategy,for,this,instance,of,sjms,component;public,void,set,transaction,commit,strategy,transaction,commit,strategy,commit,strategy,this,transaction,commit,strategy,commit,strategy
SjmsComponent -> public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy);1431945084;To configure which kind of commit strategy to use. Camel provides two implementations out_of the box, default and batch.;public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy) {_        this.transactionCommitStrategy = commitStrategy__    };to,configure,which,kind,of,commit,strategy,to,use,camel,provides,two,implementations,out,of,the,box,default,and,batch;public,void,set,transaction,commit,strategy,transaction,commit,strategy,commit,strategy,this,transaction,commit,strategy,commit,strategy
SjmsComponent -> public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy);1437137782;To configure which kind of commit strategy to use. Camel provides two implementations out_of the box, default and batch.;public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy) {_        this.transactionCommitStrategy = commitStrategy__    };to,configure,which,kind,of,commit,strategy,to,use,camel,provides,two,implementations,out,of,the,box,default,and,batch;public,void,set,transaction,commit,strategy,transaction,commit,strategy,commit,strategy,this,transaction,commit,strategy,commit,strategy
SjmsComponent -> public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy);1438158851;To configure which kind of commit strategy to use. Camel provides two implementations out_of the box, default and batch.;public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy) {_        this.transactionCommitStrategy = commitStrategy__    };to,configure,which,kind,of,commit,strategy,to,use,camel,provides,two,implementations,out,of,the,box,default,and,batch;public,void,set,transaction,commit,strategy,transaction,commit,strategy,commit,strategy,this,transaction,commit,strategy,commit,strategy
SjmsComponent -> public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy);1441617001;To configure which kind of commit strategy to use. Camel provides two implementations out_of the box, default and batch.;public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy) {_        this.transactionCommitStrategy = commitStrategy__    };to,configure,which,kind,of,commit,strategy,to,use,camel,provides,two,implementations,out,of,the,box,default,and,batch;public,void,set,transaction,commit,strategy,transaction,commit,strategy,commit,strategy,this,transaction,commit,strategy,commit,strategy
SjmsComponent -> public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy);1441617486;To configure which kind of commit strategy to use. Camel provides two implementations out_of the box, default and batch.;public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy) {_        this.transactionCommitStrategy = commitStrategy__    };to,configure,which,kind,of,commit,strategy,to,use,camel,provides,two,implementations,out,of,the,box,default,and,batch;public,void,set,transaction,commit,strategy,transaction,commit,strategy,commit,strategy,this,transaction,commit,strategy,commit,strategy
SjmsComponent -> public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy);1461839859;To configure which kind of commit strategy to use. Camel provides two implementations out_of the box, default and batch.;public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy) {_        this.transactionCommitStrategy = commitStrategy__    };to,configure,which,kind,of,commit,strategy,to,use,camel,provides,two,implementations,out,of,the,box,default,and,batch;public,void,set,transaction,commit,strategy,transaction,commit,strategy,commit,strategy,this,transaction,commit,strategy,commit,strategy
SjmsComponent -> public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy);1463119124;To configure which kind of commit strategy to use. Camel provides two implementations out_of the box, default and batch.;public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy) {_        this.transactionCommitStrategy = commitStrategy__    };to,configure,which,kind,of,commit,strategy,to,use,camel,provides,two,implementations,out,of,the,box,default,and,batch;public,void,set,transaction,commit,strategy,transaction,commit,strategy,commit,strategy,this,transaction,commit,strategy,commit,strategy
SjmsComponent -> public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy);1482332324;To configure which kind of commit strategy to use. Camel provides two implementations out_of the box, default and batch.;public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy) {_        this.transactionCommitStrategy = commitStrategy__    };to,configure,which,kind,of,commit,strategy,to,use,camel,provides,two,implementations,out,of,the,box,default,and,batch;public,void,set,transaction,commit,strategy,transaction,commit,strategy,commit,strategy,this,transaction,commit,strategy,commit,strategy
SjmsComponent -> public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy);1482346687;To configure which kind of commit strategy to use. Camel provides two implementations out_of the box, default and batch.;public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy) {_        this.transactionCommitStrategy = commitStrategy__    };to,configure,which,kind,of,commit,strategy,to,use,camel,provides,two,implementations,out,of,the,box,default,and,batch;public,void,set,transaction,commit,strategy,transaction,commit,strategy,commit,strategy,this,transaction,commit,strategy,commit,strategy
SjmsComponent -> public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy);1488894155;To configure which kind of commit strategy to use. Camel provides two implementations out_of the box, default and batch.;public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy) {_        this.transactionCommitStrategy = commitStrategy__    };to,configure,which,kind,of,commit,strategy,to,use,camel,provides,two,implementations,out,of,the,box,default,and,batch;public,void,set,transaction,commit,strategy,transaction,commit,strategy,commit,strategy,this,transaction,commit,strategy,commit,strategy
SjmsComponent -> public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy);1489430295;To configure which kind of commit strategy to use. Camel provides two implementations out_of the box, default and batch.;public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy) {_        this.transactionCommitStrategy = commitStrategy__    };to,configure,which,kind,of,commit,strategy,to,use,camel,provides,two,implementations,out,of,the,box,default,and,batch;public,void,set,transaction,commit,strategy,transaction,commit,strategy,commit,strategy,this,transaction,commit,strategy,commit,strategy
SjmsComponent -> public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy);1490689115;To configure which kind of commit strategy to use. Camel provides two implementations out_of the box, default and batch.;public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy) {_        this.transactionCommitStrategy = commitStrategy__    };to,configure,which,kind,of,commit,strategy,to,use,camel,provides,two,implementations,out,of,the,box,default,and,batch;public,void,set,transaction,commit,strategy,transaction,commit,strategy,commit,strategy,this,transaction,commit,strategy,commit,strategy
SjmsComponent -> public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy);1540108158;To configure which kind of commit strategy to use. Camel provides two implementations out_of the box, default and batch.;public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy) {_        this.transactionCommitStrategy = commitStrategy__    };to,configure,which,kind,of,commit,strategy,to,use,camel,provides,two,implementations,out,of,the,box,default,and,batch;public,void,set,transaction,commit,strategy,transaction,commit,strategy,commit,strategy,this,transaction,commit,strategy,commit,strategy
SjmsComponent -> public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy);1547241305;To configure which kind of commit strategy to use. Camel provides two implementations out_of the box, default and batch.;public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy) {_        this.transactionCommitStrategy = commitStrategy__    };to,configure,which,kind,of,commit,strategy,to,use,camel,provides,two,implementations,out,of,the,box,default,and,batch;public,void,set,transaction,commit,strategy,transaction,commit,strategy,commit,strategy,this,transaction,commit,strategy,commit,strategy
SjmsComponent -> public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy);1548332772;To configure which kind of commit strategy to use. Camel provides two implementations out_of the box, default and batch.;public void setTransactionCommitStrategy(TransactionCommitStrategy commitStrategy) {_        this.transactionCommitStrategy = commitStrategy__    };to,configure,which,kind,of,commit,strategy,to,use,camel,provides,two,implementations,out,of,the,box,default,and,batch;public,void,set,transaction,commit,strategy,transaction,commit,strategy,commit,strategy,this,transaction,commit,strategy,commit,strategy
SjmsComponent -> public void setConnectionResource(ConnectionResource connectionResource);1431945084;A ConnectionResource is an interface that allows for customization and container control of the ConnectionFactory._See Plugable Connection Resource Management for further details.;public void setConnectionResource(ConnectionResource connectionResource) {_        this.connectionResource = connectionResource__    };a,connection,resource,is,an,interface,that,allows,for,customization,and,container,control,of,the,connection,factory,see,plugable,connection,resource,management,for,further,details;public,void,set,connection,resource,connection,resource,connection,resource,this,connection,resource,connection,resource
SjmsComponent -> public void setConnectionResource(ConnectionResource connectionResource);1437137782;A ConnectionResource is an interface that allows for customization and container control of the ConnectionFactory._See Plugable Connection Resource Management for further details.;public void setConnectionResource(ConnectionResource connectionResource) {_        this.connectionResource = connectionResource__    };a,connection,resource,is,an,interface,that,allows,for,customization,and,container,control,of,the,connection,factory,see,plugable,connection,resource,management,for,further,details;public,void,set,connection,resource,connection,resource,connection,resource,this,connection,resource,connection,resource
SjmsComponent -> public void setConnectionResource(ConnectionResource connectionResource);1438158851;A ConnectionResource is an interface that allows for customization and container control of the ConnectionFactory._See Plugable Connection Resource Management for further details.;public void setConnectionResource(ConnectionResource connectionResource) {_        this.connectionResource = connectionResource__    };a,connection,resource,is,an,interface,that,allows,for,customization,and,container,control,of,the,connection,factory,see,plugable,connection,resource,management,for,further,details;public,void,set,connection,resource,connection,resource,connection,resource,this,connection,resource,connection,resource
SjmsComponent -> public void setConnectionResource(ConnectionResource connectionResource);1441617001;A ConnectionResource is an interface that allows for customization and container control of the ConnectionFactory._See Plugable Connection Resource Management for further details.;public void setConnectionResource(ConnectionResource connectionResource) {_        this.connectionResource = connectionResource__    };a,connection,resource,is,an,interface,that,allows,for,customization,and,container,control,of,the,connection,factory,see,plugable,connection,resource,management,for,further,details;public,void,set,connection,resource,connection,resource,connection,resource,this,connection,resource,connection,resource
SjmsComponent -> public void setConnectionResource(ConnectionResource connectionResource);1441617486;A ConnectionResource is an interface that allows for customization and container control of the ConnectionFactory._See Plugable Connection Resource Management for further details.;public void setConnectionResource(ConnectionResource connectionResource) {_        this.connectionResource = connectionResource__    };a,connection,resource,is,an,interface,that,allows,for,customization,and,container,control,of,the,connection,factory,see,plugable,connection,resource,management,for,further,details;public,void,set,connection,resource,connection,resource,connection,resource,this,connection,resource,connection,resource
SjmsComponent -> public void setConnectionResource(ConnectionResource connectionResource);1461839859;A ConnectionResource is an interface that allows for customization and container control of the ConnectionFactory._See Plugable Connection Resource Management for further details.;public void setConnectionResource(ConnectionResource connectionResource) {_        this.connectionResource = connectionResource__    };a,connection,resource,is,an,interface,that,allows,for,customization,and,container,control,of,the,connection,factory,see,plugable,connection,resource,management,for,further,details;public,void,set,connection,resource,connection,resource,connection,resource,this,connection,resource,connection,resource
SjmsComponent -> public void setConnectionResource(ConnectionResource connectionResource);1463119124;A ConnectionResource is an interface that allows for customization and container control of the ConnectionFactory._See Plugable Connection Resource Management for further details.;public void setConnectionResource(ConnectionResource connectionResource) {_        this.connectionResource = connectionResource__    };a,connection,resource,is,an,interface,that,allows,for,customization,and,container,control,of,the,connection,factory,see,plugable,connection,resource,management,for,further,details;public,void,set,connection,resource,connection,resource,connection,resource,this,connection,resource,connection,resource
SjmsComponent -> public void setConnectionResource(ConnectionResource connectionResource);1482332324;A ConnectionResource is an interface that allows for customization and container control of the ConnectionFactory._See Plugable Connection Resource Management for further details.;public void setConnectionResource(ConnectionResource connectionResource) {_        this.connectionResource = connectionResource__    };a,connection,resource,is,an,interface,that,allows,for,customization,and,container,control,of,the,connection,factory,see,plugable,connection,resource,management,for,further,details;public,void,set,connection,resource,connection,resource,connection,resource,this,connection,resource,connection,resource
SjmsComponent -> public void setConnectionResource(ConnectionResource connectionResource);1482346687;A ConnectionResource is an interface that allows for customization and container control of the ConnectionFactory._See Plugable Connection Resource Management for further details.;public void setConnectionResource(ConnectionResource connectionResource) {_        this.connectionResource = connectionResource__    };a,connection,resource,is,an,interface,that,allows,for,customization,and,container,control,of,the,connection,factory,see,plugable,connection,resource,management,for,further,details;public,void,set,connection,resource,connection,resource,connection,resource,this,connection,resource,connection,resource
SjmsComponent -> public void setConnectionResource(ConnectionResource connectionResource);1488894155;A ConnectionResource is an interface that allows for customization and container control of the ConnectionFactory._See Plugable Connection Resource Management for further details.;public void setConnectionResource(ConnectionResource connectionResource) {_        this.connectionResource = connectionResource__    };a,connection,resource,is,an,interface,that,allows,for,customization,and,container,control,of,the,connection,factory,see,plugable,connection,resource,management,for,further,details;public,void,set,connection,resource,connection,resource,connection,resource,this,connection,resource,connection,resource
SjmsComponent -> public void setConnectionResource(ConnectionResource connectionResource);1489430295;A ConnectionResource is an interface that allows for customization and container control of the ConnectionFactory._See Plugable Connection Resource Management for further details.;public void setConnectionResource(ConnectionResource connectionResource) {_        this.connectionResource = connectionResource__    };a,connection,resource,is,an,interface,that,allows,for,customization,and,container,control,of,the,connection,factory,see,plugable,connection,resource,management,for,further,details;public,void,set,connection,resource,connection,resource,connection,resource,this,connection,resource,connection,resource
SjmsComponent -> public void setConnectionResource(ConnectionResource connectionResource);1490689115;A ConnectionResource is an interface that allows for customization and container control of the ConnectionFactory._See Plugable Connection Resource Management for further details.;public void setConnectionResource(ConnectionResource connectionResource) {_        this.connectionResource = connectionResource__    };a,connection,resource,is,an,interface,that,allows,for,customization,and,container,control,of,the,connection,factory,see,plugable,connection,resource,management,for,further,details;public,void,set,connection,resource,connection,resource,connection,resource,this,connection,resource,connection,resource
SjmsComponent -> public void setConnectionResource(ConnectionResource connectionResource);1540108158;A ConnectionResource is an interface that allows for customization and container control of the ConnectionFactory._See Plugable Connection Resource Management for further details.;public void setConnectionResource(ConnectionResource connectionResource) {_        this.connectionResource = connectionResource__    };a,connection,resource,is,an,interface,that,allows,for,customization,and,container,control,of,the,connection,factory,see,plugable,connection,resource,management,for,further,details;public,void,set,connection,resource,connection,resource,connection,resource,this,connection,resource,connection,resource
SjmsComponent -> public void setConnectionResource(ConnectionResource connectionResource);1547241305;A ConnectionResource is an interface that allows for customization and container control of the ConnectionFactory._See Plugable Connection Resource Management for further details.;public void setConnectionResource(ConnectionResource connectionResource) {_        this.connectionResource = connectionResource__    };a,connection,resource,is,an,interface,that,allows,for,customization,and,container,control,of,the,connection,factory,see,plugable,connection,resource,management,for,further,details;public,void,set,connection,resource,connection,resource,connection,resource,this,connection,resource,connection,resource
SjmsComponent -> public void setConnectionResource(ConnectionResource connectionResource);1548332772;A ConnectionResource is an interface that allows for customization and container control of the ConnectionFactory._See Plugable Connection Resource Management for further details.;public void setConnectionResource(ConnectionResource connectionResource) {_        this.connectionResource = connectionResource__    };a,connection,resource,is,an,interface,that,allows,for,customization,and,container,control,of,the,connection,factory,see,plugable,connection,resource,management,for,further,details;public,void,set,connection,resource,connection,resource,connection,resource,this,connection,resource,connection,resource
SjmsComponent -> public TransactionCommitStrategy getTransactionCommitStrategy();1348524340;Gets the TransactionCommitStrategy value of transactionCommitStrategy for this_instance of SjmsComponent.__@return the transactionCommitStrategy;public TransactionCommitStrategy getTransactionCommitStrategy() {_        return transactionCommitStrategy__    };gets,the,transaction,commit,strategy,value,of,transaction,commit,strategy,for,this,instance,of,sjms,component,return,the,transaction,commit,strategy;public,transaction,commit,strategy,get,transaction,commit,strategy,return,transaction,commit,strategy
SjmsComponent -> public TransactionCommitStrategy getTransactionCommitStrategy();1348673753;Gets the TransactionCommitStrategy value of transactionCommitStrategy for this_instance of SjmsComponent.__@return the transactionCommitStrategy;public TransactionCommitStrategy getTransactionCommitStrategy() {_        return transactionCommitStrategy__    };gets,the,transaction,commit,strategy,value,of,transaction,commit,strategy,for,this,instance,of,sjms,component,return,the,transaction,commit,strategy;public,transaction,commit,strategy,get,transaction,commit,strategy,return,transaction,commit,strategy
SjmsComponent -> public TransactionCommitStrategy getTransactionCommitStrategy();1348675078;Gets the TransactionCommitStrategy value of transactionCommitStrategy for this_instance of SjmsComponent.__@return the transactionCommitStrategy;public TransactionCommitStrategy getTransactionCommitStrategy() {_        return transactionCommitStrategy__    };gets,the,transaction,commit,strategy,value,of,transaction,commit,strategy,for,this,instance,of,sjms,component,return,the,transaction,commit,strategy;public,transaction,commit,strategy,get,transaction,commit,strategy,return,transaction,commit,strategy
SjmsComponent -> public TransactionCommitStrategy getTransactionCommitStrategy();1349476580;Gets the TransactionCommitStrategy value of transactionCommitStrategy for this_instance of SjmsComponent.__@return the transactionCommitStrategy;public TransactionCommitStrategy getTransactionCommitStrategy() {_        return transactionCommitStrategy__    };gets,the,transaction,commit,strategy,value,of,transaction,commit,strategy,for,this,instance,of,sjms,component,return,the,transaction,commit,strategy;public,transaction,commit,strategy,get,transaction,commit,strategy,return,transaction,commit,strategy
SjmsComponent -> public TransactionCommitStrategy getTransactionCommitStrategy();1351626400;Gets the TransactionCommitStrategy value of transactionCommitStrategy for this_instance of SjmsComponent.__@return the transactionCommitStrategy;public TransactionCommitStrategy getTransactionCommitStrategy() {_        return transactionCommitStrategy__    };gets,the,transaction,commit,strategy,value,of,transaction,commit,strategy,for,this,instance,of,sjms,component,return,the,transaction,commit,strategy;public,transaction,commit,strategy,get,transaction,commit,strategy,return,transaction,commit,strategy
SjmsComponent -> public TransactionCommitStrategy getTransactionCommitStrategy();1352796608;Gets the TransactionCommitStrategy value of transactionCommitStrategy for this_instance of SjmsComponent.__@return the transactionCommitStrategy;public TransactionCommitStrategy getTransactionCommitStrategy() {_        return transactionCommitStrategy__    };gets,the,transaction,commit,strategy,value,of,transaction,commit,strategy,for,this,instance,of,sjms,component,return,the,transaction,commit,strategy;public,transaction,commit,strategy,get,transaction,commit,strategy,return,transaction,commit,strategy
SjmsComponent -> public TransactionCommitStrategy getTransactionCommitStrategy();1366704138;Gets the TransactionCommitStrategy value of transactionCommitStrategy for this_instance of SjmsComponent.__@return the transactionCommitStrategy;public TransactionCommitStrategy getTransactionCommitStrategy() {_        return transactionCommitStrategy__    };gets,the,transaction,commit,strategy,value,of,transaction,commit,strategy,for,this,instance,of,sjms,component,return,the,transaction,commit,strategy;public,transaction,commit,strategy,get,transaction,commit,strategy,return,transaction,commit,strategy
SjmsComponent -> public TransactionCommitStrategy getTransactionCommitStrategy();1373129971;Gets the TransactionCommitStrategy value of transactionCommitStrategy for this_instance of SjmsComponent.__@return the transactionCommitStrategy;public TransactionCommitStrategy getTransactionCommitStrategy() {_        return transactionCommitStrategy__    };gets,the,transaction,commit,strategy,value,of,transaction,commit,strategy,for,this,instance,of,sjms,component,return,the,transaction,commit,strategy;public,transaction,commit,strategy,get,transaction,commit,strategy,return,transaction,commit,strategy
SjmsComponent -> public TransactionCommitStrategy getTransactionCommitStrategy();1376549254;Gets the TransactionCommitStrategy value of transactionCommitStrategy for this_instance of SjmsComponent.__@return the transactionCommitStrategy;public TransactionCommitStrategy getTransactionCommitStrategy() {_        return transactionCommitStrategy__    };gets,the,transaction,commit,strategy,value,of,transaction,commit,strategy,for,this,instance,of,sjms,component,return,the,transaction,commit,strategy;public,transaction,commit,strategy,get,transaction,commit,strategy,return,transaction,commit,strategy
SjmsComponent -> public TransactionCommitStrategy getTransactionCommitStrategy();1379362077;Gets the TransactionCommitStrategy value of transactionCommitStrategy for this_instance of SjmsComponent.__@return the transactionCommitStrategy;public TransactionCommitStrategy getTransactionCommitStrategy() {_        return transactionCommitStrategy__    };gets,the,transaction,commit,strategy,value,of,transaction,commit,strategy,for,this,instance,of,sjms,component,return,the,transaction,commit,strategy;public,transaction,commit,strategy,get,transaction,commit,strategy,return,transaction,commit,strategy
SjmsComponent -> public TransactionCommitStrategy getTransactionCommitStrategy();1415211488;Gets the TransactionCommitStrategy value of transactionCommitStrategy for this_instance of SjmsComponent.__@return the transactionCommitStrategy;public TransactionCommitStrategy getTransactionCommitStrategy() {_        return transactionCommitStrategy__    };gets,the,transaction,commit,strategy,value,of,transaction,commit,strategy,for,this,instance,of,sjms,component,return,the,transaction,commit,strategy;public,transaction,commit,strategy,get,transaction,commit,strategy,return,transaction,commit,strategy
SjmsComponent -> public TransactionCommitStrategy getTransactionCommitStrategy();1415327622;Gets the TransactionCommitStrategy value of transactionCommitStrategy for this_instance of SjmsComponent.__@return the transactionCommitStrategy;public TransactionCommitStrategy getTransactionCommitStrategy() {_        return transactionCommitStrategy__    };gets,the,transaction,commit,strategy,value,of,transaction,commit,strategy,for,this,instance,of,sjms,component,return,the,transaction,commit,strategy;public,transaction,commit,strategy,get,transaction,commit,strategy,return,transaction,commit,strategy
SjmsComponent -> private static String normalizeUri(String uri) throws Exception;1352796608;Helper method used to detect the type of endpoint and add the "queue"_protocol if it is a default endpoint URI.__@param uri The value passed into our call to create an endpoint_@return String_@throws Exception;private static String normalizeUri(String uri) throws Exception {_        String tempUri = uri__        String endpointName = tempUri.substring(0, tempUri.indexOf(":"))__        tempUri = tempUri.substring(endpointName.length())__        if (tempUri.startsWith("://")) {_            tempUri = tempUri.substring(3)__        }_        String protocol = null__        if (tempUri.indexOf(":") > 0) {_            protocol = tempUri.substring(0, tempUri.indexOf(":"))__        }_        if (ObjectHelper.isEmpty(protocol)) {_            protocol = "queue"__        } else if (protocol != null && (protocol.equals("queue") || protocol.equals("topic"))) {_            tempUri = tempUri.substring(protocol.length() + 1)__        } else {_            throw new Exception("Unsupported Protocol: " + protocol)__        }__        String path = tempUri__        uri = endpointName + "://" + protocol + ":" + path__        return uri__    };helper,method,used,to,detect,the,type,of,endpoint,and,add,the,queue,protocol,if,it,is,a,default,endpoint,uri,param,uri,the,value,passed,into,our,call,to,create,an,endpoint,return,string,throws,exception;private,static,string,normalize,uri,string,uri,throws,exception,string,temp,uri,uri,string,endpoint,name,temp,uri,substring,0,temp,uri,index,of,temp,uri,temp,uri,substring,endpoint,name,length,if,temp,uri,starts,with,temp,uri,temp,uri,substring,3,string,protocol,null,if,temp,uri,index,of,0,protocol,temp,uri,substring,0,temp,uri,index,of,if,object,helper,is,empty,protocol,protocol,queue,else,if,protocol,null,protocol,equals,queue,protocol,equals,topic,temp,uri,temp,uri,substring,protocol,length,1,else,throw,new,exception,unsupported,protocol,protocol,string,path,temp,uri,uri,endpoint,name,protocol,path,return,uri
SjmsComponent -> private static String normalizeUri(String uri) throws Exception;1366704138;Helper method used to detect the type of endpoint and add the "queue"_protocol if it is a default endpoint URI.__@param uri The value passed into our call to create an endpoint_@return String_@throws Exception;private static String normalizeUri(String uri) throws Exception {_        String tempUri = uri__        String endpointName = tempUri.substring(0, tempUri.indexOf(":"))__        tempUri = tempUri.substring(endpointName.length())__        if (tempUri.startsWith("://")) {_            tempUri = tempUri.substring(3)__        }_        String protocol = null__        if (tempUri.indexOf(":") > 0) {_            protocol = tempUri.substring(0, tempUri.indexOf(":"))__        }_        if (ObjectHelper.isEmpty(protocol)) {_            protocol = "queue"__        } else if (protocol != null && (protocol.equals("queue") || protocol.equals("topic"))) {_            tempUri = tempUri.substring(protocol.length() + 1)__        } else {_            throw new Exception("Unsupported Protocol: " + protocol)__        }__        String path = tempUri__        uri = endpointName + "://" + protocol + ":" + path__        return uri__    };helper,method,used,to,detect,the,type,of,endpoint,and,add,the,queue,protocol,if,it,is,a,default,endpoint,uri,param,uri,the,value,passed,into,our,call,to,create,an,endpoint,return,string,throws,exception;private,static,string,normalize,uri,string,uri,throws,exception,string,temp,uri,uri,string,endpoint,name,temp,uri,substring,0,temp,uri,index,of,temp,uri,temp,uri,substring,endpoint,name,length,if,temp,uri,starts,with,temp,uri,temp,uri,substring,3,string,protocol,null,if,temp,uri,index,of,0,protocol,temp,uri,substring,0,temp,uri,index,of,if,object,helper,is,empty,protocol,protocol,queue,else,if,protocol,null,protocol,equals,queue,protocol,equals,topic,temp,uri,temp,uri,substring,protocol,length,1,else,throw,new,exception,unsupported,protocol,protocol,string,path,temp,uri,uri,endpoint,name,protocol,path,return,uri
SjmsComponent -> private static String normalizeUri(String uri) throws Exception;1373129971;Helper method used to detect the type of endpoint and add the "queue"_protocol if it is a default endpoint URI.__@param uri The value passed into our call to create an endpoint_@return String_@throws Exception;private static String normalizeUri(String uri) throws Exception {_        String tempUri = uri__        String endpointName = tempUri.substring(0, tempUri.indexOf(":"))__        tempUri = tempUri.substring(endpointName.length())__        if (tempUri.startsWith("://")) {_            tempUri = tempUri.substring(3)__        }_        String protocol = null__        if (tempUri.indexOf(":") > 0) {_            protocol = tempUri.substring(0, tempUri.indexOf(":"))__        }_        if (ObjectHelper.isEmpty(protocol)) {_            protocol = "queue"__        } else if (protocol != null && (protocol.equals("queue") || protocol.equals("topic"))) {_            tempUri = tempUri.substring(protocol.length() + 1)__        } else {_            throw new Exception("Unsupported Protocol: " + protocol)__        }__        String path = tempUri__        uri = endpointName + "://" + protocol + ":" + path__        return uri__    };helper,method,used,to,detect,the,type,of,endpoint,and,add,the,queue,protocol,if,it,is,a,default,endpoint,uri,param,uri,the,value,passed,into,our,call,to,create,an,endpoint,return,string,throws,exception;private,static,string,normalize,uri,string,uri,throws,exception,string,temp,uri,uri,string,endpoint,name,temp,uri,substring,0,temp,uri,index,of,temp,uri,temp,uri,substring,endpoint,name,length,if,temp,uri,starts,with,temp,uri,temp,uri,substring,3,string,protocol,null,if,temp,uri,index,of,0,protocol,temp,uri,substring,0,temp,uri,index,of,if,object,helper,is,empty,protocol,protocol,queue,else,if,protocol,null,protocol,equals,queue,protocol,equals,topic,temp,uri,temp,uri,substring,protocol,length,1,else,throw,new,exception,unsupported,protocol,protocol,string,path,temp,uri,uri,endpoint,name,protocol,path,return,uri
SjmsComponent -> private static String normalizeUri(String uri) throws Exception;1376549254;Helper method used to detect the type of endpoint and add the "queue"_protocol if it is a default endpoint URI.__@param uri The value passed into our call to create an endpoint_@return String_@throws Exception;private static String normalizeUri(String uri) throws Exception {_        String tempUri = uri__        String endpointName = tempUri.substring(0, tempUri.indexOf(":"))__        tempUri = tempUri.substring(endpointName.length())__        if (tempUri.startsWith("://")) {_            tempUri = tempUri.substring(3)__        }_        String protocol = null__        if (tempUri.indexOf(":") > 0) {_            protocol = tempUri.substring(0, tempUri.indexOf(":"))__        }_        if (ObjectHelper.isEmpty(protocol)) {_            protocol = "queue"__        } else if (protocol != null && (protocol.equals("queue") || protocol.equals("topic"))) {_            tempUri = tempUri.substring(protocol.length() + 1)__        } else {_            throw new Exception("Unsupported Protocol: " + protocol)__        }__        String path = tempUri__        uri = endpointName + "://" + protocol + ":" + path__        return uri__    };helper,method,used,to,detect,the,type,of,endpoint,and,add,the,queue,protocol,if,it,is,a,default,endpoint,uri,param,uri,the,value,passed,into,our,call,to,create,an,endpoint,return,string,throws,exception;private,static,string,normalize,uri,string,uri,throws,exception,string,temp,uri,uri,string,endpoint,name,temp,uri,substring,0,temp,uri,index,of,temp,uri,temp,uri,substring,endpoint,name,length,if,temp,uri,starts,with,temp,uri,temp,uri,substring,3,string,protocol,null,if,temp,uri,index,of,0,protocol,temp,uri,substring,0,temp,uri,index,of,if,object,helper,is,empty,protocol,protocol,queue,else,if,protocol,null,protocol,equals,queue,protocol,equals,topic,temp,uri,temp,uri,substring,protocol,length,1,else,throw,new,exception,unsupported,protocol,protocol,string,path,temp,uri,uri,endpoint,name,protocol,path,return,uri
SjmsComponent -> private static String normalizeUri(String uri) throws Exception;1379362077;Helper method used to detect the type of endpoint and add the "queue"_protocol if it is a default endpoint URI.__@param uri The value passed into our call to create an endpoint_@return String_@throws Exception;private static String normalizeUri(String uri) throws Exception {_        String tempUri = uri__        String endpointName = tempUri.substring(0, tempUri.indexOf(":"))__        tempUri = tempUri.substring(endpointName.length())__        if (tempUri.startsWith("://")) {_            tempUri = tempUri.substring(3)__        }_        String protocol = null__        if (tempUri.indexOf(":") > 0) {_            protocol = tempUri.substring(0, tempUri.indexOf(":"))__        }_        if (ObjectHelper.isEmpty(protocol)) {_            protocol = "queue"__        } else if (protocol != null && (protocol.equals("queue") || protocol.equals("topic"))) {_            tempUri = tempUri.substring(protocol.length() + 1)__        } else {_            throw new Exception("Unsupported Protocol: " + protocol)__        }__        String path = tempUri__        uri = endpointName + "://" + protocol + ":" + path__        return uri__    };helper,method,used,to,detect,the,type,of,endpoint,and,add,the,queue,protocol,if,it,is,a,default,endpoint,uri,param,uri,the,value,passed,into,our,call,to,create,an,endpoint,return,string,throws,exception;private,static,string,normalize,uri,string,uri,throws,exception,string,temp,uri,uri,string,endpoint,name,temp,uri,substring,0,temp,uri,index,of,temp,uri,temp,uri,substring,endpoint,name,length,if,temp,uri,starts,with,temp,uri,temp,uri,substring,3,string,protocol,null,if,temp,uri,index,of,0,protocol,temp,uri,substring,0,temp,uri,index,of,if,object,helper,is,empty,protocol,protocol,queue,else,if,protocol,null,protocol,equals,queue,protocol,equals,topic,temp,uri,temp,uri,substring,protocol,length,1,else,throw,new,exception,unsupported,protocol,protocol,string,path,temp,uri,uri,endpoint,name,protocol,path,return,uri
SjmsComponent -> private static String normalizeUri(String uri) throws Exception;1415211488;Helper method used to detect the type of endpoint and add the "queue"_protocol if it is a default endpoint URI.__@param uri The value passed into our call to create an endpoint_@return String_@throws Exception;private static String normalizeUri(String uri) throws Exception {_        String tempUri = uri__        String endpointName = tempUri.substring(0, tempUri.indexOf(":"))__        tempUri = tempUri.substring(endpointName.length())__        if (tempUri.startsWith("://")) {_            tempUri = tempUri.substring(3)__        }_        String protocol = null__        if (tempUri.indexOf(":") > 0) {_            protocol = tempUri.substring(0, tempUri.indexOf(":"))__        }_        if (ObjectHelper.isEmpty(protocol)) {_            protocol = "queue"__        } else if (protocol != null && (protocol.equals("queue") || protocol.equals("topic"))) {_            tempUri = tempUri.substring(protocol.length() + 1)__        } else {_            throw new Exception("Unsupported Protocol: " + protocol)__        }__        String path = tempUri__        uri = endpointName + "://" + protocol + ":" + path__        return uri__    };helper,method,used,to,detect,the,type,of,endpoint,and,add,the,queue,protocol,if,it,is,a,default,endpoint,uri,param,uri,the,value,passed,into,our,call,to,create,an,endpoint,return,string,throws,exception;private,static,string,normalize,uri,string,uri,throws,exception,string,temp,uri,uri,string,endpoint,name,temp,uri,substring,0,temp,uri,index,of,temp,uri,temp,uri,substring,endpoint,name,length,if,temp,uri,starts,with,temp,uri,temp,uri,substring,3,string,protocol,null,if,temp,uri,index,of,0,protocol,temp,uri,substring,0,temp,uri,index,of,if,object,helper,is,empty,protocol,protocol,queue,else,if,protocol,null,protocol,equals,queue,protocol,equals,topic,temp,uri,temp,uri,substring,protocol,length,1,else,throw,new,exception,unsupported,protocol,protocol,string,path,temp,uri,uri,endpoint,name,protocol,path,return,uri
SjmsComponent -> private static String normalizeUri(String uri) throws Exception;1415327622;Helper method used to detect the type of endpoint and add the "queue"_protocol if it is a default endpoint URI.__@param uri The value passed into our call to create an endpoint_@return String_@throws Exception;private static String normalizeUri(String uri) throws Exception {_        String tempUri = uri__        String endpointName = tempUri.substring(0, tempUri.indexOf(":"))__        tempUri = tempUri.substring(endpointName.length())__        if (tempUri.startsWith("://")) {_            tempUri = tempUri.substring(3)__        }_        String protocol = null__        if (tempUri.indexOf(":") > 0) {_            protocol = tempUri.substring(0, tempUri.indexOf(":"))__        }_        if (ObjectHelper.isEmpty(protocol)) {_            protocol = "queue"__        } else if (protocol != null && (protocol.equals("queue") || protocol.equals("topic"))) {_            tempUri = tempUri.substring(protocol.length() + 1)__        } else {_            throw new Exception("Unsupported Protocol: " + protocol)__        }__        String path = tempUri__        uri = endpointName + "://" + protocol + ":" + path__        return uri__    };helper,method,used,to,detect,the,type,of,endpoint,and,add,the,queue,protocol,if,it,is,a,default,endpoint,uri,param,uri,the,value,passed,into,our,call,to,create,an,endpoint,return,string,throws,exception;private,static,string,normalize,uri,string,uri,throws,exception,string,temp,uri,uri,string,endpoint,name,temp,uri,substring,0,temp,uri,index,of,temp,uri,temp,uri,substring,endpoint,name,length,if,temp,uri,starts,with,temp,uri,temp,uri,substring,3,string,protocol,null,if,temp,uri,index,of,0,protocol,temp,uri,substring,0,temp,uri,index,of,if,object,helper,is,empty,protocol,protocol,queue,else,if,protocol,null,protocol,equals,queue,protocol,equals,topic,temp,uri,temp,uri,substring,protocol,length,1,else,throw,new,exception,unsupported,protocol,protocol,string,path,temp,uri,uri,endpoint,name,protocol,path,return,uri
SjmsComponent -> private static String normalizeUri(String uri) throws Exception;1431945084;Helper method used to detect the type of endpoint and add the "queue"_protocol if it is a default endpoint URI.__@param uri The value passed into our call to create an endpoint_@return String_@throws Exception;private static String normalizeUri(String uri) throws Exception {_        String tempUri = uri__        String endpointName = tempUri.substring(0, tempUri.indexOf(":"))__        tempUri = tempUri.substring(endpointName.length())__        if (tempUri.startsWith("://")) {_            tempUri = tempUri.substring(3)__        }_        String protocol = null__        if (tempUri.indexOf(":") > 0) {_            protocol = tempUri.substring(0, tempUri.indexOf(":"))__        }_        if (ObjectHelper.isEmpty(protocol)) {_            protocol = "queue"__        } else if (protocol != null && (protocol.equals("queue") || protocol.equals("topic"))) {_            tempUri = tempUri.substring(protocol.length() + 1)__        } else {_            throw new Exception("Unsupported Protocol: " + protocol)__        }__        String path = tempUri__        uri = endpointName + "://" + protocol + ":" + path__        return uri__    };helper,method,used,to,detect,the,type,of,endpoint,and,add,the,queue,protocol,if,it,is,a,default,endpoint,uri,param,uri,the,value,passed,into,our,call,to,create,an,endpoint,return,string,throws,exception;private,static,string,normalize,uri,string,uri,throws,exception,string,temp,uri,uri,string,endpoint,name,temp,uri,substring,0,temp,uri,index,of,temp,uri,temp,uri,substring,endpoint,name,length,if,temp,uri,starts,with,temp,uri,temp,uri,substring,3,string,protocol,null,if,temp,uri,index,of,0,protocol,temp,uri,substring,0,temp,uri,index,of,if,object,helper,is,empty,protocol,protocol,queue,else,if,protocol,null,protocol,equals,queue,protocol,equals,topic,temp,uri,temp,uri,substring,protocol,length,1,else,throw,new,exception,unsupported,protocol,protocol,string,path,temp,uri,uri,endpoint,name,protocol,path,return,uri
SjmsComponent -> private static String normalizeUri(String uri) throws Exception;1437137782;Helper method used to detect the type of endpoint and add the "queue"_protocol if it is a default endpoint URI.__@param uri The value passed into our call to create an endpoint_@return String_@throws Exception;private static String normalizeUri(String uri) throws Exception {_        String tempUri = uri__        String endpointName = tempUri.substring(0, tempUri.indexOf(":"))__        tempUri = tempUri.substring(endpointName.length())__        if (tempUri.startsWith("://")) {_            tempUri = tempUri.substring(3)__        }_        String protocol = null__        if (tempUri.indexOf(":") > 0) {_            protocol = tempUri.substring(0, tempUri.indexOf(":"))__        }_        if (ObjectHelper.isEmpty(protocol)) {_            protocol = "queue"__        } else if (protocol != null && (protocol.equals("queue") || protocol.equals("topic"))) {_            tempUri = tempUri.substring(protocol.length() + 1)__        } else {_            throw new Exception("Unsupported Protocol: " + protocol)__        }__        String path = tempUri__        uri = endpointName + "://" + protocol + ":" + path__        return uri__    };helper,method,used,to,detect,the,type,of,endpoint,and,add,the,queue,protocol,if,it,is,a,default,endpoint,uri,param,uri,the,value,passed,into,our,call,to,create,an,endpoint,return,string,throws,exception;private,static,string,normalize,uri,string,uri,throws,exception,string,temp,uri,uri,string,endpoint,name,temp,uri,substring,0,temp,uri,index,of,temp,uri,temp,uri,substring,endpoint,name,length,if,temp,uri,starts,with,temp,uri,temp,uri,substring,3,string,protocol,null,if,temp,uri,index,of,0,protocol,temp,uri,substring,0,temp,uri,index,of,if,object,helper,is,empty,protocol,protocol,queue,else,if,protocol,null,protocol,equals,queue,protocol,equals,topic,temp,uri,temp,uri,substring,protocol,length,1,else,throw,new,exception,unsupported,protocol,protocol,string,path,temp,uri,uri,endpoint,name,protocol,path,return,uri
SjmsComponent -> public void setConnectionMaxWait(long connectionMaxWait);1488894155;The max wait time in millis to block and wait on free connection when the pool is exhausted_when using the default {@link org.apache.camel.component.sjms.jms.ConnectionFactoryResource}.;public void setConnectionMaxWait(long connectionMaxWait) {_        this.connectionMaxWait = connectionMaxWait__    };the,max,wait,time,in,millis,to,block,and,wait,on,free,connection,when,the,pool,is,exhausted,when,using,the,default,link,org,apache,camel,component,sjms,jms,connection,factory,resource;public,void,set,connection,max,wait,long,connection,max,wait,this,connection,max,wait,connection,max,wait
SjmsComponent -> public void setConnectionMaxWait(long connectionMaxWait);1489430295;The max wait time in millis to block and wait on free connection when the pool is exhausted_when using the default {@link org.apache.camel.component.sjms.jms.ConnectionFactoryResource}.;public void setConnectionMaxWait(long connectionMaxWait) {_        this.connectionMaxWait = connectionMaxWait__    };the,max,wait,time,in,millis,to,block,and,wait,on,free,connection,when,the,pool,is,exhausted,when,using,the,default,link,org,apache,camel,component,sjms,jms,connection,factory,resource;public,void,set,connection,max,wait,long,connection,max,wait,this,connection,max,wait,connection,max,wait
SjmsComponent -> public void setConnectionMaxWait(long connectionMaxWait);1490689115;The max wait time in millis to block and wait on free connection when the pool is exhausted_when using the default {@link org.apache.camel.component.sjms.jms.ConnectionFactoryResource}.;public void setConnectionMaxWait(long connectionMaxWait) {_        this.connectionMaxWait = connectionMaxWait__    };the,max,wait,time,in,millis,to,block,and,wait,on,free,connection,when,the,pool,is,exhausted,when,using,the,default,link,org,apache,camel,component,sjms,jms,connection,factory,resource;public,void,set,connection,max,wait,long,connection,max,wait,this,connection,max,wait,connection,max,wait
SjmsComponent -> public void setConnectionMaxWait(long connectionMaxWait);1540108158;The max wait time in millis to block and wait on free connection when the pool is exhausted_when using the default {@link org.apache.camel.component.sjms.jms.ConnectionFactoryResource}.;public void setConnectionMaxWait(long connectionMaxWait) {_        this.connectionMaxWait = connectionMaxWait__    };the,max,wait,time,in,millis,to,block,and,wait,on,free,connection,when,the,pool,is,exhausted,when,using,the,default,link,org,apache,camel,component,sjms,jms,connection,factory,resource;public,void,set,connection,max,wait,long,connection,max,wait,this,connection,max,wait,connection,max,wait
SjmsComponent -> public void setConnectionMaxWait(long connectionMaxWait);1547241305;The max wait time in millis to block and wait on free connection when the pool is exhausted_when using the default {@link org.apache.camel.component.sjms.jms.ConnectionFactoryResource}.;public void setConnectionMaxWait(long connectionMaxWait) {_        this.connectionMaxWait = connectionMaxWait__    };the,max,wait,time,in,millis,to,block,and,wait,on,free,connection,when,the,pool,is,exhausted,when,using,the,default,link,org,apache,camel,component,sjms,jms,connection,factory,resource;public,void,set,connection,max,wait,long,connection,max,wait,this,connection,max,wait,connection,max,wait
SjmsComponent -> public void setConnectionMaxWait(long connectionMaxWait);1548332772;The max wait time in millis to block and wait on free connection when the pool is exhausted_when using the default {@link org.apache.camel.component.sjms.jms.ConnectionFactoryResource}.;public void setConnectionMaxWait(long connectionMaxWait) {_        this.connectionMaxWait = connectionMaxWait__    };the,max,wait,time,in,millis,to,block,and,wait,on,free,connection,when,the,pool,is,exhausted,when,using,the,default,link,org,apache,camel,component,sjms,jms,connection,factory,resource;public,void,set,connection,max,wait,long,connection,max,wait,this,connection,max,wait,connection,max,wait
SjmsComponent -> public void setJmsKeyFormatStrategy(JmsKeyFormatStrategy jmsKeyFormatStrategy);1441617001;Pluggable strategy for encoding and decoding JMS keys so they can be compliant with the JMS specification._Camel provides one implementation out of the box: default._The default strategy will safely marshal dots and hyphens (. and -)._Can be used for JMS brokers which do not care whether JMS header keys contain illegal characters._You can provide your own implementation of the org.apache.camel.component.jms.JmsKeyFormatStrategy_and refer to it using the # notation.;public void setJmsKeyFormatStrategy(JmsKeyFormatStrategy jmsKeyFormatStrategy) {_        this.jmsKeyFormatStrategy = jmsKeyFormatStrategy__    };pluggable,strategy,for,encoding,and,decoding,jms,keys,so,they,can,be,compliant,with,the,jms,specification,camel,provides,one,implementation,out,of,the,box,default,the,default,strategy,will,safely,marshal,dots,and,hyphens,and,can,be,used,for,jms,brokers,which,do,not,care,whether,jms,header,keys,contain,illegal,characters,you,can,provide,your,own,implementation,of,the,org,apache,camel,component,jms,jms,key,format,strategy,and,refer,to,it,using,the,notation;public,void,set,jms,key,format,strategy,jms,key,format,strategy,jms,key,format,strategy,this,jms,key,format,strategy,jms,key,format,strategy
SjmsComponent -> public void setJmsKeyFormatStrategy(JmsKeyFormatStrategy jmsKeyFormatStrategy);1441617486;Pluggable strategy for encoding and decoding JMS keys so they can be compliant with the JMS specification._Camel provides one implementation out of the box: default._The default strategy will safely marshal dots and hyphens (. and -)._Can be used for JMS brokers which do not care whether JMS header keys contain illegal characters._You can provide your own implementation of the org.apache.camel.component.jms.JmsKeyFormatStrategy_and refer to it using the # notation.;public void setJmsKeyFormatStrategy(JmsKeyFormatStrategy jmsKeyFormatStrategy) {_        this.jmsKeyFormatStrategy = jmsKeyFormatStrategy__    };pluggable,strategy,for,encoding,and,decoding,jms,keys,so,they,can,be,compliant,with,the,jms,specification,camel,provides,one,implementation,out,of,the,box,default,the,default,strategy,will,safely,marshal,dots,and,hyphens,and,can,be,used,for,jms,brokers,which,do,not,care,whether,jms,header,keys,contain,illegal,characters,you,can,provide,your,own,implementation,of,the,org,apache,camel,component,jms,jms,key,format,strategy,and,refer,to,it,using,the,notation;public,void,set,jms,key,format,strategy,jms,key,format,strategy,jms,key,format,strategy,this,jms,key,format,strategy,jms,key,format,strategy
SjmsComponent -> public void setJmsKeyFormatStrategy(JmsKeyFormatStrategy jmsKeyFormatStrategy);1461839859;Pluggable strategy for encoding and decoding JMS keys so they can be compliant with the JMS specification._Camel provides one implementation out of the box: default._The default strategy will safely marshal dots and hyphens (. and -)._Can be used for JMS brokers which do not care whether JMS header keys contain illegal characters._You can provide your own implementation of the org.apache.camel.component.jms.JmsKeyFormatStrategy_and refer to it using the # notation.;public void setJmsKeyFormatStrategy(JmsKeyFormatStrategy jmsKeyFormatStrategy) {_        this.jmsKeyFormatStrategy = jmsKeyFormatStrategy__    };pluggable,strategy,for,encoding,and,decoding,jms,keys,so,they,can,be,compliant,with,the,jms,specification,camel,provides,one,implementation,out,of,the,box,default,the,default,strategy,will,safely,marshal,dots,and,hyphens,and,can,be,used,for,jms,brokers,which,do,not,care,whether,jms,header,keys,contain,illegal,characters,you,can,provide,your,own,implementation,of,the,org,apache,camel,component,jms,jms,key,format,strategy,and,refer,to,it,using,the,notation;public,void,set,jms,key,format,strategy,jms,key,format,strategy,jms,key,format,strategy,this,jms,key,format,strategy,jms,key,format,strategy
SjmsComponent -> public void setJmsKeyFormatStrategy(JmsKeyFormatStrategy jmsKeyFormatStrategy);1463119124;Pluggable strategy for encoding and decoding JMS keys so they can be compliant with the JMS specification._Camel provides one implementation out of the box: default._The default strategy will safely marshal dots and hyphens (. and -)._Can be used for JMS brokers which do not care whether JMS header keys contain illegal characters._You can provide your own implementation of the org.apache.camel.component.jms.JmsKeyFormatStrategy_and refer to it using the # notation.;public void setJmsKeyFormatStrategy(JmsKeyFormatStrategy jmsKeyFormatStrategy) {_        this.jmsKeyFormatStrategy = jmsKeyFormatStrategy__    };pluggable,strategy,for,encoding,and,decoding,jms,keys,so,they,can,be,compliant,with,the,jms,specification,camel,provides,one,implementation,out,of,the,box,default,the,default,strategy,will,safely,marshal,dots,and,hyphens,and,can,be,used,for,jms,brokers,which,do,not,care,whether,jms,header,keys,contain,illegal,characters,you,can,provide,your,own,implementation,of,the,org,apache,camel,component,jms,jms,key,format,strategy,and,refer,to,it,using,the,notation;public,void,set,jms,key,format,strategy,jms,key,format,strategy,jms,key,format,strategy,this,jms,key,format,strategy,jms,key,format,strategy
SjmsComponent -> public void setJmsKeyFormatStrategy(JmsKeyFormatStrategy jmsKeyFormatStrategy);1482332324;Pluggable strategy for encoding and decoding JMS keys so they can be compliant with the JMS specification._Camel provides one implementation out of the box: default._The default strategy will safely marshal dots and hyphens (. and -)._Can be used for JMS brokers which do not care whether JMS header keys contain illegal characters._You can provide your own implementation of the org.apache.camel.component.jms.JmsKeyFormatStrategy_and refer to it using the # notation.;public void setJmsKeyFormatStrategy(JmsKeyFormatStrategy jmsKeyFormatStrategy) {_        this.jmsKeyFormatStrategy = jmsKeyFormatStrategy__    };pluggable,strategy,for,encoding,and,decoding,jms,keys,so,they,can,be,compliant,with,the,jms,specification,camel,provides,one,implementation,out,of,the,box,default,the,default,strategy,will,safely,marshal,dots,and,hyphens,and,can,be,used,for,jms,brokers,which,do,not,care,whether,jms,header,keys,contain,illegal,characters,you,can,provide,your,own,implementation,of,the,org,apache,camel,component,jms,jms,key,format,strategy,and,refer,to,it,using,the,notation;public,void,set,jms,key,format,strategy,jms,key,format,strategy,jms,key,format,strategy,this,jms,key,format,strategy,jms,key,format,strategy
SjmsComponent -> public void setJmsKeyFormatStrategy(JmsKeyFormatStrategy jmsKeyFormatStrategy);1482346687;Pluggable strategy for encoding and decoding JMS keys so they can be compliant with the JMS specification._Camel provides one implementation out of the box: default._The default strategy will safely marshal dots and hyphens (. and -)._Can be used for JMS brokers which do not care whether JMS header keys contain illegal characters._You can provide your own implementation of the org.apache.camel.component.jms.JmsKeyFormatStrategy_and refer to it using the # notation.;public void setJmsKeyFormatStrategy(JmsKeyFormatStrategy jmsKeyFormatStrategy) {_        this.jmsKeyFormatStrategy = jmsKeyFormatStrategy__    };pluggable,strategy,for,encoding,and,decoding,jms,keys,so,they,can,be,compliant,with,the,jms,specification,camel,provides,one,implementation,out,of,the,box,default,the,default,strategy,will,safely,marshal,dots,and,hyphens,and,can,be,used,for,jms,brokers,which,do,not,care,whether,jms,header,keys,contain,illegal,characters,you,can,provide,your,own,implementation,of,the,org,apache,camel,component,jms,jms,key,format,strategy,and,refer,to,it,using,the,notation;public,void,set,jms,key,format,strategy,jms,key,format,strategy,jms,key,format,strategy,this,jms,key,format,strategy,jms,key,format,strategy
SjmsComponent -> public void setJmsKeyFormatStrategy(JmsKeyFormatStrategy jmsKeyFormatStrategy);1488894155;Pluggable strategy for encoding and decoding JMS keys so they can be compliant with the JMS specification._Camel provides one implementation out of the box: default._The default strategy will safely marshal dots and hyphens (. and -)._Can be used for JMS brokers which do not care whether JMS header keys contain illegal characters._You can provide your own implementation of the org.apache.camel.component.jms.JmsKeyFormatStrategy_and refer to it using the # notation.;public void setJmsKeyFormatStrategy(JmsKeyFormatStrategy jmsKeyFormatStrategy) {_        this.jmsKeyFormatStrategy = jmsKeyFormatStrategy__    };pluggable,strategy,for,encoding,and,decoding,jms,keys,so,they,can,be,compliant,with,the,jms,specification,camel,provides,one,implementation,out,of,the,box,default,the,default,strategy,will,safely,marshal,dots,and,hyphens,and,can,be,used,for,jms,brokers,which,do,not,care,whether,jms,header,keys,contain,illegal,characters,you,can,provide,your,own,implementation,of,the,org,apache,camel,component,jms,jms,key,format,strategy,and,refer,to,it,using,the,notation;public,void,set,jms,key,format,strategy,jms,key,format,strategy,jms,key,format,strategy,this,jms,key,format,strategy,jms,key,format,strategy
SjmsComponent -> public void setJmsKeyFormatStrategy(JmsKeyFormatStrategy jmsKeyFormatStrategy);1489430295;Pluggable strategy for encoding and decoding JMS keys so they can be compliant with the JMS specification._Camel provides one implementation out of the box: default._The default strategy will safely marshal dots and hyphens (. and -)._Can be used for JMS brokers which do not care whether JMS header keys contain illegal characters._You can provide your own implementation of the org.apache.camel.component.jms.JmsKeyFormatStrategy_and refer to it using the # notation.;public void setJmsKeyFormatStrategy(JmsKeyFormatStrategy jmsKeyFormatStrategy) {_        this.jmsKeyFormatStrategy = jmsKeyFormatStrategy__    };pluggable,strategy,for,encoding,and,decoding,jms,keys,so,they,can,be,compliant,with,the,jms,specification,camel,provides,one,implementation,out,of,the,box,default,the,default,strategy,will,safely,marshal,dots,and,hyphens,and,can,be,used,for,jms,brokers,which,do,not,care,whether,jms,header,keys,contain,illegal,characters,you,can,provide,your,own,implementation,of,the,org,apache,camel,component,jms,jms,key,format,strategy,and,refer,to,it,using,the,notation;public,void,set,jms,key,format,strategy,jms,key,format,strategy,jms,key,format,strategy,this,jms,key,format,strategy,jms,key,format,strategy
SjmsComponent -> public void setJmsKeyFormatStrategy(JmsKeyFormatStrategy jmsKeyFormatStrategy);1490689115;Pluggable strategy for encoding and decoding JMS keys so they can be compliant with the JMS specification._Camel provides one implementation out of the box: default._The default strategy will safely marshal dots and hyphens (. and -)._Can be used for JMS brokers which do not care whether JMS header keys contain illegal characters._You can provide your own implementation of the org.apache.camel.component.jms.JmsKeyFormatStrategy_and refer to it using the # notation.;public void setJmsKeyFormatStrategy(JmsKeyFormatStrategy jmsKeyFormatStrategy) {_        this.jmsKeyFormatStrategy = jmsKeyFormatStrategy__    };pluggable,strategy,for,encoding,and,decoding,jms,keys,so,they,can,be,compliant,with,the,jms,specification,camel,provides,one,implementation,out,of,the,box,default,the,default,strategy,will,safely,marshal,dots,and,hyphens,and,can,be,used,for,jms,brokers,which,do,not,care,whether,jms,header,keys,contain,illegal,characters,you,can,provide,your,own,implementation,of,the,org,apache,camel,component,jms,jms,key,format,strategy,and,refer,to,it,using,the,notation;public,void,set,jms,key,format,strategy,jms,key,format,strategy,jms,key,format,strategy,this,jms,key,format,strategy,jms,key,format,strategy
SjmsComponent -> public void setJmsKeyFormatStrategy(JmsKeyFormatStrategy jmsKeyFormatStrategy);1540108158;Pluggable strategy for encoding and decoding JMS keys so they can be compliant with the JMS specification._Camel provides one implementation out of the box: default._The default strategy will safely marshal dots and hyphens (. and -)._Can be used for JMS brokers which do not care whether JMS header keys contain illegal characters._You can provide your own implementation of the org.apache.camel.component.jms.JmsKeyFormatStrategy_and refer to it using the # notation.;public void setJmsKeyFormatStrategy(JmsKeyFormatStrategy jmsKeyFormatStrategy) {_        this.jmsKeyFormatStrategy = jmsKeyFormatStrategy__    };pluggable,strategy,for,encoding,and,decoding,jms,keys,so,they,can,be,compliant,with,the,jms,specification,camel,provides,one,implementation,out,of,the,box,default,the,default,strategy,will,safely,marshal,dots,and,hyphens,and,can,be,used,for,jms,brokers,which,do,not,care,whether,jms,header,keys,contain,illegal,characters,you,can,provide,your,own,implementation,of,the,org,apache,camel,component,jms,jms,key,format,strategy,and,refer,to,it,using,the,notation;public,void,set,jms,key,format,strategy,jms,key,format,strategy,jms,key,format,strategy,this,jms,key,format,strategy,jms,key,format,strategy
SjmsComponent -> public void setJmsKeyFormatStrategy(JmsKeyFormatStrategy jmsKeyFormatStrategy);1547241305;Pluggable strategy for encoding and decoding JMS keys so they can be compliant with the JMS specification._Camel provides one implementation out of the box: default._The default strategy will safely marshal dots and hyphens (. and -)._Can be used for JMS brokers which do not care whether JMS header keys contain illegal characters._You can provide your own implementation of the org.apache.camel.component.jms.JmsKeyFormatStrategy_and refer to it using the # notation.;public void setJmsKeyFormatStrategy(JmsKeyFormatStrategy jmsKeyFormatStrategy) {_        this.jmsKeyFormatStrategy = jmsKeyFormatStrategy__    };pluggable,strategy,for,encoding,and,decoding,jms,keys,so,they,can,be,compliant,with,the,jms,specification,camel,provides,one,implementation,out,of,the,box,default,the,default,strategy,will,safely,marshal,dots,and,hyphens,and,can,be,used,for,jms,brokers,which,do,not,care,whether,jms,header,keys,contain,illegal,characters,you,can,provide,your,own,implementation,of,the,org,apache,camel,component,jms,jms,key,format,strategy,and,refer,to,it,using,the,notation;public,void,set,jms,key,format,strategy,jms,key,format,strategy,jms,key,format,strategy,this,jms,key,format,strategy,jms,key,format,strategy
SjmsComponent -> public void setJmsKeyFormatStrategy(JmsKeyFormatStrategy jmsKeyFormatStrategy);1548332772;Pluggable strategy for encoding and decoding JMS keys so they can be compliant with the JMS specification._Camel provides one implementation out of the box: default._The default strategy will safely marshal dots and hyphens (. and -)._Can be used for JMS brokers which do not care whether JMS header keys contain illegal characters._You can provide your own implementation of the org.apache.camel.component.jms.JmsKeyFormatStrategy_and refer to it using the # notation.;public void setJmsKeyFormatStrategy(JmsKeyFormatStrategy jmsKeyFormatStrategy) {_        this.jmsKeyFormatStrategy = jmsKeyFormatStrategy__    };pluggable,strategy,for,encoding,and,decoding,jms,keys,so,they,can,be,compliant,with,the,jms,specification,camel,provides,one,implementation,out,of,the,box,default,the,default,strategy,will,safely,marshal,dots,and,hyphens,and,can,be,used,for,jms,brokers,which,do,not,care,whether,jms,header,keys,contain,illegal,characters,you,can,provide,your,own,implementation,of,the,org,apache,camel,component,jms,jms,key,format,strategy,and,refer,to,it,using,the,notation;public,void,set,jms,key,format,strategy,jms,key,format,strategy,jms,key,format,strategy,this,jms,key,format,strategy,jms,key,format,strategy
SjmsComponent -> public void setConnectionClientId(String connectionClientId);1488894155;The client ID to use when creating {@link javax.jms.Connection} when using the default {@link org.apache.camel.component.sjms.jms.ConnectionFactoryResource}.;public void setConnectionClientId(String connectionClientId) {_        this.connectionClientId = connectionClientId__    };the,client,id,to,use,when,creating,link,javax,jms,connection,when,using,the,default,link,org,apache,camel,component,sjms,jms,connection,factory,resource;public,void,set,connection,client,id,string,connection,client,id,this,connection,client,id,connection,client,id
SjmsComponent -> public void setConnectionClientId(String connectionClientId);1489430295;The client ID to use when creating {@link javax.jms.Connection} when using the default {@link org.apache.camel.component.sjms.jms.ConnectionFactoryResource}.;public void setConnectionClientId(String connectionClientId) {_        this.connectionClientId = connectionClientId__    };the,client,id,to,use,when,creating,link,javax,jms,connection,when,using,the,default,link,org,apache,camel,component,sjms,jms,connection,factory,resource;public,void,set,connection,client,id,string,connection,client,id,this,connection,client,id,connection,client,id
SjmsComponent -> public void setConnectionClientId(String connectionClientId);1490689115;The client ID to use when creating {@link javax.jms.Connection} when using the default {@link org.apache.camel.component.sjms.jms.ConnectionFactoryResource}.;public void setConnectionClientId(String connectionClientId) {_        this.connectionClientId = connectionClientId__    };the,client,id,to,use,when,creating,link,javax,jms,connection,when,using,the,default,link,org,apache,camel,component,sjms,jms,connection,factory,resource;public,void,set,connection,client,id,string,connection,client,id,this,connection,client,id,connection,client,id
SjmsComponent -> public void setConnectionClientId(String connectionClientId);1540108158;The client ID to use when creating {@link javax.jms.Connection} when using the default {@link org.apache.camel.component.sjms.jms.ConnectionFactoryResource}.;public void setConnectionClientId(String connectionClientId) {_        this.connectionClientId = connectionClientId__    };the,client,id,to,use,when,creating,link,javax,jms,connection,when,using,the,default,link,org,apache,camel,component,sjms,jms,connection,factory,resource;public,void,set,connection,client,id,string,connection,client,id,this,connection,client,id,connection,client,id
SjmsComponent -> public void setConnectionClientId(String connectionClientId);1547241305;The client ID to use when creating {@link javax.jms.Connection} when using the default {@link org.apache.camel.component.sjms.jms.ConnectionFactoryResource}.;public void setConnectionClientId(String connectionClientId) {_        this.connectionClientId = connectionClientId__    };the,client,id,to,use,when,creating,link,javax,jms,connection,when,using,the,default,link,org,apache,camel,component,sjms,jms,connection,factory,resource;public,void,set,connection,client,id,string,connection,client,id,this,connection,client,id,connection,client,id
SjmsComponent -> public void setConnectionClientId(String connectionClientId);1548332772;The client ID to use when creating {@link javax.jms.Connection} when using the default {@link org.apache.camel.component.sjms.jms.ConnectionFactoryResource}.;public void setConnectionClientId(String connectionClientId) {_        this.connectionClientId = connectionClientId__    };the,client,id,to,use,when,creating,link,javax,jms,connection,when,using,the,default,link,org,apache,camel,component,sjms,jms,connection,factory,resource;public,void,set,connection,client,id,string,connection,client,id,this,connection,client,id,connection,client,id
SjmsComponent -> private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception;1352796608;Helper method used to verify that when there is a namedReplyTo value we_are using the InOut MEP. If namedReplyTo is defined and the MEP is InOnly_the endpoint won't be expecting a reply so throw an error to alert the_user.__@param parameters {@link Endpoint} parameters_@throws Exception throws a {@link CamelException} when MEP equals InOnly_and namedReplyTo is defined.;private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception {_        boolean namedReplyToSet = parameters.containsKey("namedReplyTo")__        boolean mepSet = parameters.containsKey("exchangePattern")__        if (namedReplyToSet && mepSet) {_            if (!parameters.get("exchangePattern").equals(ExchangePattern.InOut.toString())) {_                String namedReplyTo = (String)parameters.get("namedReplyTo")__                ExchangePattern mep = ExchangePattern.valueOf((String)parameters.get("exchangePattern"))__                throw new CamelException("Setting parameter namedReplyTo=" + namedReplyTo + " requires a MEP of type InOut. Parameter exchangePattern is set to " + mep)__            }_        }_    };helper,method,used,to,verify,that,when,there,is,a,named,reply,to,value,we,are,using,the,in,out,mep,if,named,reply,to,is,defined,and,the,mep,is,in,only,the,endpoint,won,t,be,expecting,a,reply,so,throw,an,error,to,alert,the,user,param,parameters,link,endpoint,parameters,throws,exception,throws,a,link,camel,exception,when,mep,equals,in,only,and,named,reply,to,is,defined;private,static,void,validate,mep,and,reply,to,map,string,object,parameters,throws,exception,boolean,named,reply,to,set,parameters,contains,key,named,reply,to,boolean,mep,set,parameters,contains,key,exchange,pattern,if,named,reply,to,set,mep,set,if,parameters,get,exchange,pattern,equals,exchange,pattern,in,out,to,string,string,named,reply,to,string,parameters,get,named,reply,to,exchange,pattern,mep,exchange,pattern,value,of,string,parameters,get,exchange,pattern,throw,new,camel,exception,setting,parameter,named,reply,to,named,reply,to,requires,a,mep,of,type,in,out,parameter,exchange,pattern,is,set,to,mep
SjmsComponent -> private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception;1366704138;Helper method used to verify that when there is a namedReplyTo value we_are using the InOut MEP. If namedReplyTo is defined and the MEP is InOnly_the endpoint won't be expecting a reply so throw an error to alert the_user.__@param parameters {@link Endpoint} parameters_@throws Exception throws a {@link CamelException} when MEP equals InOnly_and namedReplyTo is defined.;private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception {_        boolean namedReplyToSet = parameters.containsKey("namedReplyTo")__        boolean mepSet = parameters.containsKey("exchangePattern")__        if (namedReplyToSet && mepSet) {_            if (!parameters.get("exchangePattern").equals(ExchangePattern.InOut.toString())) {_                String namedReplyTo = (String)parameters.get("namedReplyTo")__                ExchangePattern mep = ExchangePattern.valueOf((String)parameters.get("exchangePattern"))__                throw new CamelException("Setting parameter namedReplyTo=" + namedReplyTo + " requires a MEP of type InOut. Parameter exchangePattern is set to " + mep)__            }_        }_    };helper,method,used,to,verify,that,when,there,is,a,named,reply,to,value,we,are,using,the,in,out,mep,if,named,reply,to,is,defined,and,the,mep,is,in,only,the,endpoint,won,t,be,expecting,a,reply,so,throw,an,error,to,alert,the,user,param,parameters,link,endpoint,parameters,throws,exception,throws,a,link,camel,exception,when,mep,equals,in,only,and,named,reply,to,is,defined;private,static,void,validate,mep,and,reply,to,map,string,object,parameters,throws,exception,boolean,named,reply,to,set,parameters,contains,key,named,reply,to,boolean,mep,set,parameters,contains,key,exchange,pattern,if,named,reply,to,set,mep,set,if,parameters,get,exchange,pattern,equals,exchange,pattern,in,out,to,string,string,named,reply,to,string,parameters,get,named,reply,to,exchange,pattern,mep,exchange,pattern,value,of,string,parameters,get,exchange,pattern,throw,new,camel,exception,setting,parameter,named,reply,to,named,reply,to,requires,a,mep,of,type,in,out,parameter,exchange,pattern,is,set,to,mep
SjmsComponent -> private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception;1373129971;Helper method used to verify that when there is a namedReplyTo value we_are using the InOut MEP. If namedReplyTo is defined and the MEP is InOnly_the endpoint won't be expecting a reply so throw an error to alert the_user.__@param parameters {@link Endpoint} parameters_@throws Exception throws a {@link CamelException} when MEP equals InOnly_and namedReplyTo is defined.;private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception {_        boolean namedReplyToSet = parameters.containsKey("namedReplyTo")__        boolean mepSet = parameters.containsKey("exchangePattern")__        if (namedReplyToSet && mepSet) {_            if (!parameters.get("exchangePattern").equals(ExchangePattern.InOut.toString())) {_                String namedReplyTo = (String)parameters.get("namedReplyTo")__                ExchangePattern mep = ExchangePattern.valueOf((String)parameters.get("exchangePattern"))__                throw new CamelException("Setting parameter namedReplyTo=" + namedReplyTo + " requires a MEP of type InOut. Parameter exchangePattern is set to " + mep)__            }_        }_    };helper,method,used,to,verify,that,when,there,is,a,named,reply,to,value,we,are,using,the,in,out,mep,if,named,reply,to,is,defined,and,the,mep,is,in,only,the,endpoint,won,t,be,expecting,a,reply,so,throw,an,error,to,alert,the,user,param,parameters,link,endpoint,parameters,throws,exception,throws,a,link,camel,exception,when,mep,equals,in,only,and,named,reply,to,is,defined;private,static,void,validate,mep,and,reply,to,map,string,object,parameters,throws,exception,boolean,named,reply,to,set,parameters,contains,key,named,reply,to,boolean,mep,set,parameters,contains,key,exchange,pattern,if,named,reply,to,set,mep,set,if,parameters,get,exchange,pattern,equals,exchange,pattern,in,out,to,string,string,named,reply,to,string,parameters,get,named,reply,to,exchange,pattern,mep,exchange,pattern,value,of,string,parameters,get,exchange,pattern,throw,new,camel,exception,setting,parameter,named,reply,to,named,reply,to,requires,a,mep,of,type,in,out,parameter,exchange,pattern,is,set,to,mep
SjmsComponent -> private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception;1376549254;Helper method used to verify that when there is a namedReplyTo value we_are using the InOut MEP. If namedReplyTo is defined and the MEP is InOnly_the endpoint won't be expecting a reply so throw an error to alert the_user.__@param parameters {@link Endpoint} parameters_@throws Exception throws a {@link CamelException} when MEP equals InOnly_and namedReplyTo is defined.;private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception {_        boolean namedReplyToSet = parameters.containsKey("namedReplyTo")__        boolean mepSet = parameters.containsKey("exchangePattern")__        if (namedReplyToSet && mepSet) {_            if (!parameters.get("exchangePattern").equals(ExchangePattern.InOut.toString())) {_                String namedReplyTo = (String)parameters.get("namedReplyTo")__                ExchangePattern mep = ExchangePattern.valueOf((String)parameters.get("exchangePattern"))__                throw new CamelException("Setting parameter namedReplyTo=" + namedReplyTo + " requires a MEP of type InOut. Parameter exchangePattern is set to " + mep)__            }_        }_    };helper,method,used,to,verify,that,when,there,is,a,named,reply,to,value,we,are,using,the,in,out,mep,if,named,reply,to,is,defined,and,the,mep,is,in,only,the,endpoint,won,t,be,expecting,a,reply,so,throw,an,error,to,alert,the,user,param,parameters,link,endpoint,parameters,throws,exception,throws,a,link,camel,exception,when,mep,equals,in,only,and,named,reply,to,is,defined;private,static,void,validate,mep,and,reply,to,map,string,object,parameters,throws,exception,boolean,named,reply,to,set,parameters,contains,key,named,reply,to,boolean,mep,set,parameters,contains,key,exchange,pattern,if,named,reply,to,set,mep,set,if,parameters,get,exchange,pattern,equals,exchange,pattern,in,out,to,string,string,named,reply,to,string,parameters,get,named,reply,to,exchange,pattern,mep,exchange,pattern,value,of,string,parameters,get,exchange,pattern,throw,new,camel,exception,setting,parameter,named,reply,to,named,reply,to,requires,a,mep,of,type,in,out,parameter,exchange,pattern,is,set,to,mep
SjmsComponent -> private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception;1379362077;Helper method used to verify that when there is a namedReplyTo value we_are using the InOut MEP. If namedReplyTo is defined and the MEP is InOnly_the endpoint won't be expecting a reply so throw an error to alert the_user.__@param parameters {@link Endpoint} parameters_@throws Exception throws a {@link CamelException} when MEP equals InOnly_and namedReplyTo is defined.;private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception {_        boolean namedReplyToSet = parameters.containsKey("namedReplyTo")__        boolean mepSet = parameters.containsKey("exchangePattern")__        if (namedReplyToSet && mepSet) {_            if (!parameters.get("exchangePattern").equals(ExchangePattern.InOut.toString())) {_                String namedReplyTo = (String)parameters.get("namedReplyTo")__                ExchangePattern mep = ExchangePattern.valueOf((String)parameters.get("exchangePattern"))__                throw new CamelException("Setting parameter namedReplyTo=" + namedReplyTo + " requires a MEP of type InOut. Parameter exchangePattern is set to " + mep)__            }_        }_    };helper,method,used,to,verify,that,when,there,is,a,named,reply,to,value,we,are,using,the,in,out,mep,if,named,reply,to,is,defined,and,the,mep,is,in,only,the,endpoint,won,t,be,expecting,a,reply,so,throw,an,error,to,alert,the,user,param,parameters,link,endpoint,parameters,throws,exception,throws,a,link,camel,exception,when,mep,equals,in,only,and,named,reply,to,is,defined;private,static,void,validate,mep,and,reply,to,map,string,object,parameters,throws,exception,boolean,named,reply,to,set,parameters,contains,key,named,reply,to,boolean,mep,set,parameters,contains,key,exchange,pattern,if,named,reply,to,set,mep,set,if,parameters,get,exchange,pattern,equals,exchange,pattern,in,out,to,string,string,named,reply,to,string,parameters,get,named,reply,to,exchange,pattern,mep,exchange,pattern,value,of,string,parameters,get,exchange,pattern,throw,new,camel,exception,setting,parameter,named,reply,to,named,reply,to,requires,a,mep,of,type,in,out,parameter,exchange,pattern,is,set,to,mep
SjmsComponent -> private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception;1415211488;Helper method used to verify that when there is a namedReplyTo value we_are using the InOut MEP. If namedReplyTo is defined and the MEP is InOnly_the endpoint won't be expecting a reply so throw an error to alert the_user.__@param parameters {@link Endpoint} parameters_@throws Exception throws a {@link CamelException} when MEP equals InOnly_and namedReplyTo is defined.;private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception {_        boolean namedReplyToSet = parameters.containsKey("namedReplyTo")__        boolean mepSet = parameters.containsKey("exchangePattern")__        if (namedReplyToSet && mepSet) {_            if (!parameters.get("exchangePattern").equals(ExchangePattern.InOut.toString())) {_                String namedReplyTo = (String) parameters.get("namedReplyTo")__                ExchangePattern mep = ExchangePattern.valueOf((String) parameters.get("exchangePattern"))__                throw new CamelException("Setting parameter namedReplyTo=" + namedReplyTo + " requires a MEP of type InOut. Parameter exchangePattern is set to " + mep)__            }_        }_    };helper,method,used,to,verify,that,when,there,is,a,named,reply,to,value,we,are,using,the,in,out,mep,if,named,reply,to,is,defined,and,the,mep,is,in,only,the,endpoint,won,t,be,expecting,a,reply,so,throw,an,error,to,alert,the,user,param,parameters,link,endpoint,parameters,throws,exception,throws,a,link,camel,exception,when,mep,equals,in,only,and,named,reply,to,is,defined;private,static,void,validate,mep,and,reply,to,map,string,object,parameters,throws,exception,boolean,named,reply,to,set,parameters,contains,key,named,reply,to,boolean,mep,set,parameters,contains,key,exchange,pattern,if,named,reply,to,set,mep,set,if,parameters,get,exchange,pattern,equals,exchange,pattern,in,out,to,string,string,named,reply,to,string,parameters,get,named,reply,to,exchange,pattern,mep,exchange,pattern,value,of,string,parameters,get,exchange,pattern,throw,new,camel,exception,setting,parameter,named,reply,to,named,reply,to,requires,a,mep,of,type,in,out,parameter,exchange,pattern,is,set,to,mep
SjmsComponent -> private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception;1415327622;Helper method used to verify that when there is a namedReplyTo value we_are using the InOut MEP. If namedReplyTo is defined and the MEP is InOnly_the endpoint won't be expecting a reply so throw an error to alert the_user.__@param parameters {@link Endpoint} parameters_@throws Exception throws a {@link CamelException} when MEP equals InOnly_and namedReplyTo is defined.;private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception {_        boolean namedReplyToSet = parameters.containsKey("namedReplyTo")__        boolean mepSet = parameters.containsKey("exchangePattern")__        if (namedReplyToSet && mepSet) {_            if (!parameters.get("exchangePattern").equals(ExchangePattern.InOut.toString())) {_                String namedReplyTo = (String) parameters.get("namedReplyTo")__                ExchangePattern mep = ExchangePattern.valueOf((String) parameters.get("exchangePattern"))__                throw new CamelException("Setting parameter namedReplyTo=" + namedReplyTo + " requires a MEP of type InOut. Parameter exchangePattern is set to " + mep)__            }_        }_    };helper,method,used,to,verify,that,when,there,is,a,named,reply,to,value,we,are,using,the,in,out,mep,if,named,reply,to,is,defined,and,the,mep,is,in,only,the,endpoint,won,t,be,expecting,a,reply,so,throw,an,error,to,alert,the,user,param,parameters,link,endpoint,parameters,throws,exception,throws,a,link,camel,exception,when,mep,equals,in,only,and,named,reply,to,is,defined;private,static,void,validate,mep,and,reply,to,map,string,object,parameters,throws,exception,boolean,named,reply,to,set,parameters,contains,key,named,reply,to,boolean,mep,set,parameters,contains,key,exchange,pattern,if,named,reply,to,set,mep,set,if,parameters,get,exchange,pattern,equals,exchange,pattern,in,out,to,string,string,named,reply,to,string,parameters,get,named,reply,to,exchange,pattern,mep,exchange,pattern,value,of,string,parameters,get,exchange,pattern,throw,new,camel,exception,setting,parameter,named,reply,to,named,reply,to,requires,a,mep,of,type,in,out,parameter,exchange,pattern,is,set,to,mep
SjmsComponent -> private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception;1431945084;Helper method used to verify that when there is a namedReplyTo value we_are using the InOut MEP. If namedReplyTo is defined and the MEP is InOnly_the endpoint won't be expecting a reply so throw an error to alert the_user.__@param parameters {@link Endpoint} parameters_@throws Exception throws a {@link CamelException} when MEP equals InOnly_and namedReplyTo is defined.;private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception {_        boolean namedReplyToSet = parameters.containsKey("namedReplyTo")__        boolean mepSet = parameters.containsKey("exchangePattern")__        if (namedReplyToSet && mepSet) {_            if (!parameters.get("exchangePattern").equals(ExchangePattern.InOut.toString())) {_                String namedReplyTo = (String) parameters.get("namedReplyTo")__                ExchangePattern mep = ExchangePattern.valueOf((String) parameters.get("exchangePattern"))__                throw new CamelException("Setting parameter namedReplyTo=" + namedReplyTo + " requires a MEP of type InOut. Parameter exchangePattern is set to " + mep)__            }_        }_    };helper,method,used,to,verify,that,when,there,is,a,named,reply,to,value,we,are,using,the,in,out,mep,if,named,reply,to,is,defined,and,the,mep,is,in,only,the,endpoint,won,t,be,expecting,a,reply,so,throw,an,error,to,alert,the,user,param,parameters,link,endpoint,parameters,throws,exception,throws,a,link,camel,exception,when,mep,equals,in,only,and,named,reply,to,is,defined;private,static,void,validate,mep,and,reply,to,map,string,object,parameters,throws,exception,boolean,named,reply,to,set,parameters,contains,key,named,reply,to,boolean,mep,set,parameters,contains,key,exchange,pattern,if,named,reply,to,set,mep,set,if,parameters,get,exchange,pattern,equals,exchange,pattern,in,out,to,string,string,named,reply,to,string,parameters,get,named,reply,to,exchange,pattern,mep,exchange,pattern,value,of,string,parameters,get,exchange,pattern,throw,new,camel,exception,setting,parameter,named,reply,to,named,reply,to,requires,a,mep,of,type,in,out,parameter,exchange,pattern,is,set,to,mep
SjmsComponent -> private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception;1437137782;Helper method used to verify that when there is a namedReplyTo value we_are using the InOut MEP. If namedReplyTo is defined and the MEP is InOnly_the endpoint won't be expecting a reply so throw an error to alert the_user.__@param parameters {@link Endpoint} parameters_@throws Exception throws a {@link CamelException} when MEP equals InOnly_and namedReplyTo is defined.;private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception {_        boolean namedReplyToSet = parameters.containsKey("namedReplyTo")__        boolean mepSet = parameters.containsKey("exchangePattern")__        if (namedReplyToSet && mepSet) {_            if (!parameters.get("exchangePattern").equals(ExchangePattern.InOut.toString())) {_                String namedReplyTo = (String) parameters.get("namedReplyTo")__                ExchangePattern mep = ExchangePattern.valueOf((String) parameters.get("exchangePattern"))__                throw new CamelException("Setting parameter namedReplyTo=" + namedReplyTo + " requires a MEP of type InOut. Parameter exchangePattern is set to " + mep)__            }_        }_    };helper,method,used,to,verify,that,when,there,is,a,named,reply,to,value,we,are,using,the,in,out,mep,if,named,reply,to,is,defined,and,the,mep,is,in,only,the,endpoint,won,t,be,expecting,a,reply,so,throw,an,error,to,alert,the,user,param,parameters,link,endpoint,parameters,throws,exception,throws,a,link,camel,exception,when,mep,equals,in,only,and,named,reply,to,is,defined;private,static,void,validate,mep,and,reply,to,map,string,object,parameters,throws,exception,boolean,named,reply,to,set,parameters,contains,key,named,reply,to,boolean,mep,set,parameters,contains,key,exchange,pattern,if,named,reply,to,set,mep,set,if,parameters,get,exchange,pattern,equals,exchange,pattern,in,out,to,string,string,named,reply,to,string,parameters,get,named,reply,to,exchange,pattern,mep,exchange,pattern,value,of,string,parameters,get,exchange,pattern,throw,new,camel,exception,setting,parameter,named,reply,to,named,reply,to,requires,a,mep,of,type,in,out,parameter,exchange,pattern,is,set,to,mep
SjmsComponent -> private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception;1438158851;Helper method used to verify that when there is a namedReplyTo value we_are using the InOut MEP. If namedReplyTo is defined and the MEP is InOnly_the endpoint won't be expecting a reply so throw an error to alert the_user.__@param parameters {@link Endpoint} parameters_@throws Exception throws a {@link CamelException} when MEP equals InOnly_and namedReplyTo is defined.;private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception {_        boolean namedReplyToSet = parameters.containsKey("namedReplyTo")__        boolean mepSet = parameters.containsKey("exchangePattern")__        if (namedReplyToSet && mepSet) {_            if (!parameters.get("exchangePattern").equals(ExchangePattern.InOut.toString())) {_                String namedReplyTo = (String) parameters.get("namedReplyTo")__                ExchangePattern mep = ExchangePattern.valueOf((String) parameters.get("exchangePattern"))__                throw new CamelException("Setting parameter namedReplyTo=" + namedReplyTo + " requires a MEP of type InOut. Parameter exchangePattern is set to " + mep)__            }_        }_    };helper,method,used,to,verify,that,when,there,is,a,named,reply,to,value,we,are,using,the,in,out,mep,if,named,reply,to,is,defined,and,the,mep,is,in,only,the,endpoint,won,t,be,expecting,a,reply,so,throw,an,error,to,alert,the,user,param,parameters,link,endpoint,parameters,throws,exception,throws,a,link,camel,exception,when,mep,equals,in,only,and,named,reply,to,is,defined;private,static,void,validate,mep,and,reply,to,map,string,object,parameters,throws,exception,boolean,named,reply,to,set,parameters,contains,key,named,reply,to,boolean,mep,set,parameters,contains,key,exchange,pattern,if,named,reply,to,set,mep,set,if,parameters,get,exchange,pattern,equals,exchange,pattern,in,out,to,string,string,named,reply,to,string,parameters,get,named,reply,to,exchange,pattern,mep,exchange,pattern,value,of,string,parameters,get,exchange,pattern,throw,new,camel,exception,setting,parameter,named,reply,to,named,reply,to,requires,a,mep,of,type,in,out,parameter,exchange,pattern,is,set,to,mep
SjmsComponent -> private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception;1441617001;Helper method used to verify that when there is a namedReplyTo value we_are using the InOut MEP. If namedReplyTo is defined and the MEP is InOnly_the endpoint won't be expecting a reply so throw an error to alert the_user.__@param parameters {@link Endpoint} parameters_@throws Exception throws a {@link CamelException} when MEP equals InOnly_and namedReplyTo is defined.;private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception {_        boolean namedReplyToSet = parameters.containsKey("namedReplyTo")__        boolean mepSet = parameters.containsKey("exchangePattern")__        if (namedReplyToSet && mepSet) {_            if (!parameters.get("exchangePattern").equals(ExchangePattern.InOut.toString())) {_                String namedReplyTo = (String) parameters.get("namedReplyTo")__                ExchangePattern mep = ExchangePattern.valueOf((String) parameters.get("exchangePattern"))__                throw new CamelException("Setting parameter namedReplyTo=" + namedReplyTo + " requires a MEP of type InOut. Parameter exchangePattern is set to " + mep)__            }_        }_    };helper,method,used,to,verify,that,when,there,is,a,named,reply,to,value,we,are,using,the,in,out,mep,if,named,reply,to,is,defined,and,the,mep,is,in,only,the,endpoint,won,t,be,expecting,a,reply,so,throw,an,error,to,alert,the,user,param,parameters,link,endpoint,parameters,throws,exception,throws,a,link,camel,exception,when,mep,equals,in,only,and,named,reply,to,is,defined;private,static,void,validate,mep,and,reply,to,map,string,object,parameters,throws,exception,boolean,named,reply,to,set,parameters,contains,key,named,reply,to,boolean,mep,set,parameters,contains,key,exchange,pattern,if,named,reply,to,set,mep,set,if,parameters,get,exchange,pattern,equals,exchange,pattern,in,out,to,string,string,named,reply,to,string,parameters,get,named,reply,to,exchange,pattern,mep,exchange,pattern,value,of,string,parameters,get,exchange,pattern,throw,new,camel,exception,setting,parameter,named,reply,to,named,reply,to,requires,a,mep,of,type,in,out,parameter,exchange,pattern,is,set,to,mep
SjmsComponent -> private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception;1441617486;Helper method used to verify that when there is a namedReplyTo value we_are using the InOut MEP. If namedReplyTo is defined and the MEP is InOnly_the endpoint won't be expecting a reply so throw an error to alert the_user.__@param parameters {@link Endpoint} parameters_@throws Exception throws a {@link CamelException} when MEP equals InOnly_and namedReplyTo is defined.;private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception {_        boolean namedReplyToSet = parameters.containsKey("namedReplyTo")__        boolean mepSet = parameters.containsKey("exchangePattern")__        if (namedReplyToSet && mepSet) {_            if (!parameters.get("exchangePattern").equals(ExchangePattern.InOut.toString())) {_                String namedReplyTo = (String) parameters.get("namedReplyTo")__                ExchangePattern mep = ExchangePattern.valueOf((String) parameters.get("exchangePattern"))__                throw new CamelException("Setting parameter namedReplyTo=" + namedReplyTo + " requires a MEP of type InOut. Parameter exchangePattern is set to " + mep)__            }_        }_    };helper,method,used,to,verify,that,when,there,is,a,named,reply,to,value,we,are,using,the,in,out,mep,if,named,reply,to,is,defined,and,the,mep,is,in,only,the,endpoint,won,t,be,expecting,a,reply,so,throw,an,error,to,alert,the,user,param,parameters,link,endpoint,parameters,throws,exception,throws,a,link,camel,exception,when,mep,equals,in,only,and,named,reply,to,is,defined;private,static,void,validate,mep,and,reply,to,map,string,object,parameters,throws,exception,boolean,named,reply,to,set,parameters,contains,key,named,reply,to,boolean,mep,set,parameters,contains,key,exchange,pattern,if,named,reply,to,set,mep,set,if,parameters,get,exchange,pattern,equals,exchange,pattern,in,out,to,string,string,named,reply,to,string,parameters,get,named,reply,to,exchange,pattern,mep,exchange,pattern,value,of,string,parameters,get,exchange,pattern,throw,new,camel,exception,setting,parameter,named,reply,to,named,reply,to,requires,a,mep,of,type,in,out,parameter,exchange,pattern,is,set,to,mep
SjmsComponent -> private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception;1461839859;Helper method used to verify that when there is a namedReplyTo value we_are using the InOut MEP. If namedReplyTo is defined and the MEP is InOnly_the endpoint won't be expecting a reply so throw an error to alert the_user.__@param parameters {@link Endpoint} parameters_@throws Exception throws a {@link CamelException} when MEP equals InOnly_and namedReplyTo is defined.;private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception {_        boolean namedReplyToSet = parameters.containsKey("namedReplyTo")__        boolean mepSet = parameters.containsKey("exchangePattern")__        if (namedReplyToSet && mepSet) {_            if (!parameters.get("exchangePattern").equals(ExchangePattern.InOut.toString())) {_                String namedReplyTo = (String) parameters.get("namedReplyTo")__                ExchangePattern mep = ExchangePattern.valueOf((String) parameters.get("exchangePattern"))__                throw new CamelException("Setting parameter namedReplyTo=" + namedReplyTo + " requires a MEP of type InOut. Parameter exchangePattern is set to " + mep)__            }_        }_    };helper,method,used,to,verify,that,when,there,is,a,named,reply,to,value,we,are,using,the,in,out,mep,if,named,reply,to,is,defined,and,the,mep,is,in,only,the,endpoint,won,t,be,expecting,a,reply,so,throw,an,error,to,alert,the,user,param,parameters,link,endpoint,parameters,throws,exception,throws,a,link,camel,exception,when,mep,equals,in,only,and,named,reply,to,is,defined;private,static,void,validate,mep,and,reply,to,map,string,object,parameters,throws,exception,boolean,named,reply,to,set,parameters,contains,key,named,reply,to,boolean,mep,set,parameters,contains,key,exchange,pattern,if,named,reply,to,set,mep,set,if,parameters,get,exchange,pattern,equals,exchange,pattern,in,out,to,string,string,named,reply,to,string,parameters,get,named,reply,to,exchange,pattern,mep,exchange,pattern,value,of,string,parameters,get,exchange,pattern,throw,new,camel,exception,setting,parameter,named,reply,to,named,reply,to,requires,a,mep,of,type,in,out,parameter,exchange,pattern,is,set,to,mep
SjmsComponent -> private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception;1463119124;Helper method used to verify that when there is a namedReplyTo value we_are using the InOut MEP. If namedReplyTo is defined and the MEP is InOnly_the endpoint won't be expecting a reply so throw an error to alert the_user.__@param parameters {@link Endpoint} parameters_@throws Exception throws a {@link CamelException} when MEP equals InOnly_and namedReplyTo is defined.;private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception {_        boolean namedReplyToSet = parameters.containsKey("namedReplyTo")__        boolean mepSet = parameters.containsKey("exchangePattern")__        if (namedReplyToSet && mepSet) {_            if (!parameters.get("exchangePattern").equals(ExchangePattern.InOut.toString())) {_                String namedReplyTo = (String) parameters.get("namedReplyTo")__                ExchangePattern mep = ExchangePattern.valueOf((String) parameters.get("exchangePattern"))__                throw new CamelException("Setting parameter namedReplyTo=" + namedReplyTo + " requires a MEP of type InOut. Parameter exchangePattern is set to " + mep)__            }_        }_    };helper,method,used,to,verify,that,when,there,is,a,named,reply,to,value,we,are,using,the,in,out,mep,if,named,reply,to,is,defined,and,the,mep,is,in,only,the,endpoint,won,t,be,expecting,a,reply,so,throw,an,error,to,alert,the,user,param,parameters,link,endpoint,parameters,throws,exception,throws,a,link,camel,exception,when,mep,equals,in,only,and,named,reply,to,is,defined;private,static,void,validate,mep,and,reply,to,map,string,object,parameters,throws,exception,boolean,named,reply,to,set,parameters,contains,key,named,reply,to,boolean,mep,set,parameters,contains,key,exchange,pattern,if,named,reply,to,set,mep,set,if,parameters,get,exchange,pattern,equals,exchange,pattern,in,out,to,string,string,named,reply,to,string,parameters,get,named,reply,to,exchange,pattern,mep,exchange,pattern,value,of,string,parameters,get,exchange,pattern,throw,new,camel,exception,setting,parameter,named,reply,to,named,reply,to,requires,a,mep,of,type,in,out,parameter,exchange,pattern,is,set,to,mep
SjmsComponent -> private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception;1482332324;Helper method used to verify that when there is a namedReplyTo value we_are using the InOut MEP. If namedReplyTo is defined and the MEP is InOnly_the endpoint won't be expecting a reply so throw an error to alert the_user.__@param parameters {@link Endpoint} parameters_@throws Exception throws a {@link CamelException} when MEP equals InOnly_and namedReplyTo is defined.;private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception {_        boolean namedReplyToSet = parameters.containsKey("namedReplyTo")__        boolean mepSet = parameters.containsKey("exchangePattern")__        if (namedReplyToSet && mepSet) {_            if (!parameters.get("exchangePattern").equals(ExchangePattern.InOut.toString())) {_                String namedReplyTo = (String) parameters.get("namedReplyTo")__                ExchangePattern mep = ExchangePattern.valueOf((String) parameters.get("exchangePattern"))__                throw new CamelException("Setting parameter namedReplyTo=" + namedReplyTo + " requires a MEP of type InOut. Parameter exchangePattern is set to " + mep)__            }_        }_    };helper,method,used,to,verify,that,when,there,is,a,named,reply,to,value,we,are,using,the,in,out,mep,if,named,reply,to,is,defined,and,the,mep,is,in,only,the,endpoint,won,t,be,expecting,a,reply,so,throw,an,error,to,alert,the,user,param,parameters,link,endpoint,parameters,throws,exception,throws,a,link,camel,exception,when,mep,equals,in,only,and,named,reply,to,is,defined;private,static,void,validate,mep,and,reply,to,map,string,object,parameters,throws,exception,boolean,named,reply,to,set,parameters,contains,key,named,reply,to,boolean,mep,set,parameters,contains,key,exchange,pattern,if,named,reply,to,set,mep,set,if,parameters,get,exchange,pattern,equals,exchange,pattern,in,out,to,string,string,named,reply,to,string,parameters,get,named,reply,to,exchange,pattern,mep,exchange,pattern,value,of,string,parameters,get,exchange,pattern,throw,new,camel,exception,setting,parameter,named,reply,to,named,reply,to,requires,a,mep,of,type,in,out,parameter,exchange,pattern,is,set,to,mep
SjmsComponent -> private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception;1482346687;Helper method used to verify that when there is a namedReplyTo value we_are using the InOut MEP. If namedReplyTo is defined and the MEP is InOnly_the endpoint won't be expecting a reply so throw an error to alert the_user.__@param parameters {@link Endpoint} parameters_@throws Exception throws a {@link CamelException} when MEP equals InOnly_and namedReplyTo is defined.;private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception {_        boolean namedReplyToSet = parameters.containsKey("namedReplyTo")__        boolean mepSet = parameters.containsKey("exchangePattern")__        if (namedReplyToSet && mepSet) {_            if (!parameters.get("exchangePattern").equals(ExchangePattern.InOut.toString())) {_                String namedReplyTo = (String) parameters.get("namedReplyTo")__                ExchangePattern mep = ExchangePattern.valueOf((String) parameters.get("exchangePattern"))__                throw new CamelException("Setting parameter namedReplyTo=" + namedReplyTo + " requires a MEP of type InOut. Parameter exchangePattern is set to " + mep)__            }_        }_    };helper,method,used,to,verify,that,when,there,is,a,named,reply,to,value,we,are,using,the,in,out,mep,if,named,reply,to,is,defined,and,the,mep,is,in,only,the,endpoint,won,t,be,expecting,a,reply,so,throw,an,error,to,alert,the,user,param,parameters,link,endpoint,parameters,throws,exception,throws,a,link,camel,exception,when,mep,equals,in,only,and,named,reply,to,is,defined;private,static,void,validate,mep,and,reply,to,map,string,object,parameters,throws,exception,boolean,named,reply,to,set,parameters,contains,key,named,reply,to,boolean,mep,set,parameters,contains,key,exchange,pattern,if,named,reply,to,set,mep,set,if,parameters,get,exchange,pattern,equals,exchange,pattern,in,out,to,string,string,named,reply,to,string,parameters,get,named,reply,to,exchange,pattern,mep,exchange,pattern,value,of,string,parameters,get,exchange,pattern,throw,new,camel,exception,setting,parameter,named,reply,to,named,reply,to,requires,a,mep,of,type,in,out,parameter,exchange,pattern,is,set,to,mep
SjmsComponent -> private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception;1488894155;Helper method used to verify that when there is a namedReplyTo value we_are using the InOut MEP. If namedReplyTo is defined and the MEP is InOnly_the endpoint won't be expecting a reply so throw an error to alert the_user.__@param parameters {@link Endpoint} parameters_@throws Exception throws a {@link CamelException} when MEP equals InOnly_and namedReplyTo is defined.;private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception {_        boolean namedReplyToSet = parameters.containsKey("namedReplyTo")__        boolean mepSet = parameters.containsKey("exchangePattern")__        if (namedReplyToSet && mepSet) {_            if (!parameters.get("exchangePattern").equals(ExchangePattern.InOut.toString())) {_                String namedReplyTo = (String) parameters.get("namedReplyTo")__                ExchangePattern mep = ExchangePattern.valueOf((String) parameters.get("exchangePattern"))__                throw new CamelException("Setting parameter namedReplyTo=" + namedReplyTo + " requires a MEP of type InOut. Parameter exchangePattern is set to " + mep)__            }_        }_    };helper,method,used,to,verify,that,when,there,is,a,named,reply,to,value,we,are,using,the,in,out,mep,if,named,reply,to,is,defined,and,the,mep,is,in,only,the,endpoint,won,t,be,expecting,a,reply,so,throw,an,error,to,alert,the,user,param,parameters,link,endpoint,parameters,throws,exception,throws,a,link,camel,exception,when,mep,equals,in,only,and,named,reply,to,is,defined;private,static,void,validate,mep,and,reply,to,map,string,object,parameters,throws,exception,boolean,named,reply,to,set,parameters,contains,key,named,reply,to,boolean,mep,set,parameters,contains,key,exchange,pattern,if,named,reply,to,set,mep,set,if,parameters,get,exchange,pattern,equals,exchange,pattern,in,out,to,string,string,named,reply,to,string,parameters,get,named,reply,to,exchange,pattern,mep,exchange,pattern,value,of,string,parameters,get,exchange,pattern,throw,new,camel,exception,setting,parameter,named,reply,to,named,reply,to,requires,a,mep,of,type,in,out,parameter,exchange,pattern,is,set,to,mep
SjmsComponent -> private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception;1489430295;Helper method used to verify that when there is a namedReplyTo value we_are using the InOut MEP. If namedReplyTo is defined and the MEP is InOnly_the endpoint won't be expecting a reply so throw an error to alert the_user.__@param parameters {@link Endpoint} parameters_@throws Exception throws a {@link CamelException} when MEP equals InOnly_and namedReplyTo is defined.;private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception {_        boolean namedReplyToSet = parameters.containsKey("namedReplyTo")__        boolean mepSet = parameters.containsKey("exchangePattern")__        if (namedReplyToSet && mepSet) {_            if (!parameters.get("exchangePattern").equals(ExchangePattern.InOut.toString())) {_                String namedReplyTo = (String) parameters.get("namedReplyTo")__                ExchangePattern mep = ExchangePattern.valueOf((String) parameters.get("exchangePattern"))__                throw new CamelException("Setting parameter namedReplyTo=" + namedReplyTo + " requires a MEP of type InOut. Parameter exchangePattern is set to " + mep)__            }_        }_    };helper,method,used,to,verify,that,when,there,is,a,named,reply,to,value,we,are,using,the,in,out,mep,if,named,reply,to,is,defined,and,the,mep,is,in,only,the,endpoint,won,t,be,expecting,a,reply,so,throw,an,error,to,alert,the,user,param,parameters,link,endpoint,parameters,throws,exception,throws,a,link,camel,exception,when,mep,equals,in,only,and,named,reply,to,is,defined;private,static,void,validate,mep,and,reply,to,map,string,object,parameters,throws,exception,boolean,named,reply,to,set,parameters,contains,key,named,reply,to,boolean,mep,set,parameters,contains,key,exchange,pattern,if,named,reply,to,set,mep,set,if,parameters,get,exchange,pattern,equals,exchange,pattern,in,out,to,string,string,named,reply,to,string,parameters,get,named,reply,to,exchange,pattern,mep,exchange,pattern,value,of,string,parameters,get,exchange,pattern,throw,new,camel,exception,setting,parameter,named,reply,to,named,reply,to,requires,a,mep,of,type,in,out,parameter,exchange,pattern,is,set,to,mep
SjmsComponent -> private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception;1490689115;Helper method used to verify that when there is a namedReplyTo value we_are using the InOut MEP. If namedReplyTo is defined and the MEP is InOnly_the endpoint won't be expecting a reply so throw an error to alert the_user.__@param parameters {@link Endpoint} parameters_@throws Exception throws a {@link CamelException} when MEP equals InOnly_and namedReplyTo is defined.;private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception {_        boolean namedReplyToSet = parameters.containsKey("namedReplyTo")__        boolean mepSet = parameters.containsKey("exchangePattern")__        if (namedReplyToSet && mepSet) {_            if (!parameters.get("exchangePattern").equals(ExchangePattern.InOut.toString())) {_                String namedReplyTo = (String) parameters.get("namedReplyTo")__                ExchangePattern mep = ExchangePattern.valueOf((String) parameters.get("exchangePattern"))__                throw new CamelException("Setting parameter namedReplyTo=" + namedReplyTo + " requires a MEP of type InOut. Parameter exchangePattern is set to " + mep)__            }_        }_    };helper,method,used,to,verify,that,when,there,is,a,named,reply,to,value,we,are,using,the,in,out,mep,if,named,reply,to,is,defined,and,the,mep,is,in,only,the,endpoint,won,t,be,expecting,a,reply,so,throw,an,error,to,alert,the,user,param,parameters,link,endpoint,parameters,throws,exception,throws,a,link,camel,exception,when,mep,equals,in,only,and,named,reply,to,is,defined;private,static,void,validate,mep,and,reply,to,map,string,object,parameters,throws,exception,boolean,named,reply,to,set,parameters,contains,key,named,reply,to,boolean,mep,set,parameters,contains,key,exchange,pattern,if,named,reply,to,set,mep,set,if,parameters,get,exchange,pattern,equals,exchange,pattern,in,out,to,string,string,named,reply,to,string,parameters,get,named,reply,to,exchange,pattern,mep,exchange,pattern,value,of,string,parameters,get,exchange,pattern,throw,new,camel,exception,setting,parameter,named,reply,to,named,reply,to,requires,a,mep,of,type,in,out,parameter,exchange,pattern,is,set,to,mep
SjmsComponent -> private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception;1540108158;Helper method used to verify that when there is a namedReplyTo value we_are using the InOut MEP. If namedReplyTo is defined and the MEP is InOnly_the endpoint won't be expecting a reply so throw an error to alert the_user.__@param parameters {@link Endpoint} parameters_@throws Exception throws a {@link CamelException} when MEP equals InOnly_and namedReplyTo is defined.;private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception {_        boolean namedReplyToSet = parameters.containsKey("namedReplyTo")__        boolean mepSet = parameters.containsKey("exchangePattern")__        if (namedReplyToSet && mepSet) {_            if (!parameters.get("exchangePattern").equals(ExchangePattern.InOut.toString())) {_                String namedReplyTo = (String) parameters.get("namedReplyTo")__                ExchangePattern mep = ExchangePattern.valueOf((String) parameters.get("exchangePattern"))__                throw new CamelException("Setting parameter namedReplyTo=" + namedReplyTo + " requires a MEP of type InOut. Parameter exchangePattern is set to " + mep)__            }_        }_    };helper,method,used,to,verify,that,when,there,is,a,named,reply,to,value,we,are,using,the,in,out,mep,if,named,reply,to,is,defined,and,the,mep,is,in,only,the,endpoint,won,t,be,expecting,a,reply,so,throw,an,error,to,alert,the,user,param,parameters,link,endpoint,parameters,throws,exception,throws,a,link,camel,exception,when,mep,equals,in,only,and,named,reply,to,is,defined;private,static,void,validate,mep,and,reply,to,map,string,object,parameters,throws,exception,boolean,named,reply,to,set,parameters,contains,key,named,reply,to,boolean,mep,set,parameters,contains,key,exchange,pattern,if,named,reply,to,set,mep,set,if,parameters,get,exchange,pattern,equals,exchange,pattern,in,out,to,string,string,named,reply,to,string,parameters,get,named,reply,to,exchange,pattern,mep,exchange,pattern,value,of,string,parameters,get,exchange,pattern,throw,new,camel,exception,setting,parameter,named,reply,to,named,reply,to,requires,a,mep,of,type,in,out,parameter,exchange,pattern,is,set,to,mep
SjmsComponent -> private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception;1547241305;Helper method used to verify that when there is a namedReplyTo value we_are using the InOut MEP. If namedReplyTo is defined and the MEP is InOnly_the endpoint won't be expecting a reply so throw an error to alert the_user.__@param parameters {@link Endpoint} parameters_@throws Exception throws a {@link CamelException} when MEP equals InOnly_and namedReplyTo is defined.;private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception {_        boolean namedReplyToSet = parameters.containsKey("namedReplyTo")__        boolean mepSet = parameters.containsKey("exchangePattern")__        if (namedReplyToSet && mepSet) {_            if (!parameters.get("exchangePattern").equals(ExchangePattern.InOut.toString())) {_                String namedReplyTo = (String) parameters.get("namedReplyTo")__                ExchangePattern mep = ExchangePattern.valueOf((String) parameters.get("exchangePattern"))__                throw new CamelException("Setting parameter namedReplyTo=" + namedReplyTo + " requires a MEP of type InOut. Parameter exchangePattern is set to " + mep)__            }_        }_    };helper,method,used,to,verify,that,when,there,is,a,named,reply,to,value,we,are,using,the,in,out,mep,if,named,reply,to,is,defined,and,the,mep,is,in,only,the,endpoint,won,t,be,expecting,a,reply,so,throw,an,error,to,alert,the,user,param,parameters,link,endpoint,parameters,throws,exception,throws,a,link,camel,exception,when,mep,equals,in,only,and,named,reply,to,is,defined;private,static,void,validate,mep,and,reply,to,map,string,object,parameters,throws,exception,boolean,named,reply,to,set,parameters,contains,key,named,reply,to,boolean,mep,set,parameters,contains,key,exchange,pattern,if,named,reply,to,set,mep,set,if,parameters,get,exchange,pattern,equals,exchange,pattern,in,out,to,string,string,named,reply,to,string,parameters,get,named,reply,to,exchange,pattern,mep,exchange,pattern,value,of,string,parameters,get,exchange,pattern,throw,new,camel,exception,setting,parameter,named,reply,to,named,reply,to,requires,a,mep,of,type,in,out,parameter,exchange,pattern,is,set,to,mep
SjmsComponent -> private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception;1548332772;Helper method used to verify that when there is a namedReplyTo value we_are using the InOut MEP. If namedReplyTo is defined and the MEP is InOnly_the endpoint won't be expecting a reply so throw an error to alert the_user.__@param parameters {@link Endpoint} parameters_@throws Exception throws a {@link CamelException} when MEP equals InOnly_and namedReplyTo is defined.;private static void validateMepAndReplyTo(Map<String, Object> parameters) throws Exception {_        boolean namedReplyToSet = parameters.containsKey("namedReplyTo")__        boolean mepSet = parameters.containsKey("exchangePattern")__        if (namedReplyToSet && mepSet) {_            if (!parameters.get("exchangePattern").equals(ExchangePattern.InOut.toString())) {_                String namedReplyTo = (String) parameters.get("namedReplyTo")__                ExchangePattern mep = ExchangePattern.valueOf((String) parameters.get("exchangePattern"))__                throw new CamelException("Setting parameter namedReplyTo=" + namedReplyTo + " requires a MEP of type InOut. Parameter exchangePattern is set to " + mep)__            }_        }_    };helper,method,used,to,verify,that,when,there,is,a,named,reply,to,value,we,are,using,the,in,out,mep,if,named,reply,to,is,defined,and,the,mep,is,in,only,the,endpoint,won,t,be,expecting,a,reply,so,throw,an,error,to,alert,the,user,param,parameters,link,endpoint,parameters,throws,exception,throws,a,link,camel,exception,when,mep,equals,in,only,and,named,reply,to,is,defined;private,static,void,validate,mep,and,reply,to,map,string,object,parameters,throws,exception,boolean,named,reply,to,set,parameters,contains,key,named,reply,to,boolean,mep,set,parameters,contains,key,exchange,pattern,if,named,reply,to,set,mep,set,if,parameters,get,exchange,pattern,equals,exchange,pattern,in,out,to,string,string,named,reply,to,string,parameters,get,named,reply,to,exchange,pattern,mep,exchange,pattern,value,of,string,parameters,get,exchange,pattern,throw,new,camel,exception,setting,parameter,named,reply,to,named,reply,to,requires,a,mep,of,type,in,out,parameter,exchange,pattern,is,set,to,mep
SjmsComponent -> public void setDestinationCreationStrategy(DestinationCreationStrategy destinationCreationStrategy);1431945084;To use a custom DestinationCreationStrategy.;public void setDestinationCreationStrategy(DestinationCreationStrategy destinationCreationStrategy) {_        this.destinationCreationStrategy = destinationCreationStrategy__    };to,use,a,custom,destination,creation,strategy;public,void,set,destination,creation,strategy,destination,creation,strategy,destination,creation,strategy,this,destination,creation,strategy,destination,creation,strategy
SjmsComponent -> public void setDestinationCreationStrategy(DestinationCreationStrategy destinationCreationStrategy);1437137782;To use a custom DestinationCreationStrategy.;public void setDestinationCreationStrategy(DestinationCreationStrategy destinationCreationStrategy) {_        this.destinationCreationStrategy = destinationCreationStrategy__    };to,use,a,custom,destination,creation,strategy;public,void,set,destination,creation,strategy,destination,creation,strategy,destination,creation,strategy,this,destination,creation,strategy,destination,creation,strategy
SjmsComponent -> public void setDestinationCreationStrategy(DestinationCreationStrategy destinationCreationStrategy);1438158851;To use a custom DestinationCreationStrategy.;public void setDestinationCreationStrategy(DestinationCreationStrategy destinationCreationStrategy) {_        this.destinationCreationStrategy = destinationCreationStrategy__    };to,use,a,custom,destination,creation,strategy;public,void,set,destination,creation,strategy,destination,creation,strategy,destination,creation,strategy,this,destination,creation,strategy,destination,creation,strategy
SjmsComponent -> public void setDestinationCreationStrategy(DestinationCreationStrategy destinationCreationStrategy);1441617001;To use a custom DestinationCreationStrategy.;public void setDestinationCreationStrategy(DestinationCreationStrategy destinationCreationStrategy) {_        this.destinationCreationStrategy = destinationCreationStrategy__    };to,use,a,custom,destination,creation,strategy;public,void,set,destination,creation,strategy,destination,creation,strategy,destination,creation,strategy,this,destination,creation,strategy,destination,creation,strategy
SjmsComponent -> public void setDestinationCreationStrategy(DestinationCreationStrategy destinationCreationStrategy);1441617486;To use a custom DestinationCreationStrategy.;public void setDestinationCreationStrategy(DestinationCreationStrategy destinationCreationStrategy) {_        this.destinationCreationStrategy = destinationCreationStrategy__    };to,use,a,custom,destination,creation,strategy;public,void,set,destination,creation,strategy,destination,creation,strategy,destination,creation,strategy,this,destination,creation,strategy,destination,creation,strategy
SjmsComponent -> public void setDestinationCreationStrategy(DestinationCreationStrategy destinationCreationStrategy);1461839859;To use a custom DestinationCreationStrategy.;public void setDestinationCreationStrategy(DestinationCreationStrategy destinationCreationStrategy) {_        this.destinationCreationStrategy = destinationCreationStrategy__    };to,use,a,custom,destination,creation,strategy;public,void,set,destination,creation,strategy,destination,creation,strategy,destination,creation,strategy,this,destination,creation,strategy,destination,creation,strategy
SjmsComponent -> public void setDestinationCreationStrategy(DestinationCreationStrategy destinationCreationStrategy);1463119124;To use a custom DestinationCreationStrategy.;public void setDestinationCreationStrategy(DestinationCreationStrategy destinationCreationStrategy) {_        this.destinationCreationStrategy = destinationCreationStrategy__    };to,use,a,custom,destination,creation,strategy;public,void,set,destination,creation,strategy,destination,creation,strategy,destination,creation,strategy,this,destination,creation,strategy,destination,creation,strategy
SjmsComponent -> public void setDestinationCreationStrategy(DestinationCreationStrategy destinationCreationStrategy);1482332324;To use a custom DestinationCreationStrategy.;public void setDestinationCreationStrategy(DestinationCreationStrategy destinationCreationStrategy) {_        this.destinationCreationStrategy = destinationCreationStrategy__    };to,use,a,custom,destination,creation,strategy;public,void,set,destination,creation,strategy,destination,creation,strategy,destination,creation,strategy,this,destination,creation,strategy,destination,creation,strategy
SjmsComponent -> public void setDestinationCreationStrategy(DestinationCreationStrategy destinationCreationStrategy);1482346687;To use a custom DestinationCreationStrategy.;public void setDestinationCreationStrategy(DestinationCreationStrategy destinationCreationStrategy) {_        this.destinationCreationStrategy = destinationCreationStrategy__    };to,use,a,custom,destination,creation,strategy;public,void,set,destination,creation,strategy,destination,creation,strategy,destination,creation,strategy,this,destination,creation,strategy,destination,creation,strategy
SjmsComponent -> public void setDestinationCreationStrategy(DestinationCreationStrategy destinationCreationStrategy);1488894155;To use a custom DestinationCreationStrategy.;public void setDestinationCreationStrategy(DestinationCreationStrategy destinationCreationStrategy) {_        this.destinationCreationStrategy = destinationCreationStrategy__    };to,use,a,custom,destination,creation,strategy;public,void,set,destination,creation,strategy,destination,creation,strategy,destination,creation,strategy,this,destination,creation,strategy,destination,creation,strategy
SjmsComponent -> public void setDestinationCreationStrategy(DestinationCreationStrategy destinationCreationStrategy);1489430295;To use a custom DestinationCreationStrategy.;public void setDestinationCreationStrategy(DestinationCreationStrategy destinationCreationStrategy) {_        this.destinationCreationStrategy = destinationCreationStrategy__    };to,use,a,custom,destination,creation,strategy;public,void,set,destination,creation,strategy,destination,creation,strategy,destination,creation,strategy,this,destination,creation,strategy,destination,creation,strategy
SjmsComponent -> public void setDestinationCreationStrategy(DestinationCreationStrategy destinationCreationStrategy);1490689115;To use a custom DestinationCreationStrategy.;public void setDestinationCreationStrategy(DestinationCreationStrategy destinationCreationStrategy) {_        this.destinationCreationStrategy = destinationCreationStrategy__    };to,use,a,custom,destination,creation,strategy;public,void,set,destination,creation,strategy,destination,creation,strategy,destination,creation,strategy,this,destination,creation,strategy,destination,creation,strategy
SjmsComponent -> public void setDestinationCreationStrategy(DestinationCreationStrategy destinationCreationStrategy);1540108158;To use a custom DestinationCreationStrategy.;public void setDestinationCreationStrategy(DestinationCreationStrategy destinationCreationStrategy) {_        this.destinationCreationStrategy = destinationCreationStrategy__    };to,use,a,custom,destination,creation,strategy;public,void,set,destination,creation,strategy,destination,creation,strategy,destination,creation,strategy,this,destination,creation,strategy,destination,creation,strategy
SjmsComponent -> public void setDestinationCreationStrategy(DestinationCreationStrategy destinationCreationStrategy);1547241305;To use a custom DestinationCreationStrategy.;public void setDestinationCreationStrategy(DestinationCreationStrategy destinationCreationStrategy) {_        this.destinationCreationStrategy = destinationCreationStrategy__    };to,use,a,custom,destination,creation,strategy;public,void,set,destination,creation,strategy,destination,creation,strategy,destination,creation,strategy,this,destination,creation,strategy,destination,creation,strategy
SjmsComponent -> public void setDestinationCreationStrategy(DestinationCreationStrategy destinationCreationStrategy);1548332772;To use a custom DestinationCreationStrategy.;public void setDestinationCreationStrategy(DestinationCreationStrategy destinationCreationStrategy) {_        this.destinationCreationStrategy = destinationCreationStrategy__    };to,use,a,custom,destination,creation,strategy;public,void,set,destination,creation,strategy,destination,creation,strategy,destination,creation,strategy,this,destination,creation,strategy,destination,creation,strategy
SjmsComponent -> public void setKeyFormatStrategy(KeyFormatStrategy keyFormatStrategy);1431945084;Pluggable strategy for encoding and decoding JMS keys so they can be compliant with the JMS specification._Camel provides one implementation out of the box: default._The default strategy will safely marshal dots and hyphens (. and -)._Can be used for JMS brokers which do not care whether JMS header keys contain illegal characters._You can provide your own implementation of the org.apache.camel.component.jms.JmsKeyFormatStrategy_and refer to it using the # notation.;public void setKeyFormatStrategy(KeyFormatStrategy keyFormatStrategy) {_        this.keyFormatStrategy = keyFormatStrategy__    };pluggable,strategy,for,encoding,and,decoding,jms,keys,so,they,can,be,compliant,with,the,jms,specification,camel,provides,one,implementation,out,of,the,box,default,the,default,strategy,will,safely,marshal,dots,and,hyphens,and,can,be,used,for,jms,brokers,which,do,not,care,whether,jms,header,keys,contain,illegal,characters,you,can,provide,your,own,implementation,of,the,org,apache,camel,component,jms,jms,key,format,strategy,and,refer,to,it,using,the,notation;public,void,set,key,format,strategy,key,format,strategy,key,format,strategy,this,key,format,strategy,key,format,strategy
SjmsComponent -> public void setKeyFormatStrategy(KeyFormatStrategy keyFormatStrategy);1437137782;Pluggable strategy for encoding and decoding JMS keys so they can be compliant with the JMS specification._Camel provides one implementation out of the box: default._The default strategy will safely marshal dots and hyphens (. and -)._Can be used for JMS brokers which do not care whether JMS header keys contain illegal characters._You can provide your own implementation of the org.apache.camel.component.jms.JmsKeyFormatStrategy_and refer to it using the # notation.;public void setKeyFormatStrategy(KeyFormatStrategy keyFormatStrategy) {_        this.keyFormatStrategy = keyFormatStrategy__    };pluggable,strategy,for,encoding,and,decoding,jms,keys,so,they,can,be,compliant,with,the,jms,specification,camel,provides,one,implementation,out,of,the,box,default,the,default,strategy,will,safely,marshal,dots,and,hyphens,and,can,be,used,for,jms,brokers,which,do,not,care,whether,jms,header,keys,contain,illegal,characters,you,can,provide,your,own,implementation,of,the,org,apache,camel,component,jms,jms,key,format,strategy,and,refer,to,it,using,the,notation;public,void,set,key,format,strategy,key,format,strategy,key,format,strategy,this,key,format,strategy,key,format,strategy
SjmsComponent -> public void setKeyFormatStrategy(KeyFormatStrategy keyFormatStrategy);1438158851;Pluggable strategy for encoding and decoding JMS keys so they can be compliant with the JMS specification._Camel provides one implementation out of the box: default._The default strategy will safely marshal dots and hyphens (. and -)._Can be used for JMS brokers which do not care whether JMS header keys contain illegal characters._You can provide your own implementation of the org.apache.camel.component.jms.JmsKeyFormatStrategy_and refer to it using the # notation.;public void setKeyFormatStrategy(KeyFormatStrategy keyFormatStrategy) {_        this.keyFormatStrategy = keyFormatStrategy__    };pluggable,strategy,for,encoding,and,decoding,jms,keys,so,they,can,be,compliant,with,the,jms,specification,camel,provides,one,implementation,out,of,the,box,default,the,default,strategy,will,safely,marshal,dots,and,hyphens,and,can,be,used,for,jms,brokers,which,do,not,care,whether,jms,header,keys,contain,illegal,characters,you,can,provide,your,own,implementation,of,the,org,apache,camel,component,jms,jms,key,format,strategy,and,refer,to,it,using,the,notation;public,void,set,key,format,strategy,key,format,strategy,key,format,strategy,this,key,format,strategy,key,format,strategy
