commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected AbstractApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/component/gson/SpringGsonFieldNamePolicyTest.xml"). }
false;public;0;10;;@Test public void testUnmarshalPojo() throws Exception {     String json = "{\"id\":\"123\",\"first_name\":\"Donald\",\"last_name\":\"Duck\"}".     PersonPojo pojo = template.requestBody("direct:backPojo", json, PersonPojo.class).     assertNotNull(pojo).     assertEquals(123, pojo.getId()).     assertEquals("Donald", pojo.getFirstName()).     assertEquals("Duck", pojo.getLastName()). }
false;public;0;11;;@Test public void testMarshalPojo() throws Exception {     PersonPojo pojo = new PersonPojo().     pojo.setId(123).     pojo.setFirstName("Donald").     pojo.setLastName("Duck").     String expected = "{\"id\":123,\"first_name\":\"Donald\",\"last_name\":\"Duck\"}".     String json = template.requestBody("direct:inPojo", pojo, String.class).     assertEquals(expected, json). }
