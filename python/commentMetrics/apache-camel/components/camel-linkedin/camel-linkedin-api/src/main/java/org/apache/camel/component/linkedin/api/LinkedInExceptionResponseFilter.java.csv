commented;modifiers;parameterAmount;loc;comment;code
false;public;2;21;;@Override public void filter(ClientRequestContext requestContext, ClientResponseContext responseContext) throws IOException {     if (responseContext.getStatus() != Response.Status.OK.getStatusCode() && responseContext.hasEntity()) {         try {             final Unmarshaller unmarshaller = jaxbContext.createUnmarshaller().             final Error error = (Error) unmarshaller.unmarshal(responseContext.getEntityStream()).             final Response.ResponseBuilder builder = Response.status(responseContext.getStatusInfo()).             builder.entity(error).             // copy response headers             for (Map.Entry<String, List<String>> header : responseContext.getHeaders().entrySet()) {                 builder.header(header.getKey(), header.getValue()).             }             throw new LinkedInException(error, builder.build()).         } catch (JAXBException e) {             // log and ignore             LOG.warn("Unable to parse LinkedIn error: {}", e.getMessage(), e).         }     } }
