commented;modifiers;parameterAmount;loc;comment;code
true;public;0;10;// TODO provide parameter values for addPost ;// TODO provide parameter values for addPost @Ignore @Test public void testAddPost() throws Exception {     final Map<String, Object> headers = new HashMap<>().     headers.put("CamelLinkedIn.group_id", 0L).     // parameter type is org.apache.camel.component.linkedin.api.model.Post     headers.put("CamelLinkedIn.post", null).     requestBodyAndHeaders("direct://ADDPOST", null, headers). }
true;public;0;9;// TODO provide parameter values for getGroup ;// TODO provide parameter values for getGroup @Ignore @Test public void testGetGroup() throws Exception {     // using long message body for single parameter "group_id"     final org.apache.camel.component.linkedin.api.model.Group result = requestBody("direct://GETGROUP", 0L).     assertNotNull("getGroup result", result).     LOG.debug("getGroup: " + result). }
false;public;0;10;;public void configure() {     // test route for addPost     from("direct://ADDPOST").to("linkedin://" + PATH_PREFIX + "/addPost").     // test route for getGroup     from("direct://GETGROUP").to("linkedin://" + PATH_PREFIX + "/getGroup?inBody=group_id"). }
false;protected;0;15;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() {             // test route for addPost             from("direct://ADDPOST").to("linkedin://" + PATH_PREFIX + "/addPost").             // test route for getGroup             from("direct://GETGROUP").to("linkedin://" + PATH_PREFIX + "/getGroup?inBody=group_id").         }     }. }
