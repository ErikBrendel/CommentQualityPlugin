commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Before public void before() {     resultEndpoint.reset(). }
false;public;0;10;;@Test public void testSendMatchingMessage() throws Exception {     String expectedBody = "<matched/>".     resultEndpoint.expectedBodiesReceived(expectedBody).     template.sendBodyAndHeader(expectedBody, "foo", "bar").     resultEndpoint.assertIsSatisfied(). }
false;public;0;8;;@Test public void testSendNotMatchingMessage() throws Exception {     resultEndpoint.expectedMessageCount(0).     template.sendBodyAndHeader("<notMatched/>", "foo", "notMatchedHeaderValue").     resultEndpoint.assertIsSatisfied(). }
false;public;0;4;;@Override public void configure() {     from("direct:start").filter(header("foo").isEqualTo("bar")).to("mock:result"). }
