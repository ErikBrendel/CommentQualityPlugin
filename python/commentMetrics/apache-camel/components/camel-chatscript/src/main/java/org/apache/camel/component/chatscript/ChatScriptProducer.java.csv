commented;modifiers;parameterAmount;loc;comment;code
false;public;1;15;;public void process(Exchange exchange) throws Exception {     Object body = exchange.getIn().getBody().     ChatScriptMessage inputMessage = new ChatScriptMessage().     /* use can pass message object as json or the object it self */     if (!(body instanceof ChatScriptMessage)) {         inputMessage = buildMessage(body).     } else {         inputMessage = (ChatScriptMessage) body.     }     inputMessage.setBotName(endpoint.getBotName()).     String response = this.endpoint.getBot().sendChat(inputMessage).     inputMessage.setReply(response).     exchange.getOut().setBody(inputMessage). }
false;private;1;7;;private ChatScriptMessage buildMessage(Object body) throws Exception {     if (body instanceof String) {         return createMessage(String.valueOf(body)).     }     return null. }
false;private;1;10;;private ChatScriptMessage createMessage(String message) throws Exception {     ChatScriptMessage ret = null.     try {         ret = mapper.readValue(message, ChatScriptMessage.class).     } catch (Exception e) {         e.printStackTrace().         throw new Exception("Unable to parse the input message. Error Message" + e.getMessage()).     }     return ret. }
