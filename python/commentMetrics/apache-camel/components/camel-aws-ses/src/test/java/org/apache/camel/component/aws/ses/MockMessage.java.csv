commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public int getSize() throws MessagingException {     return 0. }
false;public;0;4;;@Override public int getLineCount() throws MessagingException {     return 0. }
false;public;0;4;;@Override public String getContentType() throws MessagingException {     return null. }
false;public;1;4;;@Override public boolean isMimeType(String mimeType) throws MessagingException {     return false. }
false;public;0;4;;@Override public String getDisposition() throws MessagingException {     return null. }
false;public;1;3;;@Override public void setDisposition(String disposition) throws MessagingException { }
false;public;0;4;;@Override public String getDescription() throws MessagingException {     return null. }
false;public;1;3;;@Override public void setDescription(String description) throws MessagingException { }
false;public;0;4;;@Override public String getFileName() throws MessagingException {     return null. }
false;public;1;3;;@Override public void setFileName(String filename) throws MessagingException { }
false;public;0;4;;@Override public InputStream getInputStream() throws IOException, MessagingException {     return null. }
false;public;0;4;;@Override public DataHandler getDataHandler() throws MessagingException {     return null. }
false;public;0;4;;@Override public Object getContent() throws IOException, MessagingException {     return null. }
false;public;1;3;;@Override public void setDataHandler(DataHandler dh) throws MessagingException { }
false;public;2;3;;@Override public void setContent(Object obj, String type) throws MessagingException { }
false;public;1;3;;@Override public void setText(String text) throws MessagingException { }
false;public;1;3;;@Override public void setContent(Multipart mp) throws MessagingException { }
false;public;1;3;;@Override public void writeTo(OutputStream os) throws IOException, MessagingException { }
false;public;1;4;;@Override public String[] getHeader(String headername) throws MessagingException {     return null. }
false;public;2;4;;@Override public void setHeader(String headername, String headervalue) throws MessagingException { }
false;public;2;4;;@Override public void addHeader(String headername, String headervalue) throws MessagingException { }
false;public;1;3;;@Override public void removeHeader(String headername) throws MessagingException { }
false;public;0;4;;@Override public Enumeration<Header> getAllHeaders() throws MessagingException {     return null. }
false;public;1;5;;@Override public Enumeration<Header> getMatchingHeaders(String[] headernames) throws MessagingException {     return null. }
false;public;1;5;;@Override public Enumeration<Header> getNonMatchingHeaders(String[] headernames) throws MessagingException {     return null. }
false;public;0;4;;@Override public Address[] getFrom() throws MessagingException {     return null. }
false;public;0;3;;@Override public void setFrom() throws MessagingException { }
false;public;1;3;;@Override public void setFrom(Address address) throws MessagingException { }
false;public;1;3;;@Override public void addFrom(Address[] addresses) throws MessagingException { }
false;public;1;5;;@Override public Address[] getRecipients(RecipientType type) throws MessagingException {     return null. }
false;public;2;4;;@Override public void setRecipients(RecipientType type, Address[] addresses) throws MessagingException { }
false;public;2;4;;@Override public void addRecipients(RecipientType type, Address[] addresses) throws MessagingException { }
false;public;0;4;;@Override public String getSubject() throws MessagingException {     return null. }
false;public;1;3;;@Override public void setSubject(String subject) throws MessagingException { }
false;public;0;4;;@Override public Date getSentDate() throws MessagingException {     return null. }
false;public;1;3;;@Override public void setSentDate(Date date) throws MessagingException { }
false;public;0;4;;@Override public Date getReceivedDate() throws MessagingException {     return null. }
false;public;0;4;;@Override public Flags getFlags() throws MessagingException {     return null. }
false;public;2;3;;@Override public void setFlags(Flags flag, boolean set) throws MessagingException { }
false;public;1;4;;@Override public Message reply(boolean replyToAll) throws MessagingException {     return null. }
false;public;0;3;;@Override public void saveChanges() throws MessagingException { }
