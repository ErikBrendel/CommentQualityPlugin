commented;modifiers;parameterAmount;loc;comment;code
false;public;1;5;;public void process(Exchange exchange) throws Exception {     exchange.getIn().setHeader(SesConstants.SUBJECT, "This is my subject").     exchange.getIn().setHeader(SesConstants.TO, Collections.singletonList("to@example.com")).     exchange.getIn().setBody("This is my message text."). }
false;public;0;12;;@Test public void sendUsingAccessKeyAndSecretKey() throws Exception {     Exchange exchange = template.send("direct:start", ExchangePattern.InOnly, new Processor() {          public void process(Exchange exchange) throws Exception {             exchange.getIn().setHeader(SesConstants.SUBJECT, "This is my subject").             exchange.getIn().setHeader(SesConstants.TO, Collections.singletonList("to@example.com")).             exchange.getIn().setBody("This is my message text.").         }     }).     assertNotNull(exchange.getIn().getHeader(SesConstants.MESSAGE_ID)). }
false;public;0;5;;@Override public void configure() throws Exception {     from("direct:start").to("aws-ses://from@example.com?accessKey=xxx&secretKey=yyy"). }
false;protected;0;9;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("aws-ses://from@example.com?accessKey=xxx&secretKey=yyy").         }     }. }
