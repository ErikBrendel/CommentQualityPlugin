commented;modifiers;parameterAmount;loc;comment;code
false;protected;3;7;;@Override protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {     SpringBatchEndpoint endpoint = new SpringBatchEndpoint(uri, this, jobLauncher, defaultResolvedJobLauncher, allResolvedJobLaunchers, remaining, jobRegistry).     setProperties(endpoint, parameters).     return endpoint. }
false;protected;0;5;;@Override protected void doStart() throws Exception {     defaultResolvedJobLauncher = getCamelContext().getRegistry().lookupByNameAndType(DEFAULT_JOB_LAUNCHER_REF_NAME, JobLauncher.class).     allResolvedJobLaunchers = getCamelContext().getRegistry().findByTypeWithName(JobLauncher.class). }
false;public;0;3;;public JobLauncher getJobLauncher() {     return jobLauncher. }
true;public;1;3;/**  * Explicitly specifies a JobLauncher to be used.  */ ;/**  * Explicitly specifies a JobLauncher to be used.  */ public void setJobLauncher(JobLauncher jobLauncher) {     this.jobLauncher = jobLauncher. }
false;public;0;3;;public JobRegistry getJobRegistry() {     return jobRegistry. }
true;public;1;3;/**  * Explicitly specifies a JobRegistry to be used.  */ ;/**  * Explicitly specifies a JobRegistry to be used.  */ public void setJobRegistry(JobRegistry jobRegistry) {     this.jobRegistry = jobRegistry. }
