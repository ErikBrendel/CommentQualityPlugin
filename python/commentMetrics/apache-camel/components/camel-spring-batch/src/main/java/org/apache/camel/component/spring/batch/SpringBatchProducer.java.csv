commented;modifiers;parameterAmount;loc;comment;code
false;public;1;26;;@Override public void process(Exchange exchange) throws Exception {     JobParameters jobParameters = prepareJobParameters(exchange.getIn().getHeaders()).     String messageJobName = jobParameters.getString(SpringBatchConstants.JOB_NAME).     Job job2run = this.job.     if (messageJobName != null) {         if (jobRegistry != null) {             job2run = jobRegistry.getJob(messageJobName).         } else {             job2run = CamelContextHelper.mandatoryLookup(getEndpoint().getCamelContext(), messageJobName, Job.class).         }     }     if (job2run == null) {         exchange.setException(new CamelExchangeException("jobName was not specified in the endpoint construction " + " and header " + SpringBatchConstants.JOB_NAME + " could not be found", exchange)).         return.     }     JobExecution jobExecution = jobLauncher.run(job2run, jobParameters).     exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders()).     exchange.getOut().setBody(jobExecution). }
true;protected;1;22;/**  * Helper method converting the Camel message headers into the Spring Batch parameters map. Date, Long and Double  * header values are converted to the appropriate types. All the other header values are converted to string  * representation.  *  * @param headers Camel message header to be converted  * @return Camel message headers converted into the Spring Batch parameters map  */ ;/**  * Helper method converting the Camel message headers into the Spring Batch parameters map. Date, Long and Double  * header values are converted to the appropriate types. All the other header values are converted to string  * representation.  *  * @param headers Camel message header to be converted  * @return Camel message headers converted into the Spring Batch parameters map  */ protected JobParameters prepareJobParameters(Map<String, Object> headers) {     JobParametersBuilder parametersBuilder = new JobParametersBuilder().     for (Map.Entry<String, Object> headerEntry : headers.entrySet()) {         String headerKey = headerEntry.getKey().         Object headerValue = headerEntry.getValue().         if (headerValue instanceof Date) {             parametersBuilder.addDate(headerKey, (Date) headerValue).         } else if (headerValue instanceof Long) {             parametersBuilder.addLong(headerKey, (Long) headerValue).         } else if (headerValue instanceof Double) {             parametersBuilder.addDouble(headerKey, (Double) headerValue).         } else if (headerValue != null) {             parametersBuilder.addString(headerKey, headerValue.toString()).         } else {             // if the value is null we just put String with null value here to avoid the NPE             parametersBuilder.addString(headerKey, null).         }     }     JobParameters jobParameters = parametersBuilder.toJobParameters().     log.debug("Prepared parameters for Spring Batch job: {}", jobParameters).     return jobParameters. }
