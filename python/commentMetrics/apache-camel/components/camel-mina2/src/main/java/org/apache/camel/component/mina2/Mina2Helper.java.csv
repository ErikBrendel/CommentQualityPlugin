# id;timestamp;commentText;codeText;commentWords;codeWords
Mina2Helper -> public static void writeBody(IoSession session, Object body, Exchange exchange) throws CamelExchangeException;1325519998;Writes the given body to MINA session. Will wait until the body has been written.__@param session  the MINA session_@param body     the body to write (send)_@param exchange the exchange_@throws CamelExchangeException is thrown if the body could not be written for some reasons_(eg remote connection is closed etc.);public static void writeBody(IoSession session, Object body, Exchange exchange) throws CamelExchangeException {_        LOG.trace("write exchange [{}] with body [{}]", exchange, body)__        _        session.write(body)__    };writes,the,given,body,to,mina,session,will,wait,until,the,body,has,been,written,param,session,the,mina,session,param,body,the,body,to,write,send,param,exchange,the,exchange,throws,camel,exchange,exception,is,thrown,if,the,body,could,not,be,written,for,some,reasons,eg,remote,connection,is,closed,etc;public,static,void,write,body,io,session,session,object,body,exchange,exchange,throws,camel,exchange,exception,log,trace,write,exchange,with,body,exchange,body,session,write,body
Mina2Helper -> public static void writeBody(IoSession session, Object body, Exchange exchange) throws CamelExchangeException;1326392736;Writes the given body to MINA session. Will wait until the body has been written.__@param session  the MINA session_@param body     the body to write (send)_@param exchange the exchange_@throws CamelExchangeException is thrown if the body could not be written for some reasons_(eg remote connection is closed etc.);public static void writeBody(IoSession session, Object body, Exchange exchange) throws CamelExchangeException {_        LOG.trace("write exchange [{}] with body [{}]", exchange, body)__        _        session.write(body)__    };writes,the,given,body,to,mina,session,will,wait,until,the,body,has,been,written,param,session,the,mina,session,param,body,the,body,to,write,send,param,exchange,the,exchange,throws,camel,exchange,exception,is,thrown,if,the,body,could,not,be,written,for,some,reasons,eg,remote,connection,is,closed,etc;public,static,void,write,body,io,session,session,object,body,exchange,exchange,throws,camel,exchange,exception,log,trace,write,exchange,with,body,exchange,body,session,write,body
Mina2Helper -> public static void writeBody(IoSession session, Object body, Exchange exchange) throws CamelExchangeException;1376549254;Writes the given body to MINA session. Will wait until the body has been written.__@param session  the MINA session_@param body     the body to write (send)_@param exchange the exchange_@throws CamelExchangeException is thrown if the body could not be written for some reasons_(eg remote connection is closed etc.);public static void writeBody(IoSession session, Object body, Exchange exchange) throws CamelExchangeException {_        LOG.trace("write exchange [{}] with body [{}]", exchange, body)__        _        session.write(body)__    };writes,the,given,body,to,mina,session,will,wait,until,the,body,has,been,written,param,session,the,mina,session,param,body,the,body,to,write,send,param,exchange,the,exchange,throws,camel,exchange,exception,is,thrown,if,the,body,could,not,be,written,for,some,reasons,eg,remote,connection,is,closed,etc;public,static,void,write,body,io,session,session,object,body,exchange,exchange,throws,camel,exchange,exception,log,trace,write,exchange,with,body,exchange,body,session,write,body
Mina2Helper -> public static void writeBody(IoSession session, Object body, Exchange exchange) throws CamelExchangeException;1384462963;Asynchronous writes the given body to MINA session. Will wait at most for_10 seconds until the body has been written.__@param session  the MINA session_@param body     the body to write (send)_@param exchange the exchange_@throws CamelExchangeException is thrown if the body could not be written for some reasons_(eg remote connection is closed etc.);public static void writeBody(IoSession session, Object body, Exchange exchange) throws CamelExchangeException {_        _        WriteFuture future = session.write(body)__        _        _        LOG.trace("Waiting for write to complete for body: {} using session: {}", body, session)__        if (!future.awaitUninterruptibly(10000L)) {_            throw new CamelExchangeException("Cannot write body: " + body + " using session: " + session, exchange)__        }_    };asynchronous,writes,the,given,body,to,mina,session,will,wait,at,most,for,10,seconds,until,the,body,has,been,written,param,session,the,mina,session,param,body,the,body,to,write,send,param,exchange,the,exchange,throws,camel,exchange,exception,is,thrown,if,the,body,could,not,be,written,for,some,reasons,eg,remote,connection,is,closed,etc;public,static,void,write,body,io,session,session,object,body,exchange,exchange,throws,camel,exchange,exception,write,future,future,session,write,body,log,trace,waiting,for,write,to,complete,for,body,using,session,body,session,if,future,await,uninterruptibly,10000l,throw,new,camel,exchange,exception,cannot,write,body,body,using,session,session,exchange
Mina2Helper -> public static void writeBody(IoSession session, Object body, Exchange exchange) throws CamelExchangeException;1384505817;Asynchronously writes the given body to MINA session. Will wait at most for_10 seconds until the body has been written.__@param session  the MINA session_@param body     the body to write (send)_@param exchange the exchange_@throws CamelExchangeException is thrown if the body could not be written for some reasons_(eg remote connection is closed etc.);public static void writeBody(IoSession session, Object body, Exchange exchange) throws CamelExchangeException {_        _        WriteFuture future = session.write(body)__        _        _        LOG.trace("Waiting for write to complete for body: {} using session: {}", body, session)__        if (!future.awaitUninterruptibly(10000L)) {_            throw new CamelExchangeException("Cannot write body: " + body + " using session: " + session, exchange)__        }_    };asynchronously,writes,the,given,body,to,mina,session,will,wait,at,most,for,10,seconds,until,the,body,has,been,written,param,session,the,mina,session,param,body,the,body,to,write,send,param,exchange,the,exchange,throws,camel,exchange,exception,is,thrown,if,the,body,could,not,be,written,for,some,reasons,eg,remote,connection,is,closed,etc;public,static,void,write,body,io,session,session,object,body,exchange,exchange,throws,camel,exchange,exception,write,future,future,session,write,body,log,trace,waiting,for,write,to,complete,for,body,using,session,body,session,if,future,await,uninterruptibly,10000l,throw,new,camel,exchange,exception,cannot,write,body,body,using,session,session,exchange
Mina2Helper -> public static void writeBody(IoSession session, Object body, Exchange exchange) throws CamelExchangeException;1384594237;Asynchronously writes the given body to MINA session. Will wait at most for_10 seconds until the body has been written.__@param session  the MINA session_@param body     the body to write (send)_@param exchange the exchange_@throws CamelExchangeException is thrown if the body could not be written for some reasons_(eg remote connection is closed etc.);public static void writeBody(IoSession session, Object body, Exchange exchange) throws CamelExchangeException {_        _        WriteFuture future = session.write(body)__        _        _        LOG.trace("Waiting for write to complete for body: {} using session: {}", body, session)__        if (!future.awaitUninterruptibly(10000L)) {_            String message = "Cannot write body: " + body + " using session: " + session__            if (future.getException() != null) {_                throw new CamelExchangeException(message, exchange, future.getException())__            } else {_                throw new CamelExchangeException(message, exchange)__            }_        }_    };asynchronously,writes,the,given,body,to,mina,session,will,wait,at,most,for,10,seconds,until,the,body,has,been,written,param,session,the,mina,session,param,body,the,body,to,write,send,param,exchange,the,exchange,throws,camel,exchange,exception,is,thrown,if,the,body,could,not,be,written,for,some,reasons,eg,remote,connection,is,closed,etc;public,static,void,write,body,io,session,session,object,body,exchange,exchange,throws,camel,exchange,exception,write,future,future,session,write,body,log,trace,waiting,for,write,to,complete,for,body,using,session,body,session,if,future,await,uninterruptibly,10000l,string,message,cannot,write,body,body,using,session,session,if,future,get,exception,null,throw,new,camel,exchange,exception,message,exchange,future,get,exception,else,throw,new,camel,exchange,exception,message,exchange
Mina2Helper -> public static void writeBody(IoSession session, Object body, Exchange exchange) throws CamelExchangeException;1384643513;Asynchronously writes the given body to MINA session. Will wait at most for_10 seconds until the body has been written.__@param session  the MINA session_@param body     the body to write (send)_@param exchange the exchange_@throws CamelExchangeException is thrown if the body could not be written for some reasons_(eg remote connection is closed etc.);public static void writeBody(IoSession session, Object body, Exchange exchange) throws CamelExchangeException {_        _        WriteFuture future = session.write(body)__        _        _        LOG.trace("Waiting for write to complete for body: {} using session: {}", body, session)__        if (!future.awaitUninterruptibly(10000L)) {_            String message = "Cannot write body: " + body + " using session: " + session__            if (future.getException() != null) {_                throw new CamelExchangeException(message, exchange, future.getException())__            } else {_                throw new CamelExchangeException(message, exchange)__            }_        }_    };asynchronously,writes,the,given,body,to,mina,session,will,wait,at,most,for,10,seconds,until,the,body,has,been,written,param,session,the,mina,session,param,body,the,body,to,write,send,param,exchange,the,exchange,throws,camel,exchange,exception,is,thrown,if,the,body,could,not,be,written,for,some,reasons,eg,remote,connection,is,closed,etc;public,static,void,write,body,io,session,session,object,body,exchange,exchange,throws,camel,exchange,exception,write,future,future,session,write,body,log,trace,waiting,for,write,to,complete,for,body,using,session,body,session,if,future,await,uninterruptibly,10000l,string,message,cannot,write,body,body,using,session,session,if,future,get,exception,null,throw,new,camel,exchange,exception,message,exchange,future,get,exception,else,throw,new,camel,exchange,exception,message,exchange
Mina2Helper -> public static void writeBody(IoSession session, Object body, Exchange exchange) throws CamelExchangeException;1465583293;Asynchronously writes the given body to MINA session. Will wait at most for_10 seconds until the body has been written.__@param session  the MINA session_@param body     the body to write (send)_@param exchange the exchange_@throws CamelExchangeException is thrown if the body could not be written for some reasons_(eg remote connection is closed etc.);public static void writeBody(IoSession session, Object body, Exchange exchange) throws CamelExchangeException {_        _        WriteFuture future = session.write(body)__        _        _        LOG.trace("Waiting for write to complete for body: {} using session: {}", body, session)__        if (!future.awaitUninterruptibly(10000L)) {_            String message = "Cannot write body: " + body.getClass().getCanonicalName() + " using session: " + session__            if (future.getException() != null) {_                throw new CamelExchangeException(message, exchange, future.getException())__            } else {_                throw new CamelExchangeException(message, exchange)__            }_        }_    };asynchronously,writes,the,given,body,to,mina,session,will,wait,at,most,for,10,seconds,until,the,body,has,been,written,param,session,the,mina,session,param,body,the,body,to,write,send,param,exchange,the,exchange,throws,camel,exchange,exception,is,thrown,if,the,body,could,not,be,written,for,some,reasons,eg,remote,connection,is,closed,etc;public,static,void,write,body,io,session,session,object,body,exchange,exchange,throws,camel,exchange,exception,write,future,future,session,write,body,log,trace,waiting,for,write,to,complete,for,body,using,session,body,session,if,future,await,uninterruptibly,10000l,string,message,cannot,write,body,body,get,class,get,canonical,name,using,session,session,if,future,get,exception,null,throw,new,camel,exchange,exception,message,exchange,future,get,exception,else,throw,new,camel,exchange,exception,message,exchange
