commented;modifiers;parameterAmount;loc;comment;code
false;public;0;14;;@Test public void testNoResponse() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(0).     try {         template.requestBody(String.format("mina2:tcp://localhost:%1$s?sync=true&codec=#myCodec", getPort()), "Hello World").         fail("Should throw a CamelExchangeException").     } catch (RuntimeCamelException e) {         assertIsInstanceOf(CamelExchangeException.class, e.getCause()).     }     mock.assertIsSatisfied(). }
false;protected;0;5;;protected JndiRegistry createRegistry() throws Exception {     JndiRegistry jndi = super.createRegistry().     jndi.bind("myCodec", new MyCodec()).     return jndi. }
false;public;0;3;;public void configure() throws Exception {     from(String.format("mina2:tcp://localhost:%1$s?sync=true&codec=#myCodec", getPort())).transform(constant("Bye World")).to("mock:result"). }
false;protected;0;8;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from(String.format("mina2:tcp://localhost:%1$s?sync=true&codec=#myCodec", getPort())).transform(constant("Bye World")).to("mock:result").         }     }. }
false;public;3;5;;public void encode(IoSession ioSession, Object message, ProtocolEncoderOutput out) throws Exception {     // close session instead of returning a reply     ioSession.closeNow(). }
false;public;1;3;;public void dispose(IoSession ioSession) throws Exception { // do nothing }
false;public;1;15;;public ProtocolEncoder getEncoder(IoSession session) throws Exception {     return new ProtocolEncoder() {          public void encode(IoSession ioSession, Object message, ProtocolEncoderOutput out) throws Exception {             // close session instead of returning a reply             ioSession.closeNow().         }          public void dispose(IoSession ioSession) throws Exception {         // do nothing         }     }. }
false;public;3;5;;public void decode(IoSession ioSession, IoBuffer in, ProtocolDecoderOutput out) throws Exception {     // close session instead of returning a reply     ioSession.closeNow(). }
false;public;2;4;;public void finishDecode(IoSession ioSession, ProtocolDecoderOutput protocolDecoderOutput) throws Exception { // do nothing }
false;public;1;3;;public void dispose(IoSession ioSession) throws Exception { // do nothing }
false;public;1;19;;public ProtocolDecoder getDecoder(IoSession session) throws Exception {     return new ProtocolDecoder() {          public void decode(IoSession ioSession, IoBuffer in, ProtocolDecoderOutput out) throws Exception {             // close session instead of returning a reply             ioSession.closeNow().         }          public void finishDecode(IoSession ioSession, ProtocolDecoderOutput protocolDecoderOutput) throws Exception {         // do nothing         }          public void dispose(IoSession ioSession) throws Exception {         // do nothing         }     }. }
