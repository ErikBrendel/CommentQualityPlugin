commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void testMinaRoute() throws Exception {     MockEndpoint endpoint = getMockEndpoint("mock:results").     endpoint.expectedMessageCount(1).     endpoint.message(0).body().startsWith("Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;7;;public void configure() {     // lets setup a server     from(String.format("mina2:vm://localhost:%1$s?sync=false&textline=true", getPort())).to("mock:results").     from("file:src/test/data?noop=true&fileName=message1.txt").to(String.format("mina2:vm://localhost:%1$s?sync=false&textline=true", getPort())). }
false;protected;0;12;;protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          public void configure() {             // lets setup a server             from(String.format("mina2:vm://localhost:%1$s?sync=false&textline=true", getPort())).to("mock:results").             from("file:src/test/data?noop=true&fileName=message1.txt").to(String.format("mina2:vm://localhost:%1$s?sync=false&textline=true", getPort())).         }     }. }
