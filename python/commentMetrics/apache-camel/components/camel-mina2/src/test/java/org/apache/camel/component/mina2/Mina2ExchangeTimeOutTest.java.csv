commented;modifiers;parameterAmount;loc;comment;code
false;public;0;16;;@Test public void testUsingTimeoutParameter() throws Exception {     // use a timeout value of 2 seconds (timeout is in millis) so we should actually get a response in this test     Endpoint endpoint = context.getEndpoint(String.format("mina2:tcp://localhost:%1$s?textline=true&sync=true&timeout=500", getPort())).     Producer producer = endpoint.createProducer().     producer.start().     Exchange exchange = endpoint.createExchange().     exchange.getIn().setBody("Hello World").     try {         producer.process(exchange).         fail("Should have thrown an ExchangeTimedOutException wrapped in a RuntimeCamelException").     } catch (Exception e) {         assertTrue("Should have thrown an ExchangeTimedOutException", e instanceof ExchangeTimedOutException).     }     producer.stop(). }
false;public;1;8;;public void process(Exchange e) throws Exception {     assertEquals("Hello World", e.getIn().getBody(String.class)).     // MinaProducer has a default timeout of 3 seconds so we just wait 2 seconds     // (template.requestBody is a MinaProducer behind the doors)     Thread.sleep(2000).     e.getOut().setBody("Okay I will be faster in the future"). }
false;public;0;13;;public void configure() {     from(String.format("mina2:tcp://localhost:%1$s?textline=true&sync=true&timeout=30000", getPort())).process(new Processor() {          public void process(Exchange e) throws Exception {             assertEquals("Hello World", e.getIn().getBody(String.class)).             // MinaProducer has a default timeout of 3 seconds so we just wait 2 seconds             // (template.requestBody is a MinaProducer behind the doors)             Thread.sleep(2000).             e.getOut().setBody("Okay I will be faster in the future").         }     }). }
false;protected;0;18;;protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          public void configure() {             from(String.format("mina2:tcp://localhost:%1$s?textline=true&sync=true&timeout=30000", getPort())).process(new Processor() {                  public void process(Exchange e) throws Exception {                     assertEquals("Hello World", e.getIn().getBody(String.class)).                     // MinaProducer has a default timeout of 3 seconds so we just wait 2 seconds                     // (template.requestBody is a MinaProducer behind the doors)                     Thread.sleep(2000).                     e.getOut().setBody("Okay I will be faster in the future").                 }             }).         }     }. }
