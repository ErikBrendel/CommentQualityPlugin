commented;modifiers;parameterAmount;loc;comment;code
false;protected;2;7;;@Override protected void changeSign(Publisher<Integer> data, Consumer<Integer> consume) {     Flowable.fromPublisher(data).map(i -> -i).doOnNext(consume::accept).subscribe(). }
false;protected;2;6;;@Override protected void changeSign(Iterable<Integer> data, Subscriber<Integer> camel) {     Flowable.fromIterable(data).map(i -> -i).subscribe(camel). }
