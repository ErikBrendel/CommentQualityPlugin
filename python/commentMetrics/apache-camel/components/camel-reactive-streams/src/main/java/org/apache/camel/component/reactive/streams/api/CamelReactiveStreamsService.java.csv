# id;timestamp;commentText;codeText;commentWords;codeWords
CamelReactiveStreamsService -> <T> Function<Object, Publisher<T>> request(String name, Class<T> type)_;1486051580;Returns a function that pushes data into the specified Camel stream and_returns a Publisher (mono) holding the exchange output or an error.__This is a curryied version of {@link CamelReactiveStreamsService#request(String, Object, Class)}.__@param name the stream name_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a function that returns a publisher with the resulting data;<T> Function<Object, Publisher<T>> request(String name, Class<T> type)_;returns,a,function,that,pushes,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,exchange,output,or,an,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,request,string,object,class,param,name,the,stream,name,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,function,that,returns,a,publisher,with,the,resulting,data;t,function,object,publisher,t,request,string,name,class,t,type
CamelReactiveStreamsService -> <T> Function<Object, Publisher<T>> request(String name, Class<T> type)_;1486126007;Returns a function that pushes data into the specified Camel stream and_returns a Publisher (mono) holding the exchange output or an error.__This is a curryied version of {@link CamelReactiveStreamsService#request(String, Object, Class)}.__@param name the stream name_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a function that returns a publisher with the resulting data;<T> Function<Object, Publisher<T>> request(String name, Class<T> type)_;returns,a,function,that,pushes,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,exchange,output,or,an,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,request,string,object,class,param,name,the,stream,name,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,function,that,returns,a,publisher,with,the,resulting,data;t,function,object,publisher,t,request,string,name,class,t,type
CamelReactiveStreamsService -> <T> Function<Object, Publisher<T>> request(String name, Class<T> type)_;1486143701;Returns a function that pushes data into the specified Camel stream and_returns a Publisher (mono) holding the exchange output or an error.__This is a curryied version of {@link CamelReactiveStreamsService#request(String, Object, Class)}.__@param name the stream name_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a function that returns a publisher with the resulting data;<T> Function<Object, Publisher<T>> request(String name, Class<T> type)_;returns,a,function,that,pushes,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,exchange,output,or,an,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,request,string,object,class,param,name,the,stream,name,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,function,that,returns,a,publisher,with,the,resulting,data;t,function,object,publisher,t,request,string,name,class,t,type
CamelReactiveStreamsService -> <T> Function<Object, Publisher<T>> request(String name, Class<T> type)_;1486195149;Returns a function that pushes data into the specified Camel stream and_returns a Publisher (mono) holding the exchange output or an error.__This is a curryied version of {@link CamelReactiveStreamsService#request(String, Object, Class)}.__@param name the stream name_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a function that returns a publisher with the resulting data;<T> Function<Object, Publisher<T>> request(String name, Class<T> type)_;returns,a,function,that,pushes,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,exchange,output,or,an,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,request,string,object,class,param,name,the,stream,name,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,function,that,returns,a,publisher,with,the,resulting,data;t,function,object,publisher,t,request,string,name,class,t,type
CamelReactiveStreamsService -> Subscriber<Exchange> streamSubscriber(String name)_;1486339409;Returns the subscriber associated to the given stream name._A subscriber can be used to push items coming from external reactive-streams publishers to Camel routes.__@param name the stream name_@return the subscriber associated with the stream;Subscriber<Exchange> streamSubscriber(String name)_;returns,the,subscriber,associated,to,the,given,stream,name,a,subscriber,can,be,used,to,push,items,coming,from,external,reactive,streams,publishers,to,camel,routes,param,name,the,stream,name,return,the,subscriber,associated,with,the,stream;subscriber,exchange,stream,subscriber,string,name
CamelReactiveStreamsService -> Subscriber<Exchange> streamSubscriber(String name)_;1491658900;Returns the subscriber associated to the given stream name._A subscriber can be used to push items coming from external reactive-streams publishers to Camel routes.__@param name the stream name_@return the subscriber associated with the stream;Subscriber<Exchange> streamSubscriber(String name)_;returns,the,subscriber,associated,to,the,given,stream,name,a,subscriber,can,be,used,to,push,items,coming,from,external,reactive,streams,publishers,to,camel,routes,param,name,the,stream,name,return,the,subscriber,associated,with,the,stream;subscriber,exchange,stream,subscriber,string,name
CamelReactiveStreamsService -> Subscriber<Exchange> streamSubscriber(String name)_;1491658900;Returns the subscriber associated to the given stream name._A subscriber can be used to push items coming from external reactive-streams publishers to Camel routes.__@param name the stream name_@return the subscriber associated with the stream;Subscriber<Exchange> streamSubscriber(String name)_;returns,the,subscriber,associated,to,the,given,stream,name,a,subscriber,can,be,used,to,push,items,coming,from,external,reactive,streams,publishers,to,camel,routes,param,name,the,stream,name,return,the,subscriber,associated,with,the,stream;subscriber,exchange,stream,subscriber,string,name
CamelReactiveStreamsService -> Subscriber<Exchange> streamSubscriber(String name)_;1493982605;Returns the subscriber associated to the given stream name._A subscriber can be used to push items coming from external reactive-streams publishers to Camel routes.__@param name the stream name_@return the subscriber associated with the stream;Subscriber<Exchange> streamSubscriber(String name)_;returns,the,subscriber,associated,to,the,given,stream,name,a,subscriber,can,be,used,to,push,items,coming,from,external,reactive,streams,publishers,to,camel,routes,param,name,the,stream,name,return,the,subscriber,associated,with,the,stream;subscriber,exchange,stream,subscriber,string,name
CamelReactiveStreamsService -> Subscriber<Exchange> streamSubscriber(String name)_;1494845216;Returns the subscriber associated to the given stream name._A subscriber can be used to push items coming from external reactive-streams publishers to Camel routes.__@param name the stream name_@return the subscriber associated with the stream;Subscriber<Exchange> streamSubscriber(String name)_;returns,the,subscriber,associated,to,the,given,stream,name,a,subscriber,can,be,used,to,push,items,coming,from,external,reactive,streams,publishers,to,camel,routes,param,name,the,stream,name,return,the,subscriber,associated,with,the,stream;subscriber,exchange,stream,subscriber,string,name
CamelReactiveStreamsService -> Subscriber<Exchange> streamSubscriber(String name)_;1495704737;Returns the subscriber associated to the given stream name._A subscriber can be used to push items coming from external reactive-streams publishers to Camel routes.__@param name the stream name_@return the subscriber associated with the stream;Subscriber<Exchange> streamSubscriber(String name)_;returns,the,subscriber,associated,to,the,given,stream,name,a,subscriber,can,be,used,to,push,items,coming,from,external,reactive,streams,publishers,to,camel,routes,param,name,the,stream,name,return,the,subscriber,associated,with,the,stream;subscriber,exchange,stream,subscriber,string,name
CamelReactiveStreamsService -> <T> Subscriber<T> streamSubscriber(String name, Class<T> type)_;1486339409;Returns the subscriber associated to the given stream name._A subscriber can be used to push items coming from external reactive-streams publishers to Camel routes.__The subscriber converts automatically items of the given type to exchanges before pushing them.__@param name the stream name_@param type the publisher converts automatically exchanges to the given type._@param <T> the type of items accepted by the subscriber_@return the subscriber associated with the stream;<T> Subscriber<T> streamSubscriber(String name, Class<T> type)_;returns,the,subscriber,associated,to,the,given,stream,name,a,subscriber,can,be,used,to,push,items,coming,from,external,reactive,streams,publishers,to,camel,routes,the,subscriber,converts,automatically,items,of,the,given,type,to,exchanges,before,pushing,them,param,name,the,stream,name,param,type,the,publisher,converts,automatically,exchanges,to,the,given,type,param,t,the,type,of,items,accepted,by,the,subscriber,return,the,subscriber,associated,with,the,stream;t,subscriber,t,stream,subscriber,string,name,class,t,type
CamelReactiveStreamsService -> <T> Subscriber<T> streamSubscriber(String name, Class<T> type)_;1491658900;Returns the subscriber associated to the given stream name._A subscriber can be used to push items coming from external reactive-streams publishers to Camel routes.__The subscriber converts automatically items of the given type to exchanges before pushing them.__@param name the stream name_@param type the publisher converts automatically exchanges to the given type._@param <T> the type of items accepted by the subscriber_@return the subscriber associated with the stream;<T> Subscriber<T> streamSubscriber(String name, Class<T> type)_;returns,the,subscriber,associated,to,the,given,stream,name,a,subscriber,can,be,used,to,push,items,coming,from,external,reactive,streams,publishers,to,camel,routes,the,subscriber,converts,automatically,items,of,the,given,type,to,exchanges,before,pushing,them,param,name,the,stream,name,param,type,the,publisher,converts,automatically,exchanges,to,the,given,type,param,t,the,type,of,items,accepted,by,the,subscriber,return,the,subscriber,associated,with,the,stream;t,subscriber,t,stream,subscriber,string,name,class,t,type
CamelReactiveStreamsService -> <T> Subscriber<T> streamSubscriber(String name, Class<T> type)_;1491658900;Returns the subscriber associated to the given stream name._A subscriber can be used to push items coming from external reactive-streams publishers to Camel routes.__The subscriber converts automatically items of the given type to exchanges before pushing them.__@param name the stream name_@param type the publisher converts automatically exchanges to the given type._@param <T> the type of items accepted by the subscriber_@return the subscriber associated with the stream;<T> Subscriber<T> streamSubscriber(String name, Class<T> type)_;returns,the,subscriber,associated,to,the,given,stream,name,a,subscriber,can,be,used,to,push,items,coming,from,external,reactive,streams,publishers,to,camel,routes,the,subscriber,converts,automatically,items,of,the,given,type,to,exchanges,before,pushing,them,param,name,the,stream,name,param,type,the,publisher,converts,automatically,exchanges,to,the,given,type,param,t,the,type,of,items,accepted,by,the,subscriber,return,the,subscriber,associated,with,the,stream;t,subscriber,t,stream,subscriber,string,name,class,t,type
CamelReactiveStreamsService -> <T> Subscriber<T> streamSubscriber(String name, Class<T> type)_;1493982605;Returns the subscriber associated to the given stream name._A subscriber can be used to push items coming from external reactive-streams publishers to Camel routes.__The subscriber converts automatically items of the given type to exchanges before pushing them.__@param name the stream name_@param type the publisher converts automatically exchanges to the given type._@param <T> the type of items accepted by the subscriber_@return the subscriber associated with the stream;<T> Subscriber<T> streamSubscriber(String name, Class<T> type)_;returns,the,subscriber,associated,to,the,given,stream,name,a,subscriber,can,be,used,to,push,items,coming,from,external,reactive,streams,publishers,to,camel,routes,the,subscriber,converts,automatically,items,of,the,given,type,to,exchanges,before,pushing,them,param,name,the,stream,name,param,type,the,publisher,converts,automatically,exchanges,to,the,given,type,param,t,the,type,of,items,accepted,by,the,subscriber,return,the,subscriber,associated,with,the,stream;t,subscriber,t,stream,subscriber,string,name,class,t,type
CamelReactiveStreamsService -> <T> Subscriber<T> streamSubscriber(String name, Class<T> type)_;1494845216;Returns the subscriber associated to the given stream name._A subscriber can be used to push items coming from external reactive-streams publishers to Camel routes.__The subscriber converts automatically items of the given type to exchanges before pushing them.__@param name the stream name_@param type the publisher converts automatically exchanges to the given type._@param <T> the type of items accepted by the subscriber_@return the subscriber associated with the stream;<T> Subscriber<T> streamSubscriber(String name, Class<T> type)_;returns,the,subscriber,associated,to,the,given,stream,name,a,subscriber,can,be,used,to,push,items,coming,from,external,reactive,streams,publishers,to,camel,routes,the,subscriber,converts,automatically,items,of,the,given,type,to,exchanges,before,pushing,them,param,name,the,stream,name,param,type,the,publisher,converts,automatically,exchanges,to,the,given,type,param,t,the,type,of,items,accepted,by,the,subscriber,return,the,subscriber,associated,with,the,stream;t,subscriber,t,stream,subscriber,string,name,class,t,type
CamelReactiveStreamsService -> <T> Subscriber<T> streamSubscriber(String name, Class<T> type)_;1495704737;Returns the subscriber associated to the given stream name._A subscriber can be used to push items coming from external reactive-streams publishers to Camel routes.__The subscriber converts automatically items of the given type to exchanges before pushing them.__@param name the stream name_@param type the publisher converts automatically exchanges to the given type._@param <T> the type of items accepted by the subscriber_@return the subscriber associated with the stream;<T> Subscriber<T> streamSubscriber(String name, Class<T> type)_;returns,the,subscriber,associated,to,the,given,stream,name,a,subscriber,can,be,used,to,push,items,coming,from,external,reactive,streams,publishers,to,camel,routes,the,subscriber,converts,automatically,items,of,the,given,type,to,exchanges,before,pushing,them,param,name,the,stream,name,param,type,the,publisher,converts,automatically,exchanges,to,the,given,type,param,t,the,type,of,items,accepted,by,the,subscriber,return,the,subscriber,associated,with,the,stream;t,subscriber,t,stream,subscriber,string,name,class,t,type
CamelReactiveStreamsService -> Publisher<Exchange> from(String uri)_;1486339409;Creates a new stream from the endpoint URI (used as Camel Consumer) and returns_the associated {@code Publisher}.__If a stream has already been created, the existing {@link Publisher} is returned.__@param uri the consumer uri_@return the publisher associated to the uri;Publisher<Exchange> from(String uri)_;creates,a,new,stream,from,the,endpoint,uri,used,as,camel,consumer,and,returns,the,associated,code,publisher,if,a,stream,has,already,been,created,the,existing,link,publisher,is,returned,param,uri,the,consumer,uri,return,the,publisher,associated,to,the,uri;publisher,exchange,from,string,uri
CamelReactiveStreamsService -> Publisher<Exchange> from(String uri)_;1491658900;Creates a new stream from the endpoint URI (used as Camel Consumer) and returns_the associated {@code Publisher}.__If a stream has already been created, the existing {@link Publisher} is returned.__@param uri the consumer uri_@return the publisher associated to the uri;Publisher<Exchange> from(String uri)_;creates,a,new,stream,from,the,endpoint,uri,used,as,camel,consumer,and,returns,the,associated,code,publisher,if,a,stream,has,already,been,created,the,existing,link,publisher,is,returned,param,uri,the,consumer,uri,return,the,publisher,associated,to,the,uri;publisher,exchange,from,string,uri
CamelReactiveStreamsService -> Publisher<Exchange> from(String uri)_;1491658900;Creates a new stream from the endpoint URI (used as Camel Consumer) and returns_the associated {@code Publisher}.__If a stream has already been created, the existing {@link Publisher} is returned.__@param uri the consumer uri_@return the publisher associated to the uri;Publisher<Exchange> from(String uri)_;creates,a,new,stream,from,the,endpoint,uri,used,as,camel,consumer,and,returns,the,associated,code,publisher,if,a,stream,has,already,been,created,the,existing,link,publisher,is,returned,param,uri,the,consumer,uri,return,the,publisher,associated,to,the,uri;publisher,exchange,from,string,uri
CamelReactiveStreamsService -> Publisher<Exchange> from(String uri)_;1493982605;Creates a new stream from the endpoint URI (used as Camel Consumer) and returns_the associated {@code Publisher}.__If a stream has already been created, the existing {@link Publisher} is returned.__@param uri the consumer uri_@return the publisher associated to the uri;Publisher<Exchange> from(String uri)_;creates,a,new,stream,from,the,endpoint,uri,used,as,camel,consumer,and,returns,the,associated,code,publisher,if,a,stream,has,already,been,created,the,existing,link,publisher,is,returned,param,uri,the,consumer,uri,return,the,publisher,associated,to,the,uri;publisher,exchange,from,string,uri
CamelReactiveStreamsService -> Publisher<Exchange> from(String uri)_;1494845216;Creates a new stream from the endpoint URI (used as Camel Consumer) and returns_the associated {@code Publisher}.__If a stream has already been created, the existing {@link Publisher} is returned.__@param uri the consumer uri_@return the publisher associated to the uri;Publisher<Exchange> from(String uri)_;creates,a,new,stream,from,the,endpoint,uri,used,as,camel,consumer,and,returns,the,associated,code,publisher,if,a,stream,has,already,been,created,the,existing,link,publisher,is,returned,param,uri,the,consumer,uri,return,the,publisher,associated,to,the,uri;publisher,exchange,from,string,uri
CamelReactiveStreamsService -> Publisher<Exchange> from(String uri)_;1495704737;Creates a new stream from the endpoint URI (used as Camel Consumer) and returns_the associated {@code Publisher}.__If a stream has already been created, the existing {@link Publisher} is returned.__@param uri the consumer uri_@return the publisher associated to the uri;Publisher<Exchange> from(String uri)_;creates,a,new,stream,from,the,endpoint,uri,used,as,camel,consumer,and,returns,the,associated,code,publisher,if,a,stream,has,already,been,created,the,existing,link,publisher,is,returned,param,uri,the,consumer,uri,return,the,publisher,associated,to,the,uri;publisher,exchange,from,string,uri
CamelReactiveStreamsService -> Publisher<Exchange> requestURI(String uri, Object data)_;1486126007;Creates a new route that uses the endpoint URI as producer, pushes the given data to the route_and returns a {@code Publisher} that will eventually return the resulting exchange or an error.__@param uri the producer uri_@param data the data to push_@return a publisher with the resulting exchange;Publisher<Exchange> requestURI(String uri, Object data)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,pushes,the,given,data,to,the,route,and,returns,a,code,publisher,that,will,eventually,return,the,resulting,exchange,or,an,error,param,uri,the,producer,uri,param,data,the,data,to,push,return,a,publisher,with,the,resulting,exchange;publisher,exchange,request,uri,string,uri,object,data
CamelReactiveStreamsService -> Publisher<Exchange> requestURI(String uri, Object data)_;1486143701;Creates a new route that uses the endpoint URI as producer, pushes the given data to the route_and returns a {@code Publisher} that will eventually return the resulting exchange or an error.__@param uri the producer uri_@param data the data to push_@return a publisher with the resulting exchange;Publisher<Exchange> requestURI(String uri, Object data)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,pushes,the,given,data,to,the,route,and,returns,a,code,publisher,that,will,eventually,return,the,resulting,exchange,or,an,error,param,uri,the,producer,uri,param,data,the,data,to,push,return,a,publisher,with,the,resulting,exchange;publisher,exchange,request,uri,string,uri,object,data
CamelReactiveStreamsService -> Publisher<Exchange> requestURI(String uri, Object data)_;1486195149;Creates a new route that uses the endpoint URI as producer, pushes the given data to the route_and returns a {@code Publisher} that will eventually return the resulting exchange or an error.__@param uri the producer uri_@param data the data to push_@return a publisher with the resulting exchange;Publisher<Exchange> requestURI(String uri, Object data)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,pushes,the,given,data,to,the,route,and,returns,a,code,publisher,that,will,eventually,return,the,resulting,exchange,or,an,error,param,uri,the,producer,uri,param,data,the,data,to,push,return,a,publisher,with,the,resulting,exchange;publisher,exchange,request,uri,string,uri,object,data
CamelReactiveStreamsService -> Function<Object, Publisher<Exchange>> to(String uri)_;1486339409;Creates a new route that uses the endpoint URI as producer, and returns a_function that pushes the data into the route and returns the_{@code Publisher} that holds the resulting exchange or the error.___This is a curryied version of {@link CamelReactiveStreamsService#to(String, Object)}.__@param uri the producer uri_@return a function that returns a publisher with the resulting exchange;Function<Object, Publisher<Exchange>> to(String uri)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,and,returns,a,function,that,pushes,the,data,into,the,route,and,returns,the,code,publisher,that,holds,the,resulting,exchange,or,the,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,to,string,object,param,uri,the,producer,uri,return,a,function,that,returns,a,publisher,with,the,resulting,exchange;function,object,publisher,exchange,to,string,uri
CamelReactiveStreamsService -> Function<Object, Publisher<Exchange>> to(String uri)_;1491658900;Creates a new route that uses the endpoint URI as producer, and returns a_function that pushes the data into the route and returns the_{@code Publisher} that holds the resulting exchange or the error.___This is a curryied version of {@link CamelReactiveStreamsService#to(String, Object)}.__@param uri the producer uri_@return a function that returns a publisher with the resulting exchange;Function<Object, Publisher<Exchange>> to(String uri)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,and,returns,a,function,that,pushes,the,data,into,the,route,and,returns,the,code,publisher,that,holds,the,resulting,exchange,or,the,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,to,string,object,param,uri,the,producer,uri,return,a,function,that,returns,a,publisher,with,the,resulting,exchange;function,object,publisher,exchange,to,string,uri
CamelReactiveStreamsService -> Function<Object, Publisher<Exchange>> to(String uri)_;1491658900;Creates a new route that uses the endpoint URI as producer, and returns a_function that pushes the data into the route and returns the_{@code Publisher} that holds the resulting exchange or the error.___This is a curryied version of {@link CamelReactiveStreamsService#to(String, Object)}.__@param uri the producer uri_@return a function that returns a publisher with the resulting exchange;Function<Object, Publisher<Exchange>> to(String uri)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,and,returns,a,function,that,pushes,the,data,into,the,route,and,returns,the,code,publisher,that,holds,the,resulting,exchange,or,the,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,to,string,object,param,uri,the,producer,uri,return,a,function,that,returns,a,publisher,with,the,resulting,exchange;function,object,publisher,exchange,to,string,uri
CamelReactiveStreamsService -> Function<Object, Publisher<Exchange>> to(String uri)_;1493982605;Creates a new route that uses the endpoint URI as producer, and returns a_function that pushes the data into the route and returns the_{@code Publisher} that holds the resulting exchange or the error.___This is a curryied version of {@link CamelReactiveStreamsService#to(String, Object)}.__@param uri the producer uri_@return a function that returns a publisher with the resulting exchange;Function<Object, Publisher<Exchange>> to(String uri)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,and,returns,a,function,that,pushes,the,data,into,the,route,and,returns,the,code,publisher,that,holds,the,resulting,exchange,or,the,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,to,string,object,param,uri,the,producer,uri,return,a,function,that,returns,a,publisher,with,the,resulting,exchange;function,object,publisher,exchange,to,string,uri
CamelReactiveStreamsService -> Function<Object, Publisher<Exchange>> to(String uri)_;1494845216;Creates a new route that uses the endpoint URI as producer, and returns a_function that pushes the data into the route and returns the_{@code Publisher} that holds the resulting exchange or the error.___This is a curryied version of {@link CamelReactiveStreamsService#to(String, Object)}.__@param uri the producer uri_@return a function that returns a publisher with the resulting exchange;Function<Object, Publisher<Exchange>> to(String uri)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,and,returns,a,function,that,pushes,the,data,into,the,route,and,returns,the,code,publisher,that,holds,the,resulting,exchange,or,the,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,to,string,object,param,uri,the,producer,uri,return,a,function,that,returns,a,publisher,with,the,resulting,exchange;function,object,publisher,exchange,to,string,uri
CamelReactiveStreamsService -> Function<Object, Publisher<Exchange>> to(String uri)_;1495704737;Creates a new route that uses the endpoint URI as producer, and returns a_function that pushes the data into the route and returns the_{@code Publisher} that holds the resulting exchange or the error.___This is a curryied version of {@link CamelReactiveStreamsService#to(String, Object)}.__@param uri the producer uri_@return a function that returns a publisher with the resulting exchange;Function<Object, Publisher<Exchange>> to(String uri)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,and,returns,a,function,that,pushes,the,data,into,the,route,and,returns,the,code,publisher,that,holds,the,resulting,exchange,or,the,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,to,string,object,param,uri,the,producer,uri,return,a,function,that,returns,a,publisher,with,the,resulting,exchange;function,object,publisher,exchange,to,string,uri
CamelReactiveStreamsService -> void process(String name, Exchange exchange, DispatchCallback<Exchange> callback)_;1485527491;Sends the exchange to all active subscriptions on the given stream._The callback is used to signal that the exchange has been delivered to the subscribers.__@param name the stream name_@param exchange the exchange to be forwarded to the external subscribers_@param callback the callback that signals the delivery of the exchange;void process(String name, Exchange exchange, DispatchCallback<Exchange> callback)_;sends,the,exchange,to,all,active,subscriptions,on,the,given,stream,the,callback,is,used,to,signal,that,the,exchange,has,been,delivered,to,the,subscribers,param,name,the,stream,name,param,exchange,the,exchange,to,be,forwarded,to,the,external,subscribers,param,callback,the,callback,that,signals,the,delivery,of,the,exchange;void,process,string,name,exchange,exchange,dispatch,callback,exchange,callback
CamelReactiveStreamsService -> void process(String name, Exchange exchange, DispatchCallback<Exchange> callback)_;1485527491;Used by Camel to send the exchange to all active subscriptions on the given stream._The callback is used to signal that the exchange has been delivered to the subscribers.__@param name the stream name_@param exchange the exchange to be forwarded to the external subscribers_@param callback the callback that signals the delivery of the exchange;void process(String name, Exchange exchange, DispatchCallback<Exchange> callback)_;used,by,camel,to,send,the,exchange,to,all,active,subscriptions,on,the,given,stream,the,callback,is,used,to,signal,that,the,exchange,has,been,delivered,to,the,subscribers,param,name,the,stream,name,param,exchange,the,exchange,to,be,forwarded,to,the,external,subscribers,param,callback,the,callback,that,signals,the,delivery,of,the,exchange;void,process,string,name,exchange,exchange,dispatch,callback,exchange,callback
CamelReactiveStreamsService -> void process(String name, Exchange exchange, DispatchCallback<Exchange> callback)_;1485527491;Used by Camel to send the exchange to all active subscriptions on the given stream._The callback is used to signal that the exchange has been delivered to the subscribers.__@param name the stream name_@param exchange the exchange to be forwarded to the external subscribers_@param callback the callback that signals the delivery of the exchange;void process(String name, Exchange exchange, DispatchCallback<Exchange> callback)_;used,by,camel,to,send,the,exchange,to,all,active,subscriptions,on,the,given,stream,the,callback,is,used,to,signal,that,the,exchange,has,been,delivered,to,the,subscribers,param,name,the,stream,name,param,exchange,the,exchange,to,be,forwarded,to,the,external,subscribers,param,callback,the,callback,that,signals,the,delivery,of,the,exchange;void,process,string,name,exchange,exchange,dispatch,callback,exchange,callback
CamelReactiveStreamsService -> void process(String name, Exchange exchange, DispatchCallback<Exchange> callback)_;1485858837;Used by Camel to send the exchange to all active subscriptions on the given stream._The callback is used to signal that the exchange has been delivered to the subscribers.__@param name the stream name_@param exchange the exchange to be forwarded to the external subscribers_@param callback the callback that signals the delivery of the exchange;void process(String name, Exchange exchange, DispatchCallback<Exchange> callback)_;used,by,camel,to,send,the,exchange,to,all,active,subscriptions,on,the,given,stream,the,callback,is,used,to,signal,that,the,exchange,has,been,delivered,to,the,subscribers,param,name,the,stream,name,param,exchange,the,exchange,to,be,forwarded,to,the,external,subscribers,param,callback,the,callback,that,signals,the,delivery,of,the,exchange;void,process,string,name,exchange,exchange,dispatch,callback,exchange,callback
CamelReactiveStreamsService -> void process(String name, Exchange exchange, DispatchCallback<Exchange> callback)_;1486051580;Used by Camel to send the exchange to all active subscriptions on the given stream._The callback is used to signal that the exchange has been delivered to the subscribers.__@param name the stream name_@param exchange the exchange to be forwarded to the external subscribers_@param callback the callback that signals the delivery of the exchange;void process(String name, Exchange exchange, DispatchCallback<Exchange> callback)_;used,by,camel,to,send,the,exchange,to,all,active,subscriptions,on,the,given,stream,the,callback,is,used,to,signal,that,the,exchange,has,been,delivered,to,the,subscribers,param,name,the,stream,name,param,exchange,the,exchange,to,be,forwarded,to,the,external,subscribers,param,callback,the,callback,that,signals,the,delivery,of,the,exchange;void,process,string,name,exchange,exchange,dispatch,callback,exchange,callback
CamelReactiveStreamsService -> void process(String name, Exchange exchange, DispatchCallback<Exchange> callback)_;1486051580;Used by Camel to send the exchange to all active subscriptions on the given stream._The callback is used to signal that the exchange has been delivered to the subscribers.__@param name the stream name_@param exchange the exchange to be forwarded to the external subscribers_@param callback the callback that signals the delivery of the exchange;void process(String name, Exchange exchange, DispatchCallback<Exchange> callback)_;used,by,camel,to,send,the,exchange,to,all,active,subscriptions,on,the,given,stream,the,callback,is,used,to,signal,that,the,exchange,has,been,delivered,to,the,subscribers,param,name,the,stream,name,param,exchange,the,exchange,to,be,forwarded,to,the,external,subscribers,param,callback,the,callback,that,signals,the,delivery,of,the,exchange;void,process,string,name,exchange,exchange,dispatch,callback,exchange,callback
CamelReactiveStreamsService -> void process(String name, Exchange exchange, DispatchCallback<Exchange> callback)_;1486126007;Used by Camel to send the exchange to all active subscriptions on the given stream._The callback is used to signal that the exchange has been delivered to the subscribers.__@param name the stream name_@param exchange the exchange to be forwarded to the external subscribers_@param callback the callback that signals the delivery of the exchange;void process(String name, Exchange exchange, DispatchCallback<Exchange> callback)_;used,by,camel,to,send,the,exchange,to,all,active,subscriptions,on,the,given,stream,the,callback,is,used,to,signal,that,the,exchange,has,been,delivered,to,the,subscribers,param,name,the,stream,name,param,exchange,the,exchange,to,be,forwarded,to,the,external,subscribers,param,callback,the,callback,that,signals,the,delivery,of,the,exchange;void,process,string,name,exchange,exchange,dispatch,callback,exchange,callback
CamelReactiveStreamsService -> Function<?, ? extends Publisher<Exchange>> request(String name)_;1486051580;Returns a function that pushes data into the specified Camel stream and_returns a Publisher (mono) holding the resulting exchange or an error.__This is a curryied version of {@link CamelReactiveStreamsService#request(String, Object)}.__@param name the stream name_@return a function that returns a publisher with the resulting exchange;Function<?, ? extends Publisher<Exchange>> request(String name)_;returns,a,function,that,pushes,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,resulting,exchange,or,an,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,request,string,object,param,name,the,stream,name,return,a,function,that,returns,a,publisher,with,the,resulting,exchange;function,extends,publisher,exchange,request,string,name
CamelReactiveStreamsService -> Function<?, ? extends Publisher<Exchange>> request(String name)_;1486126007;Returns a function that pushes data into the specified Camel stream and_returns a Publisher (mono) holding the resulting exchange or an error.__This is a curryied version of {@link CamelReactiveStreamsService#request(String, Object)}.__@param name the stream name_@return a function that returns a publisher with the resulting exchange;Function<?, ? extends Publisher<Exchange>> request(String name)_;returns,a,function,that,pushes,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,resulting,exchange,or,an,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,request,string,object,param,name,the,stream,name,return,a,function,that,returns,a,publisher,with,the,resulting,exchange;function,extends,publisher,exchange,request,string,name
CamelReactiveStreamsService -> Function<?, ? extends Publisher<Exchange>> request(String name)_;1486143701;Returns a function that pushes data into the specified Camel stream and_returns a Publisher (mono) holding the resulting exchange or an error.__This is a curryied version of {@link CamelReactiveStreamsService#request(String, Object)}.__@param name the stream name_@return a function that returns a publisher with the resulting exchange;Function<?, ? extends Publisher<Exchange>> request(String name)_;returns,a,function,that,pushes,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,resulting,exchange,or,an,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,request,string,object,param,name,the,stream,name,return,a,function,that,returns,a,publisher,with,the,resulting,exchange;function,extends,publisher,exchange,request,string,name
CamelReactiveStreamsService -> Function<?, ? extends Publisher<Exchange>> request(String name)_;1486195149;Returns a function that pushes data into the specified Camel stream and_returns a Publisher (mono) holding the resulting exchange or an error.__This is a curryied version of {@link CamelReactiveStreamsService#request(String, Object)}.__@param name the stream name_@return a function that returns a publisher with the resulting exchange;Function<?, ? extends Publisher<Exchange>> request(String name)_;returns,a,function,that,pushes,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,resulting,exchange,or,an,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,request,string,object,param,name,the,stream,name,return,a,function,that,returns,a,publisher,with,the,resulting,exchange;function,extends,publisher,exchange,request,string,name
CamelReactiveStreamsService -> <T> Function<Object, Publisher<T>> toStream(String name, Class<T> type)_;1486339409;Returns a function that pushes data into the specified Camel stream and_returns a Publisher (mono) holding the exchange output or an error.__This is a curryied version of {@link CamelReactiveStreamsService#toStream(String, Object, Class)}.__@param name the stream name_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a function that returns a publisher with the resulting data;<T> Function<Object, Publisher<T>> toStream(String name, Class<T> type)_;returns,a,function,that,pushes,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,exchange,output,or,an,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,to,stream,string,object,class,param,name,the,stream,name,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,function,that,returns,a,publisher,with,the,resulting,data;t,function,object,publisher,t,to,stream,string,name,class,t,type
CamelReactiveStreamsService -> <T> Function<Object, Publisher<T>> toStream(String name, Class<T> type)_;1491658900;Returns a function that pushes data into the specified Camel stream and_returns a Publisher (mono) holding the exchange output or an error.__This is a curryied version of {@link CamelReactiveStreamsService#toStream(String, Object, Class)}.__@param name the stream name_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a function that returns a publisher with the resulting data;<T> Function<Object, Publisher<T>> toStream(String name, Class<T> type)_;returns,a,function,that,pushes,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,exchange,output,or,an,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,to,stream,string,object,class,param,name,the,stream,name,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,function,that,returns,a,publisher,with,the,resulting,data;t,function,object,publisher,t,to,stream,string,name,class,t,type
CamelReactiveStreamsService -> <T> Function<Object, Publisher<T>> toStream(String name, Class<T> type)_;1491658900;Returns a function that pushes data into the specified Camel stream and_returns a Publisher (mono) holding the exchange output or an error.__This is a curryied version of {@link CamelReactiveStreamsService#toStream(String, Object, Class)}.__@param name the stream name_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a function that returns a publisher with the resulting data;<T> Function<Object, Publisher<T>> toStream(String name, Class<T> type)_;returns,a,function,that,pushes,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,exchange,output,or,an,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,to,stream,string,object,class,param,name,the,stream,name,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,function,that,returns,a,publisher,with,the,resulting,data;t,function,object,publisher,t,to,stream,string,name,class,t,type
CamelReactiveStreamsService -> <T> Function<Object, Publisher<T>> toStream(String name, Class<T> type)_;1493982605;Returns a function that pushes data into the specified Camel stream and_returns a Publisher (mono) holding the exchange output or an error.__This is a curryied version of {@link CamelReactiveStreamsService#toStream(String, Object, Class)}.__@param name the stream name_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a function that returns a publisher with the resulting data;<T> Function<Object, Publisher<T>> toStream(String name, Class<T> type)_;returns,a,function,that,pushes,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,exchange,output,or,an,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,to,stream,string,object,class,param,name,the,stream,name,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,function,that,returns,a,publisher,with,the,resulting,data;t,function,object,publisher,t,to,stream,string,name,class,t,type
CamelReactiveStreamsService -> <T> Function<Object, Publisher<T>> toStream(String name, Class<T> type)_;1494845216;Returns a function that pushes data into the specified Camel stream and_returns a Publisher (mono) holding the exchange output or an error.__This is a curryied version of {@link CamelReactiveStreamsService#toStream(String, Object, Class)}.__@param name the stream name_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a function that returns a publisher with the resulting data;<T> Function<Object, Publisher<T>> toStream(String name, Class<T> type)_;returns,a,function,that,pushes,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,exchange,output,or,an,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,to,stream,string,object,class,param,name,the,stream,name,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,function,that,returns,a,publisher,with,the,resulting,data;t,function,object,publisher,t,to,stream,string,name,class,t,type
CamelReactiveStreamsService -> <T> Function<Object, Publisher<T>> toStream(String name, Class<T> type)_;1495704737;Returns a function that pushes data into the specified Camel stream and_returns a Publisher (mono) holding the exchange output or an error.__This is a curryied version of {@link CamelReactiveStreamsService#toStream(String, Object, Class)}.__@param name the stream name_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a function that returns a publisher with the resulting data;<T> Function<Object, Publisher<T>> toStream(String name, Class<T> type)_;returns,a,function,that,pushes,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,exchange,output,or,an,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,to,stream,string,object,class,param,name,the,stream,name,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,function,that,returns,a,publisher,with,the,resulting,data;t,function,object,publisher,t,to,stream,string,name,class,t,type
CamelReactiveStreamsService -> void detachCamelProducer(String name)_;1485858837;Used by Camel to detach the existing producer from the given stream.__@param name the stream name;void detachCamelProducer(String name)_;used,by,camel,to,detach,the,existing,producer,from,the,given,stream,param,name,the,stream,name;void,detach,camel,producer,string,name
CamelReactiveStreamsService -> void detachCamelProducer(String name)_;1486051580;Used by Camel to detach the existing producer from the given stream.__@param name the stream name;void detachCamelProducer(String name)_;used,by,camel,to,detach,the,existing,producer,from,the,given,stream,param,name,the,stream,name;void,detach,camel,producer,string,name
CamelReactiveStreamsService -> void detachCamelProducer(String name)_;1486051580;Used by Camel to detach the existing producer from the given stream.__@param name the stream name;void detachCamelProducer(String name)_;used,by,camel,to,detach,the,existing,producer,from,the,given,stream,param,name,the,stream,name;void,detach,camel,producer,string,name
CamelReactiveStreamsService -> void detachCamelProducer(String name)_;1486126007;Used by Camel to detach the existing producer from the given stream.__@param name the stream name;void detachCamelProducer(String name)_;used,by,camel,to,detach,the,existing,producer,from,the,given,stream,param,name,the,stream,name;void,detach,camel,producer,string,name
CamelReactiveStreamsService -> void detachCamelProducer(String name)_;1486143701;Used by Camel to detach the existing producer from the given stream.__@param name the stream name;void detachCamelProducer(String name)_;used,by,camel,to,detach,the,existing,producer,from,the,given,stream,param,name,the,stream,name;void,detach,camel,producer,string,name
CamelReactiveStreamsService -> void detachCamelProducer(String name)_;1486195149;Used by Camel to detach the existing producer from the given stream.__@param name the stream name;void detachCamelProducer(String name)_;used,by,camel,to,detach,the,existing,producer,from,the,given,stream,param,name,the,stream,name;void,detach,camel,producer,string,name
CamelReactiveStreamsService -> void detachCamelProducer(String name)_;1486339409;Used by Camel to detach the existing producer from the given stream.__@param name the stream name;void detachCamelProducer(String name)_;used,by,camel,to,detach,the,existing,producer,from,the,given,stream,param,name,the,stream,name;void,detach,camel,producer,string,name
CamelReactiveStreamsService -> void detachCamelProducer(String name)_;1491658900;Used by Camel to detach the existing producer from the given stream.__@param name the stream name;void detachCamelProducer(String name)_;used,by,camel,to,detach,the,existing,producer,from,the,given,stream,param,name,the,stream,name;void,detach,camel,producer,string,name
CamelReactiveStreamsService -> void detachCamelProducer(String name)_;1491658900;Used by Camel to detach the existing producer from the given stream.__@param name the stream name;void detachCamelProducer(String name)_;used,by,camel,to,detach,the,existing,producer,from,the,given,stream,param,name,the,stream,name;void,detach,camel,producer,string,name
CamelReactiveStreamsService -> void detachCamelProducer(String name)_;1493982605;Used by Camel to detach the existing producer from the given stream.__@param name the stream name;void detachCamelProducer(String name)_;used,by,camel,to,detach,the,existing,producer,from,the,given,stream,param,name,the,stream,name;void,detach,camel,producer,string,name
CamelReactiveStreamsService -> void detachCamelProducer(String name)_;1494845216;Used by Camel to detach the existing producer from the given stream.__@param name the stream name;void detachCamelProducer(String name)_;used,by,camel,to,detach,the,existing,producer,from,the,given,stream,param,name,the,stream,name;void,detach,camel,producer,string,name
CamelReactiveStreamsService -> void detachCamelProducer(String name)_;1495704737;Used by Camel to detach the existing producer from the given stream.__@param name the stream name;void detachCamelProducer(String name)_;used,by,camel,to,detach,the,existing,producer,from,the,given,stream,param,name,the,stream,name;void,detach,camel,producer,string,name
CamelReactiveStreamsService -> <T> Publisher<T> toStream(String name, Object data, Class<T> type)_;1486339409;Pushes the given data into the specified Camel stream and returns a Publisher (mono) holding_the exchange output or an error.__@param name the stream name_@param data the data to push_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a publisher with the resulting data;<T> Publisher<T> toStream(String name, Object data, Class<T> type)_;pushes,the,given,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,exchange,output,or,an,error,param,name,the,stream,name,param,data,the,data,to,push,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,publisher,with,the,resulting,data;t,publisher,t,to,stream,string,name,object,data,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> toStream(String name, Object data, Class<T> type)_;1491658900;Pushes the given data into the specified Camel stream and returns a Publisher (mono) holding_the exchange output or an error.__@param name the stream name_@param data the data to push_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a publisher with the resulting data;<T> Publisher<T> toStream(String name, Object data, Class<T> type)_;pushes,the,given,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,exchange,output,or,an,error,param,name,the,stream,name,param,data,the,data,to,push,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,publisher,with,the,resulting,data;t,publisher,t,to,stream,string,name,object,data,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> toStream(String name, Object data, Class<T> type)_;1491658900;Pushes the given data into the specified Camel stream and returns a Publisher (mono) holding_the exchange output or an error.__@param name the stream name_@param data the data to push_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a publisher with the resulting data;<T> Publisher<T> toStream(String name, Object data, Class<T> type)_;pushes,the,given,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,exchange,output,or,an,error,param,name,the,stream,name,param,data,the,data,to,push,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,publisher,with,the,resulting,data;t,publisher,t,to,stream,string,name,object,data,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> toStream(String name, Object data, Class<T> type)_;1493982605;Pushes the given data into the specified Camel stream and returns a Publisher (mono) holding_the exchange output or an error.__@param name the stream name_@param data the data to push_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a publisher with the resulting data;<T> Publisher<T> toStream(String name, Object data, Class<T> type)_;pushes,the,given,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,exchange,output,or,an,error,param,name,the,stream,name,param,data,the,data,to,push,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,publisher,with,the,resulting,data;t,publisher,t,to,stream,string,name,object,data,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> toStream(String name, Object data, Class<T> type)_;1494845216;Pushes the given data into the specified Camel stream and returns a Publisher (mono) holding_the exchange output or an error.__@param name the stream name_@param data the data to push_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a publisher with the resulting data;<T> Publisher<T> toStream(String name, Object data, Class<T> type)_;pushes,the,given,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,exchange,output,or,an,error,param,name,the,stream,name,param,data,the,data,to,push,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,publisher,with,the,resulting,data;t,publisher,t,to,stream,string,name,object,data,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> toStream(String name, Object data, Class<T> type)_;1495704737;Pushes the given data into the specified Camel stream and returns a Publisher (mono) holding_the exchange output or an error.__@param name the stream name_@param data the data to push_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a publisher with the resulting data;<T> Publisher<T> toStream(String name, Object data, Class<T> type)_;pushes,the,given,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,exchange,output,or,an,error,param,name,the,stream,name,param,data,the,data,to,push,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,publisher,with,the,resulting,data;t,publisher,t,to,stream,string,name,object,data,class,t,type
CamelReactiveStreamsService -> <T> Function<Object, Publisher<T>> requestURI(String uri, Class<T> type)_;1486126007;Creates a new route that uses the endpoint URI as producer, and returns a_function that pushes the data into the route and returns the_{@code Publisher} that holds the exchange output or an error.__This is a curryied version of {@link CamelReactiveStreamsService#requestURI(String, Object, Class)}.__@param uri the producer uri_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a function that returns a publisher with the resulting data;<T> Function<Object, Publisher<T>> requestURI(String uri, Class<T> type)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,and,returns,a,function,that,pushes,the,data,into,the,route,and,returns,the,code,publisher,that,holds,the,exchange,output,or,an,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,request,uri,string,object,class,param,uri,the,producer,uri,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,function,that,returns,a,publisher,with,the,resulting,data;t,function,object,publisher,t,request,uri,string,uri,class,t,type
CamelReactiveStreamsService -> <T> Function<Object, Publisher<T>> requestURI(String uri, Class<T> type)_;1486143701;Creates a new route that uses the endpoint URI as producer, and returns a_function that pushes the data into the route and returns the_{@code Publisher} that holds the exchange output or an error.__This is a curryied version of {@link CamelReactiveStreamsService#requestURI(String, Object, Class)}.__@param uri the producer uri_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a function that returns a publisher with the resulting data;<T> Function<Object, Publisher<T>> requestURI(String uri, Class<T> type)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,and,returns,a,function,that,pushes,the,data,into,the,route,and,returns,the,code,publisher,that,holds,the,exchange,output,or,an,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,request,uri,string,object,class,param,uri,the,producer,uri,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,function,that,returns,a,publisher,with,the,resulting,data;t,function,object,publisher,t,request,uri,string,uri,class,t,type
CamelReactiveStreamsService -> <T> Function<Object, Publisher<T>> requestURI(String uri, Class<T> type)_;1486195149;Creates a new route that uses the endpoint URI as producer, and returns a_function that pushes the data into the route and returns the_{@code Publisher} that holds the exchange output or an error.__This is a curryied version of {@link CamelReactiveStreamsService#requestURI(String, Object, Class)}.__@param uri the producer uri_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a function that returns a publisher with the resulting data;<T> Function<Object, Publisher<T>> requestURI(String uri, Class<T> type)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,and,returns,a,function,that,pushes,the,data,into,the,route,and,returns,the,code,publisher,that,holds,the,exchange,output,or,an,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,request,uri,string,object,class,param,uri,the,producer,uri,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,function,that,returns,a,publisher,with,the,resulting,data;t,function,object,publisher,t,request,uri,string,uri,class,t,type
CamelReactiveStreamsService -> Publisher<Exchange> request(String name, Object data)_;1486051580;Pushes the given data into the specified Camel stream and returns a Publisher (mono) holding_the resulting exchange or an error.__@param name the stream name_@param data the data to push_@return an publisher with the resulting exchange;Publisher<Exchange> request(String name, Object data)_;pushes,the,given,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,resulting,exchange,or,an,error,param,name,the,stream,name,param,data,the,data,to,push,return,an,publisher,with,the,resulting,exchange;publisher,exchange,request,string,name,object,data
CamelReactiveStreamsService -> Publisher<Exchange> request(String name, Object data)_;1486051580;Pushes the given data into the specified Camel stream and returns a Publisher (mono) holding_the resulting exchange or an error.__@param name the stream name_@param data the data to push_@return a publisher with the resulting exchange;Publisher<Exchange> request(String name, Object data)_;pushes,the,given,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,resulting,exchange,or,an,error,param,name,the,stream,name,param,data,the,data,to,push,return,a,publisher,with,the,resulting,exchange;publisher,exchange,request,string,name,object,data
CamelReactiveStreamsService -> Publisher<Exchange> request(String name, Object data)_;1486126007;Pushes the given data into the specified Camel stream and returns a Publisher (mono) holding_the resulting exchange or an error.__@param name the stream name_@param data the data to push_@return a publisher with the resulting exchange;Publisher<Exchange> request(String name, Object data)_;pushes,the,given,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,resulting,exchange,or,an,error,param,name,the,stream,name,param,data,the,data,to,push,return,a,publisher,with,the,resulting,exchange;publisher,exchange,request,string,name,object,data
CamelReactiveStreamsService -> Publisher<Exchange> request(String name, Object data)_;1486143701;Pushes the given data into the specified Camel stream and returns a Publisher (mono) holding_the resulting exchange or an error.__@param name the stream name_@param data the data to push_@return a publisher with the resulting exchange;Publisher<Exchange> request(String name, Object data)_;pushes,the,given,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,resulting,exchange,or,an,error,param,name,the,stream,name,param,data,the,data,to,push,return,a,publisher,with,the,resulting,exchange;publisher,exchange,request,string,name,object,data
CamelReactiveStreamsService -> Publisher<Exchange> request(String name, Object data)_;1486195149;Pushes the given data into the specified Camel stream and returns a Publisher (mono) holding_the resulting exchange or an error.__@param name the stream name_@param data the data to push_@return a publisher with the resulting exchange;Publisher<Exchange> request(String name, Object data)_;pushes,the,given,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,resulting,exchange,or,an,error,param,name,the,stream,name,param,data,the,data,to,push,return,a,publisher,with,the,resulting,exchange;publisher,exchange,request,string,name,object,data
CamelReactiveStreamsService -> <T> void process(String uri, Class<T> type, Function<? super Publisher<T>, ?> processor)_;1486339409;Adds a processing step at the specified endpoint uri (usually a "direct:name") that delegates_to the given reactive processor.__The processor receives a {@link Publisher} of items of the given type and returns an object._If the output of the processor is a {@link Publisher}, it will be unwrapped before_delivering the result to the source route.__@param uri the uri where the processor should be attached_@param type  the type to which the body of the exchange should be converted_@param <T> the generic type of the Publisher that should be processed_@param processor the reactive processor;<T> void process(String uri, Class<T> type, Function<? super Publisher<T>, ?> processor)_;adds,a,processing,step,at,the,specified,endpoint,uri,usually,a,direct,name,that,delegates,to,the,given,reactive,processor,the,processor,receives,a,link,publisher,of,items,of,the,given,type,and,returns,an,object,if,the,output,of,the,processor,is,a,link,publisher,it,will,be,unwrapped,before,delivering,the,result,to,the,source,route,param,uri,the,uri,where,the,processor,should,be,attached,param,type,the,type,to,which,the,body,of,the,exchange,should,be,converted,param,t,the,generic,type,of,the,publisher,that,should,be,processed,param,processor,the,reactive,processor;t,void,process,string,uri,class,t,type,function,super,publisher,t,processor
CamelReactiveStreamsService -> <T> void process(String uri, Class<T> type, Function<? super Publisher<T>, ?> processor)_;1491658900;Adds a processing step at the specified endpoint uri (usually a "direct:name") that delegates_to the given reactive processor.__The processor receives a {@link Publisher} of items of the given type and returns an object._If the output of the processor is a {@link Publisher}, it will be unwrapped before_delivering the result to the source route.__@param uri the uri where the processor should be attached_@param type  the type to which the body of the exchange should be converted_@param <T> the generic type of the Publisher that should be processed_@param processor the reactive processor;<T> void process(String uri, Class<T> type, Function<? super Publisher<T>, ?> processor)_;adds,a,processing,step,at,the,specified,endpoint,uri,usually,a,direct,name,that,delegates,to,the,given,reactive,processor,the,processor,receives,a,link,publisher,of,items,of,the,given,type,and,returns,an,object,if,the,output,of,the,processor,is,a,link,publisher,it,will,be,unwrapped,before,delivering,the,result,to,the,source,route,param,uri,the,uri,where,the,processor,should,be,attached,param,type,the,type,to,which,the,body,of,the,exchange,should,be,converted,param,t,the,generic,type,of,the,publisher,that,should,be,processed,param,processor,the,reactive,processor;t,void,process,string,uri,class,t,type,function,super,publisher,t,processor
CamelReactiveStreamsService -> <T> void process(String uri, Class<T> type, Function<? super Publisher<T>, ?> processor)_;1491658900;Adds a processing step at the specified endpoint uri (usually a "direct:name") that delegates_to the given reactive processor.__The processor receives a {@link Publisher} of items of the given type and returns an object._If the output of the processor is a {@link Publisher}, it will be unwrapped before_delivering the result to the source route.__@param uri the uri where the processor should be attached_@param type  the type to which the body of the exchange should be converted_@param <T> the generic type of the Publisher that should be processed_@param processor the reactive processor;<T> void process(String uri, Class<T> type, Function<? super Publisher<T>, ?> processor)_;adds,a,processing,step,at,the,specified,endpoint,uri,usually,a,direct,name,that,delegates,to,the,given,reactive,processor,the,processor,receives,a,link,publisher,of,items,of,the,given,type,and,returns,an,object,if,the,output,of,the,processor,is,a,link,publisher,it,will,be,unwrapped,before,delivering,the,result,to,the,source,route,param,uri,the,uri,where,the,processor,should,be,attached,param,type,the,type,to,which,the,body,of,the,exchange,should,be,converted,param,t,the,generic,type,of,the,publisher,that,should,be,processed,param,processor,the,reactive,processor;t,void,process,string,uri,class,t,type,function,super,publisher,t,processor
CamelReactiveStreamsService -> <T> void process(String uri, Class<T> type, Function<? super Publisher<T>, ?> processor)_;1493982605;Adds a processing step at the specified endpoint uri (usually a "direct:name") that delegates_to the given reactive processor.__The processor receives a {@link Publisher} of items of the given type and returns an object._If the output of the processor is a {@link Publisher}, it will be unwrapped before_delivering the result to the source route.__@param uri the uri where the processor should be attached_@param type  the type to which the body of the exchange should be converted_@param <T> the generic type of the Publisher that should be processed_@param processor the reactive processor;<T> void process(String uri, Class<T> type, Function<? super Publisher<T>, ?> processor)_;adds,a,processing,step,at,the,specified,endpoint,uri,usually,a,direct,name,that,delegates,to,the,given,reactive,processor,the,processor,receives,a,link,publisher,of,items,of,the,given,type,and,returns,an,object,if,the,output,of,the,processor,is,a,link,publisher,it,will,be,unwrapped,before,delivering,the,result,to,the,source,route,param,uri,the,uri,where,the,processor,should,be,attached,param,type,the,type,to,which,the,body,of,the,exchange,should,be,converted,param,t,the,generic,type,of,the,publisher,that,should,be,processed,param,processor,the,reactive,processor;t,void,process,string,uri,class,t,type,function,super,publisher,t,processor
CamelReactiveStreamsService -> <T> void process(String uri, Class<T> type, Function<? super Publisher<T>, ?> processor)_;1494845216;Adds a processing step at the specified endpoint uri (usually a "direct:name") that delegates_to the given reactive processor.__The processor receives a {@link Publisher} of items of the given type and returns an object._If the output of the processor is a {@link Publisher}, it will be unwrapped before_delivering the result to the source route.__@param uri the uri where the processor should be attached_@param type  the type to which the body of the exchange should be converted_@param <T> the generic type of the Publisher that should be processed_@param processor the reactive processor;<T> void process(String uri, Class<T> type, Function<? super Publisher<T>, ?> processor)_;adds,a,processing,step,at,the,specified,endpoint,uri,usually,a,direct,name,that,delegates,to,the,given,reactive,processor,the,processor,receives,a,link,publisher,of,items,of,the,given,type,and,returns,an,object,if,the,output,of,the,processor,is,a,link,publisher,it,will,be,unwrapped,before,delivering,the,result,to,the,source,route,param,uri,the,uri,where,the,processor,should,be,attached,param,type,the,type,to,which,the,body,of,the,exchange,should,be,converted,param,t,the,generic,type,of,the,publisher,that,should,be,processed,param,processor,the,reactive,processor;t,void,process,string,uri,class,t,type,function,super,publisher,t,processor
CamelReactiveStreamsService -> <T> void process(String uri, Class<T> type, Function<? super Publisher<T>, ?> processor)_;1495704737;Adds a processing step at the specified endpoint uri (usually a "direct:name") that delegates_to the given reactive processor.__The processor receives a {@link Publisher} of items of the given type and returns an object._If the output of the processor is a {@link Publisher}, it will be unwrapped before_delivering the result to the source route.__@param uri the uri where the processor should be attached_@param type  the type to which the body of the exchange should be converted_@param <T> the generic type of the Publisher that should be processed_@param processor the reactive processor;<T> void process(String uri, Class<T> type, Function<? super Publisher<T>, ?> processor)_;adds,a,processing,step,at,the,specified,endpoint,uri,usually,a,direct,name,that,delegates,to,the,given,reactive,processor,the,processor,receives,a,link,publisher,of,items,of,the,given,type,and,returns,an,object,if,the,output,of,the,processor,is,a,link,publisher,it,will,be,unwrapped,before,delivering,the,result,to,the,source,route,param,uri,the,uri,where,the,processor,should,be,attached,param,type,the,type,to,which,the,body,of,the,exchange,should,be,converted,param,t,the,generic,type,of,the,publisher,that,should,be,processed,param,processor,the,reactive,processor;t,void,process,string,uri,class,t,type,function,super,publisher,t,processor
CamelReactiveStreamsService -> void detachCamelConsumer(String name)_;1485858837;Used by Camel to detach the existing consumer from the given stream.__@param name the stream name;void detachCamelConsumer(String name)_;used,by,camel,to,detach,the,existing,consumer,from,the,given,stream,param,name,the,stream,name;void,detach,camel,consumer,string,name
CamelReactiveStreamsService -> void detachCamelConsumer(String name)_;1486051580;Used by Camel to detach the existing consumer from the given stream.__@param name the stream name;void detachCamelConsumer(String name)_;used,by,camel,to,detach,the,existing,consumer,from,the,given,stream,param,name,the,stream,name;void,detach,camel,consumer,string,name
CamelReactiveStreamsService -> void detachCamelConsumer(String name)_;1486051580;Used by Camel to detach the existing consumer from the given stream.__@param name the stream name;void detachCamelConsumer(String name)_;used,by,camel,to,detach,the,existing,consumer,from,the,given,stream,param,name,the,stream,name;void,detach,camel,consumer,string,name
CamelReactiveStreamsService -> void detachCamelConsumer(String name)_;1486126007;Used by Camel to detach the existing consumer from the given stream.__@param name the stream name;void detachCamelConsumer(String name)_;used,by,camel,to,detach,the,existing,consumer,from,the,given,stream,param,name,the,stream,name;void,detach,camel,consumer,string,name
CamelReactiveStreamsService -> void detachCamelConsumer(String name)_;1486143701;Used by Camel to detach the existing consumer from the given stream.__@param name the stream name;void detachCamelConsumer(String name)_;used,by,camel,to,detach,the,existing,consumer,from,the,given,stream,param,name,the,stream,name;void,detach,camel,consumer,string,name
CamelReactiveStreamsService -> void detachCamelConsumer(String name)_;1486195149;Used by Camel to detach the existing consumer from the given stream.__@param name the stream name;void detachCamelConsumer(String name)_;used,by,camel,to,detach,the,existing,consumer,from,the,given,stream,param,name,the,stream,name;void,detach,camel,consumer,string,name
CamelReactiveStreamsService -> void detachCamelConsumer(String name)_;1486339409;Used by Camel to detach the existing consumer from the given stream.__@param name the stream name;void detachCamelConsumer(String name)_;used,by,camel,to,detach,the,existing,consumer,from,the,given,stream,param,name,the,stream,name;void,detach,camel,consumer,string,name
CamelReactiveStreamsService -> void detachCamelConsumer(String name)_;1491658900;Used by Camel to detach the existing consumer from the given stream.__@param name the stream name;void detachCamelConsumer(String name)_;used,by,camel,to,detach,the,existing,consumer,from,the,given,stream,param,name,the,stream,name;void,detach,camel,consumer,string,name
CamelReactiveStreamsService -> void detachCamelConsumer(String name)_;1491658900;Used by Camel to detach the existing consumer from the given stream.__@param name the stream name;void detachCamelConsumer(String name)_;used,by,camel,to,detach,the,existing,consumer,from,the,given,stream,param,name,the,stream,name;void,detach,camel,consumer,string,name
CamelReactiveStreamsService -> void detachCamelConsumer(String name)_;1493982605;Used by Camel to detach the existing consumer from the given stream.__@param name the stream name;void detachCamelConsumer(String name)_;used,by,camel,to,detach,the,existing,consumer,from,the,given,stream,param,name,the,stream,name;void,detach,camel,consumer,string,name
CamelReactiveStreamsService -> void detachCamelConsumer(String name)_;1494845216;Used by Camel to detach the existing consumer from the given stream.__@param name the stream name;void detachCamelConsumer(String name)_;used,by,camel,to,detach,the,existing,consumer,from,the,given,stream,param,name,the,stream,name;void,detach,camel,consumer,string,name
CamelReactiveStreamsService -> void detachCamelConsumer(String name)_;1495704737;Used by Camel to detach the existing consumer from the given stream.__@param name the stream name;void detachCamelConsumer(String name)_;used,by,camel,to,detach,the,existing,consumer,from,the,given,stream,param,name,the,stream,name;void,detach,camel,consumer,string,name
CamelReactiveStreamsService -> <T> Subscriber<T> getSubscriber(String name, Class<T> type)_;1485527491;Returns the subscriber associated to the given stream name._A subscriber can be used to push items coming from external reactive-streams publishers to Camel routes.__The subscriber converts automatically items of the given type to exchanges before pushing them.__@param name the stream name_@param type the publisher converts automatically exchanges to the given type._@param <T> the type of items accepted by the subscriber_@return the subscriber associated with the stream;<T> Subscriber<T> getSubscriber(String name, Class<T> type)_;returns,the,subscriber,associated,to,the,given,stream,name,a,subscriber,can,be,used,to,push,items,coming,from,external,reactive,streams,publishers,to,camel,routes,the,subscriber,converts,automatically,items,of,the,given,type,to,exchanges,before,pushing,them,param,name,the,stream,name,param,type,the,publisher,converts,automatically,exchanges,to,the,given,type,param,t,the,type,of,items,accepted,by,the,subscriber,return,the,subscriber,associated,with,the,stream;t,subscriber,t,get,subscriber,string,name,class,t,type
CamelReactiveStreamsService -> <T> Subscriber<T> getSubscriber(String name, Class<T> type)_;1485527491;Returns the subscriber associated to the given stream name._A subscriber can be used to push items coming from external reactive-streams publishers to Camel routes.__The subscriber converts automatically items of the given type to exchanges before pushing them.__@param name the stream name_@param type the publisher converts automatically exchanges to the given type._@param <T> the type of items accepted by the subscriber_@return the subscriber associated with the stream;<T> Subscriber<T> getSubscriber(String name, Class<T> type)_;returns,the,subscriber,associated,to,the,given,stream,name,a,subscriber,can,be,used,to,push,items,coming,from,external,reactive,streams,publishers,to,camel,routes,the,subscriber,converts,automatically,items,of,the,given,type,to,exchanges,before,pushing,them,param,name,the,stream,name,param,type,the,publisher,converts,automatically,exchanges,to,the,given,type,param,t,the,type,of,items,accepted,by,the,subscriber,return,the,subscriber,associated,with,the,stream;t,subscriber,t,get,subscriber,string,name,class,t,type
CamelReactiveStreamsService -> <T> Subscriber<T> getSubscriber(String name, Class<T> type)_;1485527491;Returns the subscriber associated to the given stream name._A subscriber can be used to push items coming from external reactive-streams publishers to Camel routes.__The subscriber converts automatically items of the given type to exchanges before pushing them.__@param name the stream name_@param type the publisher converts automatically exchanges to the given type._@param <T> the type of items accepted by the subscriber_@return the subscriber associated with the stream;<T> Subscriber<T> getSubscriber(String name, Class<T> type)_;returns,the,subscriber,associated,to,the,given,stream,name,a,subscriber,can,be,used,to,push,items,coming,from,external,reactive,streams,publishers,to,camel,routes,the,subscriber,converts,automatically,items,of,the,given,type,to,exchanges,before,pushing,them,param,name,the,stream,name,param,type,the,publisher,converts,automatically,exchanges,to,the,given,type,param,t,the,type,of,items,accepted,by,the,subscriber,return,the,subscriber,associated,with,the,stream;t,subscriber,t,get,subscriber,string,name,class,t,type
CamelReactiveStreamsService -> <T> Subscriber<T> getSubscriber(String name, Class<T> type)_;1485858837;Returns the subscriber associated to the given stream name._A subscriber can be used to push items coming from external reactive-streams publishers to Camel routes.__The subscriber converts automatically items of the given type to exchanges before pushing them.__@param name the stream name_@param type the publisher converts automatically exchanges to the given type._@param <T> the type of items accepted by the subscriber_@return the subscriber associated with the stream;<T> Subscriber<T> getSubscriber(String name, Class<T> type)_;returns,the,subscriber,associated,to,the,given,stream,name,a,subscriber,can,be,used,to,push,items,coming,from,external,reactive,streams,publishers,to,camel,routes,the,subscriber,converts,automatically,items,of,the,given,type,to,exchanges,before,pushing,them,param,name,the,stream,name,param,type,the,publisher,converts,automatically,exchanges,to,the,given,type,param,t,the,type,of,items,accepted,by,the,subscriber,return,the,subscriber,associated,with,the,stream;t,subscriber,t,get,subscriber,string,name,class,t,type
CamelReactiveStreamsService -> <T> Subscriber<T> getSubscriber(String name, Class<T> type)_;1486051580;Returns the subscriber associated to the given stream name._A subscriber can be used to push items coming from external reactive-streams publishers to Camel routes.__The subscriber converts automatically items of the given type to exchanges before pushing them.__@param name the stream name_@param type the publisher converts automatically exchanges to the given type._@param <T> the type of items accepted by the subscriber_@return the subscriber associated with the stream;<T> Subscriber<T> getSubscriber(String name, Class<T> type)_;returns,the,subscriber,associated,to,the,given,stream,name,a,subscriber,can,be,used,to,push,items,coming,from,external,reactive,streams,publishers,to,camel,routes,the,subscriber,converts,automatically,items,of,the,given,type,to,exchanges,before,pushing,them,param,name,the,stream,name,param,type,the,publisher,converts,automatically,exchanges,to,the,given,type,param,t,the,type,of,items,accepted,by,the,subscriber,return,the,subscriber,associated,with,the,stream;t,subscriber,t,get,subscriber,string,name,class,t,type
CamelReactiveStreamsService -> <T> Subscriber<T> getSubscriber(String name, Class<T> type)_;1486051580;Returns the subscriber associated to the given stream name._A subscriber can be used to push items coming from external reactive-streams publishers to Camel routes.__The subscriber converts automatically items of the given type to exchanges before pushing them.__@param name the stream name_@param type the publisher converts automatically exchanges to the given type._@param <T> the type of items accepted by the subscriber_@return the subscriber associated with the stream;<T> Subscriber<T> getSubscriber(String name, Class<T> type)_;returns,the,subscriber,associated,to,the,given,stream,name,a,subscriber,can,be,used,to,push,items,coming,from,external,reactive,streams,publishers,to,camel,routes,the,subscriber,converts,automatically,items,of,the,given,type,to,exchanges,before,pushing,them,param,name,the,stream,name,param,type,the,publisher,converts,automatically,exchanges,to,the,given,type,param,t,the,type,of,items,accepted,by,the,subscriber,return,the,subscriber,associated,with,the,stream;t,subscriber,t,get,subscriber,string,name,class,t,type
CamelReactiveStreamsService -> <T> Subscriber<T> getSubscriber(String name, Class<T> type)_;1486126007;Returns the subscriber associated to the given stream name._A subscriber can be used to push items coming from external reactive-streams publishers to Camel routes.__The subscriber converts automatically items of the given type to exchanges before pushing them.__@param name the stream name_@param type the publisher converts automatically exchanges to the given type._@param <T> the type of items accepted by the subscriber_@return the subscriber associated with the stream;<T> Subscriber<T> getSubscriber(String name, Class<T> type)_;returns,the,subscriber,associated,to,the,given,stream,name,a,subscriber,can,be,used,to,push,items,coming,from,external,reactive,streams,publishers,to,camel,routes,the,subscriber,converts,automatically,items,of,the,given,type,to,exchanges,before,pushing,them,param,name,the,stream,name,param,type,the,publisher,converts,automatically,exchanges,to,the,given,type,param,t,the,type,of,items,accepted,by,the,subscriber,return,the,subscriber,associated,with,the,stream;t,subscriber,t,get,subscriber,string,name,class,t,type
CamelReactiveStreamsService -> <T> Subscriber<T> getSubscriber(String name, Class<T> type)_;1486143701;Returns the subscriber associated to the given stream name._A subscriber can be used to push items coming from external reactive-streams publishers to Camel routes.__The subscriber converts automatically items of the given type to exchanges before pushing them.__@param name the stream name_@param type the publisher converts automatically exchanges to the given type._@param <T> the type of items accepted by the subscriber_@return the subscriber associated with the stream;<T> Subscriber<T> getSubscriber(String name, Class<T> type)_;returns,the,subscriber,associated,to,the,given,stream,name,a,subscriber,can,be,used,to,push,items,coming,from,external,reactive,streams,publishers,to,camel,routes,the,subscriber,converts,automatically,items,of,the,given,type,to,exchanges,before,pushing,them,param,name,the,stream,name,param,type,the,publisher,converts,automatically,exchanges,to,the,given,type,param,t,the,type,of,items,accepted,by,the,subscriber,return,the,subscriber,associated,with,the,stream;t,subscriber,t,get,subscriber,string,name,class,t,type
CamelReactiveStreamsService -> <T> Subscriber<T> getSubscriber(String name, Class<T> type)_;1486195149;Returns the subscriber associated to the given stream name._A subscriber can be used to push items coming from external reactive-streams publishers to Camel routes.__The subscriber converts automatically items of the given type to exchanges before pushing them.__@param name the stream name_@param type the publisher converts automatically exchanges to the given type._@param <T> the type of items accepted by the subscriber_@return the subscriber associated with the stream;<T> Subscriber<T> getSubscriber(String name, Class<T> type)_;returns,the,subscriber,associated,to,the,given,stream,name,a,subscriber,can,be,used,to,push,items,coming,from,external,reactive,streams,publishers,to,camel,routes,the,subscriber,converts,automatically,items,of,the,given,type,to,exchanges,before,pushing,them,param,name,the,stream,name,param,type,the,publisher,converts,automatically,exchanges,to,the,given,type,param,t,the,type,of,items,accepted,by,the,subscriber,return,the,subscriber,associated,with,the,stream;t,subscriber,t,get,subscriber,string,name,class,t,type
CamelReactiveStreamsService -> void sendCamelExchange(String name, Exchange exchange)_;1493982605;Used by Camel to send the exchange to all active subscriptions on the given stream._The callback is used to signal that the exchange has been delivered to the subscribers.__@param name the stream name_@param exchange the exchange to be forwarded to the external subscribers;void sendCamelExchange(String name, Exchange exchange)_;used,by,camel,to,send,the,exchange,to,all,active,subscriptions,on,the,given,stream,the,callback,is,used,to,signal,that,the,exchange,has,been,delivered,to,the,subscribers,param,name,the,stream,name,param,exchange,the,exchange,to,be,forwarded,to,the,external,subscribers;void,send,camel,exchange,string,name,exchange,exchange
CamelReactiveStreamsService -> void sendCamelExchange(String name, Exchange exchange)_;1494845216;Used by Camel to send the exchange to all active subscriptions on the given stream._The callback is used to signal that the exchange has been delivered to the subscribers.__@param name the stream name_@param exchange the exchange to be forwarded to the external subscribers;void sendCamelExchange(String name, Exchange exchange)_;used,by,camel,to,send,the,exchange,to,all,active,subscriptions,on,the,given,stream,the,callback,is,used,to,signal,that,the,exchange,has,been,delivered,to,the,subscribers,param,name,the,stream,name,param,exchange,the,exchange,to,be,forwarded,to,the,external,subscribers;void,send,camel,exchange,string,name,exchange,exchange
CamelReactiveStreamsService -> void sendCamelExchange(String name, Exchange exchange)_;1495704737;Used by Camel to send the exchange to all active subscriptions on the given stream._The callback is used to signal that the exchange has been delivered to the subscribers.__@param name the stream name_@param exchange the exchange to be forwarded to the external subscribers;void sendCamelExchange(String name, Exchange exchange)_;used,by,camel,to,send,the,exchange,to,all,active,subscriptions,on,the,given,stream,the,callback,is,used,to,signal,that,the,exchange,has,been,delivered,to,the,subscribers,param,name,the,stream,name,param,exchange,the,exchange,to,be,forwarded,to,the,external,subscribers;void,send,camel,exchange,string,name,exchange,exchange
CamelReactiveStreamsService -> <T> Publisher<T> from(String uri, Class<T> type)_;1486339409;Creates a new stream of the given type from the endpoint URI (used as Camel Consumer) and returns_the associated {@code Publisher}.__If a stream has already been created, the existing {@link Publisher} is returned.__@param uri the consumer uri_@param type the type of items emitted by the publisher_@param <T> the type to which Camel should convert exchanges to_@return the publisher associated to the uri;<T> Publisher<T> from(String uri, Class<T> type)_;creates,a,new,stream,of,the,given,type,from,the,endpoint,uri,used,as,camel,consumer,and,returns,the,associated,code,publisher,if,a,stream,has,already,been,created,the,existing,link,publisher,is,returned,param,uri,the,consumer,uri,param,type,the,type,of,items,emitted,by,the,publisher,param,t,the,type,to,which,camel,should,convert,exchanges,to,return,the,publisher,associated,to,the,uri;t,publisher,t,from,string,uri,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> from(String uri, Class<T> type)_;1491658900;Creates a new stream of the given type from the endpoint URI (used as Camel Consumer) and returns_the associated {@code Publisher}.__If a stream has already been created, the existing {@link Publisher} is returned.__@param uri the consumer uri_@param type the type of items emitted by the publisher_@param <T> the type to which Camel should convert exchanges to_@return the publisher associated to the uri;<T> Publisher<T> from(String uri, Class<T> type)_;creates,a,new,stream,of,the,given,type,from,the,endpoint,uri,used,as,camel,consumer,and,returns,the,associated,code,publisher,if,a,stream,has,already,been,created,the,existing,link,publisher,is,returned,param,uri,the,consumer,uri,param,type,the,type,of,items,emitted,by,the,publisher,param,t,the,type,to,which,camel,should,convert,exchanges,to,return,the,publisher,associated,to,the,uri;t,publisher,t,from,string,uri,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> from(String uri, Class<T> type)_;1491658900;Creates a new stream of the given type from the endpoint URI (used as Camel Consumer) and returns_the associated {@code Publisher}.__If a stream has already been created, the existing {@link Publisher} is returned.__@param uri the consumer uri_@param type the type of items emitted by the publisher_@param <T> the type to which Camel should convert exchanges to_@return the publisher associated to the uri;<T> Publisher<T> from(String uri, Class<T> type)_;creates,a,new,stream,of,the,given,type,from,the,endpoint,uri,used,as,camel,consumer,and,returns,the,associated,code,publisher,if,a,stream,has,already,been,created,the,existing,link,publisher,is,returned,param,uri,the,consumer,uri,param,type,the,type,of,items,emitted,by,the,publisher,param,t,the,type,to,which,camel,should,convert,exchanges,to,return,the,publisher,associated,to,the,uri;t,publisher,t,from,string,uri,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> from(String uri, Class<T> type)_;1493982605;Creates a new stream of the given type from the endpoint URI (used as Camel Consumer) and returns_the associated {@code Publisher}.__If a stream has already been created, the existing {@link Publisher} is returned.__@param uri the consumer uri_@param type the type of items emitted by the publisher_@param <T> the type to which Camel should convert exchanges to_@return the publisher associated to the uri;<T> Publisher<T> from(String uri, Class<T> type)_;creates,a,new,stream,of,the,given,type,from,the,endpoint,uri,used,as,camel,consumer,and,returns,the,associated,code,publisher,if,a,stream,has,already,been,created,the,existing,link,publisher,is,returned,param,uri,the,consumer,uri,param,type,the,type,of,items,emitted,by,the,publisher,param,t,the,type,to,which,camel,should,convert,exchanges,to,return,the,publisher,associated,to,the,uri;t,publisher,t,from,string,uri,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> from(String uri, Class<T> type)_;1494845216;Creates a new stream of the given type from the endpoint URI (used as Camel Consumer) and returns_the associated {@code Publisher}.__If a stream has already been created, the existing {@link Publisher} is returned.__@param uri the consumer uri_@param type the type of items emitted by the publisher_@param <T> the type to which Camel should convert exchanges to_@return the publisher associated to the uri;<T> Publisher<T> from(String uri, Class<T> type)_;creates,a,new,stream,of,the,given,type,from,the,endpoint,uri,used,as,camel,consumer,and,returns,the,associated,code,publisher,if,a,stream,has,already,been,created,the,existing,link,publisher,is,returned,param,uri,the,consumer,uri,param,type,the,type,of,items,emitted,by,the,publisher,param,t,the,type,to,which,camel,should,convert,exchanges,to,return,the,publisher,associated,to,the,uri;t,publisher,t,from,string,uri,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> from(String uri, Class<T> type)_;1495704737;Creates a new stream of the given type from the endpoint URI (used as Camel Consumer) and returns_the associated {@code Publisher}.__If a stream has already been created, the existing {@link Publisher} is returned.__@param uri the consumer uri_@param type the type of items emitted by the publisher_@param <T> the type to which Camel should convert exchanges to_@return the publisher associated to the uri;<T> Publisher<T> from(String uri, Class<T> type)_;creates,a,new,stream,of,the,given,type,from,the,endpoint,uri,used,as,camel,consumer,and,returns,the,associated,code,publisher,if,a,stream,has,already,been,created,the,existing,link,publisher,is,returned,param,uri,the,consumer,uri,param,type,the,type,of,items,emitted,by,the,publisher,param,t,the,type,to,which,camel,should,convert,exchanges,to,return,the,publisher,associated,to,the,uri;t,publisher,t,from,string,uri,class,t,type
CamelReactiveStreamsService -> Subscriber<Exchange> getSubscriber(String name)_;1485527491;Returns the subscriber associated to the given stream name._A subscriber can be used to push items coming from external reactive-streams publishers to Camel routes.__@param name the stream name_@return the subscriber associated with the stream;Subscriber<Exchange> getSubscriber(String name)_;returns,the,subscriber,associated,to,the,given,stream,name,a,subscriber,can,be,used,to,push,items,coming,from,external,reactive,streams,publishers,to,camel,routes,param,name,the,stream,name,return,the,subscriber,associated,with,the,stream;subscriber,exchange,get,subscriber,string,name
CamelReactiveStreamsService -> Subscriber<Exchange> getSubscriber(String name)_;1485527491;Returns the subscriber associated to the given stream name._A subscriber can be used to push items coming from external reactive-streams publishers to Camel routes.__@param name the stream name_@return the subscriber associated with the stream;Subscriber<Exchange> getSubscriber(String name)_;returns,the,subscriber,associated,to,the,given,stream,name,a,subscriber,can,be,used,to,push,items,coming,from,external,reactive,streams,publishers,to,camel,routes,param,name,the,stream,name,return,the,subscriber,associated,with,the,stream;subscriber,exchange,get,subscriber,string,name
CamelReactiveStreamsService -> Subscriber<Exchange> getSubscriber(String name)_;1485527491;Returns the subscriber associated to the given stream name._A subscriber can be used to push items coming from external reactive-streams publishers to Camel routes.__@param name the stream name_@return the subscriber associated with the stream;Subscriber<Exchange> getSubscriber(String name)_;returns,the,subscriber,associated,to,the,given,stream,name,a,subscriber,can,be,used,to,push,items,coming,from,external,reactive,streams,publishers,to,camel,routes,param,name,the,stream,name,return,the,subscriber,associated,with,the,stream;subscriber,exchange,get,subscriber,string,name
CamelReactiveStreamsService -> Subscriber<Exchange> getSubscriber(String name)_;1485858837;Returns the subscriber associated to the given stream name._A subscriber can be used to push items coming from external reactive-streams publishers to Camel routes.__@param name the stream name_@return the subscriber associated with the stream;Subscriber<Exchange> getSubscriber(String name)_;returns,the,subscriber,associated,to,the,given,stream,name,a,subscriber,can,be,used,to,push,items,coming,from,external,reactive,streams,publishers,to,camel,routes,param,name,the,stream,name,return,the,subscriber,associated,with,the,stream;subscriber,exchange,get,subscriber,string,name
CamelReactiveStreamsService -> Subscriber<Exchange> getSubscriber(String name)_;1486051580;Returns the subscriber associated to the given stream name._A subscriber can be used to push items coming from external reactive-streams publishers to Camel routes.__@param name the stream name_@return the subscriber associated with the stream;Subscriber<Exchange> getSubscriber(String name)_;returns,the,subscriber,associated,to,the,given,stream,name,a,subscriber,can,be,used,to,push,items,coming,from,external,reactive,streams,publishers,to,camel,routes,param,name,the,stream,name,return,the,subscriber,associated,with,the,stream;subscriber,exchange,get,subscriber,string,name
CamelReactiveStreamsService -> Subscriber<Exchange> getSubscriber(String name)_;1486051580;Returns the subscriber associated to the given stream name._A subscriber can be used to push items coming from external reactive-streams publishers to Camel routes.__@param name the stream name_@return the subscriber associated with the stream;Subscriber<Exchange> getSubscriber(String name)_;returns,the,subscriber,associated,to,the,given,stream,name,a,subscriber,can,be,used,to,push,items,coming,from,external,reactive,streams,publishers,to,camel,routes,param,name,the,stream,name,return,the,subscriber,associated,with,the,stream;subscriber,exchange,get,subscriber,string,name
CamelReactiveStreamsService -> Subscriber<Exchange> getSubscriber(String name)_;1486126007;Returns the subscriber associated to the given stream name._A subscriber can be used to push items coming from external reactive-streams publishers to Camel routes.__@param name the stream name_@return the subscriber associated with the stream;Subscriber<Exchange> getSubscriber(String name)_;returns,the,subscriber,associated,to,the,given,stream,name,a,subscriber,can,be,used,to,push,items,coming,from,external,reactive,streams,publishers,to,camel,routes,param,name,the,stream,name,return,the,subscriber,associated,with,the,stream;subscriber,exchange,get,subscriber,string,name
CamelReactiveStreamsService -> Subscriber<Exchange> getSubscriber(String name)_;1486143701;Returns the subscriber associated to the given stream name._A subscriber can be used to push items coming from external reactive-streams publishers to Camel routes.__@param name the stream name_@return the subscriber associated with the stream;Subscriber<Exchange> getSubscriber(String name)_;returns,the,subscriber,associated,to,the,given,stream,name,a,subscriber,can,be,used,to,push,items,coming,from,external,reactive,streams,publishers,to,camel,routes,param,name,the,stream,name,return,the,subscriber,associated,with,the,stream;subscriber,exchange,get,subscriber,string,name
CamelReactiveStreamsService -> Subscriber<Exchange> getSubscriber(String name)_;1486195149;Returns the subscriber associated to the given stream name._A subscriber can be used to push items coming from external reactive-streams publishers to Camel routes.__@param name the stream name_@return the subscriber associated with the stream;Subscriber<Exchange> getSubscriber(String name)_;returns,the,subscriber,associated,to,the,given,stream,name,a,subscriber,can,be,used,to,push,items,coming,from,external,reactive,streams,publishers,to,camel,routes,param,name,the,stream,name,return,the,subscriber,associated,with,the,stream;subscriber,exchange,get,subscriber,string,name
CamelReactiveStreamsService -> void attachConsumer(String name, ReactiveStreamsConsumer consumer)_;1485527491;Associate the subscriber of the stream with the given name to a specific Camel consumer._This method is used to bind a Camel route to a reactive stream.__@param name the stream name_@param consumer the consumer of the route_@throws IllegalStateException if another consumer is already associated with the given stream name;void attachConsumer(String name, ReactiveStreamsConsumer consumer)_;associate,the,subscriber,of,the,stream,with,the,given,name,to,a,specific,camel,consumer,this,method,is,used,to,bind,a,camel,route,to,a,reactive,stream,param,name,the,stream,name,param,consumer,the,consumer,of,the,route,throws,illegal,state,exception,if,another,consumer,is,already,associated,with,the,given,stream,name;void,attach,consumer,string,name,reactive,streams,consumer,consumer
CamelReactiveStreamsService -> void attachConsumer(String name, ReactiveStreamsConsumer consumer)_;1485527491;Used by Camel to associate the subscriber of the stream with the given name to a specific Camel consumer._This method is used to bind a Camel route to a reactive stream.__@param name the stream name_@param consumer the consumer of the route_@throws IllegalStateException if another consumer is already associated with the given stream name;void attachConsumer(String name, ReactiveStreamsConsumer consumer)_;used,by,camel,to,associate,the,subscriber,of,the,stream,with,the,given,name,to,a,specific,camel,consumer,this,method,is,used,to,bind,a,camel,route,to,a,reactive,stream,param,name,the,stream,name,param,consumer,the,consumer,of,the,route,throws,illegal,state,exception,if,another,consumer,is,already,associated,with,the,given,stream,name;void,attach,consumer,string,name,reactive,streams,consumer,consumer
CamelReactiveStreamsService -> void attachConsumer(String name, ReactiveStreamsConsumer consumer)_;1485527491;Used by Camel to associate the subscriber of the stream with the given name to a specific Camel consumer._This method is used to bind a Camel route to a reactive stream.__@param name the stream name_@param consumer the consumer of the route_@throws IllegalStateException if another consumer is already associated with the given stream name;void attachConsumer(String name, ReactiveStreamsConsumer consumer)_;used,by,camel,to,associate,the,subscriber,of,the,stream,with,the,given,name,to,a,specific,camel,consumer,this,method,is,used,to,bind,a,camel,route,to,a,reactive,stream,param,name,the,stream,name,param,consumer,the,consumer,of,the,route,throws,illegal,state,exception,if,another,consumer,is,already,associated,with,the,given,stream,name;void,attach,consumer,string,name,reactive,streams,consumer,consumer
CamelReactiveStreamsService -> void processFromURI(String uri, Function<? super Publisher<Exchange>, ?> processor)_;1486126007;Adds a processing step at the specified endpoint uri (usually a "direct:name") that delegates_to the given reactive processor.__The processor receives a {@link Publisher} of exchanges and returns an object._If the output of the processor is a {@link Publisher}, it will be unwrapped before_delivering the result to the source route.__@param uri the uri where the processor should be attached_@param processor the reactive processor;void processFromURI(String uri, Function<? super Publisher<Exchange>, ?> processor)_;adds,a,processing,step,at,the,specified,endpoint,uri,usually,a,direct,name,that,delegates,to,the,given,reactive,processor,the,processor,receives,a,link,publisher,of,exchanges,and,returns,an,object,if,the,output,of,the,processor,is,a,link,publisher,it,will,be,unwrapped,before,delivering,the,result,to,the,source,route,param,uri,the,uri,where,the,processor,should,be,attached,param,processor,the,reactive,processor;void,process,from,uri,string,uri,function,super,publisher,exchange,processor
CamelReactiveStreamsService -> void processFromURI(String uri, Function<? super Publisher<Exchange>, ?> processor)_;1486143701;Adds a processing step at the specified endpoint uri (usually a "direct:name") that delegates_to the given reactive processor.__The processor receives a {@link Publisher} of exchanges and returns an object._If the output of the processor is a {@link Publisher}, it will be unwrapped before_delivering the result to the source route.__@param uri the uri where the processor should be attached_@param processor the reactive processor;void processFromURI(String uri, Function<? super Publisher<Exchange>, ?> processor)_;adds,a,processing,step,at,the,specified,endpoint,uri,usually,a,direct,name,that,delegates,to,the,given,reactive,processor,the,processor,receives,a,link,publisher,of,exchanges,and,returns,an,object,if,the,output,of,the,processor,is,a,link,publisher,it,will,be,unwrapped,before,delivering,the,result,to,the,source,route,param,uri,the,uri,where,the,processor,should,be,attached,param,processor,the,reactive,processor;void,process,from,uri,string,uri,function,super,publisher,exchange,processor
CamelReactiveStreamsService -> void processFromURI(String uri, Function<? super Publisher<Exchange>, ?> processor)_;1486195149;Adds a processing step at the specified endpoint uri (usually a "direct:name") that delegates_to the given reactive processor.__The processor receives a {@link Publisher} of exchanges and returns an object._If the output of the processor is a {@link Publisher}, it will be unwrapped before_delivering the result to the source route.__@param uri the uri where the processor should be attached_@param processor the reactive processor;void processFromURI(String uri, Function<? super Publisher<Exchange>, ?> processor)_;adds,a,processing,step,at,the,specified,endpoint,uri,usually,a,direct,name,that,delegates,to,the,given,reactive,processor,the,processor,receives,a,link,publisher,of,exchanges,and,returns,an,object,if,the,output,of,the,processor,is,a,link,publisher,it,will,be,unwrapped,before,delivering,the,result,to,the,source,route,param,uri,the,uri,where,the,processor,should,be,attached,param,processor,the,reactive,processor;void,process,from,uri,string,uri,function,super,publisher,exchange,processor
CamelReactiveStreamsService -> CamelSubscriber attachCamelConsumer(String name, ReactiveStreamsConsumer consumer)_;1491658900;Used by Camel to associate the subscriber of the stream with the given name to a specific Camel consumer._This method is used to bind a Camel route to a reactive stream.__@param name the stream name_@param consumer the consumer of the route_@return the associated subscriber_@throws IllegalStateException if another consumer is already associated with the given stream name;CamelSubscriber attachCamelConsumer(String name, ReactiveStreamsConsumer consumer)_;used,by,camel,to,associate,the,subscriber,of,the,stream,with,the,given,name,to,a,specific,camel,consumer,this,method,is,used,to,bind,a,camel,route,to,a,reactive,stream,param,name,the,stream,name,param,consumer,the,consumer,of,the,route,return,the,associated,subscriber,throws,illegal,state,exception,if,another,consumer,is,already,associated,with,the,given,stream,name;camel,subscriber,attach,camel,consumer,string,name,reactive,streams,consumer,consumer
CamelReactiveStreamsService -> CamelSubscriber attachCamelConsumer(String name, ReactiveStreamsConsumer consumer)_;1491658900;Used by Camel to associate the subscriber of the stream with the given name to a specific Camel consumer._This method is used to bind a Camel route to a reactive stream.__@param name the stream name_@param consumer the consumer of the route_@return the associated subscriber_@throws IllegalStateException if another consumer is already associated with the given stream name;CamelSubscriber attachCamelConsumer(String name, ReactiveStreamsConsumer consumer)_;used,by,camel,to,associate,the,subscriber,of,the,stream,with,the,given,name,to,a,specific,camel,consumer,this,method,is,used,to,bind,a,camel,route,to,a,reactive,stream,param,name,the,stream,name,param,consumer,the,consumer,of,the,route,return,the,associated,subscriber,throws,illegal,state,exception,if,another,consumer,is,already,associated,with,the,given,stream,name;camel,subscriber,attach,camel,consumer,string,name,reactive,streams,consumer,consumer
CamelReactiveStreamsService -> CamelSubscriber attachCamelConsumer(String name, ReactiveStreamsConsumer consumer)_;1493982605;Used by Camel to associate the subscriber of the stream with the given name to a specific Camel consumer._This method is used to bind a Camel route to a reactive stream.__@param name the stream name_@param consumer the consumer of the route_@return the associated subscriber_@throws IllegalStateException if another consumer is already associated with the given stream name;CamelSubscriber attachCamelConsumer(String name, ReactiveStreamsConsumer consumer)_;used,by,camel,to,associate,the,subscriber,of,the,stream,with,the,given,name,to,a,specific,camel,consumer,this,method,is,used,to,bind,a,camel,route,to,a,reactive,stream,param,name,the,stream,name,param,consumer,the,consumer,of,the,route,return,the,associated,subscriber,throws,illegal,state,exception,if,another,consumer,is,already,associated,with,the,given,stream,name;camel,subscriber,attach,camel,consumer,string,name,reactive,streams,consumer,consumer
CamelReactiveStreamsService -> Function<?, ? extends Publisher<Exchange>> toStream(String name)_;1486339409;Returns a function that pushes data into the specified Camel stream and_returns a Publisher (mono) holding the resulting exchange or an error.__This is a curryied version of {@link CamelReactiveStreamsService#toStream(String, Object)}.__@param name the stream name_@return a function that returns a publisher with the resulting exchange;Function<?, ? extends Publisher<Exchange>> toStream(String name)_;returns,a,function,that,pushes,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,resulting,exchange,or,an,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,to,stream,string,object,param,name,the,stream,name,return,a,function,that,returns,a,publisher,with,the,resulting,exchange;function,extends,publisher,exchange,to,stream,string,name
CamelReactiveStreamsService -> Function<?, ? extends Publisher<Exchange>> toStream(String name)_;1491658900;Returns a function that pushes data into the specified Camel stream and_returns a Publisher (mono) holding the resulting exchange or an error.__This is a curryied version of {@link CamelReactiveStreamsService#toStream(String, Object)}.__@param name the stream name_@return a function that returns a publisher with the resulting exchange;Function<?, ? extends Publisher<Exchange>> toStream(String name)_;returns,a,function,that,pushes,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,resulting,exchange,or,an,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,to,stream,string,object,param,name,the,stream,name,return,a,function,that,returns,a,publisher,with,the,resulting,exchange;function,extends,publisher,exchange,to,stream,string,name
CamelReactiveStreamsService -> Function<?, ? extends Publisher<Exchange>> toStream(String name)_;1491658900;Returns a function that pushes data into the specified Camel stream and_returns a Publisher (mono) holding the resulting exchange or an error.__This is a curryied version of {@link CamelReactiveStreamsService#toStream(String, Object)}.__@param name the stream name_@return a function that returns a publisher with the resulting exchange;Function<?, ? extends Publisher<Exchange>> toStream(String name)_;returns,a,function,that,pushes,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,resulting,exchange,or,an,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,to,stream,string,object,param,name,the,stream,name,return,a,function,that,returns,a,publisher,with,the,resulting,exchange;function,extends,publisher,exchange,to,stream,string,name
CamelReactiveStreamsService -> Function<?, ? extends Publisher<Exchange>> toStream(String name)_;1493982605;Returns a function that pushes data into the specified Camel stream and_returns a Publisher (mono) holding the resulting exchange or an error.__This is a curryied version of {@link CamelReactiveStreamsService#toStream(String, Object)}.__@param name the stream name_@return a function that returns a publisher with the resulting exchange;Function<?, ? extends Publisher<Exchange>> toStream(String name)_;returns,a,function,that,pushes,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,resulting,exchange,or,an,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,to,stream,string,object,param,name,the,stream,name,return,a,function,that,returns,a,publisher,with,the,resulting,exchange;function,extends,publisher,exchange,to,stream,string,name
CamelReactiveStreamsService -> Function<?, ? extends Publisher<Exchange>> toStream(String name)_;1494845216;Returns a function that pushes data into the specified Camel stream and_returns a Publisher (mono) holding the resulting exchange or an error.__This is a curryied version of {@link CamelReactiveStreamsService#toStream(String, Object)}.__@param name the stream name_@return a function that returns a publisher with the resulting exchange;Function<?, ? extends Publisher<Exchange>> toStream(String name)_;returns,a,function,that,pushes,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,resulting,exchange,or,an,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,to,stream,string,object,param,name,the,stream,name,return,a,function,that,returns,a,publisher,with,the,resulting,exchange;function,extends,publisher,exchange,to,stream,string,name
CamelReactiveStreamsService -> Function<?, ? extends Publisher<Exchange>> toStream(String name)_;1495704737;Returns a function that pushes data into the specified Camel stream and_returns a Publisher (mono) holding the resulting exchange or an error.__This is a curryied version of {@link CamelReactiveStreamsService#toStream(String, Object)}.__@param name the stream name_@return a function that returns a publisher with the resulting exchange;Function<?, ? extends Publisher<Exchange>> toStream(String name)_;returns,a,function,that,pushes,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,resulting,exchange,or,an,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,to,stream,string,object,param,name,the,stream,name,return,a,function,that,returns,a,publisher,with,the,resulting,exchange;function,extends,publisher,exchange,to,stream,string,name
CamelReactiveStreamsService -> Publisher<Exchange> publishURI(String uri)_;1486126007;Creates a new stream from the endpoint URI (used as Camel Consumer) and returns_the associated {@code Publisher}.__If a stream has already been created, the existing {@link Publisher} is returned.__@param uri the consumer uri_@return the publisher associated to the uri;Publisher<Exchange> publishURI(String uri)_;creates,a,new,stream,from,the,endpoint,uri,used,as,camel,consumer,and,returns,the,associated,code,publisher,if,a,stream,has,already,been,created,the,existing,link,publisher,is,returned,param,uri,the,consumer,uri,return,the,publisher,associated,to,the,uri;publisher,exchange,publish,uri,string,uri
CamelReactiveStreamsService -> Publisher<Exchange> publishURI(String uri)_;1486143701;Creates a new stream from the endpoint URI (used as Camel Consumer) and returns_the associated {@code Publisher}.__If a stream has already been created, the existing {@link Publisher} is returned.__@param uri the consumer uri_@return the publisher associated to the uri;Publisher<Exchange> publishURI(String uri)_;creates,a,new,stream,from,the,endpoint,uri,used,as,camel,consumer,and,returns,the,associated,code,publisher,if,a,stream,has,already,been,created,the,existing,link,publisher,is,returned,param,uri,the,consumer,uri,return,the,publisher,associated,to,the,uri;publisher,exchange,publish,uri,string,uri
CamelReactiveStreamsService -> Publisher<Exchange> publishURI(String uri)_;1486195149;Creates a new stream from the endpoint URI (used as Camel Consumer) and returns_the associated {@code Publisher}.__If a stream has already been created, the existing {@link Publisher} is returned.__@param uri the consumer uri_@return the publisher associated to the uri;Publisher<Exchange> publishURI(String uri)_;creates,a,new,stream,from,the,endpoint,uri,used,as,camel,consumer,and,returns,the,associated,code,publisher,if,a,stream,has,already,been,created,the,existing,link,publisher,is,returned,param,uri,the,consumer,uri,return,the,publisher,associated,to,the,uri;publisher,exchange,publish,uri,string,uri
CamelReactiveStreamsService -> Publisher<Exchange> to(String uri, Object data)_;1486339409;Creates a new route that uses the endpoint URI as producer, pushes the given data to the route_and returns a {@code Publisher} that will eventually return the resulting exchange or an error.__@param uri the producer uri_@param data the data to push_@return a publisher with the resulting exchange;Publisher<Exchange> to(String uri, Object data)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,pushes,the,given,data,to,the,route,and,returns,a,code,publisher,that,will,eventually,return,the,resulting,exchange,or,an,error,param,uri,the,producer,uri,param,data,the,data,to,push,return,a,publisher,with,the,resulting,exchange;publisher,exchange,to,string,uri,object,data
CamelReactiveStreamsService -> Publisher<Exchange> to(String uri, Object data)_;1491658900;Creates a new route that uses the endpoint URI as producer, pushes the given data to the route_and returns a {@code Publisher} that will eventually return the resulting exchange or an error.__@param uri the producer uri_@param data the data to push_@return a publisher with the resulting exchange;Publisher<Exchange> to(String uri, Object data)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,pushes,the,given,data,to,the,route,and,returns,a,code,publisher,that,will,eventually,return,the,resulting,exchange,or,an,error,param,uri,the,producer,uri,param,data,the,data,to,push,return,a,publisher,with,the,resulting,exchange;publisher,exchange,to,string,uri,object,data
CamelReactiveStreamsService -> Publisher<Exchange> to(String uri, Object data)_;1491658900;Creates a new route that uses the endpoint URI as producer, pushes the given data to the route_and returns a {@code Publisher} that will eventually return the resulting exchange or an error.__@param uri the producer uri_@param data the data to push_@return a publisher with the resulting exchange;Publisher<Exchange> to(String uri, Object data)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,pushes,the,given,data,to,the,route,and,returns,a,code,publisher,that,will,eventually,return,the,resulting,exchange,or,an,error,param,uri,the,producer,uri,param,data,the,data,to,push,return,a,publisher,with,the,resulting,exchange;publisher,exchange,to,string,uri,object,data
CamelReactiveStreamsService -> Publisher<Exchange> to(String uri, Object data)_;1493982605;Creates a new route that uses the endpoint URI as producer, pushes the given data to the route_and returns a {@code Publisher} that will eventually return the resulting exchange or an error.__@param uri the producer uri_@param data the data to push_@return a publisher with the resulting exchange;Publisher<Exchange> to(String uri, Object data)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,pushes,the,given,data,to,the,route,and,returns,a,code,publisher,that,will,eventually,return,the,resulting,exchange,or,an,error,param,uri,the,producer,uri,param,data,the,data,to,push,return,a,publisher,with,the,resulting,exchange;publisher,exchange,to,string,uri,object,data
CamelReactiveStreamsService -> Publisher<Exchange> to(String uri, Object data)_;1494845216;Creates a new route that uses the endpoint URI as producer, pushes the given data to the route_and returns a {@code Publisher} that will eventually return the resulting exchange or an error.__@param uri the producer uri_@param data the data to push_@return a publisher with the resulting exchange;Publisher<Exchange> to(String uri, Object data)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,pushes,the,given,data,to,the,route,and,returns,a,code,publisher,that,will,eventually,return,the,resulting,exchange,or,an,error,param,uri,the,producer,uri,param,data,the,data,to,push,return,a,publisher,with,the,resulting,exchange;publisher,exchange,to,string,uri,object,data
CamelReactiveStreamsService -> Publisher<Exchange> to(String uri, Object data)_;1495704737;Creates a new route that uses the endpoint URI as producer, pushes the given data to the route_and returns a {@code Publisher} that will eventually return the resulting exchange or an error.__@param uri the producer uri_@param data the data to push_@return a publisher with the resulting exchange;Publisher<Exchange> to(String uri, Object data)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,pushes,the,given,data,to,the,route,and,returns,a,code,publisher,that,will,eventually,return,the,resulting,exchange,or,an,error,param,uri,the,producer,uri,param,data,the,data,to,push,return,a,publisher,with,the,resulting,exchange;publisher,exchange,to,string,uri,object,data
CamelReactiveStreamsService -> ReactiveStreamsCamelSubscriber attachCamelConsumer(String name, ReactiveStreamsConsumer consumer)_;1494845216;Used by Camel to associate the subscriber of the stream with the given name to a specific Camel consumer._This method is used to bind a Camel route to a reactive stream.__@param name the stream name_@param consumer the consumer of the route_@return the associated subscriber_@throws IllegalStateException if another consumer is already associated with the given stream name;ReactiveStreamsCamelSubscriber attachCamelConsumer(String name, ReactiveStreamsConsumer consumer)_;used,by,camel,to,associate,the,subscriber,of,the,stream,with,the,given,name,to,a,specific,camel,consumer,this,method,is,used,to,bind,a,camel,route,to,a,reactive,stream,param,name,the,stream,name,param,consumer,the,consumer,of,the,route,return,the,associated,subscriber,throws,illegal,state,exception,if,another,consumer,is,already,associated,with,the,given,stream,name;reactive,streams,camel,subscriber,attach,camel,consumer,string,name,reactive,streams,consumer,consumer
CamelReactiveStreamsService -> ReactiveStreamsCamelSubscriber attachCamelConsumer(String name, ReactiveStreamsConsumer consumer)_;1495704737;Used by Camel to associate the subscriber of the stream with the given name to a specific Camel consumer._This method is used to bind a Camel route to a reactive stream.__@param name the stream name_@param consumer the consumer of the route_@return the associated subscriber_@throws IllegalStateException if another consumer is already associated with the given stream name;ReactiveStreamsCamelSubscriber attachCamelConsumer(String name, ReactiveStreamsConsumer consumer)_;used,by,camel,to,associate,the,subscriber,of,the,stream,with,the,given,name,to,a,specific,camel,consumer,this,method,is,used,to,bind,a,camel,route,to,a,reactive,stream,param,name,the,stream,name,param,consumer,the,consumer,of,the,route,return,the,associated,subscriber,throws,illegal,state,exception,if,another,consumer,is,already,associated,with,the,given,stream,name;reactive,streams,camel,subscriber,attach,camel,consumer,string,name,reactive,streams,consumer,consumer
CamelReactiveStreamsService -> Function<?, ? extends Publisher<Exchange>> requestURI(String uri)_;1486126007;Creates a new route that uses the endpoint URI as producer, and returns a_function that pushes the data into the route and returns the_{@code Publisher} that holds the resulting exchange or the error.___This is a curryied version of {@link CamelReactiveStreamsService#requestURI(String, Object)}.__@param uri the producer uri_@return a function that returns a publisher with the resulting exchange;Function<?, ? extends Publisher<Exchange>> requestURI(String uri)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,and,returns,a,function,that,pushes,the,data,into,the,route,and,returns,the,code,publisher,that,holds,the,resulting,exchange,or,the,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,request,uri,string,object,param,uri,the,producer,uri,return,a,function,that,returns,a,publisher,with,the,resulting,exchange;function,extends,publisher,exchange,request,uri,string,uri
CamelReactiveStreamsService -> Function<?, ? extends Publisher<Exchange>> requestURI(String uri)_;1486143701;Creates a new route that uses the endpoint URI as producer, and returns a_function that pushes the data into the route and returns the_{@code Publisher} that holds the resulting exchange or the error.___This is a curryied version of {@link CamelReactiveStreamsService#requestURI(String, Object)}.__@param uri the producer uri_@return a function that returns a publisher with the resulting exchange;Function<?, ? extends Publisher<Exchange>> requestURI(String uri)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,and,returns,a,function,that,pushes,the,data,into,the,route,and,returns,the,code,publisher,that,holds,the,resulting,exchange,or,the,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,request,uri,string,object,param,uri,the,producer,uri,return,a,function,that,returns,a,publisher,with,the,resulting,exchange;function,extends,publisher,exchange,request,uri,string,uri
CamelReactiveStreamsService -> void sendCamelExchange(String name, Exchange exchange, DispatchCallback<Exchange> callback)_;1486143701;Used by Camel to send the exchange to all active subscriptions on the given stream._The callback is used to signal that the exchange has been delivered to the subscribers.__@param name the stream name_@param exchange the exchange to be forwarded to the external subscribers_@param callback the callback that signals the delivery of the exchange;void sendCamelExchange(String name, Exchange exchange, DispatchCallback<Exchange> callback)_;used,by,camel,to,send,the,exchange,to,all,active,subscriptions,on,the,given,stream,the,callback,is,used,to,signal,that,the,exchange,has,been,delivered,to,the,subscribers,param,name,the,stream,name,param,exchange,the,exchange,to,be,forwarded,to,the,external,subscribers,param,callback,the,callback,that,signals,the,delivery,of,the,exchange;void,send,camel,exchange,string,name,exchange,exchange,dispatch,callback,exchange,callback
CamelReactiveStreamsService -> void sendCamelExchange(String name, Exchange exchange, DispatchCallback<Exchange> callback)_;1486195149;Used by Camel to send the exchange to all active subscriptions on the given stream._The callback is used to signal that the exchange has been delivered to the subscribers.__@param name the stream name_@param exchange the exchange to be forwarded to the external subscribers_@param callback the callback that signals the delivery of the exchange;void sendCamelExchange(String name, Exchange exchange, DispatchCallback<Exchange> callback)_;used,by,camel,to,send,the,exchange,to,all,active,subscriptions,on,the,given,stream,the,callback,is,used,to,signal,that,the,exchange,has,been,delivered,to,the,subscribers,param,name,the,stream,name,param,exchange,the,exchange,to,be,forwarded,to,the,external,subscribers,param,callback,the,callback,that,signals,the,delivery,of,the,exchange;void,send,camel,exchange,string,name,exchange,exchange,dispatch,callback,exchange,callback
CamelReactiveStreamsService -> void sendCamelExchange(String name, Exchange exchange, DispatchCallback<Exchange> callback)_;1486339409;Used by Camel to send the exchange to all active subscriptions on the given stream._The callback is used to signal that the exchange has been delivered to the subscribers.__@param name the stream name_@param exchange the exchange to be forwarded to the external subscribers_@param callback the callback that signals the delivery of the exchange;void sendCamelExchange(String name, Exchange exchange, DispatchCallback<Exchange> callback)_;used,by,camel,to,send,the,exchange,to,all,active,subscriptions,on,the,given,stream,the,callback,is,used,to,signal,that,the,exchange,has,been,delivered,to,the,subscribers,param,name,the,stream,name,param,exchange,the,exchange,to,be,forwarded,to,the,external,subscribers,param,callback,the,callback,that,signals,the,delivery,of,the,exchange;void,send,camel,exchange,string,name,exchange,exchange,dispatch,callback,exchange,callback
CamelReactiveStreamsService -> void sendCamelExchange(String name, Exchange exchange, DispatchCallback<Exchange> callback)_;1491658900;Used by Camel to send the exchange to all active subscriptions on the given stream._The callback is used to signal that the exchange has been delivered to the subscribers.__@param name the stream name_@param exchange the exchange to be forwarded to the external subscribers_@param callback the callback that signals the delivery of the exchange;void sendCamelExchange(String name, Exchange exchange, DispatchCallback<Exchange> callback)_;used,by,camel,to,send,the,exchange,to,all,active,subscriptions,on,the,given,stream,the,callback,is,used,to,signal,that,the,exchange,has,been,delivered,to,the,subscribers,param,name,the,stream,name,param,exchange,the,exchange,to,be,forwarded,to,the,external,subscribers,param,callback,the,callback,that,signals,the,delivery,of,the,exchange;void,send,camel,exchange,string,name,exchange,exchange,dispatch,callback,exchange,callback
CamelReactiveStreamsService -> void sendCamelExchange(String name, Exchange exchange, DispatchCallback<Exchange> callback)_;1491658900;Used by Camel to send the exchange to all active subscriptions on the given stream._The callback is used to signal that the exchange has been delivered to the subscribers.__@param name the stream name_@param exchange the exchange to be forwarded to the external subscribers_@param callback the callback that signals the delivery of the exchange;void sendCamelExchange(String name, Exchange exchange, DispatchCallback<Exchange> callback)_;used,by,camel,to,send,the,exchange,to,all,active,subscriptions,on,the,given,stream,the,callback,is,used,to,signal,that,the,exchange,has,been,delivered,to,the,subscribers,param,name,the,stream,name,param,exchange,the,exchange,to,be,forwarded,to,the,external,subscribers,param,callback,the,callback,that,signals,the,delivery,of,the,exchange;void,send,camel,exchange,string,name,exchange,exchange,dispatch,callback,exchange,callback
CamelReactiveStreamsService -> <T> Publisher<T> to(String uri, Object data, Class<T> type)_;1486339409;Creates a new route that uses the endpoint URI as producer, pushes the given data to the route_and returns a {@code Publisher} that will eventually return the exchange output or an error.__@param uri the producer uri_@param data the data to push_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a publisher with the resulting data;<T> Publisher<T> to(String uri, Object data, Class<T> type)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,pushes,the,given,data,to,the,route,and,returns,a,code,publisher,that,will,eventually,return,the,exchange,output,or,an,error,param,uri,the,producer,uri,param,data,the,data,to,push,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,publisher,with,the,resulting,data;t,publisher,t,to,string,uri,object,data,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> to(String uri, Object data, Class<T> type)_;1491658900;Creates a new route that uses the endpoint URI as producer, pushes the given data to the route_and returns a {@code Publisher} that will eventually return the exchange output or an error.__@param uri the producer uri_@param data the data to push_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a publisher with the resulting data;<T> Publisher<T> to(String uri, Object data, Class<T> type)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,pushes,the,given,data,to,the,route,and,returns,a,code,publisher,that,will,eventually,return,the,exchange,output,or,an,error,param,uri,the,producer,uri,param,data,the,data,to,push,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,publisher,with,the,resulting,data;t,publisher,t,to,string,uri,object,data,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> to(String uri, Object data, Class<T> type)_;1491658900;Creates a new route that uses the endpoint URI as producer, pushes the given data to the route_and returns a {@code Publisher} that will eventually return the exchange output or an error.__@param uri the producer uri_@param data the data to push_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a publisher with the resulting data;<T> Publisher<T> to(String uri, Object data, Class<T> type)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,pushes,the,given,data,to,the,route,and,returns,a,code,publisher,that,will,eventually,return,the,exchange,output,or,an,error,param,uri,the,producer,uri,param,data,the,data,to,push,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,publisher,with,the,resulting,data;t,publisher,t,to,string,uri,object,data,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> to(String uri, Object data, Class<T> type)_;1493982605;Creates a new route that uses the endpoint URI as producer, pushes the given data to the route_and returns a {@code Publisher} that will eventually return the exchange output or an error.__@param uri the producer uri_@param data the data to push_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a publisher with the resulting data;<T> Publisher<T> to(String uri, Object data, Class<T> type)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,pushes,the,given,data,to,the,route,and,returns,a,code,publisher,that,will,eventually,return,the,exchange,output,or,an,error,param,uri,the,producer,uri,param,data,the,data,to,push,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,publisher,with,the,resulting,data;t,publisher,t,to,string,uri,object,data,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> to(String uri, Object data, Class<T> type)_;1494845216;Creates a new route that uses the endpoint URI as producer, pushes the given data to the route_and returns a {@code Publisher} that will eventually return the exchange output or an error.__@param uri the producer uri_@param data the data to push_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a publisher with the resulting data;<T> Publisher<T> to(String uri, Object data, Class<T> type)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,pushes,the,given,data,to,the,route,and,returns,a,code,publisher,that,will,eventually,return,the,exchange,output,or,an,error,param,uri,the,producer,uri,param,data,the,data,to,push,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,publisher,with,the,resulting,data;t,publisher,t,to,string,uri,object,data,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> to(String uri, Object data, Class<T> type)_;1495704737;Creates a new route that uses the endpoint URI as producer, pushes the given data to the route_and returns a {@code Publisher} that will eventually return the exchange output or an error.__@param uri the producer uri_@param data the data to push_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a publisher with the resulting data;<T> Publisher<T> to(String uri, Object data, Class<T> type)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,pushes,the,given,data,to,the,route,and,returns,a,code,publisher,that,will,eventually,return,the,exchange,output,or,an,error,param,uri,the,producer,uri,param,data,the,data,to,push,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,publisher,with,the,resulting,data;t,publisher,t,to,string,uri,object,data,class,t,type
CamelReactiveStreamsService -> Publisher<Exchange> getPublisher(String name)_;1485527491;Returns the publisher associated to the given stream name._A publisher can be used to push Camel exchanges to reactive-streams subscribers.__@param name the stream name_@return the stream publisher;Publisher<Exchange> getPublisher(String name)_;returns,the,publisher,associated,to,the,given,stream,name,a,publisher,can,be,used,to,push,camel,exchanges,to,reactive,streams,subscribers,param,name,the,stream,name,return,the,stream,publisher;publisher,exchange,get,publisher,string,name
CamelReactiveStreamsService -> Publisher<Exchange> getPublisher(String name)_;1485527491;Returns the publisher associated to the given stream name._A publisher can be used to push Camel exchanges to reactive-streams subscribers.__@param name the stream name_@return the stream publisher;Publisher<Exchange> getPublisher(String name)_;returns,the,publisher,associated,to,the,given,stream,name,a,publisher,can,be,used,to,push,camel,exchanges,to,reactive,streams,subscribers,param,name,the,stream,name,return,the,stream,publisher;publisher,exchange,get,publisher,string,name
CamelReactiveStreamsService -> Publisher<Exchange> getPublisher(String name)_;1485527491;Returns the publisher associated to the given stream name._A publisher can be used to push Camel exchanges to reactive-streams subscribers.__@param name the stream name_@return the stream publisher;Publisher<Exchange> getPublisher(String name)_;returns,the,publisher,associated,to,the,given,stream,name,a,publisher,can,be,used,to,push,camel,exchanges,to,reactive,streams,subscribers,param,name,the,stream,name,return,the,stream,publisher;publisher,exchange,get,publisher,string,name
CamelReactiveStreamsService -> Publisher<Exchange> getPublisher(String name)_;1485858837;Returns the publisher associated to the given stream name._A publisher can be used to push Camel exchanges to reactive-streams subscribers.__@param name the stream name_@return the stream publisher;Publisher<Exchange> getPublisher(String name)_;returns,the,publisher,associated,to,the,given,stream,name,a,publisher,can,be,used,to,push,camel,exchanges,to,reactive,streams,subscribers,param,name,the,stream,name,return,the,stream,publisher;publisher,exchange,get,publisher,string,name
CamelReactiveStreamsService -> Publisher<Exchange> getPublisher(String name)_;1486051580;Returns the publisher associated to the given stream name._A publisher can be used to push Camel exchanges to reactive-streams subscribers.__@param name the stream name_@return the stream publisher;Publisher<Exchange> getPublisher(String name)_;returns,the,publisher,associated,to,the,given,stream,name,a,publisher,can,be,used,to,push,camel,exchanges,to,reactive,streams,subscribers,param,name,the,stream,name,return,the,stream,publisher;publisher,exchange,get,publisher,string,name
CamelReactiveStreamsService -> Publisher<Exchange> getPublisher(String name)_;1486051580;Returns the publisher associated to the given stream name._A publisher can be used to push Camel exchanges to reactive-streams subscribers.__@param name the stream name_@return the stream publisher;Publisher<Exchange> getPublisher(String name)_;returns,the,publisher,associated,to,the,given,stream,name,a,publisher,can,be,used,to,push,camel,exchanges,to,reactive,streams,subscribers,param,name,the,stream,name,return,the,stream,publisher;publisher,exchange,get,publisher,string,name
CamelReactiveStreamsService -> Publisher<Exchange> getPublisher(String name)_;1486126007;Returns the publisher associated to the given stream name._A publisher can be used to push Camel exchanges to reactive-streams subscribers.__@param name the stream name_@return the stream publisher;Publisher<Exchange> getPublisher(String name)_;returns,the,publisher,associated,to,the,given,stream,name,a,publisher,can,be,used,to,push,camel,exchanges,to,reactive,streams,subscribers,param,name,the,stream,name,return,the,stream,publisher;publisher,exchange,get,publisher,string,name
CamelReactiveStreamsService -> Publisher<Exchange> getPublisher(String name)_;1486143701;Returns the publisher associated to the given stream name._A publisher can be used to push Camel exchanges to reactive-streams subscribers.__@param name the stream name_@return the stream publisher;Publisher<Exchange> getPublisher(String name)_;returns,the,publisher,associated,to,the,given,stream,name,a,publisher,can,be,used,to,push,camel,exchanges,to,reactive,streams,subscribers,param,name,the,stream,name,return,the,stream,publisher;publisher,exchange,get,publisher,string,name
CamelReactiveStreamsService -> Publisher<Exchange> getPublisher(String name)_;1486195149;Returns the publisher associated to the given stream name._A publisher can be used to push Camel exchanges to reactive-streams subscribers.__@param name the stream name_@return the stream publisher;Publisher<Exchange> getPublisher(String name)_;returns,the,publisher,associated,to,the,given,stream,name,a,publisher,can,be,used,to,push,camel,exchanges,to,reactive,streams,subscribers,param,name,the,stream,name,return,the,stream,publisher;publisher,exchange,get,publisher,string,name
CamelReactiveStreamsService -> void detachConsumer(String name)_;1485527491;Deassociate the existing consumer from the given stream.__@param name the stream name;void detachConsumer(String name)_;deassociate,the,existing,consumer,from,the,given,stream,param,name,the,stream,name;void,detach,consumer,string,name
CamelReactiveStreamsService -> void detachConsumer(String name)_;1485527491;Used by Camel to detach the existing consumer from the given stream.__@param name the stream name;void detachConsumer(String name)_;used,by,camel,to,detach,the,existing,consumer,from,the,given,stream,param,name,the,stream,name;void,detach,consumer,string,name
CamelReactiveStreamsService -> void detachConsumer(String name)_;1485527491;Used by Camel to detach the existing consumer from the given stream.__@param name the stream name;void detachConsumer(String name)_;used,by,camel,to,detach,the,existing,consumer,from,the,given,stream,param,name,the,stream,name;void,detach,consumer,string,name
CamelReactiveStreamsService -> <T> Subscriber<T> subscriber(String uri, Class<T> type)_;1486339409;Creates a new route that pushes data to the endpoint URI and returns_the associated {@code Subscriber}.__This method always create a new stream.__@param uri the target uri_@param type the type of items that the subscriber can receive_@param <T> the type from which Camel should convert data to exchanges_@return the subscriber associated to the uri;<T> Subscriber<T> subscriber(String uri, Class<T> type)_;creates,a,new,route,that,pushes,data,to,the,endpoint,uri,and,returns,the,associated,code,subscriber,this,method,always,create,a,new,stream,param,uri,the,target,uri,param,type,the,type,of,items,that,the,subscriber,can,receive,param,t,the,type,from,which,camel,should,convert,data,to,exchanges,return,the,subscriber,associated,to,the,uri;t,subscriber,t,subscriber,string,uri,class,t,type
CamelReactiveStreamsService -> <T> Subscriber<T> subscriber(String uri, Class<T> type)_;1491658900;Creates a new route that pushes data to the endpoint URI and returns_the associated {@code Subscriber}.__This method always create a new stream.__@param uri the target uri_@param type the type of items that the subscriber can receive_@param <T> the type from which Camel should convert data to exchanges_@return the subscriber associated to the uri;<T> Subscriber<T> subscriber(String uri, Class<T> type)_;creates,a,new,route,that,pushes,data,to,the,endpoint,uri,and,returns,the,associated,code,subscriber,this,method,always,create,a,new,stream,param,uri,the,target,uri,param,type,the,type,of,items,that,the,subscriber,can,receive,param,t,the,type,from,which,camel,should,convert,data,to,exchanges,return,the,subscriber,associated,to,the,uri;t,subscriber,t,subscriber,string,uri,class,t,type
CamelReactiveStreamsService -> <T> Subscriber<T> subscriber(String uri, Class<T> type)_;1491658900;Creates a new route that pushes data to the endpoint URI and returns_the associated {@code Subscriber}.__This method always create a new stream.__@param uri the target uri_@param type the type of items that the subscriber can receive_@param <T> the type from which Camel should convert data to exchanges_@return the subscriber associated to the uri;<T> Subscriber<T> subscriber(String uri, Class<T> type)_;creates,a,new,route,that,pushes,data,to,the,endpoint,uri,and,returns,the,associated,code,subscriber,this,method,always,create,a,new,stream,param,uri,the,target,uri,param,type,the,type,of,items,that,the,subscriber,can,receive,param,t,the,type,from,which,camel,should,convert,data,to,exchanges,return,the,subscriber,associated,to,the,uri;t,subscriber,t,subscriber,string,uri,class,t,type
CamelReactiveStreamsService -> <T> Subscriber<T> subscriber(String uri, Class<T> type)_;1493982605;Creates a new route that pushes data to the endpoint URI and returns_the associated {@code Subscriber}.__This method always create a new stream.__@param uri the target uri_@param type the type of items that the subscriber can receive_@param <T> the type from which Camel should convert data to exchanges_@return the subscriber associated to the uri;<T> Subscriber<T> subscriber(String uri, Class<T> type)_;creates,a,new,route,that,pushes,data,to,the,endpoint,uri,and,returns,the,associated,code,subscriber,this,method,always,create,a,new,stream,param,uri,the,target,uri,param,type,the,type,of,items,that,the,subscriber,can,receive,param,t,the,type,from,which,camel,should,convert,data,to,exchanges,return,the,subscriber,associated,to,the,uri;t,subscriber,t,subscriber,string,uri,class,t,type
CamelReactiveStreamsService -> <T> Subscriber<T> subscriber(String uri, Class<T> type)_;1494845216;Creates a new route that pushes data to the endpoint URI and returns_the associated {@code Subscriber}.__This method always create a new stream.__@param uri the target uri_@param type the type of items that the subscriber can receive_@param <T> the type from which Camel should convert data to exchanges_@return the subscriber associated to the uri;<T> Subscriber<T> subscriber(String uri, Class<T> type)_;creates,a,new,route,that,pushes,data,to,the,endpoint,uri,and,returns,the,associated,code,subscriber,this,method,always,create,a,new,stream,param,uri,the,target,uri,param,type,the,type,of,items,that,the,subscriber,can,receive,param,t,the,type,from,which,camel,should,convert,data,to,exchanges,return,the,subscriber,associated,to,the,uri;t,subscriber,t,subscriber,string,uri,class,t,type
CamelReactiveStreamsService -> <T> Subscriber<T> subscriber(String uri, Class<T> type)_;1495704737;Creates a new route that pushes data to the endpoint URI and returns_the associated {@code Subscriber}.__This method always create a new stream.__@param uri the target uri_@param type the type of items that the subscriber can receive_@param <T> the type from which Camel should convert data to exchanges_@return the subscriber associated to the uri;<T> Subscriber<T> subscriber(String uri, Class<T> type)_;creates,a,new,route,that,pushes,data,to,the,endpoint,uri,and,returns,the,associated,code,subscriber,this,method,always,create,a,new,stream,param,uri,the,target,uri,param,type,the,type,of,items,that,the,subscriber,can,receive,param,t,the,type,from,which,camel,should,convert,data,to,exchanges,return,the,subscriber,associated,to,the,uri;t,subscriber,t,subscriber,string,uri,class,t,type
CamelReactiveStreamsService -> void attachCamelProducer(String name, ReactiveStreamsProducer producer)_;1485858837;Used by Camel to associate the publisher of the stream with the given name to a specific Camel producer._This method is used to bind a Camel route to a reactive stream.__@param name the stream name_@param producer the producer of the route_@throws IllegalStateException if another producer is already associated with the given stream name;void attachCamelProducer(String name, ReactiveStreamsProducer producer)_;used,by,camel,to,associate,the,publisher,of,the,stream,with,the,given,name,to,a,specific,camel,producer,this,method,is,used,to,bind,a,camel,route,to,a,reactive,stream,param,name,the,stream,name,param,producer,the,producer,of,the,route,throws,illegal,state,exception,if,another,producer,is,already,associated,with,the,given,stream,name;void,attach,camel,producer,string,name,reactive,streams,producer,producer
CamelReactiveStreamsService -> void attachCamelProducer(String name, ReactiveStreamsProducer producer)_;1486051580;Used by Camel to associate the publisher of the stream with the given name to a specific Camel producer._This method is used to bind a Camel route to a reactive stream.__@param name the stream name_@param producer the producer of the route_@throws IllegalStateException if another producer is already associated with the given stream name;void attachCamelProducer(String name, ReactiveStreamsProducer producer)_;used,by,camel,to,associate,the,publisher,of,the,stream,with,the,given,name,to,a,specific,camel,producer,this,method,is,used,to,bind,a,camel,route,to,a,reactive,stream,param,name,the,stream,name,param,producer,the,producer,of,the,route,throws,illegal,state,exception,if,another,producer,is,already,associated,with,the,given,stream,name;void,attach,camel,producer,string,name,reactive,streams,producer,producer
CamelReactiveStreamsService -> void attachCamelProducer(String name, ReactiveStreamsProducer producer)_;1486051580;Used by Camel to associate the publisher of the stream with the given name to a specific Camel producer._This method is used to bind a Camel route to a reactive stream.__@param name the stream name_@param producer the producer of the route_@throws IllegalStateException if another producer is already associated with the given stream name;void attachCamelProducer(String name, ReactiveStreamsProducer producer)_;used,by,camel,to,associate,the,publisher,of,the,stream,with,the,given,name,to,a,specific,camel,producer,this,method,is,used,to,bind,a,camel,route,to,a,reactive,stream,param,name,the,stream,name,param,producer,the,producer,of,the,route,throws,illegal,state,exception,if,another,producer,is,already,associated,with,the,given,stream,name;void,attach,camel,producer,string,name,reactive,streams,producer,producer
CamelReactiveStreamsService -> void attachCamelProducer(String name, ReactiveStreamsProducer producer)_;1486126007;Used by Camel to associate the publisher of the stream with the given name to a specific Camel producer._This method is used to bind a Camel route to a reactive stream.__@param name the stream name_@param producer the producer of the route_@throws IllegalStateException if another producer is already associated with the given stream name;void attachCamelProducer(String name, ReactiveStreamsProducer producer)_;used,by,camel,to,associate,the,publisher,of,the,stream,with,the,given,name,to,a,specific,camel,producer,this,method,is,used,to,bind,a,camel,route,to,a,reactive,stream,param,name,the,stream,name,param,producer,the,producer,of,the,route,throws,illegal,state,exception,if,another,producer,is,already,associated,with,the,given,stream,name;void,attach,camel,producer,string,name,reactive,streams,producer,producer
CamelReactiveStreamsService -> void attachCamelProducer(String name, ReactiveStreamsProducer producer)_;1486143701;Used by Camel to associate the publisher of the stream with the given name to a specific Camel producer._This method is used to bind a Camel route to a reactive stream.__@param name the stream name_@param producer the producer of the route_@throws IllegalStateException if another producer is already associated with the given stream name;void attachCamelProducer(String name, ReactiveStreamsProducer producer)_;used,by,camel,to,associate,the,publisher,of,the,stream,with,the,given,name,to,a,specific,camel,producer,this,method,is,used,to,bind,a,camel,route,to,a,reactive,stream,param,name,the,stream,name,param,producer,the,producer,of,the,route,throws,illegal,state,exception,if,another,producer,is,already,associated,with,the,given,stream,name;void,attach,camel,producer,string,name,reactive,streams,producer,producer
CamelReactiveStreamsService -> void attachCamelProducer(String name, ReactiveStreamsProducer producer)_;1486195149;Used by Camel to associate the publisher of the stream with the given name to a specific Camel producer._This method is used to bind a Camel route to a reactive stream.__@param name the stream name_@param producer the producer of the route_@throws IllegalStateException if another producer is already associated with the given stream name;void attachCamelProducer(String name, ReactiveStreamsProducer producer)_;used,by,camel,to,associate,the,publisher,of,the,stream,with,the,given,name,to,a,specific,camel,producer,this,method,is,used,to,bind,a,camel,route,to,a,reactive,stream,param,name,the,stream,name,param,producer,the,producer,of,the,route,throws,illegal,state,exception,if,another,producer,is,already,associated,with,the,given,stream,name;void,attach,camel,producer,string,name,reactive,streams,producer,producer
CamelReactiveStreamsService -> void attachCamelProducer(String name, ReactiveStreamsProducer producer)_;1486339409;Used by Camel to associate the publisher of the stream with the given name to a specific Camel producer._This method is used to bind a Camel route to a reactive stream.__@param name the stream name_@param producer the producer of the route_@throws IllegalStateException if another producer is already associated with the given stream name;void attachCamelProducer(String name, ReactiveStreamsProducer producer)_;used,by,camel,to,associate,the,publisher,of,the,stream,with,the,given,name,to,a,specific,camel,producer,this,method,is,used,to,bind,a,camel,route,to,a,reactive,stream,param,name,the,stream,name,param,producer,the,producer,of,the,route,throws,illegal,state,exception,if,another,producer,is,already,associated,with,the,given,stream,name;void,attach,camel,producer,string,name,reactive,streams,producer,producer
CamelReactiveStreamsService -> void attachCamelProducer(String name, ReactiveStreamsProducer producer)_;1491658900;Used by Camel to associate the publisher of the stream with the given name to a specific Camel producer._This method is used to bind a Camel route to a reactive stream.__@param name the stream name_@param producer the producer of the route_@throws IllegalStateException if another producer is already associated with the given stream name;void attachCamelProducer(String name, ReactiveStreamsProducer producer)_;used,by,camel,to,associate,the,publisher,of,the,stream,with,the,given,name,to,a,specific,camel,producer,this,method,is,used,to,bind,a,camel,route,to,a,reactive,stream,param,name,the,stream,name,param,producer,the,producer,of,the,route,throws,illegal,state,exception,if,another,producer,is,already,associated,with,the,given,stream,name;void,attach,camel,producer,string,name,reactive,streams,producer,producer
CamelReactiveStreamsService -> void attachCamelProducer(String name, ReactiveStreamsProducer producer)_;1491658900;Used by Camel to associate the publisher of the stream with the given name to a specific Camel producer._This method is used to bind a Camel route to a reactive stream.__@param name the stream name_@param producer the producer of the route_@throws IllegalStateException if another producer is already associated with the given stream name;void attachCamelProducer(String name, ReactiveStreamsProducer producer)_;used,by,camel,to,associate,the,publisher,of,the,stream,with,the,given,name,to,a,specific,camel,producer,this,method,is,used,to,bind,a,camel,route,to,a,reactive,stream,param,name,the,stream,name,param,producer,the,producer,of,the,route,throws,illegal,state,exception,if,another,producer,is,already,associated,with,the,given,stream,name;void,attach,camel,producer,string,name,reactive,streams,producer,producer
CamelReactiveStreamsService -> void attachCamelProducer(String name, ReactiveStreamsProducer producer)_;1493982605;Used by Camel to associate the publisher of the stream with the given name to a specific Camel producer._This method is used to bind a Camel route to a reactive stream.__@param name the stream name_@param producer the producer of the route_@throws IllegalStateException if another producer is already associated with the given stream name;void attachCamelProducer(String name, ReactiveStreamsProducer producer)_;used,by,camel,to,associate,the,publisher,of,the,stream,with,the,given,name,to,a,specific,camel,producer,this,method,is,used,to,bind,a,camel,route,to,a,reactive,stream,param,name,the,stream,name,param,producer,the,producer,of,the,route,throws,illegal,state,exception,if,another,producer,is,already,associated,with,the,given,stream,name;void,attach,camel,producer,string,name,reactive,streams,producer,producer
CamelReactiveStreamsService -> void attachCamelProducer(String name, ReactiveStreamsProducer producer)_;1494845216;Used by Camel to associate the publisher of the stream with the given name to a specific Camel producer._This method is used to bind a Camel route to a reactive stream.__@param name the stream name_@param producer the producer of the route_@throws IllegalStateException if another producer is already associated with the given stream name;void attachCamelProducer(String name, ReactiveStreamsProducer producer)_;used,by,camel,to,associate,the,publisher,of,the,stream,with,the,given,name,to,a,specific,camel,producer,this,method,is,used,to,bind,a,camel,route,to,a,reactive,stream,param,name,the,stream,name,param,producer,the,producer,of,the,route,throws,illegal,state,exception,if,another,producer,is,already,associated,with,the,given,stream,name;void,attach,camel,producer,string,name,reactive,streams,producer,producer
CamelReactiveStreamsService -> void attachCamelProducer(String name, ReactiveStreamsProducer producer)_;1495704737;Used by Camel to associate the publisher of the stream with the given name to a specific Camel producer._This method is used to bind a Camel route to a reactive stream.__@param name the stream name_@param producer the producer of the route_@throws IllegalStateException if another producer is already associated with the given stream name;void attachCamelProducer(String name, ReactiveStreamsProducer producer)_;used,by,camel,to,associate,the,publisher,of,the,stream,with,the,given,name,to,a,specific,camel,producer,this,method,is,used,to,bind,a,camel,route,to,a,reactive,stream,param,name,the,stream,name,param,producer,the,producer,of,the,route,throws,illegal,state,exception,if,another,producer,is,already,associated,with,the,given,stream,name;void,attach,camel,producer,string,name,reactive,streams,producer,producer
CamelReactiveStreamsService -> <T> Publisher<T> requestURI(String uri, Object data, Class<T> type)_;1486126007;Creates a new route that uses the endpoint URI as producer, pushes the given data to the route_and returns a {@code Publisher} that will eventually return the exchange output or an error.__@param uri the producer uri_@param data the data to push_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a publisher with the resulting data;<T> Publisher<T> requestURI(String uri, Object data, Class<T> type)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,pushes,the,given,data,to,the,route,and,returns,a,code,publisher,that,will,eventually,return,the,exchange,output,or,an,error,param,uri,the,producer,uri,param,data,the,data,to,push,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,publisher,with,the,resulting,data;t,publisher,t,request,uri,string,uri,object,data,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> requestURI(String uri, Object data, Class<T> type)_;1486143701;Creates a new route that uses the endpoint URI as producer, pushes the given data to the route_and returns a {@code Publisher} that will eventually return the exchange output or an error.__@param uri the producer uri_@param data the data to push_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a publisher with the resulting data;<T> Publisher<T> requestURI(String uri, Object data, Class<T> type)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,pushes,the,given,data,to,the,route,and,returns,a,code,publisher,that,will,eventually,return,the,exchange,output,or,an,error,param,uri,the,producer,uri,param,data,the,data,to,push,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,publisher,with,the,resulting,data;t,publisher,t,request,uri,string,uri,object,data,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> requestURI(String uri, Object data, Class<T> type)_;1486195149;Creates a new route that uses the endpoint URI as producer, pushes the given data to the route_and returns a {@code Publisher} that will eventually return the exchange output or an error.__@param uri the producer uri_@param data the data to push_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a publisher with the resulting data;<T> Publisher<T> requestURI(String uri, Object data, Class<T> type)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,pushes,the,given,data,to,the,route,and,returns,a,code,publisher,that,will,eventually,return,the,exchange,output,or,an,error,param,uri,the,producer,uri,param,data,the,data,to,push,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,publisher,with,the,resulting,data;t,publisher,t,request,uri,string,uri,object,data,class,t,type
CamelReactiveStreamsService -> <T> Function<Object, Publisher<T>> to(String uri, Class<T> type)_;1486339409;Creates a new route that uses the endpoint URI as producer, and returns a_function that pushes the data into the route and returns the_{@code Publisher} that holds the exchange output or an error.__This is a curryied version of {@link CamelReactiveStreamsService#to(String, Object, Class)}.__@param uri the producer uri_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a function that returns a publisher with the resulting data;<T> Function<Object, Publisher<T>> to(String uri, Class<T> type)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,and,returns,a,function,that,pushes,the,data,into,the,route,and,returns,the,code,publisher,that,holds,the,exchange,output,or,an,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,to,string,object,class,param,uri,the,producer,uri,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,function,that,returns,a,publisher,with,the,resulting,data;t,function,object,publisher,t,to,string,uri,class,t,type
CamelReactiveStreamsService -> <T> Function<Object, Publisher<T>> to(String uri, Class<T> type)_;1491658900;Creates a new route that uses the endpoint URI as producer, and returns a_function that pushes the data into the route and returns the_{@code Publisher} that holds the exchange output or an error.__This is a curryied version of {@link CamelReactiveStreamsService#to(String, Object, Class)}.__@param uri the producer uri_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a function that returns a publisher with the resulting data;<T> Function<Object, Publisher<T>> to(String uri, Class<T> type)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,and,returns,a,function,that,pushes,the,data,into,the,route,and,returns,the,code,publisher,that,holds,the,exchange,output,or,an,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,to,string,object,class,param,uri,the,producer,uri,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,function,that,returns,a,publisher,with,the,resulting,data;t,function,object,publisher,t,to,string,uri,class,t,type
CamelReactiveStreamsService -> <T> Function<Object, Publisher<T>> to(String uri, Class<T> type)_;1491658900;Creates a new route that uses the endpoint URI as producer, and returns a_function that pushes the data into the route and returns the_{@code Publisher} that holds the exchange output or an error.__This is a curryied version of {@link CamelReactiveStreamsService#to(String, Object, Class)}.__@param uri the producer uri_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a function that returns a publisher with the resulting data;<T> Function<Object, Publisher<T>> to(String uri, Class<T> type)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,and,returns,a,function,that,pushes,the,data,into,the,route,and,returns,the,code,publisher,that,holds,the,exchange,output,or,an,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,to,string,object,class,param,uri,the,producer,uri,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,function,that,returns,a,publisher,with,the,resulting,data;t,function,object,publisher,t,to,string,uri,class,t,type
CamelReactiveStreamsService -> <T> Function<Object, Publisher<T>> to(String uri, Class<T> type)_;1493982605;Creates a new route that uses the endpoint URI as producer, and returns a_function that pushes the data into the route and returns the_{@code Publisher} that holds the exchange output or an error.__This is a curryied version of {@link CamelReactiveStreamsService#to(String, Object, Class)}.__@param uri the producer uri_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a function that returns a publisher with the resulting data;<T> Function<Object, Publisher<T>> to(String uri, Class<T> type)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,and,returns,a,function,that,pushes,the,data,into,the,route,and,returns,the,code,publisher,that,holds,the,exchange,output,or,an,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,to,string,object,class,param,uri,the,producer,uri,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,function,that,returns,a,publisher,with,the,resulting,data;t,function,object,publisher,t,to,string,uri,class,t,type
CamelReactiveStreamsService -> <T> Function<Object, Publisher<T>> to(String uri, Class<T> type)_;1494845216;Creates a new route that uses the endpoint URI as producer, and returns a_function that pushes the data into the route and returns the_{@code Publisher} that holds the exchange output or an error.__This is a curryied version of {@link CamelReactiveStreamsService#to(String, Object, Class)}.__@param uri the producer uri_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a function that returns a publisher with the resulting data;<T> Function<Object, Publisher<T>> to(String uri, Class<T> type)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,and,returns,a,function,that,pushes,the,data,into,the,route,and,returns,the,code,publisher,that,holds,the,exchange,output,or,an,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,to,string,object,class,param,uri,the,producer,uri,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,function,that,returns,a,publisher,with,the,resulting,data;t,function,object,publisher,t,to,string,uri,class,t,type
CamelReactiveStreamsService -> <T> Function<Object, Publisher<T>> to(String uri, Class<T> type)_;1495704737;Creates a new route that uses the endpoint URI as producer, and returns a_function that pushes the data into the route and returns the_{@code Publisher} that holds the exchange output or an error.__This is a curryied version of {@link CamelReactiveStreamsService#to(String, Object, Class)}.__@param uri the producer uri_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a function that returns a publisher with the resulting data;<T> Function<Object, Publisher<T>> to(String uri, Class<T> type)_;creates,a,new,route,that,uses,the,endpoint,uri,as,producer,and,returns,a,function,that,pushes,the,data,into,the,route,and,returns,the,code,publisher,that,holds,the,exchange,output,or,an,error,this,is,a,curryied,version,of,link,camel,reactive,streams,service,to,string,object,class,param,uri,the,producer,uri,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,function,that,returns,a,publisher,with,the,resulting,data;t,function,object,publisher,t,to,string,uri,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> publishURI(String uri, Class<T> type)_;1486126007;Creates a new stream of the given type from the endpoint URI (used as Camel Consumer) and returns_the associated {@code Publisher}.__If a stream has already been created, the existing {@link Publisher} is returned.__@param uri the consumer uri_@param type the type of items emitted by the publisher_@param <T> the type to which Camel should convert exchanges to_@return the publisher associated to the uri;<T> Publisher<T> publishURI(String uri, Class<T> type)_;creates,a,new,stream,of,the,given,type,from,the,endpoint,uri,used,as,camel,consumer,and,returns,the,associated,code,publisher,if,a,stream,has,already,been,created,the,existing,link,publisher,is,returned,param,uri,the,consumer,uri,param,type,the,type,of,items,emitted,by,the,publisher,param,t,the,type,to,which,camel,should,convert,exchanges,to,return,the,publisher,associated,to,the,uri;t,publisher,t,publish,uri,string,uri,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> publishURI(String uri, Class<T> type)_;1486143701;Creates a new stream of the given type from the endpoint URI (used as Camel Consumer) and returns_the associated {@code Publisher}.__If a stream has already been created, the existing {@link Publisher} is returned.__@param uri the consumer uri_@param type the type of items emitted by the publisher_@param <T> the type to which Camel should convert exchanges to_@return the publisher associated to the uri;<T> Publisher<T> publishURI(String uri, Class<T> type)_;creates,a,new,stream,of,the,given,type,from,the,endpoint,uri,used,as,camel,consumer,and,returns,the,associated,code,publisher,if,a,stream,has,already,been,created,the,existing,link,publisher,is,returned,param,uri,the,consumer,uri,param,type,the,type,of,items,emitted,by,the,publisher,param,t,the,type,to,which,camel,should,convert,exchanges,to,return,the,publisher,associated,to,the,uri;t,publisher,t,publish,uri,string,uri,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> publishURI(String uri, Class<T> type)_;1486195149;Creates a new stream of the given type from the endpoint URI (used as Camel Consumer) and returns_the associated {@code Publisher}.__If a stream has already been created, the existing {@link Publisher} is returned.__@param uri the consumer uri_@param type the type of items emitted by the publisher_@param <T> the type to which Camel should convert exchanges to_@return the publisher associated to the uri;<T> Publisher<T> publishURI(String uri, Class<T> type)_;creates,a,new,stream,of,the,given,type,from,the,endpoint,uri,used,as,camel,consumer,and,returns,the,associated,code,publisher,if,a,stream,has,already,been,created,the,existing,link,publisher,is,returned,param,uri,the,consumer,uri,param,type,the,type,of,items,emitted,by,the,publisher,param,t,the,type,to,which,camel,should,convert,exchanges,to,return,the,publisher,associated,to,the,uri;t,publisher,t,publish,uri,string,uri,class,t,type
CamelReactiveStreamsService -> Publisher<Exchange> fromStream(String name)_;1486339409;Returns the publisher associated to the given stream name._A publisher can be used to push Camel exchanges to reactive-streams subscribers.__@param name the stream name_@return the stream publisher;Publisher<Exchange> fromStream(String name)_;returns,the,publisher,associated,to,the,given,stream,name,a,publisher,can,be,used,to,push,camel,exchanges,to,reactive,streams,subscribers,param,name,the,stream,name,return,the,stream,publisher;publisher,exchange,from,stream,string,name
CamelReactiveStreamsService -> Publisher<Exchange> fromStream(String name)_;1491658900;Returns the publisher associated to the given stream name._A publisher can be used to push Camel exchanges to reactive-streams subscribers.__@param name the stream name_@return the stream publisher;Publisher<Exchange> fromStream(String name)_;returns,the,publisher,associated,to,the,given,stream,name,a,publisher,can,be,used,to,push,camel,exchanges,to,reactive,streams,subscribers,param,name,the,stream,name,return,the,stream,publisher;publisher,exchange,from,stream,string,name
CamelReactiveStreamsService -> Publisher<Exchange> fromStream(String name)_;1491658900;Returns the publisher associated to the given stream name._A publisher can be used to push Camel exchanges to reactive-streams subscribers.__@param name the stream name_@return the stream publisher;Publisher<Exchange> fromStream(String name)_;returns,the,publisher,associated,to,the,given,stream,name,a,publisher,can,be,used,to,push,camel,exchanges,to,reactive,streams,subscribers,param,name,the,stream,name,return,the,stream,publisher;publisher,exchange,from,stream,string,name
CamelReactiveStreamsService -> Publisher<Exchange> fromStream(String name)_;1493982605;Returns the publisher associated to the given stream name._A publisher can be used to push Camel exchanges to reactive-streams subscribers.__@param name the stream name_@return the stream publisher;Publisher<Exchange> fromStream(String name)_;returns,the,publisher,associated,to,the,given,stream,name,a,publisher,can,be,used,to,push,camel,exchanges,to,reactive,streams,subscribers,param,name,the,stream,name,return,the,stream,publisher;publisher,exchange,from,stream,string,name
CamelReactiveStreamsService -> Publisher<Exchange> fromStream(String name)_;1494845216;Returns the publisher associated to the given stream name._A publisher can be used to push Camel exchanges to reactive-streams subscribers.__@param name the stream name_@return the stream publisher;Publisher<Exchange> fromStream(String name)_;returns,the,publisher,associated,to,the,given,stream,name,a,publisher,can,be,used,to,push,camel,exchanges,to,reactive,streams,subscribers,param,name,the,stream,name,return,the,stream,publisher;publisher,exchange,from,stream,string,name
CamelReactiveStreamsService -> Publisher<Exchange> fromStream(String name)_;1495704737;Returns the publisher associated to the given stream name._A publisher can be used to push Camel exchanges to reactive-streams subscribers.__@param name the stream name_@return the stream publisher;Publisher<Exchange> fromStream(String name)_;returns,the,publisher,associated,to,the,given,stream,name,a,publisher,can,be,used,to,push,camel,exchanges,to,reactive,streams,subscribers,param,name,the,stream,name,return,the,stream,publisher;publisher,exchange,from,stream,string,name
CamelReactiveStreamsService -> void attachCamelConsumer(String name, ReactiveStreamsConsumer consumer)_;1485858837;Used by Camel to associate the subscriber of the stream with the given name to a specific Camel consumer._This method is used to bind a Camel route to a reactive stream.__@param name the stream name_@param consumer the consumer of the route_@throws IllegalStateException if another consumer is already associated with the given stream name;void attachCamelConsumer(String name, ReactiveStreamsConsumer consumer)_;used,by,camel,to,associate,the,subscriber,of,the,stream,with,the,given,name,to,a,specific,camel,consumer,this,method,is,used,to,bind,a,camel,route,to,a,reactive,stream,param,name,the,stream,name,param,consumer,the,consumer,of,the,route,throws,illegal,state,exception,if,another,consumer,is,already,associated,with,the,given,stream,name;void,attach,camel,consumer,string,name,reactive,streams,consumer,consumer
CamelReactiveStreamsService -> void attachCamelConsumer(String name, ReactiveStreamsConsumer consumer)_;1486051580;Used by Camel to associate the subscriber of the stream with the given name to a specific Camel consumer._This method is used to bind a Camel route to a reactive stream.__@param name the stream name_@param consumer the consumer of the route_@throws IllegalStateException if another consumer is already associated with the given stream name;void attachCamelConsumer(String name, ReactiveStreamsConsumer consumer)_;used,by,camel,to,associate,the,subscriber,of,the,stream,with,the,given,name,to,a,specific,camel,consumer,this,method,is,used,to,bind,a,camel,route,to,a,reactive,stream,param,name,the,stream,name,param,consumer,the,consumer,of,the,route,throws,illegal,state,exception,if,another,consumer,is,already,associated,with,the,given,stream,name;void,attach,camel,consumer,string,name,reactive,streams,consumer,consumer
CamelReactiveStreamsService -> void attachCamelConsumer(String name, ReactiveStreamsConsumer consumer)_;1486051580;Used by Camel to associate the subscriber of the stream with the given name to a specific Camel consumer._This method is used to bind a Camel route to a reactive stream.__@param name the stream name_@param consumer the consumer of the route_@throws IllegalStateException if another consumer is already associated with the given stream name;void attachCamelConsumer(String name, ReactiveStreamsConsumer consumer)_;used,by,camel,to,associate,the,subscriber,of,the,stream,with,the,given,name,to,a,specific,camel,consumer,this,method,is,used,to,bind,a,camel,route,to,a,reactive,stream,param,name,the,stream,name,param,consumer,the,consumer,of,the,route,throws,illegal,state,exception,if,another,consumer,is,already,associated,with,the,given,stream,name;void,attach,camel,consumer,string,name,reactive,streams,consumer,consumer
CamelReactiveStreamsService -> void attachCamelConsumer(String name, ReactiveStreamsConsumer consumer)_;1486126007;Used by Camel to associate the subscriber of the stream with the given name to a specific Camel consumer._This method is used to bind a Camel route to a reactive stream.__@param name the stream name_@param consumer the consumer of the route_@throws IllegalStateException if another consumer is already associated with the given stream name;void attachCamelConsumer(String name, ReactiveStreamsConsumer consumer)_;used,by,camel,to,associate,the,subscriber,of,the,stream,with,the,given,name,to,a,specific,camel,consumer,this,method,is,used,to,bind,a,camel,route,to,a,reactive,stream,param,name,the,stream,name,param,consumer,the,consumer,of,the,route,throws,illegal,state,exception,if,another,consumer,is,already,associated,with,the,given,stream,name;void,attach,camel,consumer,string,name,reactive,streams,consumer,consumer
CamelReactiveStreamsService -> void attachCamelConsumer(String name, ReactiveStreamsConsumer consumer)_;1486143701;Used by Camel to associate the subscriber of the stream with the given name to a specific Camel consumer._This method is used to bind a Camel route to a reactive stream.__@param name the stream name_@param consumer the consumer of the route_@throws IllegalStateException if another consumer is already associated with the given stream name;void attachCamelConsumer(String name, ReactiveStreamsConsumer consumer)_;used,by,camel,to,associate,the,subscriber,of,the,stream,with,the,given,name,to,a,specific,camel,consumer,this,method,is,used,to,bind,a,camel,route,to,a,reactive,stream,param,name,the,stream,name,param,consumer,the,consumer,of,the,route,throws,illegal,state,exception,if,another,consumer,is,already,associated,with,the,given,stream,name;void,attach,camel,consumer,string,name,reactive,streams,consumer,consumer
CamelReactiveStreamsService -> void attachCamelConsumer(String name, ReactiveStreamsConsumer consumer)_;1486195149;Used by Camel to associate the subscriber of the stream with the given name to a specific Camel consumer._This method is used to bind a Camel route to a reactive stream.__@param name the stream name_@param consumer the consumer of the route_@throws IllegalStateException if another consumer is already associated with the given stream name;void attachCamelConsumer(String name, ReactiveStreamsConsumer consumer)_;used,by,camel,to,associate,the,subscriber,of,the,stream,with,the,given,name,to,a,specific,camel,consumer,this,method,is,used,to,bind,a,camel,route,to,a,reactive,stream,param,name,the,stream,name,param,consumer,the,consumer,of,the,route,throws,illegal,state,exception,if,another,consumer,is,already,associated,with,the,given,stream,name;void,attach,camel,consumer,string,name,reactive,streams,consumer,consumer
CamelReactiveStreamsService -> void attachCamelConsumer(String name, ReactiveStreamsConsumer consumer)_;1486339409;Used by Camel to associate the subscriber of the stream with the given name to a specific Camel consumer._This method is used to bind a Camel route to a reactive stream.__@param name the stream name_@param consumer the consumer of the route_@throws IllegalStateException if another consumer is already associated with the given stream name;void attachCamelConsumer(String name, ReactiveStreamsConsumer consumer)_;used,by,camel,to,associate,the,subscriber,of,the,stream,with,the,given,name,to,a,specific,camel,consumer,this,method,is,used,to,bind,a,camel,route,to,a,reactive,stream,param,name,the,stream,name,param,consumer,the,consumer,of,the,route,throws,illegal,state,exception,if,another,consumer,is,already,associated,with,the,given,stream,name;void,attach,camel,consumer,string,name,reactive,streams,consumer,consumer
CamelReactiveStreamsService -> <T> void processFromURI(String uri, Class<T> type, Function<? super Publisher<T>, ?> processor)_;1486126007;Adds a processing step at the specified endpoint uri (usually a "direct:name") that delegates_to the given reactive processor.__The processor receives a {@link Publisher} of items of the given type and returns an object._If the output of the processor is a {@link Publisher}, it will be unwrapped before_delivering the result to the source route.__@param uri the uri where the processor should be attached_@param type  the type to which the body of the exchange should be converted_@param <T> the generic type of the Publisher that should be processed_@param processor the reactive processor;<T> void processFromURI(String uri, Class<T> type, Function<? super Publisher<T>, ?> processor)_;adds,a,processing,step,at,the,specified,endpoint,uri,usually,a,direct,name,that,delegates,to,the,given,reactive,processor,the,processor,receives,a,link,publisher,of,items,of,the,given,type,and,returns,an,object,if,the,output,of,the,processor,is,a,link,publisher,it,will,be,unwrapped,before,delivering,the,result,to,the,source,route,param,uri,the,uri,where,the,processor,should,be,attached,param,type,the,type,to,which,the,body,of,the,exchange,should,be,converted,param,t,the,generic,type,of,the,publisher,that,should,be,processed,param,processor,the,reactive,processor;t,void,process,from,uri,string,uri,class,t,type,function,super,publisher,t,processor
CamelReactiveStreamsService -> <T> void processFromURI(String uri, Class<T> type, Function<? super Publisher<T>, ?> processor)_;1486143701;Adds a processing step at the specified endpoint uri (usually a "direct:name") that delegates_to the given reactive processor.__The processor receives a {@link Publisher} of items of the given type and returns an object._If the output of the processor is a {@link Publisher}, it will be unwrapped before_delivering the result to the source route.__@param uri the uri where the processor should be attached_@param type  the type to which the body of the exchange should be converted_@param <T> the generic type of the Publisher that should be processed_@param processor the reactive processor;<T> void processFromURI(String uri, Class<T> type, Function<? super Publisher<T>, ?> processor)_;adds,a,processing,step,at,the,specified,endpoint,uri,usually,a,direct,name,that,delegates,to,the,given,reactive,processor,the,processor,receives,a,link,publisher,of,items,of,the,given,type,and,returns,an,object,if,the,output,of,the,processor,is,a,link,publisher,it,will,be,unwrapped,before,delivering,the,result,to,the,source,route,param,uri,the,uri,where,the,processor,should,be,attached,param,type,the,type,to,which,the,body,of,the,exchange,should,be,converted,param,t,the,generic,type,of,the,publisher,that,should,be,processed,param,processor,the,reactive,processor;t,void,process,from,uri,string,uri,class,t,type,function,super,publisher,t,processor
CamelReactiveStreamsService -> <T> void processFromURI(String uri, Class<T> type, Function<? super Publisher<T>, ?> processor)_;1486195149;Adds a processing step at the specified endpoint uri (usually a "direct:name") that delegates_to the given reactive processor.__The processor receives a {@link Publisher} of items of the given type and returns an object._If the output of the processor is a {@link Publisher}, it will be unwrapped before_delivering the result to the source route.__@param uri the uri where the processor should be attached_@param type  the type to which the body of the exchange should be converted_@param <T> the generic type of the Publisher that should be processed_@param processor the reactive processor;<T> void processFromURI(String uri, Class<T> type, Function<? super Publisher<T>, ?> processor)_;adds,a,processing,step,at,the,specified,endpoint,uri,usually,a,direct,name,that,delegates,to,the,given,reactive,processor,the,processor,receives,a,link,publisher,of,items,of,the,given,type,and,returns,an,object,if,the,output,of,the,processor,is,a,link,publisher,it,will,be,unwrapped,before,delivering,the,result,to,the,source,route,param,uri,the,uri,where,the,processor,should,be,attached,param,type,the,type,to,which,the,body,of,the,exchange,should,be,converted,param,t,the,generic,type,of,the,publisher,that,should,be,processed,param,processor,the,reactive,processor;t,void,process,from,uri,string,uri,class,t,type,function,super,publisher,t,processor
CamelReactiveStreamsService -> <T> Publisher<T> fromStream(String name, Class<T> type)_;1486339409;Returns the publisher associated to the given stream name._A publisher can be used to push Camel exchange to external reactive-streams subscribers.__The publisher converts automatically exchanges to the given type.__@param name the stream name_@param type the type of the emitted items_@param <T> the type of items emitted by the publisher_@return the publisher associated to the stream;<T> Publisher<T> fromStream(String name, Class<T> type)_;returns,the,publisher,associated,to,the,given,stream,name,a,publisher,can,be,used,to,push,camel,exchange,to,external,reactive,streams,subscribers,the,publisher,converts,automatically,exchanges,to,the,given,type,param,name,the,stream,name,param,type,the,type,of,the,emitted,items,param,t,the,type,of,items,emitted,by,the,publisher,return,the,publisher,associated,to,the,stream;t,publisher,t,from,stream,string,name,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> fromStream(String name, Class<T> type)_;1491658900;Returns the publisher associated to the given stream name._A publisher can be used to push Camel exchange to external reactive-streams subscribers.__The publisher converts automatically exchanges to the given type.__@param name the stream name_@param type the type of the emitted items_@param <T> the type of items emitted by the publisher_@return the publisher associated to the stream;<T> Publisher<T> fromStream(String name, Class<T> type)_;returns,the,publisher,associated,to,the,given,stream,name,a,publisher,can,be,used,to,push,camel,exchange,to,external,reactive,streams,subscribers,the,publisher,converts,automatically,exchanges,to,the,given,type,param,name,the,stream,name,param,type,the,type,of,the,emitted,items,param,t,the,type,of,items,emitted,by,the,publisher,return,the,publisher,associated,to,the,stream;t,publisher,t,from,stream,string,name,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> fromStream(String name, Class<T> type)_;1491658900;Returns the publisher associated to the given stream name._A publisher can be used to push Camel exchange to external reactive-streams subscribers.__The publisher converts automatically exchanges to the given type.__@param name the stream name_@param type the type of the emitted items_@param <T> the type of items emitted by the publisher_@return the publisher associated to the stream;<T> Publisher<T> fromStream(String name, Class<T> type)_;returns,the,publisher,associated,to,the,given,stream,name,a,publisher,can,be,used,to,push,camel,exchange,to,external,reactive,streams,subscribers,the,publisher,converts,automatically,exchanges,to,the,given,type,param,name,the,stream,name,param,type,the,type,of,the,emitted,items,param,t,the,type,of,items,emitted,by,the,publisher,return,the,publisher,associated,to,the,stream;t,publisher,t,from,stream,string,name,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> fromStream(String name, Class<T> type)_;1493982605;Returns the publisher associated to the given stream name._A publisher can be used to push Camel exchange to external reactive-streams subscribers.__The publisher converts automatically exchanges to the given type.__@param name the stream name_@param type the type of the emitted items_@param <T> the type of items emitted by the publisher_@return the publisher associated to the stream;<T> Publisher<T> fromStream(String name, Class<T> type)_;returns,the,publisher,associated,to,the,given,stream,name,a,publisher,can,be,used,to,push,camel,exchange,to,external,reactive,streams,subscribers,the,publisher,converts,automatically,exchanges,to,the,given,type,param,name,the,stream,name,param,type,the,type,of,the,emitted,items,param,t,the,type,of,items,emitted,by,the,publisher,return,the,publisher,associated,to,the,stream;t,publisher,t,from,stream,string,name,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> fromStream(String name, Class<T> type)_;1494845216;Returns the publisher associated to the given stream name._A publisher can be used to push Camel exchange to external reactive-streams subscribers.__The publisher converts automatically exchanges to the given type.__@param name the stream name_@param type the type of the emitted items_@param <T> the type of items emitted by the publisher_@return the publisher associated to the stream;<T> Publisher<T> fromStream(String name, Class<T> type)_;returns,the,publisher,associated,to,the,given,stream,name,a,publisher,can,be,used,to,push,camel,exchange,to,external,reactive,streams,subscribers,the,publisher,converts,automatically,exchanges,to,the,given,type,param,name,the,stream,name,param,type,the,type,of,the,emitted,items,param,t,the,type,of,items,emitted,by,the,publisher,return,the,publisher,associated,to,the,stream;t,publisher,t,from,stream,string,name,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> fromStream(String name, Class<T> type)_;1495704737;Returns the publisher associated to the given stream name._A publisher can be used to push Camel exchange to external reactive-streams subscribers.__The publisher converts automatically exchanges to the given type.__@param name the stream name_@param type the type of the emitted items_@param <T> the type of items emitted by the publisher_@return the publisher associated to the stream;<T> Publisher<T> fromStream(String name, Class<T> type)_;returns,the,publisher,associated,to,the,given,stream,name,a,publisher,can,be,used,to,push,camel,exchange,to,external,reactive,streams,subscribers,the,publisher,converts,automatically,exchanges,to,the,given,type,param,name,the,stream,name,param,type,the,type,of,the,emitted,items,param,t,the,type,of,items,emitted,by,the,publisher,return,the,publisher,associated,to,the,stream;t,publisher,t,from,stream,string,name,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> getPublisher(String name, Class<T> type)_;1485527491;Returns the publisher associated to the given stream name._A publisher can be used to push Camel exchange to external reactive-streams subscribers.__The publisher converts automatically exchanges to the given type.__@param name the stream name_@param type the type of the emitted items_@param <T> the type of items emitted by the publisher_@return the publisher associated to the stream;<T> Publisher<T> getPublisher(String name, Class<T> type)_;returns,the,publisher,associated,to,the,given,stream,name,a,publisher,can,be,used,to,push,camel,exchange,to,external,reactive,streams,subscribers,the,publisher,converts,automatically,exchanges,to,the,given,type,param,name,the,stream,name,param,type,the,type,of,the,emitted,items,param,t,the,type,of,items,emitted,by,the,publisher,return,the,publisher,associated,to,the,stream;t,publisher,t,get,publisher,string,name,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> getPublisher(String name, Class<T> type)_;1485527491;Returns the publisher associated to the given stream name._A publisher can be used to push Camel exchange to external reactive-streams subscribers.__The publisher converts automatically exchanges to the given type.__@param name the stream name_@param type the type of the emitted items_@param <T> the type of items emitted by the publisher_@return the publisher associated to the stream;<T> Publisher<T> getPublisher(String name, Class<T> type)_;returns,the,publisher,associated,to,the,given,stream,name,a,publisher,can,be,used,to,push,camel,exchange,to,external,reactive,streams,subscribers,the,publisher,converts,automatically,exchanges,to,the,given,type,param,name,the,stream,name,param,type,the,type,of,the,emitted,items,param,t,the,type,of,items,emitted,by,the,publisher,return,the,publisher,associated,to,the,stream;t,publisher,t,get,publisher,string,name,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> getPublisher(String name, Class<T> type)_;1485527491;Returns the publisher associated to the given stream name._A publisher can be used to push Camel exchange to external reactive-streams subscribers.__The publisher converts automatically exchanges to the given type.__@param name the stream name_@param type the type of the emitted items_@param <T> the type of items emitted by the publisher_@return the publisher associated to the stream;<T> Publisher<T> getPublisher(String name, Class<T> type)_;returns,the,publisher,associated,to,the,given,stream,name,a,publisher,can,be,used,to,push,camel,exchange,to,external,reactive,streams,subscribers,the,publisher,converts,automatically,exchanges,to,the,given,type,param,name,the,stream,name,param,type,the,type,of,the,emitted,items,param,t,the,type,of,items,emitted,by,the,publisher,return,the,publisher,associated,to,the,stream;t,publisher,t,get,publisher,string,name,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> getPublisher(String name, Class<T> type)_;1485858837;Returns the publisher associated to the given stream name._A publisher can be used to push Camel exchange to external reactive-streams subscribers.__The publisher converts automatically exchanges to the given type.__@param name the stream name_@param type the type of the emitted items_@param <T> the type of items emitted by the publisher_@return the publisher associated to the stream;<T> Publisher<T> getPublisher(String name, Class<T> type)_;returns,the,publisher,associated,to,the,given,stream,name,a,publisher,can,be,used,to,push,camel,exchange,to,external,reactive,streams,subscribers,the,publisher,converts,automatically,exchanges,to,the,given,type,param,name,the,stream,name,param,type,the,type,of,the,emitted,items,param,t,the,type,of,items,emitted,by,the,publisher,return,the,publisher,associated,to,the,stream;t,publisher,t,get,publisher,string,name,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> getPublisher(String name, Class<T> type)_;1486051580;Returns the publisher associated to the given stream name._A publisher can be used to push Camel exchange to external reactive-streams subscribers.__The publisher converts automatically exchanges to the given type.__@param name the stream name_@param type the type of the emitted items_@param <T> the type of items emitted by the publisher_@return the publisher associated to the stream;<T> Publisher<T> getPublisher(String name, Class<T> type)_;returns,the,publisher,associated,to,the,given,stream,name,a,publisher,can,be,used,to,push,camel,exchange,to,external,reactive,streams,subscribers,the,publisher,converts,automatically,exchanges,to,the,given,type,param,name,the,stream,name,param,type,the,type,of,the,emitted,items,param,t,the,type,of,items,emitted,by,the,publisher,return,the,publisher,associated,to,the,stream;t,publisher,t,get,publisher,string,name,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> getPublisher(String name, Class<T> type)_;1486051580;Returns the publisher associated to the given stream name._A publisher can be used to push Camel exchange to external reactive-streams subscribers.__The publisher converts automatically exchanges to the given type.__@param name the stream name_@param type the type of the emitted items_@param <T> the type of items emitted by the publisher_@return the publisher associated to the stream;<T> Publisher<T> getPublisher(String name, Class<T> type)_;returns,the,publisher,associated,to,the,given,stream,name,a,publisher,can,be,used,to,push,camel,exchange,to,external,reactive,streams,subscribers,the,publisher,converts,automatically,exchanges,to,the,given,type,param,name,the,stream,name,param,type,the,type,of,the,emitted,items,param,t,the,type,of,items,emitted,by,the,publisher,return,the,publisher,associated,to,the,stream;t,publisher,t,get,publisher,string,name,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> getPublisher(String name, Class<T> type)_;1486126007;Returns the publisher associated to the given stream name._A publisher can be used to push Camel exchange to external reactive-streams subscribers.__The publisher converts automatically exchanges to the given type.__@param name the stream name_@param type the type of the emitted items_@param <T> the type of items emitted by the publisher_@return the publisher associated to the stream;<T> Publisher<T> getPublisher(String name, Class<T> type)_;returns,the,publisher,associated,to,the,given,stream,name,a,publisher,can,be,used,to,push,camel,exchange,to,external,reactive,streams,subscribers,the,publisher,converts,automatically,exchanges,to,the,given,type,param,name,the,stream,name,param,type,the,type,of,the,emitted,items,param,t,the,type,of,items,emitted,by,the,publisher,return,the,publisher,associated,to,the,stream;t,publisher,t,get,publisher,string,name,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> getPublisher(String name, Class<T> type)_;1486143701;Returns the publisher associated to the given stream name._A publisher can be used to push Camel exchange to external reactive-streams subscribers.__The publisher converts automatically exchanges to the given type.__@param name the stream name_@param type the type of the emitted items_@param <T> the type of items emitted by the publisher_@return the publisher associated to the stream;<T> Publisher<T> getPublisher(String name, Class<T> type)_;returns,the,publisher,associated,to,the,given,stream,name,a,publisher,can,be,used,to,push,camel,exchange,to,external,reactive,streams,subscribers,the,publisher,converts,automatically,exchanges,to,the,given,type,param,name,the,stream,name,param,type,the,type,of,the,emitted,items,param,t,the,type,of,items,emitted,by,the,publisher,return,the,publisher,associated,to,the,stream;t,publisher,t,get,publisher,string,name,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> getPublisher(String name, Class<T> type)_;1486195149;Returns the publisher associated to the given stream name._A publisher can be used to push Camel exchange to external reactive-streams subscribers.__The publisher converts automatically exchanges to the given type.__@param name the stream name_@param type the type of the emitted items_@param <T> the type of items emitted by the publisher_@return the publisher associated to the stream;<T> Publisher<T> getPublisher(String name, Class<T> type)_;returns,the,publisher,associated,to,the,given,stream,name,a,publisher,can,be,used,to,push,camel,exchange,to,external,reactive,streams,subscribers,the,publisher,converts,automatically,exchanges,to,the,given,type,param,name,the,stream,name,param,type,the,type,of,the,emitted,items,param,t,the,type,of,items,emitted,by,the,publisher,return,the,publisher,associated,to,the,stream;t,publisher,t,get,publisher,string,name,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> request(String name, Object data, Class<T> type)_;1486051580;Pushes the given data into the specified Camel stream and returns a Publisher (mono) holding_the exchange output or an error.__@param name the stream name_@param data the data to push_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return an publisher with the resulting data;<T> Publisher<T> request(String name, Object data, Class<T> type)_;pushes,the,given,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,exchange,output,or,an,error,param,name,the,stream,name,param,data,the,data,to,push,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,an,publisher,with,the,resulting,data;t,publisher,t,request,string,name,object,data,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> request(String name, Object data, Class<T> type)_;1486051580;Pushes the given data into the specified Camel stream and returns a Publisher (mono) holding_the exchange output or an error.__@param name the stream name_@param data the data to push_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a publisher with the resulting data;<T> Publisher<T> request(String name, Object data, Class<T> type)_;pushes,the,given,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,exchange,output,or,an,error,param,name,the,stream,name,param,data,the,data,to,push,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,publisher,with,the,resulting,data;t,publisher,t,request,string,name,object,data,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> request(String name, Object data, Class<T> type)_;1486126007;Pushes the given data into the specified Camel stream and returns a Publisher (mono) holding_the exchange output or an error.__@param name the stream name_@param data the data to push_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a publisher with the resulting data;<T> Publisher<T> request(String name, Object data, Class<T> type)_;pushes,the,given,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,exchange,output,or,an,error,param,name,the,stream,name,param,data,the,data,to,push,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,publisher,with,the,resulting,data;t,publisher,t,request,string,name,object,data,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> request(String name, Object data, Class<T> type)_;1486143701;Pushes the given data into the specified Camel stream and returns a Publisher (mono) holding_the exchange output or an error.__@param name the stream name_@param data the data to push_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a publisher with the resulting data;<T> Publisher<T> request(String name, Object data, Class<T> type)_;pushes,the,given,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,exchange,output,or,an,error,param,name,the,stream,name,param,data,the,data,to,push,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,publisher,with,the,resulting,data;t,publisher,t,request,string,name,object,data,class,t,type
CamelReactiveStreamsService -> <T> Publisher<T> request(String name, Object data, Class<T> type)_;1486195149;Pushes the given data into the specified Camel stream and returns a Publisher (mono) holding_the exchange output or an error.__@param name the stream name_@param data the data to push_@param type  the type to which the output should be converted_@param <T> the generic type of the resulting Publisher_@return a publisher with the resulting data;<T> Publisher<T> request(String name, Object data, Class<T> type)_;pushes,the,given,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,exchange,output,or,an,error,param,name,the,stream,name,param,data,the,data,to,push,param,type,the,type,to,which,the,output,should,be,converted,param,t,the,generic,type,of,the,resulting,publisher,return,a,publisher,with,the,resulting,data;t,publisher,t,request,string,name,object,data,class,t,type
CamelReactiveStreamsService -> Publisher<Exchange> toStream(String name, Object data)_;1486339409;Pushes the given data into the specified Camel stream and returns a Publisher (mono) holding_the resulting exchange or an error.__@param name the stream name_@param data the data to push_@return a publisher with the resulting exchange;Publisher<Exchange> toStream(String name, Object data)_;pushes,the,given,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,resulting,exchange,or,an,error,param,name,the,stream,name,param,data,the,data,to,push,return,a,publisher,with,the,resulting,exchange;publisher,exchange,to,stream,string,name,object,data
CamelReactiveStreamsService -> Publisher<Exchange> toStream(String name, Object data)_;1491658900;Pushes the given data into the specified Camel stream and returns a Publisher (mono) holding_the resulting exchange or an error.__@param name the stream name_@param data the data to push_@return a publisher with the resulting exchange;Publisher<Exchange> toStream(String name, Object data)_;pushes,the,given,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,resulting,exchange,or,an,error,param,name,the,stream,name,param,data,the,data,to,push,return,a,publisher,with,the,resulting,exchange;publisher,exchange,to,stream,string,name,object,data
CamelReactiveStreamsService -> Publisher<Exchange> toStream(String name, Object data)_;1491658900;Pushes the given data into the specified Camel stream and returns a Publisher (mono) holding_the resulting exchange or an error.__@param name the stream name_@param data the data to push_@return a publisher with the resulting exchange;Publisher<Exchange> toStream(String name, Object data)_;pushes,the,given,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,resulting,exchange,or,an,error,param,name,the,stream,name,param,data,the,data,to,push,return,a,publisher,with,the,resulting,exchange;publisher,exchange,to,stream,string,name,object,data
CamelReactiveStreamsService -> Publisher<Exchange> toStream(String name, Object data)_;1493982605;Pushes the given data into the specified Camel stream and returns a Publisher (mono) holding_the resulting exchange or an error.__@param name the stream name_@param data the data to push_@return a publisher with the resulting exchange;Publisher<Exchange> toStream(String name, Object data)_;pushes,the,given,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,resulting,exchange,or,an,error,param,name,the,stream,name,param,data,the,data,to,push,return,a,publisher,with,the,resulting,exchange;publisher,exchange,to,stream,string,name,object,data
CamelReactiveStreamsService -> Publisher<Exchange> toStream(String name, Object data)_;1494845216;Pushes the given data into the specified Camel stream and returns a Publisher (mono) holding_the resulting exchange or an error.__@param name the stream name_@param data the data to push_@return a publisher with the resulting exchange;Publisher<Exchange> toStream(String name, Object data)_;pushes,the,given,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,resulting,exchange,or,an,error,param,name,the,stream,name,param,data,the,data,to,push,return,a,publisher,with,the,resulting,exchange;publisher,exchange,to,stream,string,name,object,data
CamelReactiveStreamsService -> Publisher<Exchange> toStream(String name, Object data)_;1495704737;Pushes the given data into the specified Camel stream and returns a Publisher (mono) holding_the resulting exchange or an error.__@param name the stream name_@param data the data to push_@return a publisher with the resulting exchange;Publisher<Exchange> toStream(String name, Object data)_;pushes,the,given,data,into,the,specified,camel,stream,and,returns,a,publisher,mono,holding,the,resulting,exchange,or,an,error,param,name,the,stream,name,param,data,the,data,to,push,return,a,publisher,with,the,resulting,exchange;publisher,exchange,to,stream,string,name,object,data
CamelReactiveStreamsService -> Subscriber<Exchange> subscriber(String uri)_;1486339409;Creates a new route that pushes data to the endpoint URI and returns_the associated {@code Subscriber}.__This method always create a new stream.__@param uri the target uri_@return the subscriber associated to the uri;Subscriber<Exchange> subscriber(String uri)_;creates,a,new,route,that,pushes,data,to,the,endpoint,uri,and,returns,the,associated,code,subscriber,this,method,always,create,a,new,stream,param,uri,the,target,uri,return,the,subscriber,associated,to,the,uri;subscriber,exchange,subscriber,string,uri
CamelReactiveStreamsService -> Subscriber<Exchange> subscriber(String uri)_;1491658900;Creates a new route that pushes data to the endpoint URI and returns_the associated {@code Subscriber}.__This method always create a new stream.__@param uri the target uri_@return the subscriber associated to the uri;Subscriber<Exchange> subscriber(String uri)_;creates,a,new,route,that,pushes,data,to,the,endpoint,uri,and,returns,the,associated,code,subscriber,this,method,always,create,a,new,stream,param,uri,the,target,uri,return,the,subscriber,associated,to,the,uri;subscriber,exchange,subscriber,string,uri
CamelReactiveStreamsService -> Subscriber<Exchange> subscriber(String uri)_;1491658900;Creates a new route that pushes data to the endpoint URI and returns_the associated {@code Subscriber}.__This method always create a new stream.__@param uri the target uri_@return the subscriber associated to the uri;Subscriber<Exchange> subscriber(String uri)_;creates,a,new,route,that,pushes,data,to,the,endpoint,uri,and,returns,the,associated,code,subscriber,this,method,always,create,a,new,stream,param,uri,the,target,uri,return,the,subscriber,associated,to,the,uri;subscriber,exchange,subscriber,string,uri
CamelReactiveStreamsService -> Subscriber<Exchange> subscriber(String uri)_;1493982605;Creates a new route that pushes data to the endpoint URI and returns_the associated {@code Subscriber}.__This method always create a new stream.__@param uri the target uri_@return the subscriber associated to the uri;Subscriber<Exchange> subscriber(String uri)_;creates,a,new,route,that,pushes,data,to,the,endpoint,uri,and,returns,the,associated,code,subscriber,this,method,always,create,a,new,stream,param,uri,the,target,uri,return,the,subscriber,associated,to,the,uri;subscriber,exchange,subscriber,string,uri
CamelReactiveStreamsService -> Subscriber<Exchange> subscriber(String uri)_;1494845216;Creates a new route that pushes data to the endpoint URI and returns_the associated {@code Subscriber}.__This method always create a new stream.__@param uri the target uri_@return the subscriber associated to the uri;Subscriber<Exchange> subscriber(String uri)_;creates,a,new,route,that,pushes,data,to,the,endpoint,uri,and,returns,the,associated,code,subscriber,this,method,always,create,a,new,stream,param,uri,the,target,uri,return,the,subscriber,associated,to,the,uri;subscriber,exchange,subscriber,string,uri
CamelReactiveStreamsService -> Subscriber<Exchange> subscriber(String uri)_;1495704737;Creates a new route that pushes data to the endpoint URI and returns_the associated {@code Subscriber}.__This method always create a new stream.__@param uri the target uri_@return the subscriber associated to the uri;Subscriber<Exchange> subscriber(String uri)_;creates,a,new,route,that,pushes,data,to,the,endpoint,uri,and,returns,the,associated,code,subscriber,this,method,always,create,a,new,stream,param,uri,the,target,uri,return,the,subscriber,associated,to,the,uri;subscriber,exchange,subscriber,string,uri
CamelReactiveStreamsService -> void process(String uri, Function<? super Publisher<Exchange>, ?> processor)_;1486339409;Adds a processing step at the specified endpoint uri (usually a "direct:name") that delegates_to the given reactive processor.__The processor receives a {@link Publisher} of exchanges and returns an object._If the output of the processor is a {@link Publisher}, it will be unwrapped before_delivering the result to the source route.__@param uri the uri where the processor should be attached_@param processor the reactive processor;void process(String uri, Function<? super Publisher<Exchange>, ?> processor)_;adds,a,processing,step,at,the,specified,endpoint,uri,usually,a,direct,name,that,delegates,to,the,given,reactive,processor,the,processor,receives,a,link,publisher,of,exchanges,and,returns,an,object,if,the,output,of,the,processor,is,a,link,publisher,it,will,be,unwrapped,before,delivering,the,result,to,the,source,route,param,uri,the,uri,where,the,processor,should,be,attached,param,processor,the,reactive,processor;void,process,string,uri,function,super,publisher,exchange,processor
CamelReactiveStreamsService -> void process(String uri, Function<? super Publisher<Exchange>, ?> processor)_;1491658900;Adds a processing step at the specified endpoint uri (usually a "direct:name") that delegates_to the given reactive processor.__The processor receives a {@link Publisher} of exchanges and returns an object._If the output of the processor is a {@link Publisher}, it will be unwrapped before_delivering the result to the source route.__@param uri the uri where the processor should be attached_@param processor the reactive processor;void process(String uri, Function<? super Publisher<Exchange>, ?> processor)_;adds,a,processing,step,at,the,specified,endpoint,uri,usually,a,direct,name,that,delegates,to,the,given,reactive,processor,the,processor,receives,a,link,publisher,of,exchanges,and,returns,an,object,if,the,output,of,the,processor,is,a,link,publisher,it,will,be,unwrapped,before,delivering,the,result,to,the,source,route,param,uri,the,uri,where,the,processor,should,be,attached,param,processor,the,reactive,processor;void,process,string,uri,function,super,publisher,exchange,processor
CamelReactiveStreamsService -> void process(String uri, Function<? super Publisher<Exchange>, ?> processor)_;1491658900;Adds a processing step at the specified endpoint uri (usually a "direct:name") that delegates_to the given reactive processor.__The processor receives a {@link Publisher} of exchanges and returns an object._If the output of the processor is a {@link Publisher}, it will be unwrapped before_delivering the result to the source route.__@param uri the uri where the processor should be attached_@param processor the reactive processor;void process(String uri, Function<? super Publisher<Exchange>, ?> processor)_;adds,a,processing,step,at,the,specified,endpoint,uri,usually,a,direct,name,that,delegates,to,the,given,reactive,processor,the,processor,receives,a,link,publisher,of,exchanges,and,returns,an,object,if,the,output,of,the,processor,is,a,link,publisher,it,will,be,unwrapped,before,delivering,the,result,to,the,source,route,param,uri,the,uri,where,the,processor,should,be,attached,param,processor,the,reactive,processor;void,process,string,uri,function,super,publisher,exchange,processor
CamelReactiveStreamsService -> void process(String uri, Function<? super Publisher<Exchange>, ?> processor)_;1493982605;Adds a processing step at the specified endpoint uri (usually a "direct:name") that delegates_to the given reactive processor.__The processor receives a {@link Publisher} of exchanges and returns an object._If the output of the processor is a {@link Publisher}, it will be unwrapped before_delivering the result to the source route.__@param uri the uri where the processor should be attached_@param processor the reactive processor;void process(String uri, Function<? super Publisher<Exchange>, ?> processor)_;adds,a,processing,step,at,the,specified,endpoint,uri,usually,a,direct,name,that,delegates,to,the,given,reactive,processor,the,processor,receives,a,link,publisher,of,exchanges,and,returns,an,object,if,the,output,of,the,processor,is,a,link,publisher,it,will,be,unwrapped,before,delivering,the,result,to,the,source,route,param,uri,the,uri,where,the,processor,should,be,attached,param,processor,the,reactive,processor;void,process,string,uri,function,super,publisher,exchange,processor
CamelReactiveStreamsService -> void process(String uri, Function<? super Publisher<Exchange>, ?> processor)_;1494845216;Adds a processing step at the specified endpoint uri (usually a "direct:name") that delegates_to the given reactive processor.__The processor receives a {@link Publisher} of exchanges and returns an object._If the output of the processor is a {@link Publisher}, it will be unwrapped before_delivering the result to the source route.__@param uri the uri where the processor should be attached_@param processor the reactive processor;void process(String uri, Function<? super Publisher<Exchange>, ?> processor)_;adds,a,processing,step,at,the,specified,endpoint,uri,usually,a,direct,name,that,delegates,to,the,given,reactive,processor,the,processor,receives,a,link,publisher,of,exchanges,and,returns,an,object,if,the,output,of,the,processor,is,a,link,publisher,it,will,be,unwrapped,before,delivering,the,result,to,the,source,route,param,uri,the,uri,where,the,processor,should,be,attached,param,processor,the,reactive,processor;void,process,string,uri,function,super,publisher,exchange,processor
CamelReactiveStreamsService -> void process(String uri, Function<? super Publisher<Exchange>, ?> processor)_;1495704737;Adds a processing step at the specified endpoint uri (usually a "direct:name") that delegates_to the given reactive processor.__The processor receives a {@link Publisher} of exchanges and returns an object._If the output of the processor is a {@link Publisher}, it will be unwrapped before_delivering the result to the source route.__@param uri the uri where the processor should be attached_@param processor the reactive processor;void process(String uri, Function<? super Publisher<Exchange>, ?> processor)_;adds,a,processing,step,at,the,specified,endpoint,uri,usually,a,direct,name,that,delegates,to,the,given,reactive,processor,the,processor,receives,a,link,publisher,of,exchanges,and,returns,an,object,if,the,output,of,the,processor,is,a,link,publisher,it,will,be,unwrapped,before,delivering,the,result,to,the,source,route,param,uri,the,uri,where,the,processor,should,be,attached,param,processor,the,reactive,processor;void,process,string,uri,function,super,publisher,exchange,processor
