commented;modifiers;parameterAmount;loc;comment;code
false;public;1;15;;@Override public void request(long l) {     if (terminated) {         // subscription is terminated, ignore         return.     }     terminated = true.     if (l <= 0) {         subscriber.onError(new IllegalArgumentException("3.9")).     } else {         subscriber.onNext(item).         subscriber.onComplete().     } }
false;public;0;4;;@Override public void cancel() {     terminated = true. }
false;public;1;29;;@Override public void subscribe(Subscriber<? super T> subscriber) {     Objects.requireNonNull(subscriber, "subscriber must not be null").     subscriber.onSubscribe(new Subscription() {          private boolean terminated.          @Override         public void request(long l) {             if (terminated) {                 // subscription is terminated, ignore                 return.             }             terminated = true.             if (l <= 0) {                 subscriber.onError(new IllegalArgumentException("3.9")).             } else {                 subscriber.onNext(item).                 subscriber.onComplete().             }         }          @Override         public void cancel() {             terminated = true.         }     }). }
