commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public Producer createProducer() throws Exception {     return new YammerMessageProducer(this). }
false;public;1;18;;public Consumer createConsumer(Processor processor) throws Exception {     switch(config.getFunctionType()) {         case MESSAGES:         case ALGO:         case FOLLOWING:         case MY_FEED:         case PRIVATE:         case SENT:         case RECEIVED:             return new YammerMessagePollingConsumer(this, processor).         case USERS:         case CURRENT:             return new YammerUserPollingConsumer(this, processor).         default:             throw new Exception(String.format("%s is not a valid Yammer function type.", config.getFunction())).     } }
false;public;0;3;;public boolean isSingleton() {     return true. }
false;public;0;3;;public YammerConfiguration getConfig() {     return config. }
false;public;1;3;;public void setConfig(YammerConfiguration config) {     this.config = config. }
false;protected;0;4;;@Override protected String createEndpointUri() {     return String.format("yammer://%s?consumerKey=%s&consumerSecret=%s&accessToken=%s", config.getFunction(), config.getConsumerKey(), config.getConsumerSecret(), config.getAccessToken()). }
