commented;modifiers;parameterAmount;loc;comment;code
false;protected;3;21;;protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {     // by default use config for each endpoint. use from component level if one has been explicitly set     YammerConfiguration endpointConfig = getConfig().     if (endpointConfig == null) {         endpointConfig = new YammerConfiguration().     }     // set options from component     endpointConfig.setConsumerKey(consumerKey).     endpointConfig.setConsumerSecret(consumerSecret).     endpointConfig.setAccessToken(accessToken).     endpointConfig.setFunction(remaining).     endpointConfig.setFunctionType(YammerFunctionType.fromUri(remaining)).     // and then override from parameters     setProperties(endpointConfig, parameters).     Endpoint endpoint = new YammerEndpoint(uri, this, endpointConfig).     setProperties(endpoint, parameters).     return endpoint. }
false;public;0;3;;public String getConsumerKey() {     return consumerKey. }
true;public;1;3;/**  * The consumer key  */ ;/**  * The consumer key  */ public void setConsumerKey(String consumerKey) {     this.consumerKey = consumerKey. }
false;public;0;3;;public String getConsumerSecret() {     return consumerSecret. }
true;public;1;3;/**  * The consumer secret  */ ;/**  * The consumer secret  */ public void setConsumerSecret(String consumerSecret) {     this.consumerSecret = consumerSecret. }
false;public;0;3;;public String getAccessToken() {     return accessToken. }
true;public;1;3;/**  * The access token  */ ;/**  * The access token  */ public void setAccessToken(String accessToken) {     this.accessToken = accessToken. }
false;public;0;3;;public YammerConfiguration getConfig() {     return config. }
true;public;1;3;/**  * To use a shared yammer configuration  */ ;/**  * To use a shared yammer configuration  */ public void setConfig(YammerConfiguration config) {     this.config = config. }
