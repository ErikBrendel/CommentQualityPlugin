commented;modifiers;parameterAmount;loc;comment;code
false;public;0;19;;@SuppressWarnings("unchecked") @Test public void testCsvUnMarshal() throws Exception {     result.expectedMessageCount(1).     // the first line contains the column names which we intend to skip     template.sendBody("direct:start", "OrderId|Item|Amount\n123|Camel in Action|1\n124|ActiveMQ in Action|2").     assertMockEndpointsSatisfied().     List<Map<String, String>> body = result.getReceivedExchanges().get(0).getIn().getBody(List.class).     assertEquals(2, body.size()).     assertEquals("123", body.get(0).get("OrderId")).     assertEquals("Camel in Action", body.get(0).get("Item")).     assertEquals("1", body.get(0).get("Amount")).     assertEquals("124", body.get(1).get("OrderId")).     assertEquals("ActiveMQ in Action", body.get(1).get("Item")).     assertEquals("2", body.get(1).get("Amount")). }
false;public;0;12;;@Test public void testCsvUnMarshalNoLine() throws Exception {     result.expectedMessageCount(1).     // the first and last line we intend to skip     template.sendBody("direct:start", "OrderId|Item|Amount\n").     assertMockEndpointsSatisfied().     List<?> body = result.getReceivedExchanges().get(0).getIn().getBody(List.class).     assertEquals(0, body.size()). }
false;public;0;18;;@SuppressWarnings("unchecked") @Test public void shouldUseExplicitHeadersInMap() throws Exception {     result.expectedMessageCount(1).     template.sendBody("direct:explicitHeader", "123|Camel in Action|1\n124|ActiveMQ in Action|2").     assertMockEndpointsSatisfied().     List<Map<String, String>> body = result.getReceivedExchanges().get(0).getIn().getBody(List.class).     assertEquals(2, body.size()).     assertEquals("123", body.get(0).get("MyOrderId")).     assertEquals("Camel in Action", body.get(0).get("MyItem")).     assertEquals("1", body.get(0).get("MyAmount")).     assertEquals("124", body.get(1).get("MyOrderId")).     assertEquals("ActiveMQ in Action", body.get(1).get("MyItem")).     assertEquals("2", body.get(1).get("MyAmount")). }
false;public;0;18;;@SuppressWarnings("unchecked") @Test public void shouldReplaceHeaderInMap() throws Exception {     result.expectedMessageCount(1).     template.sendBody("direct:replaceHeader", "a|b|c\n123|Camel in Action|1\n124|ActiveMQ in Action|2").     assertMockEndpointsSatisfied().     List<Map<String, String>> body = result.getReceivedExchanges().get(0).getIn().getBody(List.class).     assertEquals(2, body.size()).     assertEquals("123", body.get(0).get("MyOrderId")).     assertEquals("Camel in Action", body.get(0).get("MyItem")).     assertEquals("1", body.get(0).get("MyAmount")).     assertEquals("124", body.get(1).get("MyOrderId")).     assertEquals("ActiveMQ in Action", body.get(1).get("MyItem")).     assertEquals("2", body.get(1).get("MyAmount")). }
false;protected;0;4;;@Override protected ClassPathXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/dataformat/csv/CsvUnmarshalMapLineSpringTest-context.xml"). }
