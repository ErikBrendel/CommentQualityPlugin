commented;modifiers;parameterAmount;loc;comment;code
false;public;0;18;;@Test public void testMarshal() throws Exception {     MockEndpoint endpoint = getMockEndpoint("mock:daltons").     endpoint.expectedMessageCount(1).     List<List<String>> data = new ArrayList<>().     data.add(0, new ArrayList<String>()).     data.get(0).add(0, "L\u00fccky Luke").     Exchange in = createExchangeWithBody(data).     in.setProperty(Exchange.CHARSET_NAME, "ISO-8859-1").     template.send("direct:start", in).     endpoint.assertIsSatisfied().     Exchange exchange = endpoint.getExchanges().get(0).     String body = exchange.getIn().getBody(String.class).     assertThat(body, startsWith("L\u00fccky Luke")). }
false;public;0;3;;public void configure() {     from("direct:start").marshal().csv().to("mock:daltons"). }
false;protected;0;7;;protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          public void configure() {             from("direct:start").marshal().csv().to("mock:daltons").         }     }. }
