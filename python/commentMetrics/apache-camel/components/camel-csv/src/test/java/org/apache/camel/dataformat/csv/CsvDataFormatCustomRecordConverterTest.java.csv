commented;modifiers;parameterAmount;loc;comment;code
false;public;0;14;;@Test public void unmarshalTest() throws InterruptedException {     MockEndpoint mock = getMockEndpoint("mock:unmarshaled").     mock.expectedMessageCount(1).     template.sendBody("direct:unmarshal", getData()).     mock.assertIsSatisfied().     Message message = mock.getReceivedExchanges().get(0).getIn().     List<List<String>> body = CastUtils.cast((List) message.getBody()).     assertNotNull(body).     assertEquals(body.size(), 1).     List<String> row = body.get(0).     assertEquals(row.size(), 3).     assertEquals(row.toString(), "[Hello, Again, Democracy]"). }
false;private;0;3;;private String getData() {     return Stream.of("A1", "B1", "C1").collect(Collectors.joining(".")). }
false;protected;0;5;;@Override protected ClassPathXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/dataformat/csv/CsvDataFormatCustomRecordConverter.xml"). }
