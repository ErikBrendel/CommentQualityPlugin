commented;modifiers;parameterAmount;loc;comment;code
false;public;0;14;;@Test public void testCsvMarshal() throws Exception {     result.expectedMessageCount(1).     template.sendBody("direct:start", createBody()).     assertMockEndpointsSatisfied().     String body = result.getReceivedExchanges().get(0).getIn().getBody(String.class).     String[] lines = body.split(LS).     assertEquals(2, lines.length).     assertEquals("123|Camel in Action|1", lines[0].trim()).     assertEquals("124|ActiveMQ in Action|2", lines[1].trim()). }
false;private;0;16;;private List<Map<String, Object>> createBody() {     List<Map<String, Object>> data = new ArrayList<>().     Map<String, Object> row1 = new LinkedHashMap<>().     row1.put("orderId", 123).     row1.put("item", "Camel in Action").     row1.put("amount", 1).     data.add(row1).     Map<String, Object> row2 = new LinkedHashMap<>().     row2.put("orderId", 124).     row2.put("item", "ActiveMQ in Action").     row2.put("amount", 2).     data.add(row2).     return data. }
false;protected;0;4;;@Override protected ClassPathXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/dataformat/csv/CsvMarshalPipeDelimiterSpringTest-context.xml"). }
