commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected void doPreSetup() throws Exception {     outputFile = new File(folder.newFolder(), "output.csv"). }
false;public;0;17;;@Test public void testSendBody() throws IOException {     Map<String, String> body = new LinkedHashMap<>().     body.put("first_name", "John").     body.put("last_name", "Doe").     String fileName = outputFile.getName().     assertEquals("output.csv", fileName).     producerTemplate.sendBodyAndHeader(body, Exchange.FILE_NAME, fileName).     body = new LinkedHashMap<>().     body.put("first_name", "Max").     body.put("last_name", "Mustermann").     producerTemplate.sendBodyAndHeader(body, Exchange.FILE_NAME, fileName).     List<String> lines = Files.lines(Paths.get(outputFile.toURI())).filter(l -> l.trim().length() > 0).collect(Collectors.toList()).     // We got twice the headers... :(     assertEquals(4, lines.size()). }
false;public;0;13;;@Test public void testSendBodyWithList() throws IOException {     List<List<String>> body = Collections.singletonList(Arrays.asList("John", "Doe")).     String fileName = outputFile.getName().     assertEquals("output.csv", fileName).     producerTemplate.sendBodyAndHeader(body, Exchange.FILE_NAME, fileName).     body = Collections.singletonList(Arrays.asList("Max", "Mustermann")).     producerTemplate.sendBodyAndHeader(body, Exchange.FILE_NAME, fileName).     List<String> lines = Files.lines(Paths.get(outputFile.toURI())).filter(l -> l.trim().length() > 0).collect(Collectors.toList()).     // We got twice the headers... :(     assertEquals(4, lines.size()). }
false;public;0;5;;@Override public void configure() {     String uri = String.format("file:%s?charset=utf-8&fileExist=Append", outputFile.getParentFile().getAbsolutePath()).     from("direct:start").marshal(createCsvDataFormat()).to(uri). }
false;protected;0;10;;@Override protected RoutesBuilder createRouteBuilder() {     return new RouteBuilder() {          @Override         public void configure() {             String uri = String.format("file:%s?charset=utf-8&fileExist=Append", outputFile.getParentFile().getAbsolutePath()).             from("direct:start").marshal(createCsvDataFormat()).to(uri).         }     }. }
false;private,static;0;8;;private static CsvDataFormat createCsvDataFormat() {     CsvDataFormat dataFormat = new CsvDataFormat().     dataFormat.setDelimiter('\t').     dataFormat.setTrim(true).     dataFormat.setIgnoreSurroundingSpaces(true).     dataFormat.setHeader((String[]) Arrays.asList("first_name", "last_name").toArray()).     return dataFormat. }
