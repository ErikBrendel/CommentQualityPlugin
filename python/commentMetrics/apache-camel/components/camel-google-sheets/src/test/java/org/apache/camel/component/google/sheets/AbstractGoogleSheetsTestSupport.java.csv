# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractGoogleSheetsTestSupport -> private void createTestData();1543999070;Add some initial test data to test spreadsheet.;private void createTestData() {_        if (spreadsheet == null) {_            createTestSpreadsheet()__        }__        ValueRange valueRange = new ValueRange()__        valueRange.setValues(Arrays.asList(Arrays.asList("a1", "b1"), Arrays.asList("a2", "b2")))___        final Map<String, Object> headers = new HashMap<>()__        _        headers.put("CamelGoogleSheets.spreadsheetId", spreadsheet.getSpreadsheetId())__        _        headers.put("CamelGoogleSheets.range", TEST_SHEET + "!A1:B2")___        _        headers.put("CamelGoogleSheets.valueInputOption", "USER_ENTERED")___        requestBodyAndHeaders("google-sheets://data/update?inBody=values", valueRange, headers)__    };add,some,initial,test,data,to,test,spreadsheet;private,void,create,test,data,if,spreadsheet,null,create,test,spreadsheet,value,range,value,range,new,value,range,value,range,set,values,arrays,as,list,arrays,as,list,a1,b1,arrays,as,list,a2,b2,final,map,string,object,headers,new,hash,map,headers,put,camel,google,sheets,spreadsheet,id,spreadsheet,get,spreadsheet,id,headers,put,camel,google,sheets,range,a1,b2,headers,put,camel,google,sheets,value,input,option,request,body,and,headers,google,sheets,data,update,in,body,values,value,range,headers
AbstractGoogleSheetsTestSupport -> private void createTestData();1543999397;Add some initial test data to test spreadsheet.;private void createTestData() {_        if (spreadsheet == null) {_            createTestSpreadsheet()__        }__        ValueRange valueRange = new ValueRange()__        valueRange.setValues(Arrays.asList(Arrays.asList("a1", "b1"), Arrays.asList("a2", "b2")))___        final Map<String, Object> headers = new HashMap<>()__        _        headers.put("CamelGoogleSheets.spreadsheetId", spreadsheet.getSpreadsheetId())__        _        headers.put("CamelGoogleSheets.range", TEST_SHEET + "!A1:B2")___        _        headers.put("CamelGoogleSheets.valueInputOption", "USER_ENTERED")___        requestBodyAndHeaders("google-sheets://data/update?inBody=values", valueRange, headers)__    };add,some,initial,test,data,to,test,spreadsheet;private,void,create,test,data,if,spreadsheet,null,create,test,spreadsheet,value,range,value,range,new,value,range,value,range,set,values,arrays,as,list,arrays,as,list,a1,b1,arrays,as,list,a2,b2,final,map,string,object,headers,new,hash,map,headers,put,camel,google,sheets,spreadsheet,id,spreadsheet,get,spreadsheet,id,headers,put,camel,google,sheets,range,a1,b2,headers,put,camel,google,sheets,value,input,option,request,body,and,headers,google,sheets,data,update,in,body,values,value,range,headers
AbstractGoogleSheetsTestSupport -> private void createTestData();1543999457;Add some initial test data to test spreadsheet.;private void createTestData() {_        if (spreadsheet == null) {_            createTestSpreadsheet()__        }__        ValueRange valueRange = new ValueRange()__        valueRange.setValues(Arrays.asList(Arrays.asList("a1", "b1"), Arrays.asList("a2", "b2")))___        final Map<String, Object> headers = new HashMap<>()__        _        headers.put("CamelGoogleSheets.spreadsheetId", spreadsheet.getSpreadsheetId())__        _        headers.put("CamelGoogleSheets.range", TEST_SHEET + "!A1:B2")___        _        headers.put("CamelGoogleSheets.valueInputOption", "USER_ENTERED")___        requestBodyAndHeaders("google-sheets://data/update?inBody=values", valueRange, headers)__    };add,some,initial,test,data,to,test,spreadsheet;private,void,create,test,data,if,spreadsheet,null,create,test,spreadsheet,value,range,value,range,new,value,range,value,range,set,values,arrays,as,list,arrays,as,list,a1,b1,arrays,as,list,a2,b2,final,map,string,object,headers,new,hash,map,headers,put,camel,google,sheets,spreadsheet,id,spreadsheet,get,spreadsheet,id,headers,put,camel,google,sheets,range,a1,b2,headers,put,camel,google,sheets,value,input,option,request,body,and,headers,google,sheets,data,update,in,body,values,value,range,headers
AbstractGoogleSheetsTestSupport -> protected Map<String, Object> getTestOptions() throws IOException;1543999070;Read component configuration from TEST_OPTIONS_PROPERTIES._@return Map of component options._@throws IOException when TEST_OPTIONS_PROPERTIES could not be loaded.;protected Map<String, Object> getTestOptions() throws IOException {_        final Properties properties = new Properties()__        try {_            properties.load(getClass().getResourceAsStream(TEST_OPTIONS_PROPERTIES))__        } catch (Exception e) {_            throw new IOException(String.format("%s could not be loaded: %s", TEST_OPTIONS_PROPERTIES, e.getMessage()), e)__        }__        Map<String, Object> options = new HashMap<>()__        for (Map.Entry<Object, Object> entry : properties.entrySet()) {_            options.put(entry.getKey().toString(), entry.getValue())__        }__        return options__    };read,component,configuration,from,return,map,of,component,options,throws,ioexception,when,could,not,be,loaded;protected,map,string,object,get,test,options,throws,ioexception,final,properties,properties,new,properties,try,properties,load,get,class,get,resource,as,stream,catch,exception,e,throw,new,ioexception,string,format,s,could,not,be,loaded,s,e,get,message,e,map,string,object,options,new,hash,map,for,map,entry,object,object,entry,properties,entry,set,options,put,entry,get,key,to,string,entry,get,value,return,options
AbstractGoogleSheetsTestSupport -> protected Map<String, Object> getTestOptions() throws IOException;1543999397;Read component configuration from TEST_OPTIONS_PROPERTIES._@return Map of component options._@throws IOException when TEST_OPTIONS_PROPERTIES could not be loaded.;protected Map<String, Object> getTestOptions() throws IOException {_        final Properties properties = new Properties()__        try {_            properties.load(getClass().getResourceAsStream(TEST_OPTIONS_PROPERTIES))__        } catch (Exception e) {_            throw new IOException(String.format("%s could not be loaded: %s", TEST_OPTIONS_PROPERTIES, e.getMessage()), e)__        }__        Map<String, Object> options = new HashMap<>()__        for (Map.Entry<Object, Object> entry : properties.entrySet()) {_            options.put(entry.getKey().toString(), entry.getValue())__        }__        return options__    };read,component,configuration,from,return,map,of,component,options,throws,ioexception,when,could,not,be,loaded;protected,map,string,object,get,test,options,throws,ioexception,final,properties,properties,new,properties,try,properties,load,get,class,get,resource,as,stream,catch,exception,e,throw,new,ioexception,string,format,s,could,not,be,loaded,s,e,get,message,e,map,string,object,options,new,hash,map,for,map,entry,object,object,entry,properties,entry,set,options,put,entry,get,key,to,string,entry,get,value,return,options
AbstractGoogleSheetsTestSupport -> protected Map<String, Object> getTestOptions() throws IOException;1543999457;Read component configuration from TEST_OPTIONS_PROPERTIES._@return Map of component options._@throws IOException when TEST_OPTIONS_PROPERTIES could not be loaded.;protected Map<String, Object> getTestOptions() throws IOException {_        final Properties properties = new Properties()__        try {_            properties.load(getClass().getResourceAsStream(TEST_OPTIONS_PROPERTIES))__        } catch (Exception e) {_            throw new IOException(String.format("%s could not be loaded: %s", TEST_OPTIONS_PROPERTIES, e.getMessage()), e)__        }__        Map<String, Object> options = new HashMap<>()__        for (Map.Entry<Object, Object> entry : properties.entrySet()) {_            options.put(entry.getKey().toString(), entry.getValue())__        }__        return options__    };read,component,configuration,from,return,map,of,component,options,throws,ioexception,when,could,not,be,loaded;protected,map,string,object,get,test,options,throws,ioexception,final,properties,properties,new,properties,try,properties,load,get,class,get,resource,as,stream,catch,exception,e,throw,new,ioexception,string,format,s,could,not,be,loaded,s,e,get,message,e,map,string,object,options,new,hash,map,for,map,entry,object,object,entry,properties,entry,set,options,put,entry,get,key,to,string,entry,get,value,return,options
AbstractGoogleSheetsTestSupport -> private void createTestSpreadsheet();1543999070;Create test spreadsheet that is used throughout all tests.;private void createTestSpreadsheet() {_        Spreadsheet spreadsheet = new Spreadsheet()__        SpreadsheetProperties spreadsheetProperties = new SpreadsheetProperties()__        spreadsheetProperties.setTitle("camel-sheets-" + Math.abs(new Random().nextInt()))___        spreadsheet.setProperties(spreadsheetProperties)___        Sheet sheet = new Sheet()__        SheetProperties sheetProperties = new SheetProperties()__        sheetProperties.setTitle(TEST_SHEET)__        sheet.setProperties(sheetProperties)___        spreadsheet.setSheets(Collections.singletonList(sheet))___        this.spreadsheet = requestBody("google-sheets://spreadsheets/create?inBody=content", spreadsheet)__    };create,test,spreadsheet,that,is,used,throughout,all,tests;private,void,create,test,spreadsheet,spreadsheet,spreadsheet,new,spreadsheet,spreadsheet,properties,spreadsheet,properties,new,spreadsheet,properties,spreadsheet,properties,set,title,camel,sheets,math,abs,new,random,next,int,spreadsheet,set,properties,spreadsheet,properties,sheet,sheet,new,sheet,sheet,properties,sheet,properties,new,sheet,properties,sheet,properties,set,title,sheet,set,properties,sheet,properties,spreadsheet,set,sheets,collections,singleton,list,sheet,this,spreadsheet,request,body,google,sheets,spreadsheets,create,in,body,content,spreadsheet
AbstractGoogleSheetsTestSupport -> private void createTestSpreadsheet();1543999397;Create test spreadsheet that is used throughout all tests.;private void createTestSpreadsheet() {_        Spreadsheet spreadsheet = new Spreadsheet()__        SpreadsheetProperties spreadsheetProperties = new SpreadsheetProperties()__        spreadsheetProperties.setTitle("camel-sheets-" + Math.abs(new Random().nextInt()))___        spreadsheet.setProperties(spreadsheetProperties)___        Sheet sheet = new Sheet()__        SheetProperties sheetProperties = new SheetProperties()__        sheetProperties.setTitle(TEST_SHEET)__        sheet.setProperties(sheetProperties)___        spreadsheet.setSheets(Collections.singletonList(sheet))___        this.spreadsheet = requestBody("google-sheets://spreadsheets/create?inBody=content", spreadsheet)__    };create,test,spreadsheet,that,is,used,throughout,all,tests;private,void,create,test,spreadsheet,spreadsheet,spreadsheet,new,spreadsheet,spreadsheet,properties,spreadsheet,properties,new,spreadsheet,properties,spreadsheet,properties,set,title,camel,sheets,math,abs,new,random,next,int,spreadsheet,set,properties,spreadsheet,properties,sheet,sheet,new,sheet,sheet,properties,sheet,properties,new,sheet,properties,sheet,properties,set,title,sheet,set,properties,sheet,properties,spreadsheet,set,sheets,collections,singleton,list,sheet,this,spreadsheet,request,body,google,sheets,spreadsheets,create,in,body,content,spreadsheet
AbstractGoogleSheetsTestSupport -> private void createTestSpreadsheet();1543999457;Create test spreadsheet that is used throughout all tests.;private void createTestSpreadsheet() {_        Spreadsheet spreadsheet = new Spreadsheet()__        SpreadsheetProperties spreadsheetProperties = new SpreadsheetProperties()__        spreadsheetProperties.setTitle("camel-sheets-" + Math.abs(new Random().nextInt()))___        spreadsheet.setProperties(spreadsheetProperties)___        Sheet sheet = new Sheet()__        SheetProperties sheetProperties = new SheetProperties()__        sheetProperties.setTitle(TEST_SHEET)__        sheet.setProperties(sheetProperties)___        spreadsheet.setSheets(Collections.singletonList(sheet))___        this.spreadsheet = requestBody("google-sheets://spreadsheets/create?inBody=content", spreadsheet)__    };create,test,spreadsheet,that,is,used,throughout,all,tests;private,void,create,test,spreadsheet,spreadsheet,spreadsheet,new,spreadsheet,spreadsheet,properties,spreadsheet,properties,new,spreadsheet,properties,spreadsheet,properties,set,title,camel,sheets,math,abs,new,random,next,int,spreadsheet,set,properties,spreadsheet,properties,sheet,sheet,new,sheet,sheet,properties,sheet,properties,new,sheet,properties,sheet,properties,set,title,sheet,set,properties,sheet,properties,spreadsheet,set,sheets,collections,singleton,list,sheet,this,spreadsheet,request,body,google,sheets,spreadsheets,create,in,body,content,spreadsheet
