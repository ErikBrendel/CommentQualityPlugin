commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public String getConnectString() {     return connectString. }
false;public;1;3;;public void setConnectString(String connectString) {     this.connectString = connectString. }
false;public;0;3;;public int getTimeout() {     return timeout. }
false;public;1;3;;public void setTimeout(int timeout) {     this.timeout = timeout. }
true;public;0;13;// ------------------------------------------------------------------------- ;// FactoryBean interface // ------------------------------------------------------------------------- public CuratorFramework getObject() throws Exception {     LOG.debug("Connecting to ZooKeeper on " + connectString).     CuratorFrameworkFactory.Builder builder = CuratorFrameworkFactory.builder().connectString(connectString).retryPolicy(new ExponentialBackoffRetry(5, 10)).connectionTimeoutMs(getTimeout()).     this.curator = builder.build().     LOG.debug("Starting curator " + curator).     curator.start().     return curator. }
false;public;0;3;;public Class<?> getObjectType() {     return CuratorFramework.class. }
false;public;0;3;;public boolean isSingleton() {     return true. }
false;public;0;9;;public void destroy() throws Exception {     if (curator != null) {         // Note we cannot use zkClient.close()         // since you cannot currently close a client which is not connected         curator.close().         curator = null.     } }
