commented;modifiers;parameterAmount;loc;comment;code
false;public;1;3;;public Group<CamelNodeState> createGroup(String path) {     return zookeeperGroupSupport.createGroup(path). }
false;public;0;3;;public CuratorFramework getCurator() {     return zookeeperGroupSupport.getCurator(). }
true;public;1;3;/**  * To use a custom configured CuratorFramework as connection to zookeeper ensemble.  */ ;/**  * To use a custom configured CuratorFramework as connection to zookeeper ensemble.  */ public void setCurator(CuratorFramework curator) {     zookeeperGroupSupport.setCurator(curator). }
false;public;0;3;;public int getMaximumConnectionTimeout() {     return zookeeperGroupSupport.getMaximumConnectionTimeout(). }
true;public;1;3;/**  * Timeout in millis to use when connecting to the zookeeper ensemble  */ ;/**  * Timeout in millis to use when connecting to the zookeeper ensemble  */ public void setMaximumConnectionTimeout(int maximumConnectionTimeout) {     zookeeperGroupSupport.setMaximumConnectionTimeout(maximumConnectionTimeout). }
false;public;0;3;;public String getZooKeeperUrl() {     return zookeeperGroupSupport.getZooKeeperUrl(). }
true;public;1;3;/**  * The url for the zookeeper ensemble  */ ;/**  * The url for the zookeeper ensemble  */ public void setZooKeeperUrl(String zooKeeperUrl) {     zookeeperGroupSupport.setZooKeeperUrl(zooKeeperUrl). }
false;public;0;3;;public String getZooKeeperPassword() {     return zookeeperGroupSupport.getZooKeeperPassword(). }
true;public;1;3;/**  * The password to use when connecting to the zookeeper ensemble  */ ;/**  * The password to use when connecting to the zookeeper ensemble  */ public void setZooKeeperPassword(String zooKeeperPassword) {     zookeeperGroupSupport.setZooKeeperPassword(zooKeeperPassword). }
false;protected;0;7;;@Override protected void doStart() throws Exception {     super.doStart().     zookeeperGroupSupport.setCamelContext(getCamelContext()).     ServiceHelper.startService(zookeeperGroupSupport). }
false;protected;0;5;;@Override protected void doStop() throws Exception {     super.doStop().     ServiceHelper.stopAndShutdownServices(zookeeperGroupSupport). }
