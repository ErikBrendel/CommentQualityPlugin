commented;modifiers;parameterAmount;loc;comment;code
true;public;1;11;/**  * @inheritDoc  *  * Note: this class has a natural ordering that is inconsistent with equals.  */ ;/**  * @inheritDoc  *  * Note: this class has a natural ordering that is inconsistent with equals.  */ @Override public int compareTo(ChildData rhs) {     if (this == rhs) {         return 0.     }     if (rhs == null || getClass() != rhs.getClass()) {         return -1.     }     return path.compareTo(rhs.path). }
false;public;1;24;;@SuppressWarnings("RedundantIfStatement") @Override public boolean equals(Object o) {     if (this == o) {         return true.     }     if (o == null || getClass() != o.getClass()) {         return false.     }     ChildData childData = (ChildData) o.     if (!Arrays.equals(data, childData.data)) {         return false.     }     if (path != null ? !path.equals(childData.path) : childData.path != null) {         return false.     }     if (stat != null ? !stat.equals(childData.stat) : childData.stat != null) {         return false.     }     return true. }
false;public;0;7;;@Override public int hashCode() {     int result = path != null ? path.hashCode() : 0.     result = 31 * result + (stat != null ? stat.hashCode() : 0).     result = 31 * result + (data != null ? Arrays.hashCode(data) : 0).     return result. }
true;public;0;3;/**  * Returns the full path of the this child  *  * @return full path  */ ;/**  * Returns the full path of the this child  *  * @return full path  */ public String getPath() {     return path. }
true;public;0;3;/**  * Returns the stat data for this child  *  * @return stat or null  */ ;/**  * Returns the stat data for this child  *  * @return stat or null  */ public Stat getStat() {     return stat. }
true;public;0;3;/**  * <p>Returns the node data for this child when the cache mode is set to cache data.</p>  *  * <p><b>NOTE:</b> the byte array returned is the raw reference of this instance's field. If you change  * the values in the array any other callers to this method will see the change.</p>  *  * @return node data or null  */ ;/**  * <p>Returns the node data for this child when the cache mode is set to cache data.</p>  *  * <p><b>NOTE:</b> the byte array returned is the raw reference of this instance's field. If you change  * the values in the array any other callers to this method will see the change.</p>  *  * @return node data or null  */ public byte[] getData() {     return data. }
true;public;0;3;/**  * <p>Returns the node for this group member.</p>  *  * @return the node or null  */ ;/**  * <p>Returns the node for this group member.</p>  *  * @return the node or null  */ public T getNode() {     return node. }
false;public;0;4;;@Override public String toString() {     return "ChildData{path='" + path + '\'' + ", stat=" + stat + ", data=" + Arrays.toString(data) + '}'. }
