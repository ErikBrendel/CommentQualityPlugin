commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public JSR356Endpoint getEndpoint() {     return JSR356Endpoint.class.cast(super.getEndpoint()). }
false;public;1;4;;@Override public <T> T getEndpointInstance(final Class<T> clazz) {     return clazz.cast(serverEndpoint). }
false;protected;0;30;;@Override protected void doStart() throws Exception {     super.doStart().     final String endpointKey = getEndpoint().getEndpointUri().substring("websocket-jsr356://".length()).     if (endpointKey.contains("://")) {         // we act as a client         // todo:         final ClientEndpointConfig.Builder clientConfig = ClientEndpointConfig.Builder.create().         // config         manager = new ClientSessions(sessionCount, URI.create(endpointKey), clientConfig.build(), onMessage).         manager.prepare().     } else {         final JSR356WebSocketComponent.ContextBag bag = JSR356WebSocketComponent.getContext(context).         final CamelServerEndpoint endpoint = bag.getEndpoints().get(endpointKey).         if (endpoint == null) {             // todo: make it customizable (the endpoint config)             final ServerEndpointConfig.Builder configBuilder = ServerEndpointConfig.Builder.create(CamelServerEndpoint.class, endpointKey).             final CamelServerEndpoint serverEndpoint = new CamelServerEndpoint().             bag.getEndpoints().put(endpointKey, serverEndpoint).             closeTask = addObserver(serverEndpoint).             configBuilder.configurator(new ServerEndpointConfig.Configurator() {                  @Override                 public <T> T getEndpointInstance(final Class<T> clazz) {                     return clazz.cast(serverEndpoint).                 }             }).             bag.getContainer().addEndpoint(configBuilder.build()).         } else {             closeTask = addObserver(endpoint).         }     } }
false;private;1;4;;private Runnable addObserver(final CamelServerEndpoint endpoint) {     endpoint.getEndpoints().add(onMessage).     return () -> endpoint.getEndpoints().remove(onMessage). }
false;protected;0;6;;@Override protected void doStop() throws Exception {     ofNullable(manager).ifPresent(ClientSessions::close).     ofNullable(closeTask).ifPresent(Runnable::run).     super.doStop(). }
