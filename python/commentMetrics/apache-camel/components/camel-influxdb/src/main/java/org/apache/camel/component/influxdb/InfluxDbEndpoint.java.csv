commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public Producer createProducer() throws Exception {     return new InfluxDbProducer(this). }
false;public;1;4;;@Override public Consumer createConsumer(Processor processor) throws Exception {     throw new UnsupportedOperationException("You cannot receive messages from this endpoint"). }
false;protected;0;6;;@Override protected void doStart() throws Exception {     influxDB = CamelContextHelper.mandatoryLookup(getCamelContext(), connectionBean, InfluxDB.class).     log.debug("Resolved the connection with the name {} as {}", connectionBean, influxDB).     super.doStart(). }
false;protected;0;4;;@Override protected void doStop() throws Exception {     super.doStop(). }
false;public;0;4;;@Override public boolean isSingleton() {     return true. }
false;public;0;3;;public InfluxDB getInfluxDB() {     return influxDB. }
true;public;1;3;/**  * The Influx DB to use  */ ;/**  * The Influx DB to use  */ public void setInfluxDB(InfluxDB influxDB) {     this.influxDB = influxDB. }
false;public;0;3;;public String getDatabaseName() {     return databaseName. }
true;public;1;3;/**  * The name of the database where the time series will be stored  */ ;/**  * The name of the database where the time series will be stored  */ public void setDatabaseName(String databaseName) {     this.databaseName = databaseName. }
false;public;0;3;;public String getRetentionPolicy() {     return retentionPolicy. }
true;public;1;3;/**  * The string that defines the retention policy to the data created by the endpoint  */ ;/**  * The string that defines the retention policy to the data created by the endpoint  */ public void setRetentionPolicy(String retentionPolicy) {     this.retentionPolicy = retentionPolicy. }
false;public;0;3;;public String getConnectionBean() {     return connectionBean. }
true;public;1;3;/**  * Connection to the influx database, of class InfluxDB.class  */ ;/**  * Connection to the influx database, of class InfluxDB.class  */ public void setConnectionBean(String connectionBean) {     this.connectionBean = connectionBean. }
false;public;0;3;;public boolean isBatch() {     return batch. }
true;public;1;3;/**  * Define if this operation is a batch operation or not  */ ;/**  * Define if this operation is a batch operation or not  */ public void setBatch(boolean batch) {     this.batch = batch. }
false;public;0;3;;public String getOperation() {     return operation. }
true;public;1;3;/**  * Define if this operation is an insert or a query  */ ;/**  * Define if this operation is an insert or a query  */ public void setOperation(String operation) {     this.operation = operation. }
false;public;0;3;;public String getQuery() {     return query. }
true;public;1;3;/**  * Define the query in case of operation query  */ ;/**  * Define the query in case of operation query  */ public void setQuery(String query) {     this.query = query. }
