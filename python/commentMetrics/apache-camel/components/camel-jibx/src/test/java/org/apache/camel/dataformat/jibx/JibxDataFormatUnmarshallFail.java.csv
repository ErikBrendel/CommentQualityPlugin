commented;modifiers;parameterAmount;loc;comment;code
false;public;0;21;;@Test(expected = CamelExecutionException.class) public void testUnmarshallFail() throws InterruptedException, ParserConfigurationException, IOException, SAXException {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(1).     String name = "foo".     double price = 1.     double amount = 2.     String purchaseOrderXml = String.format("<order name='%s' price='%s' amount='%s' />", name, price + "", amount + "").     template.sendBody("direct:start", purchaseOrderXml).     assertMockEndpointsSatisfied().     PurchaseOrder body = mock.getReceivedExchanges().get(0).getIn().getBody(PurchaseOrder.class).     assertEquals(name, body.getName()).     assertEquals(price, body.getPrice(), 1).     assertEquals(amount, body.getAmount(), 1). }
false;public;0;6;;public void configure() {     from("direct:start").unmarshal(new JibxDataFormat()).convertBodyTo(PurchaseOrder.class).to("mock:result"). }
false;protected;0;10;;protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          public void configure() {             from("direct:start").unmarshal(new JibxDataFormat()).convertBodyTo(PurchaseOrder.class).to("mock:result").         }     }. }
