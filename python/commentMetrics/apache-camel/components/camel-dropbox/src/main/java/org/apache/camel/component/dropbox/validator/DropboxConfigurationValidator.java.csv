commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;8;;public static void validateCommonProperties(DropboxConfiguration configuration) throws DropboxException {     if (configuration.getAccessToken() == null || configuration.getAccessToken().equals("")) {         throw new DropboxException("option <accessToken> is not present or not valid!").     }     if (configuration.getClientIdentifier() == null || configuration.getClientIdentifier().equals("")) {         throw new DropboxException("option <clientIdentifier> is not present or not valid!").     } }
false;public,static;1;3;;public static void validateGetOp(String remotePath) throws DropboxException {     validateRemotePath(remotePath). }
false;public,static;3;12;;public static void validatePutOp(String localPath, String remotePath, DropboxUploadMode uploadMode) throws DropboxException {     validateLocalPath(localPath).     // remote path is optional     if (remotePath != null) {         validateRemotePathForPut(remotePath).     } else {         // in case remote path is not set, local path is even the remote path so it must be validated as UNIX         validatePathInUnix(localPath).     }     if (uploadMode == null) {         throw new DropboxException("option <uploadMode> is not present or not valid!").     } }
false;public,static;1;3;;public static void validateSearchOp(String remotePath) throws DropboxException {     validateRemotePath(remotePath). }
false;public,static;1;3;;public static void validateDelOp(String remotePath) throws DropboxException {     validateRemotePath(remotePath). }
false;public,static;2;4;;public static void validateMoveOp(String remotePath, String newRemotePath) throws DropboxException {     validateRemotePath(remotePath).     validateRemotePath(newRemotePath). }
false;private,static;1;8;;private static void validateLocalPath(String localPath) throws DropboxException {     if (ObjectHelper.isNotEmpty(localPath)) {         File file = new File(localPath).         if (!file.exists()) {             throw new DropboxException("option <localPath> is not an existing file or directory!").         }     } }
false;private,static;1;6;;private static void validateRemotePath(String remotePath) throws DropboxException {     if (remotePath == null || !remotePath.startsWith(DropboxConstants.DROPBOX_FILE_SEPARATOR)) {         throw new DropboxException("option <remotePath> is not valid!").     }     validatePathInUnix(remotePath). }
false;private,static;1;6;;private static void validateRemotePathForPut(String remotePath) throws DropboxException {     if (!remotePath.startsWith(DropboxConstants.DROPBOX_FILE_SEPARATOR)) {         throw new DropboxException("option <remotePath> is not valid!").     }     validatePathInUnix(remotePath). }
false;private,static;1;5;;private static void validatePathInUnix(String path) throws DropboxException {     if (path.indexOf('\\') != -1) {         throw new DropboxException(path + " must not contain Windows path separator, use UNIX path separator!").     } }
