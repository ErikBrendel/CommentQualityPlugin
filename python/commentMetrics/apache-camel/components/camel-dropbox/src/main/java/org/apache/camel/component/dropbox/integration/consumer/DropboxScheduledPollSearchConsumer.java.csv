# id;timestamp;commentText;codeText;commentWords;codeWords
DropboxScheduledPollSearchConsumer -> @Override     protected int poll() throws Exception;1397206776;Poll from a dropbox remote path and put the result in the message exchange_@return number of messages polled_@throws Exception;@Override_    protected int poll() throws Exception {_        Exchange exchange = endpoint.createExchange()__        DropboxResult result = DropboxAPIFacade.getInstance(configuration.getClient())_                .search(configuration.getRemotePath(), configuration.getQuery())__        result.populateExchange(exchange)__        LOG.info("consumer --> downloaded: " + result.toString())___        try {_            _            getProcessor().process(exchange)__            return 1_ _        } finally {_            _            if (exchange.getException() != null) {_                getExceptionHandler().handleException("Error processing exchange", exchange, exchange.getException())__            }_        }_    };poll,from,a,dropbox,remote,path,and,put,the,result,in,the,message,exchange,return,number,of,messages,polled,throws,exception;override,protected,int,poll,throws,exception,exchange,exchange,endpoint,create,exchange,dropbox,result,result,dropbox,apifacade,get,instance,configuration,get,client,search,configuration,get,remote,path,configuration,get,query,result,populate,exchange,exchange,log,info,consumer,downloaded,result,to,string,try,get,processor,process,exchange,return,1,finally,if,exchange,get,exception,null,get,exception,handler,handle,exception,error,processing,exchange,exchange,exchange,get,exception
DropboxScheduledPollSearchConsumer -> @Override     protected int poll() throws Exception;1480063807;Poll from a dropbox remote path and put the result in the message exchange_@return number of messages polled_@throws Exception;@Override_    protected int poll() throws Exception {_        Exchange exchange = endpoint.createExchange()__        DropboxSearchResult result = DropboxAPIFacade.getInstance(configuration.getClient(), exchange)_                .search(configuration.getRemotePath(), configuration.getQuery())___        StringBuilder fileExtracted = new StringBuilder()__        for (DbxEntry entry : result.getFound()) {_            fileExtracted.append(entry.name).append("-").append(entry.path).append("\n")__        }__        exchange.getIn().setHeader(DropboxResultHeader.FOUND_FILES.name(), fileExtracted.toString())__        exchange.getIn().setBody(result.getFound())___        LOG.info("consumer --> downloaded: " + result.toString())___        try {_            _            getProcessor().process(exchange)__            return 1_ _        } finally {_            _            if (exchange.getException() != null) {_                getExceptionHandler().handleException("Error processing exchange", exchange, exchange.getException())__            }_        }_    };poll,from,a,dropbox,remote,path,and,put,the,result,in,the,message,exchange,return,number,of,messages,polled,throws,exception;override,protected,int,poll,throws,exception,exchange,exchange,endpoint,create,exchange,dropbox,search,result,result,dropbox,apifacade,get,instance,configuration,get,client,exchange,search,configuration,get,remote,path,configuration,get,query,string,builder,file,extracted,new,string,builder,for,dbx,entry,entry,result,get,found,file,extracted,append,entry,name,append,append,entry,path,append,n,exchange,get,in,set,header,dropbox,result,header,name,file,extracted,to,string,exchange,get,in,set,body,result,get,found,log,info,consumer,downloaded,result,to,string,try,get,processor,process,exchange,return,1,finally,if,exchange,get,exception,null,get,exception,handler,handle,exception,error,processing,exchange,exchange,exchange,get,exception
DropboxScheduledPollSearchConsumer -> @Override     protected int poll() throws Exception;1480063807;Poll from a dropbox remote path and put the result in the message exchange_@return number of messages polled_@throws Exception;@Override_    protected int poll() throws Exception {_        Exchange exchange = endpoint.createExchange()__        DropboxSearchResult result = DropboxAPIFacade.getInstance(configuration.getClient(), exchange)_                .search(configuration.getRemotePath(), configuration.getQuery())___        StringBuilder fileExtracted = new StringBuilder()__        for (DbxEntry entry : result.getFound()) {_            fileExtracted.append(entry.name).append("-").append(entry.path).append("\n")__        }__        exchange.getIn().setHeader(DropboxResultHeader.FOUND_FILES.name(), fileExtracted.toString())__        exchange.getIn().setBody(result.getFound())___        LOG.info("consumer --> downloaded: " + result.toString())___        try {_            _            getProcessor().process(exchange)__            return 1_ _        } finally {_            _            if (exchange.getException() != null) {_                getExceptionHandler().handleException("Error processing exchange", exchange, exchange.getException())__            }_        }_    };poll,from,a,dropbox,remote,path,and,put,the,result,in,the,message,exchange,return,number,of,messages,polled,throws,exception;override,protected,int,poll,throws,exception,exchange,exchange,endpoint,create,exchange,dropbox,search,result,result,dropbox,apifacade,get,instance,configuration,get,client,exchange,search,configuration,get,remote,path,configuration,get,query,string,builder,file,extracted,new,string,builder,for,dbx,entry,entry,result,get,found,file,extracted,append,entry,name,append,append,entry,path,append,n,exchange,get,in,set,header,dropbox,result,header,name,file,extracted,to,string,exchange,get,in,set,body,result,get,found,log,info,consumer,downloaded,result,to,string,try,get,processor,process,exchange,return,1,finally,if,exchange,get,exception,null,get,exception,handler,handle,exception,error,processing,exchange,exchange,exchange,get,exception
DropboxScheduledPollSearchConsumer -> @Override     protected int poll() throws Exception;1480063807;Poll from a dropbox remote path and put the result in the message exchange_@return number of messages polled_@throws Exception;@Override_    protected int poll() throws Exception {_        Exchange exchange = endpoint.createExchange()__        DropboxSearchResult result = new DropboxAPIFacade(configuration.getClient(), exchange)_                .search(configuration.getRemotePath(), configuration.getQuery())___        StringBuilder fileExtracted = new StringBuilder()__        for (DbxEntry entry : result.getFound()) {_            fileExtracted.append(entry.name).append("-").append(entry.path).append("\n")__        }__        exchange.getIn().setHeader(DropboxResultHeader.FOUND_FILES.name(), fileExtracted.toString())__        exchange.getIn().setBody(result.getFound())___        LOG.info("consumer --> downloaded: " + result.toString())___        try {_            _            getProcessor().process(exchange)__            return 1_ _        } finally {_            _            if (exchange.getException() != null) {_                getExceptionHandler().handleException("Error processing exchange", exchange, exchange.getException())__            }_        }_    };poll,from,a,dropbox,remote,path,and,put,the,result,in,the,message,exchange,return,number,of,messages,polled,throws,exception;override,protected,int,poll,throws,exception,exchange,exchange,endpoint,create,exchange,dropbox,search,result,result,new,dropbox,apifacade,configuration,get,client,exchange,search,configuration,get,remote,path,configuration,get,query,string,builder,file,extracted,new,string,builder,for,dbx,entry,entry,result,get,found,file,extracted,append,entry,name,append,append,entry,path,append,n,exchange,get,in,set,header,dropbox,result,header,name,file,extracted,to,string,exchange,get,in,set,body,result,get,found,log,info,consumer,downloaded,result,to,string,try,get,processor,process,exchange,return,1,finally,if,exchange,get,exception,null,get,exception,handler,handle,exception,error,processing,exchange,exchange,exchange,get,exception
DropboxScheduledPollSearchConsumer -> @Override     protected int poll() throws Exception;1480064361;Poll from a dropbox remote path and put the result in the message exchange_@return number of messages polled_@throws Exception;@Override_    protected int poll() throws Exception {_        Exchange exchange = endpoint.createExchange()__        DropboxSearchResult result = new DropboxAPIFacade(configuration.getClient(), exchange)_                .search(configuration.getRemotePath(), configuration.getQuery())___        StringBuilder fileExtracted = new StringBuilder()__        for (DbxEntry entry : result.getFound()) {_            fileExtracted.append(entry.name).append("-").append(entry.path).append("\n")__        }__        exchange.getIn().setHeader(DropboxResultHeader.FOUND_FILES.name(), fileExtracted.toString())__        exchange.getIn().setBody(result.getFound())___        if (LOG.isDebugEnabled()) {_            LOG.debug("Downloaded: {}", result.toString())__        }__        try {_            _            getProcessor().process(exchange)__            return 1_ _        } finally {_            _            if (exchange.getException() != null) {_                getExceptionHandler().handleException("Error processing exchange", exchange, exchange.getException())__            }_        }_    };poll,from,a,dropbox,remote,path,and,put,the,result,in,the,message,exchange,return,number,of,messages,polled,throws,exception;override,protected,int,poll,throws,exception,exchange,exchange,endpoint,create,exchange,dropbox,search,result,result,new,dropbox,apifacade,configuration,get,client,exchange,search,configuration,get,remote,path,configuration,get,query,string,builder,file,extracted,new,string,builder,for,dbx,entry,entry,result,get,found,file,extracted,append,entry,name,append,append,entry,path,append,n,exchange,get,in,set,header,dropbox,result,header,name,file,extracted,to,string,exchange,get,in,set,body,result,get,found,if,log,is,debug,enabled,log,debug,downloaded,result,to,string,try,get,processor,process,exchange,return,1,finally,if,exchange,get,exception,null,get,exception,handler,handle,exception,error,processing,exchange,exchange,exchange,get,exception
DropboxScheduledPollSearchConsumer -> @Override     protected int poll() throws Exception;1507288671;Poll from a dropbox remote path and put the result in the message exchange_@return number of messages polled_@throws Exception;@Override_    protected int poll() throws Exception {_        Exchange exchange = endpoint.createExchange()__        DropboxSearchResult result = new DropboxAPIFacade(configuration.getClient(), exchange)_                .search(configuration.getRemotePath(), configuration.getQuery())___        StringBuilder fileExtracted = new StringBuilder()__        for (SearchMatch entry : result.getFound()) {_            fileExtracted.append(entry.getMetadata().getName()).append("-").append(entry.getMetadata().getPathDisplay()).append("\n")__        }__        exchange.getIn().setHeader(DropboxResultHeader.FOUND_FILES.name(), fileExtracted.toString())__        exchange.getIn().setBody(result.getFound())___        if (LOG.isDebugEnabled()) {_            LOG.debug("Downloaded: {}", result.toString())__        }__        try {_            _            getProcessor().process(exchange)__            return 1_ _        } finally {_            _            if (exchange.getException() != null) {_                getExceptionHandler().handleException("Error processing exchange", exchange, exchange.getException())__            }_        }_    };poll,from,a,dropbox,remote,path,and,put,the,result,in,the,message,exchange,return,number,of,messages,polled,throws,exception;override,protected,int,poll,throws,exception,exchange,exchange,endpoint,create,exchange,dropbox,search,result,result,new,dropbox,apifacade,configuration,get,client,exchange,search,configuration,get,remote,path,configuration,get,query,string,builder,file,extracted,new,string,builder,for,search,match,entry,result,get,found,file,extracted,append,entry,get,metadata,get,name,append,append,entry,get,metadata,get,path,display,append,n,exchange,get,in,set,header,dropbox,result,header,name,file,extracted,to,string,exchange,get,in,set,body,result,get,found,if,log,is,debug,enabled,log,debug,downloaded,result,to,string,try,get,processor,process,exchange,return,1,finally,if,exchange,get,exception,null,get,exception,handler,handle,exception,error,processing,exchange,exchange,exchange,get,exception
DropboxScheduledPollSearchConsumer -> @Override     protected int poll() throws Exception;1518772634;Poll from a dropbox remote path and put the result in the message exchange_@return number of messages polled_@throws Exception;@Override_    protected int poll() throws Exception {_        Exchange exchange = endpoint.createExchange()__        DropboxSearchResult result = new DropboxAPIFacade(configuration.getClient(), exchange)_                .search(configuration.getRemotePath(), configuration.getQuery())___        StringBuilder fileExtracted = new StringBuilder()__        for (SearchMatch entry : result.getFound()) {_            fileExtracted.append(entry.getMetadata().getName()).append("-").append(entry.getMetadata().getPathDisplay()).append("\n")__        }__        exchange.getIn().setHeader(DropboxResultHeader.FOUND_FILES.name(), fileExtracted.toString())__        exchange.getIn().setBody(result.getFound())___        if (LOG.isDebugEnabled()) {_            LOG.debug("Downloaded: {}", result.toString())__        }__        try {_            _            getProcessor().process(exchange)__            return 1_ _        } finally {_            _            if (exchange.getException() != null) {_                getExceptionHandler().handleException("Error processing exchange", exchange, exchange.getException())__            }_        }_    };poll,from,a,dropbox,remote,path,and,put,the,result,in,the,message,exchange,return,number,of,messages,polled,throws,exception;override,protected,int,poll,throws,exception,exchange,exchange,endpoint,create,exchange,dropbox,search,result,result,new,dropbox,apifacade,configuration,get,client,exchange,search,configuration,get,remote,path,configuration,get,query,string,builder,file,extracted,new,string,builder,for,search,match,entry,result,get,found,file,extracted,append,entry,get,metadata,get,name,append,append,entry,get,metadata,get,path,display,append,n,exchange,get,in,set,header,dropbox,result,header,name,file,extracted,to,string,exchange,get,in,set,body,result,get,found,if,log,is,debug,enabled,log,debug,downloaded,result,to,string,try,get,processor,process,exchange,return,1,finally,if,exchange,get,exception,null,get,exception,handler,handle,exception,error,processing,exchange,exchange,exchange,get,exception
DropboxScheduledPollSearchConsumer -> @Override     protected int poll() throws Exception;1536605520;Poll from a dropbox remote path and put the result in the message exchange_@return number of messages polled_@throws Exception;@Override_    protected int poll() throws Exception {_        Exchange exchange = endpoint.createExchange()__        DropboxSearchResult result = new DropboxAPIFacade(configuration.getClient(), exchange)_                .search(configuration.getRemotePath(), configuration.getQuery())___        StringBuilder fileExtracted = new StringBuilder()__        for (SearchMatch entry : result.getFound()) {_            fileExtracted.append(entry.getMetadata().getName()).append("-").append(entry.getMetadata().getPathDisplay()).append("\n")__        }__        exchange.getIn().setHeader(DropboxResultHeader.FOUND_FILES.name(), fileExtracted.toString())__        exchange.getIn().setBody(result.getFound())___        if (LOG.isDebugEnabled()) {_            LOG.debug("Downloaded: {}", result)__        }__        try {_            _            getProcessor().process(exchange)__            return 1_ _        } finally {_            _            if (exchange.getException() != null) {_                getExceptionHandler().handleException("Error processing exchange", exchange, exchange.getException())__            }_        }_    };poll,from,a,dropbox,remote,path,and,put,the,result,in,the,message,exchange,return,number,of,messages,polled,throws,exception;override,protected,int,poll,throws,exception,exchange,exchange,endpoint,create,exchange,dropbox,search,result,result,new,dropbox,apifacade,configuration,get,client,exchange,search,configuration,get,remote,path,configuration,get,query,string,builder,file,extracted,new,string,builder,for,search,match,entry,result,get,found,file,extracted,append,entry,get,metadata,get,name,append,append,entry,get,metadata,get,path,display,append,n,exchange,get,in,set,header,dropbox,result,header,name,file,extracted,to,string,exchange,get,in,set,body,result,get,found,if,log,is,debug,enabled,log,debug,downloaded,result,try,get,processor,process,exchange,return,1,finally,if,exchange,get,exception,null,get,exception,handler,handle,exception,error,processing,exchange,exchange,exchange,get,exception
