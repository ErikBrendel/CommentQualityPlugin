commented;modifiers;parameterAmount;loc;comment;code
true;protected;0;29;/**  * Poll from a dropbox remote path and put the result in the message exchange  * @return number of messages polled  * @throws Exception  */ ;/**  * Poll from a dropbox remote path and put the result in the message exchange  * @return number of messages polled  * @throws Exception  */ @Override protected int poll() throws Exception {     Exchange exchange = endpoint.createExchange().     DropboxSearchResult result = new DropboxAPIFacade(configuration.getClient(), exchange).search(configuration.getRemotePath(), configuration.getQuery()).     StringBuilder fileExtracted = new StringBuilder().     for (SearchMatch entry : result.getFound()) {         fileExtracted.append(entry.getMetadata().getName()).append("-").append(entry.getMetadata().getPathDisplay()).append("\n").     }     exchange.getIn().setHeader(DropboxResultHeader.FOUND_FILES.name(), fileExtracted.toString()).     exchange.getIn().setBody(result.getFound()).     if (LOG.isDebugEnabled()) {         LOG.debug("Downloaded: {}", result).     }     try {         // send message to next processor in the route         getProcessor().process(exchange).         // number of messages polled         return 1.     } finally {         // log exception if an exception occurred and was not handled         if (exchange.getException() != null) {             getExceptionHandler().handleException("Error processing exchange", exchange, exchange.getException()).         }     } }
