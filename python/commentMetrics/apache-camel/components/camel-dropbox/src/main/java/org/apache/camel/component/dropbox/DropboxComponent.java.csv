commented;modifiers;parameterAmount;loc;comment;code
true;protected;3;30;/**  * Create a camel endpoint after passing validation on the incoming url.  * @param uri the full URI of the endpoint  * @param remaining the remaining part of the URI without the query  *                parameters or component prefix  * @param parameters the optional parameters passed in  * @return the camel endpoint  * @throws Exception  */ ;/**  * Create a camel endpoint after passing validation on the incoming url.  * @param uri the full URI of the endpoint  * @param remaining the remaining part of the URI without the query  *                parameters or component prefix  * @param parameters the optional parameters passed in  * @return the camel endpoint  * @throws Exception  */ protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {     DropboxConfiguration configuration = new DropboxConfiguration().     // set options from component     configuration.setAccessToken((String) parameters.get("accessToken")).     configuration.setLocalPath((String) parameters.get("localPath")).     configuration.setRemotePath(parameters.get("remotePath") != null ? ((String) parameters.get("remotePath")).replaceAll("\\s", "+") : null).     configuration.setNewRemotePath((String) parameters.get("newRemotePath")).     configuration.setQuery((String) parameters.get("query")).     configuration.setOperation(DropboxOperation.valueOf(remaining)).     configuration.setClientIdentifier(parameters.get("clientIdentifier") == null ? DropboxPropertyManager.getInstance().getProperty("clientIdentifier") : (String) parameters.get("clientIdentifier")).     if (parameters.get("uploadMode") != null) {         configuration.setUploadMode(DropboxUploadMode.valueOf((String) parameters.get("uploadMode"))).     }     // pass validation test     DropboxConfigurationValidator.validateCommonProperties(configuration).     // and then override from parameters     setProperties(configuration, parameters).     return new DropboxEndpoint(uri, this, configuration). }
