commented;modifiers;parameterAmount;loc;comment;code
true;public;0;4;// ************************************************* ;// ************************************************* // Tests (parameters) // ************************************************* @Override public boolean isUseRouteBuilder() {     return false. }
false;public;0;14;;@Test public void testParameters() throws Exception {     Component component = context().getComponent("dropbox").     ComponentVerifierExtension verifier = component.getExtension(ComponentVerifierExtension.class).orElseThrow(IllegalStateException::new).     Map<String, Object> parameters = new HashMap<>().     parameters.put("accessToken", "l").     parameters.put("clientIdentifier", "k").     ComponentVerifierExtension.Result result = verifier.verify(ComponentVerifierExtension.Scope.PARAMETERS, parameters).     Assert.assertEquals(ComponentVerifierExtension.Result.Status.OK, result.getStatus()). }
false;public;0;13;;@Test public void testConnectivity() throws Exception {     Component component = context().getComponent("dropbox").     ComponentVerifierExtension verifier = component.getExtension(ComponentVerifierExtension.class).orElseThrow(IllegalStateException::new).     Map<String, Object> parameters = new HashMap<>().     parameters.put("accessToken", "l").     parameters.put("clientIdentifier", "k").     ComponentVerifierExtension.Result result = verifier.verify(ComponentVerifierExtension.Scope.CONNECTIVITY, parameters).     Assert.assertEquals(ComponentVerifierExtension.Result.Status.ERROR, result.getStatus()). }
