commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Test public void testFull1() {     final String s = String.format("nsu=%s.s=%s", DEFAULT_NAMESPACE_URI, "item-1").     testUri("milo-client:tcp://foo:bar@localhost:@@port@@?samplingInterval=1000&node=RAW(" + s + ")", DEFAULT_NAMESPACE_URI, "item-1"). }
false;public;0;5;;@Test public void testFull2() {     final String s = String.format("ns=%s.s=%s", 1, "item-1").     testUri("milo-client:tcp://foo:bar@localhost:@@port@@?samplingInterval=1000&node=RAW(" + s + ")", ushort(1), "item-1"). }
false;public;0;5;;@Test public void testFull3() {     final String s = String.format("ns=%s.i=%s", 1, 2).     testUri("milo-client:tcp://foo:bar@localhost:@@port@@?samplingInterval=1000&node=RAW(" + s + ")", ushort(1), uint(2)). }
false;public;0;5;;@Test public void testFull1NonRaw() {     final String s = String.format("ns=%s.i=%s", 1, 2).     testUri("milo-client:tcp://foo:bar@localhost:@@port@@?samplingInterval=1000&node=" + urlFormParameterEscaper().escape(s), ushort(1), uint(2)). }
false;public;0;4;;@Test public void testDocURL() {     testUri("milo-client://user:password@localhost:12345?node=RAW(nsu=http://foo.bar.s=foo/bar)", "http://foo.bar", "foo/bar"). }
false;public;0;5;;@Test(expected = ResolveEndpointFailedException.class) public void testMixed() {     // This must fail since "node" is incomplete     testUri("milo-client:tcp://foo:bar@localhost:@@port@@?node=foo&namespaceUri=" + DEFAULT_NAMESPACE_URI, null, null). }
false;private;3;3;;private void testUri(final String uri, final Serializable namespace, final Serializable partialNodeId) {     assertNodeId(getMandatoryEndpoint(resolve(uri), MiloClientEndpoint.class), namespace, partialNodeId). }
false;private;3;9;;private void assertNodeId(final MiloClientEndpoint endpoint, final Serializable namespace, final Serializable partialNodeId) {     final ExpandedNodeId en = endpoint.getNodeId().     assertNotNull(en).     assertEquals(namespace, en.getNamespaceUri() == null ? en.getNamespaceIndex() : en.getNamespaceUri()).     assertEquals(partialNodeId, en.getIdentifier()). }
