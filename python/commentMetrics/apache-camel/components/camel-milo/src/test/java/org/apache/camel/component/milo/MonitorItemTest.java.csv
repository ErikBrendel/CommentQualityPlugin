# id;timestamp;commentText;codeText;commentWords;codeWords
MonitorItemTest -> @Test 	public void testMonitorItem1() throws Exception;1491987326;Monitor multiple events;@Test_	public void testMonitorItem1() throws Exception {_		__		_		this.producer1.sendBody("Foo")__		Thread.sleep(2_000)__		this.producer1.sendBody("Bar")__		Thread.sleep(2_000)__		this.producer1.sendBody("Baz")__		Thread.sleep(2_000)___		_		this.test1Endpoint.setExpectedCount(3)___		_		testBody(this.test1Endpoint.message(0), assertGoodValue("Foo"))__		testBody(this.test1Endpoint.message(1), assertGoodValue("Bar"))__		testBody(this.test1Endpoint.message(2), assertGoodValue("Baz"))___		_		this.assertMockEndpointsSatisfied()__	};monitor,multiple,events;test,public,void,test,monitor,item1,throws,exception,this,producer1,send,body,foo,thread,sleep,this,producer1,send,body,bar,thread,sleep,this,producer1,send,body,baz,thread,sleep,this,test1endpoint,set,expected,count,3,test,body,this,test1endpoint,message,0,assert,good,value,foo,test,body,this,test1endpoint,message,1,assert,good,value,bar,test,body,this,test1endpoint,message,2,assert,good,value,baz,this,assert,mock,endpoints,satisfied
MonitorItemTest -> @Test 	public void testMonitorItem1() throws Exception;1491987326;Monitor multiple events;@Test_	public void testMonitorItem1() throws Exception {_		__		_		this.producer1.sendBody("Foo")__		Thread.sleep(2_000)__		this.producer1.sendBody("Bar")__		Thread.sleep(2_000)__		this.producer1.sendBody("Baz")__		Thread.sleep(2_000)___		_		this.test1Endpoint.setExpectedCount(3)___		_		testBody(this.test1Endpoint.message(0), assertGoodValue("Foo"))__		testBody(this.test1Endpoint.message(1), assertGoodValue("Bar"))__		testBody(this.test1Endpoint.message(2), assertGoodValue("Baz"))___		_		this.assertMockEndpointsSatisfied()__	};monitor,multiple,events;test,public,void,test,monitor,item1,throws,exception,this,producer1,send,body,foo,thread,sleep,this,producer1,send,body,bar,thread,sleep,this,producer1,send,body,baz,thread,sleep,this,test1endpoint,set,expected,count,3,test,body,this,test1endpoint,message,0,assert,good,value,foo,test,body,this,test1endpoint,message,1,assert,good,value,bar,test,body,this,test1endpoint,message,2,assert,good,value,baz,this,assert,mock,endpoints,satisfied
MonitorItemTest -> @Test 	public void testMonitorItem1() throws Exception;1491987326;Monitor multiple events;@Test_	public void testMonitorItem1() throws Exception {_		__		_		this.producer1.sendBody("Foo")__		Thread.sleep(2_000)__		this.producer1.sendBody("Bar")__		Thread.sleep(2_000)__		this.producer1.sendBody("Baz")__		Thread.sleep(2_000)___		_		this.test1Endpoint.setExpectedCount(3)___		_		testBody(this.test1Endpoint.message(0), assertGoodValue("Foo"))__		testBody(this.test1Endpoint.message(1), assertGoodValue("Bar"))__		testBody(this.test1Endpoint.message(2), assertGoodValue("Baz"))___		_		this.assertMockEndpointsSatisfied()__	};monitor,multiple,events;test,public,void,test,monitor,item1,throws,exception,this,producer1,send,body,foo,thread,sleep,this,producer1,send,body,bar,thread,sleep,this,producer1,send,body,baz,thread,sleep,this,test1endpoint,set,expected,count,3,test,body,this,test1endpoint,message,0,assert,good,value,foo,test,body,this,test1endpoint,message,1,assert,good,value,bar,test,body,this,test1endpoint,message,2,assert,good,value,baz,this,assert,mock,endpoints,satisfied
MonitorItemTest -> @Test     public void testMonitorItem1() throws Exception;1491987327;Monitor multiple events;@Test_    public void testMonitorItem1() throws Exception {_        __        _        this.producer1.sendBody("Foo")__        Thread.sleep(2_000)__        this.producer1.sendBody("Bar")__        Thread.sleep(2_000)__        this.producer1.sendBody("Baz")__        Thread.sleep(2_000)___        _        this.test1Endpoint.setExpectedCount(3)___        _        testBody(this.test1Endpoint.message(0), assertGoodValue("Foo"))__        testBody(this.test1Endpoint.message(1), assertGoodValue("Bar"))__        testBody(this.test1Endpoint.message(2), assertGoodValue("Baz"))___        _        this.assertMockEndpointsSatisfied()__    };monitor,multiple,events;test,public,void,test,monitor,item1,throws,exception,this,producer1,send,body,foo,thread,sleep,this,producer1,send,body,bar,thread,sleep,this,producer1,send,body,baz,thread,sleep,this,test1endpoint,set,expected,count,3,test,body,this,test1endpoint,message,0,assert,good,value,foo,test,body,this,test1endpoint,message,1,assert,good,value,bar,test,body,this,test1endpoint,message,2,assert,good,value,baz,this,assert,mock,endpoints,satisfied
MonitorItemTest -> @Test     public void testMonitorItem1() throws Exception;1500541508;Monitor multiple events;@Test_    public void testMonitorItem1() throws Exception {_        __        _        this.producer1.sendBody("Foo")__        Thread.sleep(2_000)__        this.producer1.sendBody("Bar")__        Thread.sleep(2_000)__        this.producer1.sendBody("Baz")__        Thread.sleep(2_000)___        _        this.test1Endpoint.setExpectedCount(3)___        _        testBody(this.test1Endpoint.message(0), assertGoodValue("Foo"))__        testBody(this.test1Endpoint.message(1), assertGoodValue("Bar"))__        testBody(this.test1Endpoint.message(2), assertGoodValue("Baz"))___        _        this.assertMockEndpointsSatisfied()__    };monitor,multiple,events;test,public,void,test,monitor,item1,throws,exception,this,producer1,send,body,foo,thread,sleep,this,producer1,send,body,bar,thread,sleep,this,producer1,send,body,baz,thread,sleep,this,test1endpoint,set,expected,count,3,test,body,this,test1endpoint,message,0,assert,good,value,foo,test,body,this,test1endpoint,message,1,assert,good,value,bar,test,body,this,test1endpoint,message,2,assert,good,value,baz,this,assert,mock,endpoints,satisfied
MonitorItemTest -> @Test     public void testMonitorItem1() throws Exception;1521799533;Monitor multiple events;@Test_    public void testMonitorItem1() throws Exception {_        __        _        this.producer1.sendBody("Foo")__        Thread.sleep(2_000)__        this.producer1.sendBody("Bar")__        Thread.sleep(2_000)__        this.producer1.sendBody("Baz")__        Thread.sleep(2_000)___        _        this.test1Endpoint.setExpectedCount(3)___        _        testBody(this.test1Endpoint.message(0), assertGoodValue("Foo"))__        testBody(this.test1Endpoint.message(1), assertGoodValue("Bar"))__        testBody(this.test1Endpoint.message(2), assertGoodValue("Baz"))___        _        assertMockEndpointsSatisfied()__    };monitor,multiple,events;test,public,void,test,monitor,item1,throws,exception,this,producer1,send,body,foo,thread,sleep,this,producer1,send,body,bar,thread,sleep,this,producer1,send,body,baz,thread,sleep,this,test1endpoint,set,expected,count,3,test,body,this,test1endpoint,message,0,assert,good,value,foo,test,body,this,test1endpoint,message,1,assert,good,value,bar,test,body,this,test1endpoint,message,2,assert,good,value,baz,assert,mock,endpoints,satisfied
MonitorItemTest -> @Test     public void testMonitorItem1() throws Exception;1521799533;Monitor multiple events;@Test_    public void testMonitorItem1() throws Exception {_        __        _        this.producer1.sendBody("Foo")__        Thread.sleep(2_000)__        this.producer1.sendBody("Bar")__        Thread.sleep(2_000)__        this.producer1.sendBody("Baz")__        Thread.sleep(2_000)___        _        this.test1Endpoint.setExpectedCount(3)___        _        testBody(this.test1Endpoint.message(0), assertGoodValue("Foo"))__        testBody(this.test1Endpoint.message(1), assertGoodValue("Bar"))__        testBody(this.test1Endpoint.message(2), assertGoodValue("Baz"))___        _        assertMockEndpointsSatisfied()__    };monitor,multiple,events;test,public,void,test,monitor,item1,throws,exception,this,producer1,send,body,foo,thread,sleep,this,producer1,send,body,bar,thread,sleep,this,producer1,send,body,baz,thread,sleep,this,test1endpoint,set,expected,count,3,test,body,this,test1endpoint,message,0,assert,good,value,foo,test,body,this,test1endpoint,message,1,assert,good,value,bar,test,body,this,test1endpoint,message,2,assert,good,value,baz,assert,mock,endpoints,satisfied
