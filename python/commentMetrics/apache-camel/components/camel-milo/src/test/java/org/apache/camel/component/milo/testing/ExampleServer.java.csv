commented;modifiers;parameterAmount;loc;comment;code
false;public;0;32;;@Override public void configure() throws Exception {     /*                  * Take an MQTT topic and forward its content to an OPC UA                  * server item. You can e.g. take some MQTT application and an                  * OPC UA client, connect with both applications to their                  * topics/items. When you write on the MQTT item it will pop up                  * on the OPC UA item.                  */     from("paho:my/foo/bar?brokerUrl=tcp://iot.eclipse.org:1883").log("Temp update: ${body}").convertBodyTo(String.class).to("milo-server:MyItem").     /*                  * Creating a simple item which has not data but logs anything                  * which gets written to by an OPC UA write call                  */     from("milo-server:MyItem").log("MyItem: ${body}").     /*                  * Creating an item which takes write command and forwards them                  * to an MQTT topic                  */     from("milo-server:MyItem2").log("MyItem2: ${body}").convertBodyTo(String.class).to("paho:de/dentrassi/camel/milo/temperature?brokerUrl=tcp://iot.eclipse.org:1883").     /*                  * Re-read the output from the previous route from MQTT to the                  * local logging                  */     from("paho:de/dentrassi/camel/milo/temperature?brokerUrl=tcp://iot.eclipse.org:1883").log("Back from MQTT: ${body}"). }
false;public,static;1;59;;public static void main(final String[] args) throws Exception {     // camel conext     final CamelContext context = new DefaultCamelContext().     // configure milo     ((MiloServerComponent) context.getComponent("milo-server")).setUserAuthenticationCredentials("foo:bar").     // add routes     context.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             /*                  * Take an MQTT topic and forward its content to an OPC UA                  * server item. You can e.g. take some MQTT application and an                  * OPC UA client, connect with both applications to their                  * topics/items. When you write on the MQTT item it will pop up                  * on the OPC UA item.                  */             from("paho:my/foo/bar?brokerUrl=tcp://iot.eclipse.org:1883").log("Temp update: ${body}").convertBodyTo(String.class).to("milo-server:MyItem").             /*                  * Creating a simple item which has not data but logs anything                  * which gets written to by an OPC UA write call                  */             from("milo-server:MyItem").log("MyItem: ${body}").             /*                  * Creating an item which takes write command and forwards them                  * to an MQTT topic                  */             from("milo-server:MyItem2").log("MyItem2: ${body}").convertBodyTo(String.class).to("paho:de/dentrassi/camel/milo/temperature?brokerUrl=tcp://iot.eclipse.org:1883").             /*                  * Re-read the output from the previous route from MQTT to the                  * local logging                  */             from("paho:de/dentrassi/camel/milo/temperature?brokerUrl=tcp://iot.eclipse.org:1883").log("Back from MQTT: ${body}").         }     }).     // start     context.start().     while (true) {         Thread.sleep(Long.MAX_VALUE).     } }
