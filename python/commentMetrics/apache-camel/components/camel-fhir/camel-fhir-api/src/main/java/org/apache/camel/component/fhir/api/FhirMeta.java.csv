commented;modifiers;parameterAmount;loc;comment;code
true;public;2;5;/**  * Fetch the current metadata from the whole Server  *  * @param metaType The type of the meta datatype for the given FHIR model version (should be <code>MetaDt.class</code> or <code>MetaType.class</code>)  * @param <T> extends {@link IBaseMetaType}  * @param extraParameters see {@link ExtraParameters} for a full list of parameters that can be passed, may be NULL  * @return the {@link IBaseMetaType}  */ ;/**  * Fetch the current metadata from the whole Server  *  * @param metaType The type of the meta datatype for the given FHIR model version (should be <code>MetaDt.class</code> or <code>MetaType.class</code>)  * @param <T> extends {@link IBaseMetaType}  * @param extraParameters see {@link ExtraParameters} for a full list of parameters that can be passed, may be NULL  * @return the {@link IBaseMetaType}  */ public <T extends IBaseMetaType> T getFromServer(Class<T> metaType, Map<ExtraParameters, Object> extraParameters) {     IClientExecutable<IClientExecutable<?, T>, T> clientExecutable = client.meta().get(metaType).fromServer().     ExtraParameters.process(extraParameters, clientExecutable).     return clientExecutable.execute(). }
true;public;3;5;/**  * Fetch the current metadata from a specific resource  * @param extraParameters see {@link ExtraParameters} for a full list of parameters that can be passed, may be NULL  * @param metaType the {@link IBaseMetaType} class  * @param id the id  * @param <T> extends {@link IBaseMetaType}  * @return the {@link IBaseMetaType}  */ ;/**  * Fetch the current metadata from a specific resource  * @param extraParameters see {@link ExtraParameters} for a full list of parameters that can be passed, may be NULL  * @param metaType the {@link IBaseMetaType} class  * @param id the id  * @param <T> extends {@link IBaseMetaType}  * @return the {@link IBaseMetaType}  */ public <T extends IBaseMetaType> T getFromResource(Class<T> metaType, IIdType id, Map<ExtraParameters, Object> extraParameters) {     IClientExecutable<IClientExecutable<?, T>, T> clientExecutable = client.meta().get(metaType).fromResource(id).     ExtraParameters.process(extraParameters, clientExecutable).     return clientExecutable.execute(). }
true;public;3;5;/**  * Fetch the current metadata from a specific type  * @param <T> extends {@link IBaseMetaType}  * @param metaType the {@link IBaseMetaType} class  * @param resourceType the resource type e.g "Patient"  * @param extraParameters see {@link ExtraParameters} for a full list of parameters that can be passed, may be NULL  * @return the {@link IBaseMetaType}  */ ;/**  * Fetch the current metadata from a specific type  * @param <T> extends {@link IBaseMetaType}  * @param metaType the {@link IBaseMetaType} class  * @param resourceType the resource type e.g "Patient"  * @param extraParameters see {@link ExtraParameters} for a full list of parameters that can be passed, may be NULL  * @return the {@link IBaseMetaType}  */ public <T extends IBaseMetaType> T getFromType(Class<T> metaType, String resourceType, Map<ExtraParameters, Object> extraParameters) {     IClientExecutable<IClientExecutable<?, T>, T> clientExecutable = client.meta().get(metaType).fromType(resourceType).     ExtraParameters.process(extraParameters, clientExecutable).     return clientExecutable.execute(). }
true;public;3;5;/**  * Add the elements in the given metadata to the already existing set (do not remove any)  * @param <T> extends {@link IBaseMetaType}  * @param id the id  * @param meta the {@link IBaseMetaType} class  * @param extraParameters see {@link ExtraParameters} for a full list of parameters that can be passed, may be NULL  * @return the {@link IBaseMetaType}  */ ;/**  * Add the elements in the given metadata to the already existing set (do not remove any)  * @param <T> extends {@link IBaseMetaType}  * @param id the id  * @param meta the {@link IBaseMetaType} class  * @param extraParameters see {@link ExtraParameters} for a full list of parameters that can be passed, may be NULL  * @return the {@link IBaseMetaType}  */ public <T extends IBaseMetaType> T add(T meta, IIdType id, Map<ExtraParameters, Object> extraParameters) {     IClientExecutable<IClientExecutable<?, T>, T> clientExecutable = client.meta().add().onResource(id).meta(meta).     ExtraParameters.process(extraParameters, clientExecutable).     return clientExecutable.execute(). }
true;public;3;5;/**  * Delete the elements in the given metadata from the given id  * @param <T> extends {@link IBaseMetaType}  * @param id the id  * @param meta the {@link IBaseMetaType} class  * @param extraParameters see {@link ExtraParameters} for a full list of parameters that can be passed, may be NULL  * @return the {@link IBaseMetaType}  */ ;/**  * Delete the elements in the given metadata from the given id  * @param <T> extends {@link IBaseMetaType}  * @param id the id  * @param meta the {@link IBaseMetaType} class  * @param extraParameters see {@link ExtraParameters} for a full list of parameters that can be passed, may be NULL  * @return the {@link IBaseMetaType}  */ public <T extends IBaseMetaType> T delete(T meta, IIdType id, Map<ExtraParameters, Object> extraParameters) {     IClientExecutable<IClientExecutable<?, T>, T> clientExecutable = client.meta().delete().onResource(id).meta(meta).     ExtraParameters.process(extraParameters, clientExecutable).     return clientExecutable.execute(). }
