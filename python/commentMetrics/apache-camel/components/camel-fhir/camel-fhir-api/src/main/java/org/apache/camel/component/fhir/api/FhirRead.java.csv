commented;modifiers;parameterAmount;loc;comment;code
false;public;7;6;;public IBaseResource resourceById(Class<IBaseResource> resource, IIdType id, String ifVersionMatches, Boolean returnNull, IBaseResource returnResource, Boolean throwError, Map<ExtraParameters, Object> extraParameters) {     IReadExecutable<IBaseResource> readExecutable = client.read().resource(resource).withId(id).     ExtraParameters.process(extraParameters, readExecutable).     return processOptionalParams(ifVersionMatches, returnNull, returnResource, throwError, readExecutable). }
false;public;7;6;;public IBaseResource resourceById(String resourceClass, IIdType id, String ifVersionMatches, Boolean returnNull, IBaseResource returnResource, Boolean throwError, Map<ExtraParameters, Object> extraParameters) {     IReadExecutable<IBaseResource> readExecutable = client.read().resource(resourceClass).withId(id).     ExtraParameters.process(extraParameters, readExecutable).     return processOptionalParams(ifVersionMatches, returnNull, returnResource, throwError, readExecutable). }
false;public;8;7;;public IBaseResource resourceById(Class<IBaseResource> resource, String stringId, String version, String ifVersionMatches, Boolean returnNull, IBaseResource returnResource, Boolean throwError, Map<ExtraParameters, Object> extraParameters) {     IReadTyped<IBaseResource> readTyped = client.read().resource(resource).     IReadExecutable<IBaseResource> readExecutable = readWithOptionalVersion(stringId, readTyped, version).     ExtraParameters.process(extraParameters, readExecutable).     return processOptionalParams(ifVersionMatches, returnNull, returnResource, throwError, readExecutable). }
false;public;8;7;;public IBaseResource resourceById(String resourceClass, String stringId, String ifVersionMatches, String version, Boolean returnNull, IBaseResource returnResource, Boolean throwError, Map<ExtraParameters, Object> extraParameters) {     IReadTyped<IBaseResource> resource = client.read().resource(resourceClass).     IReadExecutable<IBaseResource> readExecutable = readWithOptionalVersion(stringId, resource, version).     ExtraParameters.process(extraParameters, readExecutable).     return processOptionalParams(ifVersionMatches, returnNull, returnResource, throwError, readExecutable). }
false;public;7;6;;public IBaseResource resourceById(Class<IBaseResource> resource, Long longId, String ifVersionMatches, Boolean returnNull, IBaseResource returnResource, Boolean throwError, Map<ExtraParameters, Object> extraParameters) {     IReadExecutable<IBaseResource> readExecutable = client.read().resource(resource).withId(longId).     ExtraParameters.process(extraParameters, readExecutable).     return processOptionalParams(ifVersionMatches, returnNull, returnResource, throwError, readExecutable). }
false;public;7;6;;public IBaseResource resourceById(String resourceClass, Long longId, String ifVersionMatches, Boolean returnNull, IBaseResource returnResource, Boolean throwError, Map<ExtraParameters, Object> extraParameters) {     IReadExecutable<IBaseResource> readExecutable = client.read().resource(resourceClass).withId(longId).     ExtraParameters.process(extraParameters, readExecutable).     return processOptionalParams(ifVersionMatches, returnNull, returnResource, throwError, readExecutable). }
false;public;7;6;;public IBaseResource resourceByUrl(Class<IBaseResource> resource, IIdType iUrl, String ifVersionMatches, Boolean returnNull, IBaseResource returnResource, Boolean throwError, Map<ExtraParameters, Object> extraParameters) {     IReadExecutable<IBaseResource> readExecutable = client.read().resource(resource).withUrl(iUrl).     ExtraParameters.process(extraParameters, readExecutable).     return processOptionalParams(ifVersionMatches, returnNull, returnResource, throwError, readExecutable). }
false;public;7;6;;public IBaseResource resourceByUrl(String resourceClass, IIdType iUrl, String ifVersionMatches, Boolean returnNull, IBaseResource returnResource, Boolean throwError, Map<ExtraParameters, Object> extraParameters) {     IReadExecutable<IBaseResource> readExecutable = client.read().resource(resourceClass).withUrl(iUrl).     ExtraParameters.process(extraParameters, readExecutable).     return processOptionalParams(ifVersionMatches, returnNull, returnResource, throwError, readExecutable). }
false;public;7;6;;public IBaseResource resourceByUrl(Class<IBaseResource> resource, String url, String ifVersionMatches, Boolean returnNull, IBaseResource returnResource, Boolean throwError, Map<ExtraParameters, Object> extraParameters) {     IReadExecutable<IBaseResource> readExecutable = client.read().resource(resource).withUrl(url).     ExtraParameters.process(extraParameters, readExecutable).     return processOptionalParams(ifVersionMatches, returnNull, returnResource, throwError, readExecutable). }
false;public;7;6;;public IBaseResource resourceByUrl(String resourceClass, String url, String ifVersionMatches, Boolean returnNull, IBaseResource returnResource, Boolean throwError, Map<ExtraParameters, Object> extraParameters) {     IReadExecutable<IBaseResource> readExecutable = client.read().resource(resourceClass).withUrl(url).     ExtraParameters.process(extraParameters, readExecutable).     return processOptionalParams(ifVersionMatches, returnNull, returnResource, throwError, readExecutable). }
false;private;5;15;;private IBaseResource processOptionalParams(String ifVersionMatches, Boolean returnNull, IBaseResource returnResource, Boolean throwError, IReadExecutable<IBaseResource> readExecutable) {     if (ifVersionMatches != null) {         IReadIfNoneMatch<IBaseResource> tiReadIfNoneMatch = readExecutable.ifVersionMatches(ifVersionMatches).         if (returnNull != null && returnNull) {             return tiReadIfNoneMatch.returnNull().execute().         } else if (returnResource != null) {             return tiReadIfNoneMatch.returnResource(returnResource).execute().         } else if (throwError != null) {             return tiReadIfNoneMatch.throwNotModifiedException().execute().         }         LOG.warn("No operation was specified with the If-None-Match header, ignoring").     }     return readExecutable.execute(). }
false;private;3;6;;private IReadExecutable<IBaseResource> readWithOptionalVersion(String stringId, IReadTyped<IBaseResource> resource, String version) {     if (version != null) {         return resource.withIdAndVersion(stringId, version).     }     return resource.withId(stringId). }
