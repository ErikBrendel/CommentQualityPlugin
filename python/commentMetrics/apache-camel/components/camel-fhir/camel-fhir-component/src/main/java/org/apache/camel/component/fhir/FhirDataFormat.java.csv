commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public FhirContext getFhirContext() {     return fhirContext. }
false;public;1;3;;public void setFhirContext(FhirContext fhirContext) {     this.fhirContext = fhirContext. }
false;public;0;3;;public String getFhirVersion() {     return fhirVersion. }
false;public;1;3;;public void setFhirVersion(String fhirVersion) {     this.fhirVersion = fhirVersion. }
false;public;0;3;;public boolean isContentTypeHeader() {     return contentTypeHeader. }
false;public;1;3;;public void setContentTypeHeader(boolean contentTypeHeader) {     this.contentTypeHeader = contentTypeHeader. }
false;public;0;3;;public IParserErrorHandler getParserErrorHandler() {     return parserErrorHandler. }
false;public;1;3;;public void setParserErrorHandler(IParserErrorHandler parserErrorHandler) {     this.parserErrorHandler = parserErrorHandler. }
false;public;0;3;;public ParserOptions getParserOptions() {     return parserOptions. }
false;public;1;3;;public void setParserOptions(ParserOptions parserOptions) {     this.parserOptions = parserOptions. }
false;public;0;3;;public String getServerBaseUrl() {     return serverBaseUrl. }
false;public;1;3;;public void setServerBaseUrl(String serverBaseUrl) {     this.serverBaseUrl = serverBaseUrl. }
false;public;0;3;;public boolean isPrettyPrint() {     return prettyPrint. }
false;public;1;3;;public void setPrettyPrint(boolean prettyPrint) {     this.prettyPrint = prettyPrint. }
false;public;0;3;;public List<Class<? extends IBaseResource>> getPreferTypes() {     return preferTypes. }
false;public;1;3;;public void setPreferTypes(List<Class<? extends IBaseResource>> preferTypes) {     this.preferTypes = preferTypes. }
false;public;0;3;;public boolean isOmitResourceId() {     return omitResourceId. }
false;public;1;3;;public void setOmitResourceId(boolean omitResourceId) {     this.omitResourceId = omitResourceId. }
false;public;0;3;;public IIdType getForceResourceId() {     return forceResourceId. }
false;public;1;3;;public void setForceResourceId(IIdType forceResourceId) {     this.forceResourceId = forceResourceId. }
false;public;0;3;;public Set<String> getEncodeElementsAppliesToResourceTypes() {     return encodeElementsAppliesToResourceTypes. }
false;public;1;3;;public void setEncodeElementsAppliesToResourceTypes(Set<String> encodeElementsAppliesToResourceTypes) {     this.encodeElementsAppliesToResourceTypes = encodeElementsAppliesToResourceTypes. }
false;public;0;3;;public boolean isEncodeElementsAppliesToChildResourcesOnly() {     return encodeElementsAppliesToChildResourcesOnly. }
false;public;1;3;;public void setEncodeElementsAppliesToChildResourcesOnly(boolean encodeElementsAppliesToChildResourcesOnly) {     this.encodeElementsAppliesToChildResourcesOnly = encodeElementsAppliesToChildResourcesOnly. }
false;public;0;3;;public Set<String> getEncodeElements() {     return encodeElements. }
false;public;1;3;;public void setEncodeElements(Set<String> encodeElements) {     this.encodeElements = encodeElements. }
false;public;0;3;;public Set<String> getDontEncodeElements() {     return dontEncodeElements. }
false;public;1;3;;public void setDontEncodeElements(Set<String> dontEncodeElements) {     this.dontEncodeElements = dontEncodeElements. }
false;public;0;3;;public Boolean getStripVersionsFromReferences() {     return stripVersionsFromReferences. }
false;public;1;3;;public void setStripVersionsFromReferences(Boolean stripVersionsFromReferences) {     this.stripVersionsFromReferences = stripVersionsFromReferences. }
false;public;0;3;;public Boolean getOverrideResourceIdWithBundleEntryFullUrl() {     return overrideResourceIdWithBundleEntryFullUrl. }
false;public;1;3;;public void setOverrideResourceIdWithBundleEntryFullUrl(Boolean overrideResourceIdWithBundleEntryFullUrl) {     this.overrideResourceIdWithBundleEntryFullUrl = overrideResourceIdWithBundleEntryFullUrl. }
false;public;0;3;;public boolean isSummaryMode() {     return summaryMode. }
false;public;1;3;;public void setSummaryMode(boolean summaryMode) {     this.summaryMode = summaryMode. }
false;public;0;3;;public boolean isSuppressNarratives() {     return suppressNarratives. }
false;public;1;3;;public void setSuppressNarratives(boolean suppressNarratives) {     this.suppressNarratives = suppressNarratives. }
false;public;0;3;;public List<String> getDontStripVersionsFromReferencesAtPaths() {     return dontStripVersionsFromReferencesAtPaths. }
false;public;1;3;;public void setDontStripVersionsFromReferencesAtPaths(List<String> dontStripVersionsFromReferencesAtPaths) {     this.dontStripVersionsFromReferencesAtPaths = dontStripVersionsFromReferencesAtPaths. }
false;protected;1;36;;protected void configureParser(IParser parser) {     if (ObjectHelper.isNotEmpty(getServerBaseUrl())) {         parser.setServerBaseUrl(getServerBaseUrl()).     }     if (ObjectHelper.isNotEmpty(getDontEncodeElements())) {         parser.setDontEncodeElements(getDontEncodeElements()).     }     if (ObjectHelper.isNotEmpty(getDontStripVersionsFromReferencesAtPaths())) {         parser.setDontStripVersionsFromReferencesAtPaths(getDontStripVersionsFromReferencesAtPaths()).     }     if (ObjectHelper.isNotEmpty(getEncodeElements())) {         parser.setEncodeElements(getEncodeElements()).     }     if (ObjectHelper.isNotEmpty(getEncodeElementsAppliesToResourceTypes())) {         parser.setEncodeElementsAppliesToResourceTypes(getEncodeElementsAppliesToResourceTypes()).     }     if (ObjectHelper.isNotEmpty(getForceResourceId())) {         parser.setEncodeForceResourceId(getForceResourceId()).     }     if (ObjectHelper.isNotEmpty(getPreferTypes())) {         parser.setPreferTypes(getPreferTypes()).     }     if (ObjectHelper.isNotEmpty(getParserErrorHandler())) {         parser.setParserErrorHandler(getParserErrorHandler()).     }     if (ObjectHelper.isNotEmpty(getOverrideResourceIdWithBundleEntryFullUrl())) {         parser.setOverrideResourceIdWithBundleEntryFullUrl(getOverrideResourceIdWithBundleEntryFullUrl()).     }     if (ObjectHelper.isNotEmpty(getStripVersionsFromReferences())) {         parser.setStripVersionsFromReferences(getStripVersionsFromReferences()).     }     parser.setSummaryMode(isSummaryMode()).     parser.setOmitResourceId(isOmitResourceId()).     parser.setPrettyPrint(isPrettyPrint()).     parser.setEncodeElementsAppliesToChildResourcesOnly(isEncodeElementsAppliesToChildResourcesOnly()). }
false;protected;0;12;;@Override protected void doStart() throws Exception {     if (fhirContext == null && fhirVersion != null) {         FhirVersionEnum version = FhirVersionEnum.valueOf(fhirVersion).         fhirContext = new FhirContext(version).     } else if (fhirContext == null) {         fhirContext = FhirContext.forDstu3().     }     if (ObjectHelper.isNotEmpty(parserOptions)) {         fhirContext.setParserOptions(parserOptions).     } }
false;protected;0;4;;@Override protected void doStop() throws Exception { // noop }
