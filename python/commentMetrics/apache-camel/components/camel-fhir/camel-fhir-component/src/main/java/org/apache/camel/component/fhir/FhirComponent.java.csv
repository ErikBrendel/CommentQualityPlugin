commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;4;;@Override protected FhirApiName getApiName(String apiNameStr) throws IllegalArgumentException {     return FhirApiName.fromValue(apiNameStr). }
false;protected;4;7;;@Override protected Endpoint createEndpoint(String uri, String methodName, FhirApiName apiName, FhirConfiguration endpointConfiguration) {     endpointConfiguration.setApiName(apiName).     endpointConfiguration.setMethodName(methodName).     return new FhirEndpoint(uri, this, apiName, methodName, endpointConfiguration). }
false;public;1;14;;public IGenericClient getClient(FhirConfiguration endpointConfiguration) {     final IGenericClient result.     if (endpointConfiguration.equals(this.configuration)) {         synchronized (this) {             if (client == null) {                 client = FhirHelper.createClient(this.configuration, getCamelContext()).             }         }         result = client.     } else {         result = FhirHelper.createClient(endpointConfiguration, getCamelContext()).     }     return result. }
true;public;1;4;/**  * To use the shared configuration  */ ;/**  * To use the shared configuration  */ @Override public void setConfiguration(FhirConfiguration configuration) {     super.setConfiguration(configuration). }
false;public;0;4;;@Override public FhirConfiguration getConfiguration() {     return super.getConfiguration(). }
