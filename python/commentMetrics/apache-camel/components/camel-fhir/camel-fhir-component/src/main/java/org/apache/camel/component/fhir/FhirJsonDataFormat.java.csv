commented;modifiers;parameterAmount;loc;comment;code
false;public;3;17;;@Override public void marshal(Exchange exchange, Object o, OutputStream outputStream) throws Exception {     IBaseResource iBaseResource.     if (!(o instanceof IBaseResource)) {         iBaseResource = exchange.getContext().getTypeConverter().mandatoryConvertTo(IBaseResource.class, exchange, o).     } else {         iBaseResource = (IBaseResource) o.     }     IParser parser = getFhirContext().newJsonParser().     configureParser(parser).     parser.encodeResourceToWriter(iBaseResource, new OutputStreamWriter(outputStream)).     if (isContentTypeHeader()) {         exchange.getMessage().setHeader(Exchange.CONTENT_TYPE, parser.getEncoding().getResourceContentTypeNonLegacy()).     } }
false;public;2;6;;@Override public Object unmarshal(Exchange exchange, InputStream inputStream) throws Exception {     IParser parser = getFhirContext().newJsonParser().     configureParser(parser).     return parser.parseResource(new InputStreamReader(inputStream)). }
false;public;0;4;;@Override public String getDataFormatName() {     return "fhirJson". }
