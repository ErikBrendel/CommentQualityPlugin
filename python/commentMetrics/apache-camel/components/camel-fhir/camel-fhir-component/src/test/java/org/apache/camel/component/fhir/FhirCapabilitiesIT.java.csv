commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void testOfType() throws Exception {     org.hl7.fhir.instance.model.api.IBaseConformance result = requestBody("direct://OF_TYPE", CapabilityStatement.class).     LOG.debug("ofType: " + result).     assertNotNull("ofType result", result).     assertEquals(Enumerations.PublicationStatus.ACTIVE, ((CapabilityStatement) result).getStatus()). }
false;public;0;11;;@Test public void testEncodeJSON() throws Exception {     Map<String, Object> headers = new HashMap<>().     headers.put(ExtraParameters.ENCODE_JSON.getHeaderName(), Boolean.TRUE).     org.hl7.fhir.instance.model.api.IBaseConformance result = requestBodyAndHeaders("direct://OF_TYPE", CapabilityStatement.class, headers).     LOG.debug("ofType: " + result).     assertNotNull("ofType result", result).     assertEquals(Enumerations.PublicationStatus.ACTIVE, ((CapabilityStatement) result).getStatus()). }
false;public;0;6;;public void configure() {     // test route for ofType     from("direct://OF_TYPE").to("fhir://" + PATH_PREFIX + "/ofType?inBody=type&log=true"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() {             // test route for ofType             from("direct://OF_TYPE").to("fhir://" + PATH_PREFIX + "/ofType?inBody=type&log=true").         }     }. }
