commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Override @Before public void setUp() throws Exception {     super.setUp(). }
false;public;0;5;;@Test public void defaultFhirJsonConfigTest() {     FhirDataFormat fhirJson = getDataformat("fhirJson").     assertDefaultConfig(fhirJson). }
false;public;0;5;;@Test public void defaultFhirXmlConfigTest() {     FhirDataFormat fhirXml = getDataformat("fhirXml").     assertDefaultConfig(fhirXml). }
false;private;1;19;;private void assertDefaultConfig(FhirDataFormat fhirJson) {     assertEquals(FhirVersionEnum.DSTU3, fhirJson.getFhirContext().getVersion().getVersion()).     assertNull(fhirJson.getDontEncodeElements()).     assertNull(fhirJson.getDontStripVersionsFromReferencesAtPaths()).     assertNull(fhirJson.getEncodeElements()).     assertNull(fhirJson.getEncodeElementsAppliesToResourceTypes()).     assertNull(fhirJson.getForceResourceId()).     assertNull(fhirJson.getParserErrorHandler()).     assertNull(fhirJson.getParserOptions()).     assertNull(fhirJson.getPreferTypes()).     assertNull(fhirJson.getServerBaseUrl()).     assertNull(fhirJson.getOverrideResourceIdWithBundleEntryFullUrl()).     assertNull(fhirJson.getStripVersionsFromReferences()).     assertFalse(fhirJson.isPrettyPrint()).     assertFalse(fhirJson.isEncodeElementsAppliesToChildResourcesOnly()).     assertFalse(fhirJson.isOmitResourceId()).     assertFalse(fhirJson.isSummaryMode()).     assertFalse(fhirJson.isSuppressNarratives()). }
false;private;1;4;;private FhirDataFormat getDataformat(String name) {     CamelContext camelContext = context().     return (FhirDataFormat) ((FhirDataformat) camelContext.adapt(ModelCamelContext.class).getDataFormats().get(name)).getDataFormat(). }
false;protected;0;4;;@Override protected AbstractApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/dataformat/fhir/FhirDataFormatDefaultConfigSpringTest.xml"). }
