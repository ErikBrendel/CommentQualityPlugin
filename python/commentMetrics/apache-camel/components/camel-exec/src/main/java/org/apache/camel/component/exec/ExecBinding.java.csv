commented;modifiers;parameterAmount;loc;comment;code
true;;2;1;/**  * Creates a {@link ExecCommand} from the headers in the  * <code>exchange</code> and the settings of the <code>endpoint</code>.  *  * @param exchange a Camel {@link Exchange}  * @param endpoint an {@link ExecEndpoint} instance  * @return an {@link ExecCommand} object  * @see ExecCommandExecutor  */ ;/**  * Creates a {@link ExecCommand} from the headers in the  * <code>exchange</code> and the settings of the <code>endpoint</code>.  *  * @param exchange a Camel {@link Exchange}  * @param endpoint an {@link ExecEndpoint} instance  * @return an {@link ExecCommand} object  * @see ExecCommandExecutor  */ ExecCommand readInput(Exchange exchange, ExecEndpoint endpoint).
true;;2;1;/**  * Populates the exchange form the {@link ExecResult}.  *  * @param exchange a Camel {@link Exchange}, in which to write the  *            <code>result</code>  * @param result the result of a command execution  * @see ExecCommandExecutor  */ ;/**  * Populates the exchange form the {@link ExecResult}.  *  * @param exchange a Camel {@link Exchange}, in which to write the  *            <code>result</code>  * @param result the result of a command execution  * @see ExecCommandExecutor  */ void writeOutput(Exchange exchange, ExecResult result).
