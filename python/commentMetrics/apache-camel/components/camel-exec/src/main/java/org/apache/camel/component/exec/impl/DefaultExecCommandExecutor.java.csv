# id;timestamp;commentText;codeText;commentWords;codeWords
DefaultExecCommandExecutor -> protected CommandLine toCommandLine(ExecCommand execCommand);1270120851;Transforms an exec command to a {@link CommandLine}__@param execCommand_@return a {@link CommandLine} object;protected CommandLine toCommandLine(ExecCommand execCommand) {_        CommandLine cl = new CommandLine(execCommand.getExecutable())__        List<String> args = execCommand.getArgs()__        for (String arg : args) {_            _            cl.addArgument(arg, false)__        }_        return cl__    };transforms,an,exec,command,to,a,link,command,line,param,exec,command,return,a,link,command,line,object;protected,command,line,to,command,line,exec,command,exec,command,command,line,cl,new,command,line,exec,command,get,executable,list,string,args,exec,command,get,args,for,string,arg,args,cl,add,argument,arg,false,return,cl
DefaultExecCommandExecutor -> protected CommandLine toCommandLine(ExecCommand execCommand);1271313326;Transforms an {@link ExecCommand} to a {@link CommandLine}. No quoting fo_the arguments is used.__@param execCommand a not-null <code>ExecCommand</code> instance._@return a {@link CommandLine} object.;protected CommandLine toCommandLine(ExecCommand execCommand) {_        notNull(execCommand, "execCommand")__        CommandLine cl = new CommandLine(execCommand.getExecutable())__        List<String> args = execCommand.getArgs()__        for (String arg : args) {_            _            cl.addArgument(arg, false)__        }_        return cl__    };transforms,an,link,exec,command,to,a,link,command,line,no,quoting,fo,the,arguments,is,used,param,exec,command,a,not,null,code,exec,command,code,instance,return,a,link,command,line,object;protected,command,line,to,command,line,exec,command,exec,command,not,null,exec,command,exec,command,command,line,cl,new,command,line,exec,command,get,executable,list,string,args,exec,command,get,args,for,string,arg,args,cl,add,argument,arg,false,return,cl
DefaultExecCommandExecutor -> protected CommandLine toCommandLine(ExecCommand execCommand);1273935981;Transforms an {@link ExecCommand} to a {@link CommandLine}. No quoting fo_the arguments is used.__@param execCommand a not-null <code>ExecCommand</code> instance._@return a {@link CommandLine} object.;protected CommandLine toCommandLine(ExecCommand execCommand) {_        notNull(execCommand, "execCommand")__        CommandLine cl = new CommandLine(execCommand.getExecutable())__        List<String> args = execCommand.getArgs()__        for (String arg : args) {_            _            cl.addArgument(arg, false)__        }_        return cl__    };transforms,an,link,exec,command,to,a,link,command,line,no,quoting,fo,the,arguments,is,used,param,exec,command,a,not,null,code,exec,command,code,instance,return,a,link,command,line,object;protected,command,line,to,command,line,exec,command,exec,command,not,null,exec,command,exec,command,command,line,cl,new,command,line,exec,command,get,executable,list,string,args,exec,command,get,args,for,string,arg,args,cl,add,argument,arg,false,return,cl
DefaultExecCommandExecutor -> protected CommandLine toCommandLine(ExecCommand execCommand);1296546062;Transforms an {@link ExecCommand} to a {@link CommandLine}. No quoting fo_the arguments is used.__@param execCommand a not-null <code>ExecCommand</code> instance._@return a {@link CommandLine} object.;protected CommandLine toCommandLine(ExecCommand execCommand) {_        notNull(execCommand, "execCommand")__        CommandLine cl = new CommandLine(execCommand.getExecutable())__        List<String> args = execCommand.getArgs()__        for (String arg : args) {_            _            cl.addArgument(arg, false)__        }_        return cl__    };transforms,an,link,exec,command,to,a,link,command,line,no,quoting,fo,the,arguments,is,used,param,exec,command,a,not,null,code,exec,command,code,instance,return,a,link,command,line,object;protected,command,line,to,command,line,exec,command,exec,command,not,null,exec,command,exec,command,command,line,cl,new,command,line,exec,command,get,executable,list,string,args,exec,command,get,args,for,string,arg,args,cl,add,argument,arg,false,return,cl
DefaultExecCommandExecutor -> protected CommandLine toCommandLine(ExecCommand execCommand);1424602281;Transforms an {@link ExecCommand} to a {@link CommandLine}. No quoting fo_the arguments is used.__@param execCommand a not-null <code>ExecCommand</code> instance._@return a {@link CommandLine} object.;protected CommandLine toCommandLine(ExecCommand execCommand) {_        notNull(execCommand, "execCommand")__        CommandLine cl = new CommandLine(execCommand.getExecutable())__        List<String> args = execCommand.getArgs()__        for (String arg : args) {_            _            cl.addArgument(arg, false)__        }_        return cl__    };transforms,an,link,exec,command,to,a,link,command,line,no,quoting,fo,the,arguments,is,used,param,exec,command,a,not,null,code,exec,command,code,instance,return,a,link,command,line,object;protected,command,line,to,command,line,exec,command,exec,command,not,null,exec,command,exec,command,command,line,cl,new,command,line,exec,command,get,executable,list,string,args,exec,command,get,args,for,string,arg,args,cl,add,argument,arg,false,return,cl
DefaultExecCommandExecutor -> protected CommandLine toCommandLine(ExecCommand execCommand);1424602472;Transforms an {@link ExecCommand} to a {@link CommandLine}. No quoting fo_the arguments is used.__@param execCommand a not-null <code>ExecCommand</code> instance._@return a {@link CommandLine} object.;protected CommandLine toCommandLine(ExecCommand execCommand) {_        notNull(execCommand, "execCommand")__        CommandLine cl = new CommandLine(execCommand.getExecutable())__        List<String> args = execCommand.getArgs()__        for (String arg : args) {_            _            cl.addArgument(arg, false)__        }_        return cl__    };transforms,an,link,exec,command,to,a,link,command,line,no,quoting,fo,the,arguments,is,used,param,exec,command,a,not,null,code,exec,command,code,instance,return,a,link,command,line,object;protected,command,line,to,command,line,exec,command,exec,command,not,null,exec,command,exec,command,command,line,cl,new,command,line,exec,command,get,executable,list,string,args,exec,command,get,args,for,string,arg,args,cl,add,argument,arg,false,return,cl
DefaultExecCommandExecutor -> protected CommandLine toCommandLine(ExecCommand execCommand);1431926722;Transforms an {@link ExecCommand} to a {@link CommandLine}. No quoting fo_the arguments is used.__@param execCommand a not-null <code>ExecCommand</code> instance._@return a {@link CommandLine} object.;protected CommandLine toCommandLine(ExecCommand execCommand) {_        notNull(execCommand, "execCommand")__        CommandLine cl = new CommandLine(execCommand.getExecutable())__        List<String> args = execCommand.getArgs()__        for (String arg : args) {_            _            cl.addArgument(arg, false)__        }_        return cl__    };transforms,an,link,exec,command,to,a,link,command,line,no,quoting,fo,the,arguments,is,used,param,exec,command,a,not,null,code,exec,command,code,instance,return,a,link,command,line,object;protected,command,line,to,command,line,exec,command,exec,command,not,null,exec,command,exec,command,command,line,cl,new,command,line,exec,command,get,executable,list,string,args,exec,command,get,args,for,string,arg,args,cl,add,argument,arg,false,return,cl
DefaultExecCommandExecutor -> protected CommandLine toCommandLine(ExecCommand execCommand);1438336235;Transforms an {@link ExecCommand} to a {@link CommandLine}. No quoting fo_the arguments is used.__@param execCommand a not-null <code>ExecCommand</code> instance._@return a {@link CommandLine} object.;protected CommandLine toCommandLine(ExecCommand execCommand) {_        notNull(execCommand, "execCommand")__        CommandLine cl = new CommandLine(execCommand.getExecutable())__        List<String> args = execCommand.getArgs()__        for (String arg : args) {_            _            cl.addArgument(arg, false)__        }_        return cl__    };transforms,an,link,exec,command,to,a,link,command,line,no,quoting,fo,the,arguments,is,used,param,exec,command,a,not,null,code,exec,command,code,instance,return,a,link,command,line,object;protected,command,line,to,command,line,exec,command,exec,command,not,null,exec,command,exec,command,command,line,cl,new,command,line,exec,command,get,executable,list,string,args,exec,command,get,args,for,string,arg,args,cl,add,argument,arg,false,return,cl
DefaultExecCommandExecutor -> protected CommandLine toCommandLine(ExecCommand execCommand);1445934917;Transforms an {@link ExecCommand} to a {@link CommandLine}. No quoting fo_the arguments is used.__@param execCommand a not-null <code>ExecCommand</code> instance._@return a {@link CommandLine} object.;protected CommandLine toCommandLine(ExecCommand execCommand) {_        notNull(execCommand, "execCommand")__        CommandLine cl = new CommandLine(execCommand.getExecutable())__        List<String> args = execCommand.getArgs()__        for (String arg : args) {_            _            cl.addArgument(arg, false)__        }_        return cl__    };transforms,an,link,exec,command,to,a,link,command,line,no,quoting,fo,the,arguments,is,used,param,exec,command,a,not,null,code,exec,command,code,instance,return,a,link,command,line,object;protected,command,line,to,command,line,exec,command,exec,command,not,null,exec,command,exec,command,command,line,cl,new,command,line,exec,command,get,executable,list,string,args,exec,command,get,args,for,string,arg,args,cl,add,argument,arg,false,return,cl
DefaultExecCommandExecutor -> protected CommandLine toCommandLine(ExecCommand execCommand);1445935073;Transforms an {@link ExecCommand} to a {@link CommandLine}. No quoting fo_the arguments is used.__@param execCommand a not-null <code>ExecCommand</code> instance._@return a {@link CommandLine} object.;protected CommandLine toCommandLine(ExecCommand execCommand) {_        notNull(execCommand, "execCommand")__        CommandLine cl = new CommandLine(execCommand.getExecutable())__        List<String> args = execCommand.getArgs()__        for (String arg : args) {_            _            cl.addArgument(arg, false)__        }_        return cl__    };transforms,an,link,exec,command,to,a,link,command,line,no,quoting,fo,the,arguments,is,used,param,exec,command,a,not,null,code,exec,command,code,instance,return,a,link,command,line,object;protected,command,line,to,command,line,exec,command,exec,command,not,null,exec,command,exec,command,command,line,cl,new,command,line,exec,command,get,executable,list,string,args,exec,command,get,args,for,string,arg,args,cl,add,argument,arg,false,return,cl
