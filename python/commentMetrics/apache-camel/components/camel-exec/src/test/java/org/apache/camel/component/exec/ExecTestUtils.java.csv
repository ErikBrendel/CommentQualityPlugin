commented;modifiers;parameterAmount;loc;comment;code
true;public,static;1;13;/**  * Where on the file system is located the <code>classpathResource</code>?  *  * @param classpathResource a resource in the classpath  * @return null if the resource does not exist in the classpath. If the file  *         is not null the resource is guaranteed to exist on the file  *         system  */ ;/**  * Where on the file system is located the <code>classpathResource</code>?  *  * @param classpathResource a resource in the classpath  * @return null if the resource does not exist in the classpath. If the file  *         is not null the resource is guaranteed to exist on the file  *         system  */ public static File getClasspathResourceFileOrNull(String classpathResource) {     if (classpathResource == null) {         return null.     }     try {         Resource resource = new ClassPathResource(classpathResource).         File resourceFile = resource.getFile().         return resourceFile.     } catch (IOException ioe) {         LOG.warn("The resource  " + classpathResource + " does not exist!", ioe).         return null.     } }
true;public,static;0;8;/**  * @return the java executable in a system independent way.  */ ;/**  * @return the java executable in a system independent way.  */ public static String buildJavaExecutablePath() {     String javaHome = System.getenv("JAVA_HOME").     if (javaHome == null) {         throw new IllegalStateException("The Exec component tests will fail, because the environment variable JAVA_HOME is not set!").     }     File java = new File(javaHome + File.separator + "bin" + File.separator + "java").     return java.getAbsolutePath(). }
