# id;timestamp;commentText;codeText;commentWords;codeWords
ExecTestUtils -> public static String buildJavaExecutablePath();1270120851;@return the java executable in a system independent way.;public static String buildJavaExecutablePath() {_        String javaHome = (String)System.getenv("JAVA_HOME")__        if (javaHome == null) {_            throw new IllegalStateException("The Exec component tests will fail, because the environment variable JAVA_HOME is not set!")__        }_        File java = new File(javaHome + File.separator + "bin" + File.separator + "java")__        return java.getAbsolutePath()__    };return,the,java,executable,in,a,system,independent,way;public,static,string,build,java,executable,path,string,java,home,string,system,getenv,if,java,home,null,throw,new,illegal,state,exception,the,exec,component,tests,will,fail,because,the,environment,variable,is,not,set,file,java,new,file,java,home,file,separator,bin,file,separator,java,return,java,get,absolute,path
ExecTestUtils -> public static String buildJavaExecutablePath();1271313326;@return the java executable in a system independent way.;public static String buildJavaExecutablePath() {_        String javaHome = (String)System.getenv("JAVA_HOME")__        if (javaHome == null) {_            throw new IllegalStateException("The Exec component tests will fail, because the environment variable JAVA_HOME is not set!")__        }_        File java = new File(javaHome + File.separator + "bin" + File.separator + "java")__        return java.getAbsolutePath()__    };return,the,java,executable,in,a,system,independent,way;public,static,string,build,java,executable,path,string,java,home,string,system,getenv,if,java,home,null,throw,new,illegal,state,exception,the,exec,component,tests,will,fail,because,the,environment,variable,is,not,set,file,java,new,file,java,home,file,separator,bin,file,separator,java,return,java,get,absolute,path
ExecTestUtils -> public static String buildJavaExecutablePath();1291798292;@return the java executable in a system independent way.;public static String buildJavaExecutablePath() {_        String javaHome = System.getenv("JAVA_HOME")__        if (javaHome == null) {_            System.out.println("The Exec component tests will fail, because the environment variable JAVA_HOME is not set!")__            throw new IllegalStateException("The Exec component tests will fail, because the environment variable JAVA_HOME is not set!")__        }_        File java = new File(javaHome + File.separator + "bin" + File.separator + "java")__        return java.getAbsolutePath()__    };return,the,java,executable,in,a,system,independent,way;public,static,string,build,java,executable,path,string,java,home,system,getenv,if,java,home,null,system,out,println,the,exec,component,tests,will,fail,because,the,environment,variable,is,not,set,throw,new,illegal,state,exception,the,exec,component,tests,will,fail,because,the,environment,variable,is,not,set,file,java,new,file,java,home,file,separator,bin,file,separator,java,return,java,get,absolute,path
ExecTestUtils -> public static String buildJavaExecutablePath();1296546062;@return the java executable in a system independent way.;public static String buildJavaExecutablePath() {_        String javaHome = System.getenv("JAVA_HOME")__        if (javaHome == null) {_            System.out.println("The Exec component tests will fail, because the environment variable JAVA_HOME is not set!")__            throw new IllegalStateException("The Exec component tests will fail, because the environment variable JAVA_HOME is not set!")__        }_        File java = new File(javaHome + File.separator + "bin" + File.separator + "java")__        return java.getAbsolutePath()__    };return,the,java,executable,in,a,system,independent,way;public,static,string,build,java,executable,path,string,java,home,system,getenv,if,java,home,null,system,out,println,the,exec,component,tests,will,fail,because,the,environment,variable,is,not,set,throw,new,illegal,state,exception,the,exec,component,tests,will,fail,because,the,environment,variable,is,not,set,file,java,new,file,java,home,file,separator,bin,file,separator,java,return,java,get,absolute,path
ExecTestUtils -> public static String buildJavaExecutablePath();1349099486;@return the java executable in a system independent way.;public static String buildJavaExecutablePath() {_        String javaHome = System.getenv("JAVA_HOME")__        if (javaHome == null) {_            throw new IllegalStateException("The Exec component tests will fail, because the environment variable JAVA_HOME is not set!")__        }_        File java = new File(javaHome + File.separator + "bin" + File.separator + "java")__        return java.getAbsolutePath()__    };return,the,java,executable,in,a,system,independent,way;public,static,string,build,java,executable,path,string,java,home,system,getenv,if,java,home,null,throw,new,illegal,state,exception,the,exec,component,tests,will,fail,because,the,environment,variable,is,not,set,file,java,new,file,java,home,file,separator,bin,file,separator,java,return,java,get,absolute,path
ExecTestUtils -> public static File getClasspathResourceFileOrNull(String classpathResource);1270120851;Where on the file system is located the <code>classpathResource</code>?__@param classpathResource a resource in the classpath_@return null if the resource does not exist in the classpath. If the file_is not null the resource is guaranteed to exist on the file_system;public static File getClasspathResourceFileOrNull(String classpathResource) {_        if (classpathResource == null) {_            return null__        }_        try {_            Resource resource = new ClassPathResource(classpathResource)__            File resourceFile = resource.getFile()__            return resourceFile__        } catch (IOException ioe) {_            LOG.warn("The resource  " + classpathResource + " does not exist!", ioe)__            return null__        }_    };where,on,the,file,system,is,located,the,code,classpath,resource,code,param,classpath,resource,a,resource,in,the,classpath,return,null,if,the,resource,does,not,exist,in,the,classpath,if,the,file,is,not,null,the,resource,is,guaranteed,to,exist,on,the,file,system;public,static,file,get,classpath,resource,file,or,null,string,classpath,resource,if,classpath,resource,null,return,null,try,resource,resource,new,class,path,resource,classpath,resource,file,resource,file,resource,get,file,return,resource,file,catch,ioexception,ioe,log,warn,the,resource,classpath,resource,does,not,exist,ioe,return,null
ExecTestUtils -> public static File getClasspathResourceFileOrNull(String classpathResource);1271313326;Where on the file system is located the <code>classpathResource</code>?__@param classpathResource a resource in the classpath_@return null if the resource does not exist in the classpath. If the file_is not null the resource is guaranteed to exist on the file_system;public static File getClasspathResourceFileOrNull(String classpathResource) {_        if (classpathResource == null) {_            return null__        }_        try {_            Resource resource = new ClassPathResource(classpathResource)__            File resourceFile = resource.getFile()__            return resourceFile__        } catch (IOException ioe) {_            LOG.warn("The resource  " + classpathResource + " does not exist!", ioe)__            return null__        }_    };where,on,the,file,system,is,located,the,code,classpath,resource,code,param,classpath,resource,a,resource,in,the,classpath,return,null,if,the,resource,does,not,exist,in,the,classpath,if,the,file,is,not,null,the,resource,is,guaranteed,to,exist,on,the,file,system;public,static,file,get,classpath,resource,file,or,null,string,classpath,resource,if,classpath,resource,null,return,null,try,resource,resource,new,class,path,resource,classpath,resource,file,resource,file,resource,get,file,return,resource,file,catch,ioexception,ioe,log,warn,the,resource,classpath,resource,does,not,exist,ioe,return,null
ExecTestUtils -> public static File getClasspathResourceFileOrNull(String classpathResource);1291798292;Where on the file system is located the <code>classpathResource</code>?__@param classpathResource a resource in the classpath_@return null if the resource does not exist in the classpath. If the file_is not null the resource is guaranteed to exist on the file_system;public static File getClasspathResourceFileOrNull(String classpathResource) {_        if (classpathResource == null) {_            return null__        }_        try {_            Resource resource = new ClassPathResource(classpathResource)__            File resourceFile = resource.getFile()__            return resourceFile__        } catch (IOException ioe) {_            LOG.warn("The resource  " + classpathResource + " does not exist!", ioe)__            return null__        }_    };where,on,the,file,system,is,located,the,code,classpath,resource,code,param,classpath,resource,a,resource,in,the,classpath,return,null,if,the,resource,does,not,exist,in,the,classpath,if,the,file,is,not,null,the,resource,is,guaranteed,to,exist,on,the,file,system;public,static,file,get,classpath,resource,file,or,null,string,classpath,resource,if,classpath,resource,null,return,null,try,resource,resource,new,class,path,resource,classpath,resource,file,resource,file,resource,get,file,return,resource,file,catch,ioexception,ioe,log,warn,the,resource,classpath,resource,does,not,exist,ioe,return,null
ExecTestUtils -> public static File getClasspathResourceFileOrNull(String classpathResource);1296546062;Where on the file system is located the <code>classpathResource</code>?__@param classpathResource a resource in the classpath_@return null if the resource does not exist in the classpath. If the file_is not null the resource is guaranteed to exist on the file_system;public static File getClasspathResourceFileOrNull(String classpathResource) {_        if (classpathResource == null) {_            return null__        }_        try {_            Resource resource = new ClassPathResource(classpathResource)__            File resourceFile = resource.getFile()__            return resourceFile__        } catch (IOException ioe) {_            LOG.warn("The resource  " + classpathResource + " does not exist!", ioe)__            return null__        }_    };where,on,the,file,system,is,located,the,code,classpath,resource,code,param,classpath,resource,a,resource,in,the,classpath,return,null,if,the,resource,does,not,exist,in,the,classpath,if,the,file,is,not,null,the,resource,is,guaranteed,to,exist,on,the,file,system;public,static,file,get,classpath,resource,file,or,null,string,classpath,resource,if,classpath,resource,null,return,null,try,resource,resource,new,class,path,resource,classpath,resource,file,resource,file,resource,get,file,return,resource,file,catch,ioexception,ioe,log,warn,the,resource,classpath,resource,does,not,exist,ioe,return,null
ExecTestUtils -> public static File getClasspathResourceFileOrNull(String classpathResource);1349099486;Where on the file system is located the <code>classpathResource</code>?__@param classpathResource a resource in the classpath_@return null if the resource does not exist in the classpath. If the file_is not null the resource is guaranteed to exist on the file_system;public static File getClasspathResourceFileOrNull(String classpathResource) {_        if (classpathResource == null) {_            return null__        }_        try {_            Resource resource = new ClassPathResource(classpathResource)__            File resourceFile = resource.getFile()__            return resourceFile__        } catch (IOException ioe) {_            LOG.warn("The resource  " + classpathResource + " does not exist!", ioe)__            return null__        }_    };where,on,the,file,system,is,located,the,code,classpath,resource,code,param,classpath,resource,a,resource,in,the,classpath,return,null,if,the,resource,does,not,exist,in,the,classpath,if,the,file,is,not,null,the,resource,is,guaranteed,to,exist,on,the,file,system;public,static,file,get,classpath,resource,file,or,null,string,classpath,resource,if,classpath,resource,null,return,null,try,resource,resource,new,class,path,resource,classpath,resource,file,resource,file,resource,get,file,return,resource,file,catch,ioexception,ioe,log,warn,the,resource,classpath,resource,does,not,exist,ioe,return,null
