commented;modifiers;parameterAmount;loc;comment;code
false;public;6;52;;@Override public Processor createApiProcessor(CamelContext camelContext, String contextPath, String contextIdPattern, boolean contextIdListing, RestConfiguration configuration, Map<String, Object> parameters) throws Exception {     Map<String, Object> options = new HashMap<>(parameters).     if (configuration.getApiProperties() != null) {         options.putAll(configuration.getApiProperties()).     }     // need to include host in options     String host = (String) options.get("host").     if (host != null) {         options.put("host", host).     } else {         // favor using explicit configured host for the api         host = configuration.getApiHost().         if (host != null) {             options.put("host", host).         } else {             host = configuration.getHost().             int port = configuration.getPort().             if (host != null && port > 0) {                 options.put("host", host + ":" + port).             } else if (host != null) {                 options.put("host", host).             } else {                 options.put("host", "localhost").             }         }     }     // and include the default scheme as well if not explicit configured     if (!options.containsKey("schemes") && !options.containsKey("schemas")) {         // NOTE schemas is a typo but kept for backwards compatible         String scheme = configuration.getScheme().         if (scheme != null) {             options.put("schemes", scheme).         }     }     // and context path is the base.path     String path = configuration.getContextPath().     if (path != null) {         options.put("base.path", path).     }     // is cors enabled?     Object cors = options.get("cors").     if (cors == null && configuration.isEnableCORS()) {         options.put("cors", "true").     }     return new RestSwaggerProcessor(contextIdPattern, contextIdListing, options, configuration). }
