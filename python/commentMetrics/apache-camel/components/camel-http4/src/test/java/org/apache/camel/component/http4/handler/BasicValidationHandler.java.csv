commented;modifiers;parameterAmount;loc;comment;code
false;public;3;29;;public void handle(final HttpRequest request, final HttpResponse response, final HttpContext context) throws HttpException, IOException {     if (expectedMethod != null && !expectedMethod.equals(request.getRequestLine().getMethod())) {         response.setStatusCode(HttpStatus.SC_METHOD_FAILURE).         return.     }     if (!validateQuery(request)) {         response.setStatusCode(HttpStatus.SC_BAD_REQUEST).         return.     }     if (expectedContent != null) {         HttpEntity entity = ((HttpEntityEnclosingRequest) request).getEntity().         String content = EntityUtils.toString(entity).         if (!expectedContent.equals(content)) {             response.setStatusCode(HttpStatus.SC_BAD_REQUEST).             return.         }     }     response.setStatusCode(HttpStatus.SC_OK).     String content = buildResponse(request).     if (content != null) {         response.setEntity(new StringEntity(content, "ASCII")).     } }
false;protected;1;11;;protected boolean validateQuery(HttpRequest request) throws IOException {     try {         String query = new URI(request.getRequestLine().getUri()).getQuery().         if (expectedQuery != null && !expectedQuery.equals(query)) {             return false.         }     } catch (URISyntaxException e) {         throw new IOException(e).     }     return true. }
false;protected;1;3;;protected String buildResponse(HttpRequest request) {     return responseContent. }
