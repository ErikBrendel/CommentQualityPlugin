commented;modifiers;parameterAmount;loc;comment;code
false;public;0;17;;@Before @Override public void setUp() throws Exception {     localServer = ServerBootstrap.bootstrap().setHttpProcessor(getBasicHttpProcessor()).setConnectionReuseStrategy(getConnectionReuseStrategy()).setResponseFactory(getHttpResponseFactory()).setExpectationVerifier(getHttpExpectationVerifier()).setSslContext(getSSLContext()).registerHandler("/", new BasicValidationHandler("GET", "hl=en&q=camel", null, getExpectedContent())).registerHandler("/test/", new BasicValidationHandler("GET", "my=@+camel", null, getExpectedContent())).registerHandler("/user/pass", new BasicValidationHandler("GET", "password=baa&username=foo", null, getExpectedContent())).create().     localServer.start().     super.setUp(). }
false;public;0;9;;@After @Override public void tearDown() throws Exception {     super.tearDown().     if (localServer != null) {         localServer.stop().     } }
false;public;1;2;;public void process(Exchange exchange) throws Exception { }
false;public;0;9;;@Test public void httpQuery() throws Exception {     Exchange exchange = template.request("http4://" + localServer.getInetAddress().getHostName() + ":" + localServer.getLocalPort() + "/?hl=en&q=camel", new Processor() {          public void process(Exchange exchange) throws Exception {         }     }).     assertExchange(exchange). }
false;public;1;3;;public void process(Exchange exchange) throws Exception {     exchange.getIn().setHeader(Exchange.HTTP_QUERY, "hl=en&q=camel"). }
false;public;0;10;;@Test public void httpQueryHeader() throws Exception {     Exchange exchange = template.request("http4://" + localServer.getInetAddress().getHostName() + ":" + localServer.getLocalPort() + "/", new Processor() {          public void process(Exchange exchange) throws Exception {             exchange.getIn().setHeader(Exchange.HTTP_QUERY, "hl=en&q=camel").         }     }).     assertExchange(exchange). }
false;public;1;2;;public void process(Exchange exchange) throws Exception { }
false;public;0;9;;@Test public void httpQueryWithEscapedCharacter() throws Exception {     Exchange exchange = template.request("http4://" + localServer.getInetAddress().getHostName() + ":" + localServer.getLocalPort() + "/test/?my=%40%20camel", new Processor() {          public void process(Exchange exchange) throws Exception {         }     }).     assertExchange(exchange). }
false;public;1;2;;public void process(Exchange exchange) throws Exception { }
false;public;0;9;;@Test public void httpQueryWithUsernamePassword() throws Exception {     Exchange exchange = template.request("http4://" + localServer.getInetAddress().getHostName() + ":" + localServer.getLocalPort() + "/user/pass?password=baa&username=foo", new Processor() {          public void process(Exchange exchange) throws Exception {         }     }).     assertExchange(exchange). }
