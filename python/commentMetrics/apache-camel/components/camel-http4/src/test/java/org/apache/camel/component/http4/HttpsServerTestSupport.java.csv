commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Before @Override public void setUp() throws Exception {     System.setProperty("javax.net.ssl.trustStorePassword", PASSWORD).     System.setProperty("javax.net.ssl.trustStore", KEYSTORE_PATH).     super.setUp(). }
false;public;0;8;;@After @Override public void tearDown() throws Exception {     super.tearDown().     System.clearProperty("javax.net.ssl.trustStorePassword").     System.clearProperty("javax.net.ssl.trustStore"). }
false;protected;0;19;;@Override protected SSLContext getSSLContext() throws Exception {     KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType()).     keyStore.load(new FileInputStream(KEYSTORE), PASSWORD.toCharArray()).     KeyManagerFactory keyManagerFactory = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm()).     keyManagerFactory.init(keyStore, PASSWORD.toCharArray()).     KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType()).     trustStore.load(new FileInputStream(KEYSTORE), PASSWORD.toCharArray()).     TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm()).     trustManagerFactory.init(trustStore).     SSLContext sslcontext = SSLContext.getInstance(SECURE_SOCKET_PROTOCOL).     sslcontext.init(keyManagerFactory.getKeyManagers(), trustManagerFactory.getTrustManagers(), null).     return sslcontext. }
