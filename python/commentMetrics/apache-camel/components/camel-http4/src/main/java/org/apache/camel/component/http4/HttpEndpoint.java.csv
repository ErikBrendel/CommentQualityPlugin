# id;timestamp;commentText;codeText;commentWords;codeWords
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1388443957;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1405374721;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1416561667;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1416567967;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1423750790;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1423911493;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1425142361;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1427402378;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1430295992;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1432657566;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1434555340;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1434611635;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1437130683;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1437293796;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1437294058;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1437656675;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1447835508;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1447915710;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1451237126;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1451302108;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1452014713;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1452193091;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1460027071;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1460027071;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1470140271;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1470140412;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1470142365;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1470142377;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1476946116;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1485947385;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1488387150;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1488812702;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1489575227;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1500708950;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1513158838;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1520263875;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1536220089;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1536220089;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1536220090;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1536517284;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1537381175;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1540108158;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1540108160;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1540472504;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1541670803;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1541863162;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setClientBuilder(HttpClientBuilder clientBuilder);1542010001;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public void setClientBuilder(HttpClientBuilder clientBuilder) {_        this.clientBuilder = clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,builder,http,client,builder,client,builder,this,client,builder,client,builder
HttpEndpoint -> public void setTraceEnabled(boolean traceEnabled);1432657566;Specifies whether to enable HTTP TRACE for this Jetty consumer. By default TRACE is turned off.;public void setTraceEnabled(boolean traceEnabled) {_        this.traceEnabled = traceEnabled__    };specifies,whether,to,enable,http,trace,for,this,jetty,consumer,by,default,trace,is,turned,off;public,void,set,trace,enabled,boolean,trace,enabled,this,trace,enabled,trace,enabled
HttpEndpoint -> public void setTraceEnabled(boolean traceEnabled);1434555340;Specifies whether to enable HTTP TRACE for this Jetty consumer. By default TRACE is turned off.;public void setTraceEnabled(boolean traceEnabled) {_        this.traceEnabled = traceEnabled__    };specifies,whether,to,enable,http,trace,for,this,jetty,consumer,by,default,trace,is,turned,off;public,void,set,trace,enabled,boolean,trace,enabled,this,trace,enabled,trace,enabled
HttpEndpoint -> public void setTraceEnabled(boolean traceEnabled);1434611635;Specifies whether to enable HTTP TRACE for this Jetty consumer. By default TRACE is turned off.;public void setTraceEnabled(boolean traceEnabled) {_        this.traceEnabled = traceEnabled__    };specifies,whether,to,enable,http,trace,for,this,jetty,consumer,by,default,trace,is,turned,off;public,void,set,trace,enabled,boolean,trace,enabled,this,trace,enabled,trace,enabled
HttpEndpoint -> public void setTraceEnabled(boolean traceEnabled);1437130683;Specifies whether to enable HTTP TRACE for this Jetty consumer. By default TRACE is turned off.;public void setTraceEnabled(boolean traceEnabled) {_        this.traceEnabled = traceEnabled__    };specifies,whether,to,enable,http,trace,for,this,jetty,consumer,by,default,trace,is,turned,off;public,void,set,trace,enabled,boolean,trace,enabled,this,trace,enabled,trace,enabled
HttpEndpoint -> public void setTraceEnabled(boolean traceEnabled);1437293796;Specifies whether to enable HTTP TRACE for this Jetty consumer. By default TRACE is turned off.;public void setTraceEnabled(boolean traceEnabled) {_        this.traceEnabled = traceEnabled__    };specifies,whether,to,enable,http,trace,for,this,jetty,consumer,by,default,trace,is,turned,off;public,void,set,trace,enabled,boolean,trace,enabled,this,trace,enabled,trace,enabled
HttpEndpoint -> public void setTraceEnabled(boolean traceEnabled);1437294058;Specifies whether to enable HTTP TRACE for this Jetty consumer. By default TRACE is turned off.;public void setTraceEnabled(boolean traceEnabled) {_        this.traceEnabled = traceEnabled__    };specifies,whether,to,enable,http,trace,for,this,jetty,consumer,by,default,trace,is,turned,off;public,void,set,trace,enabled,boolean,trace,enabled,this,trace,enabled,trace,enabled
HttpEndpoint -> public void setSocketTimeout(int socketTimeout);1520263875;Defines the socket timeout ({@code SO_TIMEOUT}) in milliseconds,_which is the timeout for waiting for data  or, put differently,_a maximum period inactivity between two consecutive data packets)._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };defines,the,socket,timeout,code,in,milliseconds,which,is,the,timeout,for,waiting,for,data,or,put,differently,a,maximum,period,inactivity,between,two,consecutive,data,packets,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
HttpEndpoint -> public void setSocketTimeout(int socketTimeout);1536220089;Defines the socket timeout ({@code SO_TIMEOUT}) in milliseconds,_which is the timeout for waiting for data  or, put differently,_a maximum period inactivity between two consecutive data packets)._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };defines,the,socket,timeout,code,in,milliseconds,which,is,the,timeout,for,waiting,for,data,or,put,differently,a,maximum,period,inactivity,between,two,consecutive,data,packets,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
HttpEndpoint -> public void setSocketTimeout(int socketTimeout);1536220089;Defines the socket timeout ({@code SO_TIMEOUT}) in milliseconds,_which is the timeout for waiting for data  or, put differently,_a maximum period inactivity between two consecutive data packets)._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };defines,the,socket,timeout,code,in,milliseconds,which,is,the,timeout,for,waiting,for,data,or,put,differently,a,maximum,period,inactivity,between,two,consecutive,data,packets,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
HttpEndpoint -> public void setSocketTimeout(int socketTimeout);1536220090;Defines the socket timeout ({@code SO_TIMEOUT}) in milliseconds,_which is the timeout for waiting for data  or, put differently,_a maximum period inactivity between two consecutive data packets)._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };defines,the,socket,timeout,code,in,milliseconds,which,is,the,timeout,for,waiting,for,data,or,put,differently,a,maximum,period,inactivity,between,two,consecutive,data,packets,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
HttpEndpoint -> public void setSocketTimeout(int socketTimeout);1536517284;Defines the socket timeout ({@code SO_TIMEOUT}) in milliseconds,_which is the timeout for waiting for data  or, put differently,_a maximum period inactivity between two consecutive data packets)._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };defines,the,socket,timeout,code,in,milliseconds,which,is,the,timeout,for,waiting,for,data,or,put,differently,a,maximum,period,inactivity,between,two,consecutive,data,packets,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
HttpEndpoint -> public void setSocketTimeout(int socketTimeout);1537381175;Defines the socket timeout ({@code SO_TIMEOUT}) in milliseconds,_which is the timeout for waiting for data  or, put differently,_a maximum period inactivity between two consecutive data packets)._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };defines,the,socket,timeout,code,in,milliseconds,which,is,the,timeout,for,waiting,for,data,or,put,differently,a,maximum,period,inactivity,between,two,consecutive,data,packets,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
HttpEndpoint -> public void setSocketTimeout(int socketTimeout);1540108158;Defines the socket timeout ({@code SO_TIMEOUT}) in milliseconds,_which is the timeout for waiting for data  or, put differently,_a maximum period inactivity between two consecutive data packets)._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };defines,the,socket,timeout,code,in,milliseconds,which,is,the,timeout,for,waiting,for,data,or,put,differently,a,maximum,period,inactivity,between,two,consecutive,data,packets,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
HttpEndpoint -> public void setSocketTimeout(int socketTimeout);1540108160;Defines the socket timeout ({@code SO_TIMEOUT}) in milliseconds,_which is the timeout for waiting for data  or, put differently,_a maximum period inactivity between two consecutive data packets)._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };defines,the,socket,timeout,code,in,milliseconds,which,is,the,timeout,for,waiting,for,data,or,put,differently,a,maximum,period,inactivity,between,two,consecutive,data,packets,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
HttpEndpoint -> public void setSocketTimeout(int socketTimeout);1540472504;Defines the socket timeout ({@code SO_TIMEOUT}) in milliseconds,_which is the timeout for waiting for data  or, put differently,_a maximum period inactivity between two consecutive data packets)._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };defines,the,socket,timeout,code,in,milliseconds,which,is,the,timeout,for,waiting,for,data,or,put,differently,a,maximum,period,inactivity,between,two,consecutive,data,packets,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
HttpEndpoint -> public void setSocketTimeout(int socketTimeout);1541670803;Defines the socket timeout ({@code SO_TIMEOUT}) in milliseconds,_which is the timeout for waiting for data  or, put differently,_a maximum period inactivity between two consecutive data packets)._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };defines,the,socket,timeout,code,in,milliseconds,which,is,the,timeout,for,waiting,for,data,or,put,differently,a,maximum,period,inactivity,between,two,consecutive,data,packets,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
HttpEndpoint -> public void setSocketTimeout(int socketTimeout);1541863162;Defines the socket timeout ({@code SO_TIMEOUT}) in milliseconds,_which is the timeout for waiting for data  or, put differently,_a maximum period inactivity between two consecutive data packets)._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };defines,the,socket,timeout,code,in,milliseconds,which,is,the,timeout,for,waiting,for,data,or,put,differently,a,maximum,period,inactivity,between,two,consecutive,data,packets,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
HttpEndpoint -> public void setSocketTimeout(int socketTimeout);1542010001;Defines the socket timeout ({@code SO_TIMEOUT}) in milliseconds,_which is the timeout for waiting for data  or, put differently,_a maximum period inactivity between two consecutive data packets)._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setSocketTimeout(int socketTimeout) {_        this.socketTimeout = socketTimeout__    };defines,the,socket,timeout,code,in,milliseconds,which,is,the,timeout,for,waiting,for,data,or,put,differently,a,maximum,period,inactivity,between,two,consecutive,data,packets,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,socket,timeout,int,socket,timeout,this,socket,timeout,socket,timeout
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1432657566;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1434555340;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1434611635;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1437130683;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1437293796;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1437294058;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1437656675;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1447835508;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1447915710;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1451237126;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1451302108;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1452014713;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1452193091;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1460027071;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1460027071;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1470140271;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1470140412;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1470142365;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1470142377;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1476946116;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1485947385;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1488387150;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1488812702;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1489575227;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1500708950;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1513158838;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1520263875;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1536220089;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1536220089;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1536220090;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1536517284;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1537381175;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1540108158;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1540108160;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1540472504;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1541670803;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1541863162;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager);1542010001;To use a custom HttpClientConnectionManager to manage connections;public void setClientConnectionManager(HttpClientConnectionManager clientConnectionManager) {_        this.clientConnectionManager = clientConnectionManager__    };to,use,a,custom,http,client,connection,manager,to,manage,connections;public,void,set,client,connection,manager,http,client,connection,manager,client,connection,manager,this,client,connection,manager,client,connection,manager
HttpEndpoint -> public void setUrlRewrite(UrlRewrite urlRewrite);1432657566;Refers to a custom org.apache.camel.component.http.UrlRewrite which allows you to rewrite urls when you bridge/proxy endpoints._See more details at http://camel.apache.org/urlrewrite.html;public void setUrlRewrite(UrlRewrite urlRewrite) {_        this.urlRewrite = urlRewrite__    };refers,to,a,custom,org,apache,camel,component,http,url,rewrite,which,allows,you,to,rewrite,urls,when,you,bridge,proxy,endpoints,see,more,details,at,http,camel,apache,org,urlrewrite,html;public,void,set,url,rewrite,url,rewrite,url,rewrite,this,url,rewrite,url,rewrite
HttpEndpoint -> public void setUrlRewrite(UrlRewrite urlRewrite);1434555340;Refers to a custom org.apache.camel.component.http.UrlRewrite which allows you to rewrite urls when you bridge/proxy endpoints._See more details at http://camel.apache.org/urlrewrite.html;public void setUrlRewrite(UrlRewrite urlRewrite) {_        this.urlRewrite = urlRewrite__    };refers,to,a,custom,org,apache,camel,component,http,url,rewrite,which,allows,you,to,rewrite,urls,when,you,bridge,proxy,endpoints,see,more,details,at,http,camel,apache,org,urlrewrite,html;public,void,set,url,rewrite,url,rewrite,url,rewrite,this,url,rewrite,url,rewrite
HttpEndpoint -> public void setUrlRewrite(UrlRewrite urlRewrite);1434611635;Refers to a custom org.apache.camel.component.http.UrlRewrite which allows you to rewrite urls when you bridge/proxy endpoints._See more details at http://camel.apache.org/urlrewrite.html;public void setUrlRewrite(UrlRewrite urlRewrite) {_        this.urlRewrite = urlRewrite__    };refers,to,a,custom,org,apache,camel,component,http,url,rewrite,which,allows,you,to,rewrite,urls,when,you,bridge,proxy,endpoints,see,more,details,at,http,camel,apache,org,urlrewrite,html;public,void,set,url,rewrite,url,rewrite,url,rewrite,this,url,rewrite,url,rewrite
HttpEndpoint -> public void setUrlRewrite(UrlRewrite urlRewrite);1437130683;Refers to a custom org.apache.camel.component.http.UrlRewrite which allows you to rewrite urls when you bridge/proxy endpoints._See more details at http://camel.apache.org/urlrewrite.html;public void setUrlRewrite(UrlRewrite urlRewrite) {_        this.urlRewrite = urlRewrite__    };refers,to,a,custom,org,apache,camel,component,http,url,rewrite,which,allows,you,to,rewrite,urls,when,you,bridge,proxy,endpoints,see,more,details,at,http,camel,apache,org,urlrewrite,html;public,void,set,url,rewrite,url,rewrite,url,rewrite,this,url,rewrite,url,rewrite
HttpEndpoint -> public void setUrlRewrite(UrlRewrite urlRewrite);1437293796;Refers to a custom org.apache.camel.component.http.UrlRewrite which allows you to rewrite urls when you bridge/proxy endpoints._See more details at http://camel.apache.org/urlrewrite.html;public void setUrlRewrite(UrlRewrite urlRewrite) {_        this.urlRewrite = urlRewrite__    };refers,to,a,custom,org,apache,camel,component,http,url,rewrite,which,allows,you,to,rewrite,urls,when,you,bridge,proxy,endpoints,see,more,details,at,http,camel,apache,org,urlrewrite,html;public,void,set,url,rewrite,url,rewrite,url,rewrite,this,url,rewrite,url,rewrite
HttpEndpoint -> public void setUrlRewrite(UrlRewrite urlRewrite);1437294058;Refers to a custom org.apache.camel.component.http.UrlRewrite which allows you to rewrite urls when you bridge/proxy endpoints._See more details at http://camel.apache.org/urlrewrite.html;public void setUrlRewrite(UrlRewrite urlRewrite) {_        this.urlRewrite = urlRewrite__    };refers,to,a,custom,org,apache,camel,component,http,url,rewrite,which,allows,you,to,rewrite,urls,when,you,bridge,proxy,endpoints,see,more,details,at,http,camel,apache,org,urlrewrite,html;public,void,set,url,rewrite,url,rewrite,url,rewrite,this,url,rewrite,url,rewrite
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1432657566;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1434555340;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1434611635;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1437130683;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1437293796;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1437294058;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1437656675;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1447835508;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1447915710;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1451237126;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1451302108;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1452014713;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1452193091;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1460027071;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1460027071;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1470140271;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1470140412;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1470142365;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1470142377;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1476946116;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1485947385;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1488387150;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1488812702;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1489575227;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1500708950;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1513158838;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1520263875;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1536220089;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1536220089;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1536220090;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1536517284;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1537381175;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1540108158;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1540108160;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1540472504;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1541670803;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1541863162;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setAuthenticationPreemptive(boolean authenticationPreemptive);1542010001;If this option is true, camel-http4 sends preemptive basic authentication to the server.;public void setAuthenticationPreemptive(boolean authenticationPreemptive) {_        this.authenticationPreemptive = authenticationPreemptive__    };if,this,option,is,true,camel,http4,sends,preemptive,basic,authentication,to,the,server;public,void,set,authentication,preemptive,boolean,authentication,preemptive,this,authentication,preemptive,authentication,preemptive
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1270895897;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1274269216;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1293443624;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1296408582;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1296495624;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1296567562;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1297975937;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1307685726;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1310024305;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1310131950;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1317112374;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1323694591;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1327082739;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1333787762;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1342106539;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1344849457;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1345088231;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1347436727;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1347436777;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1356694393;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1357140814;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1366899100;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1376549254;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1378206923;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1379491484;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1382359231;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1383138956;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1388443957;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1405374721;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1416561667;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1416567967;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1423750790;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1423911493;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1425142361;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1427402378;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1430295992;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc__@param httpClientConfigurer the strategy for configuring new {@link HttpClient} instances;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc,param,http,client,configurer,the,strategy,for,configuring,new,link,http,client,instances;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1432657566;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1434555340;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1434611635;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1437130683;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1437293796;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1437294058;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1437656675;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1447835508;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1447915710;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1451237126;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1451302108;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1452014713;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1452193091;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1460027071;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1460027071;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1470140271;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1470140412;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1470142365;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1470142377;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1476946116;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1485947385;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1488387150;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1488812702;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1489575227;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1500708950;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1513158838;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1520263875;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1536220089;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1536220089;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1536220090;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1536517284;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1537381175;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1540108158;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1540108160;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1540472504;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1541670803;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1541863162;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer);1542010001;Register a custom configuration strategy for new {@link HttpClient} instances_created by producers or consumers such as to configure authentication mechanisms etc;public void setHttpClientConfigurer(HttpClientConfigurer httpClientConfigurer) {_        this.httpClientConfigurer = httpClientConfigurer__    };register,a,custom,configuration,strategy,for,new,link,http,client,instances,created,by,producers,or,consumers,such,as,to,configure,authentication,mechanisms,etc;public,void,set,http,client,configurer,http,client,configurer,http,client,configurer,this,http,client,configurer,http,client,configurer
HttpEndpoint -> public void setChunked(boolean chunked);1432657566;If this option is false Jetty servlet will disable the HTTP streaming and set the content-length header on the response;public void setChunked(boolean chunked) {_        this.chunked = chunked__    };if,this,option,is,false,jetty,servlet,will,disable,the,http,streaming,and,set,the,content,length,header,on,the,response;public,void,set,chunked,boolean,chunked,this,chunked,chunked
HttpEndpoint -> public void setChunked(boolean chunked);1434555340;If this option is false Jetty servlet will disable the HTTP streaming and set the content-length header on the response;public void setChunked(boolean chunked) {_        this.chunked = chunked__    };if,this,option,is,false,jetty,servlet,will,disable,the,http,streaming,and,set,the,content,length,header,on,the,response;public,void,set,chunked,boolean,chunked,this,chunked,chunked
HttpEndpoint -> public void setChunked(boolean chunked);1434611635;If this option is false Jetty servlet will disable the HTTP streaming and set the content-length header on the response;public void setChunked(boolean chunked) {_        this.chunked = chunked__    };if,this,option,is,false,jetty,servlet,will,disable,the,http,streaming,and,set,the,content,length,header,on,the,response;public,void,set,chunked,boolean,chunked,this,chunked,chunked
HttpEndpoint -> public void setChunked(boolean chunked);1437130683;If this option is false Jetty servlet will disable the HTTP streaming and set the content-length header on the response;public void setChunked(boolean chunked) {_        this.chunked = chunked__    };if,this,option,is,false,jetty,servlet,will,disable,the,http,streaming,and,set,the,content,length,header,on,the,response;public,void,set,chunked,boolean,chunked,this,chunked,chunked
HttpEndpoint -> public void setChunked(boolean chunked);1437293796;If this option is false Jetty servlet will disable the HTTP streaming and set the content-length header on the response;public void setChunked(boolean chunked) {_        this.chunked = chunked__    };if,this,option,is,false,jetty,servlet,will,disable,the,http,streaming,and,set,the,content,length,header,on,the,response;public,void,set,chunked,boolean,chunked,this,chunked,chunked
HttpEndpoint -> public void setChunked(boolean chunked);1437294058;If this option is false Jetty servlet will disable the HTTP streaming and set the content-length header on the response;public void setChunked(boolean chunked) {_        this.chunked = chunked__    };if,this,option,is,false,jetty,servlet,will,disable,the,http,streaming,and,set,the,content,length,header,on,the,response;public,void,set,chunked,boolean,chunked,this,chunked,chunked
HttpEndpoint -> public void setHttpUri(URI httpUri);1432657566;The url of the HTTP endpoint to call.;public void setHttpUri(URI httpUri) {_        this.httpUri = httpUri__    };the,url,of,the,http,endpoint,to,call;public,void,set,http,uri,uri,http,uri,this,http,uri,http,uri
HttpEndpoint -> public void setHttpUri(URI httpUri);1434555340;The url of the HTTP endpoint to call.;public void setHttpUri(URI httpUri) {_        this.httpUri = httpUri__    };the,url,of,the,http,endpoint,to,call;public,void,set,http,uri,uri,http,uri,this,http,uri,http,uri
HttpEndpoint -> public void setHttpUri(URI httpUri);1434611635;The url of the HTTP endpoint to call.;public void setHttpUri(URI httpUri) {_        this.httpUri = httpUri__    };the,url,of,the,http,endpoint,to,call;public,void,set,http,uri,uri,http,uri,this,http,uri,http,uri
HttpEndpoint -> public void setHttpUri(URI httpUri);1437130683;The url of the HTTP endpoint to call.;public void setHttpUri(URI httpUri) {_        this.httpUri = httpUri__    };the,url,of,the,http,endpoint,to,call;public,void,set,http,uri,uri,http,uri,this,http,uri,http,uri
HttpEndpoint -> public void setHttpUri(URI httpUri);1437293796;The url of the HTTP endpoint to call.;public void setHttpUri(URI httpUri) {_        this.httpUri = httpUri__    };the,url,of,the,http,endpoint,to,call;public,void,set,http,uri,uri,http,uri,this,http,uri,http,uri
HttpEndpoint -> public void setHttpUri(URI httpUri);1437294058;The url of the HTTP endpoint to call.;public void setHttpUri(URI httpUri) {_        this.httpUri = httpUri__    };the,url,of,the,http,endpoint,to,call;public,void,set,http,uri,uri,http,uri,this,http,uri,http,uri
HttpEndpoint -> public boolean isCopyHeaders();1437293796;If this option is true then IN exchange headers will be copied to OUT exchange headers according to copy strategy.;public boolean isCopyHeaders() {_        return copyHeaders__    };if,this,option,is,true,then,in,exchange,headers,will,be,copied,to,out,exchange,headers,according,to,copy,strategy;public,boolean,is,copy,headers,return,copy,headers
HttpEndpoint -> public boolean isCopyHeaders();1437294058;If this option is true then IN exchange headers will be copied to OUT exchange headers according to copy strategy._Setting this to false, allows to only include the headers from the HTTP response (not propagating IN headers).;public boolean isCopyHeaders() {_        return copyHeaders__    };if,this,option,is,true,then,in,exchange,headers,will,be,copied,to,out,exchange,headers,according,to,copy,strategy,setting,this,to,false,allows,to,only,include,the,headers,from,the,http,response,not,propagating,in,headers;public,boolean,is,copy,headers,return,copy,headers
HttpEndpoint -> public void setHttpContext(HttpContext httpContext);1452014713;To use a custom HttpContext instance;public void setHttpContext(HttpContext httpContext) {_        this.httpContext = httpContext__    };to,use,a,custom,http,context,instance;public,void,set,http,context,http,context,http,context,this,http,context,http,context
HttpEndpoint -> public void setHttpContext(HttpContext httpContext);1452193091;To use a custom HttpContext instance;public void setHttpContext(HttpContext httpContext) {_        this.httpContext = httpContext__    };to,use,a,custom,http,context,instance;public,void,set,http,context,http,context,http,context,this,http,context,http,context
HttpEndpoint -> public void setHttpContext(HttpContext httpContext);1460027071;To use a custom HttpContext instance;public void setHttpContext(HttpContext httpContext) {_        this.httpContext = httpContext__    };to,use,a,custom,http,context,instance;public,void,set,http,context,http,context,http,context,this,http,context,http,context
HttpEndpoint -> public void setHttpContext(HttpContext httpContext);1460027071;To use a custom HttpContext instance;public void setHttpContext(HttpContext httpContext) {_        this.httpContext = httpContext__    };to,use,a,custom,http,context,instance;public,void,set,http,context,http,context,http,context,this,http,context,http,context
HttpEndpoint -> public void setHttpContext(HttpContext httpContext);1470140271;To use a custom HttpContext instance;public void setHttpContext(HttpContext httpContext) {_        this.httpContext = httpContext__    };to,use,a,custom,http,context,instance;public,void,set,http,context,http,context,http,context,this,http,context,http,context
HttpEndpoint -> public void setHttpContext(HttpContext httpContext);1470140412;To use a custom HttpContext instance;public void setHttpContext(HttpContext httpContext) {_        this.httpContext = httpContext__    };to,use,a,custom,http,context,instance;public,void,set,http,context,http,context,http,context,this,http,context,http,context
HttpEndpoint -> public void setHttpContext(HttpContext httpContext);1470142365;To use a custom HttpContext instance;public void setHttpContext(HttpContext httpContext) {_        this.httpContext = httpContext__    };to,use,a,custom,http,context,instance;public,void,set,http,context,http,context,http,context,this,http,context,http,context
HttpEndpoint -> public void setHttpContext(HttpContext httpContext);1470142377;To use a custom HttpContext instance;public void setHttpContext(HttpContext httpContext) {_        this.httpContext = httpContext__    };to,use,a,custom,http,context,instance;public,void,set,http,context,http,context,http,context,this,http,context,http,context
HttpEndpoint -> public void setHttpContext(HttpContext httpContext);1476946116;To use a custom HttpContext instance;public void setHttpContext(HttpContext httpContext) {_        this.httpContext = httpContext__    };to,use,a,custom,http,context,instance;public,void,set,http,context,http,context,http,context,this,http,context,http,context
HttpEndpoint -> public void setHttpContext(HttpContext httpContext);1485947385;To use a custom HttpContext instance;public void setHttpContext(HttpContext httpContext) {_        this.httpContext = httpContext__    };to,use,a,custom,http,context,instance;public,void,set,http,context,http,context,http,context,this,http,context,http,context
HttpEndpoint -> public void setHttpContext(HttpContext httpContext);1488387150;To use a custom HttpContext instance;public void setHttpContext(HttpContext httpContext) {_        this.httpContext = httpContext__    };to,use,a,custom,http,context,instance;public,void,set,http,context,http,context,http,context,this,http,context,http,context
HttpEndpoint -> public void setHttpContext(HttpContext httpContext);1488812702;To use a custom HttpContext instance;public void setHttpContext(HttpContext httpContext) {_        this.httpContext = httpContext__    };to,use,a,custom,http,context,instance;public,void,set,http,context,http,context,http,context,this,http,context,http,context
HttpEndpoint -> public void setHttpContext(HttpContext httpContext);1489575227;To use a custom HttpContext instance;public void setHttpContext(HttpContext httpContext) {_        this.httpContext = httpContext__    };to,use,a,custom,http,context,instance;public,void,set,http,context,http,context,http,context,this,http,context,http,context
HttpEndpoint -> public void setHttpContext(HttpContext httpContext);1500708950;To use a custom HttpContext instance;public void setHttpContext(HttpContext httpContext) {_        this.httpContext = httpContext__    };to,use,a,custom,http,context,instance;public,void,set,http,context,http,context,http,context,this,http,context,http,context
HttpEndpoint -> public void setHttpContext(HttpContext httpContext);1513158838;To use a custom HttpContext instance;public void setHttpContext(HttpContext httpContext) {_        this.httpContext = httpContext__    };to,use,a,custom,http,context,instance;public,void,set,http,context,http,context,http,context,this,http,context,http,context
HttpEndpoint -> public void setHttpContext(HttpContext httpContext);1520263875;To use a custom HttpContext instance;public void setHttpContext(HttpContext httpContext) {_        this.httpContext = httpContext__    };to,use,a,custom,http,context,instance;public,void,set,http,context,http,context,http,context,this,http,context,http,context
HttpEndpoint -> public void setHttpContext(HttpContext httpContext);1536220089;To use a custom HttpContext instance;public void setHttpContext(HttpContext httpContext) {_        this.httpContext = httpContext__    };to,use,a,custom,http,context,instance;public,void,set,http,context,http,context,http,context,this,http,context,http,context
HttpEndpoint -> public void setHttpContext(HttpContext httpContext);1536220089;To use a custom HttpContext instance;public void setHttpContext(HttpContext httpContext) {_        this.httpContext = httpContext__    };to,use,a,custom,http,context,instance;public,void,set,http,context,http,context,http,context,this,http,context,http,context
HttpEndpoint -> public void setHttpContext(HttpContext httpContext);1536220090;To use a custom HttpContext instance;public void setHttpContext(HttpContext httpContext) {_        this.httpContext = httpContext__    };to,use,a,custom,http,context,instance;public,void,set,http,context,http,context,http,context,this,http,context,http,context
HttpEndpoint -> public void setHttpContext(HttpContext httpContext);1536517284;To use a custom HttpContext instance;public void setHttpContext(HttpContext httpContext) {_        this.httpContext = httpContext__    };to,use,a,custom,http,context,instance;public,void,set,http,context,http,context,http,context,this,http,context,http,context
HttpEndpoint -> public void setHttpContext(HttpContext httpContext);1537381175;To use a custom HttpContext instance;public void setHttpContext(HttpContext httpContext) {_        this.httpContext = httpContext__    };to,use,a,custom,http,context,instance;public,void,set,http,context,http,context,http,context,this,http,context,http,context
HttpEndpoint -> public void setHttpContext(HttpContext httpContext);1540108158;To use a custom HttpContext instance;public void setHttpContext(HttpContext httpContext) {_        this.httpContext = httpContext__    };to,use,a,custom,http,context,instance;public,void,set,http,context,http,context,http,context,this,http,context,http,context
HttpEndpoint -> public void setHttpContext(HttpContext httpContext);1540108160;To use a custom HttpContext instance;public void setHttpContext(HttpContext httpContext) {_        this.httpContext = httpContext__    };to,use,a,custom,http,context,instance;public,void,set,http,context,http,context,http,context,this,http,context,http,context
HttpEndpoint -> public void setHttpContext(HttpContext httpContext);1540472504;To use a custom HttpContext instance;public void setHttpContext(HttpContext httpContext) {_        this.httpContext = httpContext__    };to,use,a,custom,http,context,instance;public,void,set,http,context,http,context,http,context,this,http,context,http,context
HttpEndpoint -> public void setHttpContext(HttpContext httpContext);1541670803;To use a custom HttpContext instance;public void setHttpContext(HttpContext httpContext) {_        this.httpContext = httpContext__    };to,use,a,custom,http,context,instance;public,void,set,http,context,http,context,http,context,this,http,context,http,context
HttpEndpoint -> public void setHttpContext(HttpContext httpContext);1541863162;To use a custom HttpContext instance;public void setHttpContext(HttpContext httpContext) {_        this.httpContext = httpContext__    };to,use,a,custom,http,context,instance;public,void,set,http,context,http,context,http,context,this,http,context,http,context
HttpEndpoint -> public void setHttpContext(HttpContext httpContext);1542010001;To use a custom HttpContext instance;public void setHttpContext(HttpContext httpContext) {_        this.httpContext = httpContext__    };to,use,a,custom,http,context,instance;public,void,set,http,context,http,context,http,context,this,http,context,http,context
HttpEndpoint -> public void setHttpClient(HttpClient httpClient);1489575227;Sets a custom HttpClient to be used by the producer;public void setHttpClient(HttpClient httpClient) {_        this.httpClient = httpClient__    };sets,a,custom,http,client,to,be,used,by,the,producer;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpEndpoint -> public void setHttpClient(HttpClient httpClient);1500708950;Sets a custom HttpClient to be used by the producer;public void setHttpClient(HttpClient httpClient) {_        this.httpClient = httpClient__    };sets,a,custom,http,client,to,be,used,by,the,producer;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpEndpoint -> public void setHttpClient(HttpClient httpClient);1513158838;Sets a custom HttpClient to be used by the producer;public void setHttpClient(HttpClient httpClient) {_        this.httpClient = httpClient__    };sets,a,custom,http,client,to,be,used,by,the,producer;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpEndpoint -> public void setHttpClient(HttpClient httpClient);1520263875;Sets a custom HttpClient to be used by the producer;public void setHttpClient(HttpClient httpClient) {_        this.httpClient = httpClient__    };sets,a,custom,http,client,to,be,used,by,the,producer;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpEndpoint -> public void setHttpClient(HttpClient httpClient);1536220089;Sets a custom HttpClient to be used by the producer;public void setHttpClient(HttpClient httpClient) {_        this.httpClient = httpClient__    };sets,a,custom,http,client,to,be,used,by,the,producer;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpEndpoint -> public void setHttpClient(HttpClient httpClient);1536220089;Sets a custom HttpClient to be used by the producer;public void setHttpClient(HttpClient httpClient) {_        this.httpClient = httpClient__    };sets,a,custom,http,client,to,be,used,by,the,producer;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpEndpoint -> public void setHttpClient(HttpClient httpClient);1536220090;Sets a custom HttpClient to be used by the producer;public void setHttpClient(HttpClient httpClient) {_        this.httpClient = httpClient__    };sets,a,custom,http,client,to,be,used,by,the,producer;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpEndpoint -> public void setHttpClient(HttpClient httpClient);1536517284;Sets a custom HttpClient to be used by the producer;public void setHttpClient(HttpClient httpClient) {_        this.httpClient = httpClient__    };sets,a,custom,http,client,to,be,used,by,the,producer;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpEndpoint -> public void setHttpClient(HttpClient httpClient);1537381175;Sets a custom HttpClient to be used by the producer;public void setHttpClient(HttpClient httpClient) {_        this.httpClient = httpClient__    };sets,a,custom,http,client,to,be,used,by,the,producer;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpEndpoint -> public void setHttpClient(HttpClient httpClient);1540108158;Sets a custom HttpClient to be used by the producer;public void setHttpClient(HttpClient httpClient) {_        this.httpClient = httpClient__    };sets,a,custom,http,client,to,be,used,by,the,producer;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpEndpoint -> public void setHttpClient(HttpClient httpClient);1540108160;Sets a custom HttpClient to be used by the producer;public void setHttpClient(HttpClient httpClient) {_        this.httpClient = httpClient__    };sets,a,custom,http,client,to,be,used,by,the,producer;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpEndpoint -> public void setHttpClient(HttpClient httpClient);1540472504;Sets a custom HttpClient to be used by the producer;public void setHttpClient(HttpClient httpClient) {_        this.httpClient = httpClient__    };sets,a,custom,http,client,to,be,used,by,the,producer;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpEndpoint -> public void setHttpClient(HttpClient httpClient);1541670803;Sets a custom HttpClient to be used by the producer;public void setHttpClient(HttpClient httpClient) {_        this.httpClient = httpClient__    };sets,a,custom,http,client,to,be,used,by,the,producer;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpEndpoint -> public void setHttpClient(HttpClient httpClient);1541863162;Sets a custom HttpClient to be used by the producer;public void setHttpClient(HttpClient httpClient) {_        this.httpClient = httpClient__    };sets,a,custom,http,client,to,be,used,by,the,producer;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpEndpoint -> public void setHttpClient(HttpClient httpClient);1542010001;Sets a custom HttpClient to be used by the producer;public void setHttpClient(HttpClient httpClient) {_        this.httpClient = httpClient__    };sets,a,custom,http,client,to,be,used,by,the,producer;public,void,set,http,client,http,client,http,client,this,http,client,http,client
HttpEndpoint -> public void setBridgeEndpoint(boolean bridge);1432657566;If the option is true, HttpProducer will ignore the Exchange.HTTP_URI header, and use the endpoint's URI for request._You may also set the option throwExceptionOnFailure to be false to let the HttpProducer send all the fault response back.;public void setBridgeEndpoint(boolean bridge) {_        this.bridgeEndpoint = bridge__    };if,the,option,is,true,http,producer,will,ignore,the,exchange,header,and,use,the,endpoint,s,uri,for,request,you,may,also,set,the,option,throw,exception,on,failure,to,be,false,to,let,the,http,producer,send,all,the,fault,response,back;public,void,set,bridge,endpoint,boolean,bridge,this,bridge,endpoint,bridge
HttpEndpoint -> public void setBridgeEndpoint(boolean bridge);1434555340;If the option is true, HttpProducer will ignore the Exchange.HTTP_URI header, and use the endpoint's URI for request._You may also set the option throwExceptionOnFailure to be false to let the HttpProducer send all the fault response back.;public void setBridgeEndpoint(boolean bridge) {_        this.bridgeEndpoint = bridge__    };if,the,option,is,true,http,producer,will,ignore,the,exchange,header,and,use,the,endpoint,s,uri,for,request,you,may,also,set,the,option,throw,exception,on,failure,to,be,false,to,let,the,http,producer,send,all,the,fault,response,back;public,void,set,bridge,endpoint,boolean,bridge,this,bridge,endpoint,bridge
HttpEndpoint -> public void setBridgeEndpoint(boolean bridge);1434611635;If the option is true, HttpProducer will ignore the Exchange.HTTP_URI header, and use the endpoint's URI for request._You may also set the option throwExceptionOnFailure to be false to let the HttpProducer send all the fault response back.;public void setBridgeEndpoint(boolean bridge) {_        this.bridgeEndpoint = bridge__    };if,the,option,is,true,http,producer,will,ignore,the,exchange,header,and,use,the,endpoint,s,uri,for,request,you,may,also,set,the,option,throw,exception,on,failure,to,be,false,to,let,the,http,producer,send,all,the,fault,response,back;public,void,set,bridge,endpoint,boolean,bridge,this,bridge,endpoint,bridge
HttpEndpoint -> public void setBridgeEndpoint(boolean bridge);1437130683;If the option is true, HttpProducer will ignore the Exchange.HTTP_URI header, and use the endpoint's URI for request._You may also set the option throwExceptionOnFailure to be false to let the HttpProducer send all the fault response back.;public void setBridgeEndpoint(boolean bridge) {_        this.bridgeEndpoint = bridge__    };if,the,option,is,true,http,producer,will,ignore,the,exchange,header,and,use,the,endpoint,s,uri,for,request,you,may,also,set,the,option,throw,exception,on,failure,to,be,false,to,let,the,http,producer,send,all,the,fault,response,back;public,void,set,bridge,endpoint,boolean,bridge,this,bridge,endpoint,bridge
HttpEndpoint -> public void setBridgeEndpoint(boolean bridge);1437293796;If the option is true, HttpProducer will ignore the Exchange.HTTP_URI header, and use the endpoint's URI for request._You may also set the option throwExceptionOnFailure to be false to let the HttpProducer send all the fault response back.;public void setBridgeEndpoint(boolean bridge) {_        this.bridgeEndpoint = bridge__    };if,the,option,is,true,http,producer,will,ignore,the,exchange,header,and,use,the,endpoint,s,uri,for,request,you,may,also,set,the,option,throw,exception,on,failure,to,be,false,to,let,the,http,producer,send,all,the,fault,response,back;public,void,set,bridge,endpoint,boolean,bridge,this,bridge,endpoint,bridge
HttpEndpoint -> public void setBridgeEndpoint(boolean bridge);1437294058;If the option is true, HttpProducer will ignore the Exchange.HTTP_URI header, and use the endpoint's URI for request._You may also set the option throwExceptionOnFailure to be false to let the HttpProducer send all the fault response back.;public void setBridgeEndpoint(boolean bridge) {_        this.bridgeEndpoint = bridge__    };if,the,option,is,true,http,producer,will,ignore,the,exchange,header,and,use,the,endpoint,s,uri,for,request,you,may,also,set,the,option,throw,exception,on,failure,to,be,false,to,let,the,http,producer,send,all,the,fault,response,back;public,void,set,bridge,endpoint,boolean,bridge,this,bridge,endpoint,bridge
HttpEndpoint -> public void setUseSystemProperties(boolean useSystemProperties);1460027071;To use System Properties as fallback for configuration;public void setUseSystemProperties(boolean useSystemProperties) {_		this.useSystemProperties = useSystemProperties__	};to,use,system,properties,as,fallback,for,configuration;public,void,set,use,system,properties,boolean,use,system,properties,this,use,system,properties,use,system,properties
HttpEndpoint -> public void setUseSystemProperties(boolean useSystemProperties);1460027071;To use System Properties as fallback for configuration;public void setUseSystemProperties(boolean useSystemProperties) {_        this.useSystemProperties = useSystemProperties__    };to,use,system,properties,as,fallback,for,configuration;public,void,set,use,system,properties,boolean,use,system,properties,this,use,system,properties,use,system,properties
HttpEndpoint -> public void setUseSystemProperties(boolean useSystemProperties);1470140271;To use System Properties as fallback for configuration;public void setUseSystemProperties(boolean useSystemProperties) {_        this.useSystemProperties = useSystemProperties__    };to,use,system,properties,as,fallback,for,configuration;public,void,set,use,system,properties,boolean,use,system,properties,this,use,system,properties,use,system,properties
HttpEndpoint -> public void setUseSystemProperties(boolean useSystemProperties);1470140412;To use System Properties as fallback for configuration;public void setUseSystemProperties(boolean useSystemProperties) {_        this.useSystemProperties = useSystemProperties__    };to,use,system,properties,as,fallback,for,configuration;public,void,set,use,system,properties,boolean,use,system,properties,this,use,system,properties,use,system,properties
HttpEndpoint -> public void setUseSystemProperties(boolean useSystemProperties);1470142365;To use System Properties as fallback for configuration;public void setUseSystemProperties(boolean useSystemProperties) {_        this.useSystemProperties = useSystemProperties__    };to,use,system,properties,as,fallback,for,configuration;public,void,set,use,system,properties,boolean,use,system,properties,this,use,system,properties,use,system,properties
HttpEndpoint -> public void setUseSystemProperties(boolean useSystemProperties);1470142377;To use System Properties as fallback for configuration;public void setUseSystemProperties(boolean useSystemProperties) {_        this.useSystemProperties = useSystemProperties__    };to,use,system,properties,as,fallback,for,configuration;public,void,set,use,system,properties,boolean,use,system,properties,this,use,system,properties,use,system,properties
HttpEndpoint -> public void setUseSystemProperties(boolean useSystemProperties);1476946116;To use System Properties as fallback for configuration;public void setUseSystemProperties(boolean useSystemProperties) {_        this.useSystemProperties = useSystemProperties__    };to,use,system,properties,as,fallback,for,configuration;public,void,set,use,system,properties,boolean,use,system,properties,this,use,system,properties,use,system,properties
HttpEndpoint -> public void setUseSystemProperties(boolean useSystemProperties);1485947385;To use System Properties as fallback for configuration;public void setUseSystemProperties(boolean useSystemProperties) {_        this.useSystemProperties = useSystemProperties__    };to,use,system,properties,as,fallback,for,configuration;public,void,set,use,system,properties,boolean,use,system,properties,this,use,system,properties,use,system,properties
HttpEndpoint -> public void setUseSystemProperties(boolean useSystemProperties);1488387150;To use System Properties as fallback for configuration;public void setUseSystemProperties(boolean useSystemProperties) {_        this.useSystemProperties = useSystemProperties__    };to,use,system,properties,as,fallback,for,configuration;public,void,set,use,system,properties,boolean,use,system,properties,this,use,system,properties,use,system,properties
HttpEndpoint -> public void setUseSystemProperties(boolean useSystemProperties);1488812702;To use System Properties as fallback for configuration;public void setUseSystemProperties(boolean useSystemProperties) {_        this.useSystemProperties = useSystemProperties__    };to,use,system,properties,as,fallback,for,configuration;public,void,set,use,system,properties,boolean,use,system,properties,this,use,system,properties,use,system,properties
HttpEndpoint -> public void setUseSystemProperties(boolean useSystemProperties);1489575227;To use System Properties as fallback for configuration;public void setUseSystemProperties(boolean useSystemProperties) {_        this.useSystemProperties = useSystemProperties__    };to,use,system,properties,as,fallback,for,configuration;public,void,set,use,system,properties,boolean,use,system,properties,this,use,system,properties,use,system,properties
HttpEndpoint -> public void setUseSystemProperties(boolean useSystemProperties);1500708950;To use System Properties as fallback for configuration;public void setUseSystemProperties(boolean useSystemProperties) {_        this.useSystemProperties = useSystemProperties__    };to,use,system,properties,as,fallback,for,configuration;public,void,set,use,system,properties,boolean,use,system,properties,this,use,system,properties,use,system,properties
HttpEndpoint -> public void setUseSystemProperties(boolean useSystemProperties);1513158838;To use System Properties as fallback for configuration;public void setUseSystemProperties(boolean useSystemProperties) {_        this.useSystemProperties = useSystemProperties__    };to,use,system,properties,as,fallback,for,configuration;public,void,set,use,system,properties,boolean,use,system,properties,this,use,system,properties,use,system,properties
HttpEndpoint -> public void setUseSystemProperties(boolean useSystemProperties);1520263875;To use System Properties as fallback for configuration;public void setUseSystemProperties(boolean useSystemProperties) {_        this.useSystemProperties = useSystemProperties__    };to,use,system,properties,as,fallback,for,configuration;public,void,set,use,system,properties,boolean,use,system,properties,this,use,system,properties,use,system,properties
HttpEndpoint -> public void setUseSystemProperties(boolean useSystemProperties);1536220089;To use System Properties as fallback for configuration;public void setUseSystemProperties(boolean useSystemProperties) {_        this.useSystemProperties = useSystemProperties__    };to,use,system,properties,as,fallback,for,configuration;public,void,set,use,system,properties,boolean,use,system,properties,this,use,system,properties,use,system,properties
HttpEndpoint -> public void setUseSystemProperties(boolean useSystemProperties);1536220089;To use System Properties as fallback for configuration;public void setUseSystemProperties(boolean useSystemProperties) {_        this.useSystemProperties = useSystemProperties__    };to,use,system,properties,as,fallback,for,configuration;public,void,set,use,system,properties,boolean,use,system,properties,this,use,system,properties,use,system,properties
HttpEndpoint -> public void setUseSystemProperties(boolean useSystemProperties);1536220090;To use System Properties as fallback for configuration;public void setUseSystemProperties(boolean useSystemProperties) {_        this.useSystemProperties = useSystemProperties__    };to,use,system,properties,as,fallback,for,configuration;public,void,set,use,system,properties,boolean,use,system,properties,this,use,system,properties,use,system,properties
HttpEndpoint -> public void setUseSystemProperties(boolean useSystemProperties);1536517284;To use System Properties as fallback for configuration;public void setUseSystemProperties(boolean useSystemProperties) {_        this.useSystemProperties = useSystemProperties__    };to,use,system,properties,as,fallback,for,configuration;public,void,set,use,system,properties,boolean,use,system,properties,this,use,system,properties,use,system,properties
HttpEndpoint -> public void setUseSystemProperties(boolean useSystemProperties);1537381175;To use System Properties as fallback for configuration;public void setUseSystemProperties(boolean useSystemProperties) {_        this.useSystemProperties = useSystemProperties__    };to,use,system,properties,as,fallback,for,configuration;public,void,set,use,system,properties,boolean,use,system,properties,this,use,system,properties,use,system,properties
HttpEndpoint -> public void setUseSystemProperties(boolean useSystemProperties);1540108158;To use System Properties as fallback for configuration;public void setUseSystemProperties(boolean useSystemProperties) {_        this.useSystemProperties = useSystemProperties__    };to,use,system,properties,as,fallback,for,configuration;public,void,set,use,system,properties,boolean,use,system,properties,this,use,system,properties,use,system,properties
HttpEndpoint -> public void setUseSystemProperties(boolean useSystemProperties);1540108160;To use System Properties as fallback for configuration;public void setUseSystemProperties(boolean useSystemProperties) {_        this.useSystemProperties = useSystemProperties__    };to,use,system,properties,as,fallback,for,configuration;public,void,set,use,system,properties,boolean,use,system,properties,this,use,system,properties,use,system,properties
HttpEndpoint -> public void setUseSystemProperties(boolean useSystemProperties);1540472504;To use System Properties as fallback for configuration;public void setUseSystemProperties(boolean useSystemProperties) {_        this.useSystemProperties = useSystemProperties__    };to,use,system,properties,as,fallback,for,configuration;public,void,set,use,system,properties,boolean,use,system,properties,this,use,system,properties,use,system,properties
HttpEndpoint -> public void setUseSystemProperties(boolean useSystemProperties);1541670803;To use System Properties as fallback for configuration;public void setUseSystemProperties(boolean useSystemProperties) {_        this.useSystemProperties = useSystemProperties__    };to,use,system,properties,as,fallback,for,configuration;public,void,set,use,system,properties,boolean,use,system,properties,this,use,system,properties,use,system,properties
HttpEndpoint -> public void setUseSystemProperties(boolean useSystemProperties);1541863162;To use System Properties as fallback for configuration;public void setUseSystemProperties(boolean useSystemProperties) {_        this.useSystemProperties = useSystemProperties__    };to,use,system,properties,as,fallback,for,configuration;public,void,set,use,system,properties,boolean,use,system,properties,this,use,system,properties,use,system,properties
HttpEndpoint -> public void setUseSystemProperties(boolean useSystemProperties);1542010001;To use System Properties as fallback for configuration;public void setUseSystemProperties(boolean useSystemProperties) {_        this.useSystemProperties = useSystemProperties__    };to,use,system,properties,as,fallback,for,configuration;public,void,set,use,system,properties,boolean,use,system,properties,this,use,system,properties,use,system,properties
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1388443957;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1405374721;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1416561667;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1416567967;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1423750790;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1423911493;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1425142361;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1427402378;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1430295992;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1432657566;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1434555340;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1434611635;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1437130683;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1437293796;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1437294058;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1437656675;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1447835508;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1447915710;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1451237126;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1451302108;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1452014713;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1452193091;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1460027071;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1460027071;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1470140271;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1470140412;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1470142365;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1470142377;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1476946116;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1485947385;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1488387150;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public HttpClientBuilder getClientBuilder();1488812702;Provide access to the http client request parameters used on new {@link RequestConfig} instances_used by producers or consumers of this endpoint.;public HttpClientBuilder getClientBuilder() {_        return clientBuilder__    };provide,access,to,the,http,client,request,parameters,used,on,new,link,request,config,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,client,builder,get,client,builder,return,client,builder
HttpEndpoint -> public void setConnectionRequestTimeout(int connectionRequestTimeout);1520263875;The timeout in milliseconds used when requesting a connection_from the connection manager. A timeout value of zero is interpreted_as an infinite timeout._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setConnectionRequestTimeout(int connectionRequestTimeout) {_        this.connectionRequestTimeout = connectionRequestTimeout__    };the,timeout,in,milliseconds,used,when,requesting,a,connection,from,the,connection,manager,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,connection,request,timeout,int,connection,request,timeout,this,connection,request,timeout,connection,request,timeout
HttpEndpoint -> public void setConnectionRequestTimeout(int connectionRequestTimeout);1536220089;The timeout in milliseconds used when requesting a connection_from the connection manager. A timeout value of zero is interpreted_as an infinite timeout._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setConnectionRequestTimeout(int connectionRequestTimeout) {_        this.connectionRequestTimeout = connectionRequestTimeout__    };the,timeout,in,milliseconds,used,when,requesting,a,connection,from,the,connection,manager,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,connection,request,timeout,int,connection,request,timeout,this,connection,request,timeout,connection,request,timeout
HttpEndpoint -> public void setConnectionRequestTimeout(int connectionRequestTimeout);1536220089;The timeout in milliseconds used when requesting a connection_from the connection manager. A timeout value of zero is interpreted_as an infinite timeout._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setConnectionRequestTimeout(int connectionRequestTimeout) {_        this.connectionRequestTimeout = connectionRequestTimeout__    };the,timeout,in,milliseconds,used,when,requesting,a,connection,from,the,connection,manager,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,connection,request,timeout,int,connection,request,timeout,this,connection,request,timeout,connection,request,timeout
HttpEndpoint -> public void setConnectionRequestTimeout(int connectionRequestTimeout);1536220090;The timeout in milliseconds used when requesting a connection_from the connection manager. A timeout value of zero is interpreted_as an infinite timeout._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setConnectionRequestTimeout(int connectionRequestTimeout) {_        this.connectionRequestTimeout = connectionRequestTimeout__    };the,timeout,in,milliseconds,used,when,requesting,a,connection,from,the,connection,manager,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,connection,request,timeout,int,connection,request,timeout,this,connection,request,timeout,connection,request,timeout
HttpEndpoint -> public void setConnectionRequestTimeout(int connectionRequestTimeout);1536517284;The timeout in milliseconds used when requesting a connection_from the connection manager. A timeout value of zero is interpreted_as an infinite timeout._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setConnectionRequestTimeout(int connectionRequestTimeout) {_        this.connectionRequestTimeout = connectionRequestTimeout__    };the,timeout,in,milliseconds,used,when,requesting,a,connection,from,the,connection,manager,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,connection,request,timeout,int,connection,request,timeout,this,connection,request,timeout,connection,request,timeout
HttpEndpoint -> public void setConnectionRequestTimeout(int connectionRequestTimeout);1537381175;The timeout in milliseconds used when requesting a connection_from the connection manager. A timeout value of zero is interpreted_as an infinite timeout._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setConnectionRequestTimeout(int connectionRequestTimeout) {_        this.connectionRequestTimeout = connectionRequestTimeout__    };the,timeout,in,milliseconds,used,when,requesting,a,connection,from,the,connection,manager,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,connection,request,timeout,int,connection,request,timeout,this,connection,request,timeout,connection,request,timeout
HttpEndpoint -> public void setConnectionRequestTimeout(int connectionRequestTimeout);1540108158;The timeout in milliseconds used when requesting a connection_from the connection manager. A timeout value of zero is interpreted_as an infinite timeout._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setConnectionRequestTimeout(int connectionRequestTimeout) {_        this.connectionRequestTimeout = connectionRequestTimeout__    };the,timeout,in,milliseconds,used,when,requesting,a,connection,from,the,connection,manager,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,connection,request,timeout,int,connection,request,timeout,this,connection,request,timeout,connection,request,timeout
HttpEndpoint -> public void setConnectionRequestTimeout(int connectionRequestTimeout);1540108160;The timeout in milliseconds used when requesting a connection_from the connection manager. A timeout value of zero is interpreted_as an infinite timeout._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setConnectionRequestTimeout(int connectionRequestTimeout) {_        this.connectionRequestTimeout = connectionRequestTimeout__    };the,timeout,in,milliseconds,used,when,requesting,a,connection,from,the,connection,manager,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,connection,request,timeout,int,connection,request,timeout,this,connection,request,timeout,connection,request,timeout
HttpEndpoint -> public void setConnectionRequestTimeout(int connectionRequestTimeout);1540472504;The timeout in milliseconds used when requesting a connection_from the connection manager. A timeout value of zero is interpreted_as an infinite timeout._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setConnectionRequestTimeout(int connectionRequestTimeout) {_        this.connectionRequestTimeout = connectionRequestTimeout__    };the,timeout,in,milliseconds,used,when,requesting,a,connection,from,the,connection,manager,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,connection,request,timeout,int,connection,request,timeout,this,connection,request,timeout,connection,request,timeout
HttpEndpoint -> public void setConnectionRequestTimeout(int connectionRequestTimeout);1541670803;The timeout in milliseconds used when requesting a connection_from the connection manager. A timeout value of zero is interpreted_as an infinite timeout._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setConnectionRequestTimeout(int connectionRequestTimeout) {_        this.connectionRequestTimeout = connectionRequestTimeout__    };the,timeout,in,milliseconds,used,when,requesting,a,connection,from,the,connection,manager,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,connection,request,timeout,int,connection,request,timeout,this,connection,request,timeout,connection,request,timeout
HttpEndpoint -> public void setConnectionRequestTimeout(int connectionRequestTimeout);1541863162;The timeout in milliseconds used when requesting a connection_from the connection manager. A timeout value of zero is interpreted_as an infinite timeout._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setConnectionRequestTimeout(int connectionRequestTimeout) {_        this.connectionRequestTimeout = connectionRequestTimeout__    };the,timeout,in,milliseconds,used,when,requesting,a,connection,from,the,connection,manager,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,connection,request,timeout,int,connection,request,timeout,this,connection,request,timeout,connection,request,timeout
HttpEndpoint -> public void setConnectionRequestTimeout(int connectionRequestTimeout);1542010001;The timeout in milliseconds used when requesting a connection_from the connection manager. A timeout value of zero is interpreted_as an infinite timeout._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setConnectionRequestTimeout(int connectionRequestTimeout) {_        this.connectionRequestTimeout = connectionRequestTimeout__    };the,timeout,in,milliseconds,used,when,requesting,a,connection,from,the,connection,manager,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,connection,request,timeout,int,connection,request,timeout,this,connection,request,timeout,connection,request,timeout
HttpEndpoint -> public void setHttpBinding(HttpBinding httpBinding);1432657566;To use a custom HttpBinding to control the mapping between Camel message and HttpClient.;public void setHttpBinding(HttpBinding httpBinding) {_        this.httpBinding = httpBinding__    };to,use,a,custom,http,binding,to,control,the,mapping,between,camel,message,and,http,client;public,void,set,http,binding,http,binding,http,binding,this,http,binding,http,binding
HttpEndpoint -> public void setHttpBinding(HttpBinding httpBinding);1434555340;To use a custom HttpBinding to control the mapping between Camel message and HttpClient.;public void setHttpBinding(HttpBinding httpBinding) {_        this.httpBinding = httpBinding__    };to,use,a,custom,http,binding,to,control,the,mapping,between,camel,message,and,http,client;public,void,set,http,binding,http,binding,http,binding,this,http,binding,http,binding
HttpEndpoint -> public void setHttpBinding(HttpBinding httpBinding);1434611635;To use a custom HttpBinding to control the mapping between Camel message and HttpClient.;public void setHttpBinding(HttpBinding httpBinding) {_        this.httpBinding = httpBinding__    };to,use,a,custom,http,binding,to,control,the,mapping,between,camel,message,and,http,client;public,void,set,http,binding,http,binding,http,binding,this,http,binding,http,binding
HttpEndpoint -> public void setHttpBinding(HttpBinding httpBinding);1437130683;To use a custom HttpBinding to control the mapping between Camel message and HttpClient.;public void setHttpBinding(HttpBinding httpBinding) {_        this.httpBinding = httpBinding__    };to,use,a,custom,http,binding,to,control,the,mapping,between,camel,message,and,http,client;public,void,set,http,binding,http,binding,http,binding,this,http,binding,http,binding
HttpEndpoint -> public void setHttpBinding(HttpBinding httpBinding);1437293796;To use a custom HttpBinding to control the mapping between Camel message and HttpClient.;public void setHttpBinding(HttpBinding httpBinding) {_        this.httpBinding = httpBinding__    };to,use,a,custom,http,binding,to,control,the,mapping,between,camel,message,and,http,client;public,void,set,http,binding,http,binding,http,binding,this,http,binding,http,binding
HttpEndpoint -> public void setHttpBinding(HttpBinding httpBinding);1437294058;To use a custom HttpBinding to control the mapping between Camel message and HttpClient.;public void setHttpBinding(HttpBinding httpBinding) {_        this.httpBinding = httpBinding__    };to,use,a,custom,http,binding,to,control,the,mapping,between,camel,message,and,http,client;public,void,set,http,binding,http,binding,http,binding,this,http,binding,http,binding
HttpEndpoint -> public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure);1432657566;Option to disable throwing the HttpOperationFailedException in case of failed responses from the remote server._This allows you to get all responses regardless of the HTTP status code.;public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure) {_        this.throwExceptionOnFailure = throwExceptionOnFailure__    };option,to,disable,throwing,the,http,operation,failed,exception,in,case,of,failed,responses,from,the,remote,server,this,allows,you,to,get,all,responses,regardless,of,the,http,status,code;public,void,set,throw,exception,on,failure,boolean,throw,exception,on,failure,this,throw,exception,on,failure,throw,exception,on,failure
HttpEndpoint -> public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure);1434555340;Option to disable throwing the HttpOperationFailedException in case of failed responses from the remote server._This allows you to get all responses regardless of the HTTP status code.;public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure) {_        this.throwExceptionOnFailure = throwExceptionOnFailure__    };option,to,disable,throwing,the,http,operation,failed,exception,in,case,of,failed,responses,from,the,remote,server,this,allows,you,to,get,all,responses,regardless,of,the,http,status,code;public,void,set,throw,exception,on,failure,boolean,throw,exception,on,failure,this,throw,exception,on,failure,throw,exception,on,failure
HttpEndpoint -> public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure);1434611635;Option to disable throwing the HttpOperationFailedException in case of failed responses from the remote server._This allows you to get all responses regardless of the HTTP status code.;public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure) {_        this.throwExceptionOnFailure = throwExceptionOnFailure__    };option,to,disable,throwing,the,http,operation,failed,exception,in,case,of,failed,responses,from,the,remote,server,this,allows,you,to,get,all,responses,regardless,of,the,http,status,code;public,void,set,throw,exception,on,failure,boolean,throw,exception,on,failure,this,throw,exception,on,failure,throw,exception,on,failure
HttpEndpoint -> public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure);1437130683;Option to disable throwing the HttpOperationFailedException in case of failed responses from the remote server._This allows you to get all responses regardless of the HTTP status code.;public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure) {_        this.throwExceptionOnFailure = throwExceptionOnFailure__    };option,to,disable,throwing,the,http,operation,failed,exception,in,case,of,failed,responses,from,the,remote,server,this,allows,you,to,get,all,responses,regardless,of,the,http,status,code;public,void,set,throw,exception,on,failure,boolean,throw,exception,on,failure,this,throw,exception,on,failure,throw,exception,on,failure
HttpEndpoint -> public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure);1437293796;Option to disable throwing the HttpOperationFailedException in case of failed responses from the remote server._This allows you to get all responses regardless of the HTTP status code.;public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure) {_        this.throwExceptionOnFailure = throwExceptionOnFailure__    };option,to,disable,throwing,the,http,operation,failed,exception,in,case,of,failed,responses,from,the,remote,server,this,allows,you,to,get,all,responses,regardless,of,the,http,status,code;public,void,set,throw,exception,on,failure,boolean,throw,exception,on,failure,this,throw,exception,on,failure,throw,exception,on,failure
HttpEndpoint -> public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure);1437294058;Option to disable throwing the HttpOperationFailedException in case of failed responses from the remote server._This allows you to get all responses regardless of the HTTP status code.;public void setThrowExceptionOnFailure(boolean throwExceptionOnFailure) {_        this.throwExceptionOnFailure = throwExceptionOnFailure__    };option,to,disable,throwing,the,http,operation,failed,exception,in,case,of,failed,responses,from,the,remote,server,this,allows,you,to,get,all,responses,regardless,of,the,http,status,code;public,void,set,throw,exception,on,failure,boolean,throw,exception,on,failure,this,throw,exception,on,failure,throw,exception,on,failure
HttpEndpoint -> public synchronized HttpClient getHttpClient();1270895897;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1274269216;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1293443624;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1296408582;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1296495624;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1296567562;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1297975937;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1307685726;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1310024305;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1310131950;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1317112374;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1323694591;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1327082739;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1333787762;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1342106539;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1344849457;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1345088231;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1347436727;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1347436777;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1356694393;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1357140814;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1366899100;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1376549254;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1378206923;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1379491484;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1382359231;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1383138956;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1388443957;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1405374721;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1416561667;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1416567967;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1423750790;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1423911493;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1425142361;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1427402378;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1430295992;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1432657566;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1434555340;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1434611635;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1437130683;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1437293796;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1437294058;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1437656675;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1447835508;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1447915710;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1451237126;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1451302108;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1452014713;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1452193091;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1460027071;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1460027071;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1470140271;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1470140412;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1470142365;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1470142377;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1476946116;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1485947385;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1488387150;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public synchronized HttpClient getHttpClient();1488812702;Gets the HttpClient to be used by {@link org.apache.camel.component.http4.HttpProducer};public synchronized HttpClient getHttpClient() {_        if (httpClient == null) {_            httpClient = createHttpClient()__        }_        return httpClient__    };gets,the,http,client,to,be,used,by,link,org,apache,camel,component,http4,http,producer;public,synchronized,http,client,get,http,client,if,http,client,null,http,client,create,http,client,return,http,client
HttpEndpoint -> public void setTransferException(boolean transferException);1432657566;Option to disable throwing the HttpOperationFailedException in case of failed responses from the remote server._This allows you to get all responses regardless of the HTTP status code.;public void setTransferException(boolean transferException) {_        this.transferException = transferException__    };option,to,disable,throwing,the,http,operation,failed,exception,in,case,of,failed,responses,from,the,remote,server,this,allows,you,to,get,all,responses,regardless,of,the,http,status,code;public,void,set,transfer,exception,boolean,transfer,exception,this,transfer,exception,transfer,exception
HttpEndpoint -> public void setTransferException(boolean transferException);1434555340;Option to disable throwing the HttpOperationFailedException in case of failed responses from the remote server._This allows you to get all responses regardless of the HTTP status code.;public void setTransferException(boolean transferException) {_        this.transferException = transferException__    };option,to,disable,throwing,the,http,operation,failed,exception,in,case,of,failed,responses,from,the,remote,server,this,allows,you,to,get,all,responses,regardless,of,the,http,status,code;public,void,set,transfer,exception,boolean,transfer,exception,this,transfer,exception,transfer,exception
HttpEndpoint -> public void setTransferException(boolean transferException);1434611635;Option to disable throwing the HttpOperationFailedException in case of failed responses from the remote server._This allows you to get all responses regardless of the HTTP status code.;public void setTransferException(boolean transferException) {_        this.transferException = transferException__    };option,to,disable,throwing,the,http,operation,failed,exception,in,case,of,failed,responses,from,the,remote,server,this,allows,you,to,get,all,responses,regardless,of,the,http,status,code;public,void,set,transfer,exception,boolean,transfer,exception,this,transfer,exception,transfer,exception
HttpEndpoint -> public void setTransferException(boolean transferException);1437130683;Option to disable throwing the HttpOperationFailedException in case of failed responses from the remote server._This allows you to get all responses regardless of the HTTP status code.;public void setTransferException(boolean transferException) {_        this.transferException = transferException__    };option,to,disable,throwing,the,http,operation,failed,exception,in,case,of,failed,responses,from,the,remote,server,this,allows,you,to,get,all,responses,regardless,of,the,http,status,code;public,void,set,transfer,exception,boolean,transfer,exception,this,transfer,exception,transfer,exception
HttpEndpoint -> public void setTransferException(boolean transferException);1437293796;Option to disable throwing the HttpOperationFailedException in case of failed responses from the remote server._This allows you to get all responses regardless of the HTTP status code.;public void setTransferException(boolean transferException) {_        this.transferException = transferException__    };option,to,disable,throwing,the,http,operation,failed,exception,in,case,of,failed,responses,from,the,remote,server,this,allows,you,to,get,all,responses,regardless,of,the,http,status,code;public,void,set,transfer,exception,boolean,transfer,exception,this,transfer,exception,transfer,exception
HttpEndpoint -> public void setTransferException(boolean transferException);1437294058;Option to disable throwing the HttpOperationFailedException in case of failed responses from the remote server._This allows you to get all responses regardless of the HTTP status code.;public void setTransferException(boolean transferException) {_        this.transferException = transferException__    };option,to,disable,throwing,the,http,operation,failed,exception,in,case,of,failed,responses,from,the,remote,server,this,allows,you,to,get,all,responses,regardless,of,the,http,status,code;public,void,set,transfer,exception,boolean,transfer,exception,this,transfer,exception,transfer,exception
HttpEndpoint -> public void setHttpBindingRef(HttpBinding binding);1296408582;Used from the IntrospectionSupport in HttpComponent._@param binding;public void setHttpBindingRef(HttpBinding binding) {_        this.binding = binding__    };used,from,the,introspection,support,in,http,component,param,binding;public,void,set,http,binding,ref,http,binding,binding,this,binding,binding
HttpEndpoint -> public void setHttpBindingRef(HttpBinding binding);1296495624;Used from the IntrospectionSupport in HttpComponent._@param binding;public void setHttpBindingRef(HttpBinding binding) {_        this.binding = binding__    };used,from,the,introspection,support,in,http,component,param,binding;public,void,set,http,binding,ref,http,binding,binding,this,binding,binding
HttpEndpoint -> public void setHttpBindingRef(HttpBinding binding);1296567562;Used from the IntrospectionSupport in HttpComponent._@param binding;public void setHttpBindingRef(HttpBinding binding) {_        this.binding = binding__    };used,from,the,introspection,support,in,http,component,param,binding;public,void,set,http,binding,ref,http,binding,binding,this,binding,binding
HttpEndpoint -> public void setHttpBindingRef(HttpBinding binding);1297975937;Used from the IntrospectionSupport in HttpComponent._@param binding;public void setHttpBindingRef(HttpBinding binding) {_        this.binding = binding__    };used,from,the,introspection,support,in,http,component,param,binding;public,void,set,http,binding,ref,http,binding,binding,this,binding,binding
HttpEndpoint -> public void setHttpBindingRef(HttpBinding binding);1307685726;Used from the IntrospectionSupport in HttpComponent._@param binding;public void setHttpBindingRef(HttpBinding binding) {_        this.binding = binding__    };used,from,the,introspection,support,in,http,component,param,binding;public,void,set,http,binding,ref,http,binding,binding,this,binding,binding
HttpEndpoint -> public void setHttpBindingRef(HttpBinding binding);1310024305;Used from the IntrospectionSupport in HttpComponent._@param binding;public void setHttpBindingRef(HttpBinding binding) {_        this.binding = binding__    };used,from,the,introspection,support,in,http,component,param,binding;public,void,set,http,binding,ref,http,binding,binding,this,binding,binding
HttpEndpoint -> public void setHttpBindingRef(HttpBinding binding);1310131950;Used from the IntrospectionSupport in HttpComponent._@param binding;public void setHttpBindingRef(HttpBinding binding) {_        this.binding = binding__    };used,from,the,introspection,support,in,http,component,param,binding;public,void,set,http,binding,ref,http,binding,binding,this,binding,binding
HttpEndpoint -> public void setHttpBindingRef(HttpBinding binding);1317112374;Used from the IntrospectionSupport in HttpComponent._@param binding;public void setHttpBindingRef(HttpBinding binding) {_        this.binding = binding__    };used,from,the,introspection,support,in,http,component,param,binding;public,void,set,http,binding,ref,http,binding,binding,this,binding,binding
HttpEndpoint -> public void setHttpBindingRef(HttpBinding binding);1323694591;Used from the IntrospectionSupport in HttpComponent._@param binding;public void setHttpBindingRef(HttpBinding binding) {_        this.binding = binding__    };used,from,the,introspection,support,in,http,component,param,binding;public,void,set,http,binding,ref,http,binding,binding,this,binding,binding
HttpEndpoint -> public void setHttpBindingRef(HttpBinding binding);1327082739;Used from the IntrospectionSupport in HttpComponent._@param binding;public void setHttpBindingRef(HttpBinding binding) {_        this.binding = binding__    };used,from,the,introspection,support,in,http,component,param,binding;public,void,set,http,binding,ref,http,binding,binding,this,binding,binding
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1432657566;To use a custom org.apache.http.client.CookieStore._By default the org.apache.http.impl.client.BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy).;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,org,apache,http,client,cookie,store,by,default,the,org,apache,http,impl,client,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1434555340;To use a custom org.apache.http.client.CookieStore._By default the org.apache.http.impl.client.BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy).;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,org,apache,http,client,cookie,store,by,default,the,org,apache,http,impl,client,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1434611635;To use a custom org.apache.http.client.CookieStore._By default the org.apache.http.impl.client.BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy).;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,org,apache,http,client,cookie,store,by,default,the,org,apache,http,impl,client,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1437130683;To use a custom org.apache.http.client.CookieStore._By default the org.apache.http.impl.client.BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy).;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,org,apache,http,client,cookie,store,by,default,the,org,apache,http,impl,client,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1437293796;To use a custom org.apache.http.client.CookieStore._By default the org.apache.http.impl.client.BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy).;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,org,apache,http,client,cookie,store,by,default,the,org,apache,http,impl,client,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1437294058;To use a custom org.apache.http.client.CookieStore._By default the org.apache.http.impl.client.BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy).;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,org,apache,http,client,cookie,store,by,default,the,org,apache,http,impl,client,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1437656675;To use a custom org.apache.http.client.CookieStore._By default the org.apache.http.impl.client.BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy).;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,org,apache,http,client,cookie,store,by,default,the,org,apache,http,impl,client,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1447835508;To use a custom org.apache.http.client.CookieStore._By default the org.apache.http.impl.client.BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy).;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,org,apache,http,client,cookie,store,by,default,the,org,apache,http,impl,client,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1447915710;To use a custom org.apache.http.client.CookieStore._By default the org.apache.http.impl.client.BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy).;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,org,apache,http,client,cookie,store,by,default,the,org,apache,http,impl,client,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1451237126;To use a custom org.apache.http.client.CookieStore._By default the org.apache.http.impl.client.BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy).;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,org,apache,http,client,cookie,store,by,default,the,org,apache,http,impl,client,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1451302108;To use a custom org.apache.http.client.CookieStore._By default the org.apache.http.impl.client.BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy).;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,org,apache,http,client,cookie,store,by,default,the,org,apache,http,impl,client,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1452014713;To use a custom org.apache.http.client.CookieStore._By default the org.apache.http.impl.client.BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy).;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,org,apache,http,client,cookie,store,by,default,the,org,apache,http,impl,client,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1452193091;To use a custom org.apache.http.client.CookieStore._By default the org.apache.http.impl.client.BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy).;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,org,apache,http,client,cookie,store,by,default,the,org,apache,http,impl,client,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1460027071;To use a custom org.apache.http.client.CookieStore._By default the org.apache.http.impl.client.BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy).;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,org,apache,http,client,cookie,store,by,default,the,org,apache,http,impl,client,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1460027071;To use a custom org.apache.http.client.CookieStore._By default the org.apache.http.impl.client.BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy).;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,org,apache,http,client,cookie,store,by,default,the,org,apache,http,impl,client,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1470140271;To use a custom org.apache.http.client.CookieStore._By default the org.apache.http.impl.client.BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy).;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,org,apache,http,client,cookie,store,by,default,the,org,apache,http,impl,client,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1470140412;To use a custom org.apache.http.client.CookieStore._By default the org.apache.http.impl.client.BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy).;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,org,apache,http,client,cookie,store,by,default,the,org,apache,http,impl,client,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1470142365;To use a custom org.apache.http.client.CookieStore._By default the org.apache.http.impl.client.BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy).;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,org,apache,http,client,cookie,store,by,default,the,org,apache,http,impl,client,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1470142377;To use a custom org.apache.http.client.CookieStore._By default the org.apache.http.impl.client.BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy).;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,org,apache,http,client,cookie,store,by,default,the,org,apache,http,impl,client,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1476946116;To use a custom org.apache.http.client.CookieStore._By default the org.apache.http.impl.client.BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy)._If a cookieHandler is set then the cookie store is also forced to be a noop cookie store as cookie handling is_then performed by the cookieHandler.;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,org,apache,http,client,cookie,store,by,default,the,org,apache,http,impl,client,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy,if,a,cookie,handler,is,set,then,the,cookie,store,is,also,forced,to,be,a,noop,cookie,store,as,cookie,handling,is,then,performed,by,the,cookie,handler;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1485947385;To use a custom org.apache.http.client.CookieStore._By default the org.apache.http.impl.client.BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy)._If a cookieHandler is set then the cookie store is also forced to be a noop cookie store as cookie handling is_then performed by the cookieHandler.;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,org,apache,http,client,cookie,store,by,default,the,org,apache,http,impl,client,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy,if,a,cookie,handler,is,set,then,the,cookie,store,is,also,forced,to,be,a,noop,cookie,store,as,cookie,handling,is,then,performed,by,the,cookie,handler;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1488387150;To use a custom org.apache.http.client.CookieStore._By default the org.apache.http.impl.client.BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy)._If a cookieHandler is set then the cookie store is also forced to be a noop cookie store as cookie handling is_then performed by the cookieHandler.;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,org,apache,http,client,cookie,store,by,default,the,org,apache,http,impl,client,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy,if,a,cookie,handler,is,set,then,the,cookie,store,is,also,forced,to,be,a,noop,cookie,store,as,cookie,handling,is,then,performed,by,the,cookie,handler;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1488812702;To use a custom org.apache.http.client.CookieStore._By default the org.apache.http.impl.client.BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy)._If a cookieHandler is set then the cookie store is also forced to be a noop cookie store as cookie handling is_then performed by the cookieHandler.;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,org,apache,http,client,cookie,store,by,default,the,org,apache,http,impl,client,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy,if,a,cookie,handler,is,set,then,the,cookie,store,is,also,forced,to,be,a,noop,cookie,store,as,cookie,handling,is,then,performed,by,the,cookie,handler;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1489575227;To use a custom CookieStore._By default the BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy)._If a cookieHandler is set then the cookie store is also forced to be a noop cookie store as cookie handling is_then performed by the cookieHandler.;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,cookie,store,by,default,the,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy,if,a,cookie,handler,is,set,then,the,cookie,store,is,also,forced,to,be,a,noop,cookie,store,as,cookie,handling,is,then,performed,by,the,cookie,handler;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1500708950;To use a custom CookieStore._By default the BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy)._If a cookieHandler is set then the cookie store is also forced to be a noop cookie store as cookie handling is_then performed by the cookieHandler.;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,cookie,store,by,default,the,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy,if,a,cookie,handler,is,set,then,the,cookie,store,is,also,forced,to,be,a,noop,cookie,store,as,cookie,handling,is,then,performed,by,the,cookie,handler;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1513158838;To use a custom CookieStore._By default the BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy)._If a cookieHandler is set then the cookie store is also forced to be a noop cookie store as cookie handling is_then performed by the cookieHandler.;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,cookie,store,by,default,the,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy,if,a,cookie,handler,is,set,then,the,cookie,store,is,also,forced,to,be,a,noop,cookie,store,as,cookie,handling,is,then,performed,by,the,cookie,handler;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1520263875;To use a custom CookieStore._By default the BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy)._If a cookieHandler is set then the cookie store is also forced to be a noop cookie store as cookie handling is_then performed by the cookieHandler.;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,cookie,store,by,default,the,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy,if,a,cookie,handler,is,set,then,the,cookie,store,is,also,forced,to,be,a,noop,cookie,store,as,cookie,handling,is,then,performed,by,the,cookie,handler;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1536220089;To use a custom CookieStore._By default the BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy)._If a cookieHandler is set then the cookie store is also forced to be a noop cookie store as cookie handling is_then performed by the cookieHandler.;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,cookie,store,by,default,the,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy,if,a,cookie,handler,is,set,then,the,cookie,store,is,also,forced,to,be,a,noop,cookie,store,as,cookie,handling,is,then,performed,by,the,cookie,handler;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1536220089;To use a custom CookieStore._By default the BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy)._If a cookieHandler is set then the cookie store is also forced to be a noop cookie store as cookie handling is_then performed by the cookieHandler.;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,cookie,store,by,default,the,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy,if,a,cookie,handler,is,set,then,the,cookie,store,is,also,forced,to,be,a,noop,cookie,store,as,cookie,handling,is,then,performed,by,the,cookie,handler;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1536220090;To use a custom CookieStore._By default the BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy)._If a cookieHandler is set then the cookie store is also forced to be a noop cookie store as cookie handling is_then performed by the cookieHandler.;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,cookie,store,by,default,the,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy,if,a,cookie,handler,is,set,then,the,cookie,store,is,also,forced,to,be,a,noop,cookie,store,as,cookie,handling,is,then,performed,by,the,cookie,handler;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1536517284;To use a custom CookieStore._By default the BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy)._If a cookieHandler is set then the cookie store is also forced to be a noop cookie store as cookie handling is_then performed by the cookieHandler.;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,cookie,store,by,default,the,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy,if,a,cookie,handler,is,set,then,the,cookie,store,is,also,forced,to,be,a,noop,cookie,store,as,cookie,handling,is,then,performed,by,the,cookie,handler;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1537381175;To use a custom CookieStore._By default the BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy)._If a cookieHandler is set then the cookie store is also forced to be a noop cookie store as cookie handling is_then performed by the cookieHandler.;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,cookie,store,by,default,the,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy,if,a,cookie,handler,is,set,then,the,cookie,store,is,also,forced,to,be,a,noop,cookie,store,as,cookie,handling,is,then,performed,by,the,cookie,handler;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1540108158;To use a custom CookieStore._By default the BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy)._If a cookieHandler is set then the cookie store is also forced to be a noop cookie store as cookie handling is_then performed by the cookieHandler.;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,cookie,store,by,default,the,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy,if,a,cookie,handler,is,set,then,the,cookie,store,is,also,forced,to,be,a,noop,cookie,store,as,cookie,handling,is,then,performed,by,the,cookie,handler;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1540108160;To use a custom CookieStore._By default the BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy)._If a cookieHandler is set then the cookie store is also forced to be a noop cookie store as cookie handling is_then performed by the cookieHandler.;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,cookie,store,by,default,the,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy,if,a,cookie,handler,is,set,then,the,cookie,store,is,also,forced,to,be,a,noop,cookie,store,as,cookie,handling,is,then,performed,by,the,cookie,handler;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1540472504;To use a custom CookieStore._By default the BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy)._If a cookieHandler is set then the cookie store is also forced to be a noop cookie store as cookie handling is_then performed by the cookieHandler.;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,cookie,store,by,default,the,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy,if,a,cookie,handler,is,set,then,the,cookie,store,is,also,forced,to,be,a,noop,cookie,store,as,cookie,handling,is,then,performed,by,the,cookie,handler;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1541670803;To use a custom CookieStore._By default the BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy)._If a cookieHandler is set then the cookie store is also forced to be a noop cookie store as cookie handling is_then performed by the cookieHandler.;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,cookie,store,by,default,the,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy,if,a,cookie,handler,is,set,then,the,cookie,store,is,also,forced,to,be,a,noop,cookie,store,as,cookie,handling,is,then,performed,by,the,cookie,handler;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1541863162;To use a custom CookieStore._By default the BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy)._If a cookieHandler is set then the cookie store is also forced to be a noop cookie store as cookie handling is_then performed by the cookieHandler.;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,cookie,store,by,default,the,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy,if,a,cookie,handler,is,set,then,the,cookie,store,is,also,forced,to,be,a,noop,cookie,store,as,cookie,handling,is,then,performed,by,the,cookie,handler;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setCookieStore(CookieStore cookieStore);1542010001;To use a custom CookieStore._By default the BasicCookieStore is used which is an in-memory only cookie store._Notice if bridgeEndpoint=true then the cookie store is forced to be a noop cookie store as cookie_shouldn't be stored as we are just bridging (eg acting as a proxy)._If a cookieHandler is set then the cookie store is also forced to be a noop cookie store as cookie handling is_then performed by the cookieHandler.;public void setCookieStore(CookieStore cookieStore) {_        this.cookieStore = cookieStore__    };to,use,a,custom,cookie,store,by,default,the,basic,cookie,store,is,used,which,is,an,in,memory,only,cookie,store,notice,if,bridge,endpoint,true,then,the,cookie,store,is,forced,to,be,a,noop,cookie,store,as,cookie,shouldn,t,be,stored,as,we,are,just,bridging,eg,acting,as,a,proxy,if,a,cookie,handler,is,set,then,the,cookie,store,is,also,forced,to,be,a,noop,cookie,store,as,cookie,handling,is,then,performed,by,the,cookie,handler;public,void,set,cookie,store,cookie,store,cookie,store,this,cookie,store,cookie,store
HttpEndpoint -> public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier);1488387150;To use a custom X509HostnameVerifier such as {@link DefaultHostnameVerifier}_or {@link org.apache.http.conn.ssl.NoopHostnameVerifier}.;public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier) {_        this.x509HostnameVerifier = x509HostnameVerifier__    };to,use,a,custom,x509hostname,verifier,such,as,link,default,hostname,verifier,or,link,org,apache,http,conn,ssl,noop,hostname,verifier;public,void,set,x509hostname,verifier,hostname,verifier,x509hostname,verifier,this,x509hostname,verifier,x509hostname,verifier
HttpEndpoint -> public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier);1488812702;To use a custom X509HostnameVerifier such as {@link DefaultHostnameVerifier}_or {@link org.apache.http.conn.ssl.NoopHostnameVerifier}.;public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier) {_        this.x509HostnameVerifier = x509HostnameVerifier__    };to,use,a,custom,x509hostname,verifier,such,as,link,default,hostname,verifier,or,link,org,apache,http,conn,ssl,noop,hostname,verifier;public,void,set,x509hostname,verifier,hostname,verifier,x509hostname,verifier,this,x509hostname,verifier,x509hostname,verifier
HttpEndpoint -> public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier);1489575227;To use a custom X509HostnameVerifier such as {@link DefaultHostnameVerifier}_or {@link org.apache.http.conn.ssl.NoopHostnameVerifier}.;public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier) {_        this.x509HostnameVerifier = x509HostnameVerifier__    };to,use,a,custom,x509hostname,verifier,such,as,link,default,hostname,verifier,or,link,org,apache,http,conn,ssl,noop,hostname,verifier;public,void,set,x509hostname,verifier,hostname,verifier,x509hostname,verifier,this,x509hostname,verifier,x509hostname,verifier
HttpEndpoint -> public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier);1500708950;To use a custom X509HostnameVerifier such as {@link DefaultHostnameVerifier}_or {@link org.apache.http.conn.ssl.NoopHostnameVerifier}.;public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier) {_        this.x509HostnameVerifier = x509HostnameVerifier__    };to,use,a,custom,x509hostname,verifier,such,as,link,default,hostname,verifier,or,link,org,apache,http,conn,ssl,noop,hostname,verifier;public,void,set,x509hostname,verifier,hostname,verifier,x509hostname,verifier,this,x509hostname,verifier,x509hostname,verifier
HttpEndpoint -> public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier);1513158838;To use a custom X509HostnameVerifier such as {@link DefaultHostnameVerifier}_or {@link org.apache.http.conn.ssl.NoopHostnameVerifier}.;public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier) {_        this.x509HostnameVerifier = x509HostnameVerifier__    };to,use,a,custom,x509hostname,verifier,such,as,link,default,hostname,verifier,or,link,org,apache,http,conn,ssl,noop,hostname,verifier;public,void,set,x509hostname,verifier,hostname,verifier,x509hostname,verifier,this,x509hostname,verifier,x509hostname,verifier
HttpEndpoint -> public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier);1520263875;To use a custom X509HostnameVerifier such as {@link DefaultHostnameVerifier}_or {@link org.apache.http.conn.ssl.NoopHostnameVerifier}.;public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier) {_        this.x509HostnameVerifier = x509HostnameVerifier__    };to,use,a,custom,x509hostname,verifier,such,as,link,default,hostname,verifier,or,link,org,apache,http,conn,ssl,noop,hostname,verifier;public,void,set,x509hostname,verifier,hostname,verifier,x509hostname,verifier,this,x509hostname,verifier,x509hostname,verifier
HttpEndpoint -> public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier);1536220089;To use a custom X509HostnameVerifier such as {@link DefaultHostnameVerifier}_or {@link org.apache.http.conn.ssl.NoopHostnameVerifier}.;public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier) {_        this.x509HostnameVerifier = x509HostnameVerifier__    };to,use,a,custom,x509hostname,verifier,such,as,link,default,hostname,verifier,or,link,org,apache,http,conn,ssl,noop,hostname,verifier;public,void,set,x509hostname,verifier,hostname,verifier,x509hostname,verifier,this,x509hostname,verifier,x509hostname,verifier
HttpEndpoint -> public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier);1536220089;To use a custom X509HostnameVerifier such as {@link DefaultHostnameVerifier}_or {@link org.apache.http.conn.ssl.NoopHostnameVerifier}.;public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier) {_        this.x509HostnameVerifier = x509HostnameVerifier__    };to,use,a,custom,x509hostname,verifier,such,as,link,default,hostname,verifier,or,link,org,apache,http,conn,ssl,noop,hostname,verifier;public,void,set,x509hostname,verifier,hostname,verifier,x509hostname,verifier,this,x509hostname,verifier,x509hostname,verifier
HttpEndpoint -> public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier);1536220090;To use a custom X509HostnameVerifier such as {@link DefaultHostnameVerifier}_or {@link org.apache.http.conn.ssl.NoopHostnameVerifier}.;public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier) {_        this.x509HostnameVerifier = x509HostnameVerifier__    };to,use,a,custom,x509hostname,verifier,such,as,link,default,hostname,verifier,or,link,org,apache,http,conn,ssl,noop,hostname,verifier;public,void,set,x509hostname,verifier,hostname,verifier,x509hostname,verifier,this,x509hostname,verifier,x509hostname,verifier
HttpEndpoint -> public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier);1536517284;To use a custom X509HostnameVerifier such as {@link DefaultHostnameVerifier}_or {@link org.apache.http.conn.ssl.NoopHostnameVerifier}.;public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier) {_        this.x509HostnameVerifier = x509HostnameVerifier__    };to,use,a,custom,x509hostname,verifier,such,as,link,default,hostname,verifier,or,link,org,apache,http,conn,ssl,noop,hostname,verifier;public,void,set,x509hostname,verifier,hostname,verifier,x509hostname,verifier,this,x509hostname,verifier,x509hostname,verifier
HttpEndpoint -> public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier);1537381175;To use a custom X509HostnameVerifier such as {@link DefaultHostnameVerifier}_or {@link org.apache.http.conn.ssl.NoopHostnameVerifier}.;public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier) {_        this.x509HostnameVerifier = x509HostnameVerifier__    };to,use,a,custom,x509hostname,verifier,such,as,link,default,hostname,verifier,or,link,org,apache,http,conn,ssl,noop,hostname,verifier;public,void,set,x509hostname,verifier,hostname,verifier,x509hostname,verifier,this,x509hostname,verifier,x509hostname,verifier
HttpEndpoint -> public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier);1540108158;To use a custom X509HostnameVerifier such as {@link DefaultHostnameVerifier}_or {@link org.apache.http.conn.ssl.NoopHostnameVerifier}.;public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier) {_        this.x509HostnameVerifier = x509HostnameVerifier__    };to,use,a,custom,x509hostname,verifier,such,as,link,default,hostname,verifier,or,link,org,apache,http,conn,ssl,noop,hostname,verifier;public,void,set,x509hostname,verifier,hostname,verifier,x509hostname,verifier,this,x509hostname,verifier,x509hostname,verifier
HttpEndpoint -> public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier);1540108160;To use a custom X509HostnameVerifier such as {@link DefaultHostnameVerifier}_or {@link org.apache.http.conn.ssl.NoopHostnameVerifier}.;public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier) {_        this.x509HostnameVerifier = x509HostnameVerifier__    };to,use,a,custom,x509hostname,verifier,such,as,link,default,hostname,verifier,or,link,org,apache,http,conn,ssl,noop,hostname,verifier;public,void,set,x509hostname,verifier,hostname,verifier,x509hostname,verifier,this,x509hostname,verifier,x509hostname,verifier
HttpEndpoint -> public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier);1540472504;To use a custom X509HostnameVerifier such as {@link DefaultHostnameVerifier}_or {@link org.apache.http.conn.ssl.NoopHostnameVerifier}.;public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier) {_        this.x509HostnameVerifier = x509HostnameVerifier__    };to,use,a,custom,x509hostname,verifier,such,as,link,default,hostname,verifier,or,link,org,apache,http,conn,ssl,noop,hostname,verifier;public,void,set,x509hostname,verifier,hostname,verifier,x509hostname,verifier,this,x509hostname,verifier,x509hostname,verifier
HttpEndpoint -> public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier);1541670803;To use a custom X509HostnameVerifier such as {@link DefaultHostnameVerifier}_or {@link org.apache.http.conn.ssl.NoopHostnameVerifier}.;public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier) {_        this.x509HostnameVerifier = x509HostnameVerifier__    };to,use,a,custom,x509hostname,verifier,such,as,link,default,hostname,verifier,or,link,org,apache,http,conn,ssl,noop,hostname,verifier;public,void,set,x509hostname,verifier,hostname,verifier,x509hostname,verifier,this,x509hostname,verifier,x509hostname,verifier
HttpEndpoint -> public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier);1541863162;To use a custom X509HostnameVerifier such as {@link DefaultHostnameVerifier}_or {@link org.apache.http.conn.ssl.NoopHostnameVerifier}.;public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier) {_        this.x509HostnameVerifier = x509HostnameVerifier__    };to,use,a,custom,x509hostname,verifier,such,as,link,default,hostname,verifier,or,link,org,apache,http,conn,ssl,noop,hostname,verifier;public,void,set,x509hostname,verifier,hostname,verifier,x509hostname,verifier,this,x509hostname,verifier,x509hostname,verifier
HttpEndpoint -> public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier);1542010001;To use a custom X509HostnameVerifier such as {@link DefaultHostnameVerifier}_or {@link org.apache.http.conn.ssl.NoopHostnameVerifier}.;public void setX509HostnameVerifier(HostnameVerifier x509HostnameVerifier) {_        this.x509HostnameVerifier = x509HostnameVerifier__    };to,use,a,custom,x509hostname,verifier,such,as,link,default,hostname,verifier,or,link,org,apache,http,conn,ssl,noop,hostname,verifier;public,void,set,x509hostname,verifier,hostname,verifier,x509hostname,verifier,this,x509hostname,verifier,x509hostname,verifier
HttpEndpoint -> public boolean isIgnoreContentLengthHeader();1536220089;Ignore Content-Length Header;public boolean isIgnoreContentLengthHeader() {_        return ignoreContentLengthHeader__    };ignore,content,length,header;public,boolean,is,ignore,content,length,header,return,ignore,content,length,header
HttpEndpoint -> public boolean isIgnoreContentLengthHeader();1536220089;Ignore Content-Length Header_<p>_Ignore the HTTP Content-Length Header when sending the_request to the HttpProducer.  Set this to false to explicitly_set Content-Length of a request body._</p>_<p>_Default: {@code true}_</p>;public boolean isIgnoreContentLengthHeader() {_        return ignoreContentLengthHeader__    };ignore,content,length,header,p,ignore,the,http,content,length,header,when,sending,the,request,to,the,http,producer,set,this,to,false,to,explicitly,set,content,length,of,a,request,body,p,p,default,code,true,p;public,boolean,is,ignore,content,length,header,return,ignore,content,length,header
HttpEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1541670803;To configure security using SSLContextParameters._Important: Only one instance of org.apache.camel.util.jsse.SSLContextParameters is supported per HttpComponent._If you need to use 2 or more different instances, you need to define a new HttpComponent per instance you need.;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters,important,only,one,instance,of,org,apache,camel,util,jsse,sslcontext,parameters,is,supported,per,http,component,if,you,need,to,use,2,or,more,different,instances,you,need,to,define,a,new,http,component,per,instance,you,need;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
HttpEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1541863162;To configure security using SSLContextParameters._Important: Only one instance of org.apache.camel.util.jsse.SSLContextParameters is supported per HttpComponent._If you need to use 2 or more different instances, you need to define a new HttpComponent per instance you need.;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters,important,only,one,instance,of,org,apache,camel,util,jsse,sslcontext,parameters,is,supported,per,http,component,if,you,need,to,use,2,or,more,different,instances,you,need,to,define,a,new,http,component,per,instance,you,need;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
HttpEndpoint -> public void setSslContextParameters(SSLContextParameters sslContextParameters);1542010001;To configure security using SSLContextParameters._Important: Only one instance of org.apache.camel.util.jsse.SSLContextParameters is supported per HttpComponent._If you need to use 2 or more different instances, you need to define a new HttpComponent per instance you need.;public void setSslContextParameters(SSLContextParameters sslContextParameters) {_        this.sslContextParameters = sslContextParameters__    };to,configure,security,using,sslcontext,parameters,important,only,one,instance,of,org,apache,camel,util,jsse,sslcontext,parameters,is,supported,per,http,component,if,you,need,to,use,2,or,more,different,instances,you,need,to,define,a,new,http,component,per,instance,you,need;public,void,set,ssl,context,parameters,sslcontext,parameters,ssl,context,parameters,this,ssl,context,parameters,ssl,context,parameters
HttpEndpoint -> public void setMaxTotalConnections(int maxTotalConnections);1488387150;The maximum number of connections.;public void setMaxTotalConnections(int maxTotalConnections) {_        this.maxTotalConnections = maxTotalConnections__    };the,maximum,number,of,connections;public,void,set,max,total,connections,int,max,total,connections,this,max,total,connections,max,total,connections
HttpEndpoint -> public void setMaxTotalConnections(int maxTotalConnections);1488812702;The maximum number of connections.;public void setMaxTotalConnections(int maxTotalConnections) {_        this.maxTotalConnections = maxTotalConnections__    };the,maximum,number,of,connections;public,void,set,max,total,connections,int,max,total,connections,this,max,total,connections,max,total,connections
HttpEndpoint -> public void setMaxTotalConnections(int maxTotalConnections);1489575227;The maximum number of connections.;public void setMaxTotalConnections(int maxTotalConnections) {_        this.maxTotalConnections = maxTotalConnections__    };the,maximum,number,of,connections;public,void,set,max,total,connections,int,max,total,connections,this,max,total,connections,max,total,connections
HttpEndpoint -> public void setMaxTotalConnections(int maxTotalConnections);1500708950;The maximum number of connections.;public void setMaxTotalConnections(int maxTotalConnections) {_        this.maxTotalConnections = maxTotalConnections__    };the,maximum,number,of,connections;public,void,set,max,total,connections,int,max,total,connections,this,max,total,connections,max,total,connections
HttpEndpoint -> public void setMaxTotalConnections(int maxTotalConnections);1513158838;The maximum number of connections.;public void setMaxTotalConnections(int maxTotalConnections) {_        this.maxTotalConnections = maxTotalConnections__    };the,maximum,number,of,connections;public,void,set,max,total,connections,int,max,total,connections,this,max,total,connections,max,total,connections
HttpEndpoint -> public void setMaxTotalConnections(int maxTotalConnections);1520263875;The maximum number of connections.;public void setMaxTotalConnections(int maxTotalConnections) {_        this.maxTotalConnections = maxTotalConnections__    };the,maximum,number,of,connections;public,void,set,max,total,connections,int,max,total,connections,this,max,total,connections,max,total,connections
HttpEndpoint -> public void setMaxTotalConnections(int maxTotalConnections);1536220089;The maximum number of connections.;public void setMaxTotalConnections(int maxTotalConnections) {_        this.maxTotalConnections = maxTotalConnections__    };the,maximum,number,of,connections;public,void,set,max,total,connections,int,max,total,connections,this,max,total,connections,max,total,connections
HttpEndpoint -> public void setMaxTotalConnections(int maxTotalConnections);1536220089;The maximum number of connections.;public void setMaxTotalConnections(int maxTotalConnections) {_        this.maxTotalConnections = maxTotalConnections__    };the,maximum,number,of,connections;public,void,set,max,total,connections,int,max,total,connections,this,max,total,connections,max,total,connections
HttpEndpoint -> public void setMaxTotalConnections(int maxTotalConnections);1536220090;The maximum number of connections.;public void setMaxTotalConnections(int maxTotalConnections) {_        this.maxTotalConnections = maxTotalConnections__    };the,maximum,number,of,connections;public,void,set,max,total,connections,int,max,total,connections,this,max,total,connections,max,total,connections
HttpEndpoint -> public void setMaxTotalConnections(int maxTotalConnections);1536517284;The maximum number of connections.;public void setMaxTotalConnections(int maxTotalConnections) {_        this.maxTotalConnections = maxTotalConnections__    };the,maximum,number,of,connections;public,void,set,max,total,connections,int,max,total,connections,this,max,total,connections,max,total,connections
HttpEndpoint -> public void setMaxTotalConnections(int maxTotalConnections);1537381175;The maximum number of connections.;public void setMaxTotalConnections(int maxTotalConnections) {_        this.maxTotalConnections = maxTotalConnections__    };the,maximum,number,of,connections;public,void,set,max,total,connections,int,max,total,connections,this,max,total,connections,max,total,connections
HttpEndpoint -> public void setMaxTotalConnections(int maxTotalConnections);1540108158;The maximum number of connections.;public void setMaxTotalConnections(int maxTotalConnections) {_        this.maxTotalConnections = maxTotalConnections__    };the,maximum,number,of,connections;public,void,set,max,total,connections,int,max,total,connections,this,max,total,connections,max,total,connections
HttpEndpoint -> public void setMaxTotalConnections(int maxTotalConnections);1540108160;The maximum number of connections.;public void setMaxTotalConnections(int maxTotalConnections) {_        this.maxTotalConnections = maxTotalConnections__    };the,maximum,number,of,connections;public,void,set,max,total,connections,int,max,total,connections,this,max,total,connections,max,total,connections
HttpEndpoint -> public void setMaxTotalConnections(int maxTotalConnections);1540472504;The maximum number of connections.;public void setMaxTotalConnections(int maxTotalConnections) {_        this.maxTotalConnections = maxTotalConnections__    };the,maximum,number,of,connections;public,void,set,max,total,connections,int,max,total,connections,this,max,total,connections,max,total,connections
HttpEndpoint -> public void setMaxTotalConnections(int maxTotalConnections);1541670803;The maximum number of connections.;public void setMaxTotalConnections(int maxTotalConnections) {_        this.maxTotalConnections = maxTotalConnections__    };the,maximum,number,of,connections;public,void,set,max,total,connections,int,max,total,connections,this,max,total,connections,max,total,connections
HttpEndpoint -> public void setMaxTotalConnections(int maxTotalConnections);1541863162;The maximum number of connections.;public void setMaxTotalConnections(int maxTotalConnections) {_        this.maxTotalConnections = maxTotalConnections__    };the,maximum,number,of,connections;public,void,set,max,total,connections,int,max,total,connections,this,max,total,connections,max,total,connections
HttpEndpoint -> public void setMaxTotalConnections(int maxTotalConnections);1542010001;The maximum number of connections.;public void setMaxTotalConnections(int maxTotalConnections) {_        this.maxTotalConnections = maxTotalConnections__    };the,maximum,number,of,connections;public,void,set,max,total,connections,int,max,total,connections,this,max,total,connections,max,total,connections
HttpEndpoint -> public void setDisableStreamCache(boolean disable);1432657566;Determines whether or not the raw input stream from Jetty is cached or not_(Camel will read the stream into a in memory/overflow to file, Stream caching) cache._By default Camel will cache the Jetty input stream to support reading it multiple times to ensure it Camel_can retrieve all data from the stream. However you can set this option to true when you for example need_to access the raw stream, such as streaming it directly to a file or other persistent store._DefaultHttpBinding will copy the request input stream into a stream cache and put it into message bod_if this option is false to support reading the stream multiple times._If you use Jetty to bridge/proxy an endpoint then consider enabling this option to improve performance,_in case you do not need to read the message payload multiple times.;public void setDisableStreamCache(boolean disable) {_        this.disableStreamCache = disable__    };determines,whether,or,not,the,raw,input,stream,from,jetty,is,cached,or,not,camel,will,read,the,stream,into,a,in,memory,overflow,to,file,stream,caching,cache,by,default,camel,will,cache,the,jetty,input,stream,to,support,reading,it,multiple,times,to,ensure,it,camel,can,retrieve,all,data,from,the,stream,however,you,can,set,this,option,to,true,when,you,for,example,need,to,access,the,raw,stream,such,as,streaming,it,directly,to,a,file,or,other,persistent,store,default,http,binding,will,copy,the,request,input,stream,into,a,stream,cache,and,put,it,into,message,bod,if,this,option,is,false,to,support,reading,the,stream,multiple,times,if,you,use,jetty,to,bridge,proxy,an,endpoint,then,consider,enabling,this,option,to,improve,performance,in,case,you,do,not,need,to,read,the,message,payload,multiple,times;public,void,set,disable,stream,cache,boolean,disable,this,disable,stream,cache,disable
HttpEndpoint -> public void setDisableStreamCache(boolean disable);1434555340;Determines whether or not the raw input stream from Jetty is cached or not_(Camel will read the stream into a in memory/overflow to file, Stream caching) cache._By default Camel will cache the Jetty input stream to support reading it multiple times to ensure it Camel_can retrieve all data from the stream. However you can set this option to true when you for example need_to access the raw stream, such as streaming it directly to a file or other persistent store._DefaultHttpBinding will copy the request input stream into a stream cache and put it into message bod_if this option is false to support reading the stream multiple times._If you use Jetty to bridge/proxy an endpoint then consider enabling this option to improve performance,_in case you do not need to read the message payload multiple times.;public void setDisableStreamCache(boolean disable) {_        this.disableStreamCache = disable__    };determines,whether,or,not,the,raw,input,stream,from,jetty,is,cached,or,not,camel,will,read,the,stream,into,a,in,memory,overflow,to,file,stream,caching,cache,by,default,camel,will,cache,the,jetty,input,stream,to,support,reading,it,multiple,times,to,ensure,it,camel,can,retrieve,all,data,from,the,stream,however,you,can,set,this,option,to,true,when,you,for,example,need,to,access,the,raw,stream,such,as,streaming,it,directly,to,a,file,or,other,persistent,store,default,http,binding,will,copy,the,request,input,stream,into,a,stream,cache,and,put,it,into,message,bod,if,this,option,is,false,to,support,reading,the,stream,multiple,times,if,you,use,jetty,to,bridge,proxy,an,endpoint,then,consider,enabling,this,option,to,improve,performance,in,case,you,do,not,need,to,read,the,message,payload,multiple,times;public,void,set,disable,stream,cache,boolean,disable,this,disable,stream,cache,disable
HttpEndpoint -> public void setDisableStreamCache(boolean disable);1434611635;Determines whether or not the raw input stream from Jetty is cached or not_(Camel will read the stream into a in memory/overflow to file, Stream caching) cache._By default Camel will cache the Jetty input stream to support reading it multiple times to ensure it Camel_can retrieve all data from the stream. However you can set this option to true when you for example need_to access the raw stream, such as streaming it directly to a file or other persistent store._DefaultHttpBinding will copy the request input stream into a stream cache and put it into message bod_if this option is false to support reading the stream multiple times._If you use Jetty to bridge/proxy an endpoint then consider enabling this option to improve performance,_in case you do not need to read the message payload multiple times.;public void setDisableStreamCache(boolean disable) {_        this.disableStreamCache = disable__    };determines,whether,or,not,the,raw,input,stream,from,jetty,is,cached,or,not,camel,will,read,the,stream,into,a,in,memory,overflow,to,file,stream,caching,cache,by,default,camel,will,cache,the,jetty,input,stream,to,support,reading,it,multiple,times,to,ensure,it,camel,can,retrieve,all,data,from,the,stream,however,you,can,set,this,option,to,true,when,you,for,example,need,to,access,the,raw,stream,such,as,streaming,it,directly,to,a,file,or,other,persistent,store,default,http,binding,will,copy,the,request,input,stream,into,a,stream,cache,and,put,it,into,message,bod,if,this,option,is,false,to,support,reading,the,stream,multiple,times,if,you,use,jetty,to,bridge,proxy,an,endpoint,then,consider,enabling,this,option,to,improve,performance,in,case,you,do,not,need,to,read,the,message,payload,multiple,times;public,void,set,disable,stream,cache,boolean,disable,this,disable,stream,cache,disable
HttpEndpoint -> public void setDisableStreamCache(boolean disable);1437130683;Determines whether or not the raw input stream from Jetty is cached or not_(Camel will read the stream into a in memory/overflow to file, Stream caching) cache._By default Camel will cache the Jetty input stream to support reading it multiple times to ensure it Camel_can retrieve all data from the stream. However you can set this option to true when you for example need_to access the raw stream, such as streaming it directly to a file or other persistent store._DefaultHttpBinding will copy the request input stream into a stream cache and put it into message bod_if this option is false to support reading the stream multiple times._If you use Jetty to bridge/proxy an endpoint then consider enabling this option to improve performance,_in case you do not need to read the message payload multiple times.;public void setDisableStreamCache(boolean disable) {_        this.disableStreamCache = disable__    };determines,whether,or,not,the,raw,input,stream,from,jetty,is,cached,or,not,camel,will,read,the,stream,into,a,in,memory,overflow,to,file,stream,caching,cache,by,default,camel,will,cache,the,jetty,input,stream,to,support,reading,it,multiple,times,to,ensure,it,camel,can,retrieve,all,data,from,the,stream,however,you,can,set,this,option,to,true,when,you,for,example,need,to,access,the,raw,stream,such,as,streaming,it,directly,to,a,file,or,other,persistent,store,default,http,binding,will,copy,the,request,input,stream,into,a,stream,cache,and,put,it,into,message,bod,if,this,option,is,false,to,support,reading,the,stream,multiple,times,if,you,use,jetty,to,bridge,proxy,an,endpoint,then,consider,enabling,this,option,to,improve,performance,in,case,you,do,not,need,to,read,the,message,payload,multiple,times;public,void,set,disable,stream,cache,boolean,disable,this,disable,stream,cache,disable
HttpEndpoint -> public void setDisableStreamCache(boolean disable);1437293796;Determines whether or not the raw input stream from Jetty is cached or not_(Camel will read the stream into a in memory/overflow to file, Stream caching) cache._By default Camel will cache the Jetty input stream to support reading it multiple times to ensure it Camel_can retrieve all data from the stream. However you can set this option to true when you for example need_to access the raw stream, such as streaming it directly to a file or other persistent store._DefaultHttpBinding will copy the request input stream into a stream cache and put it into message bod_if this option is false to support reading the stream multiple times._If you use Jetty to bridge/proxy an endpoint then consider enabling this option to improve performance,_in case you do not need to read the message payload multiple times.;public void setDisableStreamCache(boolean disable) {_        this.disableStreamCache = disable__    };determines,whether,or,not,the,raw,input,stream,from,jetty,is,cached,or,not,camel,will,read,the,stream,into,a,in,memory,overflow,to,file,stream,caching,cache,by,default,camel,will,cache,the,jetty,input,stream,to,support,reading,it,multiple,times,to,ensure,it,camel,can,retrieve,all,data,from,the,stream,however,you,can,set,this,option,to,true,when,you,for,example,need,to,access,the,raw,stream,such,as,streaming,it,directly,to,a,file,or,other,persistent,store,default,http,binding,will,copy,the,request,input,stream,into,a,stream,cache,and,put,it,into,message,bod,if,this,option,is,false,to,support,reading,the,stream,multiple,times,if,you,use,jetty,to,bridge,proxy,an,endpoint,then,consider,enabling,this,option,to,improve,performance,in,case,you,do,not,need,to,read,the,message,payload,multiple,times;public,void,set,disable,stream,cache,boolean,disable,this,disable,stream,cache,disable
HttpEndpoint -> public void setDisableStreamCache(boolean disable);1437294058;Determines whether or not the raw input stream from Jetty is cached or not_(Camel will read the stream into a in memory/overflow to file, Stream caching) cache._By default Camel will cache the Jetty input stream to support reading it multiple times to ensure it Camel_can retrieve all data from the stream. However you can set this option to true when you for example need_to access the raw stream, such as streaming it directly to a file or other persistent store._DefaultHttpBinding will copy the request input stream into a stream cache and put it into message bod_if this option is false to support reading the stream multiple times._If you use Jetty to bridge/proxy an endpoint then consider enabling this option to improve performance,_in case you do not need to read the message payload multiple times.;public void setDisableStreamCache(boolean disable) {_        this.disableStreamCache = disable__    };determines,whether,or,not,the,raw,input,stream,from,jetty,is,cached,or,not,camel,will,read,the,stream,into,a,in,memory,overflow,to,file,stream,caching,cache,by,default,camel,will,cache,the,jetty,input,stream,to,support,reading,it,multiple,times,to,ensure,it,camel,can,retrieve,all,data,from,the,stream,however,you,can,set,this,option,to,true,when,you,for,example,need,to,access,the,raw,stream,such,as,streaming,it,directly,to,a,file,or,other,persistent,store,default,http,binding,will,copy,the,request,input,stream,into,a,stream,cache,and,put,it,into,message,bod,if,this,option,is,false,to,support,reading,the,stream,multiple,times,if,you,use,jetty,to,bridge,proxy,an,endpoint,then,consider,enabling,this,option,to,improve,performance,in,case,you,do,not,need,to,read,the,message,payload,multiple,times;public,void,set,disable,stream,cache,boolean,disable,this,disable,stream,cache,disable
HttpEndpoint -> public void setHttpMethodRestrict(String httpMethodRestrict);1432657566;Used to only allow consuming if the HttpMethod matches, such as GET/POST/PUT etc._Multiple methods can be specified separated by comma.;public void setHttpMethodRestrict(String httpMethodRestrict) {_        this.httpMethodRestrict = httpMethodRestrict__    };used,to,only,allow,consuming,if,the,http,method,matches,such,as,get,post,put,etc,multiple,methods,can,be,specified,separated,by,comma;public,void,set,http,method,restrict,string,http,method,restrict,this,http,method,restrict,http,method,restrict
HttpEndpoint -> public void setHttpMethodRestrict(String httpMethodRestrict);1434555340;Used to only allow consuming if the HttpMethod matches, such as GET/POST/PUT etc._Multiple methods can be specified separated by comma.;public void setHttpMethodRestrict(String httpMethodRestrict) {_        this.httpMethodRestrict = httpMethodRestrict__    };used,to,only,allow,consuming,if,the,http,method,matches,such,as,get,post,put,etc,multiple,methods,can,be,specified,separated,by,comma;public,void,set,http,method,restrict,string,http,method,restrict,this,http,method,restrict,http,method,restrict
HttpEndpoint -> public void setHttpMethodRestrict(String httpMethodRestrict);1434611635;Used to only allow consuming if the HttpMethod matches, such as GET/POST/PUT etc._Multiple methods can be specified separated by comma.;public void setHttpMethodRestrict(String httpMethodRestrict) {_        this.httpMethodRestrict = httpMethodRestrict__    };used,to,only,allow,consuming,if,the,http,method,matches,such,as,get,post,put,etc,multiple,methods,can,be,specified,separated,by,comma;public,void,set,http,method,restrict,string,http,method,restrict,this,http,method,restrict,http,method,restrict
HttpEndpoint -> public void setHttpMethodRestrict(String httpMethodRestrict);1437130683;Used to only allow consuming if the HttpMethod matches, such as GET/POST/PUT etc._Multiple methods can be specified separated by comma.;public void setHttpMethodRestrict(String httpMethodRestrict) {_        this.httpMethodRestrict = httpMethodRestrict__    };used,to,only,allow,consuming,if,the,http,method,matches,such,as,get,post,put,etc,multiple,methods,can,be,specified,separated,by,comma;public,void,set,http,method,restrict,string,http,method,restrict,this,http,method,restrict,http,method,restrict
HttpEndpoint -> public void setHttpMethodRestrict(String httpMethodRestrict);1437293796;Used to only allow consuming if the HttpMethod matches, such as GET/POST/PUT etc._Multiple methods can be specified separated by comma.;public void setHttpMethodRestrict(String httpMethodRestrict) {_        this.httpMethodRestrict = httpMethodRestrict__    };used,to,only,allow,consuming,if,the,http,method,matches,such,as,get,post,put,etc,multiple,methods,can,be,specified,separated,by,comma;public,void,set,http,method,restrict,string,http,method,restrict,this,http,method,restrict,http,method,restrict
HttpEndpoint -> public void setHttpMethodRestrict(String httpMethodRestrict);1437294058;Used to only allow consuming if the HttpMethod matches, such as GET/POST/PUT etc._Multiple methods can be specified separated by comma.;public void setHttpMethodRestrict(String httpMethodRestrict) {_        this.httpMethodRestrict = httpMethodRestrict__    };used,to,only,allow,consuming,if,the,http,method,matches,such,as,get,post,put,etc,multiple,methods,can,be,specified,separated,by,comma;public,void,set,http,method,restrict,string,http,method,restrict,this,http,method,restrict,http,method,restrict
HttpEndpoint -> public void setHttpBinding(HttpBinding binding);1296408582;Used from the IntrospectionSupport in HttpComponent._@param binding;public void setHttpBinding(HttpBinding binding) {_        this.binding = binding__    };used,from,the,introspection,support,in,http,component,param,binding;public,void,set,http,binding,http,binding,binding,this,binding,binding
HttpEndpoint -> public void setHttpBinding(HttpBinding binding);1296495624;Used from the IntrospectionSupport in HttpComponent._@param binding;public void setHttpBinding(HttpBinding binding) {_        this.binding = binding__    };used,from,the,introspection,support,in,http,component,param,binding;public,void,set,http,binding,http,binding,binding,this,binding,binding
HttpEndpoint -> public void setHttpBinding(HttpBinding binding);1296567562;Used from the IntrospectionSupport in HttpComponent._@param binding;public void setHttpBinding(HttpBinding binding) {_        this.binding = binding__    };used,from,the,introspection,support,in,http,component,param,binding;public,void,set,http,binding,http,binding,binding,this,binding,binding
HttpEndpoint -> public void setHttpBinding(HttpBinding binding);1297975937;Used from the IntrospectionSupport in HttpComponent._@param binding;public void setHttpBinding(HttpBinding binding) {_        this.binding = binding__    };used,from,the,introspection,support,in,http,component,param,binding;public,void,set,http,binding,http,binding,binding,this,binding,binding
HttpEndpoint -> public void setHttpBinding(HttpBinding binding);1307685726;Used from the IntrospectionSupport in HttpComponent._@param binding;public void setHttpBinding(HttpBinding binding) {_        this.binding = binding__    };used,from,the,introspection,support,in,http,component,param,binding;public,void,set,http,binding,http,binding,binding,this,binding,binding
HttpEndpoint -> public void setHttpBinding(HttpBinding binding);1310024305;Used from the IntrospectionSupport in HttpComponent._@param binding;public void setHttpBinding(HttpBinding binding) {_        this.binding = binding__    };used,from,the,introspection,support,in,http,component,param,binding;public,void,set,http,binding,http,binding,binding,this,binding,binding
HttpEndpoint -> public void setHttpBinding(HttpBinding binding);1310131950;Used from the IntrospectionSupport in HttpComponent._@param binding;public void setHttpBinding(HttpBinding binding) {_        this.binding = binding__    };used,from,the,introspection,support,in,http,component,param,binding;public,void,set,http,binding,http,binding,binding,this,binding,binding
HttpEndpoint -> public void setHttpBinding(HttpBinding binding);1317112374;Used from the IntrospectionSupport in HttpComponent._@param binding;public void setHttpBinding(HttpBinding binding) {_        this.binding = binding__    };used,from,the,introspection,support,in,http,component,param,binding;public,void,set,http,binding,http,binding,binding,this,binding,binding
HttpEndpoint -> public void setHttpBinding(HttpBinding binding);1323694591;Used from the IntrospectionSupport in HttpComponent._@param binding;public void setHttpBinding(HttpBinding binding) {_        this.binding = binding__    };used,from,the,introspection,support,in,http,component,param,binding;public,void,set,http,binding,http,binding,binding,this,binding,binding
HttpEndpoint -> public void setHttpBinding(HttpBinding binding);1327082739;Used from the IntrospectionSupport in HttpComponent._@param binding;public void setHttpBinding(HttpBinding binding) {_        this.binding = binding__    };used,from,the,introspection,support,in,http,component,param,binding;public,void,set,http,binding,http,binding,binding,this,binding,binding
HttpEndpoint -> public void setHttpClientOptions(Map<String, Object> httpClientOptions);1452014713;To configure the HttpClient using the key/values from the Map.;public void setHttpClientOptions(Map<String, Object> httpClientOptions) {_        this.httpClientOptions = httpClientOptions__    };to,configure,the,http,client,using,the,key,values,from,the,map;public,void,set,http,client,options,map,string,object,http,client,options,this,http,client,options,http,client,options
HttpEndpoint -> public void setHttpClientOptions(Map<String, Object> httpClientOptions);1452193091;To configure the HttpClient using the key/values from the Map.;public void setHttpClientOptions(Map<String, Object> httpClientOptions) {_        this.httpClientOptions = httpClientOptions__    };to,configure,the,http,client,using,the,key,values,from,the,map;public,void,set,http,client,options,map,string,object,http,client,options,this,http,client,options,http,client,options
HttpEndpoint -> public void setHttpClientOptions(Map<String, Object> httpClientOptions);1460027071;To configure the HttpClient using the key/values from the Map.;public void setHttpClientOptions(Map<String, Object> httpClientOptions) {_        this.httpClientOptions = httpClientOptions__    };to,configure,the,http,client,using,the,key,values,from,the,map;public,void,set,http,client,options,map,string,object,http,client,options,this,http,client,options,http,client,options
HttpEndpoint -> public void setHttpClientOptions(Map<String, Object> httpClientOptions);1460027071;To configure the HttpClient using the key/values from the Map.;public void setHttpClientOptions(Map<String, Object> httpClientOptions) {_        this.httpClientOptions = httpClientOptions__    };to,configure,the,http,client,using,the,key,values,from,the,map;public,void,set,http,client,options,map,string,object,http,client,options,this,http,client,options,http,client,options
HttpEndpoint -> public void setHttpClientOptions(Map<String, Object> httpClientOptions);1470140271;To configure the HttpClient using the key/values from the Map.;public void setHttpClientOptions(Map<String, Object> httpClientOptions) {_        this.httpClientOptions = httpClientOptions__    };to,configure,the,http,client,using,the,key,values,from,the,map;public,void,set,http,client,options,map,string,object,http,client,options,this,http,client,options,http,client,options
HttpEndpoint -> public void setHttpClientOptions(Map<String, Object> httpClientOptions);1470140412;To configure the HttpClient using the key/values from the Map.;public void setHttpClientOptions(Map<String, Object> httpClientOptions) {_        this.httpClientOptions = httpClientOptions__    };to,configure,the,http,client,using,the,key,values,from,the,map;public,void,set,http,client,options,map,string,object,http,client,options,this,http,client,options,http,client,options
HttpEndpoint -> public void setHttpClientOptions(Map<String, Object> httpClientOptions);1470142365;To configure the HttpClient using the key/values from the Map.;public void setHttpClientOptions(Map<String, Object> httpClientOptions) {_        this.httpClientOptions = httpClientOptions__    };to,configure,the,http,client,using,the,key,values,from,the,map;public,void,set,http,client,options,map,string,object,http,client,options,this,http,client,options,http,client,options
HttpEndpoint -> public void setHttpClientOptions(Map<String, Object> httpClientOptions);1470142377;To configure the HttpClient using the key/values from the Map.;public void setHttpClientOptions(Map<String, Object> httpClientOptions) {_        this.httpClientOptions = httpClientOptions__    };to,configure,the,http,client,using,the,key,values,from,the,map;public,void,set,http,client,options,map,string,object,http,client,options,this,http,client,options,http,client,options
HttpEndpoint -> public void setHttpClientOptions(Map<String, Object> httpClientOptions);1476946116;To configure the HttpClient using the key/values from the Map.;public void setHttpClientOptions(Map<String, Object> httpClientOptions) {_        this.httpClientOptions = httpClientOptions__    };to,configure,the,http,client,using,the,key,values,from,the,map;public,void,set,http,client,options,map,string,object,http,client,options,this,http,client,options,http,client,options
HttpEndpoint -> public void setHttpClientOptions(Map<String, Object> httpClientOptions);1485947385;To configure the HttpClient using the key/values from the Map.;public void setHttpClientOptions(Map<String, Object> httpClientOptions) {_        this.httpClientOptions = httpClientOptions__    };to,configure,the,http,client,using,the,key,values,from,the,map;public,void,set,http,client,options,map,string,object,http,client,options,this,http,client,options,http,client,options
HttpEndpoint -> public void setHttpClientOptions(Map<String, Object> httpClientOptions);1488387150;To configure the HttpClient using the key/values from the Map.;public void setHttpClientOptions(Map<String, Object> httpClientOptions) {_        this.httpClientOptions = httpClientOptions__    };to,configure,the,http,client,using,the,key,values,from,the,map;public,void,set,http,client,options,map,string,object,http,client,options,this,http,client,options,http,client,options
HttpEndpoint -> public void setHttpClientOptions(Map<String, Object> httpClientOptions);1488812702;To configure the HttpClient using the key/values from the Map.;public void setHttpClientOptions(Map<String, Object> httpClientOptions) {_        this.httpClientOptions = httpClientOptions__    };to,configure,the,http,client,using,the,key,values,from,the,map;public,void,set,http,client,options,map,string,object,http,client,options,this,http,client,options,http,client,options
HttpEndpoint -> public void setHttpClientOptions(Map<String, Object> httpClientOptions);1489575227;To configure the HttpClient using the key/values from the Map.;public void setHttpClientOptions(Map<String, Object> httpClientOptions) {_        this.httpClientOptions = httpClientOptions__    };to,configure,the,http,client,using,the,key,values,from,the,map;public,void,set,http,client,options,map,string,object,http,client,options,this,http,client,options,http,client,options
HttpEndpoint -> public void setHttpClientOptions(Map<String, Object> httpClientOptions);1500708950;To configure the HttpClient using the key/values from the Map.;public void setHttpClientOptions(Map<String, Object> httpClientOptions) {_        this.httpClientOptions = httpClientOptions__    };to,configure,the,http,client,using,the,key,values,from,the,map;public,void,set,http,client,options,map,string,object,http,client,options,this,http,client,options,http,client,options
HttpEndpoint -> public void setHttpClientOptions(Map<String, Object> httpClientOptions);1513158838;To configure the HttpClient using the key/values from the Map.;public void setHttpClientOptions(Map<String, Object> httpClientOptions) {_        this.httpClientOptions = httpClientOptions__    };to,configure,the,http,client,using,the,key,values,from,the,map;public,void,set,http,client,options,map,string,object,http,client,options,this,http,client,options,http,client,options
HttpEndpoint -> public void setHttpClientOptions(Map<String, Object> httpClientOptions);1520263875;To configure the HttpClient using the key/values from the Map.;public void setHttpClientOptions(Map<String, Object> httpClientOptions) {_        this.httpClientOptions = httpClientOptions__    };to,configure,the,http,client,using,the,key,values,from,the,map;public,void,set,http,client,options,map,string,object,http,client,options,this,http,client,options,http,client,options
HttpEndpoint -> public void setHttpClientOptions(Map<String, Object> httpClientOptions);1536220089;To configure the HttpClient using the key/values from the Map.;public void setHttpClientOptions(Map<String, Object> httpClientOptions) {_        this.httpClientOptions = httpClientOptions__    };to,configure,the,http,client,using,the,key,values,from,the,map;public,void,set,http,client,options,map,string,object,http,client,options,this,http,client,options,http,client,options
HttpEndpoint -> public void setHttpClientOptions(Map<String, Object> httpClientOptions);1536220089;To configure the HttpClient using the key/values from the Map.;public void setHttpClientOptions(Map<String, Object> httpClientOptions) {_        this.httpClientOptions = httpClientOptions__    };to,configure,the,http,client,using,the,key,values,from,the,map;public,void,set,http,client,options,map,string,object,http,client,options,this,http,client,options,http,client,options
HttpEndpoint -> public void setHttpClientOptions(Map<String, Object> httpClientOptions);1536220090;To configure the HttpClient using the key/values from the Map.;public void setHttpClientOptions(Map<String, Object> httpClientOptions) {_        this.httpClientOptions = httpClientOptions__    };to,configure,the,http,client,using,the,key,values,from,the,map;public,void,set,http,client,options,map,string,object,http,client,options,this,http,client,options,http,client,options
HttpEndpoint -> public void setHttpClientOptions(Map<String, Object> httpClientOptions);1536517284;To configure the HttpClient using the key/values from the Map.;public void setHttpClientOptions(Map<String, Object> httpClientOptions) {_        this.httpClientOptions = httpClientOptions__    };to,configure,the,http,client,using,the,key,values,from,the,map;public,void,set,http,client,options,map,string,object,http,client,options,this,http,client,options,http,client,options
HttpEndpoint -> public void setHttpClientOptions(Map<String, Object> httpClientOptions);1537381175;To configure the HttpClient using the key/values from the Map.;public void setHttpClientOptions(Map<String, Object> httpClientOptions) {_        this.httpClientOptions = httpClientOptions__    };to,configure,the,http,client,using,the,key,values,from,the,map;public,void,set,http,client,options,map,string,object,http,client,options,this,http,client,options,http,client,options
HttpEndpoint -> public void setHttpClientOptions(Map<String, Object> httpClientOptions);1540108158;To configure the HttpClient using the key/values from the Map.;public void setHttpClientOptions(Map<String, Object> httpClientOptions) {_        this.httpClientOptions = httpClientOptions__    };to,configure,the,http,client,using,the,key,values,from,the,map;public,void,set,http,client,options,map,string,object,http,client,options,this,http,client,options,http,client,options
HttpEndpoint -> public void setHttpClientOptions(Map<String, Object> httpClientOptions);1540108160;To configure the HttpClient using the key/values from the Map.;public void setHttpClientOptions(Map<String, Object> httpClientOptions) {_        this.httpClientOptions = httpClientOptions__    };to,configure,the,http,client,using,the,key,values,from,the,map;public,void,set,http,client,options,map,string,object,http,client,options,this,http,client,options,http,client,options
HttpEndpoint -> public void setHttpClientOptions(Map<String, Object> httpClientOptions);1540472504;To configure the HttpClient using the key/values from the Map.;public void setHttpClientOptions(Map<String, Object> httpClientOptions) {_        this.httpClientOptions = httpClientOptions__    };to,configure,the,http,client,using,the,key,values,from,the,map;public,void,set,http,client,options,map,string,object,http,client,options,this,http,client,options,http,client,options
HttpEndpoint -> public void setHttpClientOptions(Map<String, Object> httpClientOptions);1541670803;To configure the HttpClient using the key/values from the Map.;public void setHttpClientOptions(Map<String, Object> httpClientOptions) {_        this.httpClientOptions = httpClientOptions__    };to,configure,the,http,client,using,the,key,values,from,the,map;public,void,set,http,client,options,map,string,object,http,client,options,this,http,client,options,http,client,options
HttpEndpoint -> public void setHttpClientOptions(Map<String, Object> httpClientOptions);1541863162;To configure the HttpClient using the key/values from the Map.;public void setHttpClientOptions(Map<String, Object> httpClientOptions) {_        this.httpClientOptions = httpClientOptions__    };to,configure,the,http,client,using,the,key,values,from,the,map;public,void,set,http,client,options,map,string,object,http,client,options,this,http,client,options,http,client,options
HttpEndpoint -> public void setHttpClientOptions(Map<String, Object> httpClientOptions);1542010001;To configure the HttpClient using the key/values from the Map.;public void setHttpClientOptions(Map<String, Object> httpClientOptions) {_        this.httpClientOptions = httpClientOptions__    };to,configure,the,http,client,using,the,key,values,from,the,map;public,void,set,http,client,options,map,string,object,http,client,options,this,http,client,options,http,client,options
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1432657566;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1434555340;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1434611635;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1437130683;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1437293796;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1437294058;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1437656675;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1447835508;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1447915710;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1451237126;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1451302108;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1452014713;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1452193091;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1460027071;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1460027071;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1470140271;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1470140412;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1470142365;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1470142377;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1476946116;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1485947385;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1488387150;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1488812702;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1489575227;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1500708950;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1513158838;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1520263875;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1536220089;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1536220089;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1536220090;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1536517284;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1537381175;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1540108158;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1540108160;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1540472504;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1541670803;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1541863162;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setClearExpiredCookies(boolean clearExpiredCookies);1542010001;Whether to clear expired cookies before sending the HTTP request._This ensures the cookies store does not keep growing by adding new cookies which is newer removed when they are expired.;public void setClearExpiredCookies(boolean clearExpiredCookies) {_        this.clearExpiredCookies = clearExpiredCookies__    };whether,to,clear,expired,cookies,before,sending,the,http,request,this,ensures,the,cookies,store,does,not,keep,growing,by,adding,new,cookies,which,is,newer,removed,when,they,are,expired;public,void,set,clear,expired,cookies,boolean,clear,expired,cookies,this,clear,expired,cookies,clear,expired,cookies
HttpEndpoint -> public void setEagerCheckContentAvailable(boolean eagerCheckContentAvailable);1437130683;Whether to eager check whether the HTTP requests has content if the content-length header is 0 or not present._This can be turned on in case HTTP clients do not send streamed data.;public void setEagerCheckContentAvailable(boolean eagerCheckContentAvailable) {_        this.eagerCheckContentAvailable = eagerCheckContentAvailable__    };whether,to,eager,check,whether,the,http,requests,has,content,if,the,content,length,header,is,0,or,not,present,this,can,be,turned,on,in,case,http,clients,do,not,send,streamed,data;public,void,set,eager,check,content,available,boolean,eager,check,content,available,this,eager,check,content,available,eager,check,content,available
HttpEndpoint -> public void setEagerCheckContentAvailable(boolean eagerCheckContentAvailable);1437293796;Whether to eager check whether the HTTP requests has content if the content-length header is 0 or not present._This can be turned on in case HTTP clients do not send streamed data.;public void setEagerCheckContentAvailable(boolean eagerCheckContentAvailable) {_        this.eagerCheckContentAvailable = eagerCheckContentAvailable__    };whether,to,eager,check,whether,the,http,requests,has,content,if,the,content,length,header,is,0,or,not,present,this,can,be,turned,on,in,case,http,clients,do,not,send,streamed,data;public,void,set,eager,check,content,available,boolean,eager,check,content,available,this,eager,check,content,available,eager,check,content,available
HttpEndpoint -> public void setEagerCheckContentAvailable(boolean eagerCheckContentAvailable);1437294058;Whether to eager check whether the HTTP requests has content if the content-length header is 0 or not present._This can be turned on in case HTTP clients do not send streamed data.;public void setEagerCheckContentAvailable(boolean eagerCheckContentAvailable) {_        this.eagerCheckContentAvailable = eagerCheckContentAvailable__    };whether,to,eager,check,whether,the,http,requests,has,content,if,the,content,length,header,is,0,or,not,present,this,can,be,turned,on,in,case,http,clients,do,not,send,streamed,data;public,void,set,eager,check,content,available,boolean,eager,check,content,available,this,eager,check,content,available,eager,check,content,available
HttpEndpoint -> public void setConnectTimeout(int connectTimeout);1520263875;Determines the timeout in milliseconds until a connection is established._A timeout value of zero is interpreted as an infinite timeout._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };determines,the,timeout,in,milliseconds,until,a,connection,is,established,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
HttpEndpoint -> public void setConnectTimeout(int connectTimeout);1536220089;Determines the timeout in milliseconds until a connection is established._A timeout value of zero is interpreted as an infinite timeout._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };determines,the,timeout,in,milliseconds,until,a,connection,is,established,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
HttpEndpoint -> public void setConnectTimeout(int connectTimeout);1536220089;Determines the timeout in milliseconds until a connection is established._A timeout value of zero is interpreted as an infinite timeout._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };determines,the,timeout,in,milliseconds,until,a,connection,is,established,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
HttpEndpoint -> public void setConnectTimeout(int connectTimeout);1536220090;Determines the timeout in milliseconds until a connection is established._A timeout value of zero is interpreted as an infinite timeout._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };determines,the,timeout,in,milliseconds,until,a,connection,is,established,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
HttpEndpoint -> public void setConnectTimeout(int connectTimeout);1536517284;Determines the timeout in milliseconds until a connection is established._A timeout value of zero is interpreted as an infinite timeout._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };determines,the,timeout,in,milliseconds,until,a,connection,is,established,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
HttpEndpoint -> public void setConnectTimeout(int connectTimeout);1537381175;Determines the timeout in milliseconds until a connection is established._A timeout value of zero is interpreted as an infinite timeout._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };determines,the,timeout,in,milliseconds,until,a,connection,is,established,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
HttpEndpoint -> public void setConnectTimeout(int connectTimeout);1540108158;Determines the timeout in milliseconds until a connection is established._A timeout value of zero is interpreted as an infinite timeout._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };determines,the,timeout,in,milliseconds,until,a,connection,is,established,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
HttpEndpoint -> public void setConnectTimeout(int connectTimeout);1540108160;Determines the timeout in milliseconds until a connection is established._A timeout value of zero is interpreted as an infinite timeout._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };determines,the,timeout,in,milliseconds,until,a,connection,is,established,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
HttpEndpoint -> public void setConnectTimeout(int connectTimeout);1540472504;Determines the timeout in milliseconds until a connection is established._A timeout value of zero is interpreted as an infinite timeout._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };determines,the,timeout,in,milliseconds,until,a,connection,is,established,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
HttpEndpoint -> public void setConnectTimeout(int connectTimeout);1541670803;Determines the timeout in milliseconds until a connection is established._A timeout value of zero is interpreted as an infinite timeout._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };determines,the,timeout,in,milliseconds,until,a,connection,is,established,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
HttpEndpoint -> public void setConnectTimeout(int connectTimeout);1541863162;Determines the timeout in milliseconds until a connection is established._A timeout value of zero is interpreted as an infinite timeout._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };determines,the,timeout,in,milliseconds,until,a,connection,is,established,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
HttpEndpoint -> public void setConnectTimeout(int connectTimeout);1542010001;Determines the timeout in milliseconds until a connection is established._A timeout value of zero is interpreted as an infinite timeout._<p>_A timeout value of zero is interpreted as an infinite timeout._A negative value is interpreted as undefined (system default)._</p>_<p>_Default: {@code -1}_</p>;public void setConnectTimeout(int connectTimeout) {_        this.connectTimeout = connectTimeout__    };determines,the,timeout,in,milliseconds,until,a,connection,is,established,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,p,a,timeout,value,of,zero,is,interpreted,as,an,infinite,timeout,a,negative,value,is,interpreted,as,undefined,system,default,p,p,default,code,1,p;public,void,set,connect,timeout,int,connect,timeout,this,connect,timeout,connect,timeout
HttpEndpoint -> public HttpParams getClientParams();1270895897;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public HttpParams getClientParams() {_        return clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,params,get,client,params,return,client,params
HttpEndpoint -> public HttpParams getClientParams();1274269216;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public HttpParams getClientParams() {_        return clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,params,get,client,params,return,client,params
HttpEndpoint -> public HttpParams getClientParams();1293443624;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public HttpParams getClientParams() {_        return clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,params,get,client,params,return,client,params
HttpEndpoint -> public HttpParams getClientParams();1296408582;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public HttpParams getClientParams() {_        return clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,params,get,client,params,return,client,params
HttpEndpoint -> public HttpParams getClientParams();1296495624;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public HttpParams getClientParams() {_        return clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,params,get,client,params,return,client,params
HttpEndpoint -> public HttpParams getClientParams();1296567562;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public HttpParams getClientParams() {_        return clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,params,get,client,params,return,client,params
HttpEndpoint -> public HttpParams getClientParams();1297975937;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public HttpParams getClientParams() {_        return clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,params,get,client,params,return,client,params
HttpEndpoint -> public HttpParams getClientParams();1307685726;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public HttpParams getClientParams() {_        return clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,params,get,client,params,return,client,params
HttpEndpoint -> public HttpParams getClientParams();1310024305;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public HttpParams getClientParams() {_        return clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,params,get,client,params,return,client,params
HttpEndpoint -> public HttpParams getClientParams();1310131950;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public HttpParams getClientParams() {_        return clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,params,get,client,params,return,client,params
HttpEndpoint -> public HttpParams getClientParams();1317112374;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public HttpParams getClientParams() {_        return clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,params,get,client,params,return,client,params
HttpEndpoint -> public HttpParams getClientParams();1323694591;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public HttpParams getClientParams() {_        return clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,params,get,client,params,return,client,params
HttpEndpoint -> public HttpParams getClientParams();1327082739;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public HttpParams getClientParams() {_        return clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,params,get,client,params,return,client,params
HttpEndpoint -> public HttpParams getClientParams();1333787762;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public HttpParams getClientParams() {_        return clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,params,get,client,params,return,client,params
HttpEndpoint -> public HttpParams getClientParams();1342106539;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public HttpParams getClientParams() {_        return clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,params,get,client,params,return,client,params
HttpEndpoint -> public HttpParams getClientParams();1344849457;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public HttpParams getClientParams() {_        return clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,params,get,client,params,return,client,params
HttpEndpoint -> public HttpParams getClientParams();1345088231;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public HttpParams getClientParams() {_        return clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,params,get,client,params,return,client,params
HttpEndpoint -> public HttpParams getClientParams();1347436727;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public HttpParams getClientParams() {_        return clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,params,get,client,params,return,client,params
HttpEndpoint -> public HttpParams getClientParams();1347436777;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public HttpParams getClientParams() {_        return clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,params,get,client,params,return,client,params
HttpEndpoint -> public HttpParams getClientParams();1356694393;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public HttpParams getClientParams() {_        return clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,params,get,client,params,return,client,params
HttpEndpoint -> public HttpParams getClientParams();1357140814;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public HttpParams getClientParams() {_        return clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,params,get,client,params,return,client,params
HttpEndpoint -> public HttpParams getClientParams();1366899100;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public HttpParams getClientParams() {_        return clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,params,get,client,params,return,client,params
HttpEndpoint -> public HttpParams getClientParams();1376549254;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public HttpParams getClientParams() {_        return clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,params,get,client,params,return,client,params
HttpEndpoint -> public HttpParams getClientParams();1378206923;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public HttpParams getClientParams() {_        return clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,params,get,client,params,return,client,params
HttpEndpoint -> public HttpParams getClientParams();1379491484;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public HttpParams getClientParams() {_        return clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,params,get,client,params,return,client,params
HttpEndpoint -> public HttpParams getClientParams();1382359231;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public HttpParams getClientParams() {_        return clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,params,get,client,params,return,client,params
HttpEndpoint -> public HttpParams getClientParams();1383138956;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public HttpParams getClientParams() {_        return clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,http,params,get,client,params,return,client,params
HttpEndpoint -> public void setMatchOnUriPrefix(boolean match);1432657566;Whether or not the consumer should try to find a target consumer by matching the URI prefix if no exact match is found._<p/>_See more details at: http://camel.apache.org/how-do-i-let-jetty-match-wildcards.html;public void setMatchOnUriPrefix(boolean match) {_        this.matchOnUriPrefix = match__    };whether,or,not,the,consumer,should,try,to,find,a,target,consumer,by,matching,the,uri,prefix,if,no,exact,match,is,found,p,see,more,details,at,http,camel,apache,org,how,do,i,let,jetty,match,wildcards,html;public,void,set,match,on,uri,prefix,boolean,match,this,match,on,uri,prefix,match
HttpEndpoint -> public void setMatchOnUriPrefix(boolean match);1434555340;Whether or not the consumer should try to find a target consumer by matching the URI prefix if no exact match is found._<p/>_See more details at: http://camel.apache.org/how-do-i-let-jetty-match-wildcards.html;public void setMatchOnUriPrefix(boolean match) {_        this.matchOnUriPrefix = match__    };whether,or,not,the,consumer,should,try,to,find,a,target,consumer,by,matching,the,uri,prefix,if,no,exact,match,is,found,p,see,more,details,at,http,camel,apache,org,how,do,i,let,jetty,match,wildcards,html;public,void,set,match,on,uri,prefix,boolean,match,this,match,on,uri,prefix,match
HttpEndpoint -> public void setMatchOnUriPrefix(boolean match);1434611635;Whether or not the consumer should try to find a target consumer by matching the URI prefix if no exact match is found._<p/>_See more details at: http://camel.apache.org/how-do-i-let-jetty-match-wildcards.html;public void setMatchOnUriPrefix(boolean match) {_        this.matchOnUriPrefix = match__    };whether,or,not,the,consumer,should,try,to,find,a,target,consumer,by,matching,the,uri,prefix,if,no,exact,match,is,found,p,see,more,details,at,http,camel,apache,org,how,do,i,let,jetty,match,wildcards,html;public,void,set,match,on,uri,prefix,boolean,match,this,match,on,uri,prefix,match
HttpEndpoint -> public void setMatchOnUriPrefix(boolean match);1437130683;Whether or not the consumer should try to find a target consumer by matching the URI prefix if no exact match is found._<p/>_See more details at: http://camel.apache.org/how-do-i-let-jetty-match-wildcards.html;public void setMatchOnUriPrefix(boolean match) {_        this.matchOnUriPrefix = match__    };whether,or,not,the,consumer,should,try,to,find,a,target,consumer,by,matching,the,uri,prefix,if,no,exact,match,is,found,p,see,more,details,at,http,camel,apache,org,how,do,i,let,jetty,match,wildcards,html;public,void,set,match,on,uri,prefix,boolean,match,this,match,on,uri,prefix,match
HttpEndpoint -> public void setMatchOnUriPrefix(boolean match);1437293796;Whether or not the consumer should try to find a target consumer by matching the URI prefix if no exact match is found._<p/>_See more details at: http://camel.apache.org/how-do-i-let-jetty-match-wildcards.html;public void setMatchOnUriPrefix(boolean match) {_        this.matchOnUriPrefix = match__    };whether,or,not,the,consumer,should,try,to,find,a,target,consumer,by,matching,the,uri,prefix,if,no,exact,match,is,found,p,see,more,details,at,http,camel,apache,org,how,do,i,let,jetty,match,wildcards,html;public,void,set,match,on,uri,prefix,boolean,match,this,match,on,uri,prefix,match
HttpEndpoint -> public void setMatchOnUriPrefix(boolean match);1437294058;Whether or not the consumer should try to find a target consumer by matching the URI prefix if no exact match is found._<p/>_See more details at: http://camel.apache.org/how-do-i-let-jetty-match-wildcards.html;public void setMatchOnUriPrefix(boolean match) {_        this.matchOnUriPrefix = match__    };whether,or,not,the,consumer,should,try,to,find,a,target,consumer,by,matching,the,uri,prefix,if,no,exact,match,is,found,p,see,more,details,at,http,camel,apache,org,how,do,i,let,jetty,match,wildcards,html;public,void,set,match,on,uri,prefix,boolean,match,this,match,on,uri,prefix,match
HttpEndpoint -> public void setConnectionsPerRoute(int connectionsPerRoute);1488387150;The maximum number of connections per route.;public void setConnectionsPerRoute(int connectionsPerRoute) {_        this.connectionsPerRoute = connectionsPerRoute__    };the,maximum,number,of,connections,per,route;public,void,set,connections,per,route,int,connections,per,route,this,connections,per,route,connections,per,route
HttpEndpoint -> public void setConnectionsPerRoute(int connectionsPerRoute);1488812702;The maximum number of connections per route.;public void setConnectionsPerRoute(int connectionsPerRoute) {_        this.connectionsPerRoute = connectionsPerRoute__    };the,maximum,number,of,connections,per,route;public,void,set,connections,per,route,int,connections,per,route,this,connections,per,route,connections,per,route
HttpEndpoint -> public void setConnectionsPerRoute(int connectionsPerRoute);1489575227;The maximum number of connections per route.;public void setConnectionsPerRoute(int connectionsPerRoute) {_        this.connectionsPerRoute = connectionsPerRoute__    };the,maximum,number,of,connections,per,route;public,void,set,connections,per,route,int,connections,per,route,this,connections,per,route,connections,per,route
HttpEndpoint -> public void setConnectionsPerRoute(int connectionsPerRoute);1500708950;The maximum number of connections per route.;public void setConnectionsPerRoute(int connectionsPerRoute) {_        this.connectionsPerRoute = connectionsPerRoute__    };the,maximum,number,of,connections,per,route;public,void,set,connections,per,route,int,connections,per,route,this,connections,per,route,connections,per,route
HttpEndpoint -> public void setConnectionsPerRoute(int connectionsPerRoute);1513158838;The maximum number of connections per route.;public void setConnectionsPerRoute(int connectionsPerRoute) {_        this.connectionsPerRoute = connectionsPerRoute__    };the,maximum,number,of,connections,per,route;public,void,set,connections,per,route,int,connections,per,route,this,connections,per,route,connections,per,route
HttpEndpoint -> public void setConnectionsPerRoute(int connectionsPerRoute);1520263875;The maximum number of connections per route.;public void setConnectionsPerRoute(int connectionsPerRoute) {_        this.connectionsPerRoute = connectionsPerRoute__    };the,maximum,number,of,connections,per,route;public,void,set,connections,per,route,int,connections,per,route,this,connections,per,route,connections,per,route
HttpEndpoint -> public void setConnectionsPerRoute(int connectionsPerRoute);1536220089;The maximum number of connections per route.;public void setConnectionsPerRoute(int connectionsPerRoute) {_        this.connectionsPerRoute = connectionsPerRoute__    };the,maximum,number,of,connections,per,route;public,void,set,connections,per,route,int,connections,per,route,this,connections,per,route,connections,per,route
HttpEndpoint -> public void setConnectionsPerRoute(int connectionsPerRoute);1536220089;The maximum number of connections per route.;public void setConnectionsPerRoute(int connectionsPerRoute) {_        this.connectionsPerRoute = connectionsPerRoute__    };the,maximum,number,of,connections,per,route;public,void,set,connections,per,route,int,connections,per,route,this,connections,per,route,connections,per,route
HttpEndpoint -> public void setConnectionsPerRoute(int connectionsPerRoute);1536220090;The maximum number of connections per route.;public void setConnectionsPerRoute(int connectionsPerRoute) {_        this.connectionsPerRoute = connectionsPerRoute__    };the,maximum,number,of,connections,per,route;public,void,set,connections,per,route,int,connections,per,route,this,connections,per,route,connections,per,route
HttpEndpoint -> public void setConnectionsPerRoute(int connectionsPerRoute);1536517284;The maximum number of connections per route.;public void setConnectionsPerRoute(int connectionsPerRoute) {_        this.connectionsPerRoute = connectionsPerRoute__    };the,maximum,number,of,connections,per,route;public,void,set,connections,per,route,int,connections,per,route,this,connections,per,route,connections,per,route
HttpEndpoint -> public void setConnectionsPerRoute(int connectionsPerRoute);1537381175;The maximum number of connections per route.;public void setConnectionsPerRoute(int connectionsPerRoute) {_        this.connectionsPerRoute = connectionsPerRoute__    };the,maximum,number,of,connections,per,route;public,void,set,connections,per,route,int,connections,per,route,this,connections,per,route,connections,per,route
HttpEndpoint -> public void setConnectionsPerRoute(int connectionsPerRoute);1540108158;The maximum number of connections per route.;public void setConnectionsPerRoute(int connectionsPerRoute) {_        this.connectionsPerRoute = connectionsPerRoute__    };the,maximum,number,of,connections,per,route;public,void,set,connections,per,route,int,connections,per,route,this,connections,per,route,connections,per,route
HttpEndpoint -> public void setConnectionsPerRoute(int connectionsPerRoute);1540108160;The maximum number of connections per route.;public void setConnectionsPerRoute(int connectionsPerRoute) {_        this.connectionsPerRoute = connectionsPerRoute__    };the,maximum,number,of,connections,per,route;public,void,set,connections,per,route,int,connections,per,route,this,connections,per,route,connections,per,route
HttpEndpoint -> public void setConnectionsPerRoute(int connectionsPerRoute);1540472504;The maximum number of connections per route.;public void setConnectionsPerRoute(int connectionsPerRoute) {_        this.connectionsPerRoute = connectionsPerRoute__    };the,maximum,number,of,connections,per,route;public,void,set,connections,per,route,int,connections,per,route,this,connections,per,route,connections,per,route
HttpEndpoint -> public void setConnectionsPerRoute(int connectionsPerRoute);1541670803;The maximum number of connections per route.;public void setConnectionsPerRoute(int connectionsPerRoute) {_        this.connectionsPerRoute = connectionsPerRoute__    };the,maximum,number,of,connections,per,route;public,void,set,connections,per,route,int,connections,per,route,this,connections,per,route,connections,per,route
HttpEndpoint -> public void setConnectionsPerRoute(int connectionsPerRoute);1541863162;The maximum number of connections per route.;public void setConnectionsPerRoute(int connectionsPerRoute) {_        this.connectionsPerRoute = connectionsPerRoute__    };the,maximum,number,of,connections,per,route;public,void,set,connections,per,route,int,connections,per,route,this,connections,per,route,connections,per,route
HttpEndpoint -> public void setConnectionsPerRoute(int connectionsPerRoute);1542010001;The maximum number of connections per route.;public void setConnectionsPerRoute(int connectionsPerRoute) {_        this.connectionsPerRoute = connectionsPerRoute__    };the,maximum,number,of,connections,per,route;public,void,set,connections,per,route,int,connections,per,route,this,connections,per,route,connections,per,route
HttpEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1432657566;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy
HttpEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1434555340;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy
HttpEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1434611635;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy
HttpEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1437130683;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy
HttpEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1437293796;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy
HttpEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy);1437294058;To use a custom HeaderFilterStrategy to filter header to and from Camel message.;public void setHeaderFilterStrategy(HeaderFilterStrategy headerFilterStrategy) {_        this.headerFilterStrategy = headerFilterStrategy__    };to,use,a,custom,header,filter,strategy,to,filter,header,to,and,from,camel,message;public,void,set,header,filter,strategy,header,filter,strategy,header,filter,strategy,this,header,filter,strategy,header,filter,strategy
HttpEndpoint -> public void setIgnoreResponseBody(boolean ignoreResponseBody);1434555340;If this option is true, The http producer won't read response body and cached the input stream.;public void setIgnoreResponseBody(boolean ignoreResponseBody) {_        this.ignoreResponseBody = ignoreResponseBody__    };if,this,option,is,true,the,http,producer,won,t,read,response,body,and,cached,the,input,stream;public,void,set,ignore,response,body,boolean,ignore,response,body,this,ignore,response,body,ignore,response,body
HttpEndpoint -> public void setIgnoreResponseBody(boolean ignoreResponseBody);1434611635;If this option is true, The http producer won't read response body and cached the input stream.;public void setIgnoreResponseBody(boolean ignoreResponseBody) {_        this.ignoreResponseBody = ignoreResponseBody__    };if,this,option,is,true,the,http,producer,won,t,read,response,body,and,cached,the,input,stream;public,void,set,ignore,response,body,boolean,ignore,response,body,this,ignore,response,body,ignore,response,body
HttpEndpoint -> public void setIgnoreResponseBody(boolean ignoreResponseBody);1437130683;If this option is true, The http producer won't read response body and cached the input stream.;public void setIgnoreResponseBody(boolean ignoreResponseBody) {_        this.ignoreResponseBody = ignoreResponseBody__    };if,this,option,is,true,the,http,producer,won,t,read,response,body,and,cached,the,input,stream;public,void,set,ignore,response,body,boolean,ignore,response,body,this,ignore,response,body,ignore,response,body
HttpEndpoint -> public void setIgnoreResponseBody(boolean ignoreResponseBody);1437293796;If this option is true, The http producer won't read response body and cached the input stream.;public void setIgnoreResponseBody(boolean ignoreResponseBody) {_        this.ignoreResponseBody = ignoreResponseBody__    };if,this,option,is,true,the,http,producer,won,t,read,response,body,and,cached,the,input,stream;public,void,set,ignore,response,body,boolean,ignore,response,body,this,ignore,response,body,ignore,response,body
HttpEndpoint -> public void setIgnoreResponseBody(boolean ignoreResponseBody);1437294058;If this option is true, The http producer won't read response body and cached the input stream.;public void setIgnoreResponseBody(boolean ignoreResponseBody) {_        this.ignoreResponseBody = ignoreResponseBody__    };if,this,option,is,true,the,http,producer,won,t,read,response,body,and,cached,the,input,stream;public,void,set,ignore,response,body,boolean,ignore,response,body,this,ignore,response,body,ignore,response,body
HttpEndpoint -> public void setDeleteWithBody(boolean deleteWithBody);1488812702;Whether the HTTP DELETE should include the message body or not._<p/>_By default HTTP DELETE do not include any HTTP message. However in some rare cases users may need to be able to include the_message body.;public void setDeleteWithBody(boolean deleteWithBody) {_        this.deleteWithBody = deleteWithBody__    };whether,the,http,delete,should,include,the,message,body,or,not,p,by,default,http,delete,do,not,include,any,http,message,however,in,some,rare,cases,users,may,need,to,be,able,to,include,the,message,body;public,void,set,delete,with,body,boolean,delete,with,body,this,delete,with,body,delete,with,body
HttpEndpoint -> public void setDeleteWithBody(boolean deleteWithBody);1489575227;Whether the HTTP DELETE should include the message body or not._<p/>_By default HTTP DELETE do not include any HTTP message. However in some rare cases users may need to be able to include the_message body.;public void setDeleteWithBody(boolean deleteWithBody) {_        this.deleteWithBody = deleteWithBody__    };whether,the,http,delete,should,include,the,message,body,or,not,p,by,default,http,delete,do,not,include,any,http,message,however,in,some,rare,cases,users,may,need,to,be,able,to,include,the,message,body;public,void,set,delete,with,body,boolean,delete,with,body,this,delete,with,body,delete,with,body
HttpEndpoint -> public void setDeleteWithBody(boolean deleteWithBody);1500708950;Whether the HTTP DELETE should include the message body or not._<p/>_By default HTTP DELETE do not include any HTTP message. However in some rare cases users may need to be able to include the_message body.;public void setDeleteWithBody(boolean deleteWithBody) {_        this.deleteWithBody = deleteWithBody__    };whether,the,http,delete,should,include,the,message,body,or,not,p,by,default,http,delete,do,not,include,any,http,message,however,in,some,rare,cases,users,may,need,to,be,able,to,include,the,message,body;public,void,set,delete,with,body,boolean,delete,with,body,this,delete,with,body,delete,with,body
HttpEndpoint -> public void setDeleteWithBody(boolean deleteWithBody);1513158838;Whether the HTTP DELETE should include the message body or not._<p/>_By default HTTP DELETE do not include any HTTP message. However in some rare cases users may need to be able to include the_message body.;public void setDeleteWithBody(boolean deleteWithBody) {_        this.deleteWithBody = deleteWithBody__    };whether,the,http,delete,should,include,the,message,body,or,not,p,by,default,http,delete,do,not,include,any,http,message,however,in,some,rare,cases,users,may,need,to,be,able,to,include,the,message,body;public,void,set,delete,with,body,boolean,delete,with,body,this,delete,with,body,delete,with,body
HttpEndpoint -> public void setDeleteWithBody(boolean deleteWithBody);1520263875;Whether the HTTP DELETE should include the message body or not._<p/>_By default HTTP DELETE do not include any HTTP message. However in some rare cases users may need to be able to include the_message body.;public void setDeleteWithBody(boolean deleteWithBody) {_        this.deleteWithBody = deleteWithBody__    };whether,the,http,delete,should,include,the,message,body,or,not,p,by,default,http,delete,do,not,include,any,http,message,however,in,some,rare,cases,users,may,need,to,be,able,to,include,the,message,body;public,void,set,delete,with,body,boolean,delete,with,body,this,delete,with,body,delete,with,body
HttpEndpoint -> public void setDeleteWithBody(boolean deleteWithBody);1536220089;Whether the HTTP DELETE should include the message body or not._<p/>_By default HTTP DELETE do not include any HTTP message. However in some rare cases users may need to be able to include the_message body.;public void setDeleteWithBody(boolean deleteWithBody) {_        this.deleteWithBody = deleteWithBody__    };whether,the,http,delete,should,include,the,message,body,or,not,p,by,default,http,delete,do,not,include,any,http,message,however,in,some,rare,cases,users,may,need,to,be,able,to,include,the,message,body;public,void,set,delete,with,body,boolean,delete,with,body,this,delete,with,body,delete,with,body
HttpEndpoint -> public void setDeleteWithBody(boolean deleteWithBody);1536220089;Whether the HTTP DELETE should include the message body or not._<p/>_By default HTTP DELETE do not include any HTTP message. However in some rare cases users may need to be able to include the_message body.;public void setDeleteWithBody(boolean deleteWithBody) {_        this.deleteWithBody = deleteWithBody__    };whether,the,http,delete,should,include,the,message,body,or,not,p,by,default,http,delete,do,not,include,any,http,message,however,in,some,rare,cases,users,may,need,to,be,able,to,include,the,message,body;public,void,set,delete,with,body,boolean,delete,with,body,this,delete,with,body,delete,with,body
HttpEndpoint -> public void setDeleteWithBody(boolean deleteWithBody);1536220090;Whether the HTTP DELETE should include the message body or not._<p/>_By default HTTP DELETE do not include any HTTP message. However in some rare cases users may need to be able to include the_message body.;public void setDeleteWithBody(boolean deleteWithBody) {_        this.deleteWithBody = deleteWithBody__    };whether,the,http,delete,should,include,the,message,body,or,not,p,by,default,http,delete,do,not,include,any,http,message,however,in,some,rare,cases,users,may,need,to,be,able,to,include,the,message,body;public,void,set,delete,with,body,boolean,delete,with,body,this,delete,with,body,delete,with,body
HttpEndpoint -> public void setDeleteWithBody(boolean deleteWithBody);1536517284;Whether the HTTP DELETE should include the message body or not._<p/>_By default HTTP DELETE do not include any HTTP message. However in some rare cases users may need to be able to include the_message body.;public void setDeleteWithBody(boolean deleteWithBody) {_        this.deleteWithBody = deleteWithBody__    };whether,the,http,delete,should,include,the,message,body,or,not,p,by,default,http,delete,do,not,include,any,http,message,however,in,some,rare,cases,users,may,need,to,be,able,to,include,the,message,body;public,void,set,delete,with,body,boolean,delete,with,body,this,delete,with,body,delete,with,body
HttpEndpoint -> public void setDeleteWithBody(boolean deleteWithBody);1537381175;Whether the HTTP DELETE should include the message body or not._<p/>_By default HTTP DELETE do not include any HTTP message. However in some rare cases users may need to be able to include the_message body.;public void setDeleteWithBody(boolean deleteWithBody) {_        this.deleteWithBody = deleteWithBody__    };whether,the,http,delete,should,include,the,message,body,or,not,p,by,default,http,delete,do,not,include,any,http,message,however,in,some,rare,cases,users,may,need,to,be,able,to,include,the,message,body;public,void,set,delete,with,body,boolean,delete,with,body,this,delete,with,body,delete,with,body
HttpEndpoint -> public void setDeleteWithBody(boolean deleteWithBody);1540108158;Whether the HTTP DELETE should include the message body or not._<p/>_By default HTTP DELETE do not include any HTTP message. However in some rare cases users may need to be able to include the_message body.;public void setDeleteWithBody(boolean deleteWithBody) {_        this.deleteWithBody = deleteWithBody__    };whether,the,http,delete,should,include,the,message,body,or,not,p,by,default,http,delete,do,not,include,any,http,message,however,in,some,rare,cases,users,may,need,to,be,able,to,include,the,message,body;public,void,set,delete,with,body,boolean,delete,with,body,this,delete,with,body,delete,with,body
HttpEndpoint -> public void setDeleteWithBody(boolean deleteWithBody);1540108160;Whether the HTTP DELETE should include the message body or not._<p/>_By default HTTP DELETE do not include any HTTP message. However in some rare cases users may need to be able to include the_message body.;public void setDeleteWithBody(boolean deleteWithBody) {_        this.deleteWithBody = deleteWithBody__    };whether,the,http,delete,should,include,the,message,body,or,not,p,by,default,http,delete,do,not,include,any,http,message,however,in,some,rare,cases,users,may,need,to,be,able,to,include,the,message,body;public,void,set,delete,with,body,boolean,delete,with,body,this,delete,with,body,delete,with,body
HttpEndpoint -> public void setDeleteWithBody(boolean deleteWithBody);1540472504;Whether the HTTP DELETE should include the message body or not._<p/>_By default HTTP DELETE do not include any HTTP message. However in some rare cases users may need to be able to include the_message body.;public void setDeleteWithBody(boolean deleteWithBody) {_        this.deleteWithBody = deleteWithBody__    };whether,the,http,delete,should,include,the,message,body,or,not,p,by,default,http,delete,do,not,include,any,http,message,however,in,some,rare,cases,users,may,need,to,be,able,to,include,the,message,body;public,void,set,delete,with,body,boolean,delete,with,body,this,delete,with,body,delete,with,body
HttpEndpoint -> public void setDeleteWithBody(boolean deleteWithBody);1541670803;Whether the HTTP DELETE should include the message body or not._<p/>_By default HTTP DELETE do not include any HTTP message. However in some rare cases users may need to be able to include the_message body.;public void setDeleteWithBody(boolean deleteWithBody) {_        this.deleteWithBody = deleteWithBody__    };whether,the,http,delete,should,include,the,message,body,or,not,p,by,default,http,delete,do,not,include,any,http,message,however,in,some,rare,cases,users,may,need,to,be,able,to,include,the,message,body;public,void,set,delete,with,body,boolean,delete,with,body,this,delete,with,body,delete,with,body
HttpEndpoint -> public void setDeleteWithBody(boolean deleteWithBody);1541863162;Whether the HTTP DELETE should include the message body or not._<p/>_By default HTTP DELETE do not include any HTTP message. However in some rare cases users may need to be able to include the_message body.;public void setDeleteWithBody(boolean deleteWithBody) {_        this.deleteWithBody = deleteWithBody__    };whether,the,http,delete,should,include,the,message,body,or,not,p,by,default,http,delete,do,not,include,any,http,message,however,in,some,rare,cases,users,may,need,to,be,able,to,include,the,message,body;public,void,set,delete,with,body,boolean,delete,with,body,this,delete,with,body,delete,with,body
HttpEndpoint -> public void setDeleteWithBody(boolean deleteWithBody);1542010001;Whether the HTTP DELETE should include the message body or not._<p/>_By default HTTP DELETE do not include any HTTP message. However in some rare cases users may need to be able to include the_message body.;public void setDeleteWithBody(boolean deleteWithBody) {_        this.deleteWithBody = deleteWithBody__    };whether,the,http,delete,should,include,the,message,body,or,not,p,by,default,http,delete,do,not,include,any,http,message,however,in,some,rare,cases,users,may,need,to,be,able,to,include,the,message,body;public,void,set,delete,with,body,boolean,delete,with,body,this,delete,with,body,delete,with,body
HttpEndpoint -> protected HttpClient createHttpClient();1270895897;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientParams, "clientParams")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        HttpClient answer = new DefaultHttpClient(clientConnectionManager, getClientParams())___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperties().get("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperties().get("http.proxyPort"))) {_            String host = getCamelContext().getProperties().get("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperties().get("http.proxyPort"))__            if (LOG.isDebugEnabled()) {_                LOG.debug("CamelContext properties http.proxyHost and http.proxyPort detected. Using http proxy host: "_                        + host + " port: " + port)__            }_            HttpHost proxy = new HttpHost(host, port)__            answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy)__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(answer)__        }__        if (LOG.isDebugEnabled()) {_            LOG.debug("Created HttpClient " + answer)__        }_        return answer__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,params,client,params,object,helper,not,null,client,connection,manager,http,connection,manager,http,client,answer,new,default,http,client,client,connection,manager,get,client,params,if,object,helper,is,not,empty,get,camel,context,get,properties,get,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,properties,get,http,proxy,port,string,host,get,camel,context,get,properties,get,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,properties,get,http,proxy,port,if,log,is,debug,enabled,log,debug,camel,context,properties,http,proxy,host,and,http,proxy,port,detected,using,http,proxy,host,host,port,port,http,host,proxy,new,http,host,host,port,answer,get,params,set,parameter,conn,route,pnames,proxy,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,answer,if,log,is,debug,enabled,log,debug,created,http,client,answer,return,answer
HttpEndpoint -> protected HttpClient createHttpClient();1274269216;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientParams, "clientParams")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        HttpClient answer = new DefaultHttpClient(clientConnectionManager, getClientParams())___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperties().get("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperties().get("http.proxyPort"))) {_            String host = getCamelContext().getProperties().get("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperties().get("http.proxyPort"))__            if (LOG.isDebugEnabled()) {_                LOG.debug("CamelContext properties http.proxyHost and http.proxyPort detected. Using http proxy host: "_                        + host + " port: " + port)__            }_            HttpHost proxy = new HttpHost(host, port)__            answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy)__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(answer)__        }__        if (LOG.isDebugEnabled()) {_            LOG.debug("Created HttpClient " + answer)__        }_        return answer__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,params,client,params,object,helper,not,null,client,connection,manager,http,connection,manager,http,client,answer,new,default,http,client,client,connection,manager,get,client,params,if,object,helper,is,not,empty,get,camel,context,get,properties,get,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,properties,get,http,proxy,port,string,host,get,camel,context,get,properties,get,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,properties,get,http,proxy,port,if,log,is,debug,enabled,log,debug,camel,context,properties,http,proxy,host,and,http,proxy,port,detected,using,http,proxy,host,host,port,port,http,host,proxy,new,http,host,host,port,answer,get,params,set,parameter,conn,route,pnames,proxy,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,answer,if,log,is,debug,enabled,log,debug,created,http,client,answer,return,answer
HttpEndpoint -> protected HttpClient createHttpClient();1293443624;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientParams, "clientParams")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        HttpClient answer = new DefaultHttpClient(clientConnectionManager, getClientParams())___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperties().get("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperties().get("http.proxyPort"))) {_            String host = getCamelContext().getProperties().get("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperties().get("http.proxyPort"))__            if (LOG.isDebugEnabled()) {_                LOG.debug("CamelContext properties http.proxyHost and http.proxyPort detected. Using http proxy host: "_                        + host + " port: " + port)__            }_            HttpHost proxy = new HttpHost(host, port)__            answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy)__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(answer)__        }__        if (LOG.isDebugEnabled()) {_            LOG.debug("Created HttpClient " + answer)__        }_        return answer__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,params,client,params,object,helper,not,null,client,connection,manager,http,connection,manager,http,client,answer,new,default,http,client,client,connection,manager,get,client,params,if,object,helper,is,not,empty,get,camel,context,get,properties,get,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,properties,get,http,proxy,port,string,host,get,camel,context,get,properties,get,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,properties,get,http,proxy,port,if,log,is,debug,enabled,log,debug,camel,context,properties,http,proxy,host,and,http,proxy,port,detected,using,http,proxy,host,host,port,port,http,host,proxy,new,http,host,host,port,answer,get,params,set,parameter,conn,route,pnames,proxy,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,answer,if,log,is,debug,enabled,log,debug,created,http,client,answer,return,answer
HttpEndpoint -> protected HttpClient createHttpClient();1296408582;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientParams, "clientParams")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        HttpClient answer = new DefaultHttpClient(clientConnectionManager, getClientParams())___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperties().get("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperties().get("http.proxyPort"))) {_            String host = getCamelContext().getProperties().get("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperties().get("http.proxyPort"))__            if (LOG.isDebugEnabled()) {_                LOG.debug("CamelContext properties http.proxyHost and http.proxyPort detected. Using http proxy host: "_                        + host + " port: " + port)__            }_            HttpHost proxy = new HttpHost(host, port)__            answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy)__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(answer)__        }__        if (LOG.isDebugEnabled()) {_            LOG.debug("Created HttpClient " + answer)__        }_        return answer__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,params,client,params,object,helper,not,null,client,connection,manager,http,connection,manager,http,client,answer,new,default,http,client,client,connection,manager,get,client,params,if,object,helper,is,not,empty,get,camel,context,get,properties,get,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,properties,get,http,proxy,port,string,host,get,camel,context,get,properties,get,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,properties,get,http,proxy,port,if,log,is,debug,enabled,log,debug,camel,context,properties,http,proxy,host,and,http,proxy,port,detected,using,http,proxy,host,host,port,port,http,host,proxy,new,http,host,host,port,answer,get,params,set,parameter,conn,route,pnames,proxy,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,answer,if,log,is,debug,enabled,log,debug,created,http,client,answer,return,answer
HttpEndpoint -> protected HttpClient createHttpClient();1296495624;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientParams, "clientParams")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        HttpClient answer = new DefaultHttpClient(clientConnectionManager, getClientParams())___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperties().get("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperties().get("http.proxyPort"))) {_            String host = getCamelContext().getProperties().get("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperties().get("http.proxyPort"))__            if (LOG.isDebugEnabled()) {_                LOG.debug("CamelContext properties http.proxyHost and http.proxyPort detected. Using http proxy host: "_                        + host + " port: " + port)__            }_            HttpHost proxy = new HttpHost(host, port)__            answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy)__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(answer)__        }__        if (LOG.isDebugEnabled()) {_            LOG.debug("Created HttpClient " + answer)__        }_        return answer__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,params,client,params,object,helper,not,null,client,connection,manager,http,connection,manager,http,client,answer,new,default,http,client,client,connection,manager,get,client,params,if,object,helper,is,not,empty,get,camel,context,get,properties,get,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,properties,get,http,proxy,port,string,host,get,camel,context,get,properties,get,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,properties,get,http,proxy,port,if,log,is,debug,enabled,log,debug,camel,context,properties,http,proxy,host,and,http,proxy,port,detected,using,http,proxy,host,host,port,port,http,host,proxy,new,http,host,host,port,answer,get,params,set,parameter,conn,route,pnames,proxy,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,answer,if,log,is,debug,enabled,log,debug,created,http,client,answer,return,answer
HttpEndpoint -> protected HttpClient createHttpClient();1296567562;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientParams, "clientParams")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        HttpClient answer = new DefaultHttpClient(clientConnectionManager, getClientParams())___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperties().get("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperties().get("http.proxyPort"))) {_            String host = getCamelContext().getProperties().get("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperties().get("http.proxyPort"))__            if (LOG.isDebugEnabled()) {_                LOG.debug("CamelContext properties http.proxyHost and http.proxyPort detected. Using http proxy host: "_                        + host + " port: " + port)__            }_            HttpHost proxy = new HttpHost(host, port)__            answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy)__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(answer)__        }__        if (LOG.isDebugEnabled()) {_            LOG.debug("Created HttpClient " + answer)__        }_        return answer__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,params,client,params,object,helper,not,null,client,connection,manager,http,connection,manager,http,client,answer,new,default,http,client,client,connection,manager,get,client,params,if,object,helper,is,not,empty,get,camel,context,get,properties,get,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,properties,get,http,proxy,port,string,host,get,camel,context,get,properties,get,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,properties,get,http,proxy,port,if,log,is,debug,enabled,log,debug,camel,context,properties,http,proxy,host,and,http,proxy,port,detected,using,http,proxy,host,host,port,port,http,host,proxy,new,http,host,host,port,answer,get,params,set,parameter,conn,route,pnames,proxy,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,answer,if,log,is,debug,enabled,log,debug,created,http,client,answer,return,answer
HttpEndpoint -> protected HttpClient createHttpClient();1297975937;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientParams, "clientParams")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        HttpClient answer = new DefaultHttpClient(clientConnectionManager, getClientParams())___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperties().get("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperties().get("http.proxyPort"))) {_            String host = getCamelContext().getProperties().get("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperties().get("http.proxyPort"))__            if (LOG.isDebugEnabled()) {_                LOG.debug("CamelContext properties http.proxyHost and http.proxyPort detected. Using http proxy host: "_                        + host + " port: " + port)__            }_            HttpHost proxy = new HttpHost(host, port)__            answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy)__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(answer)__        }__        if (LOG.isDebugEnabled()) {_            LOG.debug("Created HttpClient " + answer)__        }_        return answer__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,params,client,params,object,helper,not,null,client,connection,manager,http,connection,manager,http,client,answer,new,default,http,client,client,connection,manager,get,client,params,if,object,helper,is,not,empty,get,camel,context,get,properties,get,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,properties,get,http,proxy,port,string,host,get,camel,context,get,properties,get,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,properties,get,http,proxy,port,if,log,is,debug,enabled,log,debug,camel,context,properties,http,proxy,host,and,http,proxy,port,detected,using,http,proxy,host,host,port,port,http,host,proxy,new,http,host,host,port,answer,get,params,set,parameter,conn,route,pnames,proxy,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,answer,if,log,is,debug,enabled,log,debug,created,http,client,answer,return,answer
HttpEndpoint -> protected HttpClient createHttpClient();1307685726;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientParams, "clientParams")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        HttpClient answer = new DefaultHttpClient(clientConnectionManager, getClientParams())___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperties().get("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperties().get("http.proxyPort"))) {_            String host = getCamelContext().getProperties().get("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperties().get("http.proxyPort"))__            LOG.debug("CamelContext properties http.proxyHost and http.proxyPort detected. Using http proxy host: {} port: {}", host, port)__            HttpHost proxy = new HttpHost(host, port)__            answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy)__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(answer)__        }__        LOG.debug("Created HttpClient {}", answer)__        return answer__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,params,client,params,object,helper,not,null,client,connection,manager,http,connection,manager,http,client,answer,new,default,http,client,client,connection,manager,get,client,params,if,object,helper,is,not,empty,get,camel,context,get,properties,get,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,properties,get,http,proxy,port,string,host,get,camel,context,get,properties,get,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,properties,get,http,proxy,port,log,debug,camel,context,properties,http,proxy,host,and,http,proxy,port,detected,using,http,proxy,host,port,host,port,http,host,proxy,new,http,host,host,port,answer,get,params,set,parameter,conn,route,pnames,proxy,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,answer,log,debug,created,http,client,answer,return,answer
HttpEndpoint -> protected HttpClient createHttpClient();1310024305;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientParams, "clientParams")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        HttpClient answer = new DefaultHttpClient(clientConnectionManager, getClientParams())___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperties().get("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperties().get("http.proxyPort"))) {_            String host = getCamelContext().getProperties().get("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperties().get("http.proxyPort"))__            String scheme = getCamelContext().getProperties().get("http.proxyScheme")___            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy)__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(answer)__        }__        LOG.debug("Created HttpClient {}", answer)__        return answer__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,params,client,params,object,helper,not,null,client,connection,manager,http,connection,manager,http,client,answer,new,default,http,client,client,connection,manager,get,client,params,if,object,helper,is,not,empty,get,camel,context,get,properties,get,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,properties,get,http,proxy,port,string,host,get,camel,context,get,properties,get,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,properties,get,http,proxy,port,string,scheme,get,camel,context,get,properties,get,http,proxy,scheme,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,answer,get,params,set,parameter,conn,route,pnames,proxy,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,answer,log,debug,created,http,client,answer,return,answer
HttpEndpoint -> protected HttpClient createHttpClient();1310131950;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientParams, "clientParams")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        HttpClient answer = new DefaultHttpClient(clientConnectionManager, getClientParams())___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperties().get("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperties().get("http.proxyPort"))) {_            String host = getCamelContext().getProperties().get("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperties().get("http.proxyPort"))__            String scheme = getCamelContext().getProperties().get("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https4" : "http4"__            }__            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy)__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(answer)__        }__        LOG.debug("Created HttpClient {}", answer)__        return answer__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,params,client,params,object,helper,not,null,client,connection,manager,http,connection,manager,http,client,answer,new,default,http,client,client,connection,manager,get,client,params,if,object,helper,is,not,empty,get,camel,context,get,properties,get,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,properties,get,http,proxy,port,string,host,get,camel,context,get,properties,get,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,properties,get,http,proxy,port,string,scheme,get,camel,context,get,properties,get,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https4,http4,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,answer,get,params,set,parameter,conn,route,pnames,proxy,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,answer,log,debug,created,http,client,answer,return,answer
HttpEndpoint -> protected HttpClient createHttpClient();1317112374;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientParams, "clientParams")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        HttpClient answer = new DefaultHttpClient(clientConnectionManager, getClientParams())___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperties().get("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperties().get("http.proxyPort"))) {_            String host = getCamelContext().getProperties().get("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperties().get("http.proxyPort"))__            String scheme = getCamelContext().getProperties().get("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https4" : "http4"__            }__            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy)__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(answer)__        }__        LOG.debug("Created HttpClient {}", answer)__        return answer__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,params,client,params,object,helper,not,null,client,connection,manager,http,connection,manager,http,client,answer,new,default,http,client,client,connection,manager,get,client,params,if,object,helper,is,not,empty,get,camel,context,get,properties,get,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,properties,get,http,proxy,port,string,host,get,camel,context,get,properties,get,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,properties,get,http,proxy,port,string,scheme,get,camel,context,get,properties,get,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https4,http4,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,answer,get,params,set,parameter,conn,route,pnames,proxy,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,answer,log,debug,created,http,client,answer,return,answer
HttpEndpoint -> protected HttpClient createHttpClient();1323694591;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientParams, "clientParams")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        HttpClient answer = new DefaultHttpClient(clientConnectionManager, getClientParams())___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperties().get("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperties().get("http.proxyPort"))) {_            String host = getCamelContext().getProperties().get("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperties().get("http.proxyPort"))__            String scheme = getCamelContext().getProperties().get("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https4" : "http4"__            }__            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy)__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(answer)__        }__        LOG.debug("Created HttpClient {}", answer)__        return answer__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,params,client,params,object,helper,not,null,client,connection,manager,http,connection,manager,http,client,answer,new,default,http,client,client,connection,manager,get,client,params,if,object,helper,is,not,empty,get,camel,context,get,properties,get,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,properties,get,http,proxy,port,string,host,get,camel,context,get,properties,get,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,properties,get,http,proxy,port,string,scheme,get,camel,context,get,properties,get,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https4,http4,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,answer,get,params,set,parameter,conn,route,pnames,proxy,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,answer,log,debug,created,http,client,answer,return,answer
HttpEndpoint -> protected HttpClient createHttpClient();1327082739;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientParams, "clientParams")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        HttpClient answer = new DefaultHttpClient(clientConnectionManager, getClientParams())___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperties().get("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperties().get("http.proxyPort"))) {_            String host = getCamelContext().getProperties().get("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperties().get("http.proxyPort"))__            String scheme = getCamelContext().getProperties().get("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https4" : "http4"__            }__            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy)__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(answer)__        }__        LOG.debug("Created HttpClient {}", answer)__        return answer__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,params,client,params,object,helper,not,null,client,connection,manager,http,connection,manager,http,client,answer,new,default,http,client,client,connection,manager,get,client,params,if,object,helper,is,not,empty,get,camel,context,get,properties,get,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,properties,get,http,proxy,port,string,host,get,camel,context,get,properties,get,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,properties,get,http,proxy,port,string,scheme,get,camel,context,get,properties,get,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https4,http4,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,answer,get,params,set,parameter,conn,route,pnames,proxy,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,answer,log,debug,created,http,client,answer,return,answer
HttpEndpoint -> protected HttpClient createHttpClient();1333787762;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientParams, "clientParams")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        HttpClient answer = new DefaultHttpClient(clientConnectionManager, getClientParams())___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperties().get("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperties().get("http.proxyPort"))) {_            String host = getCamelContext().getProperties().get("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperties().get("http.proxyPort"))__            String scheme = getCamelContext().getProperties().get("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https4" : "http4"__            }__            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy)__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(answer)__        }__        LOG.debug("Created HttpClient {}", answer)__        return answer__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,params,client,params,object,helper,not,null,client,connection,manager,http,connection,manager,http,client,answer,new,default,http,client,client,connection,manager,get,client,params,if,object,helper,is,not,empty,get,camel,context,get,properties,get,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,properties,get,http,proxy,port,string,host,get,camel,context,get,properties,get,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,properties,get,http,proxy,port,string,scheme,get,camel,context,get,properties,get,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https4,http4,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,answer,get,params,set,parameter,conn,route,pnames,proxy,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,answer,log,debug,created,http,client,answer,return,answer
HttpEndpoint -> protected HttpClient createHttpClient();1342106539;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientParams, "clientParams")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        HttpClient answer = new DefaultHttpClient(clientConnectionManager, getClientParams())___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https4" : "http4"__            }__            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy)__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(answer)__        }__        LOG.debug("Created HttpClient {}", answer)__        return answer__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,params,client,params,object,helper,not,null,client,connection,manager,http,connection,manager,http,client,answer,new,default,http,client,client,connection,manager,get,client,params,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https4,http4,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,answer,get,params,set,parameter,conn,route,pnames,proxy,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,answer,log,debug,created,http,client,answer,return,answer
HttpEndpoint -> protected HttpClient createHttpClient();1344849457;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientParams, "clientParams")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        HttpClient answer = new DefaultHttpClient(clientConnectionManager, getClientParams())___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https4" : "http4"__            }__            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy)__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(answer)__        }__        LOG.debug("Created HttpClient {}", answer)__        return answer__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,params,client,params,object,helper,not,null,client,connection,manager,http,connection,manager,http,client,answer,new,default,http,client,client,connection,manager,get,client,params,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https4,http4,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,answer,get,params,set,parameter,conn,route,pnames,proxy,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,answer,log,debug,created,http,client,answer,return,answer
HttpEndpoint -> protected HttpClient createHttpClient();1345088231;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientParams, "clientParams")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        HttpClient answer = new DefaultHttpClient(clientConnectionManager, getClientParams())___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https4" : "http4"__            }__            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy)__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(answer)__        }__        LOG.debug("Created HttpClient {}", answer)__        return answer__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,params,client,params,object,helper,not,null,client,connection,manager,http,connection,manager,http,client,answer,new,default,http,client,client,connection,manager,get,client,params,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https4,http4,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,answer,get,params,set,parameter,conn,route,pnames,proxy,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,answer,log,debug,created,http,client,answer,return,answer
HttpEndpoint -> protected HttpClient createHttpClient();1347436727;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientParams, "clientParams")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        HttpClient answer = new DefaultHttpClient(clientConnectionManager, getClientParams())___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https4" : "http4"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            try {_                component.registerPort(HttpHelper.isSecureConnection(scheme), component.getX509HostnameVerifier(), port, component.getSslContextParameters())__            } catch (Exception ex) {_                throw new RuntimeCamelException(ex)__            }_            HttpHost proxy = new HttpHost(host, port, scheme)__            answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy)__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(answer)__        }__        LOG.debug("Created HttpClient {}", answer)__        return answer__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,params,client,params,object,helper,not,null,client,connection,manager,http,connection,manager,http,client,answer,new,default,http,client,client,connection,manager,get,client,params,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https4,http4,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,try,component,register,port,http,helper,is,secure,connection,scheme,component,get,x509hostname,verifier,port,component,get,ssl,context,parameters,catch,exception,ex,throw,new,runtime,camel,exception,ex,http,host,proxy,new,http,host,host,port,scheme,answer,get,params,set,parameter,conn,route,pnames,proxy,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,answer,log,debug,created,http,client,answer,return,answer
HttpEndpoint -> protected HttpClient createHttpClient();1347436777;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientParams, "clientParams")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        HttpClient answer = new DefaultHttpClient(clientConnectionManager, getClientParams())___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            try {_                component.registerPort(HttpHelper.isSecureConnection(scheme), component.getX509HostnameVerifier(), port, component.getSslContextParameters())__            } catch (Exception ex) {_                throw new RuntimeCamelException(ex)__            }_            HttpHost proxy = new HttpHost(host, port, scheme)__            answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy)__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(answer)__        }__        LOG.debug("Created HttpClient {}", answer)__        return answer__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,params,client,params,object,helper,not,null,client,connection,manager,http,connection,manager,http,client,answer,new,default,http,client,client,connection,manager,get,client,params,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,try,component,register,port,http,helper,is,secure,connection,scheme,component,get,x509hostname,verifier,port,component,get,ssl,context,parameters,catch,exception,ex,throw,new,runtime,camel,exception,ex,http,host,proxy,new,http,host,host,port,scheme,answer,get,params,set,parameter,conn,route,pnames,proxy,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,answer,log,debug,created,http,client,answer,return,answer
HttpEndpoint -> protected HttpClient createHttpClient();1356694393;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientParams, "clientParams")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        HttpClient answer = new DefaultHttpClient(clientConnectionManager, getClientParams())___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            try {_                component.registerPort(HttpHelper.isSecureConnection(scheme), component.getX509HostnameVerifier(), port, component.getSslContextParameters())__            } catch (Exception ex) {_                throw new RuntimeCamelException(ex)__            }_            HttpHost proxy = new HttpHost(host, port, scheme)__            answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy)__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(answer)__        }__        LOG.debug("Created HttpClient {}", answer)__        return answer__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,params,client,params,object,helper,not,null,client,connection,manager,http,connection,manager,http,client,answer,new,default,http,client,client,connection,manager,get,client,params,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,try,component,register,port,http,helper,is,secure,connection,scheme,component,get,x509hostname,verifier,port,component,get,ssl,context,parameters,catch,exception,ex,throw,new,runtime,camel,exception,ex,http,host,proxy,new,http,host,host,port,scheme,answer,get,params,set,parameter,conn,route,pnames,proxy,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,answer,log,debug,created,http,client,answer,return,answer
HttpEndpoint -> protected HttpClient createHttpClient();1357140814;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientParams, "clientParams")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        HttpClient answer = new DefaultHttpClient(clientConnectionManager, getClientParams())___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            try {_                component.registerPort(HttpHelper.isSecureConnection(scheme), component.getX509HostnameVerifier(), port, component.getSslContextParameters())__            } catch (Exception ex) {_                throw new RuntimeCamelException(ex)__            }_            HttpHost proxy = new HttpHost(host, port, scheme)__            answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy)__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(answer)__        }__        LOG.debug("Created HttpClient {}", answer)__        return answer__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,params,client,params,object,helper,not,null,client,connection,manager,http,connection,manager,http,client,answer,new,default,http,client,client,connection,manager,get,client,params,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,try,component,register,port,http,helper,is,secure,connection,scheme,component,get,x509hostname,verifier,port,component,get,ssl,context,parameters,catch,exception,ex,throw,new,runtime,camel,exception,ex,http,host,proxy,new,http,host,host,port,scheme,answer,get,params,set,parameter,conn,route,pnames,proxy,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,answer,log,debug,created,http,client,answer,return,answer
HttpEndpoint -> protected HttpClient createHttpClient();1366899100;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientParams, "clientParams")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        HttpClient answer = new DefaultHttpClient(clientConnectionManager, getClientParams())___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            try {_                component.registerPort(HttpHelper.isSecureConnection(scheme), component.getX509HostnameVerifier(), port, component.getSslContextParameters())__            } catch (Exception ex) {_                throw new RuntimeCamelException(ex)__            }_            HttpHost proxy = new HttpHost(host, port, scheme)__            answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy)__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(answer)__        }__        LOG.debug("Created HttpClient {}", answer)__        return answer__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,params,client,params,object,helper,not,null,client,connection,manager,http,connection,manager,http,client,answer,new,default,http,client,client,connection,manager,get,client,params,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,try,component,register,port,http,helper,is,secure,connection,scheme,component,get,x509hostname,verifier,port,component,get,ssl,context,parameters,catch,exception,ex,throw,new,runtime,camel,exception,ex,http,host,proxy,new,http,host,host,port,scheme,answer,get,params,set,parameter,conn,route,pnames,proxy,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,answer,log,debug,created,http,client,answer,return,answer
HttpEndpoint -> protected HttpClient createHttpClient();1376549254;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientParams, "clientParams")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        HttpClient answer = new DefaultHttpClient(clientConnectionManager, getClientParams())___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            try {_                component.registerPort(HttpHelper.isSecureConnection(scheme), component.getX509HostnameVerifier(), port, component.getSslContextParameters())__            } catch (Exception ex) {_                throw new RuntimeCamelException(ex)__            }_            HttpHost proxy = new HttpHost(host, port, scheme)__            answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy)__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(answer)__        }__        LOG.debug("Created HttpClient {}", answer)__        return answer__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,params,client,params,object,helper,not,null,client,connection,manager,http,connection,manager,http,client,answer,new,default,http,client,client,connection,manager,get,client,params,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,try,component,register,port,http,helper,is,secure,connection,scheme,component,get,x509hostname,verifier,port,component,get,ssl,context,parameters,catch,exception,ex,throw,new,runtime,camel,exception,ex,http,host,proxy,new,http,host,host,port,scheme,answer,get,params,set,parameter,conn,route,pnames,proxy,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,answer,log,debug,created,http,client,answer,return,answer
HttpEndpoint -> protected HttpClient createHttpClient();1378206923;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientParams, "clientParams")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        DefaultHttpClient answer = new DefaultHttpClient(clientConnectionManager, getClientParams())__        if (cookieStore != null) {_            answer.setCookieStore(cookieStore)__        }__        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            try {_                component.registerPort(HttpHelper.isSecureConnection(scheme), component.getX509HostnameVerifier(), port, component.getSslContextParameters())__            } catch (Exception ex) {_                throw new RuntimeCamelException(ex)__            }_            HttpHost proxy = new HttpHost(host, port, scheme)__            answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy)__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(answer)__        }__        if (isBridgeEndpoint()) {_            _            answer.setCookieStore(new NoopCookieStore())__        }__        LOG.debug("Created HttpClient {}", answer)__        return answer__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,params,client,params,object,helper,not,null,client,connection,manager,http,connection,manager,default,http,client,answer,new,default,http,client,client,connection,manager,get,client,params,if,cookie,store,null,answer,set,cookie,store,cookie,store,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,try,component,register,port,http,helper,is,secure,connection,scheme,component,get,x509hostname,verifier,port,component,get,ssl,context,parameters,catch,exception,ex,throw,new,runtime,camel,exception,ex,http,host,proxy,new,http,host,host,port,scheme,answer,get,params,set,parameter,conn,route,pnames,proxy,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,answer,if,is,bridge,endpoint,answer,set,cookie,store,new,noop,cookie,store,log,debug,created,http,client,answer,return,answer
HttpEndpoint -> protected HttpClient createHttpClient();1379491484;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientParams, "clientParams")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        DefaultHttpClient answer = new DefaultHttpClient(clientConnectionManager, getClientParams())__        if (cookieStore != null) {_            answer.setCookieStore(cookieStore)__        }__        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            try {_                component.registerPort(HttpHelper.isSecureConnection(scheme), component.getX509HostnameVerifier(), port, component.getSslContextParameters())__            } catch (Exception ex) {_                throw new RuntimeCamelException(ex)__            }_            HttpHost proxy = new HttpHost(host, port, scheme)__            answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy)__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(answer)__        }__        if (isBridgeEndpoint()) {_            _            answer.setCookieStore(new NoopCookieStore())__        }__        LOG.debug("Created HttpClient {}", answer)__        return answer__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,params,client,params,object,helper,not,null,client,connection,manager,http,connection,manager,default,http,client,answer,new,default,http,client,client,connection,manager,get,client,params,if,cookie,store,null,answer,set,cookie,store,cookie,store,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,try,component,register,port,http,helper,is,secure,connection,scheme,component,get,x509hostname,verifier,port,component,get,ssl,context,parameters,catch,exception,ex,throw,new,runtime,camel,exception,ex,http,host,proxy,new,http,host,host,port,scheme,answer,get,params,set,parameter,conn,route,pnames,proxy,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,answer,if,is,bridge,endpoint,answer,set,cookie,store,new,noop,cookie,store,log,debug,created,http,client,answer,return,answer
HttpEndpoint -> protected HttpClient createHttpClient();1382359231;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientParams, "clientParams")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        DefaultHttpClient answer = new DefaultHttpClient(clientConnectionManager, getClientParams())__        if (cookieStore != null) {_            answer.setCookieStore(cookieStore)__        }__        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            try {_                component.registerPort(HttpHelper.isSecureConnection(scheme), component.getX509HostnameVerifier(), port, component.getSslContextParameters())__            } catch (Exception ex) {_                throw new RuntimeCamelException(ex)__            }_            HttpHost proxy = new HttpHost(host, port, scheme)__            answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy)__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(answer)__        }__        if (isBridgeEndpoint()) {_            _            answer.setCookieStore(new NoopCookieStore())__        }__        LOG.debug("Created HttpClient {}", answer)__        return answer__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,params,client,params,object,helper,not,null,client,connection,manager,http,connection,manager,default,http,client,answer,new,default,http,client,client,connection,manager,get,client,params,if,cookie,store,null,answer,set,cookie,store,cookie,store,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,try,component,register,port,http,helper,is,secure,connection,scheme,component,get,x509hostname,verifier,port,component,get,ssl,context,parameters,catch,exception,ex,throw,new,runtime,camel,exception,ex,http,host,proxy,new,http,host,host,port,scheme,answer,get,params,set,parameter,conn,route,pnames,proxy,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,answer,if,is,bridge,endpoint,answer,set,cookie,store,new,noop,cookie,store,log,debug,created,http,client,answer,return,answer
HttpEndpoint -> protected HttpClient createHttpClient();1383138956;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientParams, "clientParams")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        DefaultHttpClient answer = new DefaultHttpClient(clientConnectionManager, getClientParams())__        if (cookieStore != null) {_            answer.setCookieStore(cookieStore)__        }__        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            try {_                component.registerPort(HttpHelper.isSecureConnection(scheme), component.getX509HostnameVerifier(), port, component.getSslContextParameters())__            } catch (Exception ex) {_                throw new RuntimeCamelException(ex)__            }_            HttpHost proxy = new HttpHost(host, port, scheme)__            answer.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxy)__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(answer)__        }__        if (isBridgeEndpoint()) {_            _            answer.setCookieStore(new NoopCookieStore())__        }__        LOG.debug("Created HttpClient {}", answer)__        return answer__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,params,client,params,object,helper,not,null,client,connection,manager,http,connection,manager,default,http,client,answer,new,default,http,client,client,connection,manager,get,client,params,if,cookie,store,null,answer,set,cookie,store,cookie,store,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,try,component,register,port,http,helper,is,secure,connection,scheme,component,get,x509hostname,verifier,port,component,get,ssl,context,parameters,catch,exception,ex,throw,new,runtime,camel,exception,ex,http,host,proxy,new,http,host,host,port,scheme,answer,get,params,set,parameter,conn,route,pnames,proxy,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,answer,if,is,bridge,endpoint,answer,set,cookie,store,new,noop,cookie,store,log,debug,created,http,client,answer,return,answer
HttpEndpoint -> protected HttpClient createHttpClient();1388443957;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            clientBuilder.setProxy(proxy)__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1405374721;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            clientBuilder.setProxy(proxy)__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1416561667;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            clientBuilder.setProxy(proxy)__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1416567967;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            clientBuilder.setProxy(proxy)__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1423750790;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            clientBuilder.setProxy(proxy)__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1423911493;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            clientBuilder.setProxy(proxy)__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1425142361;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            clientBuilder.setProxy(proxy)__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1427402378;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            clientBuilder.setProxy(proxy)__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1430295992;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            clientBuilder.setProxy(proxy)__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1432657566;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            clientBuilder.setProxy(proxy)__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1434555340;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            clientBuilder.setProxy(proxy)__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1434611635;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            clientBuilder.setProxy(proxy)__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1437130683;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            clientBuilder.setProxy(proxy)__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1437293796;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            clientBuilder.setProxy(proxy)__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1437294058;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            clientBuilder.setProxy(proxy)__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1437656675;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)___        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            clientBuilder.setProxy(proxy)__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1447835508;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getClientConnectionManager() == getComponent().getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            clientBuilder.setProxy(proxy)__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,client,connection,manager,get,component,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1447915710;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getComponent() != null && getComponent().getClientConnectionManager() == getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            clientBuilder.setProxy(proxy)__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,component,null,get,component,get,client,connection,manager,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1451237126;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getComponent() != null && getComponent().getClientConnectionManager() == getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            clientBuilder.setProxy(proxy)__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,component,null,get,component,get,client,connection,manager,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1451302108;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getComponent() != null && getComponent().getClientConnectionManager() == getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            clientBuilder.setProxy(proxy)__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,component,null,get,component,get,client,connection,manager,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1452014713;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getComponent() != null && getComponent().getClientConnectionManager() == getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            clientBuilder.setProxy(proxy)__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,component,null,get,component,get,client,connection,manager,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1452193091;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getComponent() != null && getComponent().getClientConnectionManager() == getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        _        if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_            String host = getCamelContext().getProperty("http.proxyHost")__            int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__            String scheme = getCamelContext().getProperty("http.proxyScheme")__            _            if (scheme == null) {_                scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__            }_            LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__            HttpHost proxy = new HttpHost(host, port, scheme)__            clientBuilder.setProxy(proxy)__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,component,null,get,component,get,client,connection,manager,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1460027071;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getComponent() != null && getComponent().getClientConnectionManager() == getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        if (!useSystemProperties) {_            _            if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_                String host = getCamelContext().getProperty("http.proxyHost")__                int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__                String scheme = getCamelContext().getProperty("http.proxyScheme")__                _                if (scheme == null) {_                    scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__                }_                LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__                HttpHost proxy = new HttpHost(host, port, scheme)__                clientBuilder.setProxy(proxy)__            }_        } else {_            clientBuilder.useSystemProperties()__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,component,null,get,component,get,client,connection,manager,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,use,system,properties,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,else,client,builder,use,system,properties,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1460027071;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getComponent() != null && getComponent().getClientConnectionManager() == getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        if (!useSystemProperties) {_            _            if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_                String host = getCamelContext().getProperty("http.proxyHost")__                int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__                String scheme = getCamelContext().getProperty("http.proxyScheme")__                _                if (scheme == null) {_                    scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__                }_                LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__                HttpHost proxy = new HttpHost(host, port, scheme)__                clientBuilder.setProxy(proxy)__            }_        } else {_            clientBuilder.useSystemProperties()__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,component,null,get,component,get,client,connection,manager,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,use,system,properties,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,else,client,builder,use,system,properties,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1470140271;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getComponent() != null && getComponent().getClientConnectionManager() == getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        if (!useSystemProperties) {_            _            if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_                String host = getCamelContext().getProperty("http.proxyHost")__                int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__                String scheme = getCamelContext().getProperty("http.proxyScheme")__                _                if (scheme == null) {_                    scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__                }_                LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__                HttpHost proxy = new HttpHost(host, port, scheme)__                clientBuilder.setProxy(proxy)__            } else {_            	if (ObjectHelper.isNotEmpty(getProxyHost()) && ObjectHelper.isNotEmpty(getProxyPort())) {_                    String scheme = getProtocol()__                    _                    if (scheme == null) {_                        scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__                    }_                    HttpHost proxy = new HttpHost(getProxyHost(), getProxyPort(), scheme)__                    clientBuilder.setProxy(proxy)__            	}_            }_        } else {_            clientBuilder.useSystemProperties()__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,component,null,get,component,get,client,connection,manager,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,use,system,properties,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,else,if,object,helper,is,not,empty,get,proxy,host,object,helper,is,not,empty,get,proxy,port,string,scheme,get,protocol,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,http,host,proxy,new,http,host,get,proxy,host,get,proxy,port,scheme,client,builder,set,proxy,proxy,else,client,builder,use,system,properties,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1470140412;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getComponent() != null && getComponent().getClientConnectionManager() == getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        if (!useSystemProperties) {_            _            if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_                String host = getCamelContext().getProperty("http.proxyHost")__                int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__                String scheme = getCamelContext().getProperty("http.proxyScheme")__                _                if (scheme == null) {_                    scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__                }_                LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__                HttpHost proxy = new HttpHost(host, port, scheme)__                clientBuilder.setProxy(proxy)__            } else {_                if (ObjectHelper.isNotEmpty(getProxyHost()) && ObjectHelper.isNotEmpty(getProxyPort())) {_                    String scheme = getProtocol()__                    _                    if (scheme == null) {_                        scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__                    }_                    HttpHost proxy = new HttpHost(getProxyHost(), getProxyPort(), scheme)__                    clientBuilder.setProxy(proxy)__                }_            }_        } else {_            clientBuilder.useSystemProperties()__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,component,null,get,component,get,client,connection,manager,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,use,system,properties,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,else,if,object,helper,is,not,empty,get,proxy,host,object,helper,is,not,empty,get,proxy,port,string,scheme,get,protocol,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,http,host,proxy,new,http,host,get,proxy,host,get,proxy,port,scheme,client,builder,set,proxy,proxy,else,client,builder,use,system,properties,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1470142365;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getComponent() != null && getComponent().getClientConnectionManager() == getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        if (!useSystemProperties) {_            _            if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_                String host = getCamelContext().getProperty("http.proxyHost")__                int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__                String scheme = getCamelContext().getProperty("http.proxyScheme")__                _                if (scheme == null) {_                    scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__                }_                LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__                HttpHost proxy = new HttpHost(host, port, scheme)__                clientBuilder.setProxy(proxy)__            } else {_            	if (ObjectHelper.isNotEmpty(getProxyHost()) && ObjectHelper.isNotEmpty(getProxyPort())) {_                    String scheme = getProtocol()__                    _                    if (scheme == null) {_                        scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__                    }_                    HttpHost proxy = new HttpHost(getProxyHost(), getProxyPort(), scheme)__                    clientBuilder.setProxy(proxy)__            	}_            }_        } else {_            clientBuilder.useSystemProperties()__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,component,null,get,component,get,client,connection,manager,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,use,system,properties,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,else,if,object,helper,is,not,empty,get,proxy,host,object,helper,is,not,empty,get,proxy,port,string,scheme,get,protocol,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,http,host,proxy,new,http,host,get,proxy,host,get,proxy,port,scheme,client,builder,set,proxy,proxy,else,client,builder,use,system,properties,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1470142377;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getComponent() != null && getComponent().getClientConnectionManager() == getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        if (!useSystemProperties) {_            _            if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_                String host = getCamelContext().getProperty("http.proxyHost")__                int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__                String scheme = getCamelContext().getProperty("http.proxyScheme")__                _                if (scheme == null) {_                    scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__                }_                LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__                HttpHost proxy = new HttpHost(host, port, scheme)__                clientBuilder.setProxy(proxy)__            }_        } else {_            clientBuilder.useSystemProperties()__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,component,null,get,component,get,client,connection,manager,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,use,system,properties,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,else,client,builder,use,system,properties,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1476946116;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getComponent() != null && getComponent().getClientConnectionManager() == getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        if (!useSystemProperties) {_            _            if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_                String host = getCamelContext().getProperty("http.proxyHost")__                int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__                String scheme = getCamelContext().getProperty("http.proxyScheme")__                _                if (scheme == null) {_                    scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__                }_                LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__                HttpHost proxy = new HttpHost(host, port, scheme)__                clientBuilder.setProxy(proxy)__            }_        } else {_            clientBuilder.useSystemProperties()__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,component,null,get,component,get,client,connection,manager,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,use,system,properties,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,else,client,builder,use,system,properties,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1485947385;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getComponent() != null && getComponent().getClientConnectionManager() == getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        if (!useSystemProperties) {_            _            if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_                String host = getCamelContext().getProperty("http.proxyHost")__                int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__                String scheme = getCamelContext().getProperty("http.proxyScheme")__                _                if (scheme == null) {_                    scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__                }_                LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__                HttpHost proxy = new HttpHost(host, port, scheme)__                clientBuilder.setProxy(proxy)__            }_        } else {_            clientBuilder.useSystemProperties()__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,component,null,get,component,get,client,connection,manager,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,use,system,properties,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,else,client,builder,use,system,properties,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1488387150;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getComponent() != null && getComponent().getClientConnectionManager() == getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        if (!useSystemProperties) {_            _            if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_                String host = getCamelContext().getProperty("http.proxyHost")__                int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__                String scheme = getCamelContext().getProperty("http.proxyScheme")__                _                if (scheme == null) {_                    scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__                }_                LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__                HttpHost proxy = new HttpHost(host, port, scheme)__                clientBuilder.setProxy(proxy)__            }_        } else {_            clientBuilder.useSystemProperties()__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,component,null,get,component,get,client,connection,manager,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,use,system,properties,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,else,client,builder,use,system,properties,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1488812702;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getComponent() != null && getComponent().getClientConnectionManager() == getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        if (!useSystemProperties) {_            _            if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_                String host = getCamelContext().getProperty("http.proxyHost")__                int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__                String scheme = getCamelContext().getProperty("http.proxyScheme")__                _                if (scheme == null) {_                    scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__                }_                LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__                HttpHost proxy = new HttpHost(host, port, scheme)__                clientBuilder.setProxy(proxy)__            }_        } else {_            clientBuilder.useSystemProperties()__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,component,null,get,component,get,client,connection,manager,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,use,system,properties,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,else,client,builder,use,system,properties,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1489575227;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getComponent() != null && getComponent().getClientConnectionManager() == getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        if (!useSystemProperties) {_            _            if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_                String host = getCamelContext().getProperty("http.proxyHost")__                int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__                String scheme = getCamelContext().getProperty("http.proxyScheme")__                _                if (scheme == null) {_                    scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__                }_                LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__                HttpHost proxy = new HttpHost(host, port, scheme)__                clientBuilder.setProxy(proxy)__            }_        } else {_            clientBuilder.useSystemProperties()__        }_        _        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,component,null,get,component,get,client,connection,manager,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,use,system,properties,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,else,client,builder,use,system,properties,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1500708950;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getComponent() != null && getComponent().getClientConnectionManager() == getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        if (!useSystemProperties) {_            _            if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_                String host = getCamelContext().getProperty("http.proxyHost")__                int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__                String scheme = getCamelContext().getProperty("http.proxyScheme")__                _                if (scheme == null) {_                    scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__                }_                LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__                HttpHost proxy = new HttpHost(host, port, scheme)__                clientBuilder.setProxy(proxy)__            }_        } else {_            clientBuilder.useSystemProperties()__        }__        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,component,null,get,component,get,client,connection,manager,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,use,system,properties,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,else,client,builder,use,system,properties,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1513158838;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getComponent() != null && getComponent().getClientConnectionManager() == getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        if (!useSystemProperties) {_            _            if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_                String host = getCamelContext().getProperty("http.proxyHost")__                int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__                String scheme = getCamelContext().getProperty("http.proxyScheme")__                _                if (scheme == null) {_                    scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__                }_                LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__                HttpHost proxy = new HttpHost(host, port, scheme)__                clientBuilder.setProxy(proxy)__            }_        } else {_            clientBuilder.useSystemProperties()__        }__        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,component,null,get,component,get,client,connection,manager,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,use,system,properties,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,else,client,builder,use,system,properties,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1520263875;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getComponent() != null && getComponent().getClientConnectionManager() == getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        if (!useSystemProperties) {_            _            if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_                String host = getCamelContext().getProperty("http.proxyHost")__                int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__                String scheme = getCamelContext().getProperty("http.proxyScheme")__                _                if (scheme == null) {_                    scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__                }_                LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__                HttpHost proxy = new HttpHost(host, port, scheme)__                clientBuilder.setProxy(proxy)__            }_        } else {_            clientBuilder.useSystemProperties()__        }__        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,component,null,get,component,get,client,connection,manager,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,use,system,properties,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,else,client,builder,use,system,properties,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1536220089;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getComponent() != null && getComponent().getClientConnectionManager() == getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        if (!useSystemProperties) {_            _            if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_                String host = getCamelContext().getProperty("http.proxyHost")__                int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__                String scheme = getCamelContext().getProperty("http.proxyScheme")__                _                if (scheme == null) {_                    scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__                }_                LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__                HttpHost proxy = new HttpHost(host, port, scheme)__                clientBuilder.setProxy(proxy)__            }_        } else {_            clientBuilder.useSystemProperties()__        }__        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,component,null,get,component,get,client,connection,manager,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,use,system,properties,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,else,client,builder,use,system,properties,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1536220089;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getComponent() != null && getComponent().getClientConnectionManager() == getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        if (!useSystemProperties) {_            _            if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_                String host = getCamelContext().getProperty("http.proxyHost")__                int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__                String scheme = getCamelContext().getProperty("http.proxyScheme")__                _                if (scheme == null) {_                    scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__                }_                LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__                HttpHost proxy = new HttpHost(host, port, scheme)__                clientBuilder.setProxy(proxy)__            }_        } else {_            clientBuilder.useSystemProperties()__        }__        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,component,null,get,component,get,client,connection,manager,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,use,system,properties,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,else,client,builder,use,system,properties,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1536220090;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getComponent() != null && getComponent().getClientConnectionManager() == getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        if (!useSystemProperties) {_            _            if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_                String host = getCamelContext().getProperty("http.proxyHost")__                int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__                String scheme = getCamelContext().getProperty("http.proxyScheme")__                _                if (scheme == null) {_                    scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__                }_                LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", new Object[]{host, port, scheme})__                HttpHost proxy = new HttpHost(host, port, scheme)__                clientBuilder.setProxy(proxy)__            }_        } else {_            clientBuilder.useSystemProperties()__        }__        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,component,null,get,component,get,client,connection,manager,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,use,system,properties,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,new,object,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,else,client,builder,use,system,properties,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1536517284;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getComponent() != null && getComponent().getClientConnectionManager() == getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        if (!useSystemProperties) {_            _            if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_                String host = getCamelContext().getProperty("http.proxyHost")__                int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__                String scheme = getCamelContext().getProperty("http.proxyScheme")__                _                if (scheme == null) {_                    scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__                }_                LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", host, port, scheme)__                HttpHost proxy = new HttpHost(host, port, scheme)__                clientBuilder.setProxy(proxy)__            }_        } else {_            clientBuilder.useSystemProperties()__        }__        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,component,null,get,component,get,client,connection,manager,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,use,system,properties,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,else,client,builder,use,system,properties,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1537381175;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getComponent() != null && getComponent().getClientConnectionManager() == getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        if (!useSystemProperties) {_            _            if (ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getProperty("http.proxyPort"))) {_                String host = getCamelContext().getProperty("http.proxyHost")__                int port = Integer.parseInt(getCamelContext().getProperty("http.proxyPort"))__                String scheme = getCamelContext().getProperty("http.proxyScheme")__                _                if (scheme == null) {_                    scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__                }_                LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", host, port, scheme)__                HttpHost proxy = new HttpHost(host, port, scheme)__                clientBuilder.setProxy(proxy)__            }_        } else {_            clientBuilder.useSystemProperties()__        }__        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,component,null,get,component,get,client,connection,manager,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,use,system,properties,if,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,property,http,proxy,port,string,host,get,camel,context,get,property,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,property,http,proxy,port,string,scheme,get,camel,context,get,property,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,else,client,builder,use,system,properties,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1540108158;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getComponent() != null && getComponent().getClientConnectionManager() == getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        if (!useSystemProperties) {_            _            if (ObjectHelper.isNotEmpty(getCamelContext().getGlobalOption("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getGlobalOption("http.proxyPort"))) {_                String host = getCamelContext().getGlobalOption("http.proxyHost")__                int port = Integer.parseInt(getCamelContext().getGlobalOption("http.proxyPort"))__                String scheme = getCamelContext().getGlobalOption("http.proxyScheme")__                _                if (scheme == null) {_                    scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__                }_                LOG.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", host, port, scheme)__                HttpHost proxy = new HttpHost(host, port, scheme)__                clientBuilder.setProxy(proxy)__            }_        } else {_            clientBuilder.useSystemProperties()__        }__        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        LOG.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,component,null,get,component,get,client,connection,manager,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,use,system,properties,if,object,helper,is,not,empty,get,camel,context,get,global,option,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,global,option,http,proxy,port,string,host,get,camel,context,get,global,option,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,global,option,http,proxy,port,string,scheme,get,camel,context,get,global,option,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,else,client,builder,use,system,properties,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1540108160;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getComponent() != null && getComponent().getClientConnectionManager() == getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        if (!useSystemProperties) {_            _            if (ObjectHelper.isNotEmpty(getCamelContext().getGlobalOption("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getGlobalOption("http.proxyPort"))) {_                String host = getCamelContext().getGlobalOption("http.proxyHost")__                int port = Integer.parseInt(getCamelContext().getGlobalOption("http.proxyPort"))__                String scheme = getCamelContext().getGlobalOption("http.proxyScheme")__                _                if (scheme == null) {_                    scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__                }_                log.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", host, port, scheme)__                HttpHost proxy = new HttpHost(host, port, scheme)__                clientBuilder.setProxy(proxy)__            }_        } else {_            clientBuilder.useSystemProperties()__        }__        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        log.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,component,null,get,component,get,client,connection,manager,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,use,system,properties,if,object,helper,is,not,empty,get,camel,context,get,global,option,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,global,option,http,proxy,port,string,host,get,camel,context,get,global,option,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,global,option,http,proxy,port,string,scheme,get,camel,context,get,global,option,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,else,client,builder,use,system,properties,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1540472504;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getComponent() != null && getComponent().getClientConnectionManager() == getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        if (!useSystemProperties) {_            _            if (ObjectHelper.isNotEmpty(getCamelContext().getGlobalOption("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getGlobalOption("http.proxyPort"))) {_                String host = getCamelContext().getGlobalOption("http.proxyHost")__                int port = Integer.parseInt(getCamelContext().getGlobalOption("http.proxyPort"))__                String scheme = getCamelContext().getGlobalOption("http.proxyScheme")__                _                if (scheme == null) {_                    scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__                }_                log.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", host, port, scheme)__                HttpHost proxy = new HttpHost(host, port, scheme)__                clientBuilder.setProxy(proxy)__            }_        } else {_            clientBuilder.useSystemProperties()__        }__        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        log.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,component,null,get,component,get,client,connection,manager,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,use,system,properties,if,object,helper,is,not,empty,get,camel,context,get,global,option,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,global,option,http,proxy,port,string,host,get,camel,context,get,global,option,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,global,option,http,proxy,port,string,scheme,get,camel,context,get,global,option,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,else,client,builder,use,system,properties,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1541670803;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getComponent() != null && getComponent().getClientConnectionManager() == getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        if (!useSystemProperties) {_            _            if (ObjectHelper.isNotEmpty(getCamelContext().getGlobalOption("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getGlobalOption("http.proxyPort"))) {_                String host = getCamelContext().getGlobalOption("http.proxyHost")__                int port = Integer.parseInt(getCamelContext().getGlobalOption("http.proxyPort"))__                String scheme = getCamelContext().getGlobalOption("http.proxyScheme")__                _                if (scheme == null) {_                    scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__                }_                log.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", host, port, scheme)__                HttpHost proxy = new HttpHost(host, port, scheme)__                clientBuilder.setProxy(proxy)__            }_        } else {_            clientBuilder.useSystemProperties()__        }__        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        log.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,component,null,get,component,get,client,connection,manager,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,use,system,properties,if,object,helper,is,not,empty,get,camel,context,get,global,option,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,global,option,http,proxy,port,string,host,get,camel,context,get,global,option,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,global,option,http,proxy,port,string,scheme,get,camel,context,get,global,option,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,else,client,builder,use,system,properties,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1541863162;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getComponent() != null && getComponent().getClientConnectionManager() == getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        if (!useSystemProperties) {_            _            if (ObjectHelper.isNotEmpty(getCamelContext().getGlobalOption("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getGlobalOption("http.proxyPort"))) {_                String host = getCamelContext().getGlobalOption("http.proxyHost")__                int port = Integer.parseInt(getCamelContext().getGlobalOption("http.proxyPort"))__                String scheme = getCamelContext().getGlobalOption("http.proxyScheme")__                _                if (scheme == null) {_                    scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__                }_                log.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", host, port, scheme)__                HttpHost proxy = new HttpHost(host, port, scheme)__                clientBuilder.setProxy(proxy)__            }_        } else {_            clientBuilder.useSystemProperties()__        }__        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        log.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,component,null,get,component,get,client,connection,manager,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,use,system,properties,if,object,helper,is,not,empty,get,camel,context,get,global,option,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,global,option,http,proxy,port,string,host,get,camel,context,get,global,option,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,global,option,http,proxy,port,string,scheme,get,camel,context,get,global,option,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,else,client,builder,use,system,properties,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> protected HttpClient createHttpClient();1542010001;Factory method to create a new {@link HttpClient} instance_<p/>_Producers and consumers should use the {@link #getHttpClient()} method instead.;protected HttpClient createHttpClient() {_        ObjectHelper.notNull(clientBuilder, "httpClientBuilder")__        ObjectHelper.notNull(clientConnectionManager, "httpConnectionManager")___        _        clientBuilder.setDefaultCookieStore(cookieStore)__        _        clientBuilder.setConnectionManager(clientConnectionManager)__        if (getComponent() != null && getComponent().getClientConnectionManager() == getClientConnectionManager()) {_            clientBuilder.setConnectionManagerShared(true)__        }__        if (!useSystemProperties) {_            _            if (ObjectHelper.isNotEmpty(getCamelContext().getGlobalOption("http.proxyHost")) && ObjectHelper.isNotEmpty(getCamelContext().getGlobalOption("http.proxyPort"))) {_                String host = getCamelContext().getGlobalOption("http.proxyHost")__                int port = Integer.parseInt(getCamelContext().getGlobalOption("http.proxyPort"))__                String scheme = getCamelContext().getGlobalOption("http.proxyScheme")__                _                if (scheme == null) {_                    scheme = HttpHelper.isSecureConnection(getEndpointUri()) ? "https" : "http"__                }_                log.debug("CamelContext properties http.proxyHost, http.proxyPort, and http.proxyScheme detected. Using http proxy host: {} port: {} scheme: {}", host, port, scheme)__                HttpHost proxy = new HttpHost(host, port, scheme)__                clientBuilder.setProxy(proxy)__            }_        } else {_            clientBuilder.useSystemProperties()__        }__        if (isAuthenticationPreemptive()) {_            _            clientBuilder.addInterceptorFirst(new PreemptiveAuthInterceptor())__        }__        HttpClientConfigurer configurer = getHttpClientConfigurer()__        if (configurer != null) {_            configurer.configureHttpClient(clientBuilder)__        }__        if (isBridgeEndpoint()) {_            _            clientBuilder.setDefaultCookieStore(new NoopCookieStore())__        }__        log.debug("Setup the HttpClientBuilder {}", clientBuilder)__        return clientBuilder.build()__    };factory,method,to,create,a,new,link,http,client,instance,p,producers,and,consumers,should,use,the,link,get,http,client,method,instead;protected,http,client,create,http,client,object,helper,not,null,client,builder,http,client,builder,object,helper,not,null,client,connection,manager,http,connection,manager,client,builder,set,default,cookie,store,cookie,store,client,builder,set,connection,manager,client,connection,manager,if,get,component,null,get,component,get,client,connection,manager,get,client,connection,manager,client,builder,set,connection,manager,shared,true,if,use,system,properties,if,object,helper,is,not,empty,get,camel,context,get,global,option,http,proxy,host,object,helper,is,not,empty,get,camel,context,get,global,option,http,proxy,port,string,host,get,camel,context,get,global,option,http,proxy,host,int,port,integer,parse,int,get,camel,context,get,global,option,http,proxy,port,string,scheme,get,camel,context,get,global,option,http,proxy,scheme,if,scheme,null,scheme,http,helper,is,secure,connection,get,endpoint,uri,https,http,log,debug,camel,context,properties,http,proxy,host,http,proxy,port,and,http,proxy,scheme,detected,using,http,proxy,host,port,scheme,host,port,scheme,http,host,proxy,new,http,host,host,port,scheme,client,builder,set,proxy,proxy,else,client,builder,use,system,properties,if,is,authentication,preemptive,client,builder,add,interceptor,first,new,preemptive,auth,interceptor,http,client,configurer,configurer,get,http,client,configurer,if,configurer,null,configurer,configure,http,client,client,builder,if,is,bridge,endpoint,client,builder,set,default,cookie,store,new,noop,cookie,store,log,debug,setup,the,http,client,builder,client,builder,return,client,builder,build
HttpEndpoint -> public void setClientParams(HttpParams clientParams);1270895897;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public void setClientParams(HttpParams clientParams) {_        this.clientParams = clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,params,http,params,client,params,this,client,params,client,params
HttpEndpoint -> public void setClientParams(HttpParams clientParams);1274269216;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public void setClientParams(HttpParams clientParams) {_        this.clientParams = clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,params,http,params,client,params,this,client,params,client,params
HttpEndpoint -> public void setClientParams(HttpParams clientParams);1293443624;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public void setClientParams(HttpParams clientParams) {_        this.clientParams = clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,params,http,params,client,params,this,client,params,client,params
HttpEndpoint -> public void setClientParams(HttpParams clientParams);1296408582;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public void setClientParams(HttpParams clientParams) {_        this.clientParams = clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,params,http,params,client,params,this,client,params,client,params
HttpEndpoint -> public void setClientParams(HttpParams clientParams);1296495624;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public void setClientParams(HttpParams clientParams) {_        this.clientParams = clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,params,http,params,client,params,this,client,params,client,params
HttpEndpoint -> public void setClientParams(HttpParams clientParams);1296567562;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public void setClientParams(HttpParams clientParams) {_        this.clientParams = clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,params,http,params,client,params,this,client,params,client,params
HttpEndpoint -> public void setClientParams(HttpParams clientParams);1297975937;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public void setClientParams(HttpParams clientParams) {_        this.clientParams = clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,params,http,params,client,params,this,client,params,client,params
HttpEndpoint -> public void setClientParams(HttpParams clientParams);1307685726;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public void setClientParams(HttpParams clientParams) {_        this.clientParams = clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,params,http,params,client,params,this,client,params,client,params
HttpEndpoint -> public void setClientParams(HttpParams clientParams);1310024305;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public void setClientParams(HttpParams clientParams) {_        this.clientParams = clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,params,http,params,client,params,this,client,params,client,params
HttpEndpoint -> public void setClientParams(HttpParams clientParams);1310131950;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public void setClientParams(HttpParams clientParams) {_        this.clientParams = clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,params,http,params,client,params,this,client,params,client,params
HttpEndpoint -> public void setClientParams(HttpParams clientParams);1317112374;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public void setClientParams(HttpParams clientParams) {_        this.clientParams = clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,params,http,params,client,params,this,client,params,client,params
HttpEndpoint -> public void setClientParams(HttpParams clientParams);1323694591;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public void setClientParams(HttpParams clientParams) {_        this.clientParams = clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,params,http,params,client,params,this,client,params,client,params
HttpEndpoint -> public void setClientParams(HttpParams clientParams);1327082739;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public void setClientParams(HttpParams clientParams) {_        this.clientParams = clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,params,http,params,client,params,this,client,params,client,params
HttpEndpoint -> public void setClientParams(HttpParams clientParams);1333787762;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public void setClientParams(HttpParams clientParams) {_        this.clientParams = clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,params,http,params,client,params,this,client,params,client,params
HttpEndpoint -> public void setClientParams(HttpParams clientParams);1342106539;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public void setClientParams(HttpParams clientParams) {_        this.clientParams = clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,params,http,params,client,params,this,client,params,client,params
HttpEndpoint -> public void setClientParams(HttpParams clientParams);1344849457;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public void setClientParams(HttpParams clientParams) {_        this.clientParams = clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,params,http,params,client,params,this,client,params,client,params
HttpEndpoint -> public void setClientParams(HttpParams clientParams);1345088231;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public void setClientParams(HttpParams clientParams) {_        this.clientParams = clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,params,http,params,client,params,this,client,params,client,params
HttpEndpoint -> public void setClientParams(HttpParams clientParams);1347436727;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public void setClientParams(HttpParams clientParams) {_        this.clientParams = clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,params,http,params,client,params,this,client,params,client,params
HttpEndpoint -> public void setClientParams(HttpParams clientParams);1347436777;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public void setClientParams(HttpParams clientParams) {_        this.clientParams = clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,params,http,params,client,params,this,client,params,client,params
HttpEndpoint -> public void setClientParams(HttpParams clientParams);1356694393;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public void setClientParams(HttpParams clientParams) {_        this.clientParams = clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,params,http,params,client,params,this,client,params,client,params
HttpEndpoint -> public void setClientParams(HttpParams clientParams);1357140814;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public void setClientParams(HttpParams clientParams) {_        this.clientParams = clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,params,http,params,client,params,this,client,params,client,params
HttpEndpoint -> public void setClientParams(HttpParams clientParams);1366899100;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public void setClientParams(HttpParams clientParams) {_        this.clientParams = clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,params,http,params,client,params,this,client,params,client,params
HttpEndpoint -> public void setClientParams(HttpParams clientParams);1376549254;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public void setClientParams(HttpParams clientParams) {_        this.clientParams = clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,params,http,params,client,params,this,client,params,client,params
HttpEndpoint -> public void setClientParams(HttpParams clientParams);1378206923;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public void setClientParams(HttpParams clientParams) {_        this.clientParams = clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,params,http,params,client,params,this,client,params,client,params
HttpEndpoint -> public void setClientParams(HttpParams clientParams);1379491484;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public void setClientParams(HttpParams clientParams) {_        this.clientParams = clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,params,http,params,client,params,this,client,params,client,params
HttpEndpoint -> public void setClientParams(HttpParams clientParams);1382359231;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public void setClientParams(HttpParams clientParams) {_        this.clientParams = clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,params,http,params,client,params,this,client,params,client,params
HttpEndpoint -> public void setClientParams(HttpParams clientParams);1383138956;Provide access to the client parameters used on new {@link HttpClient} instances_used by producers or consumers of this endpoint.;public void setClientParams(HttpParams clientParams) {_        this.clientParams = clientParams__    };provide,access,to,the,client,parameters,used,on,new,link,http,client,instances,used,by,producers,or,consumers,of,this,endpoint;public,void,set,client,params,http,params,client,params,this,client,params,client,params
