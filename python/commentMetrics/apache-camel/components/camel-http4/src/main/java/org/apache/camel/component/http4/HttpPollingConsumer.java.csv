# id;timestamp;commentText;codeText;commentWords;codeWords
HttpPollingConsumer -> protected HttpResponse executeMethod(HttpRequestBase httpRequest, HttpClientContext httpClientContext) throws IOException;1532354160;Strategy when executing the method (calling the remote server).__@param httpRequest the http Request to execute_@return the response_@throws IOException can be thrown;protected HttpResponse executeMethod(HttpRequestBase httpRequest, HttpClientContext httpClientContext) throws IOException {_       _        if (getEndpoint().isAuthenticationPreemptive()) {_            BasicScheme basicAuth = new BasicScheme()__            httpClientContext.setAttribute("preemptive-auth", basicAuth)__        }_        if (httpContext != null) {_            httpClientContext = new HttpClientContext(httpContext)__        }_        return httpClient.execute(httpRequest, httpClientContext)__    };strategy,when,executing,the,method,calling,the,remote,server,param,http,request,the,http,request,to,execute,return,the,response,throws,ioexception,can,be,thrown;protected,http,response,execute,method,http,request,base,http,request,http,client,context,http,client,context,throws,ioexception,if,get,endpoint,is,authentication,preemptive,basic,scheme,basic,auth,new,basic,scheme,http,client,context,set,attribute,preemptive,auth,basic,auth,if,http,context,null,http,client,context,new,http,client,context,http,context,return,http,client,execute,http,request,http,client,context
HttpPollingConsumer -> protected HttpResponse executeMethod(HttpRequestBase httpRequest, HttpClientContext httpClientContext) throws IOException;1540108159;Strategy when executing the method (calling the remote server).__@param httpRequest the http Request to execute_@return the response_@throws IOException can be thrown;protected HttpResponse executeMethod(HttpRequestBase httpRequest, HttpClientContext httpClientContext) throws IOException {_       _        if (getEndpoint().isAuthenticationPreemptive()) {_            BasicScheme basicAuth = new BasicScheme()__            httpClientContext.setAttribute("preemptive-auth", basicAuth)__        }_        if (httpContext != null) {_            httpClientContext = new HttpClientContext(httpContext)__        }_        return httpClient.execute(httpRequest, httpClientContext)__    };strategy,when,executing,the,method,calling,the,remote,server,param,http,request,the,http,request,to,execute,return,the,response,throws,ioexception,can,be,thrown;protected,http,response,execute,method,http,request,base,http,request,http,client,context,http,client,context,throws,ioexception,if,get,endpoint,is,authentication,preemptive,basic,scheme,basic,auth,new,basic,scheme,http,client,context,set,attribute,preemptive,auth,basic,auth,if,http,context,null,http,client,context,new,http,client,context,http,context,return,http,client,execute,http,request,http,client,context
HttpPollingConsumer -> protected HttpResponse executeMethod(HttpRequestBase httpRequest, HttpClientContext httpClientContext) throws IOException;1540108161;Strategy when executing the method (calling the remote server).__@param httpRequest the http Request to execute_@return the response_@throws IOException can be thrown;protected HttpResponse executeMethod(HttpRequestBase httpRequest, HttpClientContext httpClientContext) throws IOException {_       _        if (getEndpoint().isAuthenticationPreemptive()) {_            BasicScheme basicAuth = new BasicScheme()__            httpClientContext.setAttribute("preemptive-auth", basicAuth)__        }_        if (httpContext != null) {_            httpClientContext = new HttpClientContext(httpContext)__        }_        return httpClient.execute(httpRequest, httpClientContext)__    };strategy,when,executing,the,method,calling,the,remote,server,param,http,request,the,http,request,to,execute,return,the,response,throws,ioexception,can,be,thrown;protected,http,response,execute,method,http,request,base,http,request,http,client,context,http,client,context,throws,ioexception,if,get,endpoint,is,authentication,preemptive,basic,scheme,basic,auth,new,basic,scheme,http,client,context,set,attribute,preemptive,auth,basic,auth,if,http,context,null,http,client,context,new,http,client,context,http,context,return,http,client,execute,http,request,http,client,context
HttpPollingConsumer -> protected HttpResponse executeMethod(HttpRequestBase httpRequest, HttpClientContext httpClientContext) throws IOException;1540108163;Strategy when executing the method (calling the remote server).__@param httpRequest the http Request to execute_@return the response_@throws IOException can be thrown;protected HttpResponse executeMethod(HttpRequestBase httpRequest, HttpClientContext httpClientContext) throws IOException {_       _        if (getEndpoint().isAuthenticationPreemptive()) {_            BasicScheme basicAuth = new BasicScheme()__            httpClientContext.setAttribute("preemptive-auth", basicAuth)__        }_        if (httpContext != null) {_            httpClientContext = new HttpClientContext(httpContext)__        }_        return httpClient.execute(httpRequest, httpClientContext)__    };strategy,when,executing,the,method,calling,the,remote,server,param,http,request,the,http,request,to,execute,return,the,response,throws,ioexception,can,be,thrown;protected,http,response,execute,method,http,request,base,http,request,http,client,context,http,client,context,throws,ioexception,if,get,endpoint,is,authentication,preemptive,basic,scheme,basic,auth,new,basic,scheme,http,client,context,set,attribute,preemptive,auth,basic,auth,if,http,context,null,http,client,context,new,http,client,context,http,context,return,http,client,execute,http,request,http,client,context
HttpPollingConsumer -> protected HttpResponse executeMethod(HttpRequestBase httpRequest, HttpClientContext httpClientContext) throws IOException;1547808740;Strategy when executing the method (calling the remote server).__@param httpRequest the http Request to execute_@return the response_@throws IOException can be thrown;protected HttpResponse executeMethod(HttpRequestBase httpRequest, HttpClientContext httpClientContext) throws IOException {_       _        if (getEndpoint().isAuthenticationPreemptive()) {_            BasicScheme basicAuth = new BasicScheme()__            httpClientContext.setAttribute("preemptive-auth", basicAuth)__        }_        if (httpContext != null) {_            httpClientContext = new HttpClientContext(httpContext)__        }_        return httpClient.execute(httpRequest, httpClientContext)__    };strategy,when,executing,the,method,calling,the,remote,server,param,http,request,the,http,request,to,execute,return,the,response,throws,ioexception,can,be,thrown;protected,http,response,execute,method,http,request,base,http,request,http,client,context,http,client,context,throws,ioexception,if,get,endpoint,is,authentication,preemptive,basic,scheme,basic,auth,new,basic,scheme,http,client,context,set,attribute,preemptive,auth,basic,auth,if,http,context,null,http,client,context,new,http,client,context,http,context,return,http,client,execute,http,request,http,client,context
