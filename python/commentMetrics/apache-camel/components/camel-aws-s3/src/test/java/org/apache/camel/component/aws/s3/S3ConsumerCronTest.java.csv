commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testConsumerCron() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMinimumMessageCount(2).     assertMockEndpointsSatisfied().     assertTrue(mock.getExchanges().get(0).getIn().getBody() == null).     assertTrue(mock.getExchanges().get(1).getIn().getBody() == null). }
false;protected;0;9;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry registry = super.createRegistry().     AmazonS3ClientMock clientMock = new AmazonS3ClientMock().     registry.bind("amazonS3Client", clientMock).     return registry. }
false;public;0;7;;@Override public void configure() throws Exception {     from("aws-s3://mycamelbucket?amazonS3Client=#amazonS3Client&region=us-west-1" + "&scheduler=spring&scheduler.cron=0/2+*+*+*+*+?" + "&sendEmptyMessageWhenIdle=true").to("mock:result"). }
false;protected;0;12;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("aws-s3://mycamelbucket?amazonS3Client=#amazonS3Client&region=us-west-1" + "&scheduler=spring&scheduler.cron=0/2+*+*+*+*+?" + "&sendEmptyMessageWhenIdle=true").to("mock:result").         }     }. }
