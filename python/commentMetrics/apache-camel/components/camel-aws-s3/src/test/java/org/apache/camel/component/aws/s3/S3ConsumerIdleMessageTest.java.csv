commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testConsumeIdleMessages() throws Exception {     Thread.sleep(110).     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMinimumMessageCount(2).     assertMockEndpointsSatisfied().     assertTrue(mock.getExchanges().get(0).getIn().getBody() == null).     assertTrue(mock.getExchanges().get(1).getIn().getBody() == null). }
false;protected;0;9;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry registry = super.createRegistry().     AmazonS3ClientMock clientMock = new AmazonS3ClientMock().     registry.bind("amazonS3Client", clientMock).     return registry. }
false;public;0;6;;@Override public void configure() throws Exception {     from("aws-s3://mycamelbucket?amazonS3Client=#amazonS3Client&region=us-west-1&delay=50" + "&maxMessagesPerPoll=5&sendEmptyMessageWhenIdle=true").to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("aws-s3://mycamelbucket?amazonS3Client=#amazonS3Client&region=us-west-1&delay=50" + "&maxMessagesPerPoll=5&sendEmptyMessageWhenIdle=true").to("mock:result").         }     }. }
