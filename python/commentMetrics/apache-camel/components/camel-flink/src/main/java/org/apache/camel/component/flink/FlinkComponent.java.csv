commented;modifiers;parameterAmount;loc;comment;code
false;protected;3;5;;@Override protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {     EndpointType type = getCamelContext().getTypeConverter().mandatoryConvertTo(EndpointType.class, remaining).     return new FlinkEndpoint(uri, this, type). }
false;public;0;3;;public DataSet getDataSet() {     return ds. }
true;public;1;3;/**  * DataSet to compute against.  */ ;/**  * DataSet to compute against.  */ public void setDataSet(DataSet ds) {     this.ds = ds. }
false;public;0;3;;public DataStream getDataStream() {     return dataStream. }
true;public;1;3;/**  * DataStream to compute against.  */ ;/**  * DataStream to compute against.  */ public void setDataStream(DataStream dataStream) {     this.dataStream = dataStream. }
false;public;0;3;;public DataSetCallback getDataSetCallback() {     return dataSetCallback. }
true;public;1;3;/**  * Function performing action against a DataSet.  */ ;/**  * Function performing action against a DataSet.  */ public void setDataSetCallback(DataSetCallback dataSetCallback) {     this.dataSetCallback = dataSetCallback. }
false;public;0;3;;public DataStreamCallback getDataStreamCallback() {     return dataStreamCallback. }
true;public;1;3;/**  * Function performing action against a DataStream.  */ ;/**  * Function performing action against a DataStream.  */ public void setDataStreamCallback(DataStreamCallback dataStreamCallback) {     this.dataStreamCallback = dataStreamCallback. }
