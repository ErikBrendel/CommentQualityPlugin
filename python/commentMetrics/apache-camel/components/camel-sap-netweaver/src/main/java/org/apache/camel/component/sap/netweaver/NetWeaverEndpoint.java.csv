commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public Producer createProducer() throws Exception {     return new NetWeaverProducer(this). }
false;public;1;4;;@Override public Consumer createConsumer(Processor processor) throws Exception {     throw new UnsupportedOperationException("Consumer is not supported"). }
false;public;0;4;;@Override public boolean isSingleton() {     return true. }
false;public;0;3;;public String getUrl() {     return url. }
true;public;1;3;/**  * Url to the SAP net-weaver gateway server.  */ ;/**  * Url to the SAP net-weaver gateway server.  */ public void setUrl(String url) {     this.url = url. }
false;public;0;3;;public String getUsername() {     return username. }
true;public;1;3;/**  * Username for account.  */ ;/**  * Username for account.  */ public void setUsername(String username) {     this.username = username. }
false;public;0;3;;public String getPassword() {     return password. }
true;public;1;3;/**  * Password for account.  */ ;/**  * Password for account.  */ public void setPassword(String password) {     this.password = password. }
false;public;0;3;;public boolean isJson() {     return json. }
true;public;1;3;/**  * Whether to return data in JSON format. If this option is false, then XML is returned in Atom format.  */ ;/**  * Whether to return data in JSON format. If this option is false, then XML is returned in Atom format.  */ public void setJson(boolean json) {     this.json = json. }
false;public;0;3;;public boolean isJsonAsMap() {     return jsonAsMap. }
true;public;1;3;/**  * To transform the JSON from a String to a Map in the message body.  */ ;/**  * To transform the JSON from a String to a Map in the message body.  */ public void setJsonAsMap(boolean jsonAsMap) {     this.jsonAsMap = jsonAsMap. }
false;public;0;3;;public boolean isFlatternMap() {     return flatternMap. }
true;public;1;3;/**  * If the JSON Map contains only a single entry, then flattern by storing that single entry value as the message body.  */ ;/**  * If the JSON Map contains only a single entry, then flattern by storing that single entry value as the message body.  */ public void setFlatternMap(boolean flatternMap) {     this.flatternMap = flatternMap. }
