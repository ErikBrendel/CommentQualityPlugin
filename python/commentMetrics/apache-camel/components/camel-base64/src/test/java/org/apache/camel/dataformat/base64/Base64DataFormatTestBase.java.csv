commented;modifiers;parameterAmount;loc;comment;code
false;protected;2;10;;protected void runEncoderTest(byte[] raw, byte[] expected) throws Exception {     result.setExpectedMessageCount(1).     template.sendBody("direct:startEncode", raw).     assertMockEndpointsSatisfied().     byte[] encoded = result.getReceivedExchanges().get(0).getIn().getBody(byte[].class).     assertArrayEquals(expected, encoded). }
false;protected;2;10;;protected void runDecoderTest(byte[] encoded, byte[] expected) throws Exception {     result.setExpectedMessageCount(1).     template.sendBody("direct:startDecode", encoded).     assertMockEndpointsSatisfied().     byte[] decoded = result.getReceivedExchanges().get(0).getIn().getBody(byte[].class).     assertArrayEquals(expected, decoded). }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:startEncode").marshal(format).to("mock:result").     from("direct:startDecode").unmarshal(format).to("mock:result"). }
false;protected;0;12;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:startEncode").marshal(format).to("mock:result").             from("direct:startDecode").unmarshal(format).to("mock:result").         }     }. }
