commented;modifiers;parameterAmount;loc;comment;code
false;private;1;10;;private void parseValueExpression(Token valueSrcToken) {     if (SSPTParserConstants.SIMPLE_EXP_TOKEN == valueSrcToken.kind) {         final Expression exp = ExpressionBuilder.simpleExpression(valueSrcToken.toString()).         this.valueExtractor = (exchange, container) -> exp.evaluate(exchange, Object.class).     } else if (SSPTParserConstants.PARAMETER_POS_TOKEN == valueSrcToken.kind) {         // remove leading :#         final String mapKey = valueSrcToken.toString().substring(2).         this.valueExtractor = (exchange, container) -> ((Map) container).get(mapKey).     } }
false;public;0;3;;public Integer getScale() {     return scale. }
false;public;0;3;;public String getName() {     return name. }
false;public;0;3;;public String getTypeName() {     return typeName. }
false;public;0;3;;public int getSqlType() {     return sqlType. }
false;public;0;3;;public ValueExtractor getValueExtractor() {     return valueExtractor. }
