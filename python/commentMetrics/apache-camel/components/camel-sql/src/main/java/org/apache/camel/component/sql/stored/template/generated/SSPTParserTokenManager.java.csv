# id;timestamp;commentText;codeText;commentWords;codeWords
SSPTParserTokenManager -> public void ReInit(SimpleCharStream stream, int lexState);1452335256;Reinitialise parser.;public void ReInit(SimpleCharStream stream, int lexState)_{_   ReInit(stream)__   SwitchTo(lexState)__};reinitialise,parser;public,void,re,init,simple,char,stream,stream,int,lex,state,re,init,stream,switch,to,lex,state
SSPTParserTokenManager -> public void ReInit(SimpleCharStream stream, int lexState);1452789249;Reinitialise parser.;public void ReInit(SimpleCharStream stream, int lexState) {_        ReInit(stream)__        SwitchTo(lexState)__    };reinitialise,parser;public,void,re,init,simple,char,stream,stream,int,lex,state,re,init,stream,switch,to,lex,state
SSPTParserTokenManager -> public void ReInit(SimpleCharStream stream, int lexState);1452843062;Reinitialise parser.;public void ReInit(SimpleCharStream stream, int lexState)_{_   ReInit(stream)__   SwitchTo(lexState)__};reinitialise,parser;public,void,re,init,simple,char,stream,stream,int,lex,state,re,init,stream,switch,to,lex,state
SSPTParserTokenManager -> public void ReInit(SimpleCharStream stream, int lexState);1455884812;Reinitialise parser.;public void ReInit(SimpleCharStream stream, int lexState)_{_   ReInit(stream)__   SwitchTo(lexState)__};reinitialise,parser;public,void,re,init,simple,char,stream,stream,int,lex,state,re,init,stream,switch,to,lex,state
SSPTParserTokenManager -> public void ReInit(SimpleCharStream stream, int lexState);1455886182;Reinitialise parser.;public void ReInit(SimpleCharStream stream, int lexState)_{_   ReInit(stream)__   SwitchTo(lexState)__};reinitialise,parser;public,void,re,init,simple,char,stream,stream,int,lex,state,re,init,stream,switch,to,lex,state
SSPTParserTokenManager -> public void ReInit(SimpleCharStream stream, int lexState);1462116676;Reinitialise parser.;public void ReInit(SimpleCharStream stream, int lexState)_{_   ReInit(stream)__   SwitchTo(lexState)__};reinitialise,parser;public,void,re,init,simple,char,stream,stream,int,lex,state,re,init,stream,switch,to,lex,state
SSPTParserTokenManager -> public void ReInit(SimpleCharStream stream, int lexState);1479916234;Reinitialise parser.;public void ReInit(SimpleCharStream stream, int lexState)_{_   ReInit(stream)__   SwitchTo(lexState)__};reinitialise,parser;public,void,re,init,simple,char,stream,stream,int,lex,state,re,init,stream,switch,to,lex,state
SSPTParserTokenManager -> public void ReInit(SimpleCharStream stream, int lexState);1487683072;Reinitialise parser.;public void ReInit(SimpleCharStream stream, int lexState)_{_   ReInit(stream)__   SwitchTo(lexState)__};reinitialise,parser;public,void,re,init,simple,char,stream,stream,int,lex,state,re,init,stream,switch,to,lex,state
SSPTParserTokenManager -> public void ReInit(SimpleCharStream stream, int lexState);1494246926;Reinitialise parser.;public void ReInit(SimpleCharStream stream, int lexState)_{_   ReInit(stream)__   SwitchTo(lexState)__};reinitialise,parser;public,void,re,init,simple,char,stream,stream,int,lex,state,re,init,stream,switch,to,lex,state
SSPTParserTokenManager -> public void ReInit(SimpleCharStream stream, int lexState);1497079220;Reinitialise parser.;public void ReInit(SimpleCharStream stream, int lexState)_{_   ReInit(stream)__   SwitchTo(lexState)__};reinitialise,parser;public,void,re,init,simple,char,stream,stream,int,lex,state,re,init,stream,switch,to,lex,state
SSPTParserTokenManager -> public void ReInit(SimpleCharStream stream, int lexState);1518162420;Reinitialise parser.;public void ReInit(SimpleCharStream stream, int lexState)_{_   ReInit(stream)__   SwitchTo(lexState)__};reinitialise,parser;public,void,re,init,simple,char,stream,stream,int,lex,state,re,init,stream,switch,to,lex,state
SSPTParserTokenManager -> public SSPTParserTokenManager(SimpleCharStream stream);1452335256;Constructor.;public SSPTParserTokenManager(SimpleCharStream stream){_   if (SimpleCharStream.staticFlag)_      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.")__   input_stream = stream__};constructor;public,ssptparser,token,manager,simple,char,stream,stream,if,simple,char,stream,static,flag,throw,new,error,error,cannot,use,a,static,char,stream,class,with,a,non,static,lexical,analyzer,stream
SSPTParserTokenManager -> public SSPTParserTokenManager(SimpleCharStream stream);1452789249;Constructor.;public SSPTParserTokenManager(SimpleCharStream stream) {_        if (SimpleCharStream.staticFlag)_            throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.")__        input_stream = stream__    };constructor;public,ssptparser,token,manager,simple,char,stream,stream,if,simple,char,stream,static,flag,throw,new,error,error,cannot,use,a,static,char,stream,class,with,a,non,static,lexical,analyzer,stream
SSPTParserTokenManager -> public SSPTParserTokenManager(SimpleCharStream stream);1452843062;Constructor.;public SSPTParserTokenManager(SimpleCharStream stream){_   if (SimpleCharStream.staticFlag)_      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.")__   input_stream = stream__};constructor;public,ssptparser,token,manager,simple,char,stream,stream,if,simple,char,stream,static,flag,throw,new,error,error,cannot,use,a,static,char,stream,class,with,a,non,static,lexical,analyzer,stream
SSPTParserTokenManager -> public SSPTParserTokenManager(SimpleCharStream stream);1455884812;Constructor.;public SSPTParserTokenManager(SimpleCharStream stream){_   if (SimpleCharStream.staticFlag)_      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.")__   input_stream = stream__};constructor;public,ssptparser,token,manager,simple,char,stream,stream,if,simple,char,stream,static,flag,throw,new,error,error,cannot,use,a,static,char,stream,class,with,a,non,static,lexical,analyzer,stream
SSPTParserTokenManager -> public SSPTParserTokenManager(SimpleCharStream stream);1455886182;Constructor.;public SSPTParserTokenManager(SimpleCharStream stream){_   if (SimpleCharStream.staticFlag)_      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.")__   input_stream = stream__};constructor;public,ssptparser,token,manager,simple,char,stream,stream,if,simple,char,stream,static,flag,throw,new,error,error,cannot,use,a,static,char,stream,class,with,a,non,static,lexical,analyzer,stream
SSPTParserTokenManager -> public SSPTParserTokenManager(SimpleCharStream stream);1462116676;Constructor.;public SSPTParserTokenManager(SimpleCharStream stream){_   if (SimpleCharStream.staticFlag)_      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.")__   input_stream = stream__};constructor;public,ssptparser,token,manager,simple,char,stream,stream,if,simple,char,stream,static,flag,throw,new,error,error,cannot,use,a,static,char,stream,class,with,a,non,static,lexical,analyzer,stream
SSPTParserTokenManager -> public SSPTParserTokenManager(SimpleCharStream stream);1479916234;Constructor.;public SSPTParserTokenManager(SimpleCharStream stream){_   if (SimpleCharStream.staticFlag)_      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.")__   input_stream = stream__};constructor;public,ssptparser,token,manager,simple,char,stream,stream,if,simple,char,stream,static,flag,throw,new,error,error,cannot,use,a,static,char,stream,class,with,a,non,static,lexical,analyzer,stream
SSPTParserTokenManager -> public SSPTParserTokenManager(SimpleCharStream stream);1487683072;Constructor.;public SSPTParserTokenManager(SimpleCharStream stream){_   if (SimpleCharStream.staticFlag)_      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.")__   input_stream = stream__};constructor;public,ssptparser,token,manager,simple,char,stream,stream,if,simple,char,stream,static,flag,throw,new,error,error,cannot,use,a,static,char,stream,class,with,a,non,static,lexical,analyzer,stream
SSPTParserTokenManager -> public SSPTParserTokenManager(SimpleCharStream stream);1494246926;Constructor.;public SSPTParserTokenManager(SimpleCharStream stream){_   if (SimpleCharStream.staticFlag)_      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.")__   input_stream = stream__};constructor;public,ssptparser,token,manager,simple,char,stream,stream,if,simple,char,stream,static,flag,throw,new,error,error,cannot,use,a,static,char,stream,class,with,a,non,static,lexical,analyzer,stream
SSPTParserTokenManager -> public SSPTParserTokenManager(SimpleCharStream stream);1497079220;Constructor.;public SSPTParserTokenManager(SimpleCharStream stream){_   if (SimpleCharStream.staticFlag)_      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.")__   input_stream = stream__};constructor;public,ssptparser,token,manager,simple,char,stream,stream,if,simple,char,stream,static,flag,throw,new,error,error,cannot,use,a,static,char,stream,class,with,a,non,static,lexical,analyzer,stream
SSPTParserTokenManager -> public SSPTParserTokenManager(SimpleCharStream stream);1518162420;Constructor.;public SSPTParserTokenManager(SimpleCharStream stream){_   if (SimpleCharStream.staticFlag)_      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.")__   input_stream = stream__};constructor;public,ssptparser,token,manager,simple,char,stream,stream,if,simple,char,stream,static,flag,throw,new,error,error,cannot,use,a,static,char,stream,class,with,a,non,static,lexical,analyzer,stream
SSPTParserTokenManager -> public void ReInit(SimpleCharStream stream);1452335256;Reinitialise parser.;public void ReInit(SimpleCharStream stream)_{_   jjmatchedPos = jjnewStateCnt = 0__   curLexState = defaultLexState__   input_stream = stream__   ReInitRounds()__};reinitialise,parser;public,void,re,init,simple,char,stream,stream,jjmatched,pos,jjnew,state,cnt,0,cur,lex,state,default,lex,state,stream,re,init,rounds
SSPTParserTokenManager -> public void ReInit(SimpleCharStream stream);1452789249;Reinitialise parser.;public void ReInit(SimpleCharStream stream) {_        jjmatchedPos = jjnewStateCnt = 0__        curLexState = defaultLexState__        input_stream = stream__        ReInitRounds()__    };reinitialise,parser;public,void,re,init,simple,char,stream,stream,jjmatched,pos,jjnew,state,cnt,0,cur,lex,state,default,lex,state,stream,re,init,rounds
SSPTParserTokenManager -> public void ReInit(SimpleCharStream stream);1452843062;Reinitialise parser.;public void ReInit(SimpleCharStream stream)_{_   jjmatchedPos = jjnewStateCnt = 0__   curLexState = defaultLexState__   input_stream = stream__   ReInitRounds()__};reinitialise,parser;public,void,re,init,simple,char,stream,stream,jjmatched,pos,jjnew,state,cnt,0,cur,lex,state,default,lex,state,stream,re,init,rounds
SSPTParserTokenManager -> public void ReInit(SimpleCharStream stream);1455884812;Reinitialise parser.;public void ReInit(SimpleCharStream stream)_{_   jjmatchedPos = jjnewStateCnt = 0__   curLexState = defaultLexState__   input_stream = stream__   ReInitRounds()__};reinitialise,parser;public,void,re,init,simple,char,stream,stream,jjmatched,pos,jjnew,state,cnt,0,cur,lex,state,default,lex,state,stream,re,init,rounds
SSPTParserTokenManager -> public void ReInit(SimpleCharStream stream);1455886182;Reinitialise parser.;public void ReInit(SimpleCharStream stream)_{_   jjmatchedPos = jjnewStateCnt = 0__   curLexState = defaultLexState__   input_stream = stream__   ReInitRounds()__};reinitialise,parser;public,void,re,init,simple,char,stream,stream,jjmatched,pos,jjnew,state,cnt,0,cur,lex,state,default,lex,state,stream,re,init,rounds
SSPTParserTokenManager -> public void ReInit(SimpleCharStream stream);1462116676;Reinitialise parser.;public void ReInit(SimpleCharStream stream)_{_   jjmatchedPos = jjnewStateCnt = 0__   curLexState = defaultLexState__   input_stream = stream__   ReInitRounds()__};reinitialise,parser;public,void,re,init,simple,char,stream,stream,jjmatched,pos,jjnew,state,cnt,0,cur,lex,state,default,lex,state,stream,re,init,rounds
SSPTParserTokenManager -> public void ReInit(SimpleCharStream stream);1479916234;Reinitialise parser.;public void ReInit(SimpleCharStream stream)_{_   jjmatchedPos = jjnewStateCnt = 0__   curLexState = defaultLexState__   input_stream = stream__   ReInitRounds()__};reinitialise,parser;public,void,re,init,simple,char,stream,stream,jjmatched,pos,jjnew,state,cnt,0,cur,lex,state,default,lex,state,stream,re,init,rounds
SSPTParserTokenManager -> public void ReInit(SimpleCharStream stream);1487683072;Reinitialise parser.;public void ReInit(SimpleCharStream stream)_{_   jjmatchedPos = jjnewStateCnt = 0__   curLexState = defaultLexState__   input_stream = stream__   ReInitRounds()__};reinitialise,parser;public,void,re,init,simple,char,stream,stream,jjmatched,pos,jjnew,state,cnt,0,cur,lex,state,default,lex,state,stream,re,init,rounds
SSPTParserTokenManager -> public void ReInit(SimpleCharStream stream);1494246926;Reinitialise parser.;public void ReInit(SimpleCharStream stream)_{_   jjmatchedPos = jjnewStateCnt = 0__   curLexState = defaultLexState__   input_stream = stream__   ReInitRounds()__};reinitialise,parser;public,void,re,init,simple,char,stream,stream,jjmatched,pos,jjnew,state,cnt,0,cur,lex,state,default,lex,state,stream,re,init,rounds
SSPTParserTokenManager -> public void ReInit(SimpleCharStream stream);1497079220;Reinitialise parser.;public void ReInit(SimpleCharStream stream)_{_   jjmatchedPos = jjnewStateCnt = 0__   curLexState = defaultLexState__   input_stream = stream__   ReInitRounds()__};reinitialise,parser;public,void,re,init,simple,char,stream,stream,jjmatched,pos,jjnew,state,cnt,0,cur,lex,state,default,lex,state,stream,re,init,rounds
SSPTParserTokenManager -> public void ReInit(SimpleCharStream stream);1518162420;Reinitialise parser.;public void ReInit(SimpleCharStream stream)_{_   jjmatchedPos = jjnewStateCnt = 0__   curLexState = defaultLexState__   input_stream = stream__   ReInitRounds()__};reinitialise,parser;public,void,re,init,simple,char,stream,stream,jjmatched,pos,jjnew,state,cnt,0,cur,lex,state,default,lex,state,stream,re,init,rounds
SSPTParserTokenManager -> public void SwitchTo(int lexState);1452335256;Switch to specified lex state.;public void SwitchTo(int lexState)_{_   if (lexState >= 1 || lexState < 0)_      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE)__   else_      curLexState = lexState__};switch,to,specified,lex,state;public,void,switch,to,int,lex,state,if,lex,state,1,lex,state,0,throw,new,token,mgr,error,error,ignoring,invalid,lexical,state,lex,state,state,unchanged,token,mgr,error,else,cur,lex,state,lex,state
SSPTParserTokenManager -> public void SwitchTo(int lexState);1452789249;Switch to specified lex state.;public void SwitchTo(int lexState) {_        if (lexState >= 1 || lexState < 0)_            throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE)__        else_            curLexState = lexState__    };switch,to,specified,lex,state;public,void,switch,to,int,lex,state,if,lex,state,1,lex,state,0,throw,new,token,mgr,error,error,ignoring,invalid,lexical,state,lex,state,state,unchanged,token,mgr,error,else,cur,lex,state,lex,state
SSPTParserTokenManager -> public void SwitchTo(int lexState);1452843062;Switch to specified lex state.;public void SwitchTo(int lexState)_{_   if (lexState >= 1 || lexState < 0)_      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE)__   else_      curLexState = lexState__};switch,to,specified,lex,state;public,void,switch,to,int,lex,state,if,lex,state,1,lex,state,0,throw,new,token,mgr,error,error,ignoring,invalid,lexical,state,lex,state,state,unchanged,token,mgr,error,else,cur,lex,state,lex,state
SSPTParserTokenManager -> public void SwitchTo(int lexState);1455884812;Switch to specified lex state.;public void SwitchTo(int lexState)_{_   if (lexState >= 1 || lexState < 0)_      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE)__   else_      curLexState = lexState__};switch,to,specified,lex,state;public,void,switch,to,int,lex,state,if,lex,state,1,lex,state,0,throw,new,token,mgr,error,error,ignoring,invalid,lexical,state,lex,state,state,unchanged,token,mgr,error,else,cur,lex,state,lex,state
SSPTParserTokenManager -> public void SwitchTo(int lexState);1455886182;Switch to specified lex state.;public void SwitchTo(int lexState)_{_   if (lexState >= 1 || lexState < 0)_      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE)__   else_      curLexState = lexState__};switch,to,specified,lex,state;public,void,switch,to,int,lex,state,if,lex,state,1,lex,state,0,throw,new,token,mgr,error,error,ignoring,invalid,lexical,state,lex,state,state,unchanged,token,mgr,error,else,cur,lex,state,lex,state
SSPTParserTokenManager -> public void SwitchTo(int lexState);1462116676;Switch to specified lex state.;public void SwitchTo(int lexState)_{_   if (lexState >= 1 || lexState < 0)_      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE)__   else_      curLexState = lexState__};switch,to,specified,lex,state;public,void,switch,to,int,lex,state,if,lex,state,1,lex,state,0,throw,new,token,mgr,error,error,ignoring,invalid,lexical,state,lex,state,state,unchanged,token,mgr,error,else,cur,lex,state,lex,state
SSPTParserTokenManager -> public void SwitchTo(int lexState);1479916234;Switch to specified lex state.;public void SwitchTo(int lexState)_{_   if (lexState >= 1 || lexState < 0)_      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE)__   else_      curLexState = lexState__};switch,to,specified,lex,state;public,void,switch,to,int,lex,state,if,lex,state,1,lex,state,0,throw,new,token,mgr,error,error,ignoring,invalid,lexical,state,lex,state,state,unchanged,token,mgr,error,else,cur,lex,state,lex,state
SSPTParserTokenManager -> public void SwitchTo(int lexState);1487683072;Switch to specified lex state.;public void SwitchTo(int lexState)_{_   if (lexState >= 1 || lexState < 0)_      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE)__   else_      curLexState = lexState__};switch,to,specified,lex,state;public,void,switch,to,int,lex,state,if,lex,state,1,lex,state,0,throw,new,token,mgr,error,error,ignoring,invalid,lexical,state,lex,state,state,unchanged,token,mgr,error,else,cur,lex,state,lex,state
SSPTParserTokenManager -> public void SwitchTo(int lexState);1494246926;Switch to specified lex state.;public void SwitchTo(int lexState)_{_   if (lexState >= 1 || lexState < 0)_      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE)__   else_      curLexState = lexState__};switch,to,specified,lex,state;public,void,switch,to,int,lex,state,if,lex,state,1,lex,state,0,throw,new,token,mgr,error,error,ignoring,invalid,lexical,state,lex,state,state,unchanged,token,mgr,error,else,cur,lex,state,lex,state
SSPTParserTokenManager -> public void SwitchTo(int lexState);1497079220;Switch to specified lex state.;public void SwitchTo(int lexState)_{_   if (lexState >= 1 || lexState < 0)_      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE)__   else_      curLexState = lexState__};switch,to,specified,lex,state;public,void,switch,to,int,lex,state,if,lex,state,1,lex,state,0,throw,new,token,mgr,error,error,ignoring,invalid,lexical,state,lex,state,state,unchanged,token,mgr,error,else,cur,lex,state,lex,state
SSPTParserTokenManager -> public void SwitchTo(int lexState);1518162420;Switch to specified lex state.;public void SwitchTo(int lexState)_{_   if (lexState >= 1 || lexState < 0)_      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE)__   else_      curLexState = lexState__};switch,to,specified,lex,state;public,void,switch,to,int,lex,state,if,lex,state,1,lex,state,0,throw,new,token,mgr,error,error,ignoring,invalid,lexical,state,lex,state,state,unchanged,token,mgr,error,else,cur,lex,state,lex,state
SSPTParserTokenManager -> public SSPTParserTokenManager(SimpleCharStream stream, int lexState);1452335256;Constructor.;public SSPTParserTokenManager(SimpleCharStream stream, int lexState){_   this(stream)__   SwitchTo(lexState)__};constructor;public,ssptparser,token,manager,simple,char,stream,stream,int,lex,state,this,stream,switch,to,lex,state
SSPTParserTokenManager -> public SSPTParserTokenManager(SimpleCharStream stream, int lexState);1452789249;Constructor.;public SSPTParserTokenManager(SimpleCharStream stream, int lexState) {_        this(stream)__        SwitchTo(lexState)__    };constructor;public,ssptparser,token,manager,simple,char,stream,stream,int,lex,state,this,stream,switch,to,lex,state
SSPTParserTokenManager -> public SSPTParserTokenManager(SimpleCharStream stream, int lexState);1452843062;Constructor.;public SSPTParserTokenManager(SimpleCharStream stream, int lexState){_   this(stream)__   SwitchTo(lexState)__};constructor;public,ssptparser,token,manager,simple,char,stream,stream,int,lex,state,this,stream,switch,to,lex,state
SSPTParserTokenManager -> public SSPTParserTokenManager(SimpleCharStream stream, int lexState);1455884812;Constructor.;public SSPTParserTokenManager(SimpleCharStream stream, int lexState){_   this(stream)__   SwitchTo(lexState)__};constructor;public,ssptparser,token,manager,simple,char,stream,stream,int,lex,state,this,stream,switch,to,lex,state
SSPTParserTokenManager -> public SSPTParserTokenManager(SimpleCharStream stream, int lexState);1455886182;Constructor.;public SSPTParserTokenManager(SimpleCharStream stream, int lexState){_   this(stream)__   SwitchTo(lexState)__};constructor;public,ssptparser,token,manager,simple,char,stream,stream,int,lex,state,this,stream,switch,to,lex,state
SSPTParserTokenManager -> public SSPTParserTokenManager(SimpleCharStream stream, int lexState);1462116676;Constructor.;public SSPTParserTokenManager(SimpleCharStream stream, int lexState){_   this(stream)__   SwitchTo(lexState)__};constructor;public,ssptparser,token,manager,simple,char,stream,stream,int,lex,state,this,stream,switch,to,lex,state
SSPTParserTokenManager -> public SSPTParserTokenManager(SimpleCharStream stream, int lexState);1479916234;Constructor.;public SSPTParserTokenManager(SimpleCharStream stream, int lexState){_   this(stream)__   SwitchTo(lexState)__};constructor;public,ssptparser,token,manager,simple,char,stream,stream,int,lex,state,this,stream,switch,to,lex,state
SSPTParserTokenManager -> public SSPTParserTokenManager(SimpleCharStream stream, int lexState);1487683072;Constructor.;public SSPTParserTokenManager(SimpleCharStream stream, int lexState){_   this(stream)__   SwitchTo(lexState)__};constructor;public,ssptparser,token,manager,simple,char,stream,stream,int,lex,state,this,stream,switch,to,lex,state
SSPTParserTokenManager -> public SSPTParserTokenManager(SimpleCharStream stream, int lexState);1494246926;Constructor.;public SSPTParserTokenManager(SimpleCharStream stream, int lexState){_   this(stream)__   SwitchTo(lexState)__};constructor;public,ssptparser,token,manager,simple,char,stream,stream,int,lex,state,this,stream,switch,to,lex,state
SSPTParserTokenManager -> public SSPTParserTokenManager(SimpleCharStream stream, int lexState);1497079220;Constructor.;public SSPTParserTokenManager(SimpleCharStream stream, int lexState){_   this(stream)__   SwitchTo(lexState)__};constructor;public,ssptparser,token,manager,simple,char,stream,stream,int,lex,state,this,stream,switch,to,lex,state
SSPTParserTokenManager -> public SSPTParserTokenManager(SimpleCharStream stream, int lexState);1518162420;Constructor.;public SSPTParserTokenManager(SimpleCharStream stream, int lexState){_   this(stream)__   SwitchTo(lexState)__};constructor;public,ssptparser,token,manager,simple,char,stream,stream,int,lex,state,this,stream,switch,to,lex,state
SSPTParserTokenManager -> public Token getNextToken();1452335256;Get the next Token.;public Token getNextToken() _{_  Token matchedToken__  int curPos = 0___  EOFLoop :_  for (__)_  {_   try_   {_      curChar = input_stream.BeginToken()__   }_   catch(java.io.IOException e)_   {_      jjmatchedKind = 0__      matchedToken = jjFillToken()__      return matchedToken__   }__   jjmatchedKind = 0x7fffffff__   jjmatchedPos = 0__   curPos = jjMoveStringLiteralDfa0_0()__   if (jjmatchedKind != 0x7fffffff)_   {_      if (jjmatchedPos + 1 < curPos)_         input_stream.backup(curPos - jjmatchedPos - 1)__         matchedToken = jjFillToken()__         return matchedToken__   }_   int error_line = input_stream.getEndLine()__   int error_column = input_stream.getEndColumn()__   String error_after = null__   boolean EOFSeen = false__   try { input_stream.readChar()_ input_stream.backup(1)_ }_   catch (java.io.IOException e1) {_      EOFSeen = true__      error_after = curPos <= 1 ? "" : input_stream.GetImage()__      if (curChar == '\n' || curChar == '\r') {_         error_line++__         error_column = 0__      }_      else_         error_column++__   }_   if (!EOFSeen) {_      input_stream.backup(1)__      error_after = curPos <= 1 ? "" : input_stream.GetImage()__   }_   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR)__  }_};get,the,next,token;public,token,get,next,token,token,matched,token,int,cur,pos,0,eofloop,for,try,cur,char,begin,token,catch,java,io,ioexception,e,jjmatched,kind,0,matched,token,jj,fill,token,return,matched,token,jjmatched,kind,0x7fffffff,jjmatched,pos,0,cur,pos,if,jjmatched,kind,0x7fffffff,if,jjmatched,pos,1,cur,pos,backup,cur,pos,jjmatched,pos,1,matched,token,jj,fill,token,return,matched,token,int,get,end,line,int,get,end,column,string,null,boolean,eofseen,false,try,read,char,backup,1,catch,java,io,ioexception,e1,eofseen,true,cur,pos,1,get,image,if,cur,char,n,cur,char,r,0,else,if,eofseen,backup,1,cur,pos,1,get,image,throw,new,token,mgr,error,eofseen,cur,lex,state,cur,char,token,mgr,error
SSPTParserTokenManager -> public Token getNextToken();1452789249;Get the next Token.;public Token getNextToken() {_        Token matchedToken__        int curPos = 0___        EOFLoop:_        for (_ _ ) {_            try {_                curChar = input_stream.BeginToken()__            } catch (java.io.IOException e) {_                jjmatchedKind = 0__                matchedToken = jjFillToken()__                return matchedToken__            }__            jjmatchedKind = 0x7fffffff__            jjmatchedPos = 0__            curPos = jjMoveStringLiteralDfa0_0()__            if (jjmatchedKind != 0x7fffffff) {_                if (jjmatchedPos + 1 < curPos)_                    input_stream.backup(curPos - jjmatchedPos - 1)__                matchedToken = jjFillToken()__                return matchedToken__            }_            int error_line = input_stream.getEndLine()__            int error_column = input_stream.getEndColumn()__            String error_after = null__            boolean EOFSeen = false__            try {_                input_stream.readChar()__                input_stream.backup(1)__            } catch (java.io.IOException e1) {_                EOFSeen = true__                error_after = curPos <= 1 ? "" : input_stream.GetImage()__                if (curChar == '\n' || curChar == '\r') {_                    error_line++__                    error_column = 0__                } else_                    error_column++__            }_            if (!EOFSeen) {_                input_stream.backup(1)__                error_after = curPos <= 1 ? "" : input_stream.GetImage()__            }_            throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR)__        }_    };get,the,next,token;public,token,get,next,token,token,matched,token,int,cur,pos,0,eofloop,for,try,cur,char,begin,token,catch,java,io,ioexception,e,jjmatched,kind,0,matched,token,jj,fill,token,return,matched,token,jjmatched,kind,0x7fffffff,jjmatched,pos,0,cur,pos,if,jjmatched,kind,0x7fffffff,if,jjmatched,pos,1,cur,pos,backup,cur,pos,jjmatched,pos,1,matched,token,jj,fill,token,return,matched,token,int,get,end,line,int,get,end,column,string,null,boolean,eofseen,false,try,read,char,backup,1,catch,java,io,ioexception,e1,eofseen,true,cur,pos,1,get,image,if,cur,char,n,cur,char,r,0,else,if,eofseen,backup,1,cur,pos,1,get,image,throw,new,token,mgr,error,eofseen,cur,lex,state,cur,char,token,mgr,error
SSPTParserTokenManager -> public Token getNextToken();1452843062;Get the next Token.;public Token getNextToken() _{_  Token matchedToken__  int curPos = 0___  EOFLoop :_  for (__)_  {_   try_   {_      curChar = input_stream.BeginToken()__   }_   catch(java.io.IOException e)_   {_      jjmatchedKind = 0__      matchedToken = jjFillToken()__      return matchedToken__   }__   jjmatchedKind = 0x7fffffff__   jjmatchedPos = 0__   curPos = jjMoveStringLiteralDfa0_0()__   if (jjmatchedKind != 0x7fffffff)_   {_      if (jjmatchedPos + 1 < curPos)_         input_stream.backup(curPos - jjmatchedPos - 1)__         matchedToken = jjFillToken()__         return matchedToken__   }_   int error_line = input_stream.getEndLine()__   int error_column = input_stream.getEndColumn()__   String error_after = null__   boolean EOFSeen = false__   try { input_stream.readChar()_ input_stream.backup(1)_ }_   catch (java.io.IOException e1) {_      EOFSeen = true__      error_after = curPos <= 1 ? "" : input_stream.GetImage()__      if (curChar == '\n' || curChar == '\r') {_         error_line++__         error_column = 0__      }_      else_         error_column++__   }_   if (!EOFSeen) {_      input_stream.backup(1)__      error_after = curPos <= 1 ? "" : input_stream.GetImage()__   }_   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR)__  }_};get,the,next,token;public,token,get,next,token,token,matched,token,int,cur,pos,0,eofloop,for,try,cur,char,begin,token,catch,java,io,ioexception,e,jjmatched,kind,0,matched,token,jj,fill,token,return,matched,token,jjmatched,kind,0x7fffffff,jjmatched,pos,0,cur,pos,if,jjmatched,kind,0x7fffffff,if,jjmatched,pos,1,cur,pos,backup,cur,pos,jjmatched,pos,1,matched,token,jj,fill,token,return,matched,token,int,get,end,line,int,get,end,column,string,null,boolean,eofseen,false,try,read,char,backup,1,catch,java,io,ioexception,e1,eofseen,true,cur,pos,1,get,image,if,cur,char,n,cur,char,r,0,else,if,eofseen,backup,1,cur,pos,1,get,image,throw,new,token,mgr,error,eofseen,cur,lex,state,cur,char,token,mgr,error
SSPTParserTokenManager -> public Token getNextToken();1455884812;Get the next Token.;public Token getNextToken() _{_  Token matchedToken__  int curPos = 0___  EOFLoop :_  for (__)_  {_   try_   {_      curChar = input_stream.BeginToken()__   }_   catch(java.io.IOException e)_   {_      jjmatchedKind = 0__      matchedToken = jjFillToken()__      return matchedToken__   }__   jjmatchedKind = 0x7fffffff__   jjmatchedPos = 0__   curPos = jjMoveStringLiteralDfa0_0()__   if (jjmatchedKind != 0x7fffffff)_   {_      if (jjmatchedPos + 1 < curPos)_         input_stream.backup(curPos - jjmatchedPos - 1)__         matchedToken = jjFillToken()__         return matchedToken__   }_   int error_line = input_stream.getEndLine()__   int error_column = input_stream.getEndColumn()__   String error_after = null__   boolean EOFSeen = false__   try { input_stream.readChar()_ input_stream.backup(1)_ }_   catch (java.io.IOException e1) {_      EOFSeen = true__      error_after = curPos <= 1 ? "" : input_stream.GetImage()__      if (curChar == '\n' || curChar == '\r') {_         error_line++__         error_column = 0__      }_      else_         error_column++__   }_   if (!EOFSeen) {_      input_stream.backup(1)__      error_after = curPos <= 1 ? "" : input_stream.GetImage()__   }_   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR)__  }_};get,the,next,token;public,token,get,next,token,token,matched,token,int,cur,pos,0,eofloop,for,try,cur,char,begin,token,catch,java,io,ioexception,e,jjmatched,kind,0,matched,token,jj,fill,token,return,matched,token,jjmatched,kind,0x7fffffff,jjmatched,pos,0,cur,pos,if,jjmatched,kind,0x7fffffff,if,jjmatched,pos,1,cur,pos,backup,cur,pos,jjmatched,pos,1,matched,token,jj,fill,token,return,matched,token,int,get,end,line,int,get,end,column,string,null,boolean,eofseen,false,try,read,char,backup,1,catch,java,io,ioexception,e1,eofseen,true,cur,pos,1,get,image,if,cur,char,n,cur,char,r,0,else,if,eofseen,backup,1,cur,pos,1,get,image,throw,new,token,mgr,error,eofseen,cur,lex,state,cur,char,token,mgr,error
SSPTParserTokenManager -> public Token getNextToken();1455886182;Get the next Token.;public Token getNextToken() _{_  Token matchedToken__  int curPos = 0___  EOFLoop :_  for (__)_  {_   try_   {_      curChar = input_stream.BeginToken()__   }_   catch(java.io.IOException e)_   {_      jjmatchedKind = 0__      matchedToken = jjFillToken()__      return matchedToken__   }__   jjmatchedKind = 0x7fffffff__   jjmatchedPos = 0__   curPos = jjMoveStringLiteralDfa0_0()__   if (jjmatchedKind != 0x7fffffff)_   {_      if (jjmatchedPos + 1 < curPos)_         input_stream.backup(curPos - jjmatchedPos - 1)__         matchedToken = jjFillToken()__         return matchedToken__   }_   int error_line = input_stream.getEndLine()__   int error_column = input_stream.getEndColumn()__   String error_after = null__   boolean EOFSeen = false__   try { input_stream.readChar()_ input_stream.backup(1)_ }_   catch (java.io.IOException e1) {_      EOFSeen = true__      error_after = curPos <= 1 ? "" : input_stream.GetImage()__      if (curChar == '\n' || curChar == '\r') {_         error_line++__         error_column = 0__      }_      else_         error_column++__   }_   if (!EOFSeen) {_      input_stream.backup(1)__      error_after = curPos <= 1 ? "" : input_stream.GetImage()__   }_   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR)__  }_};get,the,next,token;public,token,get,next,token,token,matched,token,int,cur,pos,0,eofloop,for,try,cur,char,begin,token,catch,java,io,ioexception,e,jjmatched,kind,0,matched,token,jj,fill,token,return,matched,token,jjmatched,kind,0x7fffffff,jjmatched,pos,0,cur,pos,if,jjmatched,kind,0x7fffffff,if,jjmatched,pos,1,cur,pos,backup,cur,pos,jjmatched,pos,1,matched,token,jj,fill,token,return,matched,token,int,get,end,line,int,get,end,column,string,null,boolean,eofseen,false,try,read,char,backup,1,catch,java,io,ioexception,e1,eofseen,true,cur,pos,1,get,image,if,cur,char,n,cur,char,r,0,else,if,eofseen,backup,1,cur,pos,1,get,image,throw,new,token,mgr,error,eofseen,cur,lex,state,cur,char,token,mgr,error
SSPTParserTokenManager -> public Token getNextToken();1462116676;Get the next Token.;public Token getNextToken() _{_  Token matchedToken__  int curPos = 0___  EOFLoop :_  for (__)_  {_   try_   {_      curChar = input_stream.BeginToken()__   }_   catch(java.io.IOException e)_   {_      jjmatchedKind = 0__      matchedToken = jjFillToken()__      return matchedToken__   }__   jjmatchedKind = 0x7fffffff__   jjmatchedPos = 0__   curPos = jjMoveStringLiteralDfa0_0()__   if (jjmatchedKind != 0x7fffffff)_   {_      if (jjmatchedPos + 1 < curPos)_         input_stream.backup(curPos - jjmatchedPos - 1)__         matchedToken = jjFillToken()__         return matchedToken__   }_   int error_line = input_stream.getEndLine()__   int error_column = input_stream.getEndColumn()__   String error_after = null__   boolean EOFSeen = false__   try { input_stream.readChar()_ input_stream.backup(1)_ }_   catch (java.io.IOException e1) {_      EOFSeen = true__      error_after = curPos <= 1 ? "" : input_stream.GetImage()__      if (curChar == '\n' || curChar == '\r') {_         error_line++__         error_column = 0__      }_      else_         error_column++__   }_   if (!EOFSeen) {_      input_stream.backup(1)__      error_after = curPos <= 1 ? "" : input_stream.GetImage()__   }_   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR)__  }_};get,the,next,token;public,token,get,next,token,token,matched,token,int,cur,pos,0,eofloop,for,try,cur,char,begin,token,catch,java,io,ioexception,e,jjmatched,kind,0,matched,token,jj,fill,token,return,matched,token,jjmatched,kind,0x7fffffff,jjmatched,pos,0,cur,pos,if,jjmatched,kind,0x7fffffff,if,jjmatched,pos,1,cur,pos,backup,cur,pos,jjmatched,pos,1,matched,token,jj,fill,token,return,matched,token,int,get,end,line,int,get,end,column,string,null,boolean,eofseen,false,try,read,char,backup,1,catch,java,io,ioexception,e1,eofseen,true,cur,pos,1,get,image,if,cur,char,n,cur,char,r,0,else,if,eofseen,backup,1,cur,pos,1,get,image,throw,new,token,mgr,error,eofseen,cur,lex,state,cur,char,token,mgr,error
SSPTParserTokenManager -> public Token getNextToken();1479916234;Get the next Token.;public Token getNextToken() _{_  Token matchedToken__  int curPos = 0___  EOFLoop :_  for (__)_  {_   try_   {_      curChar = input_stream.BeginToken()__   }_   catch(java.io.IOException e)_   {_      jjmatchedKind = 0__      matchedToken = jjFillToken()__      return matchedToken__   }__   jjmatchedKind = 0x7fffffff__   jjmatchedPos = 0__   curPos = jjMoveStringLiteralDfa0_0()__   if (jjmatchedKind != 0x7fffffff)_   {_      if (jjmatchedPos + 1 < curPos)_         input_stream.backup(curPos - jjmatchedPos - 1)__         matchedToken = jjFillToken()__         return matchedToken__   }_   int error_line = input_stream.getEndLine()__   int error_column = input_stream.getEndColumn()__   String error_after = null__   boolean EOFSeen = false__   try { input_stream.readChar()_ input_stream.backup(1)_ }_   catch (java.io.IOException e1) {_      EOFSeen = true__      error_after = curPos <= 1 ? "" : input_stream.GetImage()__      if (curChar == '\n' || curChar == '\r') {_         error_line++__         error_column = 0__      }_      else_         error_column++__   }_   if (!EOFSeen) {_      input_stream.backup(1)__      error_after = curPos <= 1 ? "" : input_stream.GetImage()__   }_   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR)__  }_};get,the,next,token;public,token,get,next,token,token,matched,token,int,cur,pos,0,eofloop,for,try,cur,char,begin,token,catch,java,io,ioexception,e,jjmatched,kind,0,matched,token,jj,fill,token,return,matched,token,jjmatched,kind,0x7fffffff,jjmatched,pos,0,cur,pos,if,jjmatched,kind,0x7fffffff,if,jjmatched,pos,1,cur,pos,backup,cur,pos,jjmatched,pos,1,matched,token,jj,fill,token,return,matched,token,int,get,end,line,int,get,end,column,string,null,boolean,eofseen,false,try,read,char,backup,1,catch,java,io,ioexception,e1,eofseen,true,cur,pos,1,get,image,if,cur,char,n,cur,char,r,0,else,if,eofseen,backup,1,cur,pos,1,get,image,throw,new,token,mgr,error,eofseen,cur,lex,state,cur,char,token,mgr,error
SSPTParserTokenManager -> public Token getNextToken();1487683072;Get the next Token.;public Token getNextToken() _{_  Token matchedToken__  int curPos = 0___  EOFLoop :_  for (__)_  {_   try_   {_      curChar = input_stream.BeginToken()__   }_   catch(java.io.IOException e)_   {_      jjmatchedKind = 0__      matchedToken = jjFillToken()__      return matchedToken__   }__   jjmatchedKind = 0x7fffffff__   jjmatchedPos = 0__   curPos = jjMoveStringLiteralDfa0_0()__   if (jjmatchedKind != 0x7fffffff)_   {_      if (jjmatchedPos + 1 < curPos)_         input_stream.backup(curPos - jjmatchedPos - 1)__         matchedToken = jjFillToken()__         return matchedToken__   }_   int error_line = input_stream.getEndLine()__   int error_column = input_stream.getEndColumn()__   String error_after = null__   boolean EOFSeen = false__   try { input_stream.readChar()_ input_stream.backup(1)_ }_   catch (java.io.IOException e1) {_      EOFSeen = true__      error_after = curPos <= 1 ? "" : input_stream.GetImage()__      if (curChar == '\n' || curChar == '\r') {_         error_line++__         error_column = 0__      }_      else_         error_column++__   }_   if (!EOFSeen) {_      input_stream.backup(1)__      error_after = curPos <= 1 ? "" : input_stream.GetImage()__   }_   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR)__  }_};get,the,next,token;public,token,get,next,token,token,matched,token,int,cur,pos,0,eofloop,for,try,cur,char,begin,token,catch,java,io,ioexception,e,jjmatched,kind,0,matched,token,jj,fill,token,return,matched,token,jjmatched,kind,0x7fffffff,jjmatched,pos,0,cur,pos,if,jjmatched,kind,0x7fffffff,if,jjmatched,pos,1,cur,pos,backup,cur,pos,jjmatched,pos,1,matched,token,jj,fill,token,return,matched,token,int,get,end,line,int,get,end,column,string,null,boolean,eofseen,false,try,read,char,backup,1,catch,java,io,ioexception,e1,eofseen,true,cur,pos,1,get,image,if,cur,char,n,cur,char,r,0,else,if,eofseen,backup,1,cur,pos,1,get,image,throw,new,token,mgr,error,eofseen,cur,lex,state,cur,char,token,mgr,error
SSPTParserTokenManager -> public Token getNextToken();1494246926;Get the next Token.;public Token getNextToken() _{_  Token matchedToken__  int curPos = 0___  EOFLoop :_  for (__)_  {_   try_   {_      curChar = input_stream.BeginToken()__   }_   catch(java.io.IOException e)_   {_      jjmatchedKind = 0__      matchedToken = jjFillToken()__      return matchedToken__   }__   jjmatchedKind = 0x7fffffff__   jjmatchedPos = 0__   curPos = jjMoveStringLiteralDfa0_0()__   if (jjmatchedKind != 0x7fffffff)_   {_      if (jjmatchedPos + 1 < curPos)_         input_stream.backup(curPos - jjmatchedPos - 1)__         matchedToken = jjFillToken()__         return matchedToken__   }_   int error_line = input_stream.getEndLine()__   int error_column = input_stream.getEndColumn()__   String error_after = null__   boolean EOFSeen = false__   try { input_stream.readChar()_ input_stream.backup(1)_ }_   catch (java.io.IOException e1) {_      EOFSeen = true__      error_after = curPos <= 1 ? "" : input_stream.GetImage()__      if (curChar == '\n' || curChar == '\r') {_         error_line++__         error_column = 0__      }_      else_         error_column++__   }_   if (!EOFSeen) {_      input_stream.backup(1)__      error_after = curPos <= 1 ? "" : input_stream.GetImage()__   }_   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR)__  }_};get,the,next,token;public,token,get,next,token,token,matched,token,int,cur,pos,0,eofloop,for,try,cur,char,begin,token,catch,java,io,ioexception,e,jjmatched,kind,0,matched,token,jj,fill,token,return,matched,token,jjmatched,kind,0x7fffffff,jjmatched,pos,0,cur,pos,if,jjmatched,kind,0x7fffffff,if,jjmatched,pos,1,cur,pos,backup,cur,pos,jjmatched,pos,1,matched,token,jj,fill,token,return,matched,token,int,get,end,line,int,get,end,column,string,null,boolean,eofseen,false,try,read,char,backup,1,catch,java,io,ioexception,e1,eofseen,true,cur,pos,1,get,image,if,cur,char,n,cur,char,r,0,else,if,eofseen,backup,1,cur,pos,1,get,image,throw,new,token,mgr,error,eofseen,cur,lex,state,cur,char,token,mgr,error
SSPTParserTokenManager -> public Token getNextToken();1497079220;Get the next Token.;public Token getNextToken() _{_  Token matchedToken__  int curPos = 0___  EOFLoop :_  for (__)_  {_   try_   {_      curChar = input_stream.BeginToken()__   }_   catch(java.io.IOException e)_   {_      jjmatchedKind = 0__      matchedToken = jjFillToken()__      return matchedToken__   }__   jjmatchedKind = 0x7fffffff__   jjmatchedPos = 0__   curPos = jjMoveStringLiteralDfa0_0()__   if (jjmatchedKind != 0x7fffffff)_   {_      if (jjmatchedPos + 1 < curPos)_         input_stream.backup(curPos - jjmatchedPos - 1)__         matchedToken = jjFillToken()__         return matchedToken__   }_   int error_line = input_stream.getEndLine()__   int error_column = input_stream.getEndColumn()__   String error_after = null__   boolean EOFSeen = false__   try { input_stream.readChar()_ input_stream.backup(1)_ }_   catch (java.io.IOException e1) {_      EOFSeen = true__      error_after = curPos <= 1 ? "" : input_stream.GetImage()__      if (curChar == '\n' || curChar == '\r') {_         error_line++__         error_column = 0__      }_      else_         error_column++__   }_   if (!EOFSeen) {_      input_stream.backup(1)__      error_after = curPos <= 1 ? "" : input_stream.GetImage()__   }_   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR)__  }_};get,the,next,token;public,token,get,next,token,token,matched,token,int,cur,pos,0,eofloop,for,try,cur,char,begin,token,catch,java,io,ioexception,e,jjmatched,kind,0,matched,token,jj,fill,token,return,matched,token,jjmatched,kind,0x7fffffff,jjmatched,pos,0,cur,pos,if,jjmatched,kind,0x7fffffff,if,jjmatched,pos,1,cur,pos,backup,cur,pos,jjmatched,pos,1,matched,token,jj,fill,token,return,matched,token,int,get,end,line,int,get,end,column,string,null,boolean,eofseen,false,try,read,char,backup,1,catch,java,io,ioexception,e1,eofseen,true,cur,pos,1,get,image,if,cur,char,n,cur,char,r,0,else,if,eofseen,backup,1,cur,pos,1,get,image,throw,new,token,mgr,error,eofseen,cur,lex,state,cur,char,token,mgr,error
SSPTParserTokenManager -> public Token getNextToken();1518162420;Get the next Token.;public Token getNextToken() _{_  Token matchedToken__  int curPos = 0___  EOFLoop :_  for (__)_  {_   try_   {_      curChar = input_stream.BeginToken()__   }_   catch(java.io.IOException e)_   {_      jjmatchedKind = 0__      matchedToken = jjFillToken()__      return matchedToken__   }__   jjmatchedKind = 0x7fffffff__   jjmatchedPos = 0__   curPos = jjMoveStringLiteralDfa0_0()__   if (jjmatchedKind != 0x7fffffff)_   {_      if (jjmatchedPos + 1 < curPos)_         input_stream.backup(curPos - jjmatchedPos - 1)__         matchedToken = jjFillToken()__         return matchedToken__   }_   int error_line = input_stream.getEndLine()__   int error_column = input_stream.getEndColumn()__   String error_after = null__   boolean EOFSeen = false__   try { input_stream.readChar()_ input_stream.backup(1)_ }_   catch (java.io.IOException e1) {_      EOFSeen = true__      error_after = curPos <= 1 ? "" : input_stream.GetImage()__      if (curChar == '\n' || curChar == '\r') {_         error_line++__         error_column = 0__      }_      else_         error_column++__   }_   if (!EOFSeen) {_      input_stream.backup(1)__      error_after = curPos <= 1 ? "" : input_stream.GetImage()__   }_   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR)__  }_};get,the,next,token;public,token,get,next,token,token,matched,token,int,cur,pos,0,eofloop,for,try,cur,char,begin,token,catch,java,io,ioexception,e,jjmatched,kind,0,matched,token,jj,fill,token,return,matched,token,jjmatched,kind,0x7fffffff,jjmatched,pos,0,cur,pos,if,jjmatched,kind,0x7fffffff,if,jjmatched,pos,1,cur,pos,backup,cur,pos,jjmatched,pos,1,matched,token,jj,fill,token,return,matched,token,int,get,end,line,int,get,end,column,string,null,boolean,eofseen,false,try,read,char,backup,1,catch,java,io,ioexception,e1,eofseen,true,cur,pos,1,get,image,if,cur,char,n,cur,char,r,0,else,if,eofseen,backup,1,cur,pos,1,get,image,throw,new,token,mgr,error,eofseen,cur,lex,state,cur,char,token,mgr,error
SSPTParserTokenManager -> public  void setDebugStream(java.io.PrintStream ds);1452335256;Set debug output.;public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds_ };set,debug,output;public,void,set,debug,stream,java,io,print,stream,ds,debug,stream,ds
SSPTParserTokenManager -> public  void setDebugStream(java.io.PrintStream ds);1452843062;Set debug output.;public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds_ };set,debug,output;public,void,set,debug,stream,java,io,print,stream,ds,debug,stream,ds
SSPTParserTokenManager -> public  void setDebugStream(java.io.PrintStream ds);1455884812;Set debug output.;public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds_ };set,debug,output;public,void,set,debug,stream,java,io,print,stream,ds,debug,stream,ds
SSPTParserTokenManager -> public  void setDebugStream(java.io.PrintStream ds);1455886182;Set debug output.;public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds_ };set,debug,output;public,void,set,debug,stream,java,io,print,stream,ds,debug,stream,ds
SSPTParserTokenManager -> public  void setDebugStream(java.io.PrintStream ds);1462116676;Set debug output.;public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds_ };set,debug,output;public,void,set,debug,stream,java,io,print,stream,ds,debug,stream,ds
SSPTParserTokenManager -> public  void setDebugStream(java.io.PrintStream ds);1479916234;Set debug output.;public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds_ };set,debug,output;public,void,set,debug,stream,java,io,print,stream,ds,debug,stream,ds
SSPTParserTokenManager -> public  void setDebugStream(java.io.PrintStream ds);1487683072;Set debug output.;public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds_ };set,debug,output;public,void,set,debug,stream,java,io,print,stream,ds,debug,stream,ds
SSPTParserTokenManager -> public  void setDebugStream(java.io.PrintStream ds);1494246926;Set debug output.;public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds_ };set,debug,output;public,void,set,debug,stream,java,io,print,stream,ds,debug,stream,ds
SSPTParserTokenManager -> public  void setDebugStream(java.io.PrintStream ds);1497079220;Set debug output.;public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds_ };set,debug,output;public,void,set,debug,stream,java,io,print,stream,ds,debug,stream,ds
SSPTParserTokenManager -> public  void setDebugStream(java.io.PrintStream ds);1518162420;Set debug output.;public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds_ };set,debug,output;public,void,set,debug,stream,java,io,print,stream,ds,debug,stream,ds
