commented;modifiers;parameterAmount;loc;comment;code
false;;0;3;;void configureJdbcAggregationRepository() {     repo.setReturnOldExchange(true). }
false;public;0;42;;@Test public void testOperations() {     // Can't get something we have not put in...     Exchange actual = repo.get(context, "missing").     assertEquals(null, actual).     // Store it..     Exchange exchange1 = new DefaultExchange(context).     exchange1.getIn().setBody("counter:1").     actual = repo.add(context, "foo", exchange1).     assertEquals(null, actual).     // Get it back..     actual = repo.get(context, "foo").     assertEquals("counter:1", actual.getIn().getBody()).     // Change it..     Exchange exchange2 = new DefaultExchange(context).     exchange2.getIn().setBody("counter:2").     actual = repo.add(context, "foo", exchange2).     // the old one     assertEquals("counter:1", actual.getIn().getBody()).     // Get it back..     actual = repo.get(context, "foo").     assertEquals("counter:2", actual.getIn().getBody()).     // now remove it     repo.remove(context, "foo", actual).     actual = repo.get(context, "foo").     assertEquals(null, actual).     // add it again     exchange1 = new DefaultExchange(context).     exchange1.getIn().setBody("counter:3").     actual = repo.add(context, "foo", exchange1).     assertEquals(null, actual).     // Get it back..     actual = repo.get(context, "foo").     assertEquals("counter:3", actual.getIn().getBody()). }
