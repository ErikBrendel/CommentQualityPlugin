commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Before public void setUp() throws Exception {     db = new EmbeddedDatabaseBuilder().setType(EmbeddedDatabaseType.DERBY).addScript("sql/createAndPopulateDatabase.sql").build().     super.setUp(). }
false;public;0;6;;@After public void tearDown() throws Exception {     super.tearDown().     db.shutdown(). }
false;public;0;25;;@Test public void testOutputType() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMinimumMessageCount(3).     assertMockEndpointsSatisfied().     List<Exchange> exchanges = mock.getReceivedExchanges().     assertTrue(exchanges.size() >= 3).     ProjectModel row = assertIsInstanceOf(ProjectModel.class, exchanges.get(0).getIn().getBody()).     assertEquals(1, row.getId()).     assertEquals("Camel", row.getProject()).     assertEquals("ASF", row.getLicense()).     ProjectModel row2 = assertIsInstanceOf(ProjectModel.class, exchanges.get(1).getIn().getBody()).     assertEquals(2, row2.getId()).     assertEquals("AMQ", row2.getProject()).     assertEquals("ASF", row2.getLicense()).     ProjectModel row3 = assertIsInstanceOf(ProjectModel.class, exchanges.get(2).getIn().getBody()).     assertEquals(3, row3.getId()).     assertEquals("Linux", row3.getProject()).     assertEquals("XXX", row3.getLicense()). }
false;public;0;7;;@Override public void configure() throws Exception {     getContext().getComponent("sql", SqlComponent.class).setDataSource(db).     from("sql:select * from projects order by id?outputType=SelectList&outputClass=org.apache.camel.component.sql.ProjectModel&consumer.initialDelay=0&consumer.delay=50").to("mock:result"). }
false;protected;0;12;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             getContext().getComponent("sql", SqlComponent.class).setDataSource(db).             from("sql:select * from projects order by id?outputType=SelectList&outputClass=org.apache.camel.component.sql.ProjectModel&consumer.initialDelay=0&consumer.delay=50").to("mock:result").         }     }. }
