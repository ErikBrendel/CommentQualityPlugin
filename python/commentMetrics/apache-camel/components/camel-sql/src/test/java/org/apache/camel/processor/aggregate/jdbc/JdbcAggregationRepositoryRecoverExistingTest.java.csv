commented;modifiers;parameterAmount;loc;comment;code
false;;0;5;;@Override void configureJdbcAggregationRepository() {     repo.setReturnOldExchange(true).     repo.setUseRecovery(true). }
false;public;0;3;;public void configure() { // no routes added by default }
false;protected;0;8;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() {         // no routes added by default         }     }. }
false;public;0;34;;@Test public void testExisting() throws Exception {     repo.start().     // Store it..     Exchange exchange1 = new DefaultExchange(context).     exchange1.getIn().setBody("counter:1").     Exchange actual = repo.add(context, "foo", exchange1).     assertEquals(null, actual).     // Remove it, which makes it in the pre confirm stage     repo.remove(context, "foo", exchange1).     String id = exchange1.getExchangeId().     // stop the repo     repo.stop().     Thread.sleep(1000).     // load the repo again     repo.start().     // Get it back..     actual = repo.get(context, "foo").     assertNull(actual).     // Recover it     actual = repo.recover(context, id).     assertNotNull(actual).     assertEquals("counter:1", actual.getIn().getBody()).     repo.stop(). }
