# id;timestamp;commentText;codeText;commentWords;codeWords
SchematronProcessorTest -> private SchematronProcessor getProcessor(final String schematron, final URIResolver clientResolver);1471266867;Returns schematron processor__@param schematron_@param clientResolver_@return;private SchematronProcessor getProcessor(final String schematron, final URIResolver clientResolver) {_        TransformerFactory factory = new TransformerFactoryImpl()__        factory.setURIResolver(new ClassPathURIResolver(Constants.SCHEMATRON_TEMPLATES_ROOT_DIR, clientResolver))__        Templates rules = TemplatesFactory.newInstance().getTemplates(ClassLoader.getSystemResourceAsStream(schematron), factory)__        return SchematronProcessorFactory.newScehamtronEngine(rules)__    };returns,schematron,processor,param,schematron,param,client,resolver,return;private,schematron,processor,get,processor,final,string,schematron,final,uriresolver,client,resolver,transformer,factory,factory,new,transformer,factory,impl,factory,set,uriresolver,new,class,path,uriresolver,constants,client,resolver,templates,rules,templates,factory,new,instance,get,templates,class,loader,get,system,resource,as,stream,schematron,factory,return,schematron,processor,factory,new,scehamtron,engine,rules
SchematronProcessorTest -> private SchematronProcessor getProcessor(final String schematron, final URIResolver clientResolver);1540108158;Returns schematron processor__@param schematron_@param clientResolver_@return;private SchematronProcessor getProcessor(final String schematron, final URIResolver clientResolver) {_        TransformerFactory factory = new TransformerFactoryImpl()__        factory.setURIResolver(new ClassPathURIResolver(Constants.SCHEMATRON_TEMPLATES_ROOT_DIR, clientResolver))__        Templates rules = TemplatesFactory.newInstance().getTemplates(ClassLoader.getSystemResourceAsStream(schematron), factory)__        return SchematronProcessorFactory.newSchematronEngine(rules)__    };returns,schematron,processor,param,schematron,param,client,resolver,return;private,schematron,processor,get,processor,final,string,schematron,final,uriresolver,client,resolver,transformer,factory,factory,new,transformer,factory,impl,factory,set,uriresolver,new,class,path,uriresolver,constants,client,resolver,templates,rules,templates,factory,new,instance,get,templates,class,loader,get,system,resource,as,stream,schematron,factory,return,schematron,processor,factory,new,schematron,engine,rules
SchematronProcessorTest -> private SchematronProcessor getProcessor(final String schematron);1415211488;Returns schematron processor__@param schematron_@return;private SchematronProcessor getProcessor(final String schematron) {_        Templates rules = TemplatesFactory.newInstance().newTemplates(ClassLoader.getSystemResourceAsStream(schematron))__        return SchematronProcessorFactory.newScehamtronEngine(rules)__    };returns,schematron,processor,param,schematron,return;private,schematron,processor,get,processor,final,string,schematron,templates,rules,templates,factory,new,instance,new,templates,class,loader,get,system,resource,as,stream,schematron,return,schematron,processor,factory,new,scehamtron,engine,rules
SchematronProcessorTest -> private SchematronProcessor getProcessor(final String schematron);1433485017;Returns schematron processor__@param schematron_@return;private SchematronProcessor getProcessor(final String schematron) {_        TransformerFactory factory = new TransformerFactoryImpl()__        factory.setURIResolver(new ClassPathURIResolver(Constants.SCHEMATRON_TEMPLATES_ROOT_DIR))__        Templates rules = TemplatesFactory.newInstance().getTemplates(ClassLoader.getSystemResourceAsStream(schematron), factory)__        return SchematronProcessorFactory.newScehamtronEngine(rules)__    };returns,schematron,processor,param,schematron,return;private,schematron,processor,get,processor,final,string,schematron,transformer,factory,factory,new,transformer,factory,impl,factory,set,uriresolver,new,class,path,uriresolver,constants,templates,rules,templates,factory,new,instance,get,templates,class,loader,get,system,resource,as,stream,schematron,factory,return,schematron,processor,factory,new,scehamtron,engine,rules
