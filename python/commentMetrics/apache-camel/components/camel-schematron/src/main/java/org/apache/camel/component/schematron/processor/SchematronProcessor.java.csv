commented;modifiers;parameterAmount;loc;comment;code
true;public;1;4;/**  * Validates the given XML for given Rules.  *  * @param xml  * @return  */ ;/**  * Validates the given XML for given Rules.  *  * @param xml  * @return  */ public String validate(final String xml) {     final Source source = new SAXSource(reader, new InputSource(IOUtils.toInputStream(xml))).     return validate(source). }
true;public;1;10;/**  * Validates the given XML for given Rules.  *  * @param source  * @return  */ ;/**  * Validates the given XML for given Rules.  *  * @param source  * @return  */ public String validate(Source source) {     try {         final StringWriter writer = new StringWriter().         templates.newTransformer().transform(source, new StreamResult(writer)).         return writer.toString().     } catch (TransformerException e) {         logger.error(e.getMessage()).         throw new SchematronValidationException("Failed to apply Schematron validation transform", e).     } }
