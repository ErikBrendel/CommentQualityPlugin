commented;modifiers;parameterAmount;loc;comment;code
true;public,static;1;8;/**  * Creates an instance of SchematronEngine  *  * @param rules the given schematron rules  * @return an instance of SchematronEngine  */ ;/**  * Creates an instance of SchematronEngine  *  * @param rules the given schematron rules  * @return an instance of SchematronEngine  */ public static SchematronProcessor newSchematronEngine(final Templates rules) {     try {         return new SchematronProcessor(getXMLReader(), rules).     } catch (Exception e) {         LOG.error("Failed to parse the configuration file").         throw new SchematronConfigException(e).     } }
true;private,static;0;8;/**  * Gets XMLReader.  *  * @return instance of XMLReader  * @throws ParserConfigurationException  * @throws SAXException  */ ;/**  * Gets XMLReader.  *  * @return instance of XMLReader  * @throws ParserConfigurationException  * @throws SAXException  */ private static XMLReader getXMLReader() throws ParserConfigurationException, SAXException {     final SAXParserFactory fac = SAXParserFactory.newInstance().     fac.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, Boolean.TRUE).     fac.setValidating(false).     final SAXParser parser = fac.newSAXParser().     XMLReader reader = parser.getXMLReader().     return reader. }
