# id;timestamp;commentText;codeText;commentWords;codeWords
SchematronProducer -> private void setValidationReport(Exchange exchange, String report, String status);1415211488;Sets validation report and status__@param exchange_@param report_@param status;private void setValidationReport(Exchange exchange, String report, String status) {_        _        Map<String, Object> headers = new HashMap<String, Object>()__        headers.put(Constants.VALIDATION_STATUS, status)__        headers.put(Constants.VALIDATION_REPORT, report)__        exchange.getOut().setHeader(Constants.VALIDATION_REPORT, report)__        if (exchange.getPattern().isOutCapable()) {_            exchange.getOut().setHeaders(exchange.getIn().getHeaders())__            exchange.getOut().getHeaders().putAll(headers)__        } else {_            exchange.getIn().getHeaders().putAll(headers)__        }_    };sets,validation,report,and,status,param,exchange,param,report,param,status;private,void,set,validation,report,exchange,exchange,string,report,string,status,map,string,object,headers,new,hash,map,string,object,headers,put,constants,status,headers,put,constants,report,exchange,get,out,set,header,constants,report,if,exchange,get,pattern,is,out,capable,exchange,get,out,set,headers,exchange,get,in,get,headers,exchange,get,out,get,headers,put,all,headers,else,exchange,get,in,get,headers,put,all,headers
SchematronProducer -> private void setValidationReport(Exchange exchange, String report, String status);1426678236;Sets validation report and status__@param exchange_@param report_@param status;private void setValidationReport(Exchange exchange, String report, String status) {_        _        Map<String, Object> headers = new HashMap<String, Object>()__        headers.put(Constants.VALIDATION_STATUS, status)__        headers.put(Constants.VALIDATION_REPORT, report)__        if (exchange.getPattern().isOutCapable()) {_            exchange.getOut().setHeaders(exchange.getIn().getHeaders())__            exchange.getOut().getHeaders().putAll(headers)__        } else {_            exchange.getIn().getHeaders().putAll(headers)__        }_    };sets,validation,report,and,status,param,exchange,param,report,param,status;private,void,set,validation,report,exchange,exchange,string,report,string,status,map,string,object,headers,new,hash,map,string,object,headers,put,constants,status,headers,put,constants,report,if,exchange,get,pattern,is,out,capable,exchange,get,out,set,headers,exchange,get,in,get,headers,exchange,get,out,get,headers,put,all,headers,else,exchange,get,in,get,headers,put,all,headers
SchematronProducer -> private void setValidationReport(Exchange exchange, String report, String status);1471273621;Sets validation report and status__@param exchange_@param report_@param status;private void setValidationReport(Exchange exchange, String report, String status) {_        _        Map<String, Object> headers = new HashMap<String, Object>()__        headers.put(Constants.VALIDATION_STATUS, status)__        headers.put(Constants.VALIDATION_REPORT, report)__        if (exchange.getPattern().isOutCapable()) {_            exchange.getOut().setHeaders(exchange.getIn().getHeaders())__            exchange.getOut().getHeaders().putAll(headers)__        } else {_            exchange.getIn().getHeaders().putAll(headers)__        }_    };sets,validation,report,and,status,param,exchange,param,report,param,status;private,void,set,validation,report,exchange,exchange,string,report,string,status,map,string,object,headers,new,hash,map,string,object,headers,put,constants,status,headers,put,constants,report,if,exchange,get,pattern,is,out,capable,exchange,get,out,set,headers,exchange,get,in,get,headers,exchange,get,out,get,headers,put,all,headers,else,exchange,get,in,get,headers,put,all,headers
SchematronProducer -> private void setValidationReport(Exchange exchange, String report, String status);1524063178;Sets validation report and status__@param exchange_@param report_@param status;private void setValidationReport(Exchange exchange, String report, String status) {_        _        Map<String, Object> headers = new HashMap<>()__        headers.put(Constants.VALIDATION_STATUS, status)__        headers.put(Constants.VALIDATION_REPORT, report)__        if (exchange.getPattern().isOutCapable()) {_            exchange.getOut().setHeaders(exchange.getIn().getHeaders())__            exchange.getOut().getHeaders().putAll(headers)__        } else {_            exchange.getIn().getHeaders().putAll(headers)__        }_    };sets,validation,report,and,status,param,exchange,param,report,param,status;private,void,set,validation,report,exchange,exchange,string,report,string,status,map,string,object,headers,new,hash,map,headers,put,constants,status,headers,put,constants,report,if,exchange,get,pattern,is,out,capable,exchange,get,out,set,headers,exchange,get,in,get,headers,exchange,get,out,get,headers,put,all,headers,else,exchange,get,in,get,headers,put,all,headers
SchematronProducer -> private void setValidationReport(Exchange exchange, String report, String status);1540108158;Sets validation report and status__@param exchange_@param report_@param status;private void setValidationReport(Exchange exchange, String report, String status) {_        _        Map<String, Object> headers = new HashMap<>()__        headers.put(Constants.VALIDATION_STATUS, status)__        headers.put(Constants.VALIDATION_REPORT, report)__        if (exchange.getPattern().isOutCapable()) {_            exchange.getOut().setHeaders(exchange.getIn().getHeaders())__            exchange.getOut().getHeaders().putAll(headers)__        } else {_            exchange.getIn().getHeaders().putAll(headers)__        }_    };sets,validation,report,and,status,param,exchange,param,report,param,status;private,void,set,validation,report,exchange,exchange,string,report,string,status,map,string,object,headers,new,hash,map,headers,put,constants,status,headers,put,constants,report,if,exchange,get,pattern,is,out,capable,exchange,get,out,set,headers,exchange,get,in,get,headers,exchange,get,out,get,headers,put,all,headers,else,exchange,get,in,get,headers,put,all,headers
SchematronProducer -> private void setValidationReport(Exchange exchange, String report, String status);1540108163;Sets validation report and status__@param exchange_@param report_@param status;private void setValidationReport(Exchange exchange, String report, String status) {_        _        Map<String, Object> headers = new HashMap<>()__        headers.put(Constants.VALIDATION_STATUS, status)__        headers.put(Constants.VALIDATION_REPORT, report)__        if (exchange.getPattern().isOutCapable()) {_            exchange.getOut().setHeaders(exchange.getIn().getHeaders())__            exchange.getOut().getHeaders().putAll(headers)__        } else {_            exchange.getIn().getHeaders().putAll(headers)__        }_    };sets,validation,report,and,status,param,exchange,param,report,param,status;private,void,set,validation,report,exchange,exchange,string,report,string,status,map,string,object,headers,new,hash,map,headers,put,constants,status,headers,put,constants,report,if,exchange,get,pattern,is,out,capable,exchange,get,out,set,headers,exchange,get,in,get,headers,exchange,get,out,get,headers,put,all,headers,else,exchange,get,in,get,headers,put,all,headers
SchematronProducer -> private void setValidationReport(Exchange exchange, String report, String status);1543847795;Sets validation report and status__@param exchange_@param report_@param status;private void setValidationReport(Exchange exchange, String report, String status) {_        _        Map<String, Object> headers = new HashMap<>()__        headers.put(Constants.VALIDATION_STATUS, status)__        headers.put(Constants.VALIDATION_REPORT, report)__        if (exchange.getPattern().isOutCapable()) {_            exchange.getOut().setHeaders(exchange.getIn().getHeaders())__            exchange.getOut().getHeaders().putAll(headers)__        } else {_            exchange.getIn().getHeaders().putAll(headers)__        }_    };sets,validation,report,and,status,param,exchange,param,report,param,status;private,void,set,validation,report,exchange,exchange,string,report,string,status,map,string,object,headers,new,hash,map,headers,put,constants,status,headers,put,constants,report,if,exchange,get,pattern,is,out,capable,exchange,get,out,set,headers,exchange,get,in,get,headers,exchange,get,out,get,headers,put,all,headers,else,exchange,get,in,get,headers,put,all,headers
SchematronProducer -> private void setValidationReport(Exchange exchange, String report, String status);1543847942;Sets validation report and status__@param exchange_@param report_@param status;private void setValidationReport(Exchange exchange, String report, String status) {_        _        Map<String, Object> headers = new HashMap<>()__        headers.put(Constants.VALIDATION_STATUS, status)__        headers.put(Constants.VALIDATION_REPORT, report)__        if (exchange.getPattern().isOutCapable()) {_            exchange.getOut().setHeaders(exchange.getIn().getHeaders())__            exchange.getOut().getHeaders().putAll(headers)__        } else {_            exchange.getIn().getHeaders().putAll(headers)__        }_    };sets,validation,report,and,status,param,exchange,param,report,param,status;private,void,set,validation,report,exchange,exchange,string,report,string,status,map,string,object,headers,new,hash,map,headers,put,constants,status,headers,put,constants,report,if,exchange,get,pattern,is,out,capable,exchange,get,out,set,headers,exchange,get,in,get,headers,exchange,get,out,get,headers,put,all,headers,else,exchange,get,in,get,headers,put,all,headers
SchematronProducer -> private void setValidationReport(Exchange exchange, String report, String status);1543911754;Sets validation report and status__@param exchange_@param report_@param status;private void setValidationReport(Exchange exchange, String report, String status) {_        _        Map<String, Object> headers = new HashMap<>()__        headers.put(Constants.VALIDATION_STATUS, status)__        headers.put(Constants.VALIDATION_REPORT, report)__        if (exchange.getPattern().isOutCapable()) {_            exchange.getOut().setHeaders(exchange.getIn().getHeaders())__            exchange.getOut().getHeaders().putAll(headers)__        } else {_            exchange.getIn().getHeaders().putAll(headers)__        }_    };sets,validation,report,and,status,param,exchange,param,report,param,status;private,void,set,validation,report,exchange,exchange,string,report,string,status,map,string,object,headers,new,hash,map,headers,put,constants,status,headers,put,constants,report,if,exchange,get,pattern,is,out,capable,exchange,get,out,set,headers,exchange,get,in,get,headers,exchange,get,out,get,headers,put,all,headers,else,exchange,get,in,get,headers,put,all,headers
SchematronProducer -> public SchematronProducer(final SchematronEndpoint endpoint);1415211488;@param endpoint the schematron endpoint.;public SchematronProducer(final SchematronEndpoint endpoint) {_        super(endpoint)__        this.endpoint = endpoint__    };param,endpoint,the,schematron,endpoint;public,schematron,producer,final,schematron,endpoint,endpoint,super,endpoint,this,endpoint,endpoint
SchematronProducer -> public SchematronProducer(final SchematronEndpoint endpoint);1426678236;@param endpoint the schematron endpoint.;public SchematronProducer(final SchematronEndpoint endpoint) {_        super(endpoint)__        this.endpoint = endpoint__    };param,endpoint,the,schematron,endpoint;public,schematron,producer,final,schematron,endpoint,endpoint,super,endpoint,this,endpoint,endpoint
SchematronProducer -> public SchematronProducer(final SchematronEndpoint endpoint);1471273621;@param endpoint the schematron endpoint.;public SchematronProducer(final SchematronEndpoint endpoint) {_        super(endpoint)__        this.endpoint = endpoint__    };param,endpoint,the,schematron,endpoint;public,schematron,producer,final,schematron,endpoint,endpoint,super,endpoint,this,endpoint,endpoint
SchematronProducer -> public SchematronProducer(final SchematronEndpoint endpoint);1524063178;@param endpoint the schematron endpoint.;public SchematronProducer(final SchematronEndpoint endpoint) {_        super(endpoint)__        this.endpoint = endpoint__    };param,endpoint,the,schematron,endpoint;public,schematron,producer,final,schematron,endpoint,endpoint,super,endpoint,this,endpoint,endpoint
SchematronProducer -> public SchematronProducer(final SchematronEndpoint endpoint);1540108158;@param endpoint the schematron endpoint.;public SchematronProducer(final SchematronEndpoint endpoint) {_        super(endpoint)__        this.endpoint = endpoint__    };param,endpoint,the,schematron,endpoint;public,schematron,producer,final,schematron,endpoint,endpoint,super,endpoint,this,endpoint,endpoint
SchematronProducer -> public SchematronProducer(final SchematronEndpoint endpoint);1540108163;@param endpoint the schematron endpoint.;public SchematronProducer(final SchematronEndpoint endpoint) {_        super(endpoint)__        this.endpoint = endpoint__    };param,endpoint,the,schematron,endpoint;public,schematron,producer,final,schematron,endpoint,endpoint,super,endpoint,this,endpoint,endpoint
SchematronProducer -> public SchematronProducer(final SchematronEndpoint endpoint);1543847795;@param endpoint the schematron endpoint.;public SchematronProducer(final SchematronEndpoint endpoint) {_        super(endpoint)__        this.endpoint = endpoint__    };param,endpoint,the,schematron,endpoint;public,schematron,producer,final,schematron,endpoint,endpoint,super,endpoint,this,endpoint,endpoint
SchematronProducer -> public SchematronProducer(final SchematronEndpoint endpoint);1543847942;@param endpoint the schematron endpoint.;public SchematronProducer(final SchematronEndpoint endpoint) {_        super(endpoint)__        this.endpoint = endpoint__    };param,endpoint,the,schematron,endpoint;public,schematron,producer,final,schematron,endpoint,endpoint,super,endpoint,this,endpoint,endpoint
SchematronProducer -> public SchematronProducer(final SchematronEndpoint endpoint);1543911754;@param endpoint the schematron endpoint.;public SchematronProducer(final SchematronEndpoint endpoint) {_        super(endpoint)__        this.endpoint = endpoint__    };param,endpoint,the,schematron,endpoint;public,schematron,producer,final,schematron,endpoint,endpoint,super,endpoint,this,endpoint,endpoint
SchematronProducer -> private String getValidationStatus(final String report);1415211488;Get validation status, SUCCESS or FAILURE__@param report_@return;private String getValidationStatus(final String report) {__        String status = report.contains(Constants.FAILED_ASSERT) ? Constants.FAILED : Constants.SUCCESS__        if (this.endpoint.isAbort() && Constants.FAILED.equals(status)) {_            throw new SchematronValidationException("Schematron validation failure \n" + report)__        }_        return status__    };get,validation,status,success,or,failure,param,report,return;private,string,get,validation,status,final,string,report,string,status,report,contains,constants,constants,failed,constants,success,if,this,endpoint,is,abort,constants,failed,equals,status,throw,new,schematron,validation,exception,schematron,validation,failure,n,report,return,status
SchematronProducer -> private String getValidationStatus(final String report);1426678236;Get validation status, SUCCESS or FAILURE__@param report_@return;private String getValidationStatus(final String report) {__        String status = report.contains(Constants.FAILED_ASSERT) ? Constants.FAILED : Constants.SUCCESS__        if (this.endpoint.isAbort() && Constants.FAILED.equals(status)) {_            throw new SchematronValidationException("Schematron validation failure \n" + report)__        }_        return status__    };get,validation,status,success,or,failure,param,report,return;private,string,get,validation,status,final,string,report,string,status,report,contains,constants,constants,failed,constants,success,if,this,endpoint,is,abort,constants,failed,equals,status,throw,new,schematron,validation,exception,schematron,validation,failure,n,report,return,status
SchematronProducer -> private String getValidationStatus(final String report);1471273621;Get validation status, SUCCESS or FAILURE__@param report_@return;private String getValidationStatus(final String report) {_        String status = report.contains(Constants.FAILED_ASSERT) ? Constants.FAILED : Constants.SUCCESS__        if (this.endpoint.isAbort() && Constants.FAILED.equals(status)) {_            throw new SchematronValidationException("Schematron validation failure \n" + report)__        }_        return status__    };get,validation,status,success,or,failure,param,report,return;private,string,get,validation,status,final,string,report,string,status,report,contains,constants,constants,failed,constants,success,if,this,endpoint,is,abort,constants,failed,equals,status,throw,new,schematron,validation,exception,schematron,validation,failure,n,report,return,status
SchematronProducer -> private String getValidationStatus(final String report);1524063178;Get validation status, SUCCESS or FAILURE__@param report_@return;private String getValidationStatus(final String report) {_        String status = report.contains(Constants.FAILED_ASSERT) ? Constants.FAILED : Constants.SUCCESS__        if (this.endpoint.isAbort() && Constants.FAILED.equals(status)) {_            throw new SchematronValidationException("Schematron validation failure \n" + report)__        }_        return status__    };get,validation,status,success,or,failure,param,report,return;private,string,get,validation,status,final,string,report,string,status,report,contains,constants,constants,failed,constants,success,if,this,endpoint,is,abort,constants,failed,equals,status,throw,new,schematron,validation,exception,schematron,validation,failure,n,report,return,status
SchematronProducer -> private String getValidationStatus(final String report);1540108158;Get validation status, SUCCESS or FAILURE__@param report_@return;private String getValidationStatus(final String report) {_        String status = report.contains(Constants.FAILED_ASSERT) ? Constants.FAILED : Constants.SUCCESS__        if (this.endpoint.isAbort() && Constants.FAILED.equals(status)) {_            throw new SchematronValidationException("Schematron validation failure \n" + report)__        }_        return status__    };get,validation,status,success,or,failure,param,report,return;private,string,get,validation,status,final,string,report,string,status,report,contains,constants,constants,failed,constants,success,if,this,endpoint,is,abort,constants,failed,equals,status,throw,new,schematron,validation,exception,schematron,validation,failure,n,report,return,status
SchematronProducer -> private String getValidationStatus(final String report);1540108163;Get validation status, SUCCESS or FAILURE__@param report_@return;private String getValidationStatus(final String report) {_        String status = report.contains(Constants.FAILED_ASSERT) ? Constants.FAILED : Constants.SUCCESS__        if (this.endpoint.isAbort() && Constants.FAILED.equals(status)) {_            throw new SchematronValidationException("Schematron validation failure \n" + report)__        }_        return status__    };get,validation,status,success,or,failure,param,report,return;private,string,get,validation,status,final,string,report,string,status,report,contains,constants,constants,failed,constants,success,if,this,endpoint,is,abort,constants,failed,equals,status,throw,new,schematron,validation,exception,schematron,validation,failure,n,report,return,status
SchematronProducer -> private String getValidationStatus(final String report);1543847795;Get validation status, SUCCESS or FAILURE__@param report_@return;private String getValidationStatus(final String report) {_        String status = report.contains(Constants.FAILED_ASSERT) ? Constants.FAILED : Constants.SUCCESS__        if (this.endpoint.isAbort() && Constants.FAILED.equals(status)) {_            throw new SchematronValidationException("Schematron validation failure \n" + report)__        }_        return status__    };get,validation,status,success,or,failure,param,report,return;private,string,get,validation,status,final,string,report,string,status,report,contains,constants,constants,failed,constants,success,if,this,endpoint,is,abort,constants,failed,equals,status,throw,new,schematron,validation,exception,schematron,validation,failure,n,report,return,status
SchematronProducer -> private String getValidationStatus(final String report);1543847942;Get validation status, SUCCESS or FAILURE__@param report_@return;private String getValidationStatus(final String report) {_        String status = report.contains(Constants.FAILED_ASSERT) ? Constants.FAILED : Constants.SUCCESS__        if (this.endpoint.isAbort() && Constants.FAILED.equals(status)) {_            throw new SchematronValidationException("Schematron validation failure \n" + report)__        }_        return status__    };get,validation,status,success,or,failure,param,report,return;private,string,get,validation,status,final,string,report,string,status,report,contains,constants,constants,failed,constants,success,if,this,endpoint,is,abort,constants,failed,equals,status,throw,new,schematron,validation,exception,schematron,validation,failure,n,report,return,status
SchematronProducer -> private String getValidationStatus(final String report);1543911754;Get validation status, SUCCESS or FAILURE__@param report_@return;private String getValidationStatus(final String report) {_        String status = report.contains(Constants.FAILED_ASSERT) ? Constants.FAILED : Constants.SUCCESS__        if (this.endpoint.isAbort() && Constants.FAILED.equals(status)) {_            throw new SchematronValidationException("Schematron validation failure \n" + report)__        }_        return status__    };get,validation,status,success,or,failure,param,report,return;private,string,get,validation,status,final,string,report,string,status,report,contains,constants,constants,failed,constants,success,if,this,endpoint,is,abort,constants,failed,equals,status,throw,new,schematron,validation,exception,schematron,validation,failure,n,report,return,status
SchematronProducer -> public void process(Exchange exchange) throws Exception;1415211488;Processes the payload. Validates the XML using the SchematronEngine__@param exchange_@throws Exception;public void process(Exchange exchange) throws Exception {__        String payload = exchange.getIn().getBody(String.class)__        logger.debug("Applying schematron validation on payload: {}", payload)__        String report = SchematronProcessorFactory.newScehamtronEngine(endpoint.getRules()).validate(payload)__        logger.debug("Schematron validation report \n {}", report)__        String status = getValidationStatus(report)__        logger.info("Schematron validation status : {}", status)__        setValidationReport(exchange, report, status)__    };processes,the,payload,validates,the,xml,using,the,schematron,engine,param,exchange,throws,exception;public,void,process,exchange,exchange,throws,exception,string,payload,exchange,get,in,get,body,string,class,logger,debug,applying,schematron,validation,on,payload,payload,string,report,schematron,processor,factory,new,scehamtron,engine,endpoint,get,rules,validate,payload,logger,debug,schematron,validation,report,n,report,string,status,get,validation,status,report,logger,info,schematron,validation,status,status,set,validation,report,exchange,report,status
SchematronProducer -> public void process(Exchange exchange) throws Exception;1426678236;Processes the payload. Validates the XML using the SchematronEngine__@param exchange_@throws Exception;public void process(Exchange exchange) throws Exception {__        String payload = exchange.getIn().getBody(String.class)__        logger.debug("Applying schematron validation on payload: {}", payload)__        String report = SchematronProcessorFactory.newScehamtronEngine(endpoint.getRules()).validate(payload)__        logger.debug("Schematron validation report \n {}", report)__        String status = getValidationStatus(report)__        logger.info("Schematron validation status : {}", status)__        setValidationReport(exchange, report, status)__    };processes,the,payload,validates,the,xml,using,the,schematron,engine,param,exchange,throws,exception;public,void,process,exchange,exchange,throws,exception,string,payload,exchange,get,in,get,body,string,class,logger,debug,applying,schematron,validation,on,payload,payload,string,report,schematron,processor,factory,new,scehamtron,engine,endpoint,get,rules,validate,payload,logger,debug,schematron,validation,report,n,report,string,status,get,validation,status,report,logger,info,schematron,validation,status,status,set,validation,report,exchange,report,status
SchematronProducer -> public void process(Exchange exchange) throws Exception;1471273621;Processes the payload. Validates the XML using the SchematronEngine__@param exchange_@throws Exception;public void process(Exchange exchange) throws Exception {_        String payload = exchange.getIn().getBody(String.class)__        logger.debug("Applying schematron validation on payload: {}", payload)__        String report = SchematronProcessorFactory.newScehamtronEngine(endpoint.getRules()).validate(payload)__        logger.debug("Schematron validation report \n {}", report)__        String status = getValidationStatus(report)__        logger.info("Schematron validation status : {}", status)__        setValidationReport(exchange, report, status)__    };processes,the,payload,validates,the,xml,using,the,schematron,engine,param,exchange,throws,exception;public,void,process,exchange,exchange,throws,exception,string,payload,exchange,get,in,get,body,string,class,logger,debug,applying,schematron,validation,on,payload,payload,string,report,schematron,processor,factory,new,scehamtron,engine,endpoint,get,rules,validate,payload,logger,debug,schematron,validation,report,n,report,string,status,get,validation,status,report,logger,info,schematron,validation,status,status,set,validation,report,exchange,report,status
SchematronProducer -> public void process(Exchange exchange) throws Exception;1524063178;Processes the payload. Validates the XML using the SchematronEngine__@param exchange_@throws Exception;public void process(Exchange exchange) throws Exception {_        String payload = exchange.getIn().getBody(String.class)__        logger.debug("Applying schematron validation on payload: {}", payload)__        String report = SchematronProcessorFactory.newScehamtronEngine(endpoint.getRules()).validate(payload)__        logger.debug("Schematron validation report \n {}", report)__        String status = getValidationStatus(report)__        logger.info("Schematron validation status : {}", status)__        setValidationReport(exchange, report, status)__    };processes,the,payload,validates,the,xml,using,the,schematron,engine,param,exchange,throws,exception;public,void,process,exchange,exchange,throws,exception,string,payload,exchange,get,in,get,body,string,class,logger,debug,applying,schematron,validation,on,payload,payload,string,report,schematron,processor,factory,new,scehamtron,engine,endpoint,get,rules,validate,payload,logger,debug,schematron,validation,report,n,report,string,status,get,validation,status,report,logger,info,schematron,validation,status,status,set,validation,report,exchange,report,status
SchematronProducer -> public void process(Exchange exchange) throws Exception;1540108158;Processes the payload. Validates the XML using the SchematronEngine__@param exchange_@throws Exception;public void process(Exchange exchange) throws Exception {_        String payload = exchange.getIn().getBody(String.class)__        logger.debug("Applying schematron validation on payload: {}", payload)__        String report = SchematronProcessorFactory.newSchematronEngine(endpoint.getRules()).validate(payload)__        logger.debug("Schematron validation report \n {}", report)__        String status = getValidationStatus(report)__        logger.info("Schematron validation status : {}", status)__        setValidationReport(exchange, report, status)__    };processes,the,payload,validates,the,xml,using,the,schematron,engine,param,exchange,throws,exception;public,void,process,exchange,exchange,throws,exception,string,payload,exchange,get,in,get,body,string,class,logger,debug,applying,schematron,validation,on,payload,payload,string,report,schematron,processor,factory,new,schematron,engine,endpoint,get,rules,validate,payload,logger,debug,schematron,validation,report,n,report,string,status,get,validation,status,report,logger,info,schematron,validation,status,status,set,validation,report,exchange,report,status
SchematronProducer -> public void process(Exchange exchange) throws Exception;1540108163;Processes the payload. Validates the XML using the SchematronEngine__@param exchange_@throws Exception;public void process(Exchange exchange) throws Exception {_        String payload = exchange.getIn().getBody(String.class)__        logger.debug("Applying schematron validation on payload: {}", payload)__        String report = SchematronProcessorFactory.newSchematronEngine(endpoint.getRules()).validate(payload)__        logger.debug("Schematron validation report \n {}", report)__        String status = getValidationStatus(report)__        logger.info("Schematron validation status : {}", status)__        setValidationReport(exchange, report, status)__    };processes,the,payload,validates,the,xml,using,the,schematron,engine,param,exchange,throws,exception;public,void,process,exchange,exchange,throws,exception,string,payload,exchange,get,in,get,body,string,class,logger,debug,applying,schematron,validation,on,payload,payload,string,report,schematron,processor,factory,new,schematron,engine,endpoint,get,rules,validate,payload,logger,debug,schematron,validation,report,n,report,string,status,get,validation,status,report,logger,info,schematron,validation,status,status,set,validation,report,exchange,report,status
SchematronProducer -> public void process(Exchange exchange) throws Exception;1543847795;Processes the payload. Validates the XML using the SchematronEngine__@param exchange_@throws Exception;public void process(Exchange exchange) throws Exception {_        final SchematronProcessor schematronProcessor = SchematronProcessorFactory.newScehamtronEngine(endpoint.getRules())__        final Object payload = exchange.getIn().getBody()__        final String report___        if (payload instanceof Source) {_            logger.debug("Applying schematron validation on payload: {}", payload)__            report = schematronProcessor.validate((Source) payload)__        } else if (payload instanceof String) {_            logger.debug("Applying schematron validation on payload: {}", payload)__            report = schematronProcessor.validate((String) payload)__        } else {_            String stringPayload = exchange.getIn().getBody(String.class)__            logger.debug("Applying schematron validation on payload: {}", stringPayload)__            report = schematronProcessor.validate(stringPayload)__        }__        logger.debug("Schematron validation report \n {}", report)__        String status = getValidationStatus(report)__        logger.info("Schematron validation status : {}", status)__        setValidationReport(exchange, report, status)__    };processes,the,payload,validates,the,xml,using,the,schematron,engine,param,exchange,throws,exception;public,void,process,exchange,exchange,throws,exception,final,schematron,processor,schematron,processor,schematron,processor,factory,new,scehamtron,engine,endpoint,get,rules,final,object,payload,exchange,get,in,get,body,final,string,report,if,payload,instanceof,source,logger,debug,applying,schematron,validation,on,payload,payload,report,schematron,processor,validate,source,payload,else,if,payload,instanceof,string,logger,debug,applying,schematron,validation,on,payload,payload,report,schematron,processor,validate,string,payload,else,string,string,payload,exchange,get,in,get,body,string,class,logger,debug,applying,schematron,validation,on,payload,string,payload,report,schematron,processor,validate,string,payload,logger,debug,schematron,validation,report,n,report,string,status,get,validation,status,report,logger,info,schematron,validation,status,status,set,validation,report,exchange,report,status
SchematronProducer -> public void process(Exchange exchange) throws Exception;1543847942;Processes the payload. Validates the XML using the SchematronEngine__@param exchange_@throws Exception;public void process(Exchange exchange) throws Exception {_        final SchematronProcessor schematronProcessor = SchematronProcessorFactory.newSchematronEngine(endpoint.getRules())__        final Object payload = exchange.getIn().getBody()__        final String report___        if (payload instanceof Source) {_            logger.debug("Applying schematron validation on payload: {}", payload)__            report = schematronProcessor.validate((Source) payload)__        } else if (payload instanceof String) {_            logger.debug("Applying schematron validation on payload: {}", payload)__            report = schematronProcessor.validate((String) payload)__        } else {_            String stringPayload = exchange.getIn().getBody(String.class)__            logger.debug("Applying schematron validation on payload: {}", stringPayload)__            report = schematronProcessor.validate(stringPayload)__        }__        logger.debug("Schematron validation report \n {}", report)__        String status = getValidationStatus(report)__        logger.info("Schematron validation status : {}", status)__        setValidationReport(exchange, report, status)__    };processes,the,payload,validates,the,xml,using,the,schematron,engine,param,exchange,throws,exception;public,void,process,exchange,exchange,throws,exception,final,schematron,processor,schematron,processor,schematron,processor,factory,new,schematron,engine,endpoint,get,rules,final,object,payload,exchange,get,in,get,body,final,string,report,if,payload,instanceof,source,logger,debug,applying,schematron,validation,on,payload,payload,report,schematron,processor,validate,source,payload,else,if,payload,instanceof,string,logger,debug,applying,schematron,validation,on,payload,payload,report,schematron,processor,validate,string,payload,else,string,string,payload,exchange,get,in,get,body,string,class,logger,debug,applying,schematron,validation,on,payload,string,payload,report,schematron,processor,validate,string,payload,logger,debug,schematron,validation,report,n,report,string,status,get,validation,status,report,logger,info,schematron,validation,status,status,set,validation,report,exchange,report,status
SchematronProducer -> public void process(Exchange exchange) throws Exception;1543911754;Processes the payload. Validates the XML using the SchematronEngine__@param exchange_@throws Exception;public void process(Exchange exchange) throws Exception {_        final SchematronProcessor schematronProcessor = SchematronProcessorFactory.newSchematronEngine(endpoint.getRules())__        final Object payload = exchange.getIn().getBody()__        final String report___        if (payload instanceof Source) {_            logger.debug("Applying schematron validation on payload: {}", payload)__            report = schematronProcessor.validate((Source)payload)__        } else if (payload instanceof String) {_            logger.debug("Applying schematron validation on payload: {}", payload)__            report = schematronProcessor.validate((String)payload)__        } else {_            String stringPayload = exchange.getIn().getBody(String.class)__            logger.debug("Applying schematron validation on payload: {}", stringPayload)__            report = schematronProcessor.validate(stringPayload)__        }__        logger.debug("Schematron validation report \n {}", report)__        String status = getValidationStatus(report)__        logger.info("Schematron validation status : {}", status)__        setValidationReport(exchange, report, status)__    };processes,the,payload,validates,the,xml,using,the,schematron,engine,param,exchange,throws,exception;public,void,process,exchange,exchange,throws,exception,final,schematron,processor,schematron,processor,schematron,processor,factory,new,schematron,engine,endpoint,get,rules,final,object,payload,exchange,get,in,get,body,final,string,report,if,payload,instanceof,source,logger,debug,applying,schematron,validation,on,payload,payload,report,schematron,processor,validate,source,payload,else,if,payload,instanceof,string,logger,debug,applying,schematron,validation,on,payload,payload,report,schematron,processor,validate,string,payload,else,string,string,payload,exchange,get,in,get,body,string,class,logger,debug,applying,schematron,validation,on,payload,string,payload,report,schematron,processor,validate,string,payload,logger,debug,schematron,validation,report,n,report,string,status,get,validation,status,report,logger,info,schematron,validation,status,status,set,validation,report,exchange,report,status
