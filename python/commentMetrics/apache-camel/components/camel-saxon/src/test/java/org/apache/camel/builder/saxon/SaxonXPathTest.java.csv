commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;@Test public void testSaxonXPath() throws Exception {     getMockEndpoint("mock:london").expectedMessageCount(1).     getMockEndpoint("mock:paris").expectedMessageCount(1).     getMockEndpoint("mock:other").expectedMessageCount(1).     template.sendBody("direct:start", "<person><city>London</city></person>").     template.sendBody("direct:start", "<person><city>Berlin</city></person>").     template.sendBody("direct:start", "<person><city>Paris</city></person>").     assertMockEndpointsSatisfied(). }
false;public;0;11;;@Override public void configure() throws Exception {     from("direct:start").choice().when().xpath("person/city = 'London'").to("mock:london").when().xpath("person/city = 'Paris'").to("mock:paris").otherwise().to("mock:other"). }
false;protected;0;16;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").choice().when().xpath("person/city = 'London'").to("mock:london").when().xpath("person/city = 'Paris'").to("mock:paris").otherwise().to("mock:other").         }     }. }
