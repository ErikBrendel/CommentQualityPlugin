commented;modifiers;parameterAmount;loc;comment;code
false;public;0;20;;@Test public void testSendMessageAndHaveItTransformed() throws Exception {     MockEndpoint endpoint = getMockEndpoint("mock:result").     endpoint.expectedMessageCount(1).     template.sendBody("direct:start", "<mail><subject>Hey</subject><body>Hello world!</body></mail>").     assertMockEndpointsSatisfied().     List<Exchange> list = endpoint.getReceivedExchanges().     Exchange exchange = list.get(0).     String xml = exchange.getIn().getBody(String.class).     assertNotNull("The transformed XML should not be null", xml).     assertEquals("transformed", "<transformed subject=\"Hey\"><mail><subject>Hey</subject>" + "<body>Hello world!</body></mail></transformed>", xml).     TestBean bean = getMandatoryBean(TestBean.class, "testBean").     assertEquals("bean.subject", "Hey", bean.getSubject()). }
false;protected;0;3;;protected ClassPathXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/component/xquery/camelContext.xml"). }
