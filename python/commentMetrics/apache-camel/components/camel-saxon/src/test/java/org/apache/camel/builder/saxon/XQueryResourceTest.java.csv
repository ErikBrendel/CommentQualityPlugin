commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void testXPathResource() throws Exception {     getMockEndpoint("mock:result").expectedBodiesReceived("London").     template.sendBody("direct:start", "<person name='James' city='London'/>").     assertMockEndpointsSatisfied(). }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").transform().xquery("resource:classpath:myxquery.txt", String.class).to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").transform().xquery("resource:classpath:myxquery.txt", String.class).to("mock:result").         }     }. }
