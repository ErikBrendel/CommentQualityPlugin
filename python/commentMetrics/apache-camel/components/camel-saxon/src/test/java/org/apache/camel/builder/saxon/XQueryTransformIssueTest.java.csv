commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testTransform() throws Exception {     String data = IOHelper.loadText(new FileInputStream("src/test/resources/myinput.xml")).     getMockEndpoint("mock:result").expectedBodiesReceived("123TestConcat").     template.sendBody("direct:start", data).     assertMockEndpointsSatisfied(). }
false;public;0;7;;@Override public void configure() throws Exception {     from("direct:start").transform().xquery("concat(/Envelope/Body/getEmployee/EmpId/text(),\"TestConcat\")", String.class).to("log:info").to("mock:result"). }
false;protected;0;12;;@Override protected RoutesBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").transform().xquery("concat(/Envelope/Body/getEmployee/EmpId/text(),\"TestConcat\")", String.class).to("log:info").to("mock:result").         }     }. }
