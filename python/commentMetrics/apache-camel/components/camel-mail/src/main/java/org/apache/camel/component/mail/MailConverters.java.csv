# id;timestamp;commentText;codeText;commentWords;codeWords
MailConverters -> @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, TypeConverterRegistry registry) throws MessagingException, IOException;1469773139;Converts a JavaMail multipart into a body of any type a String can be_converted into. The content-type of the part must be text based.;@FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, TypeConverterRegistry registry) throws MessagingException, IOException {_        if (Multipart.class.isAssignableFrom(value.getClass())) {_            TypeConverter tc = registry.lookup(type, String.class)__            if (tc != null) {_                String s = toString((Multipart)value)__                if (s != null) {_                    return tc.convertTo(type, s)__                }_            }_        }_        return null__    };converts,a,java,mail,multipart,into,a,body,of,any,type,a,string,can,be,converted,into,the,content,type,of,the,part,must,be,text,based;fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,throws,messaging,exception,ioexception,if,multipart,class,is,assignable,from,value,get,class,type,converter,tc,registry,lookup,type,string,class,if,tc,null,string,s,to,string,multipart,value,if,s,null,return,tc,convert,to,type,s,return,null
MailConverters -> @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, TypeConverterRegistry registry) throws MessagingException, IOException;1473411242;Converts a JavaMail multipart into a body of any type a String can be_converted into. The content-type of the part must be text based.;@FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, TypeConverterRegistry registry) throws MessagingException, IOException {_        if (Multipart.class.isAssignableFrom(value.getClass())) {_            TypeConverter tc = registry.lookup(type, String.class)__            if (tc != null) {_                String s = toString((Multipart)value)__                if (s != null) {_                    return tc.convertTo(type, s)__                }_            }_        }_        return null__    };converts,a,java,mail,multipart,into,a,body,of,any,type,a,string,can,be,converted,into,the,content,type,of,the,part,must,be,text,based;fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,throws,messaging,exception,ioexception,if,multipart,class,is,assignable,from,value,get,class,type,converter,tc,registry,lookup,type,string,class,if,tc,null,string,s,to,string,multipart,value,if,s,null,return,tc,convert,to,type,s,return,null
MailConverters -> @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, TypeConverterRegistry registry) throws MessagingException, IOException;1491464905;Converts a JavaMail multipart into a body of any type a String can be_converted into. The content-type of the part must be text based.;@FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, TypeConverterRegistry registry) throws MessagingException, IOException {_        if (Multipart.class.isAssignableFrom(value.getClass())) {_            TypeConverter tc = registry.lookup(type, String.class)__            if (tc != null) {_                String s = toString((Multipart)value)__                if (s != null) {_                    return tc.convertTo(type, s)__                }_            }_        }_        return null__    };converts,a,java,mail,multipart,into,a,body,of,any,type,a,string,can,be,converted,into,the,content,type,of,the,part,must,be,text,based;fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,throws,messaging,exception,ioexception,if,multipart,class,is,assignable,from,value,get,class,type,converter,tc,registry,lookup,type,string,class,if,tc,null,string,s,to,string,multipart,value,if,s,null,return,tc,convert,to,type,s,return,null
MailConverters -> @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, TypeConverterRegistry registry) throws MessagingException, IOException;1524063106;Converts a JavaMail multipart into a body of any type a String can be_converted into. The content-type of the part must be text based.;@FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, TypeConverterRegistry registry) throws MessagingException, IOException {_        if (Multipart.class.isAssignableFrom(value.getClass())) {_            TypeConverter tc = registry.lookup(type, String.class)__            if (tc != null) {_                String s = toString((Multipart)value)__                if (s != null) {_                    return tc.convertTo(type, s)__                }_            }_        }_        return null__    };converts,a,java,mail,multipart,into,a,body,of,any,type,a,string,can,be,converted,into,the,content,type,of,the,part,must,be,text,based;fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,throws,messaging,exception,ioexception,if,multipart,class,is,assignable,from,value,get,class,type,converter,tc,registry,lookup,type,string,class,if,tc,null,string,s,to,string,multipart,value,if,s,null,return,tc,convert,to,type,s,return,null
MailConverters -> @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, TypeConverterRegistry registry) throws MessagingException, IOException;1533640471;Converts a JavaMail multipart into a body of any type a String can be_converted into. The content-type of the part must be text based.;@FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, TypeConverterRegistry registry) throws MessagingException, IOException {_        if (Multipart.class.isAssignableFrom(value.getClass())) {_            TypeConverter tc = registry.lookup(type, String.class)__            if (tc != null) {_                String s = toString((Multipart)value)__                if (s != null) {_                    return tc.convertTo(type, s)__                }_            }_        }_        return null__    };converts,a,java,mail,multipart,into,a,body,of,any,type,a,string,can,be,converted,into,the,content,type,of,the,part,must,be,text,based;fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,throws,messaging,exception,ioexception,if,multipart,class,is,assignable,from,value,get,class,type,converter,tc,registry,lookup,type,string,class,if,tc,null,string,s,to,string,multipart,value,if,s,null,return,tc,convert,to,type,s,return,null
MailConverters -> @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, TypeConverterRegistry registry) throws MessagingException, IOException;1537204343;Converts a JavaMail multipart into a body of any type a String can be_converted into. The content-type of the part must be text based.;@FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, TypeConverterRegistry registry) throws MessagingException, IOException {_        if (Multipart.class.isAssignableFrom(value.getClass())) {_            TypeConverter tc = registry.lookup(type, String.class)__            if (tc != null) {_                String s = toString((Multipart)value)__                if (s != null) {_                    return tc.convertTo(type, s)__                }_            }_        }_        return null__    };converts,a,java,mail,multipart,into,a,body,of,any,type,a,string,can,be,converted,into,the,content,type,of,the,part,must,be,text,based;fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,throws,messaging,exception,ioexception,if,multipart,class,is,assignable,from,value,get,class,type,converter,tc,registry,lookup,type,string,class,if,tc,null,string,s,to,string,multipart,value,if,s,null,return,tc,convert,to,type,s,return,null
MailConverters -> @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, TypeConverterRegistry registry) throws MessagingException, IOException;1540108161;Converts a JavaMail multipart into a body of any type a String can be_converted into. The content-type of the part must be text based.;@FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, TypeConverterRegistry registry) throws MessagingException, IOException {_        if (Multipart.class.isAssignableFrom(value.getClass())) {_            TypeConverter tc = registry.lookup(type, String.class)__            if (tc != null) {_                String s = toString((Multipart)value)__                if (s != null) {_                    return tc.convertTo(type, s)__                }_            }_        }_        return null__    };converts,a,java,mail,multipart,into,a,body,of,any,type,a,string,can,be,converted,into,the,content,type,of,the,part,must,be,text,based;fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,throws,messaging,exception,ioexception,if,multipart,class,is,assignable,from,value,get,class,type,converter,tc,registry,lookup,type,string,class,if,tc,null,string,s,to,string,multipart,value,if,s,null,return,tc,convert,to,type,s,return,null
MailConverters -> @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, TypeConverterRegistry registry) throws MessagingException, IOException;1548332772;Converts a JavaMail multipart into a body of any type a String can be_converted into. The content-type of the part must be text based.;@FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, TypeConverterRegistry registry) throws MessagingException, IOException {_        if (Multipart.class.isAssignableFrom(value.getClass())) {_            TypeConverter tc = registry.lookup(type, String.class)__            if (tc != null) {_                String s = toString((Multipart)value)__                if (s != null) {_                    return tc.convertTo(type, s)__                }_            }_        }_        return null__    };converts,a,java,mail,multipart,into,a,body,of,any,type,a,string,can,be,converted,into,the,content,type,of,the,part,must,be,text,based;fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,throws,messaging,exception,ioexception,if,multipart,class,is,assignable,from,value,get,class,type,converter,tc,registry,lookup,type,string,class,if,tc,null,string,s,to,string,multipart,value,if,s,null,return,tc,convert,to,type,s,return,null
MailConverters -> @Converter     public static InputStream toInputStream(Multipart multipart, Exchange exchange) throws IOException, MessagingException;1469773139;Converts the given JavaMail multipart to a InputStream body, where the content-type of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static InputStream toInputStream(Multipart multipart, Exchange exchange) throws IOException, MessagingException {_        String s = toString(multipart)__        if (s == null) {_            return null__        }_        return IOConverter.toInputStream(s, exchange)__    };converts,the,given,java,mail,multipart,to,a,input,stream,body,where,the,content,type,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,input,stream,to,input,stream,multipart,multipart,exchange,exchange,throws,ioexception,messaging,exception,string,s,to,string,multipart,if,s,null,return,null,return,ioconverter,to,input,stream,s,exchange
MailConverters -> @Converter     public static InputStream toInputStream(Multipart multipart, Exchange exchange) throws IOException, MessagingException;1473411242;Converts the given JavaMail multipart to a InputStream body, where the content-type of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static InputStream toInputStream(Multipart multipart, Exchange exchange) throws IOException, MessagingException {_        String s = toString(multipart)__        if (s == null) {_            return null__        }_        return IOConverter.toInputStream(s, exchange)__    };converts,the,given,java,mail,multipart,to,a,input,stream,body,where,the,content,type,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,input,stream,to,input,stream,multipart,multipart,exchange,exchange,throws,ioexception,messaging,exception,string,s,to,string,multipart,if,s,null,return,null,return,ioconverter,to,input,stream,s,exchange
MailConverters -> @Converter     public static InputStream toInputStream(Multipart multipart, Exchange exchange) throws IOException, MessagingException;1491464905;Converts the given JavaMail multipart to a InputStream body, where the content-type of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static InputStream toInputStream(Multipart multipart, Exchange exchange) throws IOException, MessagingException {_        String s = toString(multipart)__        if (s == null) {_            return null__        }_        return IOConverter.toInputStream(s, exchange)__    };converts,the,given,java,mail,multipart,to,a,input,stream,body,where,the,content,type,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,input,stream,to,input,stream,multipart,multipart,exchange,exchange,throws,ioexception,messaging,exception,string,s,to,string,multipart,if,s,null,return,null,return,ioconverter,to,input,stream,s,exchange
MailConverters -> @Converter     public static InputStream toInputStream(Multipart multipart, Exchange exchange) throws IOException, MessagingException;1524063106;Converts the given JavaMail multipart to a InputStream body, where the content-type of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static InputStream toInputStream(Multipart multipart, Exchange exchange) throws IOException, MessagingException {_        String s = toString(multipart)__        if (s == null) {_            return null__        }_        return IOConverter.toInputStream(s, exchange)__    };converts,the,given,java,mail,multipart,to,a,input,stream,body,where,the,content,type,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,input,stream,to,input,stream,multipart,multipart,exchange,exchange,throws,ioexception,messaging,exception,string,s,to,string,multipart,if,s,null,return,null,return,ioconverter,to,input,stream,s,exchange
MailConverters -> @Converter     public static InputStream toInputStream(Multipart multipart, Exchange exchange) throws IOException, MessagingException;1533640471;Converts the given JavaMail multipart to a InputStream body, where the content-type of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static InputStream toInputStream(Multipart multipart, Exchange exchange) throws IOException, MessagingException {_        String s = toString(multipart)__        if (s == null) {_            return null__        }_        return IOConverter.toInputStream(s, exchange)__    };converts,the,given,java,mail,multipart,to,a,input,stream,body,where,the,content,type,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,input,stream,to,input,stream,multipart,multipart,exchange,exchange,throws,ioexception,messaging,exception,string,s,to,string,multipart,if,s,null,return,null,return,ioconverter,to,input,stream,s,exchange
MailConverters -> @Converter     public static InputStream toInputStream(Multipart multipart, Exchange exchange) throws IOException, MessagingException;1537204343;Converts the given JavaMail multipart to a InputStream body, where the content-type of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static InputStream toInputStream(Multipart multipart, Exchange exchange) throws IOException, MessagingException {_        String s = toString(multipart)__        if (s == null) {_            return null__        }_        return IOConverter.toInputStream(s, exchange)__    };converts,the,given,java,mail,multipart,to,a,input,stream,body,where,the,content,type,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,input,stream,to,input,stream,multipart,multipart,exchange,exchange,throws,ioexception,messaging,exception,string,s,to,string,multipart,if,s,null,return,null,return,ioconverter,to,input,stream,s,exchange
MailConverters -> @Converter     public static InputStream toInputStream(Multipart multipart, Exchange exchange) throws IOException, MessagingException;1540108161;Converts the given JavaMail multipart to a InputStream body, where the content-type of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static InputStream toInputStream(Multipart multipart, Exchange exchange) throws IOException, MessagingException {_        String s = toString(multipart)__        if (s == null) {_            return null__        }_        return IOConverter.toInputStream(s, exchange)__    };converts,the,given,java,mail,multipart,to,a,input,stream,body,where,the,content,type,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,input,stream,to,input,stream,multipart,multipart,exchange,exchange,throws,ioexception,messaging,exception,string,s,to,string,multipart,if,s,null,return,null,return,ioconverter,to,input,stream,s,exchange
MailConverters -> @Converter     public static InputStream toInputStream(Multipart multipart, Exchange exchange) throws IOException, MessagingException;1548332772;Converts the given JavaMail multipart to a InputStream body, where the content-type of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static InputStream toInputStream(Multipart multipart, Exchange exchange) throws IOException, MessagingException {_        String s = toString(multipart)__        if (s == null) {_            return null__        }_        return new ByteArrayInputStream(s.getBytes(ExchangeHelper.getCharsetName(exchange)))__    };converts,the,given,java,mail,multipart,to,a,input,stream,body,where,the,content,type,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,input,stream,to,input,stream,multipart,multipart,exchange,exchange,throws,ioexception,messaging,exception,string,s,to,string,multipart,if,s,null,return,null,return,new,byte,array,input,stream,s,get,bytes,exchange,helper,get,charset,name,exchange
MailConverters -> public static SearchTerm toSearchTerm(SimpleSearchTerm simple, TypeConverter typeConverter) throws ParseException, NoTypeConversionAvailableException;1533640471;Converters the simple search term builder to search term.__This should not be a @Converter method;public static SearchTerm toSearchTerm(SimpleSearchTerm simple, TypeConverter typeConverter) throws ParseException, NoTypeConversionAvailableException {_        SearchTermBuilder builder = new SearchTermBuilder()__        if (simple.isUnseen()) {_            builder = builder.unseen()__        }__        if (simple.getSubjectOrBody() != null) {_            String text = simple.getSubjectOrBody()__            SearchTermBuilder builderTemp = new SearchTermBuilder()__            builderTemp = builderTemp.subject(text).body(SearchTermBuilder.Op.or, text)__            builder = builder.and(builderTemp.build())__        }_        if (simple.getSubject() != null) {_            builder = builder.subject(simple.getSubject())__        }_        if (simple.getBody() != null) {_            builder = builder.body(simple.getBody())__        }_        if (simple.getFrom() != null) {_            builder = builder.from(simple.getFrom())__        }_        if (simple.getTo() != null) {_            builder = builder.recipient(Message.RecipientType.TO, simple.getTo())__        }_        if (simple.getFromSentDate() != null) {_            String s = simple.getFromSentDate()__            if (s.startsWith("now")) {_                long offset = extractOffset(s, typeConverter)__                builder = builder.and(new NowSearchTerm(SearchTermBuilder.Comparison.GE.asNum(), true, offset))__            } else {_                SimpleDateFormat sdf = new SimpleDateFormat(NOW_DATE_FORMAT)__                Date date = sdf.parse(s)__                builder = builder.sent(SearchTermBuilder.Comparison.GE, date)__            }_        }_        if (simple.getToSentDate() != null) {_            String s = simple.getToSentDate()__            if (s.startsWith("now")) {_                long offset = extractOffset(s, typeConverter)__                builder = builder.and(new NowSearchTerm(SearchTermBuilder.Comparison.LE.asNum(), true, offset))__            } else {_                SimpleDateFormat sdf = new SimpleDateFormat(NOW_DATE_FORMAT)__                Date date = sdf.parse(s)__                builder = builder.sent(SearchTermBuilder.Comparison.LE, date)__            }_        }_        if (simple.getFromReceivedDate() != null) {_            String s = simple.getFromReceivedDate()__            if (s.startsWith("now")) {_                long offset = extractOffset(s, typeConverter)__                builder = builder.and(new NowSearchTerm(SearchTermBuilder.Comparison.GE.asNum(), false, offset))__            } else {_                SimpleDateFormat sdf = new SimpleDateFormat(NOW_DATE_FORMAT)__                Date date = sdf.parse(s)__                builder = builder.received(SearchTermBuilder.Comparison.GE, date)__            }_        }_        if (simple.getToReceivedDate() != null) {_            String s = simple.getToReceivedDate()__            if (s.startsWith("now")) {_                long offset = extractOffset(s, typeConverter)__                builder = builder.and(new NowSearchTerm(SearchTermBuilder.Comparison.LE.asNum(), false, offset))__            } else {_                SimpleDateFormat sdf = new SimpleDateFormat(NOW_DATE_FORMAT)__                Date date = sdf.parse(s)__                builder = builder.received(SearchTermBuilder.Comparison.LE, date)__            }_        }__        return builder.build()__    };converters,the,simple,search,term,builder,to,search,term,this,should,not,be,a,converter,method;public,static,search,term,to,search,term,simple,search,term,simple,type,converter,type,converter,throws,parse,exception,no,type,conversion,available,exception,search,term,builder,builder,new,search,term,builder,if,simple,is,unseen,builder,builder,unseen,if,simple,get,subject,or,body,null,string,text,simple,get,subject,or,body,search,term,builder,builder,temp,new,search,term,builder,builder,temp,builder,temp,subject,text,body,search,term,builder,op,or,text,builder,builder,and,builder,temp,build,if,simple,get,subject,null,builder,builder,subject,simple,get,subject,if,simple,get,body,null,builder,builder,body,simple,get,body,if,simple,get,from,null,builder,builder,from,simple,get,from,if,simple,get,to,null,builder,builder,recipient,message,recipient,type,to,simple,get,to,if,simple,get,from,sent,date,null,string,s,simple,get,from,sent,date,if,s,starts,with,now,long,offset,extract,offset,s,type,converter,builder,builder,and,new,now,search,term,search,term,builder,comparison,ge,as,num,true,offset,else,simple,date,format,sdf,new,simple,date,format,date,date,sdf,parse,s,builder,builder,sent,search,term,builder,comparison,ge,date,if,simple,get,to,sent,date,null,string,s,simple,get,to,sent,date,if,s,starts,with,now,long,offset,extract,offset,s,type,converter,builder,builder,and,new,now,search,term,search,term,builder,comparison,le,as,num,true,offset,else,simple,date,format,sdf,new,simple,date,format,date,date,sdf,parse,s,builder,builder,sent,search,term,builder,comparison,le,date,if,simple,get,from,received,date,null,string,s,simple,get,from,received,date,if,s,starts,with,now,long,offset,extract,offset,s,type,converter,builder,builder,and,new,now,search,term,search,term,builder,comparison,ge,as,num,false,offset,else,simple,date,format,sdf,new,simple,date,format,date,date,sdf,parse,s,builder,builder,received,search,term,builder,comparison,ge,date,if,simple,get,to,received,date,null,string,s,simple,get,to,received,date,if,s,starts,with,now,long,offset,extract,offset,s,type,converter,builder,builder,and,new,now,search,term,search,term,builder,comparison,le,as,num,false,offset,else,simple,date,format,sdf,new,simple,date,format,date,date,sdf,parse,s,builder,builder,received,search,term,builder,comparison,le,date,return,builder,build
MailConverters -> public static SearchTerm toSearchTerm(SimpleSearchTerm simple, TypeConverter typeConverter) throws ParseException, NoTypeConversionAvailableException;1537204343;Converters the simple search term builder to search term.__This should not be a @Converter method;public static SearchTerm toSearchTerm(SimpleSearchTerm simple, TypeConverter typeConverter) throws ParseException, NoTypeConversionAvailableException {_        SearchTermBuilder builder = new SearchTermBuilder()__        if (simple.isUnseen()) {_            builder = builder.unseen()__        }__        if (simple.getSubjectOrBody() != null) {_            String text = simple.getSubjectOrBody()__            SearchTermBuilder builderTemp = new SearchTermBuilder()__            builderTemp = builderTemp.subject(text).body(SearchTermBuilder.Op.or, text)__            builder = builder.and(builderTemp.build())__        }_        if (simple.getSubject() != null) {_            builder = builder.subject(simple.getSubject())__        }_        if (simple.getBody() != null) {_            builder = builder.body(simple.getBody())__        }_        if (simple.getFrom() != null) {_            builder = builder.from(simple.getFrom())__        }_        if (simple.getTo() != null) {_            builder = builder.recipient(Message.RecipientType.TO, simple.getTo())__        }_        if (simple.getFromSentDate() != null) {_            String s = simple.getFromSentDate()__            if (s.startsWith("now")) {_                long offset = extractOffset(s, typeConverter)__                builder = builder.and(new NowSearchTerm(SearchTermBuilder.Comparison.GE.asNum(), true, offset))__            } else {_                SimpleDateFormat sdf = new SimpleDateFormat(NOW_DATE_FORMAT)__                Date date = sdf.parse(s)__                builder = builder.sent(SearchTermBuilder.Comparison.GE, date)__            }_        }_        if (simple.getToSentDate() != null) {_            String s = simple.getToSentDate()__            if (s.startsWith("now")) {_                long offset = extractOffset(s, typeConverter)__                builder = builder.and(new NowSearchTerm(SearchTermBuilder.Comparison.LE.asNum(), true, offset))__            } else {_                SimpleDateFormat sdf = new SimpleDateFormat(NOW_DATE_FORMAT)__                Date date = sdf.parse(s)__                builder = builder.sent(SearchTermBuilder.Comparison.LE, date)__            }_        }_        if (simple.getFromReceivedDate() != null) {_            String s = simple.getFromReceivedDate()__            if (s.startsWith("now")) {_                long offset = extractOffset(s, typeConverter)__                builder = builder.and(new NowSearchTerm(SearchTermBuilder.Comparison.GE.asNum(), false, offset))__            } else {_                SimpleDateFormat sdf = new SimpleDateFormat(NOW_DATE_FORMAT)__                Date date = sdf.parse(s)__                builder = builder.received(SearchTermBuilder.Comparison.GE, date)__            }_        }_        if (simple.getToReceivedDate() != null) {_            String s = simple.getToReceivedDate()__            if (s.startsWith("now")) {_                long offset = extractOffset(s, typeConverter)__                builder = builder.and(new NowSearchTerm(SearchTermBuilder.Comparison.LE.asNum(), false, offset))__            } else {_                SimpleDateFormat sdf = new SimpleDateFormat(NOW_DATE_FORMAT)__                Date date = sdf.parse(s)__                builder = builder.received(SearchTermBuilder.Comparison.LE, date)__            }_        }__        return builder.build()__    };converters,the,simple,search,term,builder,to,search,term,this,should,not,be,a,converter,method;public,static,search,term,to,search,term,simple,search,term,simple,type,converter,type,converter,throws,parse,exception,no,type,conversion,available,exception,search,term,builder,builder,new,search,term,builder,if,simple,is,unseen,builder,builder,unseen,if,simple,get,subject,or,body,null,string,text,simple,get,subject,or,body,search,term,builder,builder,temp,new,search,term,builder,builder,temp,builder,temp,subject,text,body,search,term,builder,op,or,text,builder,builder,and,builder,temp,build,if,simple,get,subject,null,builder,builder,subject,simple,get,subject,if,simple,get,body,null,builder,builder,body,simple,get,body,if,simple,get,from,null,builder,builder,from,simple,get,from,if,simple,get,to,null,builder,builder,recipient,message,recipient,type,to,simple,get,to,if,simple,get,from,sent,date,null,string,s,simple,get,from,sent,date,if,s,starts,with,now,long,offset,extract,offset,s,type,converter,builder,builder,and,new,now,search,term,search,term,builder,comparison,ge,as,num,true,offset,else,simple,date,format,sdf,new,simple,date,format,date,date,sdf,parse,s,builder,builder,sent,search,term,builder,comparison,ge,date,if,simple,get,to,sent,date,null,string,s,simple,get,to,sent,date,if,s,starts,with,now,long,offset,extract,offset,s,type,converter,builder,builder,and,new,now,search,term,search,term,builder,comparison,le,as,num,true,offset,else,simple,date,format,sdf,new,simple,date,format,date,date,sdf,parse,s,builder,builder,sent,search,term,builder,comparison,le,date,if,simple,get,from,received,date,null,string,s,simple,get,from,received,date,if,s,starts,with,now,long,offset,extract,offset,s,type,converter,builder,builder,and,new,now,search,term,search,term,builder,comparison,ge,as,num,false,offset,else,simple,date,format,sdf,new,simple,date,format,date,date,sdf,parse,s,builder,builder,received,search,term,builder,comparison,ge,date,if,simple,get,to,received,date,null,string,s,simple,get,to,received,date,if,s,starts,with,now,long,offset,extract,offset,s,type,converter,builder,builder,and,new,now,search,term,search,term,builder,comparison,le,as,num,false,offset,else,simple,date,format,sdf,new,simple,date,format,date,date,sdf,parse,s,builder,builder,received,search,term,builder,comparison,le,date,return,builder,build
MailConverters -> public static SearchTerm toSearchTerm(SimpleSearchTerm simple, TypeConverter typeConverter) throws ParseException, NoTypeConversionAvailableException;1540108161;Converters the simple search term builder to search term.__This should not be a @Converter method;public static SearchTerm toSearchTerm(SimpleSearchTerm simple, TypeConverter typeConverter) throws ParseException, NoTypeConversionAvailableException {_        SearchTermBuilder builder = new SearchTermBuilder()__        if (simple.isUnseen()) {_            builder = builder.unseen()__        }__        if (simple.getSubjectOrBody() != null) {_            String text = simple.getSubjectOrBody()__            SearchTermBuilder builderTemp = new SearchTermBuilder()__            builderTemp = builderTemp.subject(text).body(SearchTermBuilder.Op.or, text)__            builder = builder.and(builderTemp.build())__        }_        if (simple.getSubject() != null) {_            builder = builder.subject(simple.getSubject())__        }_        if (simple.getBody() != null) {_            builder = builder.body(simple.getBody())__        }_        if (simple.getFrom() != null) {_            builder = builder.from(simple.getFrom())__        }_        if (simple.getTo() != null) {_            builder = builder.recipient(Message.RecipientType.TO, simple.getTo())__        }_        if (simple.getFromSentDate() != null) {_            String s = simple.getFromSentDate()__            if (s.startsWith("now")) {_                long offset = extractOffset(s, typeConverter)__                builder = builder.and(new NowSearchTerm(SearchTermBuilder.Comparison.GE.asNum(), true, offset))__            } else {_                SimpleDateFormat sdf = new SimpleDateFormat(NOW_DATE_FORMAT)__                Date date = sdf.parse(s)__                builder = builder.sent(SearchTermBuilder.Comparison.GE, date)__            }_        }_        if (simple.getToSentDate() != null) {_            String s = simple.getToSentDate()__            if (s.startsWith("now")) {_                long offset = extractOffset(s, typeConverter)__                builder = builder.and(new NowSearchTerm(SearchTermBuilder.Comparison.LE.asNum(), true, offset))__            } else {_                SimpleDateFormat sdf = new SimpleDateFormat(NOW_DATE_FORMAT)__                Date date = sdf.parse(s)__                builder = builder.sent(SearchTermBuilder.Comparison.LE, date)__            }_        }_        if (simple.getFromReceivedDate() != null) {_            String s = simple.getFromReceivedDate()__            if (s.startsWith("now")) {_                long offset = extractOffset(s, typeConverter)__                builder = builder.and(new NowSearchTerm(SearchTermBuilder.Comparison.GE.asNum(), false, offset))__            } else {_                SimpleDateFormat sdf = new SimpleDateFormat(NOW_DATE_FORMAT)__                Date date = sdf.parse(s)__                builder = builder.received(SearchTermBuilder.Comparison.GE, date)__            }_        }_        if (simple.getToReceivedDate() != null) {_            String s = simple.getToReceivedDate()__            if (s.startsWith("now")) {_                long offset = extractOffset(s, typeConverter)__                builder = builder.and(new NowSearchTerm(SearchTermBuilder.Comparison.LE.asNum(), false, offset))__            } else {_                SimpleDateFormat sdf = new SimpleDateFormat(NOW_DATE_FORMAT)__                Date date = sdf.parse(s)__                builder = builder.received(SearchTermBuilder.Comparison.LE, date)__            }_        }__        return builder.build()__    };converters,the,simple,search,term,builder,to,search,term,this,should,not,be,a,converter,method;public,static,search,term,to,search,term,simple,search,term,simple,type,converter,type,converter,throws,parse,exception,no,type,conversion,available,exception,search,term,builder,builder,new,search,term,builder,if,simple,is,unseen,builder,builder,unseen,if,simple,get,subject,or,body,null,string,text,simple,get,subject,or,body,search,term,builder,builder,temp,new,search,term,builder,builder,temp,builder,temp,subject,text,body,search,term,builder,op,or,text,builder,builder,and,builder,temp,build,if,simple,get,subject,null,builder,builder,subject,simple,get,subject,if,simple,get,body,null,builder,builder,body,simple,get,body,if,simple,get,from,null,builder,builder,from,simple,get,from,if,simple,get,to,null,builder,builder,recipient,message,recipient,type,to,simple,get,to,if,simple,get,from,sent,date,null,string,s,simple,get,from,sent,date,if,s,starts,with,now,long,offset,extract,offset,s,type,converter,builder,builder,and,new,now,search,term,search,term,builder,comparison,ge,as,num,true,offset,else,simple,date,format,sdf,new,simple,date,format,date,date,sdf,parse,s,builder,builder,sent,search,term,builder,comparison,ge,date,if,simple,get,to,sent,date,null,string,s,simple,get,to,sent,date,if,s,starts,with,now,long,offset,extract,offset,s,type,converter,builder,builder,and,new,now,search,term,search,term,builder,comparison,le,as,num,true,offset,else,simple,date,format,sdf,new,simple,date,format,date,date,sdf,parse,s,builder,builder,sent,search,term,builder,comparison,le,date,if,simple,get,from,received,date,null,string,s,simple,get,from,received,date,if,s,starts,with,now,long,offset,extract,offset,s,type,converter,builder,builder,and,new,now,search,term,search,term,builder,comparison,ge,as,num,false,offset,else,simple,date,format,sdf,new,simple,date,format,date,date,sdf,parse,s,builder,builder,received,search,term,builder,comparison,ge,date,if,simple,get,to,received,date,null,string,s,simple,get,to,received,date,if,s,starts,with,now,long,offset,extract,offset,s,type,converter,builder,builder,and,new,now,search,term,search,term,builder,comparison,le,as,num,false,offset,else,simple,date,format,sdf,new,simple,date,format,date,date,sdf,parse,s,builder,builder,received,search,term,builder,comparison,le,date,return,builder,build
MailConverters -> public static SearchTerm toSearchTerm(SimpleSearchTerm simple, TypeConverter typeConverter) throws ParseException, NoTypeConversionAvailableException;1548332772;Converters the simple search term builder to search term.__This should not be a @Converter method;public static SearchTerm toSearchTerm(SimpleSearchTerm simple, TypeConverter typeConverter) throws ParseException, NoTypeConversionAvailableException {_        SearchTermBuilder builder = new SearchTermBuilder()__        if (simple.isUnseen()) {_            builder = builder.unseen()__        }__        if (simple.getSubjectOrBody() != null) {_            String text = simple.getSubjectOrBody()__            SearchTermBuilder builderTemp = new SearchTermBuilder()__            builderTemp = builderTemp.subject(text).body(SearchTermBuilder.Op.or, text)__            builder = builder.and(builderTemp.build())__        }_        if (simple.getSubject() != null) {_            builder = builder.subject(simple.getSubject())__        }_        if (simple.getBody() != null) {_            builder = builder.body(simple.getBody())__        }_        if (simple.getFrom() != null) {_            builder = builder.from(simple.getFrom())__        }_        if (simple.getTo() != null) {_            builder = builder.recipient(Message.RecipientType.TO, simple.getTo())__        }_        if (simple.getFromSentDate() != null) {_            String s = simple.getFromSentDate()__            if (s.startsWith("now")) {_                long offset = extractOffset(s, typeConverter)__                builder = builder.and(new NowSearchTerm(SearchTermBuilder.Comparison.GE.asNum(), true, offset))__            } else {_                SimpleDateFormat sdf = new SimpleDateFormat(NOW_DATE_FORMAT)__                Date date = sdf.parse(s)__                builder = builder.sent(SearchTermBuilder.Comparison.GE, date)__            }_        }_        if (simple.getToSentDate() != null) {_            String s = simple.getToSentDate()__            if (s.startsWith("now")) {_                long offset = extractOffset(s, typeConverter)__                builder = builder.and(new NowSearchTerm(SearchTermBuilder.Comparison.LE.asNum(), true, offset))__            } else {_                SimpleDateFormat sdf = new SimpleDateFormat(NOW_DATE_FORMAT)__                Date date = sdf.parse(s)__                builder = builder.sent(SearchTermBuilder.Comparison.LE, date)__            }_        }_        if (simple.getFromReceivedDate() != null) {_            String s = simple.getFromReceivedDate()__            if (s.startsWith("now")) {_                long offset = extractOffset(s, typeConverter)__                builder = builder.and(new NowSearchTerm(SearchTermBuilder.Comparison.GE.asNum(), false, offset))__            } else {_                SimpleDateFormat sdf = new SimpleDateFormat(NOW_DATE_FORMAT)__                Date date = sdf.parse(s)__                builder = builder.received(SearchTermBuilder.Comparison.GE, date)__            }_        }_        if (simple.getToReceivedDate() != null) {_            String s = simple.getToReceivedDate()__            if (s.startsWith("now")) {_                long offset = extractOffset(s, typeConverter)__                builder = builder.and(new NowSearchTerm(SearchTermBuilder.Comparison.LE.asNum(), false, offset))__            } else {_                SimpleDateFormat sdf = new SimpleDateFormat(NOW_DATE_FORMAT)__                Date date = sdf.parse(s)__                builder = builder.received(SearchTermBuilder.Comparison.LE, date)__            }_        }__        return builder.build()__    };converters,the,simple,search,term,builder,to,search,term,this,should,not,be,a,converter,method;public,static,search,term,to,search,term,simple,search,term,simple,type,converter,type,converter,throws,parse,exception,no,type,conversion,available,exception,search,term,builder,builder,new,search,term,builder,if,simple,is,unseen,builder,builder,unseen,if,simple,get,subject,or,body,null,string,text,simple,get,subject,or,body,search,term,builder,builder,temp,new,search,term,builder,builder,temp,builder,temp,subject,text,body,search,term,builder,op,or,text,builder,builder,and,builder,temp,build,if,simple,get,subject,null,builder,builder,subject,simple,get,subject,if,simple,get,body,null,builder,builder,body,simple,get,body,if,simple,get,from,null,builder,builder,from,simple,get,from,if,simple,get,to,null,builder,builder,recipient,message,recipient,type,to,simple,get,to,if,simple,get,from,sent,date,null,string,s,simple,get,from,sent,date,if,s,starts,with,now,long,offset,extract,offset,s,type,converter,builder,builder,and,new,now,search,term,search,term,builder,comparison,ge,as,num,true,offset,else,simple,date,format,sdf,new,simple,date,format,date,date,sdf,parse,s,builder,builder,sent,search,term,builder,comparison,ge,date,if,simple,get,to,sent,date,null,string,s,simple,get,to,sent,date,if,s,starts,with,now,long,offset,extract,offset,s,type,converter,builder,builder,and,new,now,search,term,search,term,builder,comparison,le,as,num,true,offset,else,simple,date,format,sdf,new,simple,date,format,date,date,sdf,parse,s,builder,builder,sent,search,term,builder,comparison,le,date,if,simple,get,from,received,date,null,string,s,simple,get,from,received,date,if,s,starts,with,now,long,offset,extract,offset,s,type,converter,builder,builder,and,new,now,search,term,search,term,builder,comparison,ge,as,num,false,offset,else,simple,date,format,sdf,new,simple,date,format,date,date,sdf,parse,s,builder,builder,received,search,term,builder,comparison,ge,date,if,simple,get,to,received,date,null,string,s,simple,get,to,received,date,if,s,starts,with,now,long,offset,extract,offset,s,type,converter,builder,builder,and,new,now,search,term,search,term,builder,comparison,le,as,num,false,offset,else,simple,date,format,sdf,new,simple,date,format,date,date,sdf,parse,s,builder,builder,received,search,term,builder,comparison,le,date,return,builder,build
MailConverters -> @Converter     public static InputStream toInputStream(Multipart multipart) throws IOException, MessagingException;1223804826;Converts the given JavaMail multipart to a InputStream body, where the contenttype of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static InputStream toInputStream(Multipart multipart) throws IOException, MessagingException {_        String s = toString(multipart)__        if (s == null) {_            return null__        }_        return IOConverter.toInputStream(s)__    };converts,the,given,java,mail,multipart,to,a,input,stream,body,where,the,contenttype,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,input,stream,to,input,stream,multipart,multipart,throws,ioexception,messaging,exception,string,s,to,string,multipart,if,s,null,return,null,return,ioconverter,to,input,stream,s
MailConverters -> @Converter     public static InputStream toInputStream(Multipart multipart) throws IOException, MessagingException;1224128608;Converts the given JavaMail multipart to a InputStream body, where the contenttype of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static InputStream toInputStream(Multipart multipart) throws IOException, MessagingException {_        String s = toString(multipart)__        if (s == null) {_            return null__        }_        return IOConverter.toInputStream(s)__    };converts,the,given,java,mail,multipart,to,a,input,stream,body,where,the,contenttype,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,input,stream,to,input,stream,multipart,multipart,throws,ioexception,messaging,exception,string,s,to,string,multipart,if,s,null,return,null,return,ioconverter,to,input,stream,s
MailConverters -> @Converter     public static InputStream toInputStream(Multipart multipart) throws IOException, MessagingException;1232411277;Converts the given JavaMail multipart to a InputStream body, where the contenttype of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static InputStream toInputStream(Multipart multipart) throws IOException, MessagingException {_        String s = toString(multipart)__        if (s == null) {_            return null__        }_        return IOConverter.toInputStream(s, null)__    };converts,the,given,java,mail,multipart,to,a,input,stream,body,where,the,contenttype,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,input,stream,to,input,stream,multipart,multipart,throws,ioexception,messaging,exception,string,s,to,string,multipart,if,s,null,return,null,return,ioconverter,to,input,stream,s,null
MailConverters -> @Converter     public static InputStream toInputStream(Multipart multipart) throws IOException, MessagingException;1255940586;Converts the given JavaMail multipart to a InputStream body, where the contenttype of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static InputStream toInputStream(Multipart multipart) throws IOException, MessagingException {_        String s = toString(multipart)__        if (s == null) {_            return null__        }_        return IOConverter.toInputStream(s, null)__    };converts,the,given,java,mail,multipart,to,a,input,stream,body,where,the,contenttype,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,input,stream,to,input,stream,multipart,multipart,throws,ioexception,messaging,exception,string,s,to,string,multipart,if,s,null,return,null,return,ioconverter,to,input,stream,s,null
MailConverters -> @Converter     public static InputStream toInputStream(Multipart multipart) throws IOException, MessagingException;1297975937;Converts the given JavaMail multipart to a InputStream body, where the contenttype of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static InputStream toInputStream(Multipart multipart) throws IOException, MessagingException {_        String s = toString(multipart)__        if (s == null) {_            return null__        }_        return IOConverter.toInputStream(s, null)__    };converts,the,given,java,mail,multipart,to,a,input,stream,body,where,the,contenttype,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,input,stream,to,input,stream,multipart,multipart,throws,ioexception,messaging,exception,string,s,to,string,multipart,if,s,null,return,null,return,ioconverter,to,input,stream,s,null
MailConverters -> @Converter     public static InputStream toInputStream(Multipart multipart) throws IOException, MessagingException;1352827558;Converts the given JavaMail multipart to a InputStream body, where the contenttype of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static InputStream toInputStream(Multipart multipart) throws IOException, MessagingException {_        String s = toString(multipart)__        if (s == null) {_            return null__        }_        return IOConverter.toInputStream(s, null)__    };converts,the,given,java,mail,multipart,to,a,input,stream,body,where,the,contenttype,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,input,stream,to,input,stream,multipart,multipart,throws,ioexception,messaging,exception,string,s,to,string,multipart,if,s,null,return,null,return,ioconverter,to,input,stream,s,null
MailConverters -> @Converter     public static InputStream toInputStream(Multipart multipart) throws IOException, MessagingException;1352886214;Converts the given JavaMail multipart to a InputStream body, where the contenttype of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static InputStream toInputStream(Multipart multipart) throws IOException, MessagingException {_        String s = toString(multipart)__        if (s == null) {_            return null__        }_        return IOConverter.toInputStream(s, null)__    };converts,the,given,java,mail,multipart,to,a,input,stream,body,where,the,contenttype,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,input,stream,to,input,stream,multipart,multipart,throws,ioexception,messaging,exception,string,s,to,string,multipart,if,s,null,return,null,return,ioconverter,to,input,stream,s,null
MailConverters -> @Converter     public static InputStream toInputStream(Multipart multipart) throws IOException, MessagingException;1352886964;Converts the given JavaMail multipart to a InputStream body, where the content-type of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static InputStream toInputStream(Multipart multipart) throws IOException, MessagingException {_        String s = toString(multipart)__        if (s == null) {_            return null__        }_        return IOConverter.toInputStream(s, null)__    };converts,the,given,java,mail,multipart,to,a,input,stream,body,where,the,content,type,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,input,stream,to,input,stream,multipart,multipart,throws,ioexception,messaging,exception,string,s,to,string,multipart,if,s,null,return,null,return,ioconverter,to,input,stream,s,null
MailConverters -> @Converter     public static InputStream toInputStream(Multipart multipart) throws IOException, MessagingException;1357548356;Converts the given JavaMail multipart to a InputStream body, where the content-type of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static InputStream toInputStream(Multipart multipart) throws IOException, MessagingException {_        String s = toString(multipart)__        if (s == null) {_            return null__        }_        return IOConverter.toInputStream(s, null)__    };converts,the,given,java,mail,multipart,to,a,input,stream,body,where,the,content,type,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,input,stream,to,input,stream,multipart,multipart,throws,ioexception,messaging,exception,string,s,to,string,multipart,if,s,null,return,null,return,ioconverter,to,input,stream,s,null
MailConverters -> @Converter     public static InputStream toInputStream(Multipart multipart) throws IOException, MessagingException;1376374990;Converts the given JavaMail multipart to a InputStream body, where the content-type of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static InputStream toInputStream(Multipart multipart) throws IOException, MessagingException {_        String s = toString(multipart)__        if (s == null) {_            return null__        }_        return IOConverter.toInputStream(s, null)__    };converts,the,given,java,mail,multipart,to,a,input,stream,body,where,the,content,type,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,input,stream,to,input,stream,multipart,multipart,throws,ioexception,messaging,exception,string,s,to,string,multipart,if,s,null,return,null,return,ioconverter,to,input,stream,s,null
MailConverters -> @Converter     public static InputStream toInputStream(Multipart multipart) throws IOException, MessagingException;1431092406;Converts the given JavaMail multipart to a InputStream body, where the content-type of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static InputStream toInputStream(Multipart multipart) throws IOException, MessagingException {_        String s = toString(multipart)__        if (s == null) {_            return null__        }_        return IOConverter.toInputStream(s, null)__    };converts,the,given,java,mail,multipart,to,a,input,stream,body,where,the,content,type,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,input,stream,to,input,stream,multipart,multipart,throws,ioexception,messaging,exception,string,s,to,string,multipart,if,s,null,return,null,return,ioconverter,to,input,stream,s,null
MailConverters -> @Converter     public static String toString(Multipart multipart) throws MessagingException, IOException;1209528612;Converts the given JavaMail multipart to a String body, where the contenttype of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static String toString(Multipart multipart) throws MessagingException, IOException {_        int size = multipart.getCount()__        for (int i = 0_ i < size_ i++) {_            BodyPart part = multipart.getBodyPart(i)__            if (part.getContentType().startsWith("text")) {_                return part.getContent().toString()__            }_        }_        return null__    };converts,the,given,java,mail,multipart,to,a,string,body,where,the,contenttype,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,string,to,string,multipart,multipart,throws,messaging,exception,ioexception,int,size,multipart,get,count,for,int,i,0,i,size,i,body,part,part,multipart,get,body,part,i,if,part,get,content,type,starts,with,text,return,part,get,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Multipart multipart) throws MessagingException, IOException;1223804826;Converts the given JavaMail multipart to a String body, where the contenttype of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static String toString(Multipart multipart) throws MessagingException, IOException {_        int size = multipart.getCount()__        for (int i = 0_ i < size_ i++) {_            BodyPart part = multipart.getBodyPart(i)__            if (part.getContentType().startsWith("text")) {_                return part.getContent().toString()__            }_        }_        return null__    };converts,the,given,java,mail,multipart,to,a,string,body,where,the,contenttype,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,string,to,string,multipart,multipart,throws,messaging,exception,ioexception,int,size,multipart,get,count,for,int,i,0,i,size,i,body,part,part,multipart,get,body,part,i,if,part,get,content,type,starts,with,text,return,part,get,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Multipart multipart) throws MessagingException, IOException;1224128608;Converts the given JavaMail multipart to a String body, where the contenttype of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static String toString(Multipart multipart) throws MessagingException, IOException {_        int size = multipart.getCount()__        for (int i = 0_ i < size_ i++) {_            BodyPart part = multipart.getBodyPart(i)__            if (part.getContentType().startsWith("text")) {_                return part.getContent().toString()__            }_        }_        return null__    };converts,the,given,java,mail,multipart,to,a,string,body,where,the,contenttype,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,string,to,string,multipart,multipart,throws,messaging,exception,ioexception,int,size,multipart,get,count,for,int,i,0,i,size,i,body,part,part,multipart,get,body,part,i,if,part,get,content,type,starts,with,text,return,part,get,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Multipart multipart) throws MessagingException, IOException;1232411277;Converts the given JavaMail multipart to a String body, where the contenttype of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static String toString(Multipart multipart) throws MessagingException, IOException {_        int size = multipart.getCount()__        for (int i = 0_ i < size_ i++) {_            BodyPart part = multipart.getBodyPart(i)__            if (part.getContentType().startsWith("text")) {_                return part.getContent().toString()__            }_        }_        return null__    };converts,the,given,java,mail,multipart,to,a,string,body,where,the,contenttype,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,string,to,string,multipart,multipart,throws,messaging,exception,ioexception,int,size,multipart,get,count,for,int,i,0,i,size,i,body,part,part,multipart,get,body,part,i,if,part,get,content,type,starts,with,text,return,part,get,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Multipart multipart) throws MessagingException, IOException;1255940586;Converts the given JavaMail multipart to a String body, where the contenttype of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static String toString(Multipart multipart) throws MessagingException, IOException {_        int size = multipart.getCount()__        for (int i = 0_ i < size_ i++) {_            BodyPart part = multipart.getBodyPart(i)__            if (part.getContentType().startsWith("text")) {_                return part.getContent().toString()__            }_        }_        return null__    };converts,the,given,java,mail,multipart,to,a,string,body,where,the,contenttype,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,string,to,string,multipart,multipart,throws,messaging,exception,ioexception,int,size,multipart,get,count,for,int,i,0,i,size,i,body,part,part,multipart,get,body,part,i,if,part,get,content,type,starts,with,text,return,part,get,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Multipart multipart) throws MessagingException, IOException;1297975937;Converts the given JavaMail multipart to a String body, where the contenttype of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static String toString(Multipart multipart) throws MessagingException, IOException {_        int size = multipart.getCount()__        for (int i = 0_ i < size_ i++) {_            BodyPart part = multipart.getBodyPart(i)__            if (part.getContentType().startsWith("text")) {_                return part.getContent().toString()__            }_        }_        return null__    };converts,the,given,java,mail,multipart,to,a,string,body,where,the,contenttype,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,string,to,string,multipart,multipart,throws,messaging,exception,ioexception,int,size,multipart,get,count,for,int,i,0,i,size,i,body,part,part,multipart,get,body,part,i,if,part,get,content,type,starts,with,text,return,part,get,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Multipart multipart) throws MessagingException, IOException;1352827558;Converts the given JavaMail multipart to a String body, where the contenttype of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static String toString(Multipart multipart) throws MessagingException, IOException {_        int size = multipart.getCount()__        for (int i = 0_ i < size_ i++) {_            BodyPart part = multipart.getBodyPart(i)__            if (part.getContentType().startsWith("text")) {_                return part.getContent().toString()__            }_        }_        return null__    };converts,the,given,java,mail,multipart,to,a,string,body,where,the,contenttype,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,string,to,string,multipart,multipart,throws,messaging,exception,ioexception,int,size,multipart,get,count,for,int,i,0,i,size,i,body,part,part,multipart,get,body,part,i,if,part,get,content,type,starts,with,text,return,part,get,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Multipart multipart) throws MessagingException, IOException;1352886214;Converts the given JavaMail multipart to a String body, where the content-type of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static String toString(Multipart multipart) throws MessagingException, IOException {_        int size = multipart.getCount()__        for (int i = 0_ i < size_ i++) {_            BodyPart part = multipart.getBodyPart(i)__            if (part.getContentType().startsWith("text")) {_                return part.getContent().toString()__            }_        }_        return null__    };converts,the,given,java,mail,multipart,to,a,string,body,where,the,content,type,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,string,to,string,multipart,multipart,throws,messaging,exception,ioexception,int,size,multipart,get,count,for,int,i,0,i,size,i,body,part,part,multipart,get,body,part,i,if,part,get,content,type,starts,with,text,return,part,get,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Multipart multipart) throws MessagingException, IOException;1352886964;Converts the given JavaMail multipart to a String body, where the content-type of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static String toString(Multipart multipart) throws MessagingException, IOException {_        int size = multipart.getCount()__        for (int i = 0_ i < size_ i++) {_            BodyPart part = multipart.getBodyPart(i)__            if (part.getContentType().startsWith("text")) {_                return part.getContent().toString()__            }_        }_        return null__    };converts,the,given,java,mail,multipart,to,a,string,body,where,the,content,type,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,string,to,string,multipart,multipart,throws,messaging,exception,ioexception,int,size,multipart,get,count,for,int,i,0,i,size,i,body,part,part,multipart,get,body,part,i,if,part,get,content,type,starts,with,text,return,part,get,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Multipart multipart) throws MessagingException, IOException;1357548356;Converts the given JavaMail multipart to a String body, where the content-type of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static String toString(Multipart multipart) throws MessagingException, IOException {_        int size = multipart.getCount()__        for (int i = 0_ i < size_ i++) {_            BodyPart part = multipart.getBodyPart(i)__            if (part.getContentType().toLowerCase().startsWith("text")) {_                return part.getContent().toString()__            }_        }_        return null__    };converts,the,given,java,mail,multipart,to,a,string,body,where,the,content,type,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,string,to,string,multipart,multipart,throws,messaging,exception,ioexception,int,size,multipart,get,count,for,int,i,0,i,size,i,body,part,part,multipart,get,body,part,i,if,part,get,content,type,to,lower,case,starts,with,text,return,part,get,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Multipart multipart) throws MessagingException, IOException;1376374990;Converts the given JavaMail multipart to a String body, where the content-type of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static String toString(Multipart multipart) throws MessagingException, IOException {_        int size = multipart.getCount()__        for (int i = 0_ i < size_ i++) {_            BodyPart part = multipart.getBodyPart(i)__            if (part.getContentType().toLowerCase().startsWith("text")) {_                return part.getContent().toString()__            }_        }_        return null__    };converts,the,given,java,mail,multipart,to,a,string,body,where,the,content,type,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,string,to,string,multipart,multipart,throws,messaging,exception,ioexception,int,size,multipart,get,count,for,int,i,0,i,size,i,body,part,part,multipart,get,body,part,i,if,part,get,content,type,to,lower,case,starts,with,text,return,part,get,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Multipart multipart) throws MessagingException, IOException;1431092406;Converts the given JavaMail multipart to a String body, where the content-type of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static String toString(Multipart multipart) throws MessagingException, IOException {_        int size = multipart.getCount()__        for (int i = 0_ i < size_ i++) {_            BodyPart part = multipart.getBodyPart(i)__            if (part.getContentType().toLowerCase().startsWith("text")) {_                return part.getContent().toString()__            }_        }_        return null__    };converts,the,given,java,mail,multipart,to,a,string,body,where,the,content,type,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,string,to,string,multipart,multipart,throws,messaging,exception,ioexception,int,size,multipart,get,count,for,int,i,0,i,size,i,body,part,part,multipart,get,body,part,i,if,part,get,content,type,to,lower,case,starts,with,text,return,part,get,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Multipart multipart) throws MessagingException, IOException;1469773139;Converts the given JavaMail multipart to a String body, where the content-type of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static String toString(Multipart multipart) throws MessagingException, IOException {_        int size = multipart.getCount()__        for (int i = 0_ i < size_ i++) {_            BodyPart part = multipart.getBodyPart(i)__            if (part.getContentType().toLowerCase().startsWith("text")) {_                return part.getContent().toString()__            }_        }_        return null__    };converts,the,given,java,mail,multipart,to,a,string,body,where,the,content,type,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,string,to,string,multipart,multipart,throws,messaging,exception,ioexception,int,size,multipart,get,count,for,int,i,0,i,size,i,body,part,part,multipart,get,body,part,i,if,part,get,content,type,to,lower,case,starts,with,text,return,part,get,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Multipart multipart) throws MessagingException, IOException;1473411242;Converts the given JavaMail multipart to a String body, where the content-type of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static String toString(Multipart multipart) throws MessagingException, IOException {_        int size = multipart.getCount()__        for (int i = 0_ i < size_ i++) {_            BodyPart part = multipart.getBodyPart(i)__            Object content = part.getContent()__            while (content instanceof MimeMultipart) {_                if (multipart.getCount() < 1) {_                    break__                }_                part = ((MimeMultipart)content).getBodyPart(0)__                content = part.getContent()__            }_            if (part.getContentType().toLowerCase().startsWith("text")) {_                return part.getContent().toString()__            }_        }_        return null__    };converts,the,given,java,mail,multipart,to,a,string,body,where,the,content,type,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,string,to,string,multipart,multipart,throws,messaging,exception,ioexception,int,size,multipart,get,count,for,int,i,0,i,size,i,body,part,part,multipart,get,body,part,i,object,content,part,get,content,while,content,instanceof,mime,multipart,if,multipart,get,count,1,break,part,mime,multipart,content,get,body,part,0,content,part,get,content,if,part,get,content,type,to,lower,case,starts,with,text,return,part,get,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Multipart multipart) throws MessagingException, IOException;1491464905;Converts the given JavaMail multipart to a String body, where the content-type of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static String toString(Multipart multipart) throws MessagingException, IOException {_        int size = multipart.getCount()__        for (int i = 0_ i < size_ i++) {_            BodyPart part = multipart.getBodyPart(i)__            Object content = part.getContent()__            while (content instanceof MimeMultipart) {_                if (multipart.getCount() < 1) {_                    break__                }_                part = ((MimeMultipart)content).getBodyPart(0)__                content = part.getContent()__            }_            if (part.getContentType().toLowerCase().startsWith("text")) {_                return part.getContent().toString()__            }_        }_        return null__    };converts,the,given,java,mail,multipart,to,a,string,body,where,the,content,type,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,string,to,string,multipart,multipart,throws,messaging,exception,ioexception,int,size,multipart,get,count,for,int,i,0,i,size,i,body,part,part,multipart,get,body,part,i,object,content,part,get,content,while,content,instanceof,mime,multipart,if,multipart,get,count,1,break,part,mime,multipart,content,get,body,part,0,content,part,get,content,if,part,get,content,type,to,lower,case,starts,with,text,return,part,get,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Multipart multipart) throws MessagingException, IOException;1524063106;Converts the given JavaMail multipart to a String body, where the content-type of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static String toString(Multipart multipart) throws MessagingException, IOException {_        int size = multipart.getCount()__        for (int i = 0_ i < size_ i++) {_            BodyPart part = multipart.getBodyPart(i)__            Object content = part.getContent()__            while (content instanceof MimeMultipart) {_                if (multipart.getCount() < 1) {_                    break__                }_                part = ((MimeMultipart)content).getBodyPart(0)__                content = part.getContent()__            }_            if (part.getContentType().toLowerCase().startsWith("text")) {_                return part.getContent().toString()__            }_        }_        return null__    };converts,the,given,java,mail,multipart,to,a,string,body,where,the,content,type,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,string,to,string,multipart,multipart,throws,messaging,exception,ioexception,int,size,multipart,get,count,for,int,i,0,i,size,i,body,part,part,multipart,get,body,part,i,object,content,part,get,content,while,content,instanceof,mime,multipart,if,multipart,get,count,1,break,part,mime,multipart,content,get,body,part,0,content,part,get,content,if,part,get,content,type,to,lower,case,starts,with,text,return,part,get,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Multipart multipart) throws MessagingException, IOException;1533640471;Converts the given JavaMail multipart to a String body, where the content-type of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static String toString(Multipart multipart) throws MessagingException, IOException {_        int size = multipart.getCount()__        for (int i = 0_ i < size_ i++) {_            BodyPart part = multipart.getBodyPart(i)__            Object content = part.getContent()__            while (content instanceof MimeMultipart) {_                if (multipart.getCount() < 1) {_                    break__                }_                part = ((MimeMultipart)content).getBodyPart(0)__                content = part.getContent()__            }_            if (part.getContentType().toLowerCase().startsWith("text")) {_                return part.getContent().toString()__            }_        }_        return null__    };converts,the,given,java,mail,multipart,to,a,string,body,where,the,content,type,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,string,to,string,multipart,multipart,throws,messaging,exception,ioexception,int,size,multipart,get,count,for,int,i,0,i,size,i,body,part,part,multipart,get,body,part,i,object,content,part,get,content,while,content,instanceof,mime,multipart,if,multipart,get,count,1,break,part,mime,multipart,content,get,body,part,0,content,part,get,content,if,part,get,content,type,to,lower,case,starts,with,text,return,part,get,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Multipart multipart) throws MessagingException, IOException;1537204343;Converts the given JavaMail multipart to a String body, where the content-type of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static String toString(Multipart multipart) throws MessagingException, IOException {_        int size = multipart.getCount()__        for (int i = 0_ i < size_ i++) {_            BodyPart part = multipart.getBodyPart(i)__            Object content = part.getContent()__            while (content instanceof MimeMultipart) {_                if (multipart.getCount() < 1) {_                    break__                }_                part = ((MimeMultipart)content).getBodyPart(0)__                content = part.getContent()__            }_            if (part.getContentType().toLowerCase().startsWith("text")) {_                return part.getContent().toString()__            }_        }_        return null__    };converts,the,given,java,mail,multipart,to,a,string,body,where,the,content,type,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,string,to,string,multipart,multipart,throws,messaging,exception,ioexception,int,size,multipart,get,count,for,int,i,0,i,size,i,body,part,part,multipart,get,body,part,i,object,content,part,get,content,while,content,instanceof,mime,multipart,if,multipart,get,count,1,break,part,mime,multipart,content,get,body,part,0,content,part,get,content,if,part,get,content,type,to,lower,case,starts,with,text,return,part,get,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Multipart multipart) throws MessagingException, IOException;1540108161;Converts the given JavaMail multipart to a String body, where the content-type of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static String toString(Multipart multipart) throws MessagingException, IOException {_        int size = multipart.getCount()__        for (int i = 0_ i < size_ i++) {_            BodyPart part = multipart.getBodyPart(i)__            Object content = part.getContent()__            while (content instanceof MimeMultipart) {_                if (multipart.getCount() < 1) {_                    break__                }_                part = ((MimeMultipart)content).getBodyPart(0)__                content = part.getContent()__            }_            if (part.getContentType().toLowerCase().startsWith("text")) {_                return part.getContent().toString()__            }_        }_        return null__    };converts,the,given,java,mail,multipart,to,a,string,body,where,the,content,type,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,string,to,string,multipart,multipart,throws,messaging,exception,ioexception,int,size,multipart,get,count,for,int,i,0,i,size,i,body,part,part,multipart,get,body,part,i,object,content,part,get,content,while,content,instanceof,mime,multipart,if,multipart,get,count,1,break,part,mime,multipart,content,get,body,part,0,content,part,get,content,if,part,get,content,type,to,lower,case,starts,with,text,return,part,get,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Multipart multipart) throws MessagingException, IOException;1548332772;Converts the given JavaMail multipart to a String body, where the content-type of the multipart_must be text based (ie start with text). Can return null.;@Converter_    public static String toString(Multipart multipart) throws MessagingException, IOException {_        int size = multipart.getCount()__        for (int i = 0_ i < size_ i++) {_            BodyPart part = multipart.getBodyPart(i)__            Object content = part.getContent()__            while (content instanceof MimeMultipart) {_                if (multipart.getCount() < 1) {_                    break__                }_                part = ((MimeMultipart)content).getBodyPart(0)__                content = part.getContent()__            }_            if (part.getContentType().toLowerCase().startsWith("text")) {_                return part.getContent().toString()__            }_        }_        return null__    };converts,the,given,java,mail,multipart,to,a,string,body,where,the,content,type,of,the,multipart,must,be,text,based,ie,start,with,text,can,return,null;converter,public,static,string,to,string,multipart,multipart,throws,messaging,exception,ioexception,int,size,multipart,get,count,for,int,i,0,i,size,i,body,part,part,multipart,get,body,part,i,object,content,part,get,content,while,content,instanceof,mime,multipart,if,multipart,get,count,1,break,part,mime,multipart,content,get,body,part,0,content,part,get,content,if,part,get,content,type,to,lower,case,starts,with,text,return,part,get,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Message message) throws MessagingException, IOException;1223804826;Converts the given JavaMail message to a String body._Can return null.;@Converter_    public static String toString(Message message) throws MessagingException, IOException {_        Object content = message.getContent()__        if (content instanceof MimeMultipart) {_            MimeMultipart multipart = (MimeMultipart) content__            if (multipart.getCount() > 0) {_                BodyPart part = multipart.getBodyPart(0)__                content = part.getContent()__            }_        }_        if (content != null) {_            return content.toString()__        }_        return null__    };converts,the,given,java,mail,message,to,a,string,body,can,return,null;converter,public,static,string,to,string,message,message,throws,messaging,exception,ioexception,object,content,message,get,content,if,content,instanceof,mime,multipart,mime,multipart,multipart,mime,multipart,content,if,multipart,get,count,0,body,part,part,multipart,get,body,part,0,content,part,get,content,if,content,null,return,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Message message) throws MessagingException, IOException;1224128608;Converts the given JavaMail message to a String body._Can return null.;@Converter_    public static String toString(Message message) throws MessagingException, IOException {_        Object content = message.getContent()__        if (content instanceof MimeMultipart) {_            MimeMultipart multipart = (MimeMultipart) content__            if (multipart.getCount() > 0) {_                BodyPart part = multipart.getBodyPart(0)__                content = part.getContent()__            }_        }_        if (content != null) {_            return content.toString()__        }_        return null__    };converts,the,given,java,mail,message,to,a,string,body,can,return,null;converter,public,static,string,to,string,message,message,throws,messaging,exception,ioexception,object,content,message,get,content,if,content,instanceof,mime,multipart,mime,multipart,multipart,mime,multipart,content,if,multipart,get,count,0,body,part,part,multipart,get,body,part,0,content,part,get,content,if,content,null,return,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Message message) throws MessagingException, IOException;1232411277;Converts the given JavaMail message to a String body._Can return null.;@Converter_    public static String toString(Message message) throws MessagingException, IOException {_        Object content = message.getContent()__        if (content instanceof MimeMultipart) {_            MimeMultipart multipart = (MimeMultipart) content__            if (multipart.getCount() > 0) {_                BodyPart part = multipart.getBodyPart(0)__                content = part.getContent()__            }_        }_        if (content != null) {_            return content.toString()__        }_        return null__    };converts,the,given,java,mail,message,to,a,string,body,can,return,null;converter,public,static,string,to,string,message,message,throws,messaging,exception,ioexception,object,content,message,get,content,if,content,instanceof,mime,multipart,mime,multipart,multipart,mime,multipart,content,if,multipart,get,count,0,body,part,part,multipart,get,body,part,0,content,part,get,content,if,content,null,return,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Message message) throws MessagingException, IOException;1255940586;Converts the given JavaMail message to a String body._Can return null.;@Converter_    public static String toString(Message message) throws MessagingException, IOException {_        Object content = message.getContent()__        if (content instanceof MimeMultipart) {_            MimeMultipart multipart = (MimeMultipart) content__            if (multipart.getCount() > 0) {_                BodyPart part = multipart.getBodyPart(0)__                content = part.getContent()__            }_        }_        if (content != null) {_            return content.toString()__        }_        return null__    };converts,the,given,java,mail,message,to,a,string,body,can,return,null;converter,public,static,string,to,string,message,message,throws,messaging,exception,ioexception,object,content,message,get,content,if,content,instanceof,mime,multipart,mime,multipart,multipart,mime,multipart,content,if,multipart,get,count,0,body,part,part,multipart,get,body,part,0,content,part,get,content,if,content,null,return,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Message message) throws MessagingException, IOException;1297975937;Converts the given JavaMail message to a String body._Can return null.;@Converter_    public static String toString(Message message) throws MessagingException, IOException {_        Object content = message.getContent()__        if (content instanceof MimeMultipart) {_            MimeMultipart multipart = (MimeMultipart) content__            if (multipart.getCount() > 0) {_                BodyPart part = multipart.getBodyPart(0)__                content = part.getContent()__            }_        }_        if (content != null) {_            return content.toString()__        }_        return null__    };converts,the,given,java,mail,message,to,a,string,body,can,return,null;converter,public,static,string,to,string,message,message,throws,messaging,exception,ioexception,object,content,message,get,content,if,content,instanceof,mime,multipart,mime,multipart,multipart,mime,multipart,content,if,multipart,get,count,0,body,part,part,multipart,get,body,part,0,content,part,get,content,if,content,null,return,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Message message) throws MessagingException, IOException;1352827558;Converts the given JavaMail message to a String body._Can return null.;@Converter_    public static String toString(Message message) throws MessagingException, IOException {_        Object content = message.getContent()__        if (content instanceof MimeMultipart) {_            MimeMultipart multipart = (MimeMultipart) content__            if (multipart.getCount() > 0) {_                BodyPart part = multipart.getBodyPart(0)__                content = part.getContent()__            }_        }_        if (content != null) {_            return content.toString()__        }_        return null__    };converts,the,given,java,mail,message,to,a,string,body,can,return,null;converter,public,static,string,to,string,message,message,throws,messaging,exception,ioexception,object,content,message,get,content,if,content,instanceof,mime,multipart,mime,multipart,multipart,mime,multipart,content,if,multipart,get,count,0,body,part,part,multipart,get,body,part,0,content,part,get,content,if,content,null,return,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Message message) throws MessagingException, IOException;1352886214;Converts the given JavaMail message to a String body._Can return null.;@Converter_    public static String toString(Message message) throws MessagingException, IOException {_        Object content = message.getContent()__        if (content instanceof MimeMultipart) {_            MimeMultipart multipart = (MimeMultipart) content__            if (multipart.getCount() > 0) {_                BodyPart part = multipart.getBodyPart(0)__                content = part.getContent()__            }_        }_        if (content != null) {_            return content.toString()__        }_        return null__    };converts,the,given,java,mail,message,to,a,string,body,can,return,null;converter,public,static,string,to,string,message,message,throws,messaging,exception,ioexception,object,content,message,get,content,if,content,instanceof,mime,multipart,mime,multipart,multipart,mime,multipart,content,if,multipart,get,count,0,body,part,part,multipart,get,body,part,0,content,part,get,content,if,content,null,return,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Message message) throws MessagingException, IOException;1352886964;Converts the given JavaMail message to a String body._Can return null.;@Converter_    public static String toString(Message message) throws MessagingException, IOException {_        Object content = message.getContent()__        if (content instanceof MimeMultipart) {_            MimeMultipart multipart = (MimeMultipart) content__            if (multipart.getCount() > 0) {_                BodyPart part = multipart.getBodyPart(0)__                content = part.getContent()__            }_        }_        if (content != null) {_            return content.toString()__        }_        return null__    };converts,the,given,java,mail,message,to,a,string,body,can,return,null;converter,public,static,string,to,string,message,message,throws,messaging,exception,ioexception,object,content,message,get,content,if,content,instanceof,mime,multipart,mime,multipart,multipart,mime,multipart,content,if,multipart,get,count,0,body,part,part,multipart,get,body,part,0,content,part,get,content,if,content,null,return,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Message message) throws MessagingException, IOException;1357548356;Converts the given JavaMail message to a String body._Can return null.;@Converter_    public static String toString(Message message) throws MessagingException, IOException {_        Object content = message.getContent()__        if (content instanceof MimeMultipart) {_            MimeMultipart multipart = (MimeMultipart) content__            if (multipart.getCount() > 0) {_                BodyPart part = multipart.getBodyPart(0)__                content = part.getContent()__            }_        }_        if (content != null) {_            return content.toString()__        }_        return null__    };converts,the,given,java,mail,message,to,a,string,body,can,return,null;converter,public,static,string,to,string,message,message,throws,messaging,exception,ioexception,object,content,message,get,content,if,content,instanceof,mime,multipart,mime,multipart,multipart,mime,multipart,content,if,multipart,get,count,0,body,part,part,multipart,get,body,part,0,content,part,get,content,if,content,null,return,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Message message) throws MessagingException, IOException;1376374990;Converts the given JavaMail message to a String body._Can return null.;@Converter_    public static String toString(Message message) throws MessagingException, IOException {_        Object content = message.getContent()__        if (content instanceof MimeMultipart) {_            MimeMultipart multipart = (MimeMultipart) content__            if (multipart.getCount() > 0) {_                BodyPart part = multipart.getBodyPart(0)__                content = part.getContent()__            }_        }_        if (content != null) {_            return content.toString()__        }_        return null__    };converts,the,given,java,mail,message,to,a,string,body,can,return,null;converter,public,static,string,to,string,message,message,throws,messaging,exception,ioexception,object,content,message,get,content,if,content,instanceof,mime,multipart,mime,multipart,multipart,mime,multipart,content,if,multipart,get,count,0,body,part,part,multipart,get,body,part,0,content,part,get,content,if,content,null,return,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Message message) throws MessagingException, IOException;1431092406;Converts the given JavaMail message to a String body._Can return null.;@Converter_    public static String toString(Message message) throws MessagingException, IOException {_        Object content = message.getContent()__        if (content instanceof MimeMultipart) {_            MimeMultipart multipart = (MimeMultipart) content__            if (multipart.getCount() > 0) {_                BodyPart part = multipart.getBodyPart(0)__                content = part.getContent()__            }_        }_        if (content != null) {_            return content.toString()__        }_        return null__    };converts,the,given,java,mail,message,to,a,string,body,can,return,null;converter,public,static,string,to,string,message,message,throws,messaging,exception,ioexception,object,content,message,get,content,if,content,instanceof,mime,multipart,mime,multipart,multipart,mime,multipart,content,if,multipart,get,count,0,body,part,part,multipart,get,body,part,0,content,part,get,content,if,content,null,return,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Message message) throws MessagingException, IOException;1469773139;Converts the given JavaMail message to a String body._Can return null.;@Converter_    public static String toString(Message message) throws MessagingException, IOException {_        Object content = message.getContent()__        if (content instanceof MimeMultipart) {_            MimeMultipart multipart = (MimeMultipart) content__            if (multipart.getCount() > 0) {_                BodyPart part = multipart.getBodyPart(0)__                content = part.getContent()__            }_        }_        if (content != null) {_            return content.toString()__        }_        return null__    };converts,the,given,java,mail,message,to,a,string,body,can,return,null;converter,public,static,string,to,string,message,message,throws,messaging,exception,ioexception,object,content,message,get,content,if,content,instanceof,mime,multipart,mime,multipart,multipart,mime,multipart,content,if,multipart,get,count,0,body,part,part,multipart,get,body,part,0,content,part,get,content,if,content,null,return,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Message message) throws MessagingException, IOException;1473411242;Converts the given JavaMail message to a String body._Can return null.;@Converter_    public static String toString(Message message) throws MessagingException, IOException {_        Object content = message.getContent()__        while (content instanceof MimeMultipart) {_            MimeMultipart multipart = (MimeMultipart) content__            if (multipart.getCount() > 0) {_                BodyPart part = multipart.getBodyPart(0)__                content = part.getContent()__            }_        }_        if (content != null) {_            return content.toString()__        }_        return null__    };converts,the,given,java,mail,message,to,a,string,body,can,return,null;converter,public,static,string,to,string,message,message,throws,messaging,exception,ioexception,object,content,message,get,content,while,content,instanceof,mime,multipart,mime,multipart,multipart,mime,multipart,content,if,multipart,get,count,0,body,part,part,multipart,get,body,part,0,content,part,get,content,if,content,null,return,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Message message) throws MessagingException, IOException;1491464905;Converts the given JavaMail message to a String body._Can return null.;@Converter_    public static String toString(Message message) throws MessagingException, IOException {_        Object content = message.getContent()__        while (content instanceof MimeMultipart) {_            MimeMultipart multipart = (MimeMultipart) content__            if (multipart.getCount() > 0) {_                BodyPart part = multipart.getBodyPart(0)__                content = part.getContent()__            }_        }_        if (content != null) {_            return content.toString()__        }_        return null__    };converts,the,given,java,mail,message,to,a,string,body,can,return,null;converter,public,static,string,to,string,message,message,throws,messaging,exception,ioexception,object,content,message,get,content,while,content,instanceof,mime,multipart,mime,multipart,multipart,mime,multipart,content,if,multipart,get,count,0,body,part,part,multipart,get,body,part,0,content,part,get,content,if,content,null,return,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Message message) throws MessagingException, IOException;1524063106;Converts the given JavaMail message to a String body._Can return null.;@Converter_    public static String toString(Message message) throws MessagingException, IOException {_        Object content = message.getContent()__        while (content instanceof MimeMultipart) {_            MimeMultipart multipart = (MimeMultipart) content__            if (multipart.getCount() > 0) {_                BodyPart part = multipart.getBodyPart(0)__                content = part.getContent()__            }_        }_        if (content != null) {_            return content.toString()__        }_        return null__    };converts,the,given,java,mail,message,to,a,string,body,can,return,null;converter,public,static,string,to,string,message,message,throws,messaging,exception,ioexception,object,content,message,get,content,while,content,instanceof,mime,multipart,mime,multipart,multipart,mime,multipart,content,if,multipart,get,count,0,body,part,part,multipart,get,body,part,0,content,part,get,content,if,content,null,return,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Message message) throws MessagingException, IOException;1533640471;Converts the given JavaMail message to a String body._Can return null.;@Converter_    public static String toString(Message message) throws MessagingException, IOException {_        Object content = message.getContent()__        while (content instanceof MimeMultipart) {_            MimeMultipart multipart = (MimeMultipart) content__            if (multipart.getCount() > 0) {_                BodyPart part = multipart.getBodyPart(0)__                content = part.getContent()__            }_        }_        if (content != null) {_            return content.toString()__        }_        return null__    };converts,the,given,java,mail,message,to,a,string,body,can,return,null;converter,public,static,string,to,string,message,message,throws,messaging,exception,ioexception,object,content,message,get,content,while,content,instanceof,mime,multipart,mime,multipart,multipart,mime,multipart,content,if,multipart,get,count,0,body,part,part,multipart,get,body,part,0,content,part,get,content,if,content,null,return,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Message message) throws MessagingException, IOException;1537204343;Converts the given JavaMail message to a String body._Can return null.;@Converter_    public static String toString(Message message) throws MessagingException, IOException {_        Object content = message.getContent()__        while (content instanceof MimeMultipart) {_            MimeMultipart multipart = (MimeMultipart) content__            if (multipart.getCount() > 0) {_                BodyPart part = multipart.getBodyPart(0)__                content = part.getContent()__            }_        }_        if (content != null) {_            return content.toString()__        }_        return null__    };converts,the,given,java,mail,message,to,a,string,body,can,return,null;converter,public,static,string,to,string,message,message,throws,messaging,exception,ioexception,object,content,message,get,content,while,content,instanceof,mime,multipart,mime,multipart,multipart,mime,multipart,content,if,multipart,get,count,0,body,part,part,multipart,get,body,part,0,content,part,get,content,if,content,null,return,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Message message) throws MessagingException, IOException;1540108161;Converts the given JavaMail message to a String body._Can return null.;@Converter_    public static String toString(Message message) throws MessagingException, IOException {_        Object content = message.getContent()__        while (content instanceof MimeMultipart) {_            MimeMultipart multipart = (MimeMultipart) content__            if (multipart.getCount() > 0) {_                BodyPart part = multipart.getBodyPart(0)__                content = part.getContent()__            }_        }_        if (content != null) {_            return content.toString()__        }_        return null__    };converts,the,given,java,mail,message,to,a,string,body,can,return,null;converter,public,static,string,to,string,message,message,throws,messaging,exception,ioexception,object,content,message,get,content,while,content,instanceof,mime,multipart,mime,multipart,multipart,mime,multipart,content,if,multipart,get,count,0,body,part,part,multipart,get,body,part,0,content,part,get,content,if,content,null,return,content,to,string,return,null
MailConverters -> @Converter     public static String toString(Message message) throws MessagingException, IOException;1548332772;Converts the given JavaMail message to a String body._Can return null.;@Converter_    public static String toString(Message message) throws MessagingException, IOException {_        Object content = message.getContent()__        while (content instanceof MimeMultipart) {_            MimeMultipart multipart = (MimeMultipart) content__            if (multipart.getCount() > 0) {_                BodyPart part = multipart.getBodyPart(0)__                content = part.getContent()__            }_        }_        if (content != null) {_            return content.toString()__        }_        return null__    };converts,the,given,java,mail,message,to,a,string,body,can,return,null;converter,public,static,string,to,string,message,message,throws,messaging,exception,ioexception,object,content,message,get,content,while,content,instanceof,mime,multipart,mime,multipart,multipart,mime,multipart,content,if,multipart,get,count,0,body,part,part,multipart,get,body,part,0,content,part,get,content,if,content,null,return,content,to,string,return,null
MailConverters -> @Converter     public static InputStream toInputStream(Message message) throws IOException, MessagingException;1223804826;Converts the given JavaMail message to an InputStream._Can return null.;@Converter_    public static InputStream toInputStream(Message message) throws IOException, MessagingException {_        String s = toString(message)__        if (s == null) {_            return null__        }_        return IOConverter.toInputStream(s)__    };converts,the,given,java,mail,message,to,an,input,stream,can,return,null;converter,public,static,input,stream,to,input,stream,message,message,throws,ioexception,messaging,exception,string,s,to,string,message,if,s,null,return,null,return,ioconverter,to,input,stream,s
MailConverters -> @Converter     public static InputStream toInputStream(Message message) throws IOException, MessagingException;1224128608;Converts the given JavaMail message to an InputStream._Can return null.;@Converter_    public static InputStream toInputStream(Message message) throws IOException, MessagingException {_        String s = toString(message)__        if (s == null) {_            return null__        }_        return IOConverter.toInputStream(s)__    };converts,the,given,java,mail,message,to,an,input,stream,can,return,null;converter,public,static,input,stream,to,input,stream,message,message,throws,ioexception,messaging,exception,string,s,to,string,message,if,s,null,return,null,return,ioconverter,to,input,stream,s
MailConverters -> @Converter     public static InputStream toInputStream(Message message) throws IOException, MessagingException;1232411277;Converts the given JavaMail message to an InputStream._Can return null.;@Converter_    public static InputStream toInputStream(Message message) throws IOException, MessagingException {_        String s = toString(message)__        if (s == null) {_            return null__        }_        return IOConverter.toInputStream(s, null)__    };converts,the,given,java,mail,message,to,an,input,stream,can,return,null;converter,public,static,input,stream,to,input,stream,message,message,throws,ioexception,messaging,exception,string,s,to,string,message,if,s,null,return,null,return,ioconverter,to,input,stream,s,null
MailConverters -> @Converter     public static InputStream toInputStream(Message message) throws IOException, MessagingException;1255940586;Converts the given JavaMail message to an InputStream.;@Converter_    public static InputStream toInputStream(Message message) throws IOException, MessagingException {_        return message.getInputStream()__    };converts,the,given,java,mail,message,to,an,input,stream;converter,public,static,input,stream,to,input,stream,message,message,throws,ioexception,messaging,exception,return,message,get,input,stream
MailConverters -> @Converter     public static InputStream toInputStream(Message message) throws IOException, MessagingException;1297975937;Converts the given JavaMail message to an InputStream.;@Converter_    public static InputStream toInputStream(Message message) throws IOException, MessagingException {_        return message.getInputStream()__    };converts,the,given,java,mail,message,to,an,input,stream;converter,public,static,input,stream,to,input,stream,message,message,throws,ioexception,messaging,exception,return,message,get,input,stream
MailConverters -> @Converter     public static InputStream toInputStream(Message message) throws IOException, MessagingException;1352827558;Converts the given JavaMail message to an InputStream.;@Converter_    public static InputStream toInputStream(Message message) throws IOException, MessagingException {_        return message.getInputStream()__    };converts,the,given,java,mail,message,to,an,input,stream;converter,public,static,input,stream,to,input,stream,message,message,throws,ioexception,messaging,exception,return,message,get,input,stream
MailConverters -> @Converter     public static InputStream toInputStream(Message message) throws IOException, MessagingException;1352886214;Converts the given JavaMail message to an InputStream.;@Converter_    public static InputStream toInputStream(Message message) throws IOException, MessagingException {_        return message.getInputStream()__    };converts,the,given,java,mail,message,to,an,input,stream;converter,public,static,input,stream,to,input,stream,message,message,throws,ioexception,messaging,exception,return,message,get,input,stream
MailConverters -> @Converter     public static InputStream toInputStream(Message message) throws IOException, MessagingException;1352886964;Converts the given JavaMail message to an InputStream.;@Converter_    public static InputStream toInputStream(Message message) throws IOException, MessagingException {_        return message.getInputStream()__    };converts,the,given,java,mail,message,to,an,input,stream;converter,public,static,input,stream,to,input,stream,message,message,throws,ioexception,messaging,exception,return,message,get,input,stream
MailConverters -> @Converter     public static InputStream toInputStream(Message message) throws IOException, MessagingException;1357548356;Converts the given JavaMail message to an InputStream.;@Converter_    public static InputStream toInputStream(Message message) throws IOException, MessagingException {_        return message.getInputStream()__    };converts,the,given,java,mail,message,to,an,input,stream;converter,public,static,input,stream,to,input,stream,message,message,throws,ioexception,messaging,exception,return,message,get,input,stream
MailConverters -> @Converter     public static InputStream toInputStream(Message message) throws IOException, MessagingException;1376374990;Converts the given JavaMail message to an InputStream.;@Converter_    public static InputStream toInputStream(Message message) throws IOException, MessagingException {_        return message.getInputStream()__    };converts,the,given,java,mail,message,to,an,input,stream;converter,public,static,input,stream,to,input,stream,message,message,throws,ioexception,messaging,exception,return,message,get,input,stream
MailConverters -> @Converter     public static InputStream toInputStream(Message message) throws IOException, MessagingException;1431092406;Converts the given JavaMail message to an InputStream.;@Converter_    public static InputStream toInputStream(Message message) throws IOException, MessagingException {_        return message.getInputStream()__    };converts,the,given,java,mail,message,to,an,input,stream;converter,public,static,input,stream,to,input,stream,message,message,throws,ioexception,messaging,exception,return,message,get,input,stream
MailConverters -> @Converter     public static InputStream toInputStream(Message message) throws IOException, MessagingException;1469773139;Converts the given JavaMail message to an InputStream.;@Converter_    public static InputStream toInputStream(Message message) throws IOException, MessagingException {_        return message.getInputStream()__    };converts,the,given,java,mail,message,to,an,input,stream;converter,public,static,input,stream,to,input,stream,message,message,throws,ioexception,messaging,exception,return,message,get,input,stream
MailConverters -> @Converter     public static InputStream toInputStream(Message message) throws IOException, MessagingException;1473411242;Converts the given JavaMail message to an InputStream.;@Converter_    public static InputStream toInputStream(Message message) throws IOException, MessagingException {_        return message.getInputStream()__    };converts,the,given,java,mail,message,to,an,input,stream;converter,public,static,input,stream,to,input,stream,message,message,throws,ioexception,messaging,exception,return,message,get,input,stream
MailConverters -> @Converter     public static InputStream toInputStream(Message message) throws IOException, MessagingException;1491464905;Converts the given JavaMail message to an InputStream.;@Converter_    public static InputStream toInputStream(Message message) throws IOException, MessagingException {_        return message.getInputStream()__    };converts,the,given,java,mail,message,to,an,input,stream;converter,public,static,input,stream,to,input,stream,message,message,throws,ioexception,messaging,exception,return,message,get,input,stream
MailConverters -> @Converter     public static InputStream toInputStream(Message message) throws IOException, MessagingException;1524063106;Converts the given JavaMail message to an InputStream.;@Converter_    public static InputStream toInputStream(Message message) throws IOException, MessagingException {_        return message.getInputStream()__    };converts,the,given,java,mail,message,to,an,input,stream;converter,public,static,input,stream,to,input,stream,message,message,throws,ioexception,messaging,exception,return,message,get,input,stream
MailConverters -> @Converter     public static InputStream toInputStream(Message message) throws IOException, MessagingException;1533640471;Converts the given JavaMail message to an InputStream.;@Converter_    public static InputStream toInputStream(Message message) throws IOException, MessagingException {_        return message.getInputStream()__    };converts,the,given,java,mail,message,to,an,input,stream;converter,public,static,input,stream,to,input,stream,message,message,throws,ioexception,messaging,exception,return,message,get,input,stream
MailConverters -> @Converter     public static InputStream toInputStream(Message message) throws IOException, MessagingException;1537204343;Converts the given JavaMail message to an InputStream.;@Converter_    public static InputStream toInputStream(Message message) throws IOException, MessagingException {_        return message.getInputStream()__    };converts,the,given,java,mail,message,to,an,input,stream;converter,public,static,input,stream,to,input,stream,message,message,throws,ioexception,messaging,exception,return,message,get,input,stream
MailConverters -> @Converter     public static InputStream toInputStream(Message message) throws IOException, MessagingException;1540108161;Converts the given JavaMail message to an InputStream.;@Converter_    public static InputStream toInputStream(Message message) throws IOException, MessagingException {_        return message.getInputStream()__    };converts,the,given,java,mail,message,to,an,input,stream;converter,public,static,input,stream,to,input,stream,message,message,throws,ioexception,messaging,exception,return,message,get,input,stream
MailConverters -> @Converter     public static InputStream toInputStream(Message message) throws IOException, MessagingException;1548332772;Converts the given JavaMail message to an InputStream.;@Converter_    public static InputStream toInputStream(Message message) throws IOException, MessagingException {_        return message.getInputStream()__    };converts,the,given,java,mail,message,to,an,input,stream;converter,public,static,input,stream,to,input,stream,message,message,throws,ioexception,messaging,exception,return,message,get,input,stream
MailConverters -> @Converter     public String toString(Message message) throws MessagingException, IOException;1179416274;Converts the given JavaMail message to a String body__@param message the message_@return the String content_@throws MessagingException_@throws IOException;@Converter_    public String toString(Message message) throws MessagingException, IOException {_        Object content = message.getContent()__        if (content instanceof MimeMultipart) {_            MimeMultipart multipart = (MimeMultipart) content__            if (multipart.getCount() > 0) {_                BodyPart part = multipart.getBodyPart(0)__                content = part.getContent()__            }_        }_        if (content != null) {_            return content.toString()__        }_        return null__    };converts,the,given,java,mail,message,to,a,string,body,param,message,the,message,return,the,string,content,throws,messaging,exception,throws,ioexception;converter,public,string,to,string,message,message,throws,messaging,exception,ioexception,object,content,message,get,content,if,content,instanceof,mime,multipart,mime,multipart,multipart,mime,multipart,content,if,multipart,get,count,0,body,part,part,multipart,get,body,part,0,content,part,get,content,if,content,null,return,content,to,string,return,null
MailConverters -> @Converter     public String toString(Message message) throws MessagingException, IOException;1179421724;Converts the given JavaMail message to a String body__@param message the message_@return the String content_@throws MessagingException_@throws IOException;@Converter_    public String toString(Message message) throws MessagingException, IOException {_        Object content = message.getContent()__        if (content instanceof MimeMultipart) {_            MimeMultipart multipart = (MimeMultipart) content__            if (multipart.getCount() > 0) {_                BodyPart part = multipart.getBodyPart(0)__                content = part.getContent()__            }_        }_        if (content != null) {_            return content.toString()__        }_        return null__    };converts,the,given,java,mail,message,to,a,string,body,param,message,the,message,return,the,string,content,throws,messaging,exception,throws,ioexception;converter,public,string,to,string,message,message,throws,messaging,exception,ioexception,object,content,message,get,content,if,content,instanceof,mime,multipart,mime,multipart,multipart,mime,multipart,content,if,multipart,get,count,0,body,part,part,multipart,get,body,part,0,content,part,get,content,if,content,null,return,content,to,string,return,null
MailConverters -> @Converter     public String toString(Message message) throws MessagingException, IOException;1186522380;Converts the given JavaMail message to a String body__@param message the message_@return the String content_@throws MessagingException_@throws IOException;@Converter_    public String toString(Message message) throws MessagingException, IOException {_        Object content = message.getContent()__        if (content instanceof MimeMultipart) {_            MimeMultipart multipart = (MimeMultipart) content__            if (multipart.getCount() > 0) {_                BodyPart part = multipart.getBodyPart(0)__                content = part.getContent()__            }_        }_        if (content != null) {_            return content.toString()__        }_        return null__    };converts,the,given,java,mail,message,to,a,string,body,param,message,the,message,return,the,string,content,throws,messaging,exception,throws,ioexception;converter,public,string,to,string,message,message,throws,messaging,exception,ioexception,object,content,message,get,content,if,content,instanceof,mime,multipart,mime,multipart,multipart,mime,multipart,content,if,multipart,get,count,0,body,part,part,multipart,get,body,part,0,content,part,get,content,if,content,null,return,content,to,string,return,null
MailConverters -> @Converter     public String toString(Message message) throws MessagingException, IOException;1203830000;Converts the given JavaMail message to a String body__@param message the message_@return the String content_@throws MessagingException_@throws IOException;@Converter_    public String toString(Message message) throws MessagingException, IOException {_        Object content = message.getContent()__        if (content instanceof MimeMultipart) {_            MimeMultipart multipart = (MimeMultipart) content__            if (multipart.getCount() > 0) {_                BodyPart part = multipart.getBodyPart(0)__                content = part.getContent()__            }_        }_        if (content != null) {_            return content.toString()__        }_        return null__    };converts,the,given,java,mail,message,to,a,string,body,param,message,the,message,return,the,string,content,throws,messaging,exception,throws,ioexception;converter,public,string,to,string,message,message,throws,messaging,exception,ioexception,object,content,message,get,content,if,content,instanceof,mime,multipart,mime,multipart,multipart,mime,multipart,content,if,multipart,get,count,0,body,part,part,multipart,get,body,part,0,content,part,get,content,if,content,null,return,content,to,string,return,null
MailConverters -> @Converter     public String toString(Message message) throws MessagingException, IOException;1209528612;Converts the given JavaMail message to a String body._Can return null.;@Converter_    public String toString(Message message) throws MessagingException, IOException {_        Object content = message.getContent()__        if (content instanceof MimeMultipart) {_            MimeMultipart multipart = (MimeMultipart) content__            if (multipart.getCount() > 0) {_                BodyPart part = multipart.getBodyPart(0)__                content = part.getContent()__            }_        }_        if (content != null) {_            return content.toString()__        }_        return null__    };converts,the,given,java,mail,message,to,a,string,body,can,return,null;converter,public,string,to,string,message,message,throws,messaging,exception,ioexception,object,content,message,get,content,if,content,instanceof,mime,multipart,mime,multipart,multipart,mime,multipart,content,if,multipart,get,count,0,body,part,part,multipart,get,body,part,0,content,part,get,content,if,content,null,return,content,to,string,return,null
