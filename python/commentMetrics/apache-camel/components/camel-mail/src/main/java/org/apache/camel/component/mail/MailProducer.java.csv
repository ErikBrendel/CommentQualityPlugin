commented;modifiers;parameterAmount;loc;comment;code
false;public;1;31;;public void process(final Exchange exchange) {     ClassLoader tccl = Thread.currentThread().getContextClassLoader().     try {         ClassLoader applicationClassLoader = getEndpoint().getCamelContext().getApplicationContextClassLoader().         if (applicationClassLoader != null) {             Thread.currentThread().setContextClassLoader(applicationClassLoader).         }         MimeMessage mimeMessage.         final Object body = exchange.getIn().getBody().         if (body instanceof MimeMessage) {             // Body is directly a MimeMessage             mimeMessage = (MimeMessage) body.         } else {             // Create a message with exchange data             mimeMessage = new MimeMessage(sender.getSession()).             getEndpoint().getBinding().populateMailMessage(getEndpoint(), mimeMessage, exchange).         }         if (log.isDebugEnabled()) {             log.debug("Sending MimeMessage: {}", MailUtils.dumpMessage(mimeMessage)).         }         sender.send(mimeMessage).         // set the message ID for further processing         exchange.getIn().setHeader(MailConstants.MAIL_MESSAGE_ID, mimeMessage.getMessageID()).     } catch (MessagingException | IOException e) {         exchange.setException(e).     } finally {         Thread.currentThread().setContextClassLoader(tccl).     } }
false;public;0;4;;@Override public MailEndpoint getEndpoint() {     return (MailEndpoint) super.getEndpoint(). }
