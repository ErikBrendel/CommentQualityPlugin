# id;timestamp;commentText;codeText;commentWords;codeWords
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1280483130;Strategy to flag the message after being processed.__@param mail the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            if (endpoint.getConfiguration().isDelete()) {_                LOG.debug("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.debug("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }_        } catch (MessagingException e) {_            LOG.warn("Error occurred during flagging message as DELETED/SEEN", e)__            exchange.setException(e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,endpoint,get,configuration,is,delete,log,debug,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,debug,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,catch,messaging,exception,e,log,warn,error,occurred,during,flagging,message,as,deleted,seen,e,exchange,set,exception,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1290627379;Strategy to flag the message after being processed.__@param mail the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            if (endpoint.getConfiguration().isDelete()) {_                LOG.debug("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.debug("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }_        } catch (MessagingException e) {_            LOG.warn("Error occurred during flagging message as DELETED/SEEN", e)__            exchange.setException(e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,endpoint,get,configuration,is,delete,log,debug,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,debug,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,catch,messaging,exception,e,log,warn,error,occurred,during,flagging,message,as,deleted,seen,e,exchange,set,exception,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1294095454;Strategy to flag the message after being processed.__@param mail the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            if (getEndpoint().getConfiguration().isDelete()) {_                LOG.debug("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.debug("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }_        } catch (MessagingException e) {_            LOG.warn("Error occurred during flagging message as DELETED/SEEN", e)__            exchange.setException(e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,get,endpoint,get,configuration,is,delete,log,debug,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,debug,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,catch,messaging,exception,e,log,warn,error,occurred,during,flagging,message,as,deleted,seen,e,exchange,set,exception,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1294920065;Strategy to flag the message after being processed.__@param mail the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            if (getEndpoint().getConfiguration().isDelete()) {_                LOG.debug("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.debug("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }_        } catch (MessagingException e) {_            LOG.warn("Error occurred during flagging message as DELETED/SEEN", e)__            exchange.setException(e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,get,endpoint,get,configuration,is,delete,log,debug,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,debug,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,catch,messaging,exception,e,log,warn,error,occurred,during,flagging,message,as,deleted,seen,e,exchange,set,exception,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1296546062;Strategy to flag the message after being processed.__@param mail the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            if (getEndpoint().getConfiguration().isDelete()) {_                LOG.debug("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.debug("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }_        } catch (MessagingException e) {_            LOG.warn("Error occurred during flagging message as DELETED/SEEN", e)__            exchange.setException(e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,get,endpoint,get,configuration,is,delete,log,debug,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,debug,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,catch,messaging,exception,e,log,warn,error,occurred,during,flagging,message,as,deleted,seen,e,exchange,set,exception,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1297975937;Strategy to flag the message after being processed.__@param mail the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            if (getEndpoint().getConfiguration().isDelete()) {_                LOG.debug("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.debug("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }_        } catch (MessagingException e) {_            LOG.warn("Error occurred during flagging message as DELETED/SEEN", e)__            exchange.setException(e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,get,endpoint,get,configuration,is,delete,log,debug,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,debug,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,catch,messaging,exception,e,log,warn,error,occurred,during,flagging,message,as,deleted,seen,e,exchange,set,exception,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1303938483;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }_            if (getEndpoint().getConfiguration().isDelete()) {_                LOG.debug("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.debug("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }_        } catch (MessagingException e) {_            LOG.warn("Error occurred during flagging message as DELETED/SEEN", e)__            exchange.setException(e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,if,get,endpoint,get,configuration,is,delete,log,debug,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,debug,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,catch,messaging,exception,e,log,warn,error,occurred,during,flagging,message,as,deleted,seen,e,exchange,set,exception,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1307685726;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }_            if (getEndpoint().getConfiguration().isDelete()) {_                LOG.debug("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.debug("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }_        } catch (MessagingException e) {_            LOG.warn("Error occurred during flagging message as DELETED/SEEN", e)__            exchange.setException(e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,if,get,endpoint,get,configuration,is,delete,log,debug,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,debug,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,catch,messaging,exception,e,log,warn,error,occurred,during,flagging,message,as,deleted,seen,e,exchange,set,exception,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1309171908;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            _            _            String uid = (String) exchange.removeProperty(POP3_UID)__            if (uid != null) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(generatePop3Uid(msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            if (getEndpoint().getConfiguration().isDelete()) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }_        } catch (MessagingException e) {_            LOG.warn("Error occurred during flagging message as DELETED/SEEN", e)__            exchange.setException(e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,uid,null,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,generate,pop3uid,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,if,get,endpoint,get,configuration,is,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,catch,messaging,exception,e,log,warn,error,occurred,during,flagging,message,as,deleted,seen,e,exchange,set,exception,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1309489350;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            _            _            String uid = (String) exchange.removeProperty(POP3_UID)__            if (uid != null) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(generatePop3Uid(msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            if (getEndpoint().getConfiguration().isDelete()) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }_        } catch (MessagingException e) {_            LOG.warn("Error occurred during flagging message as DELETED/SEEN", e)__            exchange.setException(e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,uid,null,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,generate,pop3uid,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,if,get,endpoint,get,configuration,is,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,catch,messaging,exception,e,log,warn,error,occurred,during,flagging,message,as,deleted,seen,e,exchange,set,exception,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1310115781;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            _            _            String uid = (String) exchange.removeProperty(POP3_UID)__            if (uid != null) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(generatePop3Uid(msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            if (getEndpoint().getConfiguration().isDelete()) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }_        } catch (MessagingException e) {_            LOG.warn("Error occurred during flagging message as DELETED/SEEN", e)__            exchange.setException(e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,uid,null,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,generate,pop3uid,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,if,get,endpoint,get,configuration,is,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,catch,messaging,exception,e,log,warn,error,occurred,during,flagging,message,as,deleted,seen,e,exchange,set,exception,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1319972091;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            _            _            String uid = (String) exchange.removeProperty(POP3_UID)__            if (uid != null) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(generatePop3Uid(msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            if (getEndpoint().getConfiguration().isDelete()) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }_        } catch (MessagingException e) {_            LOG.warn("Error occurred during flagging message as DELETED/SEEN", e)__            exchange.setException(e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,uid,null,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,generate,pop3uid,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,if,get,endpoint,get,configuration,is,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,catch,messaging,exception,e,log,warn,error,occurred,during,flagging,message,as,deleted,seen,e,exchange,set,exception,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1320497173;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            _            _            String uid = (String) exchange.removeProperty(POP3_UID)__            if (uid != null) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(generatePop3Uid(msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            if (getEndpoint().getConfiguration().isDelete()) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }_        } catch (MessagingException e) {_            LOG.warn("Error occurred during flagging message as DELETED/SEEN", e)__            exchange.setException(e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,uid,null,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,generate,pop3uid,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,if,get,endpoint,get,configuration,is,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,catch,messaging,exception,e,log,warn,error,occurred,during,flagging,message,as,deleted,seen,e,exchange,set,exception,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1322310120;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            _            _            String uid = (String) exchange.removeProperty(POP3_UID)__            if (uid != null) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(generatePop3Uid(msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            if (getEndpoint().getConfiguration().isDelete()) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }_        } catch (MessagingException e) {_            LOG.warn("Error occurred during flagging message as DELETED/SEEN", e)__            exchange.setException(e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,uid,null,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,generate,pop3uid,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,if,get,endpoint,get,configuration,is,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,catch,messaging,exception,e,log,warn,error,occurred,during,flagging,message,as,deleted,seen,e,exchange,set,exception,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1326499990;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            _            _            String uid = (String) exchange.removeProperty(POP3_UID)__            if (uid != null) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(generatePop3Uid(msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            if (getEndpoint().getConfiguration().isDelete()) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }_        } catch (MessagingException e) {_            LOG.warn("Error occurred during flagging message as DELETED/SEEN", e)__            exchange.setException(e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,uid,null,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,generate,pop3uid,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,if,get,endpoint,get,configuration,is,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,catch,messaging,exception,e,log,warn,error,occurred,during,flagging,message,as,deleted,seen,e,exchange,set,exception,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1326561926;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            _            _            String uid = (String) exchange.removeProperty(POP3_UID)__            if (uid != null) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(generatePop3Uid(msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            if (getEndpoint().getConfiguration().isDelete()) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }_        } catch (MessagingException e) {_            LOG.warn("Error occurred during flagging message as DELETED/SEEN", e)__            exchange.setException(e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,uid,null,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,generate,pop3uid,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,if,get,endpoint,get,configuration,is,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,catch,messaging,exception,e,log,warn,error,occurred,during,flagging,message,as,deleted,seen,e,exchange,set,exception,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1337525537;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            _            _            String uid = (String) exchange.removeProperty(POP3_UID)__            if (uid != null) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(generatePop3Uid(msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            org.apache.camel.Message in = exchange.getIn()__            MailConfiguration config = getEndpoint().getConfiguration()__            _            String copyTo = in.getHeader("copyTo", config.getCopyTo(), String.class)__            boolean delete = in.getHeader("delete", config.isDelete(), boolean.class)___            _            if (config.getProtocol().equals(MailUtils.PROTOCOL_IMAP) || config.getProtocol().equals(MailUtils.PROTOCOL_IMAPS)) {_                if (copyTo != null) {_                    LOG.trace("IMAP message needs to be copied to {}", copyTo)__                    Folder destFolder = store.getFolder(copyTo)__                    if (!destFolder.exists()) {_                        destFolder.create(Folder.HOLDS_MESSAGES)__                    }_                    folder.copyMessages(new Message[]{mail}, destFolder)__                    LOG.trace("IMAP message {} copied to {}", mail, copyTo)__                }_            }__            if (delete) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }_        } catch (MessagingException e) {_            getExceptionHandler().handleException("Error occurred during committing mail message: " + mail, exchange, e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,uid,null,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,generate,pop3uid,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,org,apache,camel,message,in,exchange,get,in,mail,configuration,config,get,endpoint,get,configuration,string,copy,to,in,get,header,copy,to,config,get,copy,to,string,class,boolean,delete,in,get,header,delete,config,is,delete,boolean,class,if,config,get,protocol,equals,mail,utils,config,get,protocol,equals,mail,utils,if,copy,to,null,log,trace,imap,message,needs,to,be,copied,to,copy,to,folder,dest,folder,store,get,folder,copy,to,if,dest,folder,exists,dest,folder,create,folder,folder,copy,messages,new,message,mail,dest,folder,log,trace,imap,message,copied,to,mail,copy,to,if,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,catch,messaging,exception,e,get,exception,handler,handle,exception,error,occurred,during,committing,mail,message,mail,exchange,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1352827558;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            _            _            String uid = (String) exchange.removeProperty(POP3_UID)__            if (uid != null) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(generatePop3Uid(msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            org.apache.camel.Message in = exchange.getIn()__            MailConfiguration config = getEndpoint().getConfiguration()__            _            String copyTo = in.getHeader("copyTo", config.getCopyTo(), String.class)__            boolean delete = in.getHeader("delete", config.isDelete(), boolean.class)___            _            if (config.getProtocol().equals(MailUtils.PROTOCOL_IMAP) || config.getProtocol().equals(MailUtils.PROTOCOL_IMAPS)) {_                if (copyTo != null) {_                    LOG.trace("IMAP message needs to be copied to {}", copyTo)__                    Folder destFolder = store.getFolder(copyTo)__                    if (!destFolder.exists()) {_                        destFolder.create(Folder.HOLDS_MESSAGES)__                    }_                    folder.copyMessages(new Message[]{mail}, destFolder)__                    LOG.trace("IMAP message {} copied to {}", mail, copyTo)__                }_            }__            if (delete) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }_        } catch (MessagingException e) {_            getExceptionHandler().handleException("Error occurred during committing mail message: " + mail, exchange, e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,uid,null,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,generate,pop3uid,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,org,apache,camel,message,in,exchange,get,in,mail,configuration,config,get,endpoint,get,configuration,string,copy,to,in,get,header,copy,to,config,get,copy,to,string,class,boolean,delete,in,get,header,delete,config,is,delete,boolean,class,if,config,get,protocol,equals,mail,utils,config,get,protocol,equals,mail,utils,if,copy,to,null,log,trace,imap,message,needs,to,be,copied,to,copy,to,folder,dest,folder,store,get,folder,copy,to,if,dest,folder,exists,dest,folder,create,folder,folder,copy,messages,new,message,mail,dest,folder,log,trace,imap,message,copied,to,mail,copy,to,if,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,catch,messaging,exception,e,get,exception,handler,handle,exception,error,occurred,during,committing,mail,message,mail,exchange,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1354318669;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            _            _            String uid = (String) exchange.removeProperty(POP3_UID)__            if (uid != null) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(generatePop3Uid(msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            org.apache.camel.Message in = exchange.getIn()__            MailConfiguration config = getEndpoint().getConfiguration()__            _            String copyTo = in.getHeader("copyTo", config.getCopyTo(), String.class)__            boolean delete = in.getHeader("delete", config.isDelete(), boolean.class)___            _            if (config.getProtocol().equals(MailUtils.PROTOCOL_IMAP) || config.getProtocol().equals(MailUtils.PROTOCOL_IMAPS)) {_                if (copyTo != null) {_                    LOG.trace("IMAP message needs to be copied to {}", copyTo)__                    Folder destFolder = store.getFolder(copyTo)__                    if (!destFolder.exists()) {_                        destFolder.create(Folder.HOLDS_MESSAGES)__                    }_                    folder.copyMessages(new Message[]{mail}, destFolder)__                    LOG.trace("IMAP message {} copied to {}", mail, copyTo)__                }_            }__            if (delete) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }_        } catch (MessagingException e) {_            getExceptionHandler().handleException("Error occurred during committing mail message: " + mail, exchange, e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,uid,null,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,generate,pop3uid,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,org,apache,camel,message,in,exchange,get,in,mail,configuration,config,get,endpoint,get,configuration,string,copy,to,in,get,header,copy,to,config,get,copy,to,string,class,boolean,delete,in,get,header,delete,config,is,delete,boolean,class,if,config,get,protocol,equals,mail,utils,config,get,protocol,equals,mail,utils,if,copy,to,null,log,trace,imap,message,needs,to,be,copied,to,copy,to,folder,dest,folder,store,get,folder,copy,to,if,dest,folder,exists,dest,folder,create,folder,folder,copy,messages,new,message,mail,dest,folder,log,trace,imap,message,copied,to,mail,copy,to,if,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,catch,messaging,exception,e,get,exception,handler,handle,exception,error,occurred,during,committing,mail,message,mail,exchange,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1359885305;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            _            _            String uid = (String) exchange.removeProperty(POP3_UID)__            if (uid != null) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(generatePop3Uid(msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            org.apache.camel.Message in = exchange.getIn()__            MailConfiguration config = getEndpoint().getConfiguration()__            _            String copyTo = in.getHeader("copyTo", config.getCopyTo(), String.class)__            boolean delete = in.getHeader("delete", config.isDelete(), boolean.class)___            _            if (config.getProtocol().equals(MailUtils.PROTOCOL_IMAP) || config.getProtocol().equals(MailUtils.PROTOCOL_IMAPS)) {_                if (copyTo != null) {_                    LOG.trace("IMAP message needs to be copied to {}", copyTo)__                    Folder destFolder = store.getFolder(copyTo)__                    if (!destFolder.exists()) {_                        destFolder.create(Folder.HOLDS_MESSAGES)__                    }_                    folder.copyMessages(new Message[]{mail}, destFolder)__                    LOG.trace("IMAP message {} copied to {}", mail, copyTo)__                }_            }__            if (delete) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }_        } catch (MessagingException e) {_            getExceptionHandler().handleException("Error occurred during committing mail message: " + mail, exchange, e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,uid,null,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,generate,pop3uid,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,org,apache,camel,message,in,exchange,get,in,mail,configuration,config,get,endpoint,get,configuration,string,copy,to,in,get,header,copy,to,config,get,copy,to,string,class,boolean,delete,in,get,header,delete,config,is,delete,boolean,class,if,config,get,protocol,equals,mail,utils,config,get,protocol,equals,mail,utils,if,copy,to,null,log,trace,imap,message,needs,to,be,copied,to,copy,to,folder,dest,folder,store,get,folder,copy,to,if,dest,folder,exists,dest,folder,create,folder,folder,copy,messages,new,message,mail,dest,folder,log,trace,imap,message,copied,to,mail,copy,to,if,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,catch,messaging,exception,e,get,exception,handler,handle,exception,error,occurred,during,committing,mail,message,mail,exchange,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1363874390;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            _            _            String uid = (String) exchange.removeProperty(POP3_UID)__            if (uid != null) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(generatePop3Uid(msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            org.apache.camel.Message in = exchange.getIn()__            MailConfiguration config = getEndpoint().getConfiguration()__            _            String copyTo = in.getHeader("copyTo", config.getCopyTo(), String.class)__            boolean delete = in.getHeader("delete", config.isDelete(), boolean.class)___            _            if (config.getProtocol().equals(MailUtils.PROTOCOL_IMAP) || config.getProtocol().equals(MailUtils.PROTOCOL_IMAPS)) {_                if (copyTo != null) {_                    LOG.trace("IMAP message needs to be copied to {}", copyTo)__                    Folder destFolder = store.getFolder(copyTo)__                    if (!destFolder.exists()) {_                        destFolder.create(Folder.HOLDS_MESSAGES)__                    }_                    folder.copyMessages(new Message[]{mail}, destFolder)__                    LOG.trace("IMAP message {} copied to {}", mail, copyTo)__                }_            }__            if (delete) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }_        } catch (MessagingException e) {_            getExceptionHandler().handleException("Error occurred during committing mail message: " + mail, exchange, e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,uid,null,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,generate,pop3uid,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,org,apache,camel,message,in,exchange,get,in,mail,configuration,config,get,endpoint,get,configuration,string,copy,to,in,get,header,copy,to,config,get,copy,to,string,class,boolean,delete,in,get,header,delete,config,is,delete,boolean,class,if,config,get,protocol,equals,mail,utils,config,get,protocol,equals,mail,utils,if,copy,to,null,log,trace,imap,message,needs,to,be,copied,to,copy,to,folder,dest,folder,store,get,folder,copy,to,if,dest,folder,exists,dest,folder,create,folder,folder,copy,messages,new,message,mail,dest,folder,log,trace,imap,message,copied,to,mail,copy,to,if,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,catch,messaging,exception,e,get,exception,handler,handle,exception,error,occurred,during,committing,mail,message,mail,exchange,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1376549254;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            _            _            String uid = (String) exchange.removeProperty(POP3_UID)__            if (uid != null) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(generatePop3Uid(msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            org.apache.camel.Message in = exchange.getIn()__            MailConfiguration config = getEndpoint().getConfiguration()__            _            String copyTo = in.getHeader("copyTo", config.getCopyTo(), String.class)__            boolean delete = in.getHeader("delete", config.isDelete(), boolean.class)___            _            if (config.getProtocol().equals(MailUtils.PROTOCOL_IMAP) || config.getProtocol().equals(MailUtils.PROTOCOL_IMAPS)) {_                if (copyTo != null) {_                    LOG.trace("IMAP message needs to be copied to {}", copyTo)__                    Folder destFolder = store.getFolder(copyTo)__                    if (!destFolder.exists()) {_                        destFolder.create(Folder.HOLDS_MESSAGES)__                    }_                    folder.copyMessages(new Message[]{mail}, destFolder)__                    LOG.trace("IMAP message {} copied to {}", mail, copyTo)__                }_            }__            if (delete) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }_        } catch (MessagingException e) {_            getExceptionHandler().handleException("Error occurred during committing mail message: " + mail, exchange, e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,uid,null,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,generate,pop3uid,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,org,apache,camel,message,in,exchange,get,in,mail,configuration,config,get,endpoint,get,configuration,string,copy,to,in,get,header,copy,to,config,get,copy,to,string,class,boolean,delete,in,get,header,delete,config,is,delete,boolean,class,if,config,get,protocol,equals,mail,utils,config,get,protocol,equals,mail,utils,if,copy,to,null,log,trace,imap,message,needs,to,be,copied,to,copy,to,folder,dest,folder,store,get,folder,copy,to,if,dest,folder,exists,dest,folder,create,folder,folder,copy,messages,new,message,mail,dest,folder,log,trace,imap,message,copied,to,mail,copy,to,if,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,catch,messaging,exception,e,get,exception,handler,handle,exception,error,occurred,during,committing,mail,message,mail,exchange,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1377540098;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            _            _            String uid = (String) exchange.removeProperty(POP3_UID)__            if (uid != null) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(generatePop3Uid(msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            org.apache.camel.Message in = exchange.getIn()__            MailConfiguration config = getEndpoint().getConfiguration()__            _            String copyTo = in.getHeader("copyTo", config.getCopyTo(), String.class)__            boolean delete = in.getHeader("delete", config.isDelete(), boolean.class)___            _            if (config.getProtocol().equals(MailUtils.PROTOCOL_IMAP) || config.getProtocol().equals(MailUtils.PROTOCOL_IMAPS)) {_                if (copyTo != null) {_                    LOG.trace("IMAP message needs to be copied to {}", copyTo)__                    Folder destFolder = store.getFolder(copyTo)__                    if (!destFolder.exists()) {_                        destFolder.create(Folder.HOLDS_MESSAGES)__                    }_                    folder.copyMessages(new Message[]{mail}, destFolder)__                    LOG.trace("IMAP message {} copied to {}", mail, copyTo)__                }_            }__            if (delete) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }_        } catch (MessagingException e) {_            getExceptionHandler().handleException("Error occurred during committing mail message: " + mail, exchange, e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,uid,null,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,generate,pop3uid,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,org,apache,camel,message,in,exchange,get,in,mail,configuration,config,get,endpoint,get,configuration,string,copy,to,in,get,header,copy,to,config,get,copy,to,string,class,boolean,delete,in,get,header,delete,config,is,delete,boolean,class,if,config,get,protocol,equals,mail,utils,config,get,protocol,equals,mail,utils,if,copy,to,null,log,trace,imap,message,needs,to,be,copied,to,copy,to,folder,dest,folder,store,get,folder,copy,to,if,dest,folder,exists,dest,folder,create,folder,folder,copy,messages,new,message,mail,dest,folder,log,trace,imap,message,copied,to,mail,copy,to,if,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,catch,messaging,exception,e,get,exception,handler,handle,exception,error,occurred,during,committing,mail,message,mail,exchange,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1382796372;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            _            _            String uid = (String) exchange.removeProperty(POP3_UID)__            if (uid != null) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(generatePop3Uid(msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            org.apache.camel.Message in = exchange.getIn()__            MailConfiguration config = getEndpoint().getConfiguration()__            _            String copyTo = in.getHeader("copyTo", config.getCopyTo(), String.class)__            boolean delete = in.getHeader("delete", config.isDelete(), boolean.class)___            _            if (config.getProtocol().equals(MailUtils.PROTOCOL_IMAP) || config.getProtocol().equals(MailUtils.PROTOCOL_IMAPS)) {_                if (copyTo != null) {_                    LOG.trace("IMAP message needs to be copied to {}", copyTo)__                    Folder destFolder = store.getFolder(copyTo)__                    if (!destFolder.exists()) {_                        destFolder.create(Folder.HOLDS_MESSAGES)__                    }_                    folder.copyMessages(new Message[]{mail}, destFolder)__                    LOG.trace("IMAP message {} copied to {}", mail, copyTo)__                }_            }__            if (delete) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }_        } catch (MessagingException e) {_            getExceptionHandler().handleException("Error occurred during committing mail message: " + mail, exchange, e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,uid,null,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,generate,pop3uid,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,org,apache,camel,message,in,exchange,get,in,mail,configuration,config,get,endpoint,get,configuration,string,copy,to,in,get,header,copy,to,config,get,copy,to,string,class,boolean,delete,in,get,header,delete,config,is,delete,boolean,class,if,config,get,protocol,equals,mail,utils,config,get,protocol,equals,mail,utils,if,copy,to,null,log,trace,imap,message,needs,to,be,copied,to,copy,to,folder,dest,folder,store,get,folder,copy,to,if,dest,folder,exists,dest,folder,create,folder,folder,copy,messages,new,message,mail,dest,folder,log,trace,imap,message,copied,to,mail,copy,to,if,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,catch,messaging,exception,e,get,exception,handler,handle,exception,error,occurred,during,committing,mail,message,mail,exchange,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1395076208;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            _            _            String uid = (String) exchange.removeProperty(POP3_UID)__            if (uid != null) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(generatePop3Uid(msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            org.apache.camel.Message in = exchange.getIn()__            MailConfiguration config = getEndpoint().getConfiguration()__            _            String copyTo = in.getHeader("copyTo", config.getCopyTo(), String.class)__            boolean delete = in.getHeader("delete", config.isDelete(), boolean.class)___            _            if (config.getProtocol().equals(MailUtils.PROTOCOL_IMAP) || config.getProtocol().equals(MailUtils.PROTOCOL_IMAPS)) {_                if (copyTo != null) {_                    LOG.trace("IMAP message needs to be copied to {}", copyTo)__                    Folder destFolder = store.getFolder(copyTo)__                    if (!destFolder.exists()) {_                        destFolder.create(Folder.HOLDS_MESSAGES)__                    }_                    folder.copyMessages(new Message[]{mail}, destFolder)__                    LOG.trace("IMAP message {} copied to {}", mail, copyTo)__                }_            }__            if (delete) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }_        } catch (MessagingException e) {_            getExceptionHandler().handleException("Error occurred during committing mail message: " + mail, exchange, e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,uid,null,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,generate,pop3uid,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,org,apache,camel,message,in,exchange,get,in,mail,configuration,config,get,endpoint,get,configuration,string,copy,to,in,get,header,copy,to,config,get,copy,to,string,class,boolean,delete,in,get,header,delete,config,is,delete,boolean,class,if,config,get,protocol,equals,mail,utils,config,get,protocol,equals,mail,utils,if,copy,to,null,log,trace,imap,message,needs,to,be,copied,to,copy,to,folder,dest,folder,store,get,folder,copy,to,if,dest,folder,exists,dest,folder,create,folder,folder,copy,messages,new,message,mail,dest,folder,log,trace,imap,message,copied,to,mail,copy,to,if,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,catch,messaging,exception,e,get,exception,handler,handle,exception,error,occurred,during,committing,mail,message,mail,exchange,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1415211488;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            _            _            String uid = (String) exchange.removeProperty(POP3_UID)__            if (uid != null) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(generatePop3Uid(msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            org.apache.camel.Message in = exchange.getIn()__            MailConfiguration config = getEndpoint().getConfiguration()__            _            String copyTo = in.getHeader("copyTo", config.getCopyTo(), String.class)__            boolean delete = in.getHeader("delete", config.isDelete(), boolean.class)___            _            if (config.getProtocol().equals(MailUtils.PROTOCOL_IMAP) || config.getProtocol().equals(MailUtils.PROTOCOL_IMAPS)) {_                if (copyTo != null) {_                    LOG.trace("IMAP message needs to be copied to {}", copyTo)__                    Folder destFolder = store.getFolder(copyTo)__                    if (!destFolder.exists()) {_                        destFolder.create(Folder.HOLDS_MESSAGES)__                    }_                    folder.copyMessages(new Message[]{mail}, destFolder)__                    LOG.trace("IMAP message {} copied to {}", mail, copyTo)__                }_            }__            if (delete) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }_        } catch (MessagingException e) {_            getExceptionHandler().handleException("Error occurred during committing mail message: " + mail, exchange, e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,uid,null,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,generate,pop3uid,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,org,apache,camel,message,in,exchange,get,in,mail,configuration,config,get,endpoint,get,configuration,string,copy,to,in,get,header,copy,to,config,get,copy,to,string,class,boolean,delete,in,get,header,delete,config,is,delete,boolean,class,if,config,get,protocol,equals,mail,utils,config,get,protocol,equals,mail,utils,if,copy,to,null,log,trace,imap,message,needs,to,be,copied,to,copy,to,folder,dest,folder,store,get,folder,copy,to,if,dest,folder,exists,dest,folder,create,folder,folder,copy,messages,new,message,mail,dest,folder,log,trace,imap,message,copied,to,mail,copy,to,if,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,catch,messaging,exception,e,get,exception,handler,handle,exception,error,occurred,during,committing,mail,message,mail,exchange,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1427090237;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            _            _            String uid = (String) exchange.removeProperty(POP3_UID)__            if (uid != null) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(generatePop3Uid(msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            org.apache.camel.Message in = exchange.getIn()__            MailConfiguration config = getEndpoint().getConfiguration()__            _            String copyTo = in.getHeader("copyTo", config.getCopyTo(), String.class)__            boolean delete = in.getHeader("delete", config.isDelete(), boolean.class)___            _            if (config.getProtocol().equals(MailUtils.PROTOCOL_IMAP) || config.getProtocol().equals(MailUtils.PROTOCOL_IMAPS)) {_                if (copyTo != null) {_                    LOG.trace("IMAP message needs to be copied to {}", copyTo)__                    Folder destFolder = store.getFolder(copyTo)__                    if (!destFolder.exists()) {_                        destFolder.create(Folder.HOLDS_MESSAGES)__                    }_                    folder.copyMessages(new Message[]{mail}, destFolder)__                    LOG.trace("IMAP message {} copied to {}", mail, copyTo)__                }_            }__            if (delete) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }_        } catch (MessagingException e) {_            getExceptionHandler().handleException("Error occurred during committing mail message: " + mail, exchange, e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,uid,null,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,generate,pop3uid,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,org,apache,camel,message,in,exchange,get,in,mail,configuration,config,get,endpoint,get,configuration,string,copy,to,in,get,header,copy,to,config,get,copy,to,string,class,boolean,delete,in,get,header,delete,config,is,delete,boolean,class,if,config,get,protocol,equals,mail,utils,config,get,protocol,equals,mail,utils,if,copy,to,null,log,trace,imap,message,needs,to,be,copied,to,copy,to,folder,dest,folder,store,get,folder,copy,to,if,dest,folder,exists,dest,folder,create,folder,folder,copy,messages,new,message,mail,dest,folder,log,trace,imap,message,copied,to,mail,copy,to,if,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,catch,messaging,exception,e,get,exception,handler,handle,exception,error,occurred,during,committing,mail,message,mail,exchange,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1452351081;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            _            _            String uid = (String) exchange.removeProperty(POP3_UID)__            if (uid != null) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(generatePop3Uid(msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            org.apache.camel.Message in = exchange.getIn()__            MailConfiguration config = getEndpoint().getConfiguration()__            _            String copyTo = in.getHeader("copyTo", config.getCopyTo(), String.class)__            boolean delete = in.getHeader("delete", config.isDelete(), boolean.class)___            _            if (config.getProtocol().equals(MailUtils.PROTOCOL_IMAP) || config.getProtocol().equals(MailUtils.PROTOCOL_IMAPS)) {_                if (copyTo != null) {_                    LOG.trace("IMAP message needs to be copied to {}", copyTo)__                    Folder destFolder = store.getFolder(copyTo)__                    if (!destFolder.exists()) {_                        destFolder.create(Folder.HOLDS_MESSAGES)__                    }_                    folder.copyMessages(new Message[]{mail}, destFolder)__                    LOG.trace("IMAP message {} copied to {}", mail, copyTo)__                }_            }__            if (delete) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }_        } catch (MessagingException e) {_            getExceptionHandler().handleException("Error occurred during committing mail message: " + mail, exchange, e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,uid,null,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,generate,pop3uid,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,org,apache,camel,message,in,exchange,get,in,mail,configuration,config,get,endpoint,get,configuration,string,copy,to,in,get,header,copy,to,config,get,copy,to,string,class,boolean,delete,in,get,header,delete,config,is,delete,boolean,class,if,config,get,protocol,equals,mail,utils,config,get,protocol,equals,mail,utils,if,copy,to,null,log,trace,imap,message,needs,to,be,copied,to,copy,to,folder,dest,folder,store,get,folder,copy,to,if,dest,folder,exists,dest,folder,create,folder,folder,copy,messages,new,message,mail,dest,folder,log,trace,imap,message,copied,to,mail,copy,to,if,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,catch,messaging,exception,e,get,exception,handler,handle,exception,error,occurred,during,committing,mail,message,mail,exchange,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1455967322;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            String uid = (String) exchange.removeProperty(MAIL_MESSAGE_UID)___            _            _            if (getEndpoint().getConfiguration().getProtocol().startsWith("pop3")) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(getEndpoint().getMailUidGenerator().generateUuid(getEndpoint(), msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            org.apache.camel.Message in = exchange.getIn()__            MailConfiguration config = getEndpoint().getConfiguration()__            _            String copyTo = in.getHeader("copyTo", config.getCopyTo(), String.class)__            boolean delete = in.getHeader("delete", config.isDelete(), boolean.class)___            _            if (config.getProtocol().equals(MailUtils.PROTOCOL_IMAP) || config.getProtocol().equals(MailUtils.PROTOCOL_IMAPS)) {_                if (copyTo != null) {_                    LOG.trace("IMAP message needs to be copied to {}", copyTo)__                    Folder destFolder = store.getFolder(copyTo)__                    if (!destFolder.exists()) {_                        destFolder.create(Folder.HOLDS_MESSAGES)__                    }_                    folder.copyMessages(new Message[]{mail}, destFolder)__                    LOG.trace("IMAP message {} copied to {}", mail, copyTo)__                }_            }__            if (delete) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }__            _            if (getEndpoint().getIdempotentRepository() != null) {_                if (getEndpoint().isIdempotentRepositoryRemoveOnCommit()) {_                    getEndpoint().getIdempotentRepository().remove(uid)__                } else {_                    getEndpoint().getIdempotentRepository().confirm(uid)__                }_            }__        } catch (MessagingException e) {_            getExceptionHandler().handleException("Error occurred during committing mail message: " + mail, exchange, e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,get,endpoint,get,configuration,get,protocol,starts,with,pop3,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,get,endpoint,get,mail,uid,generator,generate,uuid,get,endpoint,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,org,apache,camel,message,in,exchange,get,in,mail,configuration,config,get,endpoint,get,configuration,string,copy,to,in,get,header,copy,to,config,get,copy,to,string,class,boolean,delete,in,get,header,delete,config,is,delete,boolean,class,if,config,get,protocol,equals,mail,utils,config,get,protocol,equals,mail,utils,if,copy,to,null,log,trace,imap,message,needs,to,be,copied,to,copy,to,folder,dest,folder,store,get,folder,copy,to,if,dest,folder,exists,dest,folder,create,folder,folder,copy,messages,new,message,mail,dest,folder,log,trace,imap,message,copied,to,mail,copy,to,if,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,if,get,endpoint,get,idempotent,repository,null,if,get,endpoint,is,idempotent,repository,remove,on,commit,get,endpoint,get,idempotent,repository,remove,uid,else,get,endpoint,get,idempotent,repository,confirm,uid,catch,messaging,exception,e,get,exception,handler,handle,exception,error,occurred,during,committing,mail,message,mail,exchange,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1455967322;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            String uid = (String) exchange.removeProperty(MAIL_MESSAGE_UID)___            _            _            if (getEndpoint().getConfiguration().getProtocol().startsWith("pop3")) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(getEndpoint().getMailUidGenerator().generateUuid(getEndpoint(), msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            org.apache.camel.Message in = exchange.getIn()__            MailConfiguration config = getEndpoint().getConfiguration()__            _            String copyTo = in.getHeader("copyTo", config.getCopyTo(), String.class)__            boolean delete = in.getHeader("delete", config.isDelete(), boolean.class)___            _            if (config.getProtocol().equals(MailUtils.PROTOCOL_IMAP) || config.getProtocol().equals(MailUtils.PROTOCOL_IMAPS)) {_                if (copyTo != null) {_                    LOG.trace("IMAP message needs to be copied to {}", copyTo)__                    Folder destFolder = store.getFolder(copyTo)__                    if (!destFolder.exists()) {_                        destFolder.create(Folder.HOLDS_MESSAGES)__                    }_                    folder.copyMessages(new Message[]{mail}, destFolder)__                    LOG.trace("IMAP message {} copied to {}", mail, copyTo)__                }_            }__            if (delete) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }__            _            if (getEndpoint().getIdempotentRepository() != null) {_                if (getEndpoint().isIdempotentRepositoryRemoveOnCommit()) {_                    getEndpoint().getIdempotentRepository().remove(uid)__                } else {_                    getEndpoint().getIdempotentRepository().confirm(uid)__                }_            }__        } catch (MessagingException e) {_            getExceptionHandler().handleException("Error occurred during committing mail message: " + mail, exchange, e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,get,endpoint,get,configuration,get,protocol,starts,with,pop3,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,get,endpoint,get,mail,uid,generator,generate,uuid,get,endpoint,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,org,apache,camel,message,in,exchange,get,in,mail,configuration,config,get,endpoint,get,configuration,string,copy,to,in,get,header,copy,to,config,get,copy,to,string,class,boolean,delete,in,get,header,delete,config,is,delete,boolean,class,if,config,get,protocol,equals,mail,utils,config,get,protocol,equals,mail,utils,if,copy,to,null,log,trace,imap,message,needs,to,be,copied,to,copy,to,folder,dest,folder,store,get,folder,copy,to,if,dest,folder,exists,dest,folder,create,folder,folder,copy,messages,new,message,mail,dest,folder,log,trace,imap,message,copied,to,mail,copy,to,if,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,if,get,endpoint,get,idempotent,repository,null,if,get,endpoint,is,idempotent,repository,remove,on,commit,get,endpoint,get,idempotent,repository,remove,uid,else,get,endpoint,get,idempotent,repository,confirm,uid,catch,messaging,exception,e,get,exception,handler,handle,exception,error,occurred,during,committing,mail,message,mail,exchange,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1466273350;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            String uid = (String) exchange.removeProperty(MAIL_MESSAGE_UID)___            _            _            if (getEndpoint().getConfiguration().getProtocol().startsWith("pop3")) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(getEndpoint().getMailUidGenerator().generateUuid(getEndpoint(), msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            org.apache.camel.Message in = exchange.getIn()__            MailConfiguration config = getEndpoint().getConfiguration()__            _            String copyTo = in.getHeader("copyTo", config.getCopyTo(), String.class)__            boolean delete = in.getHeader("delete", config.isDelete(), boolean.class)___            _            if (config.getProtocol().equals(MailUtils.PROTOCOL_IMAP) || config.getProtocol().equals(MailUtils.PROTOCOL_IMAPS)) {_                if (copyTo != null) {_                    LOG.trace("IMAP message needs to be copied to {}", copyTo)__                    Folder destFolder = store.getFolder(copyTo)__                    if (!destFolder.exists()) {_                        destFolder.create(Folder.HOLDS_MESSAGES)__                    }_                    folder.copyMessages(new Message[]{mail}, destFolder)__                    LOG.trace("IMAP message {} copied to {}", mail, copyTo)__                }_            }__            if (delete) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }__            _            if (getEndpoint().getIdempotentRepository() != null) {_                if (getEndpoint().isIdempotentRepositoryRemoveOnCommit()) {_                    getEndpoint().getIdempotentRepository().remove(uid)__                } else {_                    getEndpoint().getIdempotentRepository().confirm(uid)__                }_            }__        } catch (MessagingException e) {_            getExceptionHandler().handleException("Error occurred during committing mail message: " + mail, exchange, e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,get,endpoint,get,configuration,get,protocol,starts,with,pop3,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,get,endpoint,get,mail,uid,generator,generate,uuid,get,endpoint,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,org,apache,camel,message,in,exchange,get,in,mail,configuration,config,get,endpoint,get,configuration,string,copy,to,in,get,header,copy,to,config,get,copy,to,string,class,boolean,delete,in,get,header,delete,config,is,delete,boolean,class,if,config,get,protocol,equals,mail,utils,config,get,protocol,equals,mail,utils,if,copy,to,null,log,trace,imap,message,needs,to,be,copied,to,copy,to,folder,dest,folder,store,get,folder,copy,to,if,dest,folder,exists,dest,folder,create,folder,folder,copy,messages,new,message,mail,dest,folder,log,trace,imap,message,copied,to,mail,copy,to,if,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,if,get,endpoint,get,idempotent,repository,null,if,get,endpoint,is,idempotent,repository,remove,on,commit,get,endpoint,get,idempotent,repository,remove,uid,else,get,endpoint,get,idempotent,repository,confirm,uid,catch,messaging,exception,e,get,exception,handler,handle,exception,error,occurred,during,committing,mail,message,mail,exchange,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1471881865;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            String uid = (String) exchange.removeProperty(MAIL_MESSAGE_UID)___            _            _            if (getEndpoint().getConfiguration().getProtocol().startsWith("pop3")) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(getEndpoint().getMailUidGenerator().generateUuid(getEndpoint(), msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            org.apache.camel.Message in = exchange.getIn()__            MailConfiguration config = getEndpoint().getConfiguration()__            _            String copyTo = in.getHeader("copyTo", config.getCopyTo(), String.class)__            boolean delete = in.getHeader("delete", config.isDelete(), boolean.class)___            _            if (config.getProtocol().equals(MailUtils.PROTOCOL_IMAP) || config.getProtocol().equals(MailUtils.PROTOCOL_IMAPS)) {_                if (copyTo != null) {_                    LOG.trace("IMAP message needs to be copied to {}", copyTo)__                    Folder destFolder = store.getFolder(copyTo)__                    if (!destFolder.exists()) {_                        destFolder.create(Folder.HOLDS_MESSAGES)__                    }_                    folder.copyMessages(new Message[]{mail}, destFolder)__                    LOG.trace("IMAP message {} copied to {}", mail, copyTo)__                }_            }__            if (delete) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }__            _            if (getEndpoint().getIdempotentRepository() != null) {_                if (getEndpoint().isIdempotentRepositoryRemoveOnCommit()) {_                    getEndpoint().getIdempotentRepository().remove(uid)__                } else {_                    getEndpoint().getIdempotentRepository().confirm(uid)__                }_            }__        } catch (MessagingException e) {_            getExceptionHandler().handleException("Error occurred during committing mail message: " + mail, exchange, e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,get,endpoint,get,configuration,get,protocol,starts,with,pop3,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,get,endpoint,get,mail,uid,generator,generate,uuid,get,endpoint,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,org,apache,camel,message,in,exchange,get,in,mail,configuration,config,get,endpoint,get,configuration,string,copy,to,in,get,header,copy,to,config,get,copy,to,string,class,boolean,delete,in,get,header,delete,config,is,delete,boolean,class,if,config,get,protocol,equals,mail,utils,config,get,protocol,equals,mail,utils,if,copy,to,null,log,trace,imap,message,needs,to,be,copied,to,copy,to,folder,dest,folder,store,get,folder,copy,to,if,dest,folder,exists,dest,folder,create,folder,folder,copy,messages,new,message,mail,dest,folder,log,trace,imap,message,copied,to,mail,copy,to,if,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,if,get,endpoint,get,idempotent,repository,null,if,get,endpoint,is,idempotent,repository,remove,on,commit,get,endpoint,get,idempotent,repository,remove,uid,else,get,endpoint,get,idempotent,repository,confirm,uid,catch,messaging,exception,e,get,exception,handler,handle,exception,error,occurred,during,committing,mail,message,mail,exchange,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1471881865;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            String uid = (String) exchange.removeProperty(MAIL_MESSAGE_UID)___            _            _            if (getEndpoint().getConfiguration().getProtocol().startsWith("pop3")) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(getEndpoint().getMailUidGenerator().generateUuid(getEndpoint(), msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            org.apache.camel.Message in = exchange.getIn()__            MailConfiguration config = getEndpoint().getConfiguration()__            _            String copyTo = in.getHeader("copyTo", config.getCopyTo(), String.class)__            boolean delete = in.getHeader("delete", config.isDelete(), boolean.class)___            _            if (config.getProtocol().equals(MailUtils.PROTOCOL_IMAP) || config.getProtocol().equals(MailUtils.PROTOCOL_IMAPS)) {_                if (copyTo != null) {_                    LOG.trace("IMAP message needs to be copied to {}", copyTo)__                    Folder destFolder = store.getFolder(copyTo)__                    if (!destFolder.exists()) {_                        destFolder.create(Folder.HOLDS_MESSAGES)__                    }_                    folder.copyMessages(new Message[]{mail}, destFolder)__                    LOG.trace("IMAP message {} copied to {}", mail, copyTo)__                }_            }__            if (delete) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }__            _            if (getEndpoint().getIdempotentRepository() != null) {_                if (getEndpoint().isIdempotentRepositoryRemoveOnCommit()) {_                    getEndpoint().getIdempotentRepository().remove(uid)__                } else {_                    getEndpoint().getIdempotentRepository().confirm(uid)__                }_            }__        } catch (MessagingException e) {_            getExceptionHandler().handleException("Error occurred during committing mail message: " + mail, exchange, e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,get,endpoint,get,configuration,get,protocol,starts,with,pop3,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,get,endpoint,get,mail,uid,generator,generate,uuid,get,endpoint,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,org,apache,camel,message,in,exchange,get,in,mail,configuration,config,get,endpoint,get,configuration,string,copy,to,in,get,header,copy,to,config,get,copy,to,string,class,boolean,delete,in,get,header,delete,config,is,delete,boolean,class,if,config,get,protocol,equals,mail,utils,config,get,protocol,equals,mail,utils,if,copy,to,null,log,trace,imap,message,needs,to,be,copied,to,copy,to,folder,dest,folder,store,get,folder,copy,to,if,dest,folder,exists,dest,folder,create,folder,folder,copy,messages,new,message,mail,dest,folder,log,trace,imap,message,copied,to,mail,copy,to,if,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,if,get,endpoint,get,idempotent,repository,null,if,get,endpoint,is,idempotent,repository,remove,on,commit,get,endpoint,get,idempotent,repository,remove,uid,else,get,endpoint,get,idempotent,repository,confirm,uid,catch,messaging,exception,e,get,exception,handler,handle,exception,error,occurred,during,committing,mail,message,mail,exchange,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1480079644;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            String uid = (String) exchange.removeProperty(MAIL_MESSAGE_UID)___            _            _            if (getEndpoint().getConfiguration().getProtocol().startsWith("pop3")) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(getEndpoint().getMailUidGenerator().generateUuid(getEndpoint(), msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            org.apache.camel.Message in = exchange.getIn()__            MailConfiguration config = getEndpoint().getConfiguration()__            _            String copyTo = in.getHeader("copyTo", config.getCopyTo(), String.class)__            boolean delete = in.getHeader("delete", config.isDelete(), boolean.class)___            _            if (config.getProtocol().equals(MailUtils.PROTOCOL_IMAP) || config.getProtocol().equals(MailUtils.PROTOCOL_IMAPS)) {_                if (copyTo != null) {_                    LOG.trace("IMAP message needs to be copied to {}", copyTo)__                    Folder destFolder = store.getFolder(copyTo)__                    if (!destFolder.exists()) {_                        destFolder.create(Folder.HOLDS_MESSAGES)__                    }_                    folder.copyMessages(new Message[]{mail}, destFolder)__                    LOG.trace("IMAP message {} copied to {}", mail, copyTo)__                }_            }__            if (delete) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }__            _            if (getEndpoint().getIdempotentRepository() != null) {_                if (getEndpoint().isIdempotentRepositoryRemoveOnCommit()) {_                    getEndpoint().getIdempotentRepository().remove(uid)__                } else {_                    getEndpoint().getIdempotentRepository().confirm(uid)__                }_            }__        } catch (MessagingException e) {_            getExceptionHandler().handleException("Error occurred during committing mail message: " + mail, exchange, e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,get,endpoint,get,configuration,get,protocol,starts,with,pop3,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,get,endpoint,get,mail,uid,generator,generate,uuid,get,endpoint,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,org,apache,camel,message,in,exchange,get,in,mail,configuration,config,get,endpoint,get,configuration,string,copy,to,in,get,header,copy,to,config,get,copy,to,string,class,boolean,delete,in,get,header,delete,config,is,delete,boolean,class,if,config,get,protocol,equals,mail,utils,config,get,protocol,equals,mail,utils,if,copy,to,null,log,trace,imap,message,needs,to,be,copied,to,copy,to,folder,dest,folder,store,get,folder,copy,to,if,dest,folder,exists,dest,folder,create,folder,folder,copy,messages,new,message,mail,dest,folder,log,trace,imap,message,copied,to,mail,copy,to,if,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,if,get,endpoint,get,idempotent,repository,null,if,get,endpoint,is,idempotent,repository,remove,on,commit,get,endpoint,get,idempotent,repository,remove,uid,else,get,endpoint,get,idempotent,repository,confirm,uid,catch,messaging,exception,e,get,exception,handler,handle,exception,error,occurred,during,committing,mail,message,mail,exchange,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1517865522;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            String uid = (String) exchange.removeProperty(MAIL_MESSAGE_UID)___            _            _            if (getEndpoint().getConfiguration().getProtocol().startsWith("pop3")) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(getEndpoint().getMailUidGenerator().generateUuid(getEndpoint(), msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            org.apache.camel.Message in = exchange.getIn()__            MailConfiguration config = getEndpoint().getConfiguration()__            _            String copyTo = in.getHeader("copyTo", config.getCopyTo(), String.class)__            boolean delete = in.getHeader("delete", config.isDelete(), boolean.class)___            _            if (config.getProtocol().equals(MailUtils.PROTOCOL_IMAP) || config.getProtocol().equals(MailUtils.PROTOCOL_IMAPS)) {_                if (copyTo != null) {_                    LOG.trace("IMAP message needs to be copied to {}", copyTo)__                    Folder destFolder = store.getFolder(copyTo)__                    if (!destFolder.exists()) {_                        destFolder.create(Folder.HOLDS_MESSAGES)__                    }_                    folder.copyMessages(new Message[]{mail}, destFolder)__                    LOG.trace("IMAP message {} copied to {}", mail, copyTo)__                }_            }__            if (delete) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }__            _            if (getEndpoint().getIdempotentRepository() != null) {_                if (getEndpoint().isIdempotentRepositoryRemoveOnCommit()) {_                    getEndpoint().getIdempotentRepository().remove(uid)__                } else {_                    getEndpoint().getIdempotentRepository().confirm(uid)__                }_            }__        } catch (MessagingException e) {_            getExceptionHandler().handleException("Error occurred during committing mail message: " + mail, exchange, e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,get,endpoint,get,configuration,get,protocol,starts,with,pop3,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,get,endpoint,get,mail,uid,generator,generate,uuid,get,endpoint,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,org,apache,camel,message,in,exchange,get,in,mail,configuration,config,get,endpoint,get,configuration,string,copy,to,in,get,header,copy,to,config,get,copy,to,string,class,boolean,delete,in,get,header,delete,config,is,delete,boolean,class,if,config,get,protocol,equals,mail,utils,config,get,protocol,equals,mail,utils,if,copy,to,null,log,trace,imap,message,needs,to,be,copied,to,copy,to,folder,dest,folder,store,get,folder,copy,to,if,dest,folder,exists,dest,folder,create,folder,folder,copy,messages,new,message,mail,dest,folder,log,trace,imap,message,copied,to,mail,copy,to,if,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,if,get,endpoint,get,idempotent,repository,null,if,get,endpoint,is,idempotent,repository,remove,on,commit,get,endpoint,get,idempotent,repository,remove,uid,else,get,endpoint,get,idempotent,repository,confirm,uid,catch,messaging,exception,e,get,exception,handler,handle,exception,error,occurred,during,committing,mail,message,mail,exchange,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1524063106;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            String uid = (String) exchange.removeProperty(MAIL_MESSAGE_UID)___            _            _            if (getEndpoint().getConfiguration().getProtocol().startsWith("pop3")) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(getEndpoint().getMailUidGenerator().generateUuid(getEndpoint(), msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            org.apache.camel.Message in = exchange.getIn()__            MailConfiguration config = getEndpoint().getConfiguration()__            _            String copyTo = in.getHeader("copyTo", config.getCopyTo(), String.class)__            boolean delete = in.getHeader("delete", config.isDelete(), boolean.class)___            _            if (config.getProtocol().equals(MailUtils.PROTOCOL_IMAP) || config.getProtocol().equals(MailUtils.PROTOCOL_IMAPS)) {_                if (copyTo != null) {_                    LOG.trace("IMAP message needs to be copied to {}", copyTo)__                    Folder destFolder = store.getFolder(copyTo)__                    if (!destFolder.exists()) {_                        destFolder.create(Folder.HOLDS_MESSAGES)__                    }_                    folder.copyMessages(new Message[]{mail}, destFolder)__                    LOG.trace("IMAP message {} copied to {}", mail, copyTo)__                }_            }__            if (delete) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }__            _            if (getEndpoint().getIdempotentRepository() != null) {_                if (getEndpoint().isIdempotentRepositoryRemoveOnCommit()) {_                    getEndpoint().getIdempotentRepository().remove(uid)__                } else {_                    getEndpoint().getIdempotentRepository().confirm(uid)__                }_            }__        } catch (MessagingException e) {_            getExceptionHandler().handleException("Error occurred during committing mail message: " + mail, exchange, e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,get,endpoint,get,configuration,get,protocol,starts,with,pop3,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,get,endpoint,get,mail,uid,generator,generate,uuid,get,endpoint,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,org,apache,camel,message,in,exchange,get,in,mail,configuration,config,get,endpoint,get,configuration,string,copy,to,in,get,header,copy,to,config,get,copy,to,string,class,boolean,delete,in,get,header,delete,config,is,delete,boolean,class,if,config,get,protocol,equals,mail,utils,config,get,protocol,equals,mail,utils,if,copy,to,null,log,trace,imap,message,needs,to,be,copied,to,copy,to,folder,dest,folder,store,get,folder,copy,to,if,dest,folder,exists,dest,folder,create,folder,folder,copy,messages,new,message,mail,dest,folder,log,trace,imap,message,copied,to,mail,copy,to,if,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,if,get,endpoint,get,idempotent,repository,null,if,get,endpoint,is,idempotent,repository,remove,on,commit,get,endpoint,get,idempotent,repository,remove,uid,else,get,endpoint,get,idempotent,repository,confirm,uid,catch,messaging,exception,e,get,exception,handler,handle,exception,error,occurred,during,committing,mail,message,mail,exchange,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1536517284;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            String uid = (String) exchange.removeProperty(MAIL_MESSAGE_UID)___            _            _            if (getEndpoint().getConfiguration().getProtocol().startsWith("pop3")) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(getEndpoint().getMailUidGenerator().generateUuid(getEndpoint(), msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            org.apache.camel.Message in = exchange.getIn()__            MailConfiguration config = getEndpoint().getConfiguration()__            _            String copyTo = in.getHeader("copyTo", config.getCopyTo(), String.class)__            boolean delete = in.getHeader("delete", config.isDelete(), boolean.class)___            _            if (config.getProtocol().equals(MailUtils.PROTOCOL_IMAP) || config.getProtocol().equals(MailUtils.PROTOCOL_IMAPS)) {_                if (copyTo != null) {_                    LOG.trace("IMAP message needs to be copied to {}", copyTo)__                    Folder destFolder = store.getFolder(copyTo)__                    if (!destFolder.exists()) {_                        destFolder.create(Folder.HOLDS_MESSAGES)__                    }_                    folder.copyMessages(new Message[]{mail}, destFolder)__                    LOG.trace("IMAP message {} copied to {}", mail, copyTo)__                }_            }__            if (delete) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }__            _            if (getEndpoint().getIdempotentRepository() != null) {_                if (getEndpoint().isIdempotentRepositoryRemoveOnCommit()) {_                    getEndpoint().getIdempotentRepository().remove(uid)__                } else {_                    getEndpoint().getIdempotentRepository().confirm(uid)__                }_            }__        } catch (MessagingException e) {_            getExceptionHandler().handleException("Error occurred during committing mail message: " + mail, exchange, e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,get,endpoint,get,configuration,get,protocol,starts,with,pop3,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,get,endpoint,get,mail,uid,generator,generate,uuid,get,endpoint,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,org,apache,camel,message,in,exchange,get,in,mail,configuration,config,get,endpoint,get,configuration,string,copy,to,in,get,header,copy,to,config,get,copy,to,string,class,boolean,delete,in,get,header,delete,config,is,delete,boolean,class,if,config,get,protocol,equals,mail,utils,config,get,protocol,equals,mail,utils,if,copy,to,null,log,trace,imap,message,needs,to,be,copied,to,copy,to,folder,dest,folder,store,get,folder,copy,to,if,dest,folder,exists,dest,folder,create,folder,folder,copy,messages,new,message,mail,dest,folder,log,trace,imap,message,copied,to,mail,copy,to,if,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,if,get,endpoint,get,idempotent,repository,null,if,get,endpoint,is,idempotent,repository,remove,on,commit,get,endpoint,get,idempotent,repository,remove,uid,else,get,endpoint,get,idempotent,repository,confirm,uid,catch,messaging,exception,e,get,exception,handler,handle,exception,error,occurred,during,committing,mail,message,mail,exchange,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1536687142;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            String uid = (String) exchange.removeProperty(MAIL_MESSAGE_UID)___            _            _            if (getEndpoint().getConfiguration().getProtocol().startsWith("pop3")) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(getEndpoint().getMailUidGenerator().generateUuid(getEndpoint(), msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            org.apache.camel.Message in = exchange.getIn()__            MailConfiguration config = getEndpoint().getConfiguration()__            _            String copyTo = in.getHeader("copyTo", config.getCopyTo(), String.class)__            boolean delete = in.getHeader("delete", config.isDelete(), boolean.class)___            _            if (config.getProtocol().equals(MailUtils.PROTOCOL_IMAP) || config.getProtocol().equals(MailUtils.PROTOCOL_IMAPS)) {_                if (copyTo != null) {_                    LOG.trace("IMAP message needs to be copied to {}", copyTo)__                    Folder destFolder = store.getFolder(copyTo)__                    if (!destFolder.exists()) {_                        destFolder.create(Folder.HOLDS_MESSAGES)__                    }_                    folder.copyMessages(new Message[]{mail}, destFolder)__                    LOG.trace("IMAP message {} copied to {}", mail, copyTo)__                }_            }__            if (delete) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }__            _            if (getEndpoint().getIdempotentRepository() != null) {_                if (getEndpoint().isIdempotentRepositoryRemoveOnCommit()) {_                    getEndpoint().getIdempotentRepository().remove(uid)__                } else {_                    getEndpoint().getIdempotentRepository().confirm(uid)__                }_            }__        } catch (MessagingException e) {_            getExceptionHandler().handleException("Error occurred during committing mail message: " + mail, exchange, e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,get,endpoint,get,configuration,get,protocol,starts,with,pop3,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,get,endpoint,get,mail,uid,generator,generate,uuid,get,endpoint,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,org,apache,camel,message,in,exchange,get,in,mail,configuration,config,get,endpoint,get,configuration,string,copy,to,in,get,header,copy,to,config,get,copy,to,string,class,boolean,delete,in,get,header,delete,config,is,delete,boolean,class,if,config,get,protocol,equals,mail,utils,config,get,protocol,equals,mail,utils,if,copy,to,null,log,trace,imap,message,needs,to,be,copied,to,copy,to,folder,dest,folder,store,get,folder,copy,to,if,dest,folder,exists,dest,folder,create,folder,folder,copy,messages,new,message,mail,dest,folder,log,trace,imap,message,copied,to,mail,copy,to,if,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,if,get,endpoint,get,idempotent,repository,null,if,get,endpoint,is,idempotent,repository,remove,on,commit,get,endpoint,get,idempotent,repository,remove,uid,else,get,endpoint,get,idempotent,repository,confirm,uid,catch,messaging,exception,e,get,exception,handler,handle,exception,error,occurred,during,committing,mail,message,mail,exchange,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1536701701;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            String uid = (String) exchange.removeProperty(MAIL_MESSAGE_UID)___            _            _            if (getEndpoint().getConfiguration().getProtocol().startsWith("pop3")) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(getEndpoint().getMailUidGenerator().generateUuid(getEndpoint(), msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            org.apache.camel.Message in = exchange.getIn()__            MailConfiguration config = getEndpoint().getConfiguration()__            _            String copyTo = in.getHeader("copyTo", config.getCopyTo(), String.class)__            boolean delete = in.getHeader("delete", config.isDelete(), boolean.class)___            _            if (config.getProtocol().equals(MailUtils.PROTOCOL_IMAP) || config.getProtocol().equals(MailUtils.PROTOCOL_IMAPS)) {_                if (copyTo != null) {_                    LOG.trace("IMAP message needs to be copied to {}", copyTo)__                    Folder destFolder = store.getFolder(copyTo)__                    if (!destFolder.exists()) {_                        destFolder.create(Folder.HOLDS_MESSAGES)__                    }_                    folder.copyMessages(new Message[]{mail}, destFolder)__                    LOG.trace("IMAP message {} copied to {}", mail, copyTo)__                }_            }__            if (delete) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }__            _            if (getEndpoint().getIdempotentRepository() != null) {_                if (getEndpoint().isIdempotentRepositoryRemoveOnCommit()) {_                    getEndpoint().getIdempotentRepository().remove(uid)__                } else {_                    getEndpoint().getIdempotentRepository().confirm(uid)__                }_            }__        } catch (MessagingException e) {_            getExceptionHandler().handleException("Error occurred during committing mail message: " + mail, exchange, e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,get,endpoint,get,configuration,get,protocol,starts,with,pop3,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,get,endpoint,get,mail,uid,generator,generate,uuid,get,endpoint,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,org,apache,camel,message,in,exchange,get,in,mail,configuration,config,get,endpoint,get,configuration,string,copy,to,in,get,header,copy,to,config,get,copy,to,string,class,boolean,delete,in,get,header,delete,config,is,delete,boolean,class,if,config,get,protocol,equals,mail,utils,config,get,protocol,equals,mail,utils,if,copy,to,null,log,trace,imap,message,needs,to,be,copied,to,copy,to,folder,dest,folder,store,get,folder,copy,to,if,dest,folder,exists,dest,folder,create,folder,folder,copy,messages,new,message,mail,dest,folder,log,trace,imap,message,copied,to,mail,copy,to,if,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,if,get,endpoint,get,idempotent,repository,null,if,get,endpoint,is,idempotent,repository,remove,on,commit,get,endpoint,get,idempotent,repository,remove,uid,else,get,endpoint,get,idempotent,repository,confirm,uid,catch,messaging,exception,e,get,exception,handler,handle,exception,error,occurred,during,committing,mail,message,mail,exchange,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1537204343;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            String uid = (String) exchange.removeProperty(MAIL_MESSAGE_UID)___            _            _            if (getEndpoint().getConfiguration().getProtocol().startsWith("pop3")) {_                int count = folder.getMessageCount()__                Message found = null__                LOG.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(getEndpoint().getMailUidGenerator().generateUuid(getEndpoint(), msg))) {_                        LOG.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    LOG.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            org.apache.camel.Message in = exchange.getIn()__            MailConfiguration config = getEndpoint().getConfiguration()__            _            String copyTo = in.getHeader("copyTo", config.getCopyTo(), String.class)__            boolean delete = in.getHeader("delete", config.isDelete(), boolean.class)___            _            if (config.getProtocol().equals(MailUtils.PROTOCOL_IMAP) || config.getProtocol().equals(MailUtils.PROTOCOL_IMAPS)) {_                if (copyTo != null) {_                    LOG.trace("IMAP message needs to be copied to {}", copyTo)__                    Folder destFolder = store.getFolder(copyTo)__                    if (!destFolder.exists()) {_                        destFolder.create(Folder.HOLDS_MESSAGES)__                    }_                    folder.copyMessages(new Message[]{mail}, destFolder)__                    LOG.trace("IMAP message {} copied to {}", mail, copyTo)__                }_            }__            if (delete) {_                LOG.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                LOG.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }__            _            if (getEndpoint().getIdempotentRepository() != null) {_                if (getEndpoint().isIdempotentRepositoryRemoveOnCommit()) {_                    getEndpoint().getIdempotentRepository().remove(uid)__                } else {_                    getEndpoint().getIdempotentRepository().confirm(uid)__                }_            }__        } catch (MessagingException e) {_            getExceptionHandler().handleException("Error occurred during committing mail message: " + mail, exchange, e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,get,endpoint,get,configuration,get,protocol,starts,with,pop3,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,get,endpoint,get,mail,uid,generator,generate,uuid,get,endpoint,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,org,apache,camel,message,in,exchange,get,in,mail,configuration,config,get,endpoint,get,configuration,string,copy,to,in,get,header,copy,to,config,get,copy,to,string,class,boolean,delete,in,get,header,delete,config,is,delete,boolean,class,if,config,get,protocol,equals,mail,utils,config,get,protocol,equals,mail,utils,if,copy,to,null,log,trace,imap,message,needs,to,be,copied,to,copy,to,folder,dest,folder,store,get,folder,copy,to,if,dest,folder,exists,dest,folder,create,folder,folder,copy,messages,new,message,mail,dest,folder,log,trace,imap,message,copied,to,mail,copy,to,if,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,if,get,endpoint,get,idempotent,repository,null,if,get,endpoint,is,idempotent,repository,remove,on,commit,get,endpoint,get,idempotent,repository,remove,uid,else,get,endpoint,get,idempotent,repository,confirm,uid,catch,messaging,exception,e,get,exception,handler,handle,exception,error,occurred,during,committing,mail,message,mail,exchange,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1540108160;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            String uid = (String) exchange.removeProperty(MAIL_MESSAGE_UID)___            _            _            if (getEndpoint().getConfiguration().getProtocol().startsWith("pop3")) {_                int count = folder.getMessageCount()__                Message found = null__                log.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(getEndpoint().getMailUidGenerator().generateUuid(getEndpoint(), msg))) {_                        log.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    log.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            org.apache.camel.Message in = exchange.getIn()__            MailConfiguration config = getEndpoint().getConfiguration()__            _            String copyTo = in.getHeader("copyTo", config.getCopyTo(), String.class)__            boolean delete = in.getHeader("delete", config.isDelete(), boolean.class)___            _            if (config.getProtocol().equals(MailUtils.PROTOCOL_IMAP) || config.getProtocol().equals(MailUtils.PROTOCOL_IMAPS)) {_                if (copyTo != null) {_                    log.trace("IMAP message needs to be copied to {}", copyTo)__                    Folder destFolder = store.getFolder(copyTo)__                    if (!destFolder.exists()) {_                        destFolder.create(Folder.HOLDS_MESSAGES)__                    }_                    folder.copyMessages(new Message[]{mail}, destFolder)__                    log.trace("IMAP message {} copied to {}", mail, copyTo)__                }_            }__            if (delete) {_                log.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                log.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }__            _            if (getEndpoint().getIdempotentRepository() != null) {_                if (getEndpoint().isIdempotentRepositoryRemoveOnCommit()) {_                    getEndpoint().getIdempotentRepository().remove(uid)__                } else {_                    getEndpoint().getIdempotentRepository().confirm(uid)__                }_            }__        } catch (MessagingException e) {_            getExceptionHandler().handleException("Error occurred during committing mail message: " + mail, exchange, e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,get,endpoint,get,configuration,get,protocol,starts,with,pop3,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,get,endpoint,get,mail,uid,generator,generate,uuid,get,endpoint,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,org,apache,camel,message,in,exchange,get,in,mail,configuration,config,get,endpoint,get,configuration,string,copy,to,in,get,header,copy,to,config,get,copy,to,string,class,boolean,delete,in,get,header,delete,config,is,delete,boolean,class,if,config,get,protocol,equals,mail,utils,config,get,protocol,equals,mail,utils,if,copy,to,null,log,trace,imap,message,needs,to,be,copied,to,copy,to,folder,dest,folder,store,get,folder,copy,to,if,dest,folder,exists,dest,folder,create,folder,folder,copy,messages,new,message,mail,dest,folder,log,trace,imap,message,copied,to,mail,copy,to,if,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,if,get,endpoint,get,idempotent,repository,null,if,get,endpoint,is,idempotent,repository,remove,on,commit,get,endpoint,get,idempotent,repository,remove,uid,else,get,endpoint,get,idempotent,repository,confirm,uid,catch,messaging,exception,e,get,exception,handler,handle,exception,error,occurred,during,committing,mail,message,mail,exchange,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1540108163;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            String uid = (String) exchange.removeProperty(MAIL_MESSAGE_UID)___            _            _            if (getEndpoint().getConfiguration().getProtocol().startsWith("pop3")) {_                int count = folder.getMessageCount()__                Message found = null__                log.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(getEndpoint().getMailUidGenerator().generateUuid(getEndpoint(), msg))) {_                        log.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    log.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            org.apache.camel.Message in = exchange.getIn()__            MailConfiguration config = getEndpoint().getConfiguration()__            _            String copyTo = in.getHeader("copyTo", config.getCopyTo(), String.class)__            boolean delete = in.getHeader("delete", config.isDelete(), boolean.class)___            _            if (config.getProtocol().equals(MailUtils.PROTOCOL_IMAP) || config.getProtocol().equals(MailUtils.PROTOCOL_IMAPS)) {_                if (copyTo != null) {_                    log.trace("IMAP message needs to be copied to {}", copyTo)__                    Folder destFolder = store.getFolder(copyTo)__                    if (!destFolder.exists()) {_                        destFolder.create(Folder.HOLDS_MESSAGES)__                    }_                    folder.copyMessages(new Message[]{mail}, destFolder)__                    log.trace("IMAP message {} copied to {}", mail, copyTo)__                }_            }__            if (delete) {_                log.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                log.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }__            _            if (getEndpoint().getIdempotentRepository() != null) {_                if (getEndpoint().isIdempotentRepositoryRemoveOnCommit()) {_                    getEndpoint().getIdempotentRepository().remove(uid)__                } else {_                    getEndpoint().getIdempotentRepository().confirm(uid)__                }_            }__        } catch (MessagingException e) {_            getExceptionHandler().handleException("Error occurred during committing mail message: " + mail, exchange, e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,get,endpoint,get,configuration,get,protocol,starts,with,pop3,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,get,endpoint,get,mail,uid,generator,generate,uuid,get,endpoint,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,org,apache,camel,message,in,exchange,get,in,mail,configuration,config,get,endpoint,get,configuration,string,copy,to,in,get,header,copy,to,config,get,copy,to,string,class,boolean,delete,in,get,header,delete,config,is,delete,boolean,class,if,config,get,protocol,equals,mail,utils,config,get,protocol,equals,mail,utils,if,copy,to,null,log,trace,imap,message,needs,to,be,copied,to,copy,to,folder,dest,folder,store,get,folder,copy,to,if,dest,folder,exists,dest,folder,create,folder,folder,copy,messages,new,message,mail,dest,folder,log,trace,imap,message,copied,to,mail,copy,to,if,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,if,get,endpoint,get,idempotent,repository,null,if,get,endpoint,is,idempotent,repository,remove,on,commit,get,endpoint,get,idempotent,repository,remove,uid,else,get,endpoint,get,idempotent,repository,confirm,uid,catch,messaging,exception,e,get,exception,handler,handle,exception,error,occurred,during,committing,mail,message,mail,exchange,e
MailConsumer -> protected void processCommit(Message mail, Exchange exchange);1548317877;Strategy to flag the message after being processed.__@param mail     the mail message_@param exchange the exchange;protected void processCommit(Message mail, Exchange exchange) {_        try {_            _            if (!folder.isOpen()) {_                folder.open(Folder.READ_WRITE)__            }__            String uid = (String) exchange.removeProperty(MAIL_MESSAGE_UID)___            _            _            if (getEndpoint().getConfiguration().getProtocol().startsWith("pop3")) {_                int count = folder.getMessageCount()__                Message found = null__                log.trace("Looking for POP3Message with UID {} from folder with {} mails", uid, count)__                for (int i = 1_ i <= count_ ++i) {_                    Message msg = folder.getMessage(i)__                    if (uid.equals(getEndpoint().getMailUidGenerator().generateUuid(getEndpoint(), msg))) {_                        log.debug("Found POP3Message with UID {} from folder with {} mails", uid, count)__                        found = msg__                        break__                    }_                }__                if (found == null) {_                    boolean delete = getEndpoint().getConfiguration().isDelete()__                    log.warn("POP3message not found in folder. Message cannot be marked as " + (delete ? "DELETED" : "SEEN"))__                } else {_                    mail = found__                }_            }__            org.apache.camel.Message in = exchange.getIn()__            MailConfiguration config = getEndpoint().getConfiguration()__            _            String copyTo = in.getHeader("copyTo", config.getCopyTo(), String.class)__            boolean delete = in.getHeader("delete", config.isDelete(), boolean.class)___            _            if (config.getProtocol().equals(MailUtils.PROTOCOL_IMAP) || config.getProtocol().equals(MailUtils.PROTOCOL_IMAPS)) {_                if (copyTo != null) {_                    log.trace("IMAP message needs to be copied to {}", copyTo)__                    Folder destFolder = store.getFolder(copyTo)__                    if (!destFolder.exists()) {_                        destFolder.create(Folder.HOLDS_MESSAGES)__                    }_                    folder.copyMessages(new Message[]{mail}, destFolder)__                    log.trace("IMAP message {} copied to {}", mail, copyTo)__                }_            }__            if (delete) {_                log.trace("Exchange processed, so flagging message as DELETED")__                mail.setFlag(Flags.Flag.DELETED, true)__            } else {_                log.trace("Exchange processed, so flagging message as SEEN")__                mail.setFlag(Flags.Flag.SEEN, true)__            }__            _            if (getEndpoint().getIdempotentRepository() != null) {_                if (getEndpoint().isIdempotentRepositoryRemoveOnCommit()) {_                    getEndpoint().getIdempotentRepository().remove(uid)__                } else {_                    getEndpoint().getIdempotentRepository().confirm(uid)__                }_            }__        } catch (MessagingException e) {_            getExceptionHandler().handleException("Error occurred during committing mail message: " + mail, exchange, e)__        }_    };strategy,to,flag,the,message,after,being,processed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,commit,message,mail,exchange,exchange,try,if,folder,is,open,folder,open,folder,string,uid,string,exchange,remove,property,if,get,endpoint,get,configuration,get,protocol,starts,with,pop3,int,count,folder,get,message,count,message,found,null,log,trace,looking,for,pop3message,with,uid,from,folder,with,mails,uid,count,for,int,i,1,i,count,i,message,msg,folder,get,message,i,if,uid,equals,get,endpoint,get,mail,uid,generator,generate,uuid,get,endpoint,msg,log,debug,found,pop3message,with,uid,from,folder,with,mails,uid,count,found,msg,break,if,found,null,boolean,delete,get,endpoint,get,configuration,is,delete,log,warn,pop3message,not,found,in,folder,message,cannot,be,marked,as,delete,deleted,seen,else,mail,found,org,apache,camel,message,in,exchange,get,in,mail,configuration,config,get,endpoint,get,configuration,string,copy,to,in,get,header,copy,to,config,get,copy,to,string,class,boolean,delete,in,get,header,delete,config,is,delete,boolean,class,if,config,get,protocol,equals,mail,utils,config,get,protocol,equals,mail,utils,if,copy,to,null,log,trace,imap,message,needs,to,be,copied,to,copy,to,folder,dest,folder,store,get,folder,copy,to,if,dest,folder,exists,dest,folder,create,folder,folder,copy,messages,new,message,mail,dest,folder,log,trace,imap,message,copied,to,mail,copy,to,if,delete,log,trace,exchange,processed,so,flagging,message,as,deleted,mail,set,flag,flags,flag,deleted,true,else,log,trace,exchange,processed,so,flagging,message,as,seen,mail,set,flag,flags,flag,seen,true,if,get,endpoint,get,idempotent,repository,null,if,get,endpoint,is,idempotent,repository,remove,on,commit,get,endpoint,get,idempotent,repository,remove,uid,else,get,endpoint,get,idempotent,repository,confirm,uid,catch,messaging,exception,e,get,exception,handler,handle,exception,error,occurred,during,committing,mail,message,mail,exchange,e
MailConsumer -> private Message[] retrieveMessages() throws MessagingException;1415211488;@return Messages from input folder according to the search and sort criteria stored in the endpoint_@throws MessagingException If message retrieval fails;private Message[] retrieveMessages() throws MessagingException {_        Message[] messages__        final SortTerm[] sortTerm = getEndpoint().getSortTerm()__        final SearchTerm searchTerm = computeSearchTerm()__        if (sortTerm != null && serverCanSort) {_            final IMAPFolder imapFolder = (IMAPFolder) folder__            if (searchTerm != null) {_                _                messages = imapFolder.getSortedMessages(sortTerm, searchTerm)__            } else {_                _                messages = imapFolder.getSortedMessages(sortTerm)__            }_        } else {_            if (searchTerm != null) {_                _                messages = folder.search(searchTerm)__            } else {_                _                messages = folder.getMessages()__            }_            _            if (sortTerm != null) {_                MailSorter.sortMessages(messages, sortTerm)__            }_        }_        return messages__    };return,messages,from,input,folder,according,to,the,search,and,sort,criteria,stored,in,the,endpoint,throws,messaging,exception,if,message,retrieval,fails;private,message,retrieve,messages,throws,messaging,exception,message,messages,final,sort,term,sort,term,get,endpoint,get,sort,term,final,search,term,search,term,compute,search,term,if,sort,term,null,server,can,sort,final,imapfolder,imap,folder,imapfolder,folder,if,search,term,null,messages,imap,folder,get,sorted,messages,sort,term,search,term,else,messages,imap,folder,get,sorted,messages,sort,term,else,if,search,term,null,messages,folder,search,search,term,else,messages,folder,get,messages,if,sort,term,null,mail,sorter,sort,messages,messages,sort,term,return,messages
MailConsumer -> private Message[] retrieveMessages() throws MessagingException;1427090237;@return Messages from input folder according to the search and sort criteria stored in the endpoint_@throws MessagingException If message retrieval fails;private Message[] retrieveMessages() throws MessagingException {_        Message[] messages__        final SortTerm[] sortTerm = getEndpoint().getSortTerm()__        final SearchTerm searchTerm = computeSearchTerm()__        if (sortTerm != null && serverCanSort) {_            final IMAPFolder imapFolder = (IMAPFolder) folder__            if (searchTerm != null) {_                _                messages = imapFolder.getSortedMessages(sortTerm, searchTerm)__            } else {_                _                messages = imapFolder.getSortedMessages(sortTerm)__            }_        } else {_            if (searchTerm != null) {_                messages = folder.search(searchTerm, retrieveAllMessages())__            } else {_                messages = retrieveAllMessages()__            }_            _            if (sortTerm != null) {_                MailSorter.sortMessages(messages, sortTerm)__            }_        }_        return messages__    };return,messages,from,input,folder,according,to,the,search,and,sort,criteria,stored,in,the,endpoint,throws,messaging,exception,if,message,retrieval,fails;private,message,retrieve,messages,throws,messaging,exception,message,messages,final,sort,term,sort,term,get,endpoint,get,sort,term,final,search,term,search,term,compute,search,term,if,sort,term,null,server,can,sort,final,imapfolder,imap,folder,imapfolder,folder,if,search,term,null,messages,imap,folder,get,sorted,messages,sort,term,search,term,else,messages,imap,folder,get,sorted,messages,sort,term,else,if,search,term,null,messages,folder,search,search,term,retrieve,all,messages,else,messages,retrieve,all,messages,if,sort,term,null,mail,sorter,sort,messages,messages,sort,term,return,messages
MailConsumer -> private Message[] retrieveMessages() throws MessagingException;1452351081;@return Messages from input folder according to the search and sort criteria stored in the endpoint_@throws MessagingException If message retrieval fails;private Message[] retrieveMessages() throws MessagingException {_        Message[] messages__        final SortTerm[] sortTerm = getEndpoint().getSortTerm()__        final SearchTerm searchTerm = computeSearchTerm()__        if (sortTerm != null && serverCanSort) {_            final IMAPFolder imapFolder = (IMAPFolder) folder__            if (searchTerm != null) {_                _                messages = imapFolder.getSortedMessages(sortTerm, searchTerm)__            } else {_                _                messages = imapFolder.getSortedMessages(sortTerm)__            }_        } else {_            if (searchTerm != null) {_                messages = folder.search(searchTerm, retrieveAllMessages())__            } else {_                messages = retrieveAllMessages()__            }_            _            if (sortTerm != null) {_                MailSorter.sortMessages(messages, sortTerm)__            }_        }_        return messages__    };return,messages,from,input,folder,according,to,the,search,and,sort,criteria,stored,in,the,endpoint,throws,messaging,exception,if,message,retrieval,fails;private,message,retrieve,messages,throws,messaging,exception,message,messages,final,sort,term,sort,term,get,endpoint,get,sort,term,final,search,term,search,term,compute,search,term,if,sort,term,null,server,can,sort,final,imapfolder,imap,folder,imapfolder,folder,if,search,term,null,messages,imap,folder,get,sorted,messages,sort,term,search,term,else,messages,imap,folder,get,sorted,messages,sort,term,else,if,search,term,null,messages,folder,search,search,term,retrieve,all,messages,else,messages,retrieve,all,messages,if,sort,term,null,mail,sorter,sort,messages,messages,sort,term,return,messages
MailConsumer -> protected void processMessages(Message[] messages) throws Exception;1209814362;Process all the messages;protected void processMessages(Message[] messages) throws Exception {_        for (Message message : messages) {_            if (!message.getFlags().contains(Flags.Flag.DELETED)) {_                processMessage(message)__                flagMessageProcessed(message)__            } else {_                if (LOG.isDebugEnabled()) {_                    LOG.debug("Skipping message as it was flagged as DELETED: " + MailUtils.dumpMessage(message))__                }_            }_        }_    };process,all,the,messages;protected,void,process,messages,message,messages,throws,exception,for,message,message,messages,if,message,get,flags,contains,flags,flag,deleted,process,message,message,flag,message,processed,message,else,if,log,is,debug,enabled,log,debug,skipping,message,as,it,was,flagged,as,deleted,mail,utils,dump,message,message
MailConsumer -> protected void processMessages(Message[] messages) throws Exception;1209911518;Process all the messages;protected void processMessages(Message[] messages) throws Exception {_        int fetchSize = endpoint.getConfiguration().getFetchSize()__        int count = fetchSize == -1 ? messages.length : Math.min(fetchSize, messages.length)___        if (LOG.isDebugEnabled()) {_            LOG.debug("Fetching " + count + " messages. Total " + messages.length + " messages.")__        }__        for (int i = 0_ i < count_ i++) {_            Message message = messages[i]__            if (!message.getFlags().contains(Flags.Flag.DELETED)) {_                processMessage(message)__                flagMessageProcessed(message)__            } else {_                if (LOG.isDebugEnabled()) {_                    LOG.debug("Skipping message as it was flagged as deleted: " + MailUtils.dumpMessage(message))__                }_            }_        }_    };process,all,the,messages;protected,void,process,messages,message,messages,throws,exception,int,fetch,size,endpoint,get,configuration,get,fetch,size,int,count,fetch,size,1,messages,length,math,min,fetch,size,messages,length,if,log,is,debug,enabled,log,debug,fetching,count,messages,total,messages,length,messages,for,int,i,0,i,count,i,message,message,messages,i,if,message,get,flags,contains,flags,flag,deleted,process,message,message,flag,message,processed,message,else,if,log,is,debug,enabled,log,debug,skipping,message,as,it,was,flagged,as,deleted,mail,utils,dump,message,message
MailConsumer -> protected void processMessages(Message[] messages) throws Exception;1209917536;Process all the messages;protected void processMessages(Message[] messages) throws Exception {_        int fetchSize = endpoint.getConfiguration().getFetchSize()__        int count = fetchSize == -1 ? messages.length : Math.min(fetchSize, messages.length)___        if (LOG.isDebugEnabled()) {_            LOG.debug("Fetching " + count + " messages. Total " + messages.length + " messages.")__        }__        for (int i = 0_ i < count_ i++) {_            Message message = messages[i]__            if (!message.getFlags().contains(Flags.Flag.DELETED)) {_                processMessage(message)__                flagMessageProcessed(message)__            } else {_                if (LOG.isDebugEnabled()) {_                    LOG.debug("Skipping message as it was flagged as deleted: " + MailUtils.dumpMessage(message))__                }_            }_        }_    };process,all,the,messages;protected,void,process,messages,message,messages,throws,exception,int,fetch,size,endpoint,get,configuration,get,fetch,size,int,count,fetch,size,1,messages,length,math,min,fetch,size,messages,length,if,log,is,debug,enabled,log,debug,fetching,count,messages,total,messages,length,messages,for,int,i,0,i,count,i,message,message,messages,i,if,message,get,flags,contains,flags,flag,deleted,process,message,message,flag,message,processed,message,else,if,log,is,debug,enabled,log,debug,skipping,message,as,it,was,flagged,as,deleted,mail,utils,dump,message,message
MailConsumer -> protected void processMessages(Message[] messages) throws Exception;1210058722;Process all the messages;protected void processMessages(Message[] messages) throws Exception {_        int fetchSize = endpoint.getConfiguration().getFetchSize()__        int count = fetchSize == -1 ? messages.length : Math.min(fetchSize, messages.length)___        if (LOG.isDebugEnabled()) {_            LOG.debug("Fetching " + count + " messages. Total " + messages.length + " messages.")__        }__        for (int i = 0_ i < count_ i++) {_            Message message = messages[i]__            if (!message.getFlags().contains(Flags.Flag.DELETED)) {_                processMessage(message)__                flagMessageProcessed(message)__            } else {_                if (LOG.isDebugEnabled()) {_                    LOG.debug("Skipping message as it was flagged as deleted: " + MailUtils.dumpMessage(message))__                }_            }_        }_    };process,all,the,messages;protected,void,process,messages,message,messages,throws,exception,int,fetch,size,endpoint,get,configuration,get,fetch,size,int,count,fetch,size,1,messages,length,math,min,fetch,size,messages,length,if,log,is,debug,enabled,log,debug,fetching,count,messages,total,messages,length,messages,for,int,i,0,i,count,i,message,message,messages,i,if,message,get,flags,contains,flags,flag,deleted,process,message,message,flag,message,processed,message,else,if,log,is,debug,enabled,log,debug,skipping,message,as,it,was,flagged,as,deleted,mail,utils,dump,message,message
MailConsumer -> protected void processMessages(Message[] messages) throws Exception;1210221715;Process all the messages;protected void processMessages(Message[] messages) throws Exception {_        int fetchSize = endpoint.getConfiguration().getFetchSize()__        int count = fetchSize == -1 ? messages.length : Math.min(fetchSize, messages.length)___        if (LOG.isDebugEnabled()) {_            LOG.debug("Fetching " + count + " messages. Total " + messages.length + " messages.")__        }__        for (int i = 0_ i < count_ i++) {_            Message message = messages[i]__            if (!message.getFlags().contains(Flags.Flag.DELETED)) {_                processMessage(message)__                flagMessageProcessed(message)__            } else {_                if (LOG.isDebugEnabled()) {_                    LOG.debug("Skipping message as it was flagged as deleted: " + MailUtils.dumpMessage(message))__                }_            }_        }_    };process,all,the,messages;protected,void,process,messages,message,messages,throws,exception,int,fetch,size,endpoint,get,configuration,get,fetch,size,int,count,fetch,size,1,messages,length,math,min,fetch,size,messages,length,if,log,is,debug,enabled,log,debug,fetching,count,messages,total,messages,length,messages,for,int,i,0,i,count,i,message,message,messages,i,if,message,get,flags,contains,flags,flag,deleted,process,message,message,flag,message,processed,message,else,if,log,is,debug,enabled,log,debug,skipping,message,as,it,was,flagged,as,deleted,mail,utils,dump,message,message
MailConsumer -> protected void processMessages(Message[] messages) throws Exception;1210309018;Process all the messages;protected void processMessages(Message[] messages) throws Exception {_        int fetchSize = endpoint.getConfiguration().getFetchSize()__        int count = fetchSize == -1 ? messages.length : Math.min(fetchSize, messages.length)___        if (LOG.isDebugEnabled()) {_            LOG.debug("Fetching " + count + " messages. Total " + messages.length + " messages.")__        }__        for (int i = 0_ i < count_ i++) {_            Message message = messages[i]__            if (!message.getFlags().contains(Flags.Flag.DELETED)) {_                processMessage(message)__                flagMessageProcessed(message)__            } else {_                if (LOG.isDebugEnabled()) {_                    LOG.debug("Skipping message as it was flagged as deleted: " + MailUtils.dumpMessage(message))__                }_            }_        }_    };process,all,the,messages;protected,void,process,messages,message,messages,throws,exception,int,fetch,size,endpoint,get,configuration,get,fetch,size,int,count,fetch,size,1,messages,length,math,min,fetch,size,messages,length,if,log,is,debug,enabled,log,debug,fetching,count,messages,total,messages,length,messages,for,int,i,0,i,count,i,message,message,messages,i,if,message,get,flags,contains,flags,flag,deleted,process,message,message,flag,message,processed,message,else,if,log,is,debug,enabled,log,debug,skipping,message,as,it,was,flagged,as,deleted,mail,utils,dump,message,message
MailConsumer -> protected void processMessages(Message[] messages) throws Exception;1210406876;Process all the messages;protected void processMessages(Message[] messages) throws Exception {_        int fetchSize = endpoint.getConfiguration().getFetchSize()__        int count = fetchSize == -1 ? messages.length : Math.min(fetchSize, messages.length)___        if (LOG.isDebugEnabled()) {_            LOG.debug("Fetching " + count + " messages. Total " + messages.length + " messages.")__        }__        for (int i = 0_ i < count_ i++) {_            Message message = messages[i]__            if (!message.getFlags().contains(Flags.Flag.DELETED)) {_                processMessage(message)__                flagMessageProcessed(message)__            } else {_                if (LOG.isDebugEnabled()) {_                    LOG.debug("Skipping message as it was flagged as deleted: " + MailUtils.dumpMessage(message))__                }_            }_        }_    };process,all,the,messages;protected,void,process,messages,message,messages,throws,exception,int,fetch,size,endpoint,get,configuration,get,fetch,size,int,count,fetch,size,1,messages,length,math,min,fetch,size,messages,length,if,log,is,debug,enabled,log,debug,fetching,count,messages,total,messages,length,messages,for,int,i,0,i,count,i,message,message,messages,i,if,message,get,flags,contains,flags,flag,deleted,process,message,message,flag,message,processed,message,else,if,log,is,debug,enabled,log,debug,skipping,message,as,it,was,flagged,as,deleted,mail,utils,dump,message,message
MailConsumer -> protected void processMessages(Message[] messages) throws Exception;1210502265;Process all the messages;protected void processMessages(Message[] messages) throws Exception {_        int fetchSize = endpoint.getConfiguration().getFetchSize()__        int count = fetchSize == -1 ? messages.length : Math.min(fetchSize, messages.length)___        if (LOG.isDebugEnabled()) {_            LOG.debug("Fetching " + count + " messages. Total " + messages.length + " messages.")__        }__        for (int i = 0_ i < count_ i++) {_            Message message = messages[i]__            if (!message.getFlags().contains(Flags.Flag.DELETED)) {_                processMessage(message)__                flagMessageProcessed(message)__            } else {_                if (LOG.isDebugEnabled()) {_                    LOG.debug("Skipping message as it was flagged as deleted: " + MailUtils.dumpMessage(message))__                }_            }_        }_    };process,all,the,messages;protected,void,process,messages,message,messages,throws,exception,int,fetch,size,endpoint,get,configuration,get,fetch,size,int,count,fetch,size,1,messages,length,math,min,fetch,size,messages,length,if,log,is,debug,enabled,log,debug,fetching,count,messages,total,messages,length,messages,for,int,i,0,i,count,i,message,message,messages,i,if,message,get,flags,contains,flags,flag,deleted,process,message,message,flag,message,processed,message,else,if,log,is,debug,enabled,log,debug,skipping,message,as,it,was,flagged,as,deleted,mail,utils,dump,message,message
MailConsumer -> protected void processMessages(Message[] messages) throws Exception;1226348945;Process all the messages;protected void processMessages(Message[] messages) throws Exception {_        int fetchSize = endpoint.getConfiguration().getFetchSize()__        int count = fetchSize == -1 ? messages.length : Math.min(fetchSize, messages.length)___        if (LOG.isDebugEnabled()) {_            LOG.debug("Fetching " + count + " messages. Total " + messages.length + " messages.")__        }__        for (int i = 0_ i < count_ i++) {_            Message message = messages[i]__            if (!message.getFlags().contains(Flags.Flag.DELETED)) {_                processMessage(message)__                flagMessageProcessed(message)__            } else {_                if (LOG.isDebugEnabled()) {_                    LOG.debug("Skipping message as it was flagged as deleted: " + MailUtils.dumpMessage(message))__                }_            }_        }_    };process,all,the,messages;protected,void,process,messages,message,messages,throws,exception,int,fetch,size,endpoint,get,configuration,get,fetch,size,int,count,fetch,size,1,messages,length,math,min,fetch,size,messages,length,if,log,is,debug,enabled,log,debug,fetching,count,messages,total,messages,length,messages,for,int,i,0,i,count,i,message,message,messages,i,if,message,get,flags,contains,flags,flag,deleted,process,message,message,flag,message,processed,message,else,if,log,is,debug,enabled,log,debug,skipping,message,as,it,was,flagged,as,deleted,mail,utils,dump,message,message
MailConsumer -> protected void processMessages(Message[] messages) throws Exception;1226378057;Process all the messages;protected void processMessages(Message[] messages) throws Exception {_        int fetchSize = endpoint.getConfiguration().getFetchSize()__        int count = fetchSize == -1 ? messages.length : Math.min(fetchSize, messages.length)___        if (LOG.isDebugEnabled()) {_            LOG.debug("Fetching " + count + " messages. Total " + messages.length + " messages.")__        }__        for (int i = 0_ i < count_ i++) {_            Message message = messages[i]__            if (!message.getFlags().contains(Flags.Flag.DELETED)) {_                processMessage(message)__                flagMessageProcessed(message)__            } else {_                if (LOG.isDebugEnabled()) {_                    LOG.debug("Skipping message as it was flagged as deleted: " + MailUtils.dumpMessage(message))__                }_            }_        }_    };process,all,the,messages;protected,void,process,messages,message,messages,throws,exception,int,fetch,size,endpoint,get,configuration,get,fetch,size,int,count,fetch,size,1,messages,length,math,min,fetch,size,messages,length,if,log,is,debug,enabled,log,debug,fetching,count,messages,total,messages,length,messages,for,int,i,0,i,count,i,message,message,messages,i,if,message,get,flags,contains,flags,flag,deleted,process,message,message,flag,message,processed,message,else,if,log,is,debug,enabled,log,debug,skipping,message,as,it,was,flagged,as,deleted,mail,utils,dump,message,message
MailConsumer -> protected void processMessages(Message[] messages) throws Exception;1232273690;Process all the messages;protected void processMessages(Message[] messages) throws Exception {_        int fetchSize = endpoint.getConfiguration().getFetchSize()__        int count = fetchSize == -1 ? messages.length : Math.min(fetchSize, messages.length)___        if (LOG.isDebugEnabled()) {_            LOG.debug("Fetching " + count + " messages. Total " + messages.length + " messages.")__        }__        for (int i = 0_ i < count_ i++) {_            Message message = messages[i]__            if (!message.getFlags().contains(Flags.Flag.DELETED)) {_                processMessage(message)__                flagMessageProcessed(message)__            } else {_                if (LOG.isDebugEnabled()) {_                    LOG.debug("Skipping message as it was flagged as deleted: " + MailUtils.dumpMessage(message))__                }_            }_        }_    };process,all,the,messages;protected,void,process,messages,message,messages,throws,exception,int,fetch,size,endpoint,get,configuration,get,fetch,size,int,count,fetch,size,1,messages,length,math,min,fetch,size,messages,length,if,log,is,debug,enabled,log,debug,fetching,count,messages,total,messages,length,messages,for,int,i,0,i,count,i,message,message,messages,i,if,message,get,flags,contains,flags,flag,deleted,process,message,message,flag,message,processed,message,else,if,log,is,debug,enabled,log,debug,skipping,message,as,it,was,flagged,as,deleted,mail,utils,dump,message,message
MailConsumer -> protected void processMessages(Message[] messages) throws Exception;1234514318;Process all the messages;protected void processMessages(Message[] messages) throws Exception {_        int fetchSize = endpoint.getConfiguration().getFetchSize()__        int count = fetchSize == -1 ? messages.length : Math.min(fetchSize, messages.length)___        if (LOG.isDebugEnabled()) {_            LOG.debug("Fetching " + count + " messages. Total " + messages.length + " messages.")__        }__        for (int i = 0_ i < count_ i++) {_            Message message = messages[i]__            if (!message.getFlags().contains(Flags.Flag.DELETED)) {_                processMessage(message)__                flagMessageProcessed(message)__            } else {_                if (LOG.isDebugEnabled()) {_                    LOG.debug("Skipping message as it was flagged as deleted: " + MailUtils.dumpMessage(message))__                }_            }_        }_    };process,all,the,messages;protected,void,process,messages,message,messages,throws,exception,int,fetch,size,endpoint,get,configuration,get,fetch,size,int,count,fetch,size,1,messages,length,math,min,fetch,size,messages,length,if,log,is,debug,enabled,log,debug,fetching,count,messages,total,messages,length,messages,for,int,i,0,i,count,i,message,message,messages,i,if,message,get,flags,contains,flags,flag,deleted,process,message,message,flag,message,processed,message,else,if,log,is,debug,enabled,log,debug,skipping,message,as,it,was,flagged,as,deleted,mail,utils,dump,message,message
MailConsumer -> protected void processMessages(Message[] messages) throws Exception;1236934558;Process all the messages;protected void processMessages(Message[] messages) throws Exception {_        int fetchSize = endpoint.getConfiguration().getFetchSize()__        int count = fetchSize == -1 ? messages.length : Math.min(fetchSize, messages.length)___        if (LOG.isDebugEnabled()) {_            LOG.debug("Fetching " + count + " messages. Total " + messages.length + " messages.")__        }__        for (int i = 0_ i < count_ i++) {_            Message message = messages[i]__            if (!message.getFlags().contains(Flags.Flag.DELETED)) {__                MailExchange exchange = endpoint.createExchange(message)__                process(exchange)___                if (!exchange.isFailed()) {_                    processCommit(exchange)__                } else {_                    processRollback(exchange)__                }_            } else {_                if (LOG.isDebugEnabled()) {_                    LOG.debug("Skipping message as it was flagged as deleted: " + MailUtils.dumpMessage(message))__                }_            }_        }_    };process,all,the,messages;protected,void,process,messages,message,messages,throws,exception,int,fetch,size,endpoint,get,configuration,get,fetch,size,int,count,fetch,size,1,messages,length,math,min,fetch,size,messages,length,if,log,is,debug,enabled,log,debug,fetching,count,messages,total,messages,length,messages,for,int,i,0,i,count,i,message,message,messages,i,if,message,get,flags,contains,flags,flag,deleted,mail,exchange,exchange,endpoint,create,exchange,message,process,exchange,if,exchange,is,failed,process,commit,exchange,else,process,rollback,exchange,else,if,log,is,debug,enabled,log,debug,skipping,message,as,it,was,flagged,as,deleted,mail,utils,dump,message,message
MailConsumer -> protected void processMessages(Message[] messages) throws Exception;1238414282;Process all the messages;protected void processMessages(Message[] messages) throws Exception {_        int fetchSize = endpoint.getConfiguration().getFetchSize()__        int count = fetchSize == -1 ? messages.length : Math.min(fetchSize, messages.length)___        if (LOG.isDebugEnabled()) {_            LOG.debug("Fetching " + count + " messages. Total " + messages.length + " messages.")__        }__        for (int i = 0_ i < count_ i++) {_            Message message = messages[i]__            if (!message.getFlags().contains(Flags.Flag.DELETED)) {__                MailExchange exchange = endpoint.createExchange(message)__                process(exchange)___                if (!exchange.isFailed()) {_                    processCommit(exchange)__                } else {_                    processRollback(exchange)__                }_            } else {_                if (LOG.isDebugEnabled()) {_                    LOG.debug("Skipping message as it was flagged as deleted: " + MailUtils.dumpMessage(message))__                }_            }_        }_    };process,all,the,messages;protected,void,process,messages,message,messages,throws,exception,int,fetch,size,endpoint,get,configuration,get,fetch,size,int,count,fetch,size,1,messages,length,math,min,fetch,size,messages,length,if,log,is,debug,enabled,log,debug,fetching,count,messages,total,messages,length,messages,for,int,i,0,i,count,i,message,message,messages,i,if,message,get,flags,contains,flags,flag,deleted,mail,exchange,exchange,endpoint,create,exchange,message,process,exchange,if,exchange,is,failed,process,commit,exchange,else,process,rollback,exchange,else,if,log,is,debug,enabled,log,debug,skipping,message,as,it,was,flagged,as,deleted,mail,utils,dump,message,message
MailConsumer -> protected void processRollback(Exchange exchange) throws MessagingException;1245903785;Strategy when processing the exchange failed.;protected void processRollback(Exchange exchange) throws MessagingException {_        LOG.warn("Exchange failed, so rolling back message status: " + exchange)__    };strategy,when,processing,the,exchange,failed;protected,void,process,rollback,exchange,exchange,throws,messaging,exception,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Exchange exchange) throws MessagingException;1257837548;Strategy when processing the exchange failed.;protected void processRollback(Exchange exchange) throws MessagingException {_        LOG.warn("Exchange failed, so rolling back message status: " + exchange)__    };strategy,when,processing,the,exchange,failed;protected,void,process,rollback,exchange,exchange,throws,messaging,exception,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Exchange exchange) throws MessagingException;1258003617;Strategy when processing the exchange failed.;protected void processRollback(Exchange exchange) throws MessagingException {_        LOG.warn("Exchange failed, so rolling back message status: " + exchange)__    };strategy,when,processing,the,exchange,failed;protected,void,process,rollback,exchange,exchange,throws,messaging,exception,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Exchange exchange) throws MessagingException;1259234335;Strategy when processing the exchange failed.;protected void processRollback(Exchange exchange) throws MessagingException {_        LOG.warn("Exchange failed, so rolling back message status: " + exchange)__    };strategy,when,processing,the,exchange,failed;protected,void,process,rollback,exchange,exchange,throws,messaging,exception,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Exchange exchange) throws MessagingException;1261839486;Strategy when processing the exchange failed.;protected void processRollback(Exchange exchange) throws MessagingException {_        LOG.warn("Exchange failed, so rolling back message status: " + exchange)__    };strategy,when,processing,the,exchange,failed;protected,void,process,rollback,exchange,exchange,throws,messaging,exception,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Exchange exchange) throws MessagingException;1262930031;Strategy when processing the exchange failed.;protected void processRollback(Exchange exchange) throws MessagingException {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed;protected,void,process,rollback,exchange,exchange,throws,messaging,exception,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void flagMessageProcessed(Message message) throws MessagingException;1209814362;Strategy to flag the message after being processed.;protected void flagMessageProcessed(Message message) throws MessagingException {_        if (endpoint.getConfiguration().isDeleteProcessedMessages()) {_            message.setFlag(Flags.Flag.DELETED, true)__        } else {_            message.setFlag(Flags.Flag.SEEN, true)__        }_    };strategy,to,flag,the,message,after,being,processed;protected,void,flag,message,processed,message,message,throws,messaging,exception,if,endpoint,get,configuration,is,delete,processed,messages,message,set,flag,flags,flag,deleted,true,else,message,set,flag,flags,flag,seen,true
MailConsumer -> protected void flagMessageProcessed(Message message) throws MessagingException;1209911518;Strategy to flag the message after being processed.;protected void flagMessageProcessed(Message message) throws MessagingException {_        if (endpoint.getConfiguration().isDeleteProcessedMessages()) {_            message.setFlag(Flags.Flag.DELETED, true)__        } else {_            message.setFlag(Flags.Flag.SEEN, true)__        }_    };strategy,to,flag,the,message,after,being,processed;protected,void,flag,message,processed,message,message,throws,messaging,exception,if,endpoint,get,configuration,is,delete,processed,messages,message,set,flag,flags,flag,deleted,true,else,message,set,flag,flags,flag,seen,true
MailConsumer -> protected void flagMessageProcessed(Message message) throws MessagingException;1209917536;Strategy to flag the message after being processed.;protected void flagMessageProcessed(Message message) throws MessagingException {_        if (endpoint.getConfiguration().isDeleteProcessedMessages()) {_            message.setFlag(Flags.Flag.DELETED, true)__        } else {_            message.setFlag(Flags.Flag.SEEN, true)__        }_    };strategy,to,flag,the,message,after,being,processed;protected,void,flag,message,processed,message,message,throws,messaging,exception,if,endpoint,get,configuration,is,delete,processed,messages,message,set,flag,flags,flag,deleted,true,else,message,set,flag,flags,flag,seen,true
MailConsumer -> protected void flagMessageProcessed(Message message) throws MessagingException;1210058722;Strategy to flag the message after being processed.;protected void flagMessageProcessed(Message message) throws MessagingException {_        if (endpoint.getConfiguration().isDeleteProcessedMessages()) {_            message.setFlag(Flags.Flag.DELETED, true)__        } else {_            message.setFlag(Flags.Flag.SEEN, true)__        }_    };strategy,to,flag,the,message,after,being,processed;protected,void,flag,message,processed,message,message,throws,messaging,exception,if,endpoint,get,configuration,is,delete,processed,messages,message,set,flag,flags,flag,deleted,true,else,message,set,flag,flags,flag,seen,true
MailConsumer -> protected void flagMessageProcessed(Message message) throws MessagingException;1210221715;Strategy to flag the message after being processed.;protected void flagMessageProcessed(Message message) throws MessagingException {_        if (endpoint.getConfiguration().isDeleteProcessedMessages()) {_            message.setFlag(Flags.Flag.DELETED, true)__        } else {_            message.setFlag(Flags.Flag.SEEN, true)__        }_    };strategy,to,flag,the,message,after,being,processed;protected,void,flag,message,processed,message,message,throws,messaging,exception,if,endpoint,get,configuration,is,delete,processed,messages,message,set,flag,flags,flag,deleted,true,else,message,set,flag,flags,flag,seen,true
MailConsumer -> protected void flagMessageProcessed(Message message) throws MessagingException;1210309018;Strategy to flag the message after being processed.;protected void flagMessageProcessed(Message message) throws MessagingException {_        if (endpoint.getConfiguration().isDeleteProcessedMessages()) {_            message.setFlag(Flags.Flag.DELETED, true)__        } else {_            message.setFlag(Flags.Flag.SEEN, true)__        }_    };strategy,to,flag,the,message,after,being,processed;protected,void,flag,message,processed,message,message,throws,messaging,exception,if,endpoint,get,configuration,is,delete,processed,messages,message,set,flag,flags,flag,deleted,true,else,message,set,flag,flags,flag,seen,true
MailConsumer -> protected void flagMessageProcessed(Message message) throws MessagingException;1210406876;Strategy to flag the message after being processed.;protected void flagMessageProcessed(Message message) throws MessagingException {_        if (endpoint.getConfiguration().isDeleteProcessedMessages()) {_            message.setFlag(Flags.Flag.DELETED, true)__        } else {_            message.setFlag(Flags.Flag.SEEN, true)__        }_    };strategy,to,flag,the,message,after,being,processed;protected,void,flag,message,processed,message,message,throws,messaging,exception,if,endpoint,get,configuration,is,delete,processed,messages,message,set,flag,flags,flag,deleted,true,else,message,set,flag,flags,flag,seen,true
MailConsumer -> protected void flagMessageProcessed(Message message) throws MessagingException;1210502265;Strategy to flag the message after being processed.;protected void flagMessageProcessed(Message message) throws MessagingException {_        if (endpoint.getConfiguration().isDeleteProcessedMessages()) {_            message.setFlag(Flags.Flag.DELETED, true)__        } else {_            message.setFlag(Flags.Flag.SEEN, true)__        }_    };strategy,to,flag,the,message,after,being,processed;protected,void,flag,message,processed,message,message,throws,messaging,exception,if,endpoint,get,configuration,is,delete,processed,messages,message,set,flag,flags,flag,deleted,true,else,message,set,flag,flags,flag,seen,true
MailConsumer -> protected void flagMessageProcessed(Message message) throws MessagingException;1226348945;Strategy to flag the message after being processed.;protected void flagMessageProcessed(Message message) throws MessagingException {_        if (endpoint.getConfiguration().isDeleteProcessedMessages()) {_            message.setFlag(Flags.Flag.DELETED, true)__        } else {_            message.setFlag(Flags.Flag.SEEN, true)__        }_    };strategy,to,flag,the,message,after,being,processed;protected,void,flag,message,processed,message,message,throws,messaging,exception,if,endpoint,get,configuration,is,delete,processed,messages,message,set,flag,flags,flag,deleted,true,else,message,set,flag,flags,flag,seen,true
MailConsumer -> protected void flagMessageProcessed(Message message) throws MessagingException;1226378057;Strategy to flag the message after being processed.;protected void flagMessageProcessed(Message message) throws MessagingException {_        if (endpoint.getConfiguration().isDeleteProcessedMessages()) {_            message.setFlag(Flags.Flag.DELETED, true)__        } else {_            message.setFlag(Flags.Flag.SEEN, true)__        }_    };strategy,to,flag,the,message,after,being,processed;protected,void,flag,message,processed,message,message,throws,messaging,exception,if,endpoint,get,configuration,is,delete,processed,messages,message,set,flag,flags,flag,deleted,true,else,message,set,flag,flags,flag,seen,true
MailConsumer -> protected void flagMessageProcessed(Message message) throws MessagingException;1232273690;Strategy to flag the message after being processed.;protected void flagMessageProcessed(Message message) throws MessagingException {_        if (endpoint.getConfiguration().isDeleteProcessedMessages()) {_            message.setFlag(Flags.Flag.DELETED, true)__        } else {_            message.setFlag(Flags.Flag.SEEN, true)__        }_    };strategy,to,flag,the,message,after,being,processed;protected,void,flag,message,processed,message,message,throws,messaging,exception,if,endpoint,get,configuration,is,delete,processed,messages,message,set,flag,flags,flag,deleted,true,else,message,set,flag,flags,flag,seen,true
MailConsumer -> protected void flagMessageProcessed(Message message) throws MessagingException;1234514318;Strategy to flag the message after being processed.;protected void flagMessageProcessed(Message message) throws MessagingException {_        if (endpoint.getConfiguration().isDeleteProcessedMessages()) {_            message.setFlag(Flags.Flag.DELETED, true)__        } else {_            message.setFlag(Flags.Flag.SEEN, true)__        }_    };strategy,to,flag,the,message,after,being,processed;protected,void,flag,message,processed,message,message,throws,messaging,exception,if,endpoint,get,configuration,is,delete,processed,messages,message,set,flag,flags,flag,deleted,true,else,message,set,flag,flags,flag,seen,true
MailConsumer -> protected void process(MailExchange exchange) throws Exception;1236934558;Strategy to process the mail message.;protected void process(MailExchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            LOG.debug("Processing message: " + MailUtils.dumpMessage(exchange.getIn().getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,mail,exchange,exchange,throws,exception,if,log,is,debug,enabled,log,debug,processing,message,mail,utils,dump,message,exchange,get,in,get,message,get,processor,process,exchange
MailConsumer -> protected void process(MailExchange exchange) throws Exception;1238414282;Strategy to process the mail message.;protected void process(MailExchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            LOG.debug("Processing message: " + MailUtils.dumpMessage(exchange.getIn().getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,mail,exchange,exchange,throws,exception,if,log,is,debug,enabled,log,debug,processing,message,mail,utils,dump,message,exchange,get,in,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(MailExchange exchange) throws Exception;1243077507;Strategy to process the mail message.;protected void processExchange(MailExchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            LOG.debug("Processing message: " + MailUtils.dumpMessage(exchange.getIn().getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,mail,exchange,exchange,throws,exception,if,log,is,debug,enabled,log,debug,processing,message,mail,utils,dump,message,exchange,get,in,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(MailExchange exchange) throws Exception;1243487077;Strategy to process the mail message.;protected void processExchange(MailExchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            LOG.debug("Processing message: " + MailUtils.dumpMessage(exchange.getIn().getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,mail,exchange,exchange,throws,exception,if,log,is,debug,enabled,log,debug,processing,message,mail,utils,dump,message,exchange,get,in,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(MailExchange exchange) throws Exception;1244220660;Strategy to process the mail message.;protected void processExchange(MailExchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            LOG.debug("Processing message: " + MailUtils.dumpMessage(exchange.getIn().getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,mail,exchange,exchange,throws,exception,if,log,is,debug,enabled,log,debug,processing,message,mail,utils,dump,message,exchange,get,in,get,message,get,processor,process,exchange
MailConsumer -> protected void processRollback(MailExchange exchange) throws MessagingException;1236934558;Strategy when processing the exchange failed.;protected void processRollback(MailExchange exchange) throws MessagingException {_        LOG.warn("Exchange failed, so rolling back message status: " + exchange)__    };strategy,when,processing,the,exchange,failed;protected,void,process,rollback,mail,exchange,exchange,throws,messaging,exception,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(MailExchange exchange) throws MessagingException;1238414282;Strategy when processing the exchange failed.;protected void processRollback(MailExchange exchange) throws MessagingException {_        LOG.warn("Exchange failed, so rolling back message status: " + exchange)__    };strategy,when,processing,the,exchange,failed;protected,void,process,rollback,mail,exchange,exchange,throws,messaging,exception,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(MailExchange exchange) throws MessagingException;1243077507;Strategy when processing the exchange failed.;protected void processRollback(MailExchange exchange) throws MessagingException {_        LOG.warn("Exchange failed, so rolling back message status: " + exchange)__    };strategy,when,processing,the,exchange,failed;protected,void,process,rollback,mail,exchange,exchange,throws,messaging,exception,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(MailExchange exchange) throws MessagingException;1243487077;Strategy when processing the exchange failed.;protected void processRollback(MailExchange exchange) throws MessagingException {_        LOG.warn("Exchange failed, so rolling back message status: " + exchange)__    };strategy,when,processing,the,exchange,failed;protected,void,process,rollback,mail,exchange,exchange,throws,messaging,exception,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(MailExchange exchange) throws MessagingException;1244220660;Strategy when processing the exchange failed.;protected void processRollback(MailExchange exchange) throws MessagingException {_        LOG.warn("Exchange failed, so rolling back message status: " + exchange)__    };strategy,when,processing,the,exchange,failed;protected,void,process,rollback,mail,exchange,exchange,throws,messaging,exception,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processMessage(Message message) throws Exception;1209814362;Strategy to process the mail message.;protected void processMessage(Message message) throws Exception {_        MailExchange exchange = endpoint.createExchange(message)__        if (LOG.isDebugEnabled()) {_            LOG.debug("Processing message: " + MailUtils.dumpMessage(message))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,message,message,message,throws,exception,mail,exchange,exchange,endpoint,create,exchange,message,if,log,is,debug,enabled,log,debug,processing,message,mail,utils,dump,message,message,get,processor,process,exchange
MailConsumer -> protected void processMessage(Message message) throws Exception;1209911518;Strategy to process the mail message.;protected void processMessage(Message message) throws Exception {_        MailExchange exchange = endpoint.createExchange(message)__        if (LOG.isDebugEnabled()) {_            LOG.debug("Processing message: " + MailUtils.dumpMessage(message))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,message,message,message,throws,exception,mail,exchange,exchange,endpoint,create,exchange,message,if,log,is,debug,enabled,log,debug,processing,message,mail,utils,dump,message,message,get,processor,process,exchange
MailConsumer -> protected void processMessage(Message message) throws Exception;1209917536;Strategy to process the mail message.;protected void processMessage(Message message) throws Exception {_        MailExchange exchange = endpoint.createExchange(message)__        if (LOG.isDebugEnabled()) {_            LOG.debug("Processing message: " + MailUtils.dumpMessage(message))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,message,message,message,throws,exception,mail,exchange,exchange,endpoint,create,exchange,message,if,log,is,debug,enabled,log,debug,processing,message,mail,utils,dump,message,message,get,processor,process,exchange
MailConsumer -> protected void processMessage(Message message) throws Exception;1210058722;Strategy to process the mail message.;protected void processMessage(Message message) throws Exception {_        MailExchange exchange = endpoint.createExchange(message)__        if (LOG.isDebugEnabled()) {_            LOG.debug("Processing message: " + MailUtils.dumpMessage(message))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,message,message,message,throws,exception,mail,exchange,exchange,endpoint,create,exchange,message,if,log,is,debug,enabled,log,debug,processing,message,mail,utils,dump,message,message,get,processor,process,exchange
MailConsumer -> protected void processMessage(Message message) throws Exception;1210221715;Strategy to process the mail message.;protected void processMessage(Message message) throws Exception {_        MailExchange exchange = endpoint.createExchange(message)__        if (LOG.isDebugEnabled()) {_            LOG.debug("Processing message: " + MailUtils.dumpMessage(message))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,message,message,message,throws,exception,mail,exchange,exchange,endpoint,create,exchange,message,if,log,is,debug,enabled,log,debug,processing,message,mail,utils,dump,message,message,get,processor,process,exchange
MailConsumer -> protected void processMessage(Message message) throws Exception;1210309018;Strategy to process the mail message.;protected void processMessage(Message message) throws Exception {_        MailExchange exchange = endpoint.createExchange(message)__        if (LOG.isDebugEnabled()) {_            LOG.debug("Processing message: " + MailUtils.dumpMessage(message))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,message,message,message,throws,exception,mail,exchange,exchange,endpoint,create,exchange,message,if,log,is,debug,enabled,log,debug,processing,message,mail,utils,dump,message,message,get,processor,process,exchange
MailConsumer -> protected void processMessage(Message message) throws Exception;1210406876;Strategy to process the mail message.;protected void processMessage(Message message) throws Exception {_        MailExchange exchange = endpoint.createExchange(message)__        if (LOG.isDebugEnabled()) {_            LOG.debug("Processing message: " + MailUtils.dumpMessage(message))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,message,message,message,throws,exception,mail,exchange,exchange,endpoint,create,exchange,message,if,log,is,debug,enabled,log,debug,processing,message,mail,utils,dump,message,message,get,processor,process,exchange
MailConsumer -> protected void processMessage(Message message) throws Exception;1210502265;Strategy to process the mail message.;protected void processMessage(Message message) throws Exception {_        MailExchange exchange = endpoint.createExchange(message)__        if (LOG.isDebugEnabled()) {_            LOG.debug("Processing message: " + MailUtils.dumpMessage(message))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,message,message,message,throws,exception,mail,exchange,exchange,endpoint,create,exchange,message,if,log,is,debug,enabled,log,debug,processing,message,mail,utils,dump,message,message,get,processor,process,exchange
MailConsumer -> protected void processMessage(Message message) throws Exception;1226348945;Strategy to process the mail message.;protected void processMessage(Message message) throws Exception {_        MailExchange exchange = endpoint.createExchange(message)__        if (LOG.isDebugEnabled()) {_            LOG.debug("Processing message: " + MailUtils.dumpMessage(message))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,message,message,message,throws,exception,mail,exchange,exchange,endpoint,create,exchange,message,if,log,is,debug,enabled,log,debug,processing,message,mail,utils,dump,message,message,get,processor,process,exchange
MailConsumer -> protected void processMessage(Message message) throws Exception;1226378057;Strategy to process the mail message.;protected void processMessage(Message message) throws Exception {_        MailExchange exchange = endpoint.createExchange(message)__        if (LOG.isDebugEnabled()) {_            LOG.debug("Processing message: " + MailUtils.dumpMessage(message))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,message,message,message,throws,exception,mail,exchange,exchange,endpoint,create,exchange,message,if,log,is,debug,enabled,log,debug,processing,message,mail,utils,dump,message,message,get,processor,process,exchange
MailConsumer -> protected void processMessage(Message message) throws Exception;1232273690;Strategy to process the mail message.;protected void processMessage(Message message) throws Exception {_        MailExchange exchange = endpoint.createExchange(message)__        if (LOG.isDebugEnabled()) {_            LOG.debug("Processing message: " + MailUtils.dumpMessage(message))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,message,message,message,throws,exception,mail,exchange,exchange,endpoint,create,exchange,message,if,log,is,debug,enabled,log,debug,processing,message,mail,utils,dump,message,message,get,processor,process,exchange
MailConsumer -> protected void processMessage(Message message) throws Exception;1234514318;Strategy to process the mail message.;protected void processMessage(Message message) throws Exception {_        MailExchange exchange = endpoint.createExchange(message)__        if (LOG.isDebugEnabled()) {_            LOG.debug("Processing message: " + MailUtils.dumpMessage(message))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,message,message,message,throws,exception,mail,exchange,exchange,endpoint,create,exchange,message,if,log,is,debug,enabled,log,debug,processing,message,mail,utils,dump,message,message,get,processor,process,exchange
MailConsumer -> protected void processCommit(MailExchange exchange) throws MessagingException;1236934558;Strategy to flag the message after being processed.;protected void processCommit(MailExchange exchange) throws MessagingException {_        Message message = exchange.getIn().getMessage()___        if (endpoint.getConfiguration().isDelete()) {_            LOG.debug("Exchange processed, so flagging message as DELETED")__            message.setFlag(Flags.Flag.DELETED, true)__        } else {_            LOG.debug("Exchange processed, so flagging message as SEEN")__            message.setFlag(Flags.Flag.SEEN, true)__        }_    };strategy,to,flag,the,message,after,being,processed;protected,void,process,commit,mail,exchange,exchange,throws,messaging,exception,message,message,exchange,get,in,get,message,if,endpoint,get,configuration,is,delete,log,debug,exchange,processed,so,flagging,message,as,deleted,message,set,flag,flags,flag,deleted,true,else,log,debug,exchange,processed,so,flagging,message,as,seen,message,set,flag,flags,flag,seen,true
MailConsumer -> protected void processCommit(MailExchange exchange) throws MessagingException;1238414282;Strategy to flag the message after being processed.;protected void processCommit(MailExchange exchange) throws MessagingException {_        Message message = exchange.getIn().getMessage()___        if (endpoint.getConfiguration().isDelete()) {_            LOG.debug("Exchange processed, so flagging message as DELETED")__            message.setFlag(Flags.Flag.DELETED, true)__        } else {_            LOG.debug("Exchange processed, so flagging message as SEEN")__            message.setFlag(Flags.Flag.SEEN, true)__        }_    };strategy,to,flag,the,message,after,being,processed;protected,void,process,commit,mail,exchange,exchange,throws,messaging,exception,message,message,exchange,get,in,get,message,if,endpoint,get,configuration,is,delete,log,debug,exchange,processed,so,flagging,message,as,deleted,message,set,flag,flags,flag,deleted,true,else,log,debug,exchange,processed,so,flagging,message,as,seen,message,set,flag,flags,flag,seen,true
MailConsumer -> protected void processCommit(MailExchange exchange) throws MessagingException;1243077507;Strategy to flag the message after being processed.;protected void processCommit(MailExchange exchange) throws MessagingException {_        Message message = exchange.getIn().getMessage()___        if (endpoint.getConfiguration().isDelete()) {_            LOG.debug("Exchange processed, so flagging message as DELETED")__            message.setFlag(Flags.Flag.DELETED, true)__        } else {_            LOG.debug("Exchange processed, so flagging message as SEEN")__            message.setFlag(Flags.Flag.SEEN, true)__        }_    };strategy,to,flag,the,message,after,being,processed;protected,void,process,commit,mail,exchange,exchange,throws,messaging,exception,message,message,exchange,get,in,get,message,if,endpoint,get,configuration,is,delete,log,debug,exchange,processed,so,flagging,message,as,deleted,message,set,flag,flags,flag,deleted,true,else,log,debug,exchange,processed,so,flagging,message,as,seen,message,set,flag,flags,flag,seen,true
MailConsumer -> protected void processCommit(MailExchange exchange) throws MessagingException;1243487077;Strategy to flag the message after being processed.;protected void processCommit(MailExchange exchange) throws MessagingException {_        Message message = exchange.getIn().getMessage()___        if (endpoint.getConfiguration().isDelete()) {_            LOG.debug("Exchange processed, so flagging message as DELETED")__            message.setFlag(Flags.Flag.DELETED, true)__        } else {_            LOG.debug("Exchange processed, so flagging message as SEEN")__            message.setFlag(Flags.Flag.SEEN, true)__        }_    };strategy,to,flag,the,message,after,being,processed;protected,void,process,commit,mail,exchange,exchange,throws,messaging,exception,message,message,exchange,get,in,get,message,if,endpoint,get,configuration,is,delete,log,debug,exchange,processed,so,flagging,message,as,deleted,message,set,flag,flags,flag,deleted,true,else,log,debug,exchange,processed,so,flagging,message,as,seen,message,set,flag,flags,flag,seen,true
MailConsumer -> protected void processCommit(MailExchange exchange) throws MessagingException;1244220660;Strategy to flag the message after being processed.;protected void processCommit(MailExchange exchange) throws MessagingException {_        Message message = exchange.getIn().getMessage()___        if (endpoint.getConfiguration().isDelete()) {_            LOG.debug("Exchange processed, so flagging message as DELETED")__            message.setFlag(Flags.Flag.DELETED, true)__        } else {_            LOG.debug("Exchange processed, so flagging message as SEEN")__            message.setFlag(Flags.Flag.SEEN, true)__        }_    };strategy,to,flag,the,message,after,being,processed;protected,void,process,commit,mail,exchange,exchange,throws,messaging,exception,message,message,exchange,get,in,get,message,if,endpoint,get,configuration,is,delete,log,debug,exchange,processed,so,flagging,message,as,deleted,message,set,flag,flags,flag,deleted,true,else,log,debug,exchange,processed,so,flagging,message,as,seen,message,set,flag,flags,flag,seen,true
MailConsumer -> protected String generatePop3Uid(Message message);1309171908;Generates an UID of the POP3Message__@param message the POP3Message_@return the generated uid;protected String generatePop3Uid(Message message) {_        String uid = null___        _        StringBuilder buffer = new StringBuilder()__        try {_            Enumeration it = message.getAllHeaders()__            while (it.hasMoreElements()) {_                buffer.append(it.nextElement()).append("\n")__            }_            if (buffer.length() > 0) {_                uid = UUID.nameUUIDFromBytes(buffer.toString().getBytes()).toString()__            }_        } catch (MessagingException e) {_            LOG.warn("Cannot reader headers from mail message. This exception will be ignored.", e)__        }__        return uid__    };generates,an,uid,of,the,pop3message,param,message,the,pop3message,return,the,generated,uid;protected,string,generate,pop3uid,message,message,string,uid,null,string,builder,buffer,new,string,builder,try,enumeration,it,message,get,all,headers,while,it,has,more,elements,buffer,append,it,next,element,append,n,if,buffer,length,0,uid,uuid,name,uuidfrom,bytes,buffer,to,string,get,bytes,to,string,catch,messaging,exception,e,log,warn,cannot,reader,headers,from,mail,message,this,exception,will,be,ignored,e,return,uid
MailConsumer -> protected String generatePop3Uid(Message message);1309489350;Generates an UID of the POP3Message__@param message the POP3Message_@return the generated uid;protected String generatePop3Uid(Message message) {_        String uid = null___        _        StringBuilder buffer = new StringBuilder()__        try {_            Enumeration it = message.getAllHeaders()__            while (it.hasMoreElements()) {_                Header header = (Header) it.nextElement()__                buffer.append(header.getName())_                  .append("=")_                  .append(header.getValue())_                  .append("\n")__            }_            if (buffer.length() > 0) {_                LOG.debug("Generating UID from the following:\n" + buffer)__                uid = UUID.nameUUIDFromBytes(buffer.toString().getBytes()).toString()__            }_        } catch (MessagingException e) {_            LOG.warn("Cannot reader headers from mail message. This exception will be ignored.", e)__        }__        return uid__    };generates,an,uid,of,the,pop3message,param,message,the,pop3message,return,the,generated,uid;protected,string,generate,pop3uid,message,message,string,uid,null,string,builder,buffer,new,string,builder,try,enumeration,it,message,get,all,headers,while,it,has,more,elements,header,header,header,it,next,element,buffer,append,header,get,name,append,append,header,get,value,append,n,if,buffer,length,0,log,debug,generating,uid,from,the,following,n,buffer,uid,uuid,name,uuidfrom,bytes,buffer,to,string,get,bytes,to,string,catch,messaging,exception,e,log,warn,cannot,reader,headers,from,mail,message,this,exception,will,be,ignored,e,return,uid
MailConsumer -> protected String generatePop3Uid(Message message);1310115781;Generates an UID of the POP3Message__@param message the POP3Message_@return the generated uid;protected String generatePop3Uid(Message message) {_        String uid = null___        _        _        StringBuilder buffer = new StringBuilder()__        try {_            Enumeration it = message.getAllHeaders()__            while (it.hasMoreElements()) {_                Header header = (Header)it.nextElement()__                buffer.append(header.getName()).append("=").append(header.getValue()).append("\n")__            }_            if (buffer.length() > 0) {_                LOG.debug("Generating UID from the following:\n" + buffer)__                uid = UUID.nameUUIDFromBytes(buffer.toString().getBytes()).toString()__            }_        } catch (MessagingException e) {_            LOG.warn("Cannot reader headers from mail message. This exception will be ignored.", e)__        }__        return uid__    };generates,an,uid,of,the,pop3message,param,message,the,pop3message,return,the,generated,uid;protected,string,generate,pop3uid,message,message,string,uid,null,string,builder,buffer,new,string,builder,try,enumeration,it,message,get,all,headers,while,it,has,more,elements,header,header,header,it,next,element,buffer,append,header,get,name,append,append,header,get,value,append,n,if,buffer,length,0,log,debug,generating,uid,from,the,following,n,buffer,uid,uuid,name,uuidfrom,bytes,buffer,to,string,get,bytes,to,string,catch,messaging,exception,e,log,warn,cannot,reader,headers,from,mail,message,this,exception,will,be,ignored,e,return,uid
MailConsumer -> protected String generatePop3Uid(Message message);1319972091;Generates an UID of the POP3Message__@param message the POP3Message_@return the generated uid;protected String generatePop3Uid(Message message) {_        String uid = null___        _        _        StringBuilder buffer = new StringBuilder()__        try {_            Enumeration it = message.getAllHeaders()__            while (it.hasMoreElements()) {_                Header header = (Header)it.nextElement()__                buffer.append(header.getName()).append("=").append(header.getValue()).append("\n")__            }_            if (buffer.length() > 0) {_                LOG.trace("Generating UID from the following:\n {}", buffer)__                uid = UUID.nameUUIDFromBytes(buffer.toString().getBytes()).toString()__            }_        } catch (MessagingException e) {_            LOG.warn("Cannot reader headers from mail message. This exception will be ignored.", e)__        }__        return uid__    };generates,an,uid,of,the,pop3message,param,message,the,pop3message,return,the,generated,uid;protected,string,generate,pop3uid,message,message,string,uid,null,string,builder,buffer,new,string,builder,try,enumeration,it,message,get,all,headers,while,it,has,more,elements,header,header,header,it,next,element,buffer,append,header,get,name,append,append,header,get,value,append,n,if,buffer,length,0,log,trace,generating,uid,from,the,following,n,buffer,uid,uuid,name,uuidfrom,bytes,buffer,to,string,get,bytes,to,string,catch,messaging,exception,e,log,warn,cannot,reader,headers,from,mail,message,this,exception,will,be,ignored,e,return,uid
MailConsumer -> protected String generatePop3Uid(Message message);1320497173;Generates an UID of the POP3Message__@param message the POP3Message_@return the generated uid;protected String generatePop3Uid(Message message) {_        String uid = null___        _        _        StringBuilder buffer = new StringBuilder()__        try {_            Enumeration it = message.getAllHeaders()__            while (it.hasMoreElements()) {_                Header header = (Header)it.nextElement()__                buffer.append(header.getName()).append("=").append(header.getValue()).append("\n")__            }_            if (buffer.length() > 0) {_                LOG.trace("Generating UID from the following:\n {}", buffer)__                uid = UUID.nameUUIDFromBytes(buffer.toString().getBytes()).toString()__            }_        } catch (MessagingException e) {_            LOG.warn("Cannot reader headers from mail message. This exception will be ignored.", e)__        }__        return uid__    };generates,an,uid,of,the,pop3message,param,message,the,pop3message,return,the,generated,uid;protected,string,generate,pop3uid,message,message,string,uid,null,string,builder,buffer,new,string,builder,try,enumeration,it,message,get,all,headers,while,it,has,more,elements,header,header,header,it,next,element,buffer,append,header,get,name,append,append,header,get,value,append,n,if,buffer,length,0,log,trace,generating,uid,from,the,following,n,buffer,uid,uuid,name,uuidfrom,bytes,buffer,to,string,get,bytes,to,string,catch,messaging,exception,e,log,warn,cannot,reader,headers,from,mail,message,this,exception,will,be,ignored,e,return,uid
MailConsumer -> protected String generatePop3Uid(Message message);1322310120;Generates an UID of the POP3Message__@param message the POP3Message_@return the generated uid;protected String generatePop3Uid(Message message) {_        String uid = null___        _        _        StringBuilder buffer = new StringBuilder()__        try {_            Enumeration it = message.getAllHeaders()__            while (it.hasMoreElements()) {_                Header header = (Header)it.nextElement()__                buffer.append(header.getName()).append("=").append(header.getValue()).append("\n")__            }_            if (buffer.length() > 0) {_                LOG.trace("Generating UID from the following:\n {}", buffer)__                uid = UUID.nameUUIDFromBytes(buffer.toString().getBytes()).toString()__            }_        } catch (MessagingException e) {_            LOG.warn("Cannot reader headers from mail message. This exception will be ignored.", e)__        }__        return uid__    };generates,an,uid,of,the,pop3message,param,message,the,pop3message,return,the,generated,uid;protected,string,generate,pop3uid,message,message,string,uid,null,string,builder,buffer,new,string,builder,try,enumeration,it,message,get,all,headers,while,it,has,more,elements,header,header,header,it,next,element,buffer,append,header,get,name,append,append,header,get,value,append,n,if,buffer,length,0,log,trace,generating,uid,from,the,following,n,buffer,uid,uuid,name,uuidfrom,bytes,buffer,to,string,get,bytes,to,string,catch,messaging,exception,e,log,warn,cannot,reader,headers,from,mail,message,this,exception,will,be,ignored,e,return,uid
MailConsumer -> protected String generatePop3Uid(Message message);1326499990;Generates an UID of the POP3Message__@param message the POP3Message_@return the generated uid;protected String generatePop3Uid(Message message) {_        String uid = null___        _        _        StringBuilder buffer = new StringBuilder()__        try {_            Enumeration<?> it = message.getAllHeaders()__            while (it.hasMoreElements()) {_                Header header = (Header)it.nextElement()__                buffer.append(header.getName()).append("=").append(header.getValue()).append("\n")__            }_            if (buffer.length() > 0) {_                LOG.trace("Generating UID from the following:\n {}", buffer)__                uid = UUID.nameUUIDFromBytes(buffer.toString().getBytes()).toString()__            }_        } catch (MessagingException e) {_            LOG.warn("Cannot reader headers from mail message. This exception will be ignored.", e)__        }__        return uid__    };generates,an,uid,of,the,pop3message,param,message,the,pop3message,return,the,generated,uid;protected,string,generate,pop3uid,message,message,string,uid,null,string,builder,buffer,new,string,builder,try,enumeration,it,message,get,all,headers,while,it,has,more,elements,header,header,header,it,next,element,buffer,append,header,get,name,append,append,header,get,value,append,n,if,buffer,length,0,log,trace,generating,uid,from,the,following,n,buffer,uid,uuid,name,uuidfrom,bytes,buffer,to,string,get,bytes,to,string,catch,messaging,exception,e,log,warn,cannot,reader,headers,from,mail,message,this,exception,will,be,ignored,e,return,uid
MailConsumer -> protected String generatePop3Uid(Message message);1326561926;Generates an UID of the POP3Message__@param message the POP3Message_@return the generated uid;protected String generatePop3Uid(Message message) {_        String uid = null___        _        _        StringBuilder buffer = new StringBuilder()__        try {_            Enumeration<?> it = message.getAllHeaders()__            while (it.hasMoreElements()) {_                Header header = (Header)it.nextElement()__                buffer.append(header.getName()).append("=").append(header.getValue()).append("\n")__            }_            if (buffer.length() > 0) {_                LOG.trace("Generating UID from the following:\n {}", buffer)__                uid = UUID.nameUUIDFromBytes(buffer.toString().getBytes()).toString()__            }_        } catch (MessagingException e) {_            LOG.warn("Cannot reader headers from mail message. This exception will be ignored.", e)__        }__        return uid__    };generates,an,uid,of,the,pop3message,param,message,the,pop3message,return,the,generated,uid;protected,string,generate,pop3uid,message,message,string,uid,null,string,builder,buffer,new,string,builder,try,enumeration,it,message,get,all,headers,while,it,has,more,elements,header,header,header,it,next,element,buffer,append,header,get,name,append,append,header,get,value,append,n,if,buffer,length,0,log,trace,generating,uid,from,the,following,n,buffer,uid,uuid,name,uuidfrom,bytes,buffer,to,string,get,bytes,to,string,catch,messaging,exception,e,log,warn,cannot,reader,headers,from,mail,message,this,exception,will,be,ignored,e,return,uid
MailConsumer -> protected String generatePop3Uid(Message message);1337525537;Generates an UID of the POP3Message__@param message the POP3Message_@return the generated uid;protected String generatePop3Uid(Message message) {_        String uid = null___        _        _        StringBuilder buffer = new StringBuilder()__        try {_            Enumeration<?> it = message.getAllHeaders()__            while (it.hasMoreElements()) {_                Header header = (Header)it.nextElement()__                buffer.append(header.getName()).append("=").append(header.getValue()).append("\n")__            }_            if (buffer.length() > 0) {_                LOG.trace("Generating UID from the following:\n {}", buffer)__                uid = UUID.nameUUIDFromBytes(buffer.toString().getBytes()).toString()__            }_        } catch (MessagingException e) {_            LOG.warn("Cannot reader headers from mail message. This exception will be ignored.", e)__        }__        return uid__    };generates,an,uid,of,the,pop3message,param,message,the,pop3message,return,the,generated,uid;protected,string,generate,pop3uid,message,message,string,uid,null,string,builder,buffer,new,string,builder,try,enumeration,it,message,get,all,headers,while,it,has,more,elements,header,header,header,it,next,element,buffer,append,header,get,name,append,append,header,get,value,append,n,if,buffer,length,0,log,trace,generating,uid,from,the,following,n,buffer,uid,uuid,name,uuidfrom,bytes,buffer,to,string,get,bytes,to,string,catch,messaging,exception,e,log,warn,cannot,reader,headers,from,mail,message,this,exception,will,be,ignored,e,return,uid
MailConsumer -> protected String generatePop3Uid(Message message);1352827558;Generates an UID of the POP3Message__@param message the POP3Message_@return the generated uid;protected String generatePop3Uid(Message message) {_        String uid = null___        _        _        StringBuilder buffer = new StringBuilder()__        try {_            Enumeration<?> it = message.getAllHeaders()__            while (it.hasMoreElements()) {_                Header header = (Header)it.nextElement()__                buffer.append(header.getName()).append("=").append(header.getValue()).append("\n")__            }_            if (buffer.length() > 0) {_                LOG.trace("Generating UID from the following:\n {}", buffer)__                uid = UUID.nameUUIDFromBytes(buffer.toString().getBytes()).toString()__            }_        } catch (MessagingException e) {_            LOG.warn("Cannot reader headers from mail message. This exception will be ignored.", e)__        }__        return uid__    };generates,an,uid,of,the,pop3message,param,message,the,pop3message,return,the,generated,uid;protected,string,generate,pop3uid,message,message,string,uid,null,string,builder,buffer,new,string,builder,try,enumeration,it,message,get,all,headers,while,it,has,more,elements,header,header,header,it,next,element,buffer,append,header,get,name,append,append,header,get,value,append,n,if,buffer,length,0,log,trace,generating,uid,from,the,following,n,buffer,uid,uuid,name,uuidfrom,bytes,buffer,to,string,get,bytes,to,string,catch,messaging,exception,e,log,warn,cannot,reader,headers,from,mail,message,this,exception,will,be,ignored,e,return,uid
MailConsumer -> protected String generatePop3Uid(Message message);1354318669;Generates an UID of the POP3Message__@param message the POP3Message_@return the generated uid;protected String generatePop3Uid(Message message) {_        String uid = null___        _        _        StringBuilder buffer = new StringBuilder()__        try {_            Enumeration<?> it = message.getAllHeaders()__            while (it.hasMoreElements()) {_                Header header = (Header)it.nextElement()__                buffer.append(header.getName()).append("=").append(header.getValue()).append("\n")__            }_            if (buffer.length() > 0) {_                LOG.trace("Generating UID from the following:\n {}", buffer)__                uid = UUID.nameUUIDFromBytes(buffer.toString().getBytes()).toString()__            }_        } catch (MessagingException e) {_            LOG.warn("Cannot reader headers from mail message. This exception will be ignored.", e)__        }__        return uid__    };generates,an,uid,of,the,pop3message,param,message,the,pop3message,return,the,generated,uid;protected,string,generate,pop3uid,message,message,string,uid,null,string,builder,buffer,new,string,builder,try,enumeration,it,message,get,all,headers,while,it,has,more,elements,header,header,header,it,next,element,buffer,append,header,get,name,append,append,header,get,value,append,n,if,buffer,length,0,log,trace,generating,uid,from,the,following,n,buffer,uid,uuid,name,uuidfrom,bytes,buffer,to,string,get,bytes,to,string,catch,messaging,exception,e,log,warn,cannot,reader,headers,from,mail,message,this,exception,will,be,ignored,e,return,uid
MailConsumer -> protected String generatePop3Uid(Message message);1359885305;Generates an UID of the POP3Message__@param message the POP3Message_@return the generated uid;protected String generatePop3Uid(Message message) {_        String uid = null___        _        _        StringBuilder buffer = new StringBuilder()__        try {_            Enumeration<?> it = message.getAllHeaders()__            while (it.hasMoreElements()) {_                Header header = (Header)it.nextElement()__                buffer.append(header.getName()).append("=").append(header.getValue()).append("\n")__            }_            if (buffer.length() > 0) {_                LOG.trace("Generating UID from the following:\n {}", buffer)__                uid = UUID.nameUUIDFromBytes(buffer.toString().getBytes()).toString()__            }_        } catch (MessagingException e) {_            LOG.warn("Cannot reader headers from mail message. This exception will be ignored.", e)__        }__        return uid__    };generates,an,uid,of,the,pop3message,param,message,the,pop3message,return,the,generated,uid;protected,string,generate,pop3uid,message,message,string,uid,null,string,builder,buffer,new,string,builder,try,enumeration,it,message,get,all,headers,while,it,has,more,elements,header,header,header,it,next,element,buffer,append,header,get,name,append,append,header,get,value,append,n,if,buffer,length,0,log,trace,generating,uid,from,the,following,n,buffer,uid,uuid,name,uuidfrom,bytes,buffer,to,string,get,bytes,to,string,catch,messaging,exception,e,log,warn,cannot,reader,headers,from,mail,message,this,exception,will,be,ignored,e,return,uid
MailConsumer -> protected String generatePop3Uid(Message message);1363874390;Generates an UID of the POP3Message__@param message the POP3Message_@return the generated uid;protected String generatePop3Uid(Message message) {_        String uid = null___        _        _        StringBuilder buffer = new StringBuilder()__        try {_            Enumeration<?> it = message.getAllHeaders()__            while (it.hasMoreElements()) {_                Header header = (Header)it.nextElement()__                buffer.append(header.getName()).append("=").append(header.getValue()).append("\n")__            }_            if (buffer.length() > 0) {_                LOG.trace("Generating UID from the following:\n {}", buffer)__                uid = UUID.nameUUIDFromBytes(buffer.toString().getBytes()).toString()__            }_        } catch (MessagingException e) {_            LOG.warn("Cannot reader headers from mail message. This exception will be ignored.", e)__        }__        return uid__    };generates,an,uid,of,the,pop3message,param,message,the,pop3message,return,the,generated,uid;protected,string,generate,pop3uid,message,message,string,uid,null,string,builder,buffer,new,string,builder,try,enumeration,it,message,get,all,headers,while,it,has,more,elements,header,header,header,it,next,element,buffer,append,header,get,name,append,append,header,get,value,append,n,if,buffer,length,0,log,trace,generating,uid,from,the,following,n,buffer,uid,uuid,name,uuidfrom,bytes,buffer,to,string,get,bytes,to,string,catch,messaging,exception,e,log,warn,cannot,reader,headers,from,mail,message,this,exception,will,be,ignored,e,return,uid
MailConsumer -> protected String generatePop3Uid(Message message);1376549254;Generates an UID of the POP3Message__@param message the POP3Message_@return the generated uid;protected String generatePop3Uid(Message message) {_        String uid = null___        _        _        StringBuilder buffer = new StringBuilder()__        try {_            Enumeration<?> it = message.getAllHeaders()__            while (it.hasMoreElements()) {_                Header header = (Header)it.nextElement()__                buffer.append(header.getName()).append("=").append(header.getValue()).append("\n")__            }_            if (buffer.length() > 0) {_                LOG.trace("Generating UID from the following:\n {}", buffer)__                uid = UUID.nameUUIDFromBytes(buffer.toString().getBytes()).toString()__            }_        } catch (MessagingException e) {_            LOG.warn("Cannot reader headers from mail message. This exception will be ignored.", e)__        }__        return uid__    };generates,an,uid,of,the,pop3message,param,message,the,pop3message,return,the,generated,uid;protected,string,generate,pop3uid,message,message,string,uid,null,string,builder,buffer,new,string,builder,try,enumeration,it,message,get,all,headers,while,it,has,more,elements,header,header,header,it,next,element,buffer,append,header,get,name,append,append,header,get,value,append,n,if,buffer,length,0,log,trace,generating,uid,from,the,following,n,buffer,uid,uuid,name,uuidfrom,bytes,buffer,to,string,get,bytes,to,string,catch,messaging,exception,e,log,warn,cannot,reader,headers,from,mail,message,this,exception,will,be,ignored,e,return,uid
MailConsumer -> protected String generatePop3Uid(Message message);1377540098;Generates an UID of the POP3Message__@param message the POP3Message_@return the generated uid;protected String generatePop3Uid(Message message) {_        String uid = null___        _        _        StringBuilder buffer = new StringBuilder()__        try {_            Enumeration<?> it = message.getAllHeaders()__            while (it.hasMoreElements()) {_                Header header = (Header)it.nextElement()__                buffer.append(header.getName()).append("=").append(header.getValue()).append("\n")__            }_            if (buffer.length() > 0) {_                LOG.trace("Generating UID from the following:\n {}", buffer)__                uid = UUID.nameUUIDFromBytes(buffer.toString().getBytes()).toString()__            }_        } catch (MessagingException e) {_            LOG.warn("Cannot reader headers from mail message. This exception will be ignored.", e)__        }__        return uid__    };generates,an,uid,of,the,pop3message,param,message,the,pop3message,return,the,generated,uid;protected,string,generate,pop3uid,message,message,string,uid,null,string,builder,buffer,new,string,builder,try,enumeration,it,message,get,all,headers,while,it,has,more,elements,header,header,header,it,next,element,buffer,append,header,get,name,append,append,header,get,value,append,n,if,buffer,length,0,log,trace,generating,uid,from,the,following,n,buffer,uid,uuid,name,uuidfrom,bytes,buffer,to,string,get,bytes,to,string,catch,messaging,exception,e,log,warn,cannot,reader,headers,from,mail,message,this,exception,will,be,ignored,e,return,uid
MailConsumer -> protected String generatePop3Uid(Message message);1382796372;Generates an UID of the POP3Message__@param message the POP3Message_@return the generated uid;protected String generatePop3Uid(Message message) {_        String uid = null___        _        _        StringBuilder buffer = new StringBuilder()__        try {_            Enumeration<?> it = message.getAllHeaders()__            while (it.hasMoreElements()) {_                Header header = (Header)it.nextElement()__                buffer.append(header.getName()).append("=").append(header.getValue()).append("\n")__            }_            if (buffer.length() > 0) {_                LOG.trace("Generating UID from the following:\n {}", buffer)__                uid = UUID.nameUUIDFromBytes(buffer.toString().getBytes()).toString()__            }_        } catch (MessagingException e) {_            LOG.warn("Cannot reader headers from mail message. This exception will be ignored.", e)__        }__        return uid__    };generates,an,uid,of,the,pop3message,param,message,the,pop3message,return,the,generated,uid;protected,string,generate,pop3uid,message,message,string,uid,null,string,builder,buffer,new,string,builder,try,enumeration,it,message,get,all,headers,while,it,has,more,elements,header,header,header,it,next,element,buffer,append,header,get,name,append,append,header,get,value,append,n,if,buffer,length,0,log,trace,generating,uid,from,the,following,n,buffer,uid,uuid,name,uuidfrom,bytes,buffer,to,string,get,bytes,to,string,catch,messaging,exception,e,log,warn,cannot,reader,headers,from,mail,message,this,exception,will,be,ignored,e,return,uid
MailConsumer -> protected String generatePop3Uid(Message message);1395076208;Generates an UID of the POP3Message__@param message the POP3Message_@return the generated uid;protected String generatePop3Uid(Message message) {_        String uid = null___        _        _        StringBuilder buffer = new StringBuilder()__        try {_            Enumeration<?> it = message.getAllHeaders()__            while (it.hasMoreElements()) {_                Header header = (Header)it.nextElement()__                buffer.append(header.getName()).append("=").append(header.getValue()).append("\n")__            }_            if (buffer.length() > 0) {_                LOG.trace("Generating UID from the following:\n {}", buffer)__                uid = UUID.nameUUIDFromBytes(buffer.toString().getBytes()).toString()__            }_        } catch (MessagingException e) {_            LOG.warn("Cannot reader headers from mail message. This exception will be ignored.", e)__        }__        return uid__    };generates,an,uid,of,the,pop3message,param,message,the,pop3message,return,the,generated,uid;protected,string,generate,pop3uid,message,message,string,uid,null,string,builder,buffer,new,string,builder,try,enumeration,it,message,get,all,headers,while,it,has,more,elements,header,header,header,it,next,element,buffer,append,header,get,name,append,append,header,get,value,append,n,if,buffer,length,0,log,trace,generating,uid,from,the,following,n,buffer,uid,uuid,name,uuidfrom,bytes,buffer,to,string,get,bytes,to,string,catch,messaging,exception,e,log,warn,cannot,reader,headers,from,mail,message,this,exception,will,be,ignored,e,return,uid
MailConsumer -> protected String generatePop3Uid(Message message);1415211488;Generates an UID of the POP3Message__@param message the POP3Message_@return the generated uid;protected String generatePop3Uid(Message message) {_        String uid = null___        _        _        StringBuilder buffer = new StringBuilder()__        try {_            Enumeration<?> it = message.getAllHeaders()__            while (it.hasMoreElements()) {_                Header header = (Header)it.nextElement()__                buffer.append(header.getName()).append("=").append(header.getValue()).append("\n")__            }_            if (buffer.length() > 0) {_                LOG.trace("Generating UID from the following:\n {}", buffer)__                uid = UUID.nameUUIDFromBytes(buffer.toString().getBytes()).toString()__            }_        } catch (MessagingException e) {_            LOG.warn("Cannot reader headers from mail message. This exception will be ignored.", e)__        }__        return uid__    };generates,an,uid,of,the,pop3message,param,message,the,pop3message,return,the,generated,uid;protected,string,generate,pop3uid,message,message,string,uid,null,string,builder,buffer,new,string,builder,try,enumeration,it,message,get,all,headers,while,it,has,more,elements,header,header,header,it,next,element,buffer,append,header,get,name,append,append,header,get,value,append,n,if,buffer,length,0,log,trace,generating,uid,from,the,following,n,buffer,uid,uuid,name,uuidfrom,bytes,buffer,to,string,get,bytes,to,string,catch,messaging,exception,e,log,warn,cannot,reader,headers,from,mail,message,this,exception,will,be,ignored,e,return,uid
MailConsumer -> protected String generatePop3Uid(Message message);1427090237;Generates an UID of the POP3Message__@param message the POP3Message_@return the generated uid;protected String generatePop3Uid(Message message) {_        String uid = null___        _        _        StringBuilder buffer = new StringBuilder()__        try {_            Enumeration<?> it = message.getAllHeaders()__            while (it.hasMoreElements()) {_                Header header = (Header)it.nextElement()__                buffer.append(header.getName()).append("=").append(header.getValue()).append("\n")__            }_            if (buffer.length() > 0) {_                LOG.trace("Generating UID from the following:\n {}", buffer)__                uid = UUID.nameUUIDFromBytes(buffer.toString().getBytes()).toString()__            }_        } catch (MessagingException e) {_            LOG.warn("Cannot reader headers from mail message. This exception will be ignored.", e)__        }__        return uid__    };generates,an,uid,of,the,pop3message,param,message,the,pop3message,return,the,generated,uid;protected,string,generate,pop3uid,message,message,string,uid,null,string,builder,buffer,new,string,builder,try,enumeration,it,message,get,all,headers,while,it,has,more,elements,header,header,header,it,next,element,buffer,append,header,get,name,append,append,header,get,value,append,n,if,buffer,length,0,log,trace,generating,uid,from,the,following,n,buffer,uid,uuid,name,uuidfrom,bytes,buffer,to,string,get,bytes,to,string,catch,messaging,exception,e,log,warn,cannot,reader,headers,from,mail,message,this,exception,will,be,ignored,e,return,uid
MailConsumer -> protected String generatePop3Uid(Message message);1452351081;Generates an UID of the POP3Message__@param message the POP3Message_@return the generated uid;protected String generatePop3Uid(Message message) {_        String uid = null___        _        _        StringBuilder buffer = new StringBuilder()__        try {_            Enumeration<?> it = message.getAllHeaders()__            while (it.hasMoreElements()) {_                Header header = (Header)it.nextElement()__                buffer.append(header.getName()).append("=").append(header.getValue()).append("\n")__            }_            if (buffer.length() > 0) {_                LOG.trace("Generating UID from the following:\n {}", buffer)__                uid = UUID.nameUUIDFromBytes(buffer.toString().getBytes()).toString()__            }_        } catch (MessagingException e) {_            LOG.warn("Cannot reader headers from mail message. This exception will be ignored.", e)__        }__        return uid__    };generates,an,uid,of,the,pop3message,param,message,the,pop3message,return,the,generated,uid;protected,string,generate,pop3uid,message,message,string,uid,null,string,builder,buffer,new,string,builder,try,enumeration,it,message,get,all,headers,while,it,has,more,elements,header,header,header,it,next,element,buffer,append,header,get,name,append,append,header,get,value,append,n,if,buffer,length,0,log,trace,generating,uid,from,the,following,n,buffer,uid,uuid,name,uuidfrom,bytes,buffer,to,string,get,bytes,to,string,catch,messaging,exception,e,log,warn,cannot,reader,headers,from,mail,message,this,exception,will,be,ignored,e,return,uid
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1245903785;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: " + MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1257837548;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: " + MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1258003617;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: " + MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1259234335;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: " + MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1261839486;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: " + MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1262930031;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: " + MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1280483130;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: " + MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1290627379;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: " + MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1294095454;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: " + MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1294920065;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: " + MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1296546062;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: " + MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1297975937;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: " + MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1303938483;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: " + MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1307685726;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1309171908;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1309489350;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1310115781;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1319972091;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1320497173;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1322310120;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1326499990;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1326561926;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1337525537;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1352827558;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1354318669;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1359885305;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1363874390;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1376549254;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1377540098;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1382796372;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1395076208;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1415211488;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1427090237;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1452351081;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1455967322;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1455967322;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1466273350;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1471881865;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1471881865;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1480079644;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1517865522;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1524063106;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1536517284;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1536687142;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1536701701;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1537204343;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (LOG.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            LOG.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1540108160;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (log.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            log.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1540108163;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (log.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            log.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> protected void processExchange(Exchange exchange) throws Exception;1548317877;Strategy to process the mail message.;protected void processExchange(Exchange exchange) throws Exception {_        if (log.isDebugEnabled()) {_            MailMessage msg = (MailMessage) exchange.getIn()__            log.debug("Processing message: {}", MailUtils.dumpMessage(msg.getMessage()))__        }_        getProcessor().process(exchange)__    };strategy,to,process,the,mail,message;protected,void,process,exchange,exchange,exchange,throws,exception,if,log,is,debug,enabled,mail,message,msg,mail,message,exchange,get,in,log,debug,processing,message,mail,utils,dump,message,msg,get,message,get,processor,process,exchange
MailConsumer -> private SearchTerm computeSearchTerm();1415211488;@return Search term from endpoint (including "seen" check) or null if there is no search term;private SearchTerm computeSearchTerm() {_        if (getEndpoint().getSearchTerm() != null) {_            return getEndpoint().getSearchTerm()__        } else if (getEndpoint().getConfiguration().isUnseen()) {_            return new SearchTermBuilder().unseen().build()__        }_        return null__    };return,search,term,from,endpoint,including,seen,check,or,null,if,there,is,no,search,term;private,search,term,compute,search,term,if,get,endpoint,get,search,term,null,return,get,endpoint,get,search,term,else,if,get,endpoint,get,configuration,is,unseen,return,new,search,term,builder,unseen,build,return,null
MailConsumer -> private SearchTerm computeSearchTerm();1427090237;@return Search term from endpoint (including "seen" check) or null if there is no search term;private SearchTerm computeSearchTerm() {_        if (getEndpoint().getSearchTerm() != null) {_            return getEndpoint().getSearchTerm()__        } else if (getEndpoint().getConfiguration().isUnseen()) {_            return new SearchTermBuilder().unseen().build()__        }_        return null__    };return,search,term,from,endpoint,including,seen,check,or,null,if,there,is,no,search,term;private,search,term,compute,search,term,if,get,endpoint,get,search,term,null,return,get,endpoint,get,search,term,else,if,get,endpoint,get,configuration,is,unseen,return,new,search,term,builder,unseen,build,return,null
MailConsumer -> private SearchTerm computeSearchTerm();1452351081;@return Search term from endpoint (including "seen" check) or null if there is no search term;private SearchTerm computeSearchTerm() {_        if (getEndpoint().getSearchTerm() != null) {_            return getEndpoint().getSearchTerm()__        } else if (getEndpoint().getConfiguration().isUnseen()) {_            return new SearchTermBuilder().unseen().build()__        }_        return null__    };return,search,term,from,endpoint,including,seen,check,or,null,if,there,is,no,search,term;private,search,term,compute,search,term,if,get,endpoint,get,search,term,null,return,get,endpoint,get,search,term,else,if,get,endpoint,get,configuration,is,unseen,return,new,search,term,builder,unseen,build,return,null
MailConsumer -> private SearchTerm computeSearchTerm();1455967322;@return Search term from endpoint (including "seen" check) or null if there is no search term;private SearchTerm computeSearchTerm() {_        if (getEndpoint().getSearchTerm() != null) {_            return getEndpoint().getSearchTerm()__        } else if (getEndpoint().getConfiguration().isUnseen()) {_            return new SearchTermBuilder().unseen().build()__        }_        return null__    };return,search,term,from,endpoint,including,seen,check,or,null,if,there,is,no,search,term;private,search,term,compute,search,term,if,get,endpoint,get,search,term,null,return,get,endpoint,get,search,term,else,if,get,endpoint,get,configuration,is,unseen,return,new,search,term,builder,unseen,build,return,null
MailConsumer -> private SearchTerm computeSearchTerm();1455967322;@return Search term from endpoint (including "seen" check) or null if there is no search term;private SearchTerm computeSearchTerm() {_        if (getEndpoint().getSearchTerm() != null) {_            return getEndpoint().getSearchTerm()__        } else if (getEndpoint().getConfiguration().isUnseen()) {_            return new SearchTermBuilder().unseen().build()__        }_        return null__    };return,search,term,from,endpoint,including,seen,check,or,null,if,there,is,no,search,term;private,search,term,compute,search,term,if,get,endpoint,get,search,term,null,return,get,endpoint,get,search,term,else,if,get,endpoint,get,configuration,is,unseen,return,new,search,term,builder,unseen,build,return,null
MailConsumer -> private SearchTerm computeSearchTerm();1466273350;@return Search term from endpoint (including "seen" check) or null if there is no search term;private SearchTerm computeSearchTerm() {_        if (getEndpoint().getSearchTerm() != null) {_            return getEndpoint().getSearchTerm()__        } else if (getEndpoint().getConfiguration().isUnseen()) {_            return new SearchTermBuilder().unseen().build()__        }_        return null__    };return,search,term,from,endpoint,including,seen,check,or,null,if,there,is,no,search,term;private,search,term,compute,search,term,if,get,endpoint,get,search,term,null,return,get,endpoint,get,search,term,else,if,get,endpoint,get,configuration,is,unseen,return,new,search,term,builder,unseen,build,return,null
MailConsumer -> private SearchTerm computeSearchTerm();1471881865;@return Search term from endpoint (including "seen" check) or null if there is no search term;private SearchTerm computeSearchTerm() {_        if (getEndpoint().getSearchTerm() != null) {_            return getEndpoint().getSearchTerm()__        } else if (getEndpoint().getConfiguration().isUnseen()) {_            return new SearchTermBuilder().unseen().build()__        }_        return null__    };return,search,term,from,endpoint,including,seen,check,or,null,if,there,is,no,search,term;private,search,term,compute,search,term,if,get,endpoint,get,search,term,null,return,get,endpoint,get,search,term,else,if,get,endpoint,get,configuration,is,unseen,return,new,search,term,builder,unseen,build,return,null
MailConsumer -> private SearchTerm computeSearchTerm();1471881865;@return Search term from endpoint (including "seen" check) or null if there is no search term;private SearchTerm computeSearchTerm() {_        if (getEndpoint().getSearchTerm() != null) {_            return getEndpoint().getSearchTerm()__        } else if (getEndpoint().getConfiguration().isUnseen()) {_            return new SearchTermBuilder().unseen().build()__        }_        return null__    };return,search,term,from,endpoint,including,seen,check,or,null,if,there,is,no,search,term;private,search,term,compute,search,term,if,get,endpoint,get,search,term,null,return,get,endpoint,get,search,term,else,if,get,endpoint,get,configuration,is,unseen,return,new,search,term,builder,unseen,build,return,null
MailConsumer -> private SearchTerm computeSearchTerm();1480079644;@return Search term from endpoint (including "seen" check) or null if there is no search term;private SearchTerm computeSearchTerm() {_        if (getEndpoint().getSearchTerm() != null) {_            return getEndpoint().getSearchTerm()__        } else if (getEndpoint().getConfiguration().isUnseen()) {_            return new SearchTermBuilder().unseen().build()__        }_        return null__    };return,search,term,from,endpoint,including,seen,check,or,null,if,there,is,no,search,term;private,search,term,compute,search,term,if,get,endpoint,get,search,term,null,return,get,endpoint,get,search,term,else,if,get,endpoint,get,configuration,is,unseen,return,new,search,term,builder,unseen,build,return,null
MailConsumer -> private SearchTerm computeSearchTerm();1517865522;@return Search term from endpoint (including "seen" check) or null if there is no search term;private SearchTerm computeSearchTerm() {_        if (getEndpoint().getSearchTerm() != null) {_            return getEndpoint().getSearchTerm()__        } else if (getEndpoint().getConfiguration().isUnseen()) {_            return new SearchTermBuilder().unseen().build()__        }_        return null__    };return,search,term,from,endpoint,including,seen,check,or,null,if,there,is,no,search,term;private,search,term,compute,search,term,if,get,endpoint,get,search,term,null,return,get,endpoint,get,search,term,else,if,get,endpoint,get,configuration,is,unseen,return,new,search,term,builder,unseen,build,return,null
MailConsumer -> private SearchTerm computeSearchTerm();1524063106;@return Search term from endpoint (including "seen" check) or null if there is no search term;private SearchTerm computeSearchTerm() {_        if (getEndpoint().getSearchTerm() != null) {_            return getEndpoint().getSearchTerm()__        } else if (getEndpoint().getConfiguration().isUnseen()) {_            return new SearchTermBuilder().unseen().build()__        }_        return null__    };return,search,term,from,endpoint,including,seen,check,or,null,if,there,is,no,search,term;private,search,term,compute,search,term,if,get,endpoint,get,search,term,null,return,get,endpoint,get,search,term,else,if,get,endpoint,get,configuration,is,unseen,return,new,search,term,builder,unseen,build,return,null
MailConsumer -> private SearchTerm computeSearchTerm();1536517284;@return Search term from endpoint (including "seen" check) or null if there is no search term;private SearchTerm computeSearchTerm() {_        if (getEndpoint().getSearchTerm() != null) {_            return getEndpoint().getSearchTerm()__        } else if (getEndpoint().getConfiguration().isUnseen()) {_            return new SearchTermBuilder().unseen().build()__        }_        return null__    };return,search,term,from,endpoint,including,seen,check,or,null,if,there,is,no,search,term;private,search,term,compute,search,term,if,get,endpoint,get,search,term,null,return,get,endpoint,get,search,term,else,if,get,endpoint,get,configuration,is,unseen,return,new,search,term,builder,unseen,build,return,null
MailConsumer -> private SearchTerm computeSearchTerm();1536687142;@return Search term from endpoint (including "seen" check) or null if there is no search term;private SearchTerm computeSearchTerm() {_        if (getEndpoint().getSearchTerm() != null) {_            return getEndpoint().getSearchTerm()__        } else if (getEndpoint().getConfiguration().isUnseen()) {_            return new SearchTermBuilder().unseen().build()__        }_        return null__    };return,search,term,from,endpoint,including,seen,check,or,null,if,there,is,no,search,term;private,search,term,compute,search,term,if,get,endpoint,get,search,term,null,return,get,endpoint,get,search,term,else,if,get,endpoint,get,configuration,is,unseen,return,new,search,term,builder,unseen,build,return,null
MailConsumer -> private SearchTerm computeSearchTerm();1536701701;@return Search term from endpoint (including "seen" check) or null if there is no search term;private SearchTerm computeSearchTerm() {_        if (getEndpoint().getSearchTerm() != null) {_            return getEndpoint().getSearchTerm()__        } else if (getEndpoint().getConfiguration().isUnseen()) {_            return new SearchTermBuilder().unseen().build()__        }_        return null__    };return,search,term,from,endpoint,including,seen,check,or,null,if,there,is,no,search,term;private,search,term,compute,search,term,if,get,endpoint,get,search,term,null,return,get,endpoint,get,search,term,else,if,get,endpoint,get,configuration,is,unseen,return,new,search,term,builder,unseen,build,return,null
MailConsumer -> private SearchTerm computeSearchTerm();1537204343;@return Search term from endpoint (including "seen" check) or null if there is no search term;private SearchTerm computeSearchTerm() {_        if (getEndpoint().getSearchTerm() != null) {_            return getEndpoint().getSearchTerm()__        } else if (getEndpoint().getConfiguration().isUnseen()) {_            return new SearchTermBuilder().unseen().build()__        }_        return null__    };return,search,term,from,endpoint,including,seen,check,or,null,if,there,is,no,search,term;private,search,term,compute,search,term,if,get,endpoint,get,search,term,null,return,get,endpoint,get,search,term,else,if,get,endpoint,get,configuration,is,unseen,return,new,search,term,builder,unseen,build,return,null
MailConsumer -> private SearchTerm computeSearchTerm();1540108160;@return Search term from endpoint (including "seen" check) or null if there is no search term;private SearchTerm computeSearchTerm() {_        if (getEndpoint().getSearchTerm() != null) {_            return getEndpoint().getSearchTerm()__        } else if (getEndpoint().getConfiguration().isUnseen()) {_            return new SearchTermBuilder().unseen().build()__        }_        return null__    };return,search,term,from,endpoint,including,seen,check,or,null,if,there,is,no,search,term;private,search,term,compute,search,term,if,get,endpoint,get,search,term,null,return,get,endpoint,get,search,term,else,if,get,endpoint,get,configuration,is,unseen,return,new,search,term,builder,unseen,build,return,null
MailConsumer -> private SearchTerm computeSearchTerm();1540108163;@return Search term from endpoint (including "seen" check) or null if there is no search term;private SearchTerm computeSearchTerm() {_        if (getEndpoint().getSearchTerm() != null) {_            return getEndpoint().getSearchTerm()__        } else if (getEndpoint().getConfiguration().isUnseen()) {_            return new SearchTermBuilder().unseen().build()__        }_        return null__    };return,search,term,from,endpoint,including,seen,check,or,null,if,there,is,no,search,term;private,search,term,compute,search,term,if,get,endpoint,get,search,term,null,return,get,endpoint,get,search,term,else,if,get,endpoint,get,configuration,is,unseen,return,new,search,term,builder,unseen,build,return,null
MailConsumer -> private SearchTerm computeSearchTerm();1548317877;@return Search term from endpoint (including "seen" check) or null if there is no search term;private SearchTerm computeSearchTerm() {_        if (getEndpoint().getSearchTerm() != null) {_            return getEndpoint().getSearchTerm()__        } else if (getEndpoint().getConfiguration().isUnseen()) {_            return new SearchTermBuilder().unseen().build()__        }_        return null__    };return,search,term,from,endpoint,including,seen,check,or,null,if,there,is,no,search,term;private,search,term,compute,search,term,if,get,endpoint,get,search,term,null,return,get,endpoint,get,search,term,else,if,get,endpoint,get,configuration,is,unseen,return,new,search,term,builder,unseen,build,return,null
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1280483130;Strategy when processing the exchange failed.__@param mail the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1290627379;Strategy when processing the exchange failed.__@param mail the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1294095454;Strategy when processing the exchange failed.__@param mail the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1294920065;Strategy when processing the exchange failed.__@param mail the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1296546062;Strategy when processing the exchange failed.__@param mail the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1297975937;Strategy when processing the exchange failed.__@param mail the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1303938483;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1307685726;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1309171908;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1309489350;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1310115781;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1319972091;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1320497173;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1322310120;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1326499990;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1326561926;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1337525537;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1352827558;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1354318669;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1359885305;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1363874390;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1376549254;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1377540098;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1382796372;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1395076208;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1415211488;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1427090237;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1452351081;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {_        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1455967322;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {__        String uid = (String) exchange.removeProperty(MAIL_MESSAGE_UID)___        _        if (getEndpoint().getIdempotentRepository() != null) {_            getEndpoint().getIdempotentRepository().remove(uid)__        }__        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,string,uid,string,exchange,remove,property,if,get,endpoint,get,idempotent,repository,null,get,endpoint,get,idempotent,repository,remove,uid,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1455967322;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {__        String uid = (String) exchange.removeProperty(MAIL_MESSAGE_UID)___        _        if (getEndpoint().getIdempotentRepository() != null) {_            getEndpoint().getIdempotentRepository().remove(uid)__        }__        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,string,uid,string,exchange,remove,property,if,get,endpoint,get,idempotent,repository,null,get,endpoint,get,idempotent,repository,remove,uid,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1466273350;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {__        String uid = (String) exchange.removeProperty(MAIL_MESSAGE_UID)___        _        if (getEndpoint().getIdempotentRepository() != null) {_            getEndpoint().getIdempotentRepository().remove(uid)__        }__        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,string,uid,string,exchange,remove,property,if,get,endpoint,get,idempotent,repository,null,get,endpoint,get,idempotent,repository,remove,uid,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1471881865;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {__        String uid = (String) exchange.removeProperty(MAIL_MESSAGE_UID)___        _        if (getEndpoint().getIdempotentRepository() != null) {_            getEndpoint().getIdempotentRepository().remove(uid)__        }__        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,string,uid,string,exchange,remove,property,if,get,endpoint,get,idempotent,repository,null,get,endpoint,get,idempotent,repository,remove,uid,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1471881865;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {__        String uid = (String) exchange.removeProperty(MAIL_MESSAGE_UID)___        _        if (getEndpoint().getIdempotentRepository() != null) {_            getEndpoint().getIdempotentRepository().remove(uid)__        }__        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,string,uid,string,exchange,remove,property,if,get,endpoint,get,idempotent,repository,null,get,endpoint,get,idempotent,repository,remove,uid,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1480079644;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {__        String uid = (String) exchange.removeProperty(MAIL_MESSAGE_UID)___        _        if (getEndpoint().getIdempotentRepository() != null) {_            getEndpoint().getIdempotentRepository().remove(uid)__        }__        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,string,uid,string,exchange,remove,property,if,get,endpoint,get,idempotent,repository,null,get,endpoint,get,idempotent,repository,remove,uid,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1517865522;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {__        String uid = (String) exchange.removeProperty(MAIL_MESSAGE_UID)___        _        if (getEndpoint().getIdempotentRepository() != null) {_            getEndpoint().getIdempotentRepository().remove(uid)__        }__        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: {}", exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,string,uid,string,exchange,remove,property,if,get,endpoint,get,idempotent,repository,null,get,endpoint,get,idempotent,repository,remove,uid,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1524063106;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {__        String uid = (String) exchange.removeProperty(MAIL_MESSAGE_UID)___        _        if (getEndpoint().getIdempotentRepository() != null) {_            getEndpoint().getIdempotentRepository().remove(uid)__        }__        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: {}", exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,string,uid,string,exchange,remove,property,if,get,endpoint,get,idempotent,repository,null,get,endpoint,get,idempotent,repository,remove,uid,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1536517284;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {__        String uid = (String) exchange.removeProperty(MAIL_MESSAGE_UID)___        _        if (getEndpoint().getIdempotentRepository() != null) {_            getEndpoint().getIdempotentRepository().remove(uid)__        }__        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: " + exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: {}", exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,string,uid,string,exchange,remove,property,if,get,endpoint,get,idempotent,repository,null,get,endpoint,get,idempotent,repository,remove,uid,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1536687142;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {__        String uid = (String) exchange.removeProperty(MAIL_MESSAGE_UID)___        _        if (getEndpoint().getIdempotentRepository() != null) {_            getEndpoint().getIdempotentRepository().remove(uid)__        }__        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: {}", exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: {}", exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,string,uid,string,exchange,remove,property,if,get,endpoint,get,idempotent,repository,null,get,endpoint,get,idempotent,repository,remove,uid,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1536701701;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {__        String uid = (String) exchange.removeProperty(MAIL_MESSAGE_UID)___        _        if (getEndpoint().getIdempotentRepository() != null) {_            getEndpoint().getIdempotentRepository().remove(uid)__        }__        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: {}", exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: {}", exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,string,uid,string,exchange,remove,property,if,get,endpoint,get,idempotent,repository,null,get,endpoint,get,idempotent,repository,remove,uid,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1537204343;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {__        String uid = (String) exchange.removeProperty(MAIL_MESSAGE_UID)___        _        if (getEndpoint().getIdempotentRepository() != null) {_            getEndpoint().getIdempotentRepository().remove(uid)__        }__        Exception cause = exchange.getException()__        if (cause != null) {_            LOG.warn("Exchange failed, so rolling back message status: {}", exchange, cause)__        } else {_            LOG.warn("Exchange failed, so rolling back message status: {}", exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,string,uid,string,exchange,remove,property,if,get,endpoint,get,idempotent,repository,null,get,endpoint,get,idempotent,repository,remove,uid,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1540108160;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {__        String uid = (String) exchange.removeProperty(MAIL_MESSAGE_UID)___        _        if (getEndpoint().getIdempotentRepository() != null) {_            getEndpoint().getIdempotentRepository().remove(uid)__        }__        Exception cause = exchange.getException()__        if (cause != null) {_            log.warn("Exchange failed, so rolling back message status: {}", exchange, cause)__        } else {_            log.warn("Exchange failed, so rolling back message status: {}", exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,string,uid,string,exchange,remove,property,if,get,endpoint,get,idempotent,repository,null,get,endpoint,get,idempotent,repository,remove,uid,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1540108163;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {__        String uid = (String) exchange.removeProperty(MAIL_MESSAGE_UID)___        _        if (getEndpoint().getIdempotentRepository() != null) {_            getEndpoint().getIdempotentRepository().remove(uid)__        }__        Exception cause = exchange.getException()__        if (cause != null) {_            log.warn("Exchange failed, so rolling back message status: {}", exchange, cause)__        } else {_            log.warn("Exchange failed, so rolling back message status: {}", exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,string,uid,string,exchange,remove,property,if,get,endpoint,get,idempotent,repository,null,get,endpoint,get,idempotent,repository,remove,uid,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> protected void processRollback(Message mail, Exchange exchange);1548317877;Strategy when processing the exchange failed.__@param mail     the mail message_@param exchange the exchange;protected void processRollback(Message mail, Exchange exchange) {__        String uid = (String) exchange.removeProperty(MAIL_MESSAGE_UID)___        _        if (getEndpoint().getIdempotentRepository() != null) {_            getEndpoint().getIdempotentRepository().remove(uid)__        }__        Exception cause = exchange.getException()__        if (cause != null) {_            log.warn("Exchange failed, so rolling back message status: {}", exchange, cause)__        } else {_            log.warn("Exchange failed, so rolling back message status: {}", exchange)__        }_    };strategy,when,processing,the,exchange,failed,param,mail,the,mail,message,param,exchange,the,exchange;protected,void,process,rollback,message,mail,exchange,exchange,string,uid,string,exchange,remove,property,if,get,endpoint,get,idempotent,repository,null,get,endpoint,get,idempotent,repository,remove,uid,exception,cause,exchange,get,exception,if,cause,null,log,warn,exchange,failed,so,rolling,back,message,status,exchange,cause,else,log,warn,exchange,failed,so,rolling,back,message,status,exchange
MailConsumer -> private static boolean hasSortCapability(Store store) throws MessagingException;1415211488;Check whether the email store has the sort capability or not.__@param store Email store_@return true if the store is an IMAP store and it has the store capability_@throws MessagingException In case capability check fails;private static boolean hasSortCapability(Store store) throws MessagingException {_        if (store instanceof IMAPStore) {_            IMAPStore imapStore = (IMAPStore) store__            if (imapStore.hasCapability("SORT*")) {_                return true__            }_        }_        return false__    };check,whether,the,email,store,has,the,sort,capability,or,not,param,store,email,store,return,true,if,the,store,is,an,imap,store,and,it,has,the,store,capability,throws,messaging,exception,in,case,capability,check,fails;private,static,boolean,has,sort,capability,store,store,throws,messaging,exception,if,store,instanceof,imapstore,imapstore,imap,store,imapstore,store,if,imap,store,has,capability,sort,return,true,return,false
MailConsumer -> private static boolean hasSortCapability(Store store) throws MessagingException;1427090237;Check whether the email store has the sort capability or not.__@param store Email store_@return true if the store is an IMAP store and it has the store capability_@throws MessagingException In case capability check fails;private static boolean hasSortCapability(Store store) throws MessagingException {_        if (store instanceof IMAPStore) {_            IMAPStore imapStore = (IMAPStore) store__            if (imapStore.hasCapability("SORT*")) {_                return true__            }_        }_        return false__    };check,whether,the,email,store,has,the,sort,capability,or,not,param,store,email,store,return,true,if,the,store,is,an,imap,store,and,it,has,the,store,capability,throws,messaging,exception,in,case,capability,check,fails;private,static,boolean,has,sort,capability,store,store,throws,messaging,exception,if,store,instanceof,imapstore,imapstore,imap,store,imapstore,store,if,imap,store,has,capability,sort,return,true,return,false
MailConsumer -> private static boolean hasSortCapability(Store store) throws MessagingException;1452351081;Check whether the email store has the sort capability or not.__@param store Email store_@return true if the store is an IMAP store and it has the store capability_@throws MessagingException In case capability check fails;private static boolean hasSortCapability(Store store) throws MessagingException {_        if (store instanceof IMAPStore) {_            IMAPStore imapStore = (IMAPStore) store__            if (imapStore.hasCapability("SORT*")) {_                return true__            }_        }_        return false__    };check,whether,the,email,store,has,the,sort,capability,or,not,param,store,email,store,return,true,if,the,store,is,an,imap,store,and,it,has,the,store,capability,throws,messaging,exception,in,case,capability,check,fails;private,static,boolean,has,sort,capability,store,store,throws,messaging,exception,if,store,instanceof,imapstore,imapstore,imap,store,imapstore,store,if,imap,store,has,capability,sort,return,true,return,false
MailConsumer -> private static boolean hasSortCapability(Store store) throws MessagingException;1455967322;Check whether the email store has the sort capability or not.__@param store Email store_@return true if the store is an IMAP store and it has the store capability_@throws MessagingException In case capability check fails;private static boolean hasSortCapability(Store store) throws MessagingException {_        if (store instanceof IMAPStore) {_            IMAPStore imapStore = (IMAPStore) store__            if (imapStore.hasCapability("SORT*")) {_                return true__            }_        }_        return false__    };check,whether,the,email,store,has,the,sort,capability,or,not,param,store,email,store,return,true,if,the,store,is,an,imap,store,and,it,has,the,store,capability,throws,messaging,exception,in,case,capability,check,fails;private,static,boolean,has,sort,capability,store,store,throws,messaging,exception,if,store,instanceof,imapstore,imapstore,imap,store,imapstore,store,if,imap,store,has,capability,sort,return,true,return,false
MailConsumer -> private static boolean hasSortCapability(Store store) throws MessagingException;1455967322;Check whether the email store has the sort capability or not.__@param store Email store_@return true if the store is an IMAP store and it has the store capability_@throws MessagingException In case capability check fails;private static boolean hasSortCapability(Store store) throws MessagingException {_        if (store instanceof IMAPStore) {_            IMAPStore imapStore = (IMAPStore) store__            if (imapStore.hasCapability("SORT*")) {_                return true__            }_        }_        return false__    };check,whether,the,email,store,has,the,sort,capability,or,not,param,store,email,store,return,true,if,the,store,is,an,imap,store,and,it,has,the,store,capability,throws,messaging,exception,in,case,capability,check,fails;private,static,boolean,has,sort,capability,store,store,throws,messaging,exception,if,store,instanceof,imapstore,imapstore,imap,store,imapstore,store,if,imap,store,has,capability,sort,return,true,return,false
MailConsumer -> private static boolean hasSortCapability(Store store) throws MessagingException;1466273350;Check whether the email store has the sort capability or not.__@param store Email store_@return true if the store is an IMAP store and it has the store capability_@throws MessagingException In case capability check fails;private static boolean hasSortCapability(Store store) throws MessagingException {_        if (store instanceof IMAPStore) {_            IMAPStore imapStore = (IMAPStore) store__            if (imapStore.hasCapability("SORT*")) {_                return true__            }_        }_        return false__    };check,whether,the,email,store,has,the,sort,capability,or,not,param,store,email,store,return,true,if,the,store,is,an,imap,store,and,it,has,the,store,capability,throws,messaging,exception,in,case,capability,check,fails;private,static,boolean,has,sort,capability,store,store,throws,messaging,exception,if,store,instanceof,imapstore,imapstore,imap,store,imapstore,store,if,imap,store,has,capability,sort,return,true,return,false
MailConsumer -> private static boolean hasSortCapability(Store store) throws MessagingException;1471881865;Check whether the email store has the sort capability or not.__@param store Email store_@return true if the store is an IMAP store and it has the store capability_@throws MessagingException In case capability check fails;private static boolean hasSortCapability(Store store) throws MessagingException {_        if (store instanceof IMAPStore) {_            IMAPStore imapStore = (IMAPStore) store__            if (imapStore.hasCapability("SORT*")) {_                return true__            }_        }_        return false__    };check,whether,the,email,store,has,the,sort,capability,or,not,param,store,email,store,return,true,if,the,store,is,an,imap,store,and,it,has,the,store,capability,throws,messaging,exception,in,case,capability,check,fails;private,static,boolean,has,sort,capability,store,store,throws,messaging,exception,if,store,instanceof,imapstore,imapstore,imap,store,imapstore,store,if,imap,store,has,capability,sort,return,true,return,false
MailConsumer -> private static boolean hasSortCapability(Store store) throws MessagingException;1471881865;Check whether the email store has the sort capability or not.__@param store Email store_@return true if the store is an IMAP store and it has the store capability_@throws MessagingException In case capability check fails;private static boolean hasSortCapability(Store store) throws MessagingException {_        if (store instanceof IMAPStore) {_            IMAPStore imapStore = (IMAPStore) store__            if (imapStore.hasCapability("SORT*")) {_                return true__            }_        }_        return false__    };check,whether,the,email,store,has,the,sort,capability,or,not,param,store,email,store,return,true,if,the,store,is,an,imap,store,and,it,has,the,store,capability,throws,messaging,exception,in,case,capability,check,fails;private,static,boolean,has,sort,capability,store,store,throws,messaging,exception,if,store,instanceof,imapstore,imapstore,imap,store,imapstore,store,if,imap,store,has,capability,sort,return,true,return,false
MailConsumer -> private static boolean hasSortCapability(Store store) throws MessagingException;1480079644;Check whether the email store has the sort capability or not.__@param store Email store_@return true if the store is an IMAP store and it has the store capability_@throws MessagingException In case capability check fails;private static boolean hasSortCapability(Store store) throws MessagingException {_        if (store instanceof IMAPStore) {_            IMAPStore imapStore = (IMAPStore) store__            if (imapStore.hasCapability("SORT*")) {_                return true__            }_        }_        return false__    };check,whether,the,email,store,has,the,sort,capability,or,not,param,store,email,store,return,true,if,the,store,is,an,imap,store,and,it,has,the,store,capability,throws,messaging,exception,in,case,capability,check,fails;private,static,boolean,has,sort,capability,store,store,throws,messaging,exception,if,store,instanceof,imapstore,imapstore,imap,store,imapstore,store,if,imap,store,has,capability,sort,return,true,return,false
MailConsumer -> private static boolean hasSortCapability(Store store) throws MessagingException;1517865522;Check whether the email store has the sort capability or not.__@param store Email store_@return true if the store is an IMAP store and it has the store capability_@throws MessagingException In case capability check fails;private static boolean hasSortCapability(Store store) throws MessagingException {_        if (store instanceof IMAPStore) {_            IMAPStore imapStore = (IMAPStore) store__            if (imapStore.hasCapability("SORT*")) {_                return true__            }_        }_        return false__    };check,whether,the,email,store,has,the,sort,capability,or,not,param,store,email,store,return,true,if,the,store,is,an,imap,store,and,it,has,the,store,capability,throws,messaging,exception,in,case,capability,check,fails;private,static,boolean,has,sort,capability,store,store,throws,messaging,exception,if,store,instanceof,imapstore,imapstore,imap,store,imapstore,store,if,imap,store,has,capability,sort,return,true,return,false
MailConsumer -> private static boolean hasSortCapability(Store store) throws MessagingException;1524063106;Check whether the email store has the sort capability or not.__@param store Email store_@return true if the store is an IMAP store and it has the store capability_@throws MessagingException In case capability check fails;private static boolean hasSortCapability(Store store) throws MessagingException {_        if (store instanceof IMAPStore) {_            IMAPStore imapStore = (IMAPStore) store__            if (imapStore.hasCapability("SORT*")) {_                return true__            }_        }_        return false__    };check,whether,the,email,store,has,the,sort,capability,or,not,param,store,email,store,return,true,if,the,store,is,an,imap,store,and,it,has,the,store,capability,throws,messaging,exception,in,case,capability,check,fails;private,static,boolean,has,sort,capability,store,store,throws,messaging,exception,if,store,instanceof,imapstore,imapstore,imap,store,imapstore,store,if,imap,store,has,capability,sort,return,true,return,false
MailConsumer -> private static boolean hasSortCapability(Store store) throws MessagingException;1536517284;Check whether the email store has the sort capability or not.__@param store Email store_@return true if the store is an IMAP store and it has the store capability_@throws MessagingException In case capability check fails;private static boolean hasSortCapability(Store store) throws MessagingException {_        if (store instanceof IMAPStore) {_            IMAPStore imapStore = (IMAPStore) store__            if (imapStore.hasCapability("SORT*")) {_                return true__            }_        }_        return false__    };check,whether,the,email,store,has,the,sort,capability,or,not,param,store,email,store,return,true,if,the,store,is,an,imap,store,and,it,has,the,store,capability,throws,messaging,exception,in,case,capability,check,fails;private,static,boolean,has,sort,capability,store,store,throws,messaging,exception,if,store,instanceof,imapstore,imapstore,imap,store,imapstore,store,if,imap,store,has,capability,sort,return,true,return,false
MailConsumer -> private static boolean hasSortCapability(Store store) throws MessagingException;1536687142;Check whether the email store has the sort capability or not.__@param store Email store_@return true if the store is an IMAP store and it has the store capability_@throws MessagingException In case capability check fails;private static boolean hasSortCapability(Store store) throws MessagingException {_        if (store instanceof IMAPStore) {_            IMAPStore imapStore = (IMAPStore) store__            if (imapStore.hasCapability("SORT*")) {_                return true__            }_        }_        return false__    };check,whether,the,email,store,has,the,sort,capability,or,not,param,store,email,store,return,true,if,the,store,is,an,imap,store,and,it,has,the,store,capability,throws,messaging,exception,in,case,capability,check,fails;private,static,boolean,has,sort,capability,store,store,throws,messaging,exception,if,store,instanceof,imapstore,imapstore,imap,store,imapstore,store,if,imap,store,has,capability,sort,return,true,return,false
MailConsumer -> private static boolean hasSortCapability(Store store) throws MessagingException;1536701701;Check whether the email store has the sort capability or not.__@param store Email store_@return true if the store is an IMAP store and it has the store capability_@throws MessagingException In case capability check fails;private static boolean hasSortCapability(Store store) throws MessagingException {_        if (store instanceof IMAPStore) {_            IMAPStore imapStore = (IMAPStore) store__            if (imapStore.hasCapability("SORT*")) {_                return true__            }_        }_        return false__    };check,whether,the,email,store,has,the,sort,capability,or,not,param,store,email,store,return,true,if,the,store,is,an,imap,store,and,it,has,the,store,capability,throws,messaging,exception,in,case,capability,check,fails;private,static,boolean,has,sort,capability,store,store,throws,messaging,exception,if,store,instanceof,imapstore,imapstore,imap,store,imapstore,store,if,imap,store,has,capability,sort,return,true,return,false
MailConsumer -> private static boolean hasSortCapability(Store store) throws MessagingException;1537204343;Check whether the email store has the sort capability or not.__@param store Email store_@return true if the store is an IMAP store and it has the store capability_@throws MessagingException In case capability check fails;private static boolean hasSortCapability(Store store) throws MessagingException {_        if (store instanceof IMAPStore) {_            IMAPStore imapStore = (IMAPStore) store__            if (imapStore.hasCapability("SORT*")) {_                return true__            }_        }_        return false__    };check,whether,the,email,store,has,the,sort,capability,or,not,param,store,email,store,return,true,if,the,store,is,an,imap,store,and,it,has,the,store,capability,throws,messaging,exception,in,case,capability,check,fails;private,static,boolean,has,sort,capability,store,store,throws,messaging,exception,if,store,instanceof,imapstore,imapstore,imap,store,imapstore,store,if,imap,store,has,capability,sort,return,true,return,false
MailConsumer -> private static boolean hasSortCapability(Store store) throws MessagingException;1540108160;Check whether the email store has the sort capability or not.__@param store Email store_@return true if the store is an IMAP store and it has the store capability_@throws MessagingException In case capability check fails;private static boolean hasSortCapability(Store store) throws MessagingException {_        if (store instanceof IMAPStore) {_            IMAPStore imapStore = (IMAPStore) store__            if (imapStore.hasCapability("SORT*")) {_                return true__            }_        }_        return false__    };check,whether,the,email,store,has,the,sort,capability,or,not,param,store,email,store,return,true,if,the,store,is,an,imap,store,and,it,has,the,store,capability,throws,messaging,exception,in,case,capability,check,fails;private,static,boolean,has,sort,capability,store,store,throws,messaging,exception,if,store,instanceof,imapstore,imapstore,imap,store,imapstore,store,if,imap,store,has,capability,sort,return,true,return,false
MailConsumer -> private static boolean hasSortCapability(Store store) throws MessagingException;1540108163;Check whether the email store has the sort capability or not.__@param store Email store_@return true if the store is an IMAP store and it has the store capability_@throws MessagingException In case capability check fails;private static boolean hasSortCapability(Store store) throws MessagingException {_        if (store instanceof IMAPStore) {_            IMAPStore imapStore = (IMAPStore) store__            if (imapStore.hasCapability("SORT*")) {_                return true__            }_        }_        return false__    };check,whether,the,email,store,has,the,sort,capability,or,not,param,store,email,store,return,true,if,the,store,is,an,imap,store,and,it,has,the,store,capability,throws,messaging,exception,in,case,capability,check,fails;private,static,boolean,has,sort,capability,store,store,throws,messaging,exception,if,store,instanceof,imapstore,imapstore,imap,store,imapstore,store,if,imap,store,has,capability,sort,return,true,return,false
MailConsumer -> private static boolean hasSortCapability(Store store) throws MessagingException;1548317877;Check whether the email store has the sort capability or not.__@param store Email store_@return true if the store is an IMAP store and it has the store capability_@throws MessagingException In case capability check fails;private static boolean hasSortCapability(Store store) throws MessagingException {_        if (store instanceof IMAPStore) {_            IMAPStore imapStore = (IMAPStore) store__            if (imapStore.hasCapability("SORT*")) {_                return true__            }_        }_        return false__    };check,whether,the,email,store,has,the,sort,capability,or,not,param,store,email,store,return,true,if,the,store,is,an,imap,store,and,it,has,the,store,capability,throws,messaging,exception,in,case,capability,check,fails;private,static,boolean,has,sort,capability,store,store,throws,messaging,exception,if,store,instanceof,imapstore,imapstore,imap,store,imapstore,store,if,imap,store,has,capability,sort,return,true,return,false
MailConsumer -> protected void processCommit(Exchange exchange) throws MessagingException;1245903785;Strategy to flag the message after being processed.;protected void processCommit(Exchange exchange) throws MessagingException {_        MailMessage msg = (MailMessage) exchange.getIn()__        Message message = msg.getMessage()___        if (endpoint.getConfiguration().isDelete()) {_            LOG.debug("Exchange processed, so flagging message as DELETED")__            message.setFlag(Flags.Flag.DELETED, true)__        } else {_            LOG.debug("Exchange processed, so flagging message as SEEN")__            message.setFlag(Flags.Flag.SEEN, true)__        }_    };strategy,to,flag,the,message,after,being,processed;protected,void,process,commit,exchange,exchange,throws,messaging,exception,mail,message,msg,mail,message,exchange,get,in,message,message,msg,get,message,if,endpoint,get,configuration,is,delete,log,debug,exchange,processed,so,flagging,message,as,deleted,message,set,flag,flags,flag,deleted,true,else,log,debug,exchange,processed,so,flagging,message,as,seen,message,set,flag,flags,flag,seen,true
MailConsumer -> protected void processCommit(Exchange exchange) throws MessagingException;1257837548;Strategy to flag the message after being processed.;protected void processCommit(Exchange exchange) throws MessagingException {_        MailMessage msg = (MailMessage) exchange.getIn()__        _        Message message = msg.getOriginalMessage()___        if (endpoint.getConfiguration().isDelete()) {_            LOG.debug("Exchange processed, so flagging message as DELETED")__            message.setFlag(Flags.Flag.DELETED, true)__        } else {_            LOG.debug("Exchange processed, so flagging message as SEEN")__            message.setFlag(Flags.Flag.SEEN, true)__        }_    };strategy,to,flag,the,message,after,being,processed;protected,void,process,commit,exchange,exchange,throws,messaging,exception,mail,message,msg,mail,message,exchange,get,in,message,message,msg,get,original,message,if,endpoint,get,configuration,is,delete,log,debug,exchange,processed,so,flagging,message,as,deleted,message,set,flag,flags,flag,deleted,true,else,log,debug,exchange,processed,so,flagging,message,as,seen,message,set,flag,flags,flag,seen,true
MailConsumer -> protected void processCommit(Exchange exchange) throws MessagingException;1258003617;Strategy to flag the message after being processed.;protected void processCommit(Exchange exchange) throws MessagingException {_        MailMessage msg = (MailMessage) exchange.getIn()__        _        Message message = msg.getOriginalMessage()___        if (endpoint.getConfiguration().isDelete()) {_            LOG.debug("Exchange processed, so flagging message as DELETED")__            message.setFlag(Flags.Flag.DELETED, true)__        } else {_            LOG.debug("Exchange processed, so flagging message as SEEN")__            message.setFlag(Flags.Flag.SEEN, true)__        }_    };strategy,to,flag,the,message,after,being,processed;protected,void,process,commit,exchange,exchange,throws,messaging,exception,mail,message,msg,mail,message,exchange,get,in,message,message,msg,get,original,message,if,endpoint,get,configuration,is,delete,log,debug,exchange,processed,so,flagging,message,as,deleted,message,set,flag,flags,flag,deleted,true,else,log,debug,exchange,processed,so,flagging,message,as,seen,message,set,flag,flags,flag,seen,true
MailConsumer -> protected void processCommit(Exchange exchange) throws MessagingException;1259234335;Strategy to flag the message after being processed.;protected void processCommit(Exchange exchange) throws MessagingException {_        MailMessage msg = (MailMessage) exchange.getIn()__        _        Message message = msg.getOriginalMessage()___        if (endpoint.getConfiguration().isDelete()) {_            LOG.debug("Exchange processed, so flagging message as DELETED")__            message.setFlag(Flags.Flag.DELETED, true)__        } else {_            LOG.debug("Exchange processed, so flagging message as SEEN")__            message.setFlag(Flags.Flag.SEEN, true)__        }_    };strategy,to,flag,the,message,after,being,processed;protected,void,process,commit,exchange,exchange,throws,messaging,exception,mail,message,msg,mail,message,exchange,get,in,message,message,msg,get,original,message,if,endpoint,get,configuration,is,delete,log,debug,exchange,processed,so,flagging,message,as,deleted,message,set,flag,flags,flag,deleted,true,else,log,debug,exchange,processed,so,flagging,message,as,seen,message,set,flag,flags,flag,seen,true
MailConsumer -> protected void processCommit(Exchange exchange) throws MessagingException;1261839486;Strategy to flag the message after being processed.;protected void processCommit(Exchange exchange) throws MessagingException {_        MailMessage msg = (MailMessage) exchange.getIn()__        _        Message message = msg.getOriginalMessage()___        if (endpoint.getConfiguration().isDelete()) {_            LOG.debug("Exchange processed, so flagging message as DELETED")__            message.setFlag(Flags.Flag.DELETED, true)__        } else {_            LOG.debug("Exchange processed, so flagging message as SEEN")__            message.setFlag(Flags.Flag.SEEN, true)__        }_    };strategy,to,flag,the,message,after,being,processed;protected,void,process,commit,exchange,exchange,throws,messaging,exception,mail,message,msg,mail,message,exchange,get,in,message,message,msg,get,original,message,if,endpoint,get,configuration,is,delete,log,debug,exchange,processed,so,flagging,message,as,deleted,message,set,flag,flags,flag,deleted,true,else,log,debug,exchange,processed,so,flagging,message,as,seen,message,set,flag,flags,flag,seen,true
MailConsumer -> protected void processCommit(Exchange exchange) throws MessagingException;1262930031;Strategy to flag the message after being processed.;protected void processCommit(Exchange exchange) throws MessagingException {_        MailMessage msg = (MailMessage) exchange.getIn()__        _        Message message = msg.getOriginalMessage()___        if (endpoint.getConfiguration().isDelete()) {_            LOG.debug("Exchange processed, so flagging message as DELETED")__            message.setFlag(Flags.Flag.DELETED, true)__        } else {_            LOG.debug("Exchange processed, so flagging message as SEEN")__            message.setFlag(Flags.Flag.SEEN, true)__        }_    };strategy,to,flag,the,message,after,being,processed;protected,void,process,commit,exchange,exchange,throws,messaging,exception,mail,message,msg,mail,message,exchange,get,in,message,message,msg,get,original,message,if,endpoint,get,configuration,is,delete,log,debug,exchange,processed,so,flagging,message,as,deleted,message,set,flag,flags,flag,deleted,true,else,log,debug,exchange,processed,so,flagging,message,as,seen,message,set,flag,flags,flag,seen,true
MailConsumer -> private List<KeyValueHolder<String, Message>> retrieveMessages() throws MessagingException;1455967322;@return Messages from input folder according to the search and sort criteria stored in the endpoint_@throws MessagingException If message retrieval fails;private List<KeyValueHolder<String, Message>> retrieveMessages() throws MessagingException {_        List<KeyValueHolder<String, Message>> answer = new ArrayList<>()___        Message[] messages__        final SortTerm[] sortTerm = getEndpoint().getSortTerm()__        final SearchTerm searchTerm = computeSearchTerm()__        if (sortTerm != null && serverCanSort) {_            final IMAPFolder imapFolder = (IMAPFolder) folder__            if (searchTerm != null) {_                _                messages = imapFolder.getSortedMessages(sortTerm, searchTerm)__            } else {_                _                messages = imapFolder.getSortedMessages(sortTerm)__            }_        } else {_            if (searchTerm != null) {_                messages = folder.search(searchTerm, retrieveAllMessages())__            } else {_                messages = retrieveAllMessages()__            }_            _            if (sortTerm != null) {_                MailSorter.sortMessages(messages, sortTerm)__            }_        }__        for (Message message : messages) {_            String key = getEndpoint().getMailUidGenerator().generateUuid(getEndpoint(), message)__            if (isValidMessage(key, message)) {_                answer.add(new KeyValueHolder<>(key, message))__            }_        }__        return answer__    };return,messages,from,input,folder,according,to,the,search,and,sort,criteria,stored,in,the,endpoint,throws,messaging,exception,if,message,retrieval,fails;private,list,key,value,holder,string,message,retrieve,messages,throws,messaging,exception,list,key,value,holder,string,message,answer,new,array,list,message,messages,final,sort,term,sort,term,get,endpoint,get,sort,term,final,search,term,search,term,compute,search,term,if,sort,term,null,server,can,sort,final,imapfolder,imap,folder,imapfolder,folder,if,search,term,null,messages,imap,folder,get,sorted,messages,sort,term,search,term,else,messages,imap,folder,get,sorted,messages,sort,term,else,if,search,term,null,messages,folder,search,search,term,retrieve,all,messages,else,messages,retrieve,all,messages,if,sort,term,null,mail,sorter,sort,messages,messages,sort,term,for,message,message,messages,string,key,get,endpoint,get,mail,uid,generator,generate,uuid,get,endpoint,message,if,is,valid,message,key,message,answer,add,new,key,value,holder,key,message,return,answer
MailConsumer -> private List<KeyValueHolder<String, Message>> retrieveMessages() throws MessagingException;1466273350;@return Messages from input folder according to the search and sort criteria stored in the endpoint_@throws MessagingException If message retrieval fails;private List<KeyValueHolder<String, Message>> retrieveMessages() throws MessagingException {_        List<KeyValueHolder<String, Message>> answer = new ArrayList<>()___        Message[] messages__        final SortTerm[] sortTerm = getEndpoint().getSortTerm()__        final SearchTerm searchTerm = computeSearchTerm()__        if (sortTerm != null && serverCanSort) {_            final IMAPFolder imapFolder = (IMAPFolder) folder__            if (searchTerm != null) {_                _                messages = imapFolder.getSortedMessages(sortTerm, searchTerm)__            } else {_                _                messages = imapFolder.getSortedMessages(sortTerm)__            }_        } else {_            if (searchTerm != null) {_                messages = folder.search(searchTerm, retrieveAllMessages())__            } else {_                messages = retrieveAllMessages()__            }_            _            if (sortTerm != null) {_                MailSorter.sortMessages(messages, sortTerm)__            }_        }__        for (Message message : messages) {_            String key = getEndpoint().getMailUidGenerator().generateUuid(getEndpoint(), message)__            if (isValidMessage(key, message)) {_                answer.add(new KeyValueHolder<>(key, message))__            }_        }__        return answer__    };return,messages,from,input,folder,according,to,the,search,and,sort,criteria,stored,in,the,endpoint,throws,messaging,exception,if,message,retrieval,fails;private,list,key,value,holder,string,message,retrieve,messages,throws,messaging,exception,list,key,value,holder,string,message,answer,new,array,list,message,messages,final,sort,term,sort,term,get,endpoint,get,sort,term,final,search,term,search,term,compute,search,term,if,sort,term,null,server,can,sort,final,imapfolder,imap,folder,imapfolder,folder,if,search,term,null,messages,imap,folder,get,sorted,messages,sort,term,search,term,else,messages,imap,folder,get,sorted,messages,sort,term,else,if,search,term,null,messages,folder,search,search,term,retrieve,all,messages,else,messages,retrieve,all,messages,if,sort,term,null,mail,sorter,sort,messages,messages,sort,term,for,message,message,messages,string,key,get,endpoint,get,mail,uid,generator,generate,uuid,get,endpoint,message,if,is,valid,message,key,message,answer,add,new,key,value,holder,key,message,return,answer
MailConsumer -> private List<KeyValueHolder<String, Message>> retrieveMessages() throws MessagingException;1471881865;@return Messages from input folder according to the search and sort criteria stored in the endpoint_@throws MessagingException If message retrieval fails;private List<KeyValueHolder<String, Message>> retrieveMessages() throws MessagingException {_        List<KeyValueHolder<String, Message>> answer = new ArrayList<>()___        Message[] messages__        final SortTerm[] sortTerm = getEndpoint().getSortTerm()__        final SearchTerm searchTerm = computeSearchTerm()__        if (sortTerm != null && serverCanSort) {_            final IMAPFolder imapFolder = (IMAPFolder) folder__            if (searchTerm != null) {_                _                messages = imapFolder.getSortedMessages(sortTerm, searchTerm)__            } else {_                _                messages = imapFolder.getSortedMessages(sortTerm)__            }_        } else {_            if (searchTerm != null) {_                messages = folder.search(searchTerm, retrieveAllMessages())__            } else {_                messages = retrieveAllMessages()__            }_            _            if (sortTerm != null) {_                MailSorter.sortMessages(messages, sortTerm)__            }_        }__        for (Message message : messages) {_            String key = getEndpoint().getMailUidGenerator().generateUuid(getEndpoint(), message)__            if (isValidMessage(key, message)) {_                answer.add(new KeyValueHolder<>(key, message))__            }_        }__        return answer__    };return,messages,from,input,folder,according,to,the,search,and,sort,criteria,stored,in,the,endpoint,throws,messaging,exception,if,message,retrieval,fails;private,list,key,value,holder,string,message,retrieve,messages,throws,messaging,exception,list,key,value,holder,string,message,answer,new,array,list,message,messages,final,sort,term,sort,term,get,endpoint,get,sort,term,final,search,term,search,term,compute,search,term,if,sort,term,null,server,can,sort,final,imapfolder,imap,folder,imapfolder,folder,if,search,term,null,messages,imap,folder,get,sorted,messages,sort,term,search,term,else,messages,imap,folder,get,sorted,messages,sort,term,else,if,search,term,null,messages,folder,search,search,term,retrieve,all,messages,else,messages,retrieve,all,messages,if,sort,term,null,mail,sorter,sort,messages,messages,sort,term,for,message,message,messages,string,key,get,endpoint,get,mail,uid,generator,generate,uuid,get,endpoint,message,if,is,valid,message,key,message,answer,add,new,key,value,holder,key,message,return,answer
MailConsumer -> private List<KeyValueHolder<String, Message>> retrieveMessages() throws MessagingException;1471881865;@return Messages from input folder according to the search and sort criteria stored in the endpoint_@throws MessagingException If message retrieval fails;private List<KeyValueHolder<String, Message>> retrieveMessages() throws MessagingException {_        List<KeyValueHolder<String, Message>> answer = new ArrayList<>()___        Message[] messages__        final SortTerm[] sortTerm = getEndpoint().getSortTerm()__        final SearchTerm searchTerm = computeSearchTerm()__        if (sortTerm != null && serverCanSort) {_            final IMAPFolder imapFolder = (IMAPFolder) folder__            if (searchTerm != null) {_                _                messages = imapFolder.getSortedMessages(sortTerm, searchTerm)__            } else {_                _                messages = imapFolder.getSortedMessages(sortTerm)__            }_        } else {_            if (searchTerm != null) {_                messages = folder.search(searchTerm, retrieveAllMessages())__            } else {_                messages = retrieveAllMessages()__            }_            _            if (sortTerm != null) {_                MailSorter.sortMessages(messages, sortTerm)__            }_        }__        for (Message message : messages) {_            String key = getEndpoint().getMailUidGenerator().generateUuid(getEndpoint(), message)__            if (isValidMessage(key, message)) {_                answer.add(new KeyValueHolder<>(key, message))__            }_        }__        return answer__    };return,messages,from,input,folder,according,to,the,search,and,sort,criteria,stored,in,the,endpoint,throws,messaging,exception,if,message,retrieval,fails;private,list,key,value,holder,string,message,retrieve,messages,throws,messaging,exception,list,key,value,holder,string,message,answer,new,array,list,message,messages,final,sort,term,sort,term,get,endpoint,get,sort,term,final,search,term,search,term,compute,search,term,if,sort,term,null,server,can,sort,final,imapfolder,imap,folder,imapfolder,folder,if,search,term,null,messages,imap,folder,get,sorted,messages,sort,term,search,term,else,messages,imap,folder,get,sorted,messages,sort,term,else,if,search,term,null,messages,folder,search,search,term,retrieve,all,messages,else,messages,retrieve,all,messages,if,sort,term,null,mail,sorter,sort,messages,messages,sort,term,for,message,message,messages,string,key,get,endpoint,get,mail,uid,generator,generate,uuid,get,endpoint,message,if,is,valid,message,key,message,answer,add,new,key,value,holder,key,message,return,answer
MailConsumer -> private List<KeyValueHolder<String, Message>> retrieveMessages() throws MessagingException;1480079644;@return Messages from input folder according to the search and sort criteria stored in the endpoint_@throws MessagingException If message retrieval fails;private List<KeyValueHolder<String, Message>> retrieveMessages() throws MessagingException {_        List<KeyValueHolder<String, Message>> answer = new ArrayList<>()___        Message[] messages__        final SortTerm[] sortTerm = getEndpoint().getSortTerm()__        final SearchTerm searchTerm = computeSearchTerm()__        if (sortTerm != null && serverCanSort) {_            final IMAPFolder imapFolder = (IMAPFolder) folder__            if (searchTerm != null) {_                _                messages = imapFolder.getSortedMessages(sortTerm, searchTerm)__            } else {_                _                messages = imapFolder.getSortedMessages(sortTerm)__            }_        } else {_            if (searchTerm != null) {_                messages = folder.search(searchTerm, retrieveAllMessages())__            } else {_                messages = retrieveAllMessages()__            }_            _            if (sortTerm != null) {_                MailSorter.sortMessages(messages, sortTerm)__            }_        }__        for (Message message : messages) {_            String key = getEndpoint().getMailUidGenerator().generateUuid(getEndpoint(), message)__            if (isValidMessage(key, message)) {_                answer.add(new KeyValueHolder<>(key, message))__            }_        }__        return answer__    };return,messages,from,input,folder,according,to,the,search,and,sort,criteria,stored,in,the,endpoint,throws,messaging,exception,if,message,retrieval,fails;private,list,key,value,holder,string,message,retrieve,messages,throws,messaging,exception,list,key,value,holder,string,message,answer,new,array,list,message,messages,final,sort,term,sort,term,get,endpoint,get,sort,term,final,search,term,search,term,compute,search,term,if,sort,term,null,server,can,sort,final,imapfolder,imap,folder,imapfolder,folder,if,search,term,null,messages,imap,folder,get,sorted,messages,sort,term,search,term,else,messages,imap,folder,get,sorted,messages,sort,term,else,if,search,term,null,messages,folder,search,search,term,retrieve,all,messages,else,messages,retrieve,all,messages,if,sort,term,null,mail,sorter,sort,messages,messages,sort,term,for,message,message,messages,string,key,get,endpoint,get,mail,uid,generator,generate,uuid,get,endpoint,message,if,is,valid,message,key,message,answer,add,new,key,value,holder,key,message,return,answer
MailConsumer -> private List<KeyValueHolder<String, Message>> retrieveMessages() throws MessagingException;1517865522;@return Messages from input folder according to the search and sort criteria stored in the endpoint_@throws MessagingException If message retrieval fails;private List<KeyValueHolder<String, Message>> retrieveMessages() throws MessagingException {_        List<KeyValueHolder<String, Message>> answer = new ArrayList<>()___        Message[] messages__        final SortTerm[] sortTerm = getEndpoint().getSortTerm()__        final SearchTerm searchTerm = computeSearchTerm()__        if (sortTerm != null && serverCanSort) {_            final IMAPFolder imapFolder = (IMAPFolder) folder__            if (searchTerm != null) {_                _                messages = imapFolder.getSortedMessages(sortTerm, searchTerm)__            } else {_                _                messages = imapFolder.getSortedMessages(sortTerm)__            }_        } else {_            if (searchTerm != null) {_                messages = folder.search(searchTerm, retrieveAllMessages())__            } else {_                messages = retrieveAllMessages()__            }_            _            if (sortTerm != null) {_                MailSorter.sortMessages(messages, sortTerm)__            }_        }__        for (Message message : messages) {_            String key = getEndpoint().getMailUidGenerator().generateUuid(getEndpoint(), message)__            if (isValidMessage(key, message)) {_                answer.add(new KeyValueHolder<>(key, message))__            }_        }__        return answer__    };return,messages,from,input,folder,according,to,the,search,and,sort,criteria,stored,in,the,endpoint,throws,messaging,exception,if,message,retrieval,fails;private,list,key,value,holder,string,message,retrieve,messages,throws,messaging,exception,list,key,value,holder,string,message,answer,new,array,list,message,messages,final,sort,term,sort,term,get,endpoint,get,sort,term,final,search,term,search,term,compute,search,term,if,sort,term,null,server,can,sort,final,imapfolder,imap,folder,imapfolder,folder,if,search,term,null,messages,imap,folder,get,sorted,messages,sort,term,search,term,else,messages,imap,folder,get,sorted,messages,sort,term,else,if,search,term,null,messages,folder,search,search,term,retrieve,all,messages,else,messages,retrieve,all,messages,if,sort,term,null,mail,sorter,sort,messages,messages,sort,term,for,message,message,messages,string,key,get,endpoint,get,mail,uid,generator,generate,uuid,get,endpoint,message,if,is,valid,message,key,message,answer,add,new,key,value,holder,key,message,return,answer
MailConsumer -> private List<KeyValueHolder<String, Message>> retrieveMessages() throws MessagingException;1524063106;@return Messages from input folder according to the search and sort criteria stored in the endpoint_@throws MessagingException If message retrieval fails;private List<KeyValueHolder<String, Message>> retrieveMessages() throws MessagingException {_        List<KeyValueHolder<String, Message>> answer = new ArrayList<>()___        Message[] messages__        final SortTerm[] sortTerm = getEndpoint().getSortTerm()__        final SearchTerm searchTerm = computeSearchTerm()__        if (sortTerm != null && serverCanSort) {_            final IMAPFolder imapFolder = (IMAPFolder) folder__            if (searchTerm != null) {_                _                messages = imapFolder.getSortedMessages(sortTerm, searchTerm)__            } else {_                _                messages = imapFolder.getSortedMessages(sortTerm)__            }_        } else {_            if (searchTerm != null) {_                messages = folder.search(searchTerm, retrieveAllMessages())__            } else {_                messages = retrieveAllMessages()__            }_            _            if (sortTerm != null) {_                MailSorter.sortMessages(messages, sortTerm)__            }_        }__        for (Message message : messages) {_            String key = getEndpoint().getMailUidGenerator().generateUuid(getEndpoint(), message)__            if (isValidMessage(key, message)) {_                answer.add(new KeyValueHolder<>(key, message))__            }_        }__        return answer__    };return,messages,from,input,folder,according,to,the,search,and,sort,criteria,stored,in,the,endpoint,throws,messaging,exception,if,message,retrieval,fails;private,list,key,value,holder,string,message,retrieve,messages,throws,messaging,exception,list,key,value,holder,string,message,answer,new,array,list,message,messages,final,sort,term,sort,term,get,endpoint,get,sort,term,final,search,term,search,term,compute,search,term,if,sort,term,null,server,can,sort,final,imapfolder,imap,folder,imapfolder,folder,if,search,term,null,messages,imap,folder,get,sorted,messages,sort,term,search,term,else,messages,imap,folder,get,sorted,messages,sort,term,else,if,search,term,null,messages,folder,search,search,term,retrieve,all,messages,else,messages,retrieve,all,messages,if,sort,term,null,mail,sorter,sort,messages,messages,sort,term,for,message,message,messages,string,key,get,endpoint,get,mail,uid,generator,generate,uuid,get,endpoint,message,if,is,valid,message,key,message,answer,add,new,key,value,holder,key,message,return,answer
MailConsumer -> private List<KeyValueHolder<String, Message>> retrieveMessages() throws MessagingException;1536517284;@return Messages from input folder according to the search and sort criteria stored in the endpoint_@throws MessagingException If message retrieval fails;private List<KeyValueHolder<String, Message>> retrieveMessages() throws MessagingException {_        List<KeyValueHolder<String, Message>> answer = new ArrayList<>()___        Message[] messages__        final SortTerm[] sortTerm = getEndpoint().getSortTerm()__        final SearchTerm searchTerm = computeSearchTerm()__        if (sortTerm != null && serverCanSort) {_            final IMAPFolder imapFolder = (IMAPFolder) folder__            if (searchTerm != null) {_                _                messages = imapFolder.getSortedMessages(sortTerm, searchTerm)__            } else {_                _                messages = imapFolder.getSortedMessages(sortTerm)__            }_        } else {_            if (searchTerm != null) {_                messages = folder.search(searchTerm, retrieveAllMessages())__            } else {_                messages = retrieveAllMessages()__            }_            _            if (sortTerm != null) {_                MailSorter.sortMessages(messages, sortTerm)__            }_        }__        for (Message message : messages) {_            String key = getEndpoint().getMailUidGenerator().generateUuid(getEndpoint(), message)__            if (isValidMessage(key, message)) {_                answer.add(new KeyValueHolder<>(key, message))__            }_        }__        return answer__    };return,messages,from,input,folder,according,to,the,search,and,sort,criteria,stored,in,the,endpoint,throws,messaging,exception,if,message,retrieval,fails;private,list,key,value,holder,string,message,retrieve,messages,throws,messaging,exception,list,key,value,holder,string,message,answer,new,array,list,message,messages,final,sort,term,sort,term,get,endpoint,get,sort,term,final,search,term,search,term,compute,search,term,if,sort,term,null,server,can,sort,final,imapfolder,imap,folder,imapfolder,folder,if,search,term,null,messages,imap,folder,get,sorted,messages,sort,term,search,term,else,messages,imap,folder,get,sorted,messages,sort,term,else,if,search,term,null,messages,folder,search,search,term,retrieve,all,messages,else,messages,retrieve,all,messages,if,sort,term,null,mail,sorter,sort,messages,messages,sort,term,for,message,message,messages,string,key,get,endpoint,get,mail,uid,generator,generate,uuid,get,endpoint,message,if,is,valid,message,key,message,answer,add,new,key,value,holder,key,message,return,answer
MailConsumer -> private List<KeyValueHolder<String, Message>> retrieveMessages() throws MessagingException;1536687142;@return Messages from input folder according to the search and sort criteria stored in the endpoint_@throws MessagingException If message retrieval fails;private List<KeyValueHolder<String, Message>> retrieveMessages() throws MessagingException {_        List<KeyValueHolder<String, Message>> answer = new ArrayList<>()___        Message[] messages__        final SortTerm[] sortTerm = getEndpoint().getSortTerm()__        final SearchTerm searchTerm = computeSearchTerm()__        if (sortTerm != null && serverCanSort) {_            final IMAPFolder imapFolder = (IMAPFolder) folder__            if (searchTerm != null) {_                _                messages = imapFolder.getSortedMessages(sortTerm, searchTerm)__            } else {_                _                messages = imapFolder.getSortedMessages(sortTerm)__            }_        } else {_            if (searchTerm != null) {_                messages = folder.search(searchTerm, retrieveAllMessages())__            } else {_                messages = retrieveAllMessages()__            }_            _            if (sortTerm != null) {_                MailSorter.sortMessages(messages, sortTerm)__            }_        }__        for (Message message : messages) {_            String key = getEndpoint().getMailUidGenerator().generateUuid(getEndpoint(), message)__            if (isValidMessage(key, message)) {_                answer.add(new KeyValueHolder<>(key, message))__            }_        }__        return answer__    };return,messages,from,input,folder,according,to,the,search,and,sort,criteria,stored,in,the,endpoint,throws,messaging,exception,if,message,retrieval,fails;private,list,key,value,holder,string,message,retrieve,messages,throws,messaging,exception,list,key,value,holder,string,message,answer,new,array,list,message,messages,final,sort,term,sort,term,get,endpoint,get,sort,term,final,search,term,search,term,compute,search,term,if,sort,term,null,server,can,sort,final,imapfolder,imap,folder,imapfolder,folder,if,search,term,null,messages,imap,folder,get,sorted,messages,sort,term,search,term,else,messages,imap,folder,get,sorted,messages,sort,term,else,if,search,term,null,messages,folder,search,search,term,retrieve,all,messages,else,messages,retrieve,all,messages,if,sort,term,null,mail,sorter,sort,messages,messages,sort,term,for,message,message,messages,string,key,get,endpoint,get,mail,uid,generator,generate,uuid,get,endpoint,message,if,is,valid,message,key,message,answer,add,new,key,value,holder,key,message,return,answer
MailConsumer -> private List<KeyValueHolder<String, Message>> retrieveMessages() throws MessagingException;1536701701;@return Messages from input folder according to the search and sort criteria stored in the endpoint_@throws MessagingException If message retrieval fails;private List<KeyValueHolder<String, Message>> retrieveMessages() throws MessagingException {_        List<KeyValueHolder<String, Message>> answer = new ArrayList<>()___        Message[] messages__        final SortTerm[] sortTerm = getEndpoint().getSortTerm()__        final SearchTerm searchTerm = computeSearchTerm()__        if (sortTerm != null && serverCanSort) {_            final IMAPFolder imapFolder = (IMAPFolder) folder__            if (searchTerm != null) {_                _                messages = imapFolder.getSortedMessages(sortTerm, searchTerm)__            } else {_                _                messages = imapFolder.getSortedMessages(sortTerm)__            }_        } else {_            if (searchTerm != null) {_                messages = folder.search(searchTerm, retrieveAllMessages())__            } else {_                messages = retrieveAllMessages()__            }_            _            if (sortTerm != null) {_                MailSorter.sortMessages(messages, sortTerm)__            }_        }__        for (Message message : messages) {_            String key = getEndpoint().getMailUidGenerator().generateUuid(getEndpoint(), message)__            if (isValidMessage(key, message)) {_                answer.add(new KeyValueHolder<>(key, message))__            }_        }__        return answer__    };return,messages,from,input,folder,according,to,the,search,and,sort,criteria,stored,in,the,endpoint,throws,messaging,exception,if,message,retrieval,fails;private,list,key,value,holder,string,message,retrieve,messages,throws,messaging,exception,list,key,value,holder,string,message,answer,new,array,list,message,messages,final,sort,term,sort,term,get,endpoint,get,sort,term,final,search,term,search,term,compute,search,term,if,sort,term,null,server,can,sort,final,imapfolder,imap,folder,imapfolder,folder,if,search,term,null,messages,imap,folder,get,sorted,messages,sort,term,search,term,else,messages,imap,folder,get,sorted,messages,sort,term,else,if,search,term,null,messages,folder,search,search,term,retrieve,all,messages,else,messages,retrieve,all,messages,if,sort,term,null,mail,sorter,sort,messages,messages,sort,term,for,message,message,messages,string,key,get,endpoint,get,mail,uid,generator,generate,uuid,get,endpoint,message,if,is,valid,message,key,message,answer,add,new,key,value,holder,key,message,return,answer
MailConsumer -> private List<KeyValueHolder<String, Message>> retrieveMessages() throws MessagingException;1537204343;@return Messages from input folder according to the search and sort criteria stored in the endpoint_@throws MessagingException If message retrieval fails;private List<KeyValueHolder<String, Message>> retrieveMessages() throws MessagingException {_        List<KeyValueHolder<String, Message>> answer = new ArrayList<>()___        Message[] messages__        final SortTerm[] sortTerm = getEndpoint().getSortTerm()__        final SearchTerm searchTerm = computeSearchTerm()__        if (sortTerm != null && serverCanSort) {_            final IMAPFolder imapFolder = (IMAPFolder) folder__            if (searchTerm != null) {_                _                messages = imapFolder.getSortedMessages(sortTerm, searchTerm)__            } else {_                _                messages = imapFolder.getSortedMessages(sortTerm)__            }_        } else {_            if (searchTerm != null) {_                messages = folder.search(searchTerm, retrieveAllMessages())__            } else {_                messages = retrieveAllMessages()__            }_            _            if (sortTerm != null) {_                MailSorter.sortMessages(messages, sortTerm)__            }_        }__        for (Message message : messages) {_            String key = getEndpoint().getMailUidGenerator().generateUuid(getEndpoint(), message)__            if (isValidMessage(key, message)) {_                answer.add(new KeyValueHolder<>(key, message))__            }_        }__        return answer__    };return,messages,from,input,folder,according,to,the,search,and,sort,criteria,stored,in,the,endpoint,throws,messaging,exception,if,message,retrieval,fails;private,list,key,value,holder,string,message,retrieve,messages,throws,messaging,exception,list,key,value,holder,string,message,answer,new,array,list,message,messages,final,sort,term,sort,term,get,endpoint,get,sort,term,final,search,term,search,term,compute,search,term,if,sort,term,null,server,can,sort,final,imapfolder,imap,folder,imapfolder,folder,if,search,term,null,messages,imap,folder,get,sorted,messages,sort,term,search,term,else,messages,imap,folder,get,sorted,messages,sort,term,else,if,search,term,null,messages,folder,search,search,term,retrieve,all,messages,else,messages,retrieve,all,messages,if,sort,term,null,mail,sorter,sort,messages,messages,sort,term,for,message,message,messages,string,key,get,endpoint,get,mail,uid,generator,generate,uuid,get,endpoint,message,if,is,valid,message,key,message,answer,add,new,key,value,holder,key,message,return,answer
MailConsumer -> private List<KeyValueHolder<String, Message>> retrieveMessages() throws MessagingException;1540108160;@return Messages from input folder according to the search and sort criteria stored in the endpoint_@throws MessagingException If message retrieval fails;private List<KeyValueHolder<String, Message>> retrieveMessages() throws MessagingException {_        List<KeyValueHolder<String, Message>> answer = new ArrayList<>()___        Message[] messages__        final SortTerm[] sortTerm = getEndpoint().getSortTerm()__        final SearchTerm searchTerm = computeSearchTerm()__        if (sortTerm != null && serverCanSort) {_            final IMAPFolder imapFolder = (IMAPFolder) folder__            if (searchTerm != null) {_                _                messages = imapFolder.getSortedMessages(sortTerm, searchTerm)__            } else {_                _                messages = imapFolder.getSortedMessages(sortTerm)__            }_        } else {_            if (searchTerm != null) {_                messages = folder.search(searchTerm, retrieveAllMessages())__            } else {_                messages = retrieveAllMessages()__            }_            _            if (sortTerm != null) {_                MailSorter.sortMessages(messages, sortTerm)__            }_        }__        for (Message message : messages) {_            String key = getEndpoint().getMailUidGenerator().generateUuid(getEndpoint(), message)__            if (isValidMessage(key, message)) {_                answer.add(new KeyValueHolder<>(key, message))__            }_        }__        return answer__    };return,messages,from,input,folder,according,to,the,search,and,sort,criteria,stored,in,the,endpoint,throws,messaging,exception,if,message,retrieval,fails;private,list,key,value,holder,string,message,retrieve,messages,throws,messaging,exception,list,key,value,holder,string,message,answer,new,array,list,message,messages,final,sort,term,sort,term,get,endpoint,get,sort,term,final,search,term,search,term,compute,search,term,if,sort,term,null,server,can,sort,final,imapfolder,imap,folder,imapfolder,folder,if,search,term,null,messages,imap,folder,get,sorted,messages,sort,term,search,term,else,messages,imap,folder,get,sorted,messages,sort,term,else,if,search,term,null,messages,folder,search,search,term,retrieve,all,messages,else,messages,retrieve,all,messages,if,sort,term,null,mail,sorter,sort,messages,messages,sort,term,for,message,message,messages,string,key,get,endpoint,get,mail,uid,generator,generate,uuid,get,endpoint,message,if,is,valid,message,key,message,answer,add,new,key,value,holder,key,message,return,answer
MailConsumer -> private List<KeyValueHolder<String, Message>> retrieveMessages() throws MessagingException;1540108163;@return Messages from input folder according to the search and sort criteria stored in the endpoint_@throws MessagingException If message retrieval fails;private List<KeyValueHolder<String, Message>> retrieveMessages() throws MessagingException {_        List<KeyValueHolder<String, Message>> answer = new ArrayList<>()___        Message[] messages__        final SortTerm[] sortTerm = getEndpoint().getSortTerm()__        final SearchTerm searchTerm = computeSearchTerm()__        if (sortTerm != null && serverCanSort) {_            final IMAPFolder imapFolder = (IMAPFolder) folder__            if (searchTerm != null) {_                _                messages = imapFolder.getSortedMessages(sortTerm, searchTerm)__            } else {_                _                messages = imapFolder.getSortedMessages(sortTerm)__            }_        } else {_            if (searchTerm != null) {_                messages = folder.search(searchTerm, retrieveAllMessages())__            } else {_                messages = retrieveAllMessages()__            }_            _            if (sortTerm != null) {_                MailSorter.sortMessages(messages, sortTerm)__            }_        }__        for (Message message : messages) {_            String key = getEndpoint().getMailUidGenerator().generateUuid(getEndpoint(), message)__            if (isValidMessage(key, message)) {_                answer.add(new KeyValueHolder<>(key, message))__            }_        }__        return answer__    };return,messages,from,input,folder,according,to,the,search,and,sort,criteria,stored,in,the,endpoint,throws,messaging,exception,if,message,retrieval,fails;private,list,key,value,holder,string,message,retrieve,messages,throws,messaging,exception,list,key,value,holder,string,message,answer,new,array,list,message,messages,final,sort,term,sort,term,get,endpoint,get,sort,term,final,search,term,search,term,compute,search,term,if,sort,term,null,server,can,sort,final,imapfolder,imap,folder,imapfolder,folder,if,search,term,null,messages,imap,folder,get,sorted,messages,sort,term,search,term,else,messages,imap,folder,get,sorted,messages,sort,term,else,if,search,term,null,messages,folder,search,search,term,retrieve,all,messages,else,messages,retrieve,all,messages,if,sort,term,null,mail,sorter,sort,messages,messages,sort,term,for,message,message,messages,string,key,get,endpoint,get,mail,uid,generator,generate,uuid,get,endpoint,message,if,is,valid,message,key,message,answer,add,new,key,value,holder,key,message,return,answer
MailConsumer -> private List<KeyValueHolder<String, Message>> retrieveMessages() throws MessagingException;1548317877;@return Messages from input folder according to the search and sort criteria stored in the endpoint_@throws MessagingException If message retrieval fails;private List<KeyValueHolder<String, Message>> retrieveMessages() throws MessagingException {_        List<KeyValueHolder<String, Message>> answer = new ArrayList<>()___        Message[] messages__        final SortTerm[] sortTerm = getEndpoint().getSortTerm()__        final SearchTerm searchTerm = computeSearchTerm()__        if (sortTerm != null && serverCanSort) {_            final IMAPFolder imapFolder = (IMAPFolder) folder__            if (searchTerm != null) {_                _                messages = imapFolder.getSortedMessages(sortTerm, searchTerm)__            } else {_                _                messages = imapFolder.getSortedMessages(sortTerm)__            }_        } else {_            if (searchTerm != null) {_                messages = folder.search(searchTerm, retrieveAllMessages())__            } else {_                messages = retrieveAllMessages()__            }_            _            if (sortTerm != null) {_                MailSorter.sortMessages(messages, sortTerm)__            }_        }__        for (Message message : messages) {_            String key = getEndpoint().getMailUidGenerator().generateUuid(getEndpoint(), message)__            if (isValidMessage(key, message)) {_                answer.add(new KeyValueHolder<>(key, message))__            }_        }__        return answer__    };return,messages,from,input,folder,according,to,the,search,and,sort,criteria,stored,in,the,endpoint,throws,messaging,exception,if,message,retrieval,fails;private,list,key,value,holder,string,message,retrieve,messages,throws,messaging,exception,list,key,value,holder,string,message,answer,new,array,list,message,messages,final,sort,term,sort,term,get,endpoint,get,sort,term,final,search,term,search,term,compute,search,term,if,sort,term,null,server,can,sort,final,imapfolder,imap,folder,imapfolder,folder,if,search,term,null,messages,imap,folder,get,sorted,messages,sort,term,search,term,else,messages,imap,folder,get,sorted,messages,sort,term,else,if,search,term,null,messages,folder,search,search,term,retrieve,all,messages,else,messages,retrieve,all,messages,if,sort,term,null,mail,sorter,sort,messages,messages,sort,term,for,message,message,messages,string,key,get,endpoint,get,mail,uid,generator,generate,uuid,get,endpoint,message,if,is,valid,message,key,message,answer,add,new,key,value,holder,key,message,return,answer
