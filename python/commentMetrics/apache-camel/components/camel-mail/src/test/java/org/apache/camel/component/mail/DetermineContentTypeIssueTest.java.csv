commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void testDetermineContentTypeNoChange() throws Exception {     MailConfiguration configuration = new MailConfiguration().     MailBinding binding = new MailBinding().     exchange.getIn().setHeader("Content-Type", contentType).     String determinedType = binding.determineContentType(configuration, exchange).     // no charset     assertEquals(contentType, determinedType). }
false;public;0;15;;@Test public void testDetermineContentTypeCharSetFromExchange() throws Exception {     MailConfiguration configuration = new MailConfiguration().     MailBinding binding = new MailBinding().     exchange.getIn().setHeader("Content-Type", contentType).     exchange.setProperty(Exchange.CHARSET_NAME, "iso-8859-1").     String determinedType = binding.determineContentType(configuration, exchange).     String expected = contentType + ". charset=iso-8859-1".     // should append the charset from exchange     assertEquals(expected, determinedType). }
false;public;0;14;;@Test public void testDetermineContentTypeFallbackCharSetFromExchange() throws Exception {     MailConfiguration configuration = new MailConfiguration().     MailBinding binding = new MailBinding().     String type = contentType + ". charset=utf-8".     exchange.getIn().setHeader("Content-Type", type).     exchange.setProperty(Exchange.CHARSET_NAME, "iso-8859-1").     String determinedType = binding.determineContentType(configuration, exchange).     // should keep existing charset     assertEquals(type, determinedType). }
false;public;0;16;;@Test public void testDetermineContentTypeIgnoreUnsupportedExchangeAsFallback() throws Exception {     MailConfiguration configuration = new MailConfiguration().     // ignore unsupported     configuration.setIgnoreUnsupportedCharset(true).     MailBinding binding = new MailBinding().     String type = contentType + ". charset=ansi_x3.110-1983".     exchange.getIn().setHeader("Content-Type", type).     exchange.setProperty(Exchange.CHARSET_NAME, "iso-8859-1").     String determinedType = binding.determineContentType(configuration, exchange).     // should remove unsupported charset     assertEquals(contentType, determinedType). }
false;public;0;13;;@Test public void testDetermineContentTypeInvalidCharset() throws Exception {     MailConfiguration configuration = new MailConfiguration().     MailBinding binding = new MailBinding().     String type = contentType + ". charset=ansi_x3.110-1983".     exchange.getIn().setHeader("Content-Type", type).     String determinedType = binding.determineContentType(configuration, exchange).     // should keep existing charset even if its unsupported as we configured it as that     assertEquals(type, determinedType). }
false;public;0;13;;@Test public void testDetermineContentTypeWithCharsetInMiddle() throws Exception {     MailConfiguration configuration = new MailConfiguration().     MailBinding binding = new MailBinding().     String type = "text/plain. charset=iso-8859-1. foo=bar".     exchange.getIn().setHeader("Content-Type", type).     String determinedType = binding.determineContentType(configuration, exchange).     // content-type is left untouched     assertEquals(type, determinedType). }
