commented;modifiers;parameterAmount;loc;comment;code
false;public;0;28;;@Test public void testConsuming() throws Exception {     // clear mailbox     Mailbox.clearAll().     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived("Hello London").     template.sendBody("smtp://bond@localhost", "Hello London").     // first poll should happen immediately     mock.setResultWaitTime(2000L).     mock.assertIsSatisfied().     mock.reset().     mock.expectedBodiesReceived("Hello Paris").     mock.setResultWaitTime(1000L + 2000L).     StopWatch watch = new StopWatch().     template.sendBody("smtp://bond@localhost", "Hello Paris").     // poll next mail and that is should be done within the default delay (overrule to 1 sec) + 2 sec slack     mock.assertIsSatisfied().     long delta = watch.taken().     assertTrue("Camel should not default poll the mailbox to often", delta > 1000 - 1000L). }
false;public;0;4;;public void configure() throws Exception {     // we overrule the default of 60 sec to 1 so the unit test is faster     from("pop3://bond@localhost?delay=1000").to("mock:result"). }
false;protected;0;8;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             // we overrule the default of 60 sec to 1 so the unit test is faster             from("pop3://bond@localhost?delay=1000").to("mock:result").         }     }. }
