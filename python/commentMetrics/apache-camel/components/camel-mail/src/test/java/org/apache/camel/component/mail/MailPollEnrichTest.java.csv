commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Override @Before public void setUp() throws Exception {     prepareMailbox().     super.setUp(). }
false;public;0;12;;@Test public void testPollEnrich() throws Exception {     Mailbox mailbox = Mailbox.get("bill@localhost").     assertEquals(5, mailbox.size()).     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived("Message 0").     template.sendBody("direct:start", "").     mock.assertIsSatisfied(). }
false;public;0;12;;@Test public void testPollEnrichNullBody() throws Exception {     Mailbox mailbox = Mailbox.get("bill@localhost").     assertEquals(5, mailbox.size()).     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived("Message 0").     template.sendBody("direct:start", null).     mock.assertIsSatisfied(). }
false;private;0;20;;private void prepareMailbox() throws Exception {     // connect to mailbox     Mailbox.clearAll().     JavaMailSender sender = new DefaultJavaMailSender().     Store store = sender.getSession().getStore("pop3").     store.connect("localhost", 25, "bill", "secret").     Folder folder = store.getFolder("INBOX").     folder.open(Folder.READ_WRITE).     folder.expunge().     // inserts 5 new messages     Message[] messages = new Message[5].     for (int i = 0. i < 5. i++) {         messages[i] = new MimeMessage(sender.getSession()).         messages[i].setHeader("Message-ID", "" + i).         messages[i].setText("Message " + i).     }     folder.appendMessages(messages).     folder.close(true). }
false;public;0;5;;public void configure() throws Exception {     from("direct:start").pollEnrich("pop3://bill@localhost?password=secret&consumer.initialDelay=100&consumer.delay=100", 5000).to("log:mail", "mock:result"). }
false;protected;0;9;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from("direct:start").pollEnrich("pop3://bill@localhost?password=secret&consumer.initialDelay=100&consumer.delay=100", 5000).to("log:mail", "mock:result").         }     }. }
