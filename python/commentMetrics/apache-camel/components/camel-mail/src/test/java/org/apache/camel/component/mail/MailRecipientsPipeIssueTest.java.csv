commented;modifiers;parameterAmount;loc;comment;code
false;public;0;18;;@Test public void testMultiRecipients() throws Exception {     Mailbox.clearAll().     sendBody("direct:a", "Camel does really rock").     Mailbox inbox = Mailbox.get("camel|pipes@riders.org").     Message msg = inbox.get(0).     assertEquals("you@apache.org", msg.getFrom()[0].toString()).     assertEquals("camel|pipes@riders.org", msg.getRecipients(Message.RecipientType.TO)[0].toString()).     assertEquals("easy@riders.org", msg.getRecipients(Message.RecipientType.TO)[1].toString()).     inbox = Mailbox.get("easy@riders.org").     msg = inbox.get(0).     assertEquals("you@apache.org", msg.getFrom()[0].toString()).     assertEquals("camel|pipes@riders.org", msg.getRecipients(Message.RecipientType.TO)[0].toString()).     assertEquals("easy@riders.org", msg.getRecipients(Message.RecipientType.TO)[1].toString()). }
false;public;0;5;;public void configure() throws Exception {     String recipients = "&to=camel|pipes@riders.org.easy@riders.org".     from("direct:a").to("smtp://you@mymailserver.com?password=secret&from=you@apache.org" + recipients). }
false;protected;0;9;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             String recipients = "&to=camel|pipes@riders.org.easy@riders.org".             from("direct:a").to("smtp://you@mymailserver.com?password=secret&from=you@apache.org" + recipients).         }     }. }
