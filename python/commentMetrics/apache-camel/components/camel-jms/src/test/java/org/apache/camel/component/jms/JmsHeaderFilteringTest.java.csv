commented;modifiers;parameterAmount;loc;comment;code
false;public;1;7;;public void process(Exchange exchange) throws Exception {     exchange.getIn().setHeader("org.apache.camel.jms", 10000).     exchange.getIn().setHeader("org.apache.camel.test.jms", 20000).     exchange.getIn().setHeader("testheader", 1020).     exchange.getIn().setHeader("anotherheader", 1030).     exchange.getIn().setHeader("JMSXAppID", "myApp"). }
false;public;0;21;;@Test public void testHeaderFilters() throws Exception {     MockEndpoint errors = this.resolveMandatoryEndpoint(assertionReceiver, MockEndpoint.class).     errors.expectedMessageCount(0).     template.send(testQueueEndpointA, ExchangePattern.InOnly, new Processor() {          public void process(Exchange exchange) throws Exception {             exchange.getIn().setHeader("org.apache.camel.jms", 10000).             exchange.getIn().setHeader("org.apache.camel.test.jms", 20000).             exchange.getIn().setHeader("testheader", 1020).             exchange.getIn().setHeader("anotherheader", 1030).             exchange.getIn().setHeader("JMSXAppID", "myApp").         }     }).     // make sure that the latch reached zero and that timeout did not elapse     assertTrue(latch.await(2, TimeUnit.SECONDS)).     errors.assertIsSatisfied(). }
false;protected;0;18;;@Override protected CamelContext createCamelContext() throws Exception {     CamelContext camelContext = super.createCamelContext().     ConnectionFactory connectionFactory = CamelJmsTestHelper.createConnectionFactory().     camelContext.addComponent(componentName, jmsComponentAutoAcknowledge(connectionFactory)).     JmsComponent component = camelContext.getComponent(componentName, JmsComponent.class).     JmsHeaderFilterStrategy filter = new JmsHeaderFilterStrategy().     filter.getInFilter().add("testheader").     filter.getOutFilter().add("anotherheader").     // add a regular expression pattern filter, notice that dots are encoded to '_DOT_' in jms headers     filter.setInFilterPattern(IN_FILTER_PATTERN).     component.setHeaderFilterStrategy(filter).     return camelContext. }
false;public;0;7;;public void configure() throws Exception {     onException(AssertionError.class).to(assertionReceiver).     from(testQueueEndpointA).process(new OutHeaderChecker()).to(testQueueEndpointB).     from(testQueueEndpointB).process(new InHeaderChecker()). }
false;protected;0;12;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             onException(AssertionError.class).to(assertionReceiver).             from(testQueueEndpointA).process(new OutHeaderChecker()).to(testQueueEndpointB).             from(testQueueEndpointB).process(new InHeaderChecker()).         }     }. }
false;public;1;20;;public void process(Exchange exchange) throws Exception {     JmsMessage message = exchange.getIn(JmsMessage.class).     // testheader not filtered out until it is copied back to camel     assertEquals(1020, message.getJmsMessage().getObjectProperty("testheader")).     // anotherheader has been filtered out     assertNull(message.getJmsMessage().getObjectProperty("anotherheader")).     // notice dots are replaced by '_DOT_' when it is copied to the jms message properties     assertEquals(10000, message.getJmsMessage().getObjectProperty("org_DOT_apache_DOT_camel_DOT_jms")).     // like testheader, org.apache.camel.test.jms will be filtered by the "in" filter     assertEquals(20000, message.getJmsMessage().getObjectProperty("org_DOT_apache_DOT_camel_DOT_test_DOT_jms")).     // should be filtered by default     assertNull(message.getJmsMessage().getStringProperty("JMSXAppID")).     latch.countDown(). }
false;public;1;19;;public void process(Exchange exchange) throws Exception {     // filtered out by "in" filter     assertNull(exchange.getIn().getHeader("testheader")).     // it has been filtered out by "out" filter     assertNull(exchange.getIn().getHeader("anotherheader")).     // it should not been filtered out     assertEquals(10000, exchange.getIn().getHeader("org.apache.camel.jms")).     // filtered out by "in" filter     assertNull(exchange.getIn().getHeader("org_DOT_apache_DOT_camel_DOT_test_DOT_jms")).     // should be filtered by default     assertNull(exchange.getIn().getHeader("JMSXAppID")).     latch.countDown(). }
