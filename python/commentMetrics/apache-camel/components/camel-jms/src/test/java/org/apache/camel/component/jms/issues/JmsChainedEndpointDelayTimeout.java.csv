commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Test public void testTimeoutNotTriggeredTempQueue() throws Exception {     getMockEndpoint("mock:exception").expectedMessageCount(0).     getMockEndpoint("mock:ping").expectedMessageCount(1).     template.requestBody("activemq:test", "<hello />").     assertMockEndpointsSatisfied(). }
false;public;0;7;;@Test public void testTimeoutNotTriggeredFixedQueue() throws Exception {     getMockEndpoint("mock:exception").expectedMessageCount(0).     getMockEndpoint("mock:ping").expectedMessageCount(1).     template.requestBody("activemq:testReplyFixedQueue", "<hello />").     assertMockEndpointsSatisfied(). }
false;protected;0;6;;protected CamelContext createCamelContext() throws Exception {     CamelContext camelContext = super.createCamelContext().     ConnectionFactory connectionFactory = CamelJmsTestHelper.createConnectionFactory().     camelContext.addComponent("activemq", jmsComponentAutoAcknowledge(connectionFactory)).     return camelContext. }
false;public;0;20;;@Override public void configure() throws Exception {     onException(ExchangeTimedOutException.class).handled(true).to("mock:exception").     from("activemq:test").inOut("activemq:ping?requestTimeout=500").delay(constant(1000)).     from("activemq:testReplyFixedQueue").inOut("activemq:ping?requestTimeout=500&replyToType=Exclusive&replyTo=reply").delay(constant(1000)).     from("activemq:ping").to("mock:ping").log("pong"). }
false;protected;0;25;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             onException(ExchangeTimedOutException.class).handled(true).to("mock:exception").             from("activemq:test").inOut("activemq:ping?requestTimeout=500").delay(constant(1000)).             from("activemq:testReplyFixedQueue").inOut("activemq:ping?requestTimeout=500&replyToType=Exclusive&replyTo=reply").delay(constant(1000)).             from("activemq:ping").to("mock:ping").log("pong").         }     }. }
