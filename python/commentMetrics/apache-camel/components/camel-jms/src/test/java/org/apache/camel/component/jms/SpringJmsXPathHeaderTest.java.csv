commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testTrue() throws Exception {     getMockEndpoint("mock:true").expectedMessageCount(1).     getMockEndpoint("mock:other").expectedMessageCount(0).     template.sendBodyAndHeader("activemq:queue:in", "<hello>World</hello>", "foo", "true").     assertMockEndpointsSatisfied(). }
false;public;0;9;;@Test public void testFalse() throws Exception {     getMockEndpoint("mock:true").expectedMessageCount(0).     getMockEndpoint("mock:other").expectedMessageCount(1).     template.sendBodyAndHeader("activemq:queue:in", "<hello>World</hello>", "foo", "false").     assertMockEndpointsSatisfied(). }
false;public;0;9;;@Test public void testNoHeader() throws Exception {     getMockEndpoint("mock:true").expectedMessageCount(0).     getMockEndpoint("mock:other").expectedMessageCount(1).     template.sendBody("activemq:queue:in", "<hello>World</hello>").     assertMockEndpointsSatisfied(). }
false;protected;0;4;;@Override protected AbstractXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/component/jms/SpringJmsXPathHeaderTest.xml"). }
