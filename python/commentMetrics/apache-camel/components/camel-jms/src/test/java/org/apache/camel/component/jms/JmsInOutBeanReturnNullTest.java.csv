commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Test public void testReturnBean() throws Exception {     MyBean out = template.requestBody("activemq:queue:foo", "Camel", MyBean.class).     assertNotNull(out).     assertEquals("Camel", out.getName()). }
false;public;0;5;;@Test public void testReturnNull() throws Exception {     Object out = template.requestBody("activemq:queue:foo", "foo").     assertNull(out). }
false;public;0;5;;@Test public void testReturnNullMyBean() throws Exception {     MyBean out = template.requestBody("activemq:queue:foo", "foo", MyBean.class).     assertNull(out). }
false;public;1;4;;@Override public void process(Exchange exchange) throws Exception {     exchange.getIn().setBody("foo"). }
false;public;0;15;;@Test public void testReturnNullExchange() throws Exception {     Exchange reply = template.request("activemq:queue:foo", new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             exchange.getIn().setBody("foo").         }     }).     assertNotNull(reply).     assertTrue(reply.hasOut()).     Message out = reply.getOut().     assertNotNull(out).     Object body = out.getBody().     assertNull("Should be a null body", body). }
false;protected;0;6;;protected CamelContext createCamelContext() throws Exception {     CamelContext camelContext = super.createCamelContext().     ConnectionFactory connectionFactory = CamelJmsTestHelper.createConnectionFactory().     camelContext.addComponent("activemq", jmsComponentAutoAcknowledge(connectionFactory)).     return camelContext. }
false;public;0;5;;@Override public void configure() throws Exception {     from("activemq:queue:foo").bean(JmsInOutBeanReturnNullTest.class, "doSomething"). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("activemq:queue:foo").bean(JmsInOutBeanReturnNullTest.class, "doSomething").         }     }. }
false;public;1;7;;public MyBean doSomething(String body) {     if ("foo".equals(body)) {         return null.     } else {         return new MyBean(body).     } }
false;public;0;3;;public String getName() {     return name. }
