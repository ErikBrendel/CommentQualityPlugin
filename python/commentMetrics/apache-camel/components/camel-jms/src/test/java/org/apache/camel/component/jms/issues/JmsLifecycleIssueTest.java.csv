commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void routeThatIsStoppedAndThenResumedAcceptsMessage() throws Exception {     assertThatRouteIs(Stopped).     context.getRouteController().resumeRoute(ROUTE_ID).     assertRouteWorks(). }
false;public;0;9;;@Test public void routeThatIsStoppedSuspendedAndThenResumedAcceptsMessage() throws Exception {     assertThatRouteIs(Stopped).     context.getRouteController().resumeRoute(ROUTE_ID).     context.getRouteController().resumeRoute(ROUTE_ID).     assertRouteWorks(). }
false;private;1;3;;private void assertThatRouteIs(ServiceStatus expectedStatus) {     assertEquals(expectedStatus, context.getRouteController().getRouteStatus(ROUTE_ID)). }
false;private;0;9;;private void assertRouteWorks() throws Exception {     assertThatRouteIs(Started).     getMockEndpoint("mock:result").expectedBodiesReceived("anything").     template.sendBody(ENDPOINT_URI, "anything").     assertMockEndpointsSatisfied(). }
false;protected;0;6;;protected CamelContext createCamelContext() throws Exception {     CamelContext camelContext = super.createCamelContext().     ConnectionFactory connectionFactory = CamelJmsTestHelper.createConnectionFactory().     camelContext.addComponent("activemq", jmsComponentAutoAcknowledge(connectionFactory)).     return camelContext. }
false;public;0;6;;@Override public void configure() throws Exception {     from(ENDPOINT_URI).routeId(ROUTE_ID).autoStartup(false).to("log:input").to("mock:result"). }
false;public;0;11;;@Override public void configure() throws Exception {     context.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from(ENDPOINT_URI).routeId(ROUTE_ID).autoStartup(false).to("log:input").to("mock:result").         }     }). }
false;protected;0;16;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             context.addRoutes(new RouteBuilder() {                  @Override                 public void configure() throws Exception {                     from(ENDPOINT_URI).routeId(ROUTE_ID).autoStartup(false).to("log:input").to("mock:result").                 }             }).         }     }. }
