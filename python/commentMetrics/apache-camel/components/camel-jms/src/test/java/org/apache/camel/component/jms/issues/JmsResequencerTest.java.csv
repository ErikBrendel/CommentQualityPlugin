commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected AbstractApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/component/jms/issues/JmsResequencerTest-context.xml"). }
false;public;0;4;;@Test public void testBatchResequencer() throws Exception {     testResequencer("activemq:queue:in1"). }
false;public;0;4;;@Test public void testStreamResequencer() throws Exception {     testResequencer("activemq:queue:in2"). }
false;private;1;14;;private void testResequencer(String endpoint) throws Exception {     MockEndpoint result = getMockEndpoint("mock:result").     result.expectedMessageCount(100).     for (int i = 0. i < 100. i++) {         result.message(i).body().isEqualTo(Integer.valueOf(i + 1)).     }     for (int i = 100. i > 0. i--) {         template.sendBodyAndHeader(endpoint, Integer.valueOf(i), "num", Long.valueOf(i)).     }     assertMockEndpointsSatisfied(). }
