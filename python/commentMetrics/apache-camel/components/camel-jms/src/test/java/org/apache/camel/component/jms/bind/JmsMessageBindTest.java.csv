commented;modifiers;parameterAmount;loc;comment;code
false;public;0;25;;@Test public void testSendAMessageToBean() throws Exception {     MockEndpoint endpoint = getMockEndpoint("mock:result").     endpoint.expectedBodiesReceived("Completed").     Map<String, Object> headers = new HashMap<>().     headers.put("foo", "bar").     // this header should not be sent as its value cannot be serialized     headers.put("binding", new JmsBinding()).     template.sendBodyAndHeaders("activemq:Test.BindingQueue", "SomeBody", headers).     // lets wait for the method to be invoked     assertMockEndpointsSatisfied().     // now lets test that the bean is correct     MyBean bean = getMandatoryBean(MyBean.class, "myBean").     assertEquals("body", "SomeBody", bean.getBody()).     Map<?, ?> beanHeaders = bean.getHeaders().     assertNotNull("No headers!", beanHeaders).     assertEquals("foo header", "bar", beanHeaders.get("foo")).     assertNull("Should get a null value", beanHeaders.get("binding")). }
false;protected;0;3;;protected ClassPathXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/component/jms/bind/spring.xml"). }
