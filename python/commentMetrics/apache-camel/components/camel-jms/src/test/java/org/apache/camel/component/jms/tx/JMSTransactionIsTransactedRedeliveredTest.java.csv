commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;protected ClassPathXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("/org/apache/camel/component/jms/tx/JMSTransactionIsTransactedRedeliveredTest.xml"). }
false;public;0;4;;@Override public boolean isUseAdviceWith() {     return true. }
false;protected;0;3;;protected MBeanServer getMBeanServer() {     return context.getManagementStrategy().getManagementAgent().getMBeanServer(). }
false;public;0;4;;@Override public void configure() throws Exception {     onException(AssertionError.class).to("log:error", "mock:error"). }
false;public;0;51;;@Test public void testTransactionSuccess() throws Exception {     RouteReifier.adviceWith(context.getRouteDefinitions().get(0), context, new AdviceWithRouteBuilder() {          @Override         public void configure() throws Exception {             onException(AssertionError.class).to("log:error", "mock:error").         }     }).     context.start().     // there should be no assertion errors     MockEndpoint error = getMockEndpoint("mock:error").     error.expectedMessageCount(0).     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(1).     mock.expectedBodiesReceived("Bye World").     // success at 3rd attempt     mock.message(0).header("count").isEqualTo(3).     template.sendBody("activemq:queue:okay", "Hello World").     mock.assertIsSatisfied().     error.assertIsSatisfied().     // check JMX stats     // need a little sleep to ensure JMX is updated     Thread.sleep(500).     Set<ObjectName> objectNames = getMBeanServer().queryNames(new ObjectName("org.apache.camel:context=camel-*,type=routes,name=\"myRoute\""), null).     assertEquals(1, objectNames.size()).     ObjectName name = objectNames.iterator().next().     Long total = (Long) getMBeanServer().getAttribute(name, "ExchangesTotal").     assertEquals(3, total.intValue()).     Long completed = (Long) getMBeanServer().getAttribute(name, "ExchangesCompleted").     assertEquals(1, completed.intValue()).     Long failed = (Long) getMBeanServer().getAttribute(name, "ExchangesFailed").     assertEquals(2, failed.intValue()).     // Camel error handler redeliveries (we do not use that in this example)     Long redeliveries = (Long) getMBeanServer().getAttribute(name, "Redeliveries").     assertEquals(0, redeliveries.intValue()).     // Camel error handler redeliveries (we do not use that in this example)     // there should be 2 external redeliveries     Long externalRedeliveries = (Long) getMBeanServer().getAttribute(name, "ExternalRedeliveries").     assertEquals(2, externalRedeliveries.intValue()). }
false;public;1;16;;public void process(Exchange exchange) throws Exception {     ++count.     // the first is not redelivered     if (count == 1) {         assertFalse("Should not be external redelivered", exchange.isExternalRedelivered()).     } else {         assertTrue("Should be external redelivered", exchange.isExternalRedelivered()).     }     if (count < 3) {         throw new IllegalArgumentException("Forced exception").     }     exchange.getIn().setBody("Bye World").     exchange.getIn().setHeader("count", count). }
