commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testJmsRoutingSlip() throws Exception {     getMockEndpoint("mock:a").expectedBodiesReceived("Hello World").     getMockEndpoint("mock:b").expectedBodiesReceived("Hello World").     template.sendBodyAndHeader("activemq:queue:hello", "Hello World", "myslip", "mock:a#mock:b").     assertMockEndpointsSatisfied(). }
false;protected;0;8;;protected CamelContext createCamelContext() throws Exception {     CamelContext camelContext = super.createCamelContext().     ConnectionFactory connectionFactory = CamelJmsTestHelper.createConnectionFactory().     camelContext.addComponent(componentName, jmsComponentAutoAcknowledge(connectionFactory)).     return camelContext. }
false;public;0;3;;public void configure() throws Exception {     from("activemq:queue:hello").routingSlip(header("myslip"), "#"). }
false;protected;0;7;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from("activemq:queue:hello").routingSlip(header("myslip"), "#").         }     }. }
