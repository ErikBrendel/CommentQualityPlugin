commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Test public void testCustomJMSReplyToInOut() throws Exception {     template.sendBody("activemq:queue:hello", "What is your name?").     String reply = consumer.receiveBody("activemq:queue:namedReplyQueue", 5000, String.class).     assertEquals("My name is Camel", reply). }
false;public;0;5;;public void configure() throws Exception {     from("activemq:queue:hello?replyTo=queue:namedReplyQueue").to("log:hello").transform(constant("My name is Camel")). }
false;protected;0;9;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from("activemq:queue:hello?replyTo=queue:namedReplyQueue").to("log:hello").transform(constant("My name is Camel")).         }     }. }
false;protected;0;6;;protected CamelContext createCamelContext() throws Exception {     CamelContext camelContext = super.createCamelContext().     ConnectionFactory connectionFactory = CamelJmsTestHelper.createConnectionFactory().     camelContext.addComponent("activemq", jmsComponentAutoAcknowledge(connectionFactory)).     return camelContext. }
