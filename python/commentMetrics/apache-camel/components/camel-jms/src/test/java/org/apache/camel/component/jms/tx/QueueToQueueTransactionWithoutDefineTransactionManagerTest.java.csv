commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;3;;protected AbstractXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/component/jms/tx/ActiveMQWithoutTransactionManager.xml"). }
false;public;0;8;;@Override public void configure() throws Exception {     errorHandler(noErrorHandler()).     from("activemq:queue:foo?transacted=false").process(new ConditionalExceptionProcessor()).to("activemq:queue:bar?transacted=false"). }
false;public;0;25;;@Test public void testNoTransactionRollbackUsingXmlQueueToQueue() throws Exception {     // configure routes and add to camel context     context.addRoutes(new SpringRouteBuilder() {          @Override         public void configure() throws Exception {             errorHandler(noErrorHandler()).             from("activemq:queue:foo?transacted=false").process(new ConditionalExceptionProcessor()).to("activemq:queue:bar?transacted=false").         }     }).     NotifyBuilder notify = new NotifyBuilder(context).whenDone(1).create().     template.sendBody("activemq:queue:foo", "blah").     notify.matchesMockWaitTime().     assertTrue("Expected only 1 calls to process() (1 failure) but encountered " + getConditionalExceptionProcessor().getCount() + ".", getConditionalExceptionProcessor().getCount() == 1). }
