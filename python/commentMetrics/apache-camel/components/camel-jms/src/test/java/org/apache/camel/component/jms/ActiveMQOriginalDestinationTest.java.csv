commented;modifiers;parameterAmount;loc;comment;code
false;public;0;22;;@Test public void testActiveMQOriginalDestination() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(1).     template.sendBody("activemq:queue:foo", "Hello World").     assertMockEndpointsSatisfied().     // consume from bar     Exchange out = consumer.receive("activemq:queue:bar", 5000).     assertNotNull(out).     // and we should have foo as the original destination     JmsMessage msg = out.getIn(JmsMessage.class).     Message jms = msg.getJmsMessage().     ActiveMQMessage amq = assertIsInstanceOf(ActiveMQMessage.class, jms).     ActiveMQDestination original = amq.getOriginalDestination().     assertNotNull(original).     assertEquals("foo", original.getPhysicalName()).     assertEquals("Queue", original.getDestinationTypeAsString()). }
false;protected;0;11;;protected CamelContext createCamelContext() throws Exception {     CamelContext camelContext = super.createCamelContext().     ConnectionFactory connectionFactory = CamelJmsTestHelper.createConnectionFactory().     camelContext.addComponent(componentName, jmsComponentAutoAcknowledge(connectionFactory)).     JmsComponent jms = camelContext.getComponent(componentName, JmsComponent.class).     jms.setMessageCreatedStrategy(new OriginalDestinationPropagateStrategy()).     return camelContext. }
false;public;0;6;;@Override public void configure() throws Exception {     from("activemq:queue:foo").to("activemq:queue:bar").to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("activemq:queue:foo").to("activemq:queue:bar").to("mock:result").         }     }. }
false;public;4;15;;// TODO: This is supported out of the box from ActiveMQ 5.14 onwards, and hence remove OriginalDestinationPropagateStrategy @Override public void onMessageCreated(Message message, Session session, Exchange exchange, Throwable cause) {     if (exchange.getIn() instanceof JmsMessage) {         JmsMessage msg = exchange.getIn(JmsMessage.class).         Message jms = msg.getJmsMessage().         if (message instanceof ActiveMQMessage) {             ActiveMQMessage amq = (ActiveMQMessage) jms.             ActiveMQDestination from = amq.getDestination().             if (from != null && message instanceof ActiveMQMessage) {                 ((ActiveMQMessage) message).setOriginalDestination(from).             }         }     } }
