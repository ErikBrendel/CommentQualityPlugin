commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public void configure() throws Exception {     from("activemq:queue:foo?testConnectionOnStartup=true").to("mock:foo"). }
false;public;0;17;;@Test public void testConnectionOnStartupConsumerTest() throws Exception {     context.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("activemq:queue:foo?testConnectionOnStartup=true").to("mock:foo").         }     }).     try {         context.start().         fail("Should have thrown an exception").     } catch (FailedToCreateConsumerException e) {         assertEquals("Failed to create Consumer for endpoint: activemq://queue:foo?testConnectionOnStartup=true. " + "Reason: Cannot get JMS Connection on startup for destination foo", e.getMessage()).     } }
false;public;0;4;;@Override public void configure() throws Exception {     from("direct:start").to("activemq:queue:foo?testConnectionOnStartup=true"). }
false;public;0;18;;@Test public void testConnectionOnStartupProducerTest() throws Exception {     context.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("activemq:queue:foo?testConnectionOnStartup=true").         }     }).     try {         context.start().         fail("Should have thrown an exception").     } catch (FailedToCreateRouteException ex) {         FailedToCreateProducerException e = (FailedToCreateProducerException) ex.getCause().         assertTrue(e.getMessage().startsWith("Failed to create Producer for endpoint: activemq://queue:foo?testConnectionOnStartup=true.")).         assertTrue(e.getMessage().contains("java.net.ConnectException")).     } }
false;protected;0;9;;protected CamelContext createCamelContext() throws Exception {     CamelContext camelContext = super.createCamelContext().     // we do not start a broker on tcp 61111     ConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://localhost:61111").     camelContext.addComponent("activemq", jmsComponentAutoAcknowledge(connectionFactory)).     return camelContext. }
false;public;0;4;;@Override public boolean isUseRouteBuilder() {     return false. }
