commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testAsyncStopListener() throws Exception {     MockEndpoint result = getMockEndpoint("mock:result").     result.expectedMessageCount(2).     template.sendBody("activemq:queue:hello2", "Hello World").     template.sendBody("activemq:queue:hello2", "Gooday World").     result.assertIsSatisfied(). }
false;protected;0;10;;protected CamelContext createCamelContext() throws Exception {     CamelContext camelContext = super.createCamelContext().     ConnectionFactory connectionFactory = CamelJmsTestHelper.createConnectionFactory().     JmsComponent jms = jmsComponentAutoAcknowledge(connectionFactory).     jms.setAsyncStopListener(true).     camelContext.addComponent(componentName, jms).     return camelContext. }
false;public;0;3;;public void configure() throws Exception {     from("activemq:queue:hello2").to("mock:result"). }
false;protected;0;7;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from("activemq:queue:hello2").to("mock:result").         }     }. }
