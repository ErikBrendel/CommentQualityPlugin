# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractTransactionTest -> protected Processor findProcessorByClass(Processor processor, Class findClass);1206431352;Find the first instance of a Processor of a given class.__@param processor_@param findClass_@return;protected Processor findProcessorByClass(Processor processor, Class findClass) {__        while (true) {__            processor = unwrapDeadLetter(processor)___            if (processor instanceof DelegateAsyncProcessor) {_                processor = ((DelegateAsyncProcessor)processor).getProcessor()__            } else if (processor instanceof DelegateProcessor) {__                _                processor = ((DelegateProcessor)processor).getProcessor()__            } else if (processor instanceof Pipeline) {__                for (Processor p : ((Pipeline)processor).getProcessors()) {__                    p = findProcessorByClass(p, findClass)__                    if (p != null && p.getClass().isAssignableFrom(findClass)) {__                        processor = p__                        return processor__                    }_                }_            } else {__                return processor__            }_        }_    };find,the,first,instance,of,a,processor,of,a,given,class,param,processor,param,find,class,return;protected,processor,find,processor,by,class,processor,processor,class,find,class,while,true,processor,unwrap,dead,letter,processor,if,processor,instanceof,delegate,async,processor,processor,delegate,async,processor,processor,get,processor,else,if,processor,instanceof,delegate,processor,processor,delegate,processor,processor,get,processor,else,if,processor,instanceof,pipeline,for,processor,p,pipeline,processor,get,processors,p,find,processor,by,class,p,find,class,if,p,null,p,get,class,is,assignable,from,find,class,processor,p,return,processor,else,return,processor
AbstractTransactionTest -> protected Processor findProcessorByClass(Processor processor, Class findClass);1230007958;Find the first instance of a Processor of a given class.__@param processor_@param findClass_@return;protected Processor findProcessorByClass(Processor processor, Class findClass) {__        while (true) {__            processor = unwrapDeadLetter(processor)___            if (processor instanceof DelegateAsyncProcessor) {_                processor = ((DelegateAsyncProcessor)processor).getProcessor()__            } else if (processor instanceof DelegateProcessor) {__                _                processor = ((DelegateProcessor)processor).getProcessor()__            } else if (processor instanceof Pipeline) {__                for (Processor p : ((Pipeline)processor).getProcessors()) {__                    p = findProcessorByClass(p, findClass)__                    if (p != null && p.getClass().isAssignableFrom(findClass)) {__                        processor = p__                        return processor__                    }_                }_            } else {__                return processor__            }_        }_    };find,the,first,instance,of,a,processor,of,a,given,class,param,processor,param,find,class,return;protected,processor,find,processor,by,class,processor,processor,class,find,class,while,true,processor,unwrap,dead,letter,processor,if,processor,instanceof,delegate,async,processor,processor,delegate,async,processor,processor,get,processor,else,if,processor,instanceof,delegate,processor,processor,delegate,processor,processor,get,processor,else,if,processor,instanceof,pipeline,for,processor,p,pipeline,processor,get,processors,p,find,processor,by,class,p,find,class,if,p,null,p,get,class,is,assignable,from,find,class,processor,p,return,processor,else,return,processor
AbstractTransactionTest -> protected Processor findProcessorByClass(Processor processor, Class findClass);1233174028;Find the first instance of a Processor of a given class.__@param processor_@param findClass_@return;protected Processor findProcessorByClass(Processor processor, Class findClass) {__        while (true) {__            processor = unwrapDeadLetter(processor)___            if (processor instanceof DelegateAsyncProcessor) {_                processor = ((DelegateAsyncProcessor)processor).getProcessor()__            } else if (processor instanceof DelegateProcessor) {__                _                processor = ((DelegateProcessor)processor).getProcessor()__            } else if (processor instanceof Pipeline) {__                for (Processor p : ((Pipeline)processor).getProcessors()) {__                    p = findProcessorByClass(p, findClass)__                    if (p != null && p.getClass().isAssignableFrom(findClass)) {__                        processor = p__                        return processor__                    }_                }_            } else {__                return processor__            }_        }_    };find,the,first,instance,of,a,processor,of,a,given,class,param,processor,param,find,class,return;protected,processor,find,processor,by,class,processor,processor,class,find,class,while,true,processor,unwrap,dead,letter,processor,if,processor,instanceof,delegate,async,processor,processor,delegate,async,processor,processor,get,processor,else,if,processor,instanceof,delegate,processor,processor,delegate,processor,processor,get,processor,else,if,processor,instanceof,pipeline,for,processor,p,pipeline,processor,get,processors,p,find,processor,by,class,p,find,class,if,p,null,p,get,class,is,assignable,from,find,class,processor,p,return,processor,else,return,processor
AbstractTransactionTest -> protected Processor findProcessorByClass(Processor processor, Class findClass);1238678930;Find the first instance of a Processor of a given class.;protected Processor findProcessorByClass(Processor processor, Class findClass) {_        while (true) {_            processor = unwrapDeadLetter(processor)___            if (processor instanceof DelegateAsyncProcessor) {_                processor = ((DelegateAsyncProcessor)processor).getProcessor()__            } else if (processor instanceof DelegateProcessor) {_                _                processor = ((DelegateProcessor)processor).getProcessor()__            } else if (processor instanceof Pipeline) {_                for (Processor p : ((Pipeline)processor).getProcessors()) {_                    p = findProcessorByClass(p, findClass)__                    if (p != null && p.getClass().isAssignableFrom(findClass)) {_                        processor = p__                        return processor__                    }_                }_            } else {_                return processor__            }_        }_    };find,the,first,instance,of,a,processor,of,a,given,class;protected,processor,find,processor,by,class,processor,processor,class,find,class,while,true,processor,unwrap,dead,letter,processor,if,processor,instanceof,delegate,async,processor,processor,delegate,async,processor,processor,get,processor,else,if,processor,instanceof,delegate,processor,processor,delegate,processor,processor,get,processor,else,if,processor,instanceof,pipeline,for,processor,p,pipeline,processor,get,processors,p,find,processor,by,class,p,find,class,if,p,null,p,get,class,is,assignable,from,find,class,processor,p,return,processor,else,return,processor
AbstractTransactionTest -> protected Processor findProcessorByClass(Processor processor, Class findClass);1238866818;Find the first instance of a Processor of a given class.;protected Processor findProcessorByClass(Processor processor, Class findClass) {_        while (true) {_            processor = unwrapDeadLetter(processor)___            if (processor instanceof DelegateAsyncProcessor) {_                processor = ((DelegateAsyncProcessor)processor).getProcessor()__            } else if (processor instanceof DelegateProcessor) {_                _                processor = ((DelegateProcessor)processor).getProcessor()__            } else if (processor instanceof Pipeline) {_                for (Processor p : ((Pipeline)processor).getProcessors()) {_                    p = findProcessorByClass(p, findClass)__                    if (p != null && p.getClass().isAssignableFrom(findClass)) {_                        processor = p__                        return processor__                    }_                }_            } else {_                return processor__            }_        }_    };find,the,first,instance,of,a,processor,of,a,given,class;protected,processor,find,processor,by,class,processor,processor,class,find,class,while,true,processor,unwrap,dead,letter,processor,if,processor,instanceof,delegate,async,processor,processor,delegate,async,processor,processor,get,processor,else,if,processor,instanceof,delegate,processor,processor,delegate,processor,processor,get,processor,else,if,processor,instanceof,pipeline,for,processor,p,pipeline,processor,get,processors,p,find,processor,by,class,p,find,class,if,p,null,p,get,class,is,assignable,from,find,class,processor,p,return,processor,else,return,processor
AbstractTransactionTest -> protected Processor findProcessorByClass(Processor processor, Class findClass);1238903231;Find the first instance of a Processor of a given class.;protected Processor findProcessorByClass(Processor processor, Class findClass) {_        while (true) {_            processor = unwrapDeadLetter(processor)___            if (processor instanceof DelegateAsyncProcessor) {_                processor = ((DelegateAsyncProcessor)processor).getProcessor()__            } else if (processor instanceof DelegateProcessor) {_                _                processor = ((DelegateProcessor)processor).getProcessor()__            } else if (processor instanceof Pipeline) {_                for (Processor p : ((Pipeline)processor).getProcessors()) {_                    p = findProcessorByClass(p, findClass)__                    if (p != null && p.getClass().isAssignableFrom(findClass)) {_                        processor = p__                        return processor__                    }_                }_            } else {_                return processor__            }_        }_    };find,the,first,instance,of,a,processor,of,a,given,class;protected,processor,find,processor,by,class,processor,processor,class,find,class,while,true,processor,unwrap,dead,letter,processor,if,processor,instanceof,delegate,async,processor,processor,delegate,async,processor,processor,get,processor,else,if,processor,instanceof,delegate,processor,processor,delegate,processor,processor,get,processor,else,if,processor,instanceof,pipeline,for,processor,p,pipeline,processor,get,processors,p,find,processor,by,class,p,find,class,if,p,null,p,get,class,is,assignable,from,find,class,processor,p,return,processor,else,return,processor
AbstractTransactionTest -> protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route);1206431352;By default routes should be wrapped in the {@link DeadLetterChannel} so_lets unwrap that and return the actual processor;protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route) {__        _        _        _        _        EventDrivenConsumerRoute consumerRoute = assertIsInstanceOf(EventDrivenConsumerRoute.class, route)__        Processor processor = findProcessorByClass(consumerRoute.getProcessor(),_                                                   ConditionalExceptionProcessor.class)__        return assertIsInstanceOf(ConditionalExceptionProcessor.class, processor)__    };by,default,routes,should,be,wrapped,in,the,link,dead,letter,channel,so,lets,unwrap,that,and,return,the,actual,processor;protected,conditional,exception,processor,get,conditional,exception,processor,route,route,event,driven,consumer,route,consumer,route,assert,is,instance,of,event,driven,consumer,route,class,route,processor,processor,find,processor,by,class,consumer,route,get,processor,conditional,exception,processor,class,return,assert,is,instance,of,conditional,exception,processor,class,processor
AbstractTransactionTest -> protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route);1230007958;By default routes should be wrapped in the {@link DeadLetterChannel} so_lets unwrap that and return the actual processor;protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route) {__        _        _        _        _        EventDrivenConsumerRoute consumerRoute = assertIsInstanceOf(EventDrivenConsumerRoute.class, route)__        Processor processor = findProcessorByClass(consumerRoute.getProcessor(),_                                                   ConditionalExceptionProcessor.class)__        return assertIsInstanceOf(ConditionalExceptionProcessor.class, processor)__    };by,default,routes,should,be,wrapped,in,the,link,dead,letter,channel,so,lets,unwrap,that,and,return,the,actual,processor;protected,conditional,exception,processor,get,conditional,exception,processor,route,route,event,driven,consumer,route,consumer,route,assert,is,instance,of,event,driven,consumer,route,class,route,processor,processor,find,processor,by,class,consumer,route,get,processor,conditional,exception,processor,class,return,assert,is,instance,of,conditional,exception,processor,class,processor
AbstractTransactionTest -> protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route);1233174028;By default routes should be wrapped in the {@link DeadLetterChannel} so_lets unwrap that and return the actual processor;protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route) {__        _        _        _        _        EventDrivenConsumerRoute consumerRoute = assertIsInstanceOf(EventDrivenConsumerRoute.class, route)__        Processor processor = findProcessorByClass(consumerRoute.getProcessor(),_                                                   ConditionalExceptionProcessor.class)__        return assertIsInstanceOf(ConditionalExceptionProcessor.class, processor)__    };by,default,routes,should,be,wrapped,in,the,link,dead,letter,channel,so,lets,unwrap,that,and,return,the,actual,processor;protected,conditional,exception,processor,get,conditional,exception,processor,route,route,event,driven,consumer,route,consumer,route,assert,is,instance,of,event,driven,consumer,route,class,route,processor,processor,find,processor,by,class,consumer,route,get,processor,conditional,exception,processor,class,return,assert,is,instance,of,conditional,exception,processor,class,processor
AbstractTransactionTest -> protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route);1238678930;By default routes should be wrapped in the {@link DeadLetterChannel} so_lets unwrap that and return the actual processor;protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route) {__        _        _        _        _        EventDrivenConsumerRoute consumerRoute = assertIsInstanceOf(EventDrivenConsumerRoute.class, route)__        Processor processor = findProcessorByClass(consumerRoute.getProcessor(),_                                                   ConditionalExceptionProcessor.class)__        return assertIsInstanceOf(ConditionalExceptionProcessor.class, processor)__    };by,default,routes,should,be,wrapped,in,the,link,dead,letter,channel,so,lets,unwrap,that,and,return,the,actual,processor;protected,conditional,exception,processor,get,conditional,exception,processor,route,route,event,driven,consumer,route,consumer,route,assert,is,instance,of,event,driven,consumer,route,class,route,processor,processor,find,processor,by,class,consumer,route,get,processor,conditional,exception,processor,class,return,assert,is,instance,of,conditional,exception,processor,class,processor
AbstractTransactionTest -> protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route);1238866818;By default routes should be wrapped in the {@link DeadLetterChannel} so_lets unwrap that and return the actual processor;protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route) {__        _        _        _        _        EventDrivenConsumerRoute consumerRoute = assertIsInstanceOf(EventDrivenConsumerRoute.class, route)__        Processor processor = findProcessorByClass(consumerRoute.getProcessor(),_                                                   ConditionalExceptionProcessor.class)__        return assertIsInstanceOf(ConditionalExceptionProcessor.class, processor)__    };by,default,routes,should,be,wrapped,in,the,link,dead,letter,channel,so,lets,unwrap,that,and,return,the,actual,processor;protected,conditional,exception,processor,get,conditional,exception,processor,route,route,event,driven,consumer,route,consumer,route,assert,is,instance,of,event,driven,consumer,route,class,route,processor,processor,find,processor,by,class,consumer,route,get,processor,conditional,exception,processor,class,return,assert,is,instance,of,conditional,exception,processor,class,processor
AbstractTransactionTest -> protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route);1238903231;By default routes should be wrapped in the {@link DeadLetterChannel} so_lets unwrap that and return the actual processor;protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route) {__        _        _        _        _        EventDrivenConsumerRoute consumerRoute = assertIsInstanceOf(EventDrivenConsumerRoute.class, route)__        Processor processor = findProcessorByClass(consumerRoute.getProcessor(),_                                                   ConditionalExceptionProcessor.class)__        return assertIsInstanceOf(ConditionalExceptionProcessor.class, processor)__    };by,default,routes,should,be,wrapped,in,the,link,dead,letter,channel,so,lets,unwrap,that,and,return,the,actual,processor;protected,conditional,exception,processor,get,conditional,exception,processor,route,route,event,driven,consumer,route,consumer,route,assert,is,instance,of,event,driven,consumer,route,class,route,processor,processor,find,processor,by,class,consumer,route,get,processor,conditional,exception,processor,class,return,assert,is,instance,of,conditional,exception,processor,class,processor
AbstractTransactionTest -> protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route);1240301710;By default routes should be wrapped in the {@link DeadLetterChannel} so_lets unwrap that and return the actual processor;protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route) {__        _        _        _        _        EventDrivenConsumerRoute consumerRoute = assertIsInstanceOf(EventDrivenConsumerRoute.class, route)__        Processor processor = findProcessorByClass(consumerRoute.getProcessor(),_                                                   ConditionalExceptionProcessor.class)__        return assertIsInstanceOf(ConditionalExceptionProcessor.class, processor)__    };by,default,routes,should,be,wrapped,in,the,link,dead,letter,channel,so,lets,unwrap,that,and,return,the,actual,processor;protected,conditional,exception,processor,get,conditional,exception,processor,route,route,event,driven,consumer,route,consumer,route,assert,is,instance,of,event,driven,consumer,route,class,route,processor,processor,find,processor,by,class,consumer,route,get,processor,conditional,exception,processor,class,return,assert,is,instance,of,conditional,exception,processor,class,processor
AbstractTransactionTest -> protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route);1240926011;By default routes should be wrapped in the {@link DeadLetterChannel} so_lets unwrap that and return the actual processor;protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route) {__        _        _        _        _        EventDrivenConsumerRoute consumerRoute = assertIsInstanceOf(EventDrivenConsumerRoute.class, route)__        Processor processor = findProcessorByClass(consumerRoute.getProcessor(),_                                                   ConditionalExceptionProcessor.class)__        return assertIsInstanceOf(ConditionalExceptionProcessor.class, processor)__    };by,default,routes,should,be,wrapped,in,the,link,dead,letter,channel,so,lets,unwrap,that,and,return,the,actual,processor;protected,conditional,exception,processor,get,conditional,exception,processor,route,route,event,driven,consumer,route,consumer,route,assert,is,instance,of,event,driven,consumer,route,class,route,processor,processor,find,processor,by,class,consumer,route,get,processor,conditional,exception,processor,class,return,assert,is,instance,of,conditional,exception,processor,class,processor
AbstractTransactionTest -> protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route);1241516761;By default routes should be wrapped in the {@link DeadLetterChannel} so_lets unwrap that and return the actual processor;protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route) {__        _        _        _        _        EventDrivenConsumerRoute consumerRoute = assertIsInstanceOf(EventDrivenConsumerRoute.class, route)__        Processor processor = findProcessorByClass(consumerRoute.getProcessor(),_                                                   ConditionalExceptionProcessor.class)__        return assertIsInstanceOf(ConditionalExceptionProcessor.class, processor)__    };by,default,routes,should,be,wrapped,in,the,link,dead,letter,channel,so,lets,unwrap,that,and,return,the,actual,processor;protected,conditional,exception,processor,get,conditional,exception,processor,route,route,event,driven,consumer,route,consumer,route,assert,is,instance,of,event,driven,consumer,route,class,route,processor,processor,find,processor,by,class,consumer,route,get,processor,conditional,exception,processor,class,return,assert,is,instance,of,conditional,exception,processor,class,processor
AbstractTransactionTest -> protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route);1245411994;By default routes should be wrapped in the {@link DeadLetterChannel} so_lets unwrap that and return the actual processor;protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route) {__        _        _        _        _        EventDrivenConsumerRoute consumerRoute = assertIsInstanceOf(EventDrivenConsumerRoute.class, route)__        Processor processor = findProcessorByClass(consumerRoute.getProcessor(),_                                                   ConditionalExceptionProcessor.class)__        return assertIsInstanceOf(ConditionalExceptionProcessor.class, processor)__    };by,default,routes,should,be,wrapped,in,the,link,dead,letter,channel,so,lets,unwrap,that,and,return,the,actual,processor;protected,conditional,exception,processor,get,conditional,exception,processor,route,route,event,driven,consumer,route,consumer,route,assert,is,instance,of,event,driven,consumer,route,class,route,processor,processor,find,processor,by,class,consumer,route,get,processor,conditional,exception,processor,class,return,assert,is,instance,of,conditional,exception,processor,class,processor
AbstractTransactionTest -> protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route);1247086812;By default routes should be wrapped in the {@link DeadLetterChannel} so_lets unwrap that and return the actual processor;protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route) {__        _        _        _        _        EventDrivenConsumerRoute consumerRoute = assertIsInstanceOf(EventDrivenConsumerRoute.class, route)__        Processor processor = findProcessorByClass(consumerRoute.getProcessor(),_                                                   ConditionalExceptionProcessor.class)__        return assertIsInstanceOf(ConditionalExceptionProcessor.class, processor)__    };by,default,routes,should,be,wrapped,in,the,link,dead,letter,channel,so,lets,unwrap,that,and,return,the,actual,processor;protected,conditional,exception,processor,get,conditional,exception,processor,route,route,event,driven,consumer,route,consumer,route,assert,is,instance,of,event,driven,consumer,route,class,route,processor,processor,find,processor,by,class,consumer,route,get,processor,conditional,exception,processor,class,return,assert,is,instance,of,conditional,exception,processor,class,processor
AbstractTransactionTest -> protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route);1276689803;By default routes should be wrapped in the {@link DeadLetterChannel} so_lets unwrap that and return the actual processor;protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route) {__        _        _        _        _        EventDrivenConsumerRoute consumerRoute = assertIsInstanceOf(EventDrivenConsumerRoute.class, route)__        Processor processor = findProcessorByClass(consumerRoute.getProcessor(),_                                                   ConditionalExceptionProcessor.class)__        return assertIsInstanceOf(ConditionalExceptionProcessor.class, processor)__    };by,default,routes,should,be,wrapped,in,the,link,dead,letter,channel,so,lets,unwrap,that,and,return,the,actual,processor;protected,conditional,exception,processor,get,conditional,exception,processor,route,route,event,driven,consumer,route,consumer,route,assert,is,instance,of,event,driven,consumer,route,class,route,processor,processor,find,processor,by,class,consumer,route,get,processor,conditional,exception,processor,class,return,assert,is,instance,of,conditional,exception,processor,class,processor
AbstractTransactionTest -> protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route);1295274532;By default routes should be wrapped in the {@link DeadLetterChannel} so_lets unwrap that and return the actual processor;protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route) {_        _        _        EventDrivenConsumerRoute consumerRoute = assertIsInstanceOf(EventDrivenConsumerRoute.class, route)__        Processor processor = findProcessorByClass(consumerRoute.getProcessor(), ConditionalExceptionProcessor.class)__        return assertIsInstanceOf(ConditionalExceptionProcessor.class, processor)__    };by,default,routes,should,be,wrapped,in,the,link,dead,letter,channel,so,lets,unwrap,that,and,return,the,actual,processor;protected,conditional,exception,processor,get,conditional,exception,processor,route,route,event,driven,consumer,route,consumer,route,assert,is,instance,of,event,driven,consumer,route,class,route,processor,processor,find,processor,by,class,consumer,route,get,processor,conditional,exception,processor,class,return,assert,is,instance,of,conditional,exception,processor,class,processor
AbstractTransactionTest -> protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route);1295281467;By default routes should be wrapped in the {@link DeadLetterChannel} so_lets unwrap that and return the actual processor;protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route) {_        _        _        EventDrivenConsumerRoute consumerRoute = assertIsInstanceOf(EventDrivenConsumerRoute.class, route)__        Processor processor = findProcessorByClass(consumerRoute.getProcessor(), ConditionalExceptionProcessor.class)__        return assertIsInstanceOf(ConditionalExceptionProcessor.class, processor)__    };by,default,routes,should,be,wrapped,in,the,link,dead,letter,channel,so,lets,unwrap,that,and,return,the,actual,processor;protected,conditional,exception,processor,get,conditional,exception,processor,route,route,event,driven,consumer,route,consumer,route,assert,is,instance,of,event,driven,consumer,route,class,route,processor,processor,find,processor,by,class,consumer,route,get,processor,conditional,exception,processor,class,return,assert,is,instance,of,conditional,exception,processor,class,processor
AbstractTransactionTest -> protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route);1315425180;By default routes should be wrapped in the {@link DeadLetterChannel} so_lets unwrap that and return the actual processor;protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route) {_        _        _        EventDrivenConsumerRoute consumerRoute = assertIsInstanceOf(EventDrivenConsumerRoute.class, route)__        Processor processor = findProcessorByClass(consumerRoute.getProcessor(), ConditionalExceptionProcessor.class)__        return assertIsInstanceOf(ConditionalExceptionProcessor.class, processor)__    };by,default,routes,should,be,wrapped,in,the,link,dead,letter,channel,so,lets,unwrap,that,and,return,the,actual,processor;protected,conditional,exception,processor,get,conditional,exception,processor,route,route,event,driven,consumer,route,consumer,route,assert,is,instance,of,event,driven,consumer,route,class,route,processor,processor,find,processor,by,class,consumer,route,get,processor,conditional,exception,processor,class,return,assert,is,instance,of,conditional,exception,processor,class,processor
AbstractTransactionTest -> protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route);1326392736;By default routes should be wrapped in the {@link DeadLetterChannel} so_lets unwrap that and return the actual processor;protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route) {_        _        _        EventDrivenConsumerRoute consumerRoute = assertIsInstanceOf(EventDrivenConsumerRoute.class, route)__        Processor processor = findProcessorByClass(consumerRoute.getProcessor(), ConditionalExceptionProcessor.class)__        return assertIsInstanceOf(ConditionalExceptionProcessor.class, processor)__    };by,default,routes,should,be,wrapped,in,the,link,dead,letter,channel,so,lets,unwrap,that,and,return,the,actual,processor;protected,conditional,exception,processor,get,conditional,exception,processor,route,route,event,driven,consumer,route,consumer,route,assert,is,instance,of,event,driven,consumer,route,class,route,processor,processor,find,processor,by,class,consumer,route,get,processor,conditional,exception,processor,class,return,assert,is,instance,of,conditional,exception,processor,class,processor
AbstractTransactionTest -> protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route);1359097834;By default routes should be wrapped in the {@link DeadLetterChannel} so_lets unwrap that and return the actual processor;protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route) {_        _        _        EventDrivenConsumerRoute consumerRoute = assertIsInstanceOf(EventDrivenConsumerRoute.class, route)__        Processor processor = findProcessorByClass(consumerRoute.getProcessor(), ConditionalExceptionProcessor.class)__        return assertIsInstanceOf(ConditionalExceptionProcessor.class, processor)__    };by,default,routes,should,be,wrapped,in,the,link,dead,letter,channel,so,lets,unwrap,that,and,return,the,actual,processor;protected,conditional,exception,processor,get,conditional,exception,processor,route,route,event,driven,consumer,route,consumer,route,assert,is,instance,of,event,driven,consumer,route,class,route,processor,processor,find,processor,by,class,consumer,route,get,processor,conditional,exception,processor,class,return,assert,is,instance,of,conditional,exception,processor,class,processor
AbstractTransactionTest -> protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route);1461912409;By default routes should be wrapped in the {@link DeadLetterChannel} so_lets unwrap that and return the actual processor;protected ConditionalExceptionProcessor getConditionalExceptionProcessor(Route route) {_        _        _        EventDrivenConsumerRoute consumerRoute = assertIsInstanceOf(EventDrivenConsumerRoute.class, route)__        Processor processor = findProcessorByClass(consumerRoute.getProcessor(), ConditionalExceptionProcessor.class)__        return assertIsInstanceOf(ConditionalExceptionProcessor.class, processor)__    };by,default,routes,should,be,wrapped,in,the,link,dead,letter,channel,so,lets,unwrap,that,and,return,the,actual,processor;protected,conditional,exception,processor,get,conditional,exception,processor,route,route,event,driven,consumer,route,consumer,route,assert,is,instance,of,event,driven,consumer,route,class,route,processor,processor,find,processor,by,class,consumer,route,get,processor,conditional,exception,processor,class,return,assert,is,instance,of,conditional,exception,processor,class,processor
