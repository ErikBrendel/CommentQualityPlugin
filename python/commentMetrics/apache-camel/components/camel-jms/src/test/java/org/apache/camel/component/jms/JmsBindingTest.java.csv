commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Before public void setup() {     when(mockJmsConfiguration.isFormatDateHeadersToIso8601()).thenReturn(false).     when(mockJmsConfiguration.isMapJmsMessage()).thenReturn(true).     when(mockJmsEndpoint.getConfiguration()).thenReturn(mockJmsConfiguration).     jmsBindingUnderTest = new JmsBinding(mockJmsEndpoint). }
false;public;0;4;;@Test public void testExtractNullBodyFromJmsShouldReturnNull() throws Exception {     assertNull(jmsBindingUnderTest.extractBodyFromJms(null, new ActiveMQBlobMessage())). }
false;public;0;5;;@Test public void testGetValidJmsHeaderValueWithBigIntegerShouldSucceed() {     Object value = jmsBindingUnderTest.getValidJMSHeaderValue("foo", new BigInteger("12345")).     assertEquals("12345", value). }
false;public;0;5;;@Test public void testGetValidJmsHeaderValueWithBigDecimalShouldSucceed() {     Object value = jmsBindingUnderTest.getValidJMSHeaderValue("foo", new BigDecimal("123.45")).     assertEquals("123.45", value). }
false;public;0;6;;@Test public void testGetValidJmsHeaderValueWithDateShouldSucceed() {     Object value = jmsBindingUnderTest.getValidJMSHeaderValue("foo", Date.from(instant)).     assertNotNull(value). // We can't assert further as the returned value is bound to the machine time zone and locale }
false;public;0;6;;@Test public void testGetValidJmsHeaderValueWithIso8601DateShouldSucceed() {     when(mockJmsConfiguration.isFormatDateHeadersToIso8601()).thenReturn(true).     Object value = jmsBindingUnderTest.getValidJMSHeaderValue("foo", Date.from(instant)).     assertEquals("2018-02-26T19:12:18Z", value). }
