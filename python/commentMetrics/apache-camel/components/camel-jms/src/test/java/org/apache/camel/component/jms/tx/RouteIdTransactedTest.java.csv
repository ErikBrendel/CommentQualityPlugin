commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;protected ClassPathXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("/org/apache/camel/component/jms/tx/RouteIdTransactedTest.xml"). }
false;public;0;12;;@Test public void testRouteId() throws Exception {     getMockEndpoint("mock:error").expectedMessageCount(0).     getMockEndpoint("mock:result").expectedMessageCount(1).     template.sendBody("activemq:queue:foo", "Hello World").     assertMockEndpointsSatisfied().     String id = context.getRouteDefinitions().get(0).getId().     assertEquals("myCoolRoute", id). }
false;public;0;12;;@Test public void testRouteIdFailed() throws Exception {     getMockEndpoint("mock:error").expectedMessageCount(1).     getMockEndpoint("mock:result").expectedMessageCount(0).     template.sendBody("activemq:queue:foo", "Kabom").     assertMockEndpointsSatisfied().     String id = context.getRouteDefinitions().get(0).getId().     assertEquals("myCoolRoute", id). }
false;public;0;12;;@Override public void configure() throws Exception {     from("activemq:queue:foo?transacted=true").id("myCoolRoute").onException(IllegalArgumentException.class).handled(true).to("log:bar").to("mock:error").end().transacted().choice().when(body().contains("Kabom")).throwException(new IllegalArgumentException("Damn")).otherwise().to("mock:result").end(). }
false;protected;0;17;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("activemq:queue:foo?transacted=true").id("myCoolRoute").onException(IllegalArgumentException.class).handled(true).to("log:bar").to("mock:error").end().transacted().choice().when(body().contains("Kabom")).throwException(new IllegalArgumentException("Damn")).otherwise().to("mock:result").end().         }     }. }
