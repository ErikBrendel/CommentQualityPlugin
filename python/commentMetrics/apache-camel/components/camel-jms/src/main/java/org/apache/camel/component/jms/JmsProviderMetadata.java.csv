commented;modifiers;parameterAmount;loc;comment;code
true;public;1;8;/**  * Lazily loads the temporary queue type if one has not been explicitly configured  * via calling the {@link #setTemporaryQueueType(Class)}  */ ;/**  * Lazily loads the temporary queue type if one has not been explicitly configured  * via calling the {@link #setTemporaryQueueType(Class)}  */ public Class<? extends TemporaryQueue> getTemporaryQueueType(JmsOperations template) {     Class<? extends TemporaryQueue> answer = getTemporaryQueueType().     if (answer == null) {         loadTemporaryDestinationTypes(template).         answer = getTemporaryQueueType().     }     return answer. }
true;public;1;8;/**  * Lazily loads the temporary topic type if one has not been explicitly configured  * via calling the {@link #setTemporaryTopicType(Class)}  */ ;/**  * Lazily loads the temporary topic type if one has not been explicitly configured  * via calling the {@link #setTemporaryTopicType(Class)}  */ public Class<? extends TemporaryTopic> getTemporaryTopicType(JmsOperations template) {     Class<? extends TemporaryTopic> answer = getTemporaryTopicType().     if (answer == null) {         loadTemporaryDestinationTypes(template).         answer = getTemporaryTopicType().     }     return answer. }
false;public;0;3;;// Properties // ------------------------------------------------------------------------- public Class<? extends TemporaryQueue> getTemporaryQueueType() {     return temporaryQueueType. }
false;public;1;3;;public void setTemporaryQueueType(Class<? extends TemporaryQueue> temporaryQueueType) {     this.temporaryQueueType = temporaryQueueType. }
false;public;0;3;;public Class<? extends TemporaryTopic> getTemporaryTopicType() {     return temporaryTopicType. }
false;public;1;3;;public void setTemporaryTopicType(Class<? extends TemporaryTopic> temporaryTopicType) {     this.temporaryTopicType = temporaryTopicType. }
false;public;1;11;;public Object doInJms(Session session) throws JMSException {     TemporaryQueue queue = session.createTemporaryQueue().     setTemporaryQueueType(queue.getClass()).     TemporaryTopic topic = session.createTemporaryTopic().     setTemporaryTopicType(topic.getClass()).     queue.delete().     topic.delete().     return null. }
true;protected;1;18;// ------------------------------------------------------------------------- ;// Implementation methods // ------------------------------------------------------------------------- protected void loadTemporaryDestinationTypes(JmsOperations template) {     if (template == null) {         throw new IllegalArgumentException("No JmsTemplate supplied!").     }     template.execute(new SessionCallback<Object>() {          public Object doInJms(Session session) throws JMSException {             TemporaryQueue queue = session.createTemporaryQueue().             setTemporaryQueueType(queue.getClass()).             TemporaryTopic topic = session.createTemporaryTopic().             setTemporaryTopicType(topic.getClass()).             queue.delete().             topic.delete().             return null.         }     }). }
