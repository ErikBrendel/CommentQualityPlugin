commented;modifiers;parameterAmount;loc;comment;code
false;public;2;17;;public List<Exchange> doInJms(Session session, QueueBrowser browser) throws JMSException {     int size = endpoint.getMaximumBrowseSize().     if (size <= 0) {         size = Integer.MAX_VALUE.     }     // not the best implementation in the world as we have to browse     // the entire queue, which could be massive     List<Exchange> answer = new ArrayList<>().     Enumeration<?> iter = browser.getEnumeration().     for (int i = 0. i < size && iter.hasMoreElements(). i++) {         Message message = (Message) iter.nextElement().         Exchange exchange = endpoint.createExchange(message, session).         answer.add(exchange).     }     return answer. }
false;public;2;17;;public List<Exchange> doInJms(Session session, QueueBrowser browser) throws JMSException {     int size = endpoint.getMaximumBrowseSize().     if (size <= 0) {         size = Integer.MAX_VALUE.     }     // not the best implementation in the world as we have to browse     // the entire queue, which could be massive     List<Exchange> answer = new ArrayList<>().     Enumeration<?> iter = browser.getEnumeration().     for (int i = 0. i < size && iter.hasMoreElements(). i++) {         Message message = (Message) iter.nextElement().         Exchange exchange = endpoint.createExchange(message, session).         answer.add(exchange).     }     return answer. }
false;public;3;43;;public List<Exchange> browse(JmsOperations template, String queue, final JmsQueueEndpoint endpoint) {     if (endpoint.getSelector() != null) {         return template.browseSelected(queue, endpoint.getSelector(), new BrowserCallback<List<Exchange>>() {              public List<Exchange> doInJms(Session session, QueueBrowser browser) throws JMSException {                 int size = endpoint.getMaximumBrowseSize().                 if (size <= 0) {                     size = Integer.MAX_VALUE.                 }                 // not the best implementation in the world as we have to browse                 // the entire queue, which could be massive                 List<Exchange> answer = new ArrayList<>().                 Enumeration<?> iter = browser.getEnumeration().                 for (int i = 0. i < size && iter.hasMoreElements(). i++) {                     Message message = (Message) iter.nextElement().                     Exchange exchange = endpoint.createExchange(message, session).                     answer.add(exchange).                 }                 return answer.             }         }).     } else {         return template.browse(queue, new BrowserCallback<List<Exchange>>() {              public List<Exchange> doInJms(Session session, QueueBrowser browser) throws JMSException {                 int size = endpoint.getMaximumBrowseSize().                 if (size <= 0) {                     size = Integer.MAX_VALUE.                 }                 // not the best implementation in the world as we have to browse                 // the entire queue, which could be massive                 List<Exchange> answer = new ArrayList<>().                 Enumeration<?> iter = browser.getEnumeration().                 for (int i = 0. i < size && iter.hasMoreElements(). i++) {                     Message message = (Message) iter.nextElement().                     Exchange exchange = endpoint.createExchange(message, session).                     answer.add(exchange).                 }                 return answer.             }         }).     } }
