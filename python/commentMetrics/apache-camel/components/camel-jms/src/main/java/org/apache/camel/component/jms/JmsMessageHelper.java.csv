# id;timestamp;commentText;codeText;commentWords;codeWords
JmsMessageHelper -> public static boolean isVendor(Session session, String vendor);1508614181;Is the JMS session from a given vendor__@param session the JMS session_@param vendor the vendor, such as <tt>ActiveMQ</tt>, or <tt>Artemis</tt>_@return <tt>true</tt> if from the vendor, <tt>false</tt> if not or not possible to determine;public static boolean isVendor(Session session, String vendor) {_        if ("Artemis".equals(vendor)) {_            return session.getClass().getName().startsWith("org.apache.activemq.artemis")__        } else if ("ActiveMQ".equals(vendor)) {_            return !isVendor(session, "Artemis") && session.getClass().getName().startsWith("org.apache.activemq")__        }_        return false__    };is,the,jms,session,from,a,given,vendor,param,session,the,jms,session,param,vendor,the,vendor,such,as,tt,active,mq,tt,or,tt,artemis,tt,return,tt,true,tt,if,from,the,vendor,tt,false,tt,if,not,or,not,possible,to,determine;public,static,boolean,is,vendor,session,session,string,vendor,if,artemis,equals,vendor,return,session,get,class,get,name,starts,with,org,apache,activemq,artemis,else,if,active,mq,equals,vendor,return,is,vendor,session,artemis,session,get,class,get,name,starts,with,org,apache,activemq,return,false
JmsMessageHelper -> public static boolean isVendor(Session session, String vendor);1520284101;Is the JMS session from a given vendor__@param session the JMS session_@param vendor the vendor, such as <tt>ActiveMQ</tt>, or <tt>Artemis</tt>_@return <tt>true</tt> if from the vendor, <tt>false</tt> if not or not possible to determine;public static boolean isVendor(Session session, String vendor) {_        if ("Artemis".equals(vendor)) {_            return session.getClass().getName().startsWith("org.apache.activemq.artemis")__        } else if ("ActiveMQ".equals(vendor)) {_            return !isVendor(session, "Artemis") && session.getClass().getName().startsWith("org.apache.activemq")__        }_        return false__    };is,the,jms,session,from,a,given,vendor,param,session,the,jms,session,param,vendor,the,vendor,such,as,tt,active,mq,tt,or,tt,artemis,tt,return,tt,true,tt,if,from,the,vendor,tt,false,tt,if,not,or,not,possible,to,determine;public,static,boolean,is,vendor,session,session,string,vendor,if,artemis,equals,vendor,return,session,get,class,get,name,starts,with,org,apache,activemq,artemis,else,if,active,mq,equals,vendor,return,is,vendor,session,artemis,session,get,class,get,name,starts,with,org,apache,activemq,return,false
JmsMessageHelper -> public static boolean isVendor(Session session, String vendor);1524001544;Is the JMS session from a given vendor__@param session the JMS session_@param vendor the vendor, such as <tt>ActiveMQ</tt>, or <tt>Artemis</tt>_@return <tt>true</tt> if from the vendor, <tt>false</tt> if not or not possible to determine;public static boolean isVendor(Session session, String vendor) {_        if ("Artemis".equals(vendor)) {_            return session.getClass().getName().startsWith("org.apache.activemq.artemis")__        } else if ("ActiveMQ".equals(vendor)) {_            return !isVendor(session, "Artemis") && session.getClass().getName().startsWith("org.apache.activemq")__        }_        return false__    };is,the,jms,session,from,a,given,vendor,param,session,the,jms,session,param,vendor,the,vendor,such,as,tt,active,mq,tt,or,tt,artemis,tt,return,tt,true,tt,if,from,the,vendor,tt,false,tt,if,not,or,not,possible,to,determine;public,static,boolean,is,vendor,session,session,string,vendor,if,artemis,equals,vendor,return,session,get,class,get,name,starts,with,org,apache,activemq,artemis,else,if,active,mq,equals,vendor,return,is,vendor,session,artemis,session,get,class,get,name,starts,with,org,apache,activemq,return,false
JmsMessageHelper -> public static boolean isVendor(Session session, String vendor);1537290824;Is the JMS session from a given vendor__@param session the JMS session_@param vendor the vendor, such as <tt>ActiveMQ</tt>, or <tt>Artemis</tt>_@return <tt>true</tt> if from the vendor, <tt>false</tt> if not or not possible to determine;public static boolean isVendor(Session session, String vendor) {_        if ("Artemis".equals(vendor)) {_            return session.getClass().getName().startsWith("org.apache.activemq.artemis")__        } else if ("ActiveMQ".equals(vendor)) {_            return !isVendor(session, "Artemis") && session.getClass().getName().startsWith("org.apache.activemq")__        }_        return false__    };is,the,jms,session,from,a,given,vendor,param,session,the,jms,session,param,vendor,the,vendor,such,as,tt,active,mq,tt,or,tt,artemis,tt,return,tt,true,tt,if,from,the,vendor,tt,false,tt,if,not,or,not,possible,to,determine;public,static,boolean,is,vendor,session,session,string,vendor,if,artemis,equals,vendor,return,session,get,class,get,name,starts,with,org,apache,activemq,artemis,else,if,active,mq,equals,vendor,return,is,vendor,session,artemis,session,get,class,get,name,starts,with,org,apache,activemq,return,false
JmsMessageHelper -> public static boolean isVendor(Session session, String vendor);1540108158;Is the JMS session from a given vendor__@param session the JMS session_@param vendor the vendor, such as <tt>ActiveMQ</tt>, or <tt>Artemis</tt>_@return <tt>true</tt> if from the vendor, <tt>false</tt> if not or not possible to determine;public static boolean isVendor(Session session, String vendor) {_        if ("Artemis".equals(vendor)) {_            return session.getClass().getName().startsWith("org.apache.activemq.artemis")__        } else if ("ActiveMQ".equals(vendor)) {_            return !isVendor(session, "Artemis") && session.getClass().getName().startsWith("org.apache.activemq")__        }_        return false__    };is,the,jms,session,from,a,given,vendor,param,session,the,jms,session,param,vendor,the,vendor,such,as,tt,active,mq,tt,or,tt,artemis,tt,return,tt,true,tt,if,from,the,vendor,tt,false,tt,if,not,or,not,possible,to,determine;public,static,boolean,is,vendor,session,session,string,vendor,if,artemis,equals,vendor,return,session,get,class,get,name,starts,with,org,apache,activemq,artemis,else,if,active,mq,equals,vendor,return,is,vendor,session,artemis,session,get,class,get,name,starts,with,org,apache,activemq,return,false
JmsMessageHelper -> public static boolean isVendor(Session session, String vendor);1540108161;Is the JMS session from a given vendor__@param session the JMS session_@param vendor the vendor, such as <tt>ActiveMQ</tt>, or <tt>Artemis</tt>_@return <tt>true</tt> if from the vendor, <tt>false</tt> if not or not possible to determine;public static boolean isVendor(Session session, String vendor) {_        if ("Artemis".equals(vendor)) {_            return session.getClass().getName().startsWith("org.apache.activemq.artemis")__        } else if ("ActiveMQ".equals(vendor)) {_            return !isVendor(session, "Artemis") && session.getClass().getName().startsWith("org.apache.activemq")__        }_        return false__    };is,the,jms,session,from,a,given,vendor,param,session,the,jms,session,param,vendor,the,vendor,such,as,tt,active,mq,tt,or,tt,artemis,tt,return,tt,true,tt,if,from,the,vendor,tt,false,tt,if,not,or,not,possible,to,determine;public,static,boolean,is,vendor,session,session,string,vendor,if,artemis,equals,vendor,return,session,get,class,get,name,starts,with,org,apache,activemq,artemis,else,if,active,mq,equals,vendor,return,is,vendor,session,artemis,session,get,class,get,name,starts,with,org,apache,activemq,return,false
JmsMessageHelper -> public static boolean isVendor(Session session, String vendor);1540108163;Is the JMS session from a given vendor__@param session the JMS session_@param vendor the vendor, such as <tt>ActiveMQ</tt>, or <tt>Artemis</tt>_@return <tt>true</tt> if from the vendor, <tt>false</tt> if not or not possible to determine;public static boolean isVendor(Session session, String vendor) {_        if ("Artemis".equals(vendor)) {_            return session.getClass().getName().startsWith("org.apache.activemq.artemis")__        } else if ("ActiveMQ".equals(vendor)) {_            return !isVendor(session, "Artemis") && session.getClass().getName().startsWith("org.apache.activemq")__        }_        return false__    };is,the,jms,session,from,a,given,vendor,param,session,the,jms,session,param,vendor,the,vendor,such,as,tt,active,mq,tt,or,tt,artemis,tt,return,tt,true,tt,if,from,the,vendor,tt,false,tt,if,not,or,not,possible,to,determine;public,static,boolean,is,vendor,session,session,string,vendor,if,artemis,equals,vendor,return,session,get,class,get,name,starts,with,org,apache,activemq,artemis,else,if,active,mq,equals,vendor,return,is,vendor,session,artemis,session,get,class,get,name,starts,with,org,apache,activemq,return,false
JmsMessageHelper -> public static String getJMSMessageID(Message message);1351701243;Gets the JMSMessageID from the message.__@param message  the message_@return the JMSMessageID, or <tt>null</tt> if not able to get;public static String getJMSMessageID(Message message) {_        try {_            return message.getJMSMessageID()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsmessage,id,from,the,message,param,message,the,message,return,the,jmsmessage,id,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmsmessage,id,message,message,try,return,message,get,jmsmessage,id,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSMessageID(Message message);1379495956;Gets the JMSMessageID from the message.__@param message  the message_@return the JMSMessageID, or <tt>null</tt> if not able to get;public static String getJMSMessageID(Message message) {_        try {_            return message.getJMSMessageID()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsmessage,id,from,the,message,param,message,the,message,return,the,jmsmessage,id,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmsmessage,id,message,message,try,return,message,get,jmsmessage,id,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSMessageID(Message message);1389726752;Gets the JMSMessageID from the message.__@param message  the message_@return the JMSMessageID, or <tt>null</tt> if not able to get;public static String getJMSMessageID(Message message) {_        try {_            return message.getJMSMessageID()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsmessage,id,from,the,message,param,message,the,message,return,the,jmsmessage,id,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmsmessage,id,message,message,try,return,message,get,jmsmessage,id,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSMessageID(Message message);1392400400;Gets the JMSMessageID from the message.__@param message  the message_@return the JMSMessageID, or <tt>null</tt> if not able to get;public static String getJMSMessageID(Message message) {_        try {_            return message.getJMSMessageID()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsmessage,id,from,the,message,param,message,the,message,return,the,jmsmessage,id,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmsmessage,id,message,message,try,return,message,get,jmsmessage,id,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSMessageID(Message message);1405374721;Gets the JMSMessageID from the message.__@param message  the message_@return the JMSMessageID, or <tt>null</tt> if not able to get;public static String getJMSMessageID(Message message) {_        try {_            return message.getJMSMessageID()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsmessage,id,from,the,message,param,message,the,message,return,the,jmsmessage,id,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmsmessage,id,message,message,try,return,message,get,jmsmessage,id,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSMessageID(Message message);1436441288;Gets the JMSMessageID from the message.__@param message  the message_@return the JMSMessageID, or <tt>null</tt> if not able to get;public static String getJMSMessageID(Message message) {_        try {_            return message.getJMSMessageID()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsmessage,id,from,the,message,param,message,the,message,return,the,jmsmessage,id,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmsmessage,id,message,message,try,return,message,get,jmsmessage,id,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSMessageID(Message message);1445671545;Gets the JMSMessageID from the message.__@param message  the message_@return the JMSMessageID, or <tt>null</tt> if not able to get;public static String getJMSMessageID(Message message) {_        try {_            return message.getJMSMessageID()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsmessage,id,from,the,message,param,message,the,message,return,the,jmsmessage,id,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmsmessage,id,message,message,try,return,message,get,jmsmessage,id,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSMessageID(Message message);1476453102;Gets the JMSMessageID from the message.__@param message  the message_@return the JMSMessageID, or <tt>null</tt> if not able to get;public static String getJMSMessageID(Message message) {_        try {_            return message.getJMSMessageID()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsmessage,id,from,the,message,param,message,the,message,return,the,jmsmessage,id,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmsmessage,id,message,message,try,return,message,get,jmsmessage,id,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSMessageID(Message message);1476453102;Gets the JMSMessageID from the message.__@param message  the message_@return the JMSMessageID, or <tt>null</tt> if not able to get;public static String getJMSMessageID(Message message) {_        try {_            return message.getJMSMessageID()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsmessage,id,from,the,message,param,message,the,message,return,the,jmsmessage,id,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmsmessage,id,message,message,try,return,message,get,jmsmessage,id,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSMessageID(Message message);1508614181;Gets the JMSMessageID from the message.__@param message  the message_@return the JMSMessageID, or <tt>null</tt> if not able to get;public static String getJMSMessageID(Message message) {_        try {_            return message.getJMSMessageID()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsmessage,id,from,the,message,param,message,the,message,return,the,jmsmessage,id,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmsmessage,id,message,message,try,return,message,get,jmsmessage,id,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSMessageID(Message message);1520284101;Gets the JMSMessageID from the message.__@param message  the message_@return the JMSMessageID, or <tt>null</tt> if not able to get;public static String getJMSMessageID(Message message) {_        try {_            return message.getJMSMessageID()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsmessage,id,from,the,message,param,message,the,message,return,the,jmsmessage,id,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmsmessage,id,message,message,try,return,message,get,jmsmessage,id,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSMessageID(Message message);1524001544;Gets the JMSMessageID from the message.__@param message  the message_@return the JMSMessageID, or <tt>null</tt> if not able to get;public static String getJMSMessageID(Message message) {_        try {_            return message.getJMSMessageID()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsmessage,id,from,the,message,param,message,the,message,return,the,jmsmessage,id,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmsmessage,id,message,message,try,return,message,get,jmsmessage,id,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSMessageID(Message message);1537290824;Gets the JMSMessageID from the message.__@param message  the message_@return the JMSMessageID, or <tt>null</tt> if not able to get;public static String getJMSMessageID(Message message) {_        try {_            return message.getJMSMessageID()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsmessage,id,from,the,message,param,message,the,message,return,the,jmsmessage,id,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmsmessage,id,message,message,try,return,message,get,jmsmessage,id,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSMessageID(Message message);1540108158;Gets the JMSMessageID from the message.__@param message  the message_@return the JMSMessageID, or <tt>null</tt> if not able to get;public static String getJMSMessageID(Message message) {_        try {_            return message.getJMSMessageID()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsmessage,id,from,the,message,param,message,the,message,return,the,jmsmessage,id,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmsmessage,id,message,message,try,return,message,get,jmsmessage,id,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSMessageID(Message message);1540108161;Gets the JMSMessageID from the message.__@param message  the message_@return the JMSMessageID, or <tt>null</tt> if not able to get;public static String getJMSMessageID(Message message) {_        try {_            return message.getJMSMessageID()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsmessage,id,from,the,message,param,message,the,message,return,the,jmsmessage,id,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmsmessage,id,message,message,try,return,message,get,jmsmessage,id,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSMessageID(Message message);1540108163;Gets the JMSMessageID from the message.__@param message  the message_@return the JMSMessageID, or <tt>null</tt> if not able to get;public static String getJMSMessageID(Message message) {_        try {_            return message.getJMSMessageID()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsmessage,id,from,the,message,param,message,the,message,return,the,jmsmessage,id,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmsmessage,id,message,message,try,return,message,get,jmsmessage,id,catch,exception,e,return,null
JmsMessageHelper -> public static Object getProperty(Message jmsMessage, String name) throws JMSException;1379495956;Gets a JMS property__@param jmsMessage the JMS message_@param name       name of the property to get_@return the property value, or <tt>null</tt> if does not exists_@throws JMSException can be thrown;public static Object getProperty(Message jmsMessage, String name) throws JMSException {_        Object value = jmsMessage.getObjectProperty(name)__        if (value == null) {_            value = jmsMessage.getStringProperty(name)__        }_        return value__    };gets,a,jms,property,param,jms,message,the,jms,message,param,name,name,of,the,property,to,get,return,the,property,value,or,tt,null,tt,if,does,not,exists,throws,jmsexception,can,be,thrown;public,static,object,get,property,message,jms,message,string,name,throws,jmsexception,object,value,jms,message,get,object,property,name,if,value,null,value,jms,message,get,string,property,name,return,value
JmsMessageHelper -> public static Object getProperty(Message jmsMessage, String name) throws JMSException;1389726752;Gets a JMS property__@param jmsMessage the JMS message_@param name       name of the property to get_@return the property value, or <tt>null</tt> if does not exists_@throws JMSException can be thrown;public static Object getProperty(Message jmsMessage, String name) throws JMSException {_        Object value = jmsMessage.getObjectProperty(name)__        if (value == null) {_            value = jmsMessage.getStringProperty(name)__        }_        return value__    };gets,a,jms,property,param,jms,message,the,jms,message,param,name,name,of,the,property,to,get,return,the,property,value,or,tt,null,tt,if,does,not,exists,throws,jmsexception,can,be,thrown;public,static,object,get,property,message,jms,message,string,name,throws,jmsexception,object,value,jms,message,get,object,property,name,if,value,null,value,jms,message,get,string,property,name,return,value
JmsMessageHelper -> public static Object getProperty(Message jmsMessage, String name) throws JMSException;1392400400;Gets a JMS property__@param jmsMessage the JMS message_@param name       name of the property to get_@return the property value, or <tt>null</tt> if does not exists_@throws JMSException can be thrown;public static Object getProperty(Message jmsMessage, String name) throws JMSException {_        Object value = jmsMessage.getObjectProperty(name)__        if (value == null) {_            value = jmsMessage.getStringProperty(name)__        }_        return value__    };gets,a,jms,property,param,jms,message,the,jms,message,param,name,name,of,the,property,to,get,return,the,property,value,or,tt,null,tt,if,does,not,exists,throws,jmsexception,can,be,thrown;public,static,object,get,property,message,jms,message,string,name,throws,jmsexception,object,value,jms,message,get,object,property,name,if,value,null,value,jms,message,get,string,property,name,return,value
JmsMessageHelper -> public static Object getProperty(Message jmsMessage, String name) throws JMSException;1405374721;Gets a JMS property__@param jmsMessage the JMS message_@param name       name of the property to get_@return the property value, or <tt>null</tt> if does not exists_@throws JMSException can be thrown;public static Object getProperty(Message jmsMessage, String name) throws JMSException {_        Object value = jmsMessage.getObjectProperty(name)__        if (value == null) {_            value = jmsMessage.getStringProperty(name)__        }_        return value__    };gets,a,jms,property,param,jms,message,the,jms,message,param,name,name,of,the,property,to,get,return,the,property,value,or,tt,null,tt,if,does,not,exists,throws,jmsexception,can,be,thrown;public,static,object,get,property,message,jms,message,string,name,throws,jmsexception,object,value,jms,message,get,object,property,name,if,value,null,value,jms,message,get,string,property,name,return,value
JmsMessageHelper -> public static Object getProperty(Message jmsMessage, String name) throws JMSException;1436441288;Gets a JMS property__@param jmsMessage the JMS message_@param name       name of the property to get_@return the property value, or <tt>null</tt> if does not exists_@throws JMSException can be thrown;public static Object getProperty(Message jmsMessage, String name) throws JMSException {_        Object value = jmsMessage.getObjectProperty(name)__        if (value == null) {_            value = jmsMessage.getStringProperty(name)__        }_        return value__    };gets,a,jms,property,param,jms,message,the,jms,message,param,name,name,of,the,property,to,get,return,the,property,value,or,tt,null,tt,if,does,not,exists,throws,jmsexception,can,be,thrown;public,static,object,get,property,message,jms,message,string,name,throws,jmsexception,object,value,jms,message,get,object,property,name,if,value,null,value,jms,message,get,string,property,name,return,value
JmsMessageHelper -> public static Object getProperty(Message jmsMessage, String name) throws JMSException;1445671545;Gets a JMS property__@param jmsMessage the JMS message_@param name       name of the property to get_@return the property value, or <tt>null</tt> if does not exists_@throws JMSException can be thrown;public static Object getProperty(Message jmsMessage, String name) throws JMSException {_        Object value = jmsMessage.getObjectProperty(name)__        if (value == null) {_            value = jmsMessage.getStringProperty(name)__        }_        return value__    };gets,a,jms,property,param,jms,message,the,jms,message,param,name,name,of,the,property,to,get,return,the,property,value,or,tt,null,tt,if,does,not,exists,throws,jmsexception,can,be,thrown;public,static,object,get,property,message,jms,message,string,name,throws,jmsexception,object,value,jms,message,get,object,property,name,if,value,null,value,jms,message,get,string,property,name,return,value
JmsMessageHelper -> public static Object getProperty(Message jmsMessage, String name) throws JMSException;1476453102;Gets a JMS property__@param jmsMessage the JMS message_@param name       name of the property to get_@return the property value, or <tt>null</tt> if does not exists_@throws JMSException can be thrown;public static Object getProperty(Message jmsMessage, String name) throws JMSException {_        Object value = jmsMessage.getObjectProperty(name)__        if (value == null) {_            value = jmsMessage.getStringProperty(name)__        }_        return value__    };gets,a,jms,property,param,jms,message,the,jms,message,param,name,name,of,the,property,to,get,return,the,property,value,or,tt,null,tt,if,does,not,exists,throws,jmsexception,can,be,thrown;public,static,object,get,property,message,jms,message,string,name,throws,jmsexception,object,value,jms,message,get,object,property,name,if,value,null,value,jms,message,get,string,property,name,return,value
JmsMessageHelper -> public static Object getProperty(Message jmsMessage, String name) throws JMSException;1476453102;Gets a JMS property__@param jmsMessage the JMS message_@param name       name of the property to get_@return the property value, or <tt>null</tt> if does not exists_@throws JMSException can be thrown;public static Object getProperty(Message jmsMessage, String name) throws JMSException {_        Object value = jmsMessage.getObjectProperty(name)__        if (value == null) {_            value = jmsMessage.getStringProperty(name)__        }_        return value__    };gets,a,jms,property,param,jms,message,the,jms,message,param,name,name,of,the,property,to,get,return,the,property,value,or,tt,null,tt,if,does,not,exists,throws,jmsexception,can,be,thrown;public,static,object,get,property,message,jms,message,string,name,throws,jmsexception,object,value,jms,message,get,object,property,name,if,value,null,value,jms,message,get,string,property,name,return,value
JmsMessageHelper -> public static Object getProperty(Message jmsMessage, String name) throws JMSException;1508614181;Gets a JMS property__@param jmsMessage the JMS message_@param name       name of the property to get_@return the property value, or <tt>null</tt> if does not exists_@throws JMSException can be thrown;public static Object getProperty(Message jmsMessage, String name) throws JMSException {_        Object value = jmsMessage.getObjectProperty(name)__        if (value == null) {_            value = jmsMessage.getStringProperty(name)__        }_        return value__    };gets,a,jms,property,param,jms,message,the,jms,message,param,name,name,of,the,property,to,get,return,the,property,value,or,tt,null,tt,if,does,not,exists,throws,jmsexception,can,be,thrown;public,static,object,get,property,message,jms,message,string,name,throws,jmsexception,object,value,jms,message,get,object,property,name,if,value,null,value,jms,message,get,string,property,name,return,value
JmsMessageHelper -> public static Object getProperty(Message jmsMessage, String name) throws JMSException;1520284101;Gets a JMS property__@param jmsMessage the JMS message_@param name       name of the property to get_@return the property value, or <tt>null</tt> if does not exists_@throws JMSException can be thrown;public static Object getProperty(Message jmsMessage, String name) throws JMSException {_        Object value = jmsMessage.getObjectProperty(name)__        if (value == null) {_            value = jmsMessage.getStringProperty(name)__        }_        return value__    };gets,a,jms,property,param,jms,message,the,jms,message,param,name,name,of,the,property,to,get,return,the,property,value,or,tt,null,tt,if,does,not,exists,throws,jmsexception,can,be,thrown;public,static,object,get,property,message,jms,message,string,name,throws,jmsexception,object,value,jms,message,get,object,property,name,if,value,null,value,jms,message,get,string,property,name,return,value
JmsMessageHelper -> public static Object getProperty(Message jmsMessage, String name) throws JMSException;1524001544;Gets a JMS property__@param jmsMessage the JMS message_@param name       name of the property to get_@return the property value, or <tt>null</tt> if does not exists_@throws JMSException can be thrown;public static Object getProperty(Message jmsMessage, String name) throws JMSException {_        Object value = jmsMessage.getObjectProperty(name)__        if (value == null) {_            value = jmsMessage.getStringProperty(name)__        }_        return value__    };gets,a,jms,property,param,jms,message,the,jms,message,param,name,name,of,the,property,to,get,return,the,property,value,or,tt,null,tt,if,does,not,exists,throws,jmsexception,can,be,thrown;public,static,object,get,property,message,jms,message,string,name,throws,jmsexception,object,value,jms,message,get,object,property,name,if,value,null,value,jms,message,get,string,property,name,return,value
JmsMessageHelper -> public static Object getProperty(Message jmsMessage, String name) throws JMSException;1537290824;Gets a JMS property__@param jmsMessage the JMS message_@param name       name of the property to get_@return the property value, or <tt>null</tt> if does not exists_@throws JMSException can be thrown;public static Object getProperty(Message jmsMessage, String name) throws JMSException {_        Object value = jmsMessage.getObjectProperty(name)__        if (value == null) {_            value = jmsMessage.getStringProperty(name)__        }_        return value__    };gets,a,jms,property,param,jms,message,the,jms,message,param,name,name,of,the,property,to,get,return,the,property,value,or,tt,null,tt,if,does,not,exists,throws,jmsexception,can,be,thrown;public,static,object,get,property,message,jms,message,string,name,throws,jmsexception,object,value,jms,message,get,object,property,name,if,value,null,value,jms,message,get,string,property,name,return,value
JmsMessageHelper -> public static Object getProperty(Message jmsMessage, String name) throws JMSException;1540108158;Gets a JMS property__@param jmsMessage the JMS message_@param name       name of the property to get_@return the property value, or <tt>null</tt> if does not exists_@throws JMSException can be thrown;public static Object getProperty(Message jmsMessage, String name) throws JMSException {_        Object value = jmsMessage.getObjectProperty(name)__        if (value == null) {_            value = jmsMessage.getStringProperty(name)__        }_        return value__    };gets,a,jms,property,param,jms,message,the,jms,message,param,name,name,of,the,property,to,get,return,the,property,value,or,tt,null,tt,if,does,not,exists,throws,jmsexception,can,be,thrown;public,static,object,get,property,message,jms,message,string,name,throws,jmsexception,object,value,jms,message,get,object,property,name,if,value,null,value,jms,message,get,string,property,name,return,value
JmsMessageHelper -> public static Object getProperty(Message jmsMessage, String name) throws JMSException;1540108161;Gets a JMS property__@param jmsMessage the JMS message_@param name       name of the property to get_@return the property value, or <tt>null</tt> if does not exists_@throws JMSException can be thrown;public static Object getProperty(Message jmsMessage, String name) throws JMSException {_        Object value = jmsMessage.getObjectProperty(name)__        if (value == null) {_            value = jmsMessage.getStringProperty(name)__        }_        return value__    };gets,a,jms,property,param,jms,message,the,jms,message,param,name,name,of,the,property,to,get,return,the,property,value,or,tt,null,tt,if,does,not,exists,throws,jmsexception,can,be,thrown;public,static,object,get,property,message,jms,message,string,name,throws,jmsexception,object,value,jms,message,get,object,property,name,if,value,null,value,jms,message,get,string,property,name,return,value
JmsMessageHelper -> public static Object getProperty(Message jmsMessage, String name) throws JMSException;1540108163;Gets a JMS property__@param jmsMessage the JMS message_@param name       name of the property to get_@return the property value, or <tt>null</tt> if does not exists_@throws JMSException can be thrown;public static Object getProperty(Message jmsMessage, String name) throws JMSException {_        Object value = jmsMessage.getObjectProperty(name)__        if (value == null) {_            value = jmsMessage.getStringProperty(name)__        }_        return value__    };gets,a,jms,property,param,jms,message,the,jms,message,param,name,name,of,the,property,to,get,return,the,property,value,or,tt,null,tt,if,does,not,exists,throws,jmsexception,can,be,thrown;public,static,object,get,property,message,jms,message,string,name,throws,jmsexception,object,value,jms,message,get,object,property,name,if,value,null,value,jms,message,get,string,property,name,return,value
JmsMessageHelper -> public static Boolean getJMSRedelivered(Message message);1328014611;Gets the JMSRedelivered from the message.__@param message  the message_@return <tt>true</tt> if redelivered, <tt>false</tt> if not, <tt>null</tt> if not able to determine;public static Boolean getJMSRedelivered(Message message) {_        try {_            return message.getJMSRedelivered()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsredelivered,from,the,message,param,message,the,message,return,tt,true,tt,if,redelivered,tt,false,tt,if,not,tt,null,tt,if,not,able,to,determine;public,static,boolean,get,jmsredelivered,message,message,try,return,message,get,jmsredelivered,catch,exception,e,return,null
JmsMessageHelper -> public static Boolean getJMSRedelivered(Message message);1351701243;Gets the JMSRedelivered from the message.__@param message  the message_@return <tt>true</tt> if redelivered, <tt>false</tt> if not, <tt>null</tt> if not able to determine;public static Boolean getJMSRedelivered(Message message) {_        try {_            return message.getJMSRedelivered()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsredelivered,from,the,message,param,message,the,message,return,tt,true,tt,if,redelivered,tt,false,tt,if,not,tt,null,tt,if,not,able,to,determine;public,static,boolean,get,jmsredelivered,message,message,try,return,message,get,jmsredelivered,catch,exception,e,return,null
JmsMessageHelper -> public static Boolean getJMSRedelivered(Message message);1379495956;Gets the JMSRedelivered from the message.__@param message  the message_@return <tt>true</tt> if redelivered, <tt>false</tt> if not, <tt>null</tt> if not able to determine;public static Boolean getJMSRedelivered(Message message) {_        try {_            return message.getJMSRedelivered()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsredelivered,from,the,message,param,message,the,message,return,tt,true,tt,if,redelivered,tt,false,tt,if,not,tt,null,tt,if,not,able,to,determine;public,static,boolean,get,jmsredelivered,message,message,try,return,message,get,jmsredelivered,catch,exception,e,return,null
JmsMessageHelper -> public static Boolean getJMSRedelivered(Message message);1389726752;Gets the JMSRedelivered from the message.__@param message  the message_@return <tt>true</tt> if redelivered, <tt>false</tt> if not, <tt>null</tt> if not able to determine;public static Boolean getJMSRedelivered(Message message) {_        try {_            return message.getJMSRedelivered()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsredelivered,from,the,message,param,message,the,message,return,tt,true,tt,if,redelivered,tt,false,tt,if,not,tt,null,tt,if,not,able,to,determine;public,static,boolean,get,jmsredelivered,message,message,try,return,message,get,jmsredelivered,catch,exception,e,return,null
JmsMessageHelper -> public static Boolean getJMSRedelivered(Message message);1392400400;Gets the JMSRedelivered from the message.__@param message  the message_@return <tt>true</tt> if redelivered, <tt>false</tt> if not, <tt>null</tt> if not able to determine;public static Boolean getJMSRedelivered(Message message) {_        try {_            return message.getJMSRedelivered()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsredelivered,from,the,message,param,message,the,message,return,tt,true,tt,if,redelivered,tt,false,tt,if,not,tt,null,tt,if,not,able,to,determine;public,static,boolean,get,jmsredelivered,message,message,try,return,message,get,jmsredelivered,catch,exception,e,return,null
JmsMessageHelper -> public static Boolean getJMSRedelivered(Message message);1405374721;Gets the JMSRedelivered from the message.__@param message  the message_@return <tt>true</tt> if redelivered, <tt>false</tt> if not, <tt>null</tt> if not able to determine;public static Boolean getJMSRedelivered(Message message) {_        try {_            return message.getJMSRedelivered()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsredelivered,from,the,message,param,message,the,message,return,tt,true,tt,if,redelivered,tt,false,tt,if,not,tt,null,tt,if,not,able,to,determine;public,static,boolean,get,jmsredelivered,message,message,try,return,message,get,jmsredelivered,catch,exception,e,return,null
JmsMessageHelper -> public static Boolean getJMSRedelivered(Message message);1436441288;Gets the JMSRedelivered from the message.__@param message  the message_@return <tt>true</tt> if redelivered, <tt>false</tt> if not, <tt>null</tt> if not able to determine;public static Boolean getJMSRedelivered(Message message) {_        try {_            return message.getJMSRedelivered()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsredelivered,from,the,message,param,message,the,message,return,tt,true,tt,if,redelivered,tt,false,tt,if,not,tt,null,tt,if,not,able,to,determine;public,static,boolean,get,jmsredelivered,message,message,try,return,message,get,jmsredelivered,catch,exception,e,return,null
JmsMessageHelper -> public static Boolean getJMSRedelivered(Message message);1445671545;Gets the JMSRedelivered from the message.__@param message  the message_@return <tt>true</tt> if redelivered, <tt>false</tt> if not, <tt>null</tt> if not able to determine;public static Boolean getJMSRedelivered(Message message) {_        try {_            return message.getJMSRedelivered()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsredelivered,from,the,message,param,message,the,message,return,tt,true,tt,if,redelivered,tt,false,tt,if,not,tt,null,tt,if,not,able,to,determine;public,static,boolean,get,jmsredelivered,message,message,try,return,message,get,jmsredelivered,catch,exception,e,return,null
JmsMessageHelper -> public static Boolean getJMSRedelivered(Message message);1476453102;Gets the JMSRedelivered from the message.__@param message  the message_@return <tt>true</tt> if redelivered, <tt>false</tt> if not, <tt>null</tt> if not able to determine;public static Boolean getJMSRedelivered(Message message) {_        try {_            return message.getJMSRedelivered()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsredelivered,from,the,message,param,message,the,message,return,tt,true,tt,if,redelivered,tt,false,tt,if,not,tt,null,tt,if,not,able,to,determine;public,static,boolean,get,jmsredelivered,message,message,try,return,message,get,jmsredelivered,catch,exception,e,return,null
JmsMessageHelper -> public static Boolean getJMSRedelivered(Message message);1476453102;Gets the JMSRedelivered from the message.__@param message  the message_@return <tt>true</tt> if redelivered, <tt>false</tt> if not, <tt>null</tt> if not able to determine;public static Boolean getJMSRedelivered(Message message) {_        try {_            return message.getJMSRedelivered()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsredelivered,from,the,message,param,message,the,message,return,tt,true,tt,if,redelivered,tt,false,tt,if,not,tt,null,tt,if,not,able,to,determine;public,static,boolean,get,jmsredelivered,message,message,try,return,message,get,jmsredelivered,catch,exception,e,return,null
JmsMessageHelper -> public static Boolean getJMSRedelivered(Message message);1508614181;Gets the JMSRedelivered from the message.__@param message  the message_@return <tt>true</tt> if redelivered, <tt>false</tt> if not, <tt>null</tt> if not able to determine;public static Boolean getJMSRedelivered(Message message) {_        try {_            return message.getJMSRedelivered()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsredelivered,from,the,message,param,message,the,message,return,tt,true,tt,if,redelivered,tt,false,tt,if,not,tt,null,tt,if,not,able,to,determine;public,static,boolean,get,jmsredelivered,message,message,try,return,message,get,jmsredelivered,catch,exception,e,return,null
JmsMessageHelper -> public static Boolean getJMSRedelivered(Message message);1520284101;Gets the JMSRedelivered from the message.__@param message  the message_@return <tt>true</tt> if redelivered, <tt>false</tt> if not, <tt>null</tt> if not able to determine;public static Boolean getJMSRedelivered(Message message) {_        try {_            return message.getJMSRedelivered()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsredelivered,from,the,message,param,message,the,message,return,tt,true,tt,if,redelivered,tt,false,tt,if,not,tt,null,tt,if,not,able,to,determine;public,static,boolean,get,jmsredelivered,message,message,try,return,message,get,jmsredelivered,catch,exception,e,return,null
JmsMessageHelper -> public static Boolean getJMSRedelivered(Message message);1524001544;Gets the JMSRedelivered from the message.__@param message  the message_@return <tt>true</tt> if redelivered, <tt>false</tt> if not, <tt>null</tt> if not able to determine;public static Boolean getJMSRedelivered(Message message) {_        try {_            return message.getJMSRedelivered()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsredelivered,from,the,message,param,message,the,message,return,tt,true,tt,if,redelivered,tt,false,tt,if,not,tt,null,tt,if,not,able,to,determine;public,static,boolean,get,jmsredelivered,message,message,try,return,message,get,jmsredelivered,catch,exception,e,return,null
JmsMessageHelper -> public static Boolean getJMSRedelivered(Message message);1537290824;Gets the JMSRedelivered from the message.__@param message  the message_@return <tt>true</tt> if redelivered, <tt>false</tt> if not, <tt>null</tt> if not able to determine;public static Boolean getJMSRedelivered(Message message) {_        try {_            return message.getJMSRedelivered()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsredelivered,from,the,message,param,message,the,message,return,tt,true,tt,if,redelivered,tt,false,tt,if,not,tt,null,tt,if,not,able,to,determine;public,static,boolean,get,jmsredelivered,message,message,try,return,message,get,jmsredelivered,catch,exception,e,return,null
JmsMessageHelper -> public static Boolean getJMSRedelivered(Message message);1540108158;Gets the JMSRedelivered from the message.__@param message  the message_@return <tt>true</tt> if redelivered, <tt>false</tt> if not, <tt>null</tt> if not able to determine;public static Boolean getJMSRedelivered(Message message) {_        try {_            return message.getJMSRedelivered()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsredelivered,from,the,message,param,message,the,message,return,tt,true,tt,if,redelivered,tt,false,tt,if,not,tt,null,tt,if,not,able,to,determine;public,static,boolean,get,jmsredelivered,message,message,try,return,message,get,jmsredelivered,catch,exception,e,return,null
JmsMessageHelper -> public static Boolean getJMSRedelivered(Message message);1540108161;Gets the JMSRedelivered from the message.__@param message  the message_@return <tt>true</tt> if redelivered, <tt>false</tt> if not, <tt>null</tt> if not able to determine;public static Boolean getJMSRedelivered(Message message) {_        try {_            return message.getJMSRedelivered()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsredelivered,from,the,message,param,message,the,message,return,tt,true,tt,if,redelivered,tt,false,tt,if,not,tt,null,tt,if,not,able,to,determine;public,static,boolean,get,jmsredelivered,message,message,try,return,message,get,jmsredelivered,catch,exception,e,return,null
JmsMessageHelper -> public static Boolean getJMSRedelivered(Message message);1540108163;Gets the JMSRedelivered from the message.__@param message  the message_@return <tt>true</tt> if redelivered, <tt>false</tt> if not, <tt>null</tt> if not able to determine;public static Boolean getJMSRedelivered(Message message) {_        try {_            return message.getJMSRedelivered()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsredelivered,from,the,message,param,message,the,message,return,tt,true,tt,if,redelivered,tt,false,tt,if,not,tt,null,tt,if,not,able,to,determine;public,static,boolean,get,jmsredelivered,message,message,try,return,message,get,jmsredelivered,catch,exception,e,return,null
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1293266959;Normalizes the destination name, by removing any leading queue or topic prefixes.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(QUEUE_PREFIX)) {_            return removeStartingCharacters(destination.substring(QUEUE_PREFIX.length()), '/')__        } else if (destination.startsWith(TOPIC_PREFIX)) {_            return removeStartingCharacters(destination.substring(TOPIC_PREFIX.length()), '/')__        } else {_            return destination__        }_    };normalizes,the,destination,name,by,removing,any,leading,queue,or,topic,prefixes,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,return,remove,starting,characters,destination,substring,length,else,if,destination,starts,with,return,remove,starting,characters,destination,substring,length,else,return,destination
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1297377495;Normalizes the destination name, by removing any leading queue or topic prefixes.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(QUEUE_PREFIX)) {_            return removeStartingCharacters(destination.substring(QUEUE_PREFIX.length()), '/')__        } else if (destination.startsWith(TOPIC_PREFIX)) {_            return removeStartingCharacters(destination.substring(TOPIC_PREFIX.length()), '/')__        } else {_            return destination__        }_    };normalizes,the,destination,name,by,removing,any,leading,queue,or,topic,prefixes,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,return,remove,starting,characters,destination,substring,length,else,if,destination,starts,with,return,remove,starting,characters,destination,substring,length,else,return,destination
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1297971515;Normalizes the destination name, by removing any leading queue or topic prefixes.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(QUEUE_PREFIX)) {_            return removeStartingCharacters(destination.substring(QUEUE_PREFIX.length()), '/')__        } else if (destination.startsWith(TOPIC_PREFIX)) {_            return removeStartingCharacters(destination.substring(TOPIC_PREFIX.length()), '/')__        } else {_            return destination__        }_    };normalizes,the,destination,name,by,removing,any,leading,queue,or,topic,prefixes,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,return,remove,starting,characters,destination,substring,length,else,if,destination,starts,with,return,remove,starting,characters,destination,substring,length,else,return,destination
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1298619517;Normalizes the destination name, by removing any leading queue or topic prefixes.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(QUEUE_PREFIX)) {_            return removeStartingCharacters(destination.substring(QUEUE_PREFIX.length()), '/')__        } else if (destination.startsWith(TOPIC_PREFIX)) {_            return removeStartingCharacters(destination.substring(TOPIC_PREFIX.length()), '/')__        } else {_            return destination__        }_    };normalizes,the,destination,name,by,removing,any,leading,queue,or,topic,prefixes,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,return,remove,starting,characters,destination,substring,length,else,if,destination,starts,with,return,remove,starting,characters,destination,substring,length,else,return,destination
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1307988251;Normalizes the destination name, by removing any leading queue or topic prefixes.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(QUEUE_PREFIX)) {_            return removeStartingCharacters(destination.substring(QUEUE_PREFIX.length()), '/')__        } else if (destination.startsWith(TOPIC_PREFIX)) {_            return removeStartingCharacters(destination.substring(TOPIC_PREFIX.length()), '/')__        } else {_            return destination__        }_    };normalizes,the,destination,name,by,removing,any,leading,queue,or,topic,prefixes,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,return,remove,starting,characters,destination,substring,length,else,if,destination,starts,with,return,remove,starting,characters,destination,substring,length,else,return,destination
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1308588240;Normalizes the destination name, by removing any leading queue or topic prefixes.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(QUEUE_PREFIX)) {_            return removeStartingCharacters(destination.substring(QUEUE_PREFIX.length()), '/')__        } else if (destination.startsWith(TOPIC_PREFIX)) {_            return removeStartingCharacters(destination.substring(TOPIC_PREFIX.length()), '/')__        } else {_            return destination__        }_    };normalizes,the,destination,name,by,removing,any,leading,queue,or,topic,prefixes,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,return,remove,starting,characters,destination,substring,length,else,if,destination,starts,with,return,remove,starting,characters,destination,substring,length,else,return,destination
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1311865908;Normalizes the destination name, by removing any leading queue or topic prefixes.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(QUEUE_PREFIX)) {_            return removeStartingCharacters(destination.substring(QUEUE_PREFIX.length()), '/')__        } else if (destination.startsWith(TOPIC_PREFIX)) {_            return removeStartingCharacters(destination.substring(TOPIC_PREFIX.length()), '/')__        } else {_            return destination__        }_    };normalizes,the,destination,name,by,removing,any,leading,queue,or,topic,prefixes,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,return,remove,starting,characters,destination,substring,length,else,if,destination,starts,with,return,remove,starting,characters,destination,substring,length,else,return,destination
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1326499990;Normalizes the destination name, by removing any leading queue or topic prefixes.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(QUEUE_PREFIX)) {_            return removeStartingCharacters(destination.substring(QUEUE_PREFIX.length()), '/')__        } else if (destination.startsWith(TOPIC_PREFIX)) {_            return removeStartingCharacters(destination.substring(TOPIC_PREFIX.length()), '/')__        } else {_            return destination__        }_    };normalizes,the,destination,name,by,removing,any,leading,queue,or,topic,prefixes,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,return,remove,starting,characters,destination,substring,length,else,if,destination,starts,with,return,remove,starting,characters,destination,substring,length,else,return,destination
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1328014611;Normalizes the destination name, by removing any leading queue or topic prefixes.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(QUEUE_PREFIX)) {_            return removeStartingCharacters(destination.substring(QUEUE_PREFIX.length()), '/')__        } else if (destination.startsWith(TOPIC_PREFIX)) {_            return removeStartingCharacters(destination.substring(TOPIC_PREFIX.length()), '/')__        } else {_            return destination__        }_    };normalizes,the,destination,name,by,removing,any,leading,queue,or,topic,prefixes,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,return,remove,starting,characters,destination,substring,length,else,if,destination,starts,with,return,remove,starting,characters,destination,substring,length,else,return,destination
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1351701243;Normalizes the destination name, by removing any leading queue or topic prefixes.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(QUEUE_PREFIX)) {_            return removeStartingCharacters(destination.substring(QUEUE_PREFIX.length()), '/')__        } else if (destination.startsWith(TOPIC_PREFIX)) {_            return removeStartingCharacters(destination.substring(TOPIC_PREFIX.length()), '/')__        } else {_            return destination__        }_    };normalizes,the,destination,name,by,removing,any,leading,queue,or,topic,prefixes,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,return,remove,starting,characters,destination,substring,length,else,if,destination,starts,with,return,remove,starting,characters,destination,substring,length,else,return,destination
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1379495956;Normalizes the destination name, by removing any leading queue or topic prefixes.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(QUEUE_PREFIX)) {_            return removeStartingCharacters(destination.substring(QUEUE_PREFIX.length()), '/')__        } else if (destination.startsWith(TOPIC_PREFIX)) {_            return removeStartingCharacters(destination.substring(TOPIC_PREFIX.length()), '/')__        } else {_            return destination__        }_    };normalizes,the,destination,name,by,removing,any,leading,queue,or,topic,prefixes,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,return,remove,starting,characters,destination,substring,length,else,if,destination,starts,with,return,remove,starting,characters,destination,substring,length,else,return,destination
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1389726752;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        _        return normalizeDestinationName(destination, false)__    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,return,normalize,destination,name,destination,false
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1392400400;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        _        return normalizeDestinationName(destination, false)__    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,return,normalize,destination,name,destination,false
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1405374721;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        _        return normalizeDestinationName(destination, false)__    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,return,normalize,destination,name,destination,false
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1436441288;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        _        return normalizeDestinationName(destination, false)__    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,return,normalize,destination,name,destination,false
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1445671545;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        _        return normalizeDestinationName(destination, false)__    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,return,normalize,destination,name,destination,false
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1476453102;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        _        return normalizeDestinationName(destination, false)__    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,return,normalize,destination,name,destination,false
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1476453102;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        _        return normalizeDestinationName(destination, false)__    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,return,normalize,destination,name,destination,false
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1508614181;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        _        return normalizeDestinationName(destination, false)__    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,return,normalize,destination,name,destination,false
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1520284101;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        _        return normalizeDestinationName(destination, false)__    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,return,normalize,destination,name,destination,false
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1524001544;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        _        return normalizeDestinationName(destination, false)__    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,return,normalize,destination,name,destination,false
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1537290824;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        _        return normalizeDestinationName(destination, false)__    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,return,normalize,destination,name,destination,false
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1540108158;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        _        return normalizeDestinationName(destination, false)__    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,return,normalize,destination,name,destination,false
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1540108161;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        _        return normalizeDestinationName(destination, false)__    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,return,normalize,destination,name,destination,false
JmsMessageHelper -> public static String normalizeDestinationName(String destination);1540108163;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@return the normalized destination;public static String normalizeDestinationName(String destination) {_        _        return normalizeDestinationName(destination, false)__    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,return,normalize,destination,name,destination,false
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1298619517;Sets the JMSReplyTo on the message.__@param message  the message_@param replyTo  the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            _        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1307988251;Sets the JMSReplyTo on the message.__@param message  the message_@param replyTo  the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            _        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1308588240;Sets the JMSReplyTo on the message.__@param message  the message_@param replyTo  the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            _        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1311865908;Sets the JMSReplyTo on the message.__@param message  the message_@param replyTo  the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            _        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1326499990;Sets the JMSReplyTo on the message.__@param message  the message_@param replyTo  the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            _        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1328014611;Sets the JMSReplyTo on the message.__@param message  the message_@param replyTo  the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            _        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1351701243;Sets the JMSReplyTo on the message.__@param message  the message_@param replyTo  the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            _        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1379495956;Sets the JMSReplyTo on the message.__@param message  the message_@param replyTo  the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            _        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1389726752;Sets the JMSReplyTo on the message.__@param message  the message_@param replyTo  the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            _        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1392400400;Sets the JMSReplyTo on the message.__@param message  the message_@param replyTo  the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            _        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1405374721;Sets the JMSReplyTo on the message.__@param message  the message_@param replyTo  the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            _        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1436441288;Sets the JMSReplyTo on the message.__@param message  the message_@param replyTo  the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            _        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1445671545;Sets the JMSReplyTo on the message.__@param message  the message_@param replyTo  the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            _        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1476453102;Sets the JMSReplyTo on the message.__@param message  the message_@param replyTo  the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            _        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1476453102;Sets the JMSReplyTo on the message.__@param message  the message_@param replyTo  the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            _        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1508614181;Sets the JMSReplyTo on the message.__@param message  the message_@param replyTo  the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            _        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1520284101;Sets the JMSReplyTo on the message.__@param message  the message_@param replyTo  the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            _        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1524001544;Sets the JMSReplyTo on the message.__@param message  the message_@param replyTo  the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            _        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1537290824;Sets the JMSReplyTo on the message.__@param message  the message_@param replyTo  the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            _        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1540108158;Sets the JMSReplyTo on the message.__@param message  the message_@param replyTo  the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            _        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1540108161;Sets the JMSReplyTo on the message.__@param message  the message_@param replyTo  the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            _        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e
JmsMessageHelper -> public static void setJMSReplyTo(Message message, Destination replyTo);1540108163;Sets the JMSReplyTo on the message.__@param message  the message_@param replyTo  the reply to destination;public static void setJMSReplyTo(Message message, Destination replyTo) {_        try {_            message.setJMSReplyTo(replyTo)__        } catch (Exception e) {_            _        }_    };sets,the,jmsreply,to,on,the,message,param,message,the,message,param,reply,to,the,reply,to,destination;public,static,void,set,jmsreply,to,message,message,destination,reply,to,try,message,set,jmsreply,to,reply,to,catch,exception,e
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1274451535;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1280043089;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1293266959;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1297377495;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1297971515;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1298619517;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1307988251;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1308588240;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1311865908;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1326499990;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1328014611;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1351701243;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1379495956;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1389726752;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1392400400;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1405374721;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1436441288;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1445671545;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1476453102;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1476453102;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1508614181;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1520284101;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1524001544;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1537290824;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1540108158;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1540108161;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException;1540108163;Sets the property on the given JMS message.__@param jmsMessage  the JMS message_@param name        name of the property to set_@param value       the value_@throws JMSException can be thrown;public static void setProperty(Message jmsMessage, String name, Object value) throws JMSException {_        if (value == null) {_            return__        }_        if (value instanceof Byte) {_            jmsMessage.setByteProperty(name, (Byte) value)__        } else if (value instanceof Boolean) {_            jmsMessage.setBooleanProperty(name, (Boolean) value)__        } else if (value instanceof Double) {_            jmsMessage.setDoubleProperty(name, (Double) value)__        } else if (value instanceof Float) {_            jmsMessage.setFloatProperty(name, (Float) value)__        } else if (value instanceof Integer) {_            jmsMessage.setIntProperty(name, (Integer) value)__        } else if (value instanceof Long) {_            jmsMessage.setLongProperty(name, (Long) value)__        } else if (value instanceof Short) {_            jmsMessage.setShortProperty(name, (Short) value)__        } else if (value instanceof String) {_            jmsMessage.setStringProperty(name, (String) value)__        } else {_            _            jmsMessage.setObjectProperty(name, value)__        }_    };sets,the,property,on,the,given,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,set,param,value,the,value,throws,jmsexception,can,be,thrown;public,static,void,set,property,message,jms,message,string,name,object,value,throws,jmsexception,if,value,null,return,if,value,instanceof,byte,jms,message,set,byte,property,name,byte,value,else,if,value,instanceof,boolean,jms,message,set,boolean,property,name,boolean,value,else,if,value,instanceof,double,jms,message,set,double,property,name,double,value,else,if,value,instanceof,float,jms,message,set,float,property,name,float,value,else,if,value,instanceof,integer,jms,message,set,int,property,name,integer,value,else,if,value,instanceof,long,jms,message,set,long,property,name,long,value,else,if,value,instanceof,short,jms,message,set,short,property,name,short,value,else,if,value,instanceof,string,jms,message,set,string,property,name,string,value,else,jms,message,set,object,property,name,value
JmsMessageHelper -> public static String getStringProperty(Message message, String propertyName);1405374721;Gets the String Properties from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getStringProperty(Message message, String propertyName) {_        try {_            return message.getStringProperty(propertyName)__        } catch (Exception e) {_            _        }__        return null__    };gets,the,string,properties,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,string,property,message,message,string,property,name,try,return,message,get,string,property,property,name,catch,exception,e,return,null
JmsMessageHelper -> public static String getStringProperty(Message message, String propertyName);1436441288;Gets the String Properties from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getStringProperty(Message message, String propertyName) {_        try {_            return message.getStringProperty(propertyName)__        } catch (Exception e) {_            _        }__        return null__    };gets,the,string,properties,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,string,property,message,message,string,property,name,try,return,message,get,string,property,property,name,catch,exception,e,return,null
JmsMessageHelper -> public static String getStringProperty(Message message, String propertyName);1445671545;Gets the String Properties from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getStringProperty(Message message, String propertyName) {_        try {_            return message.getStringProperty(propertyName)__        } catch (Exception e) {_            _        }__        return null__    };gets,the,string,properties,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,string,property,message,message,string,property,name,try,return,message,get,string,property,property,name,catch,exception,e,return,null
JmsMessageHelper -> public static String getStringProperty(Message message, String propertyName);1476453102;Gets the String Properties from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getStringProperty(Message message, String propertyName) {_        try {_            return message.getStringProperty(propertyName)__        } catch (Exception e) {_            _        }__        return null__    };gets,the,string,properties,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,string,property,message,message,string,property,name,try,return,message,get,string,property,property,name,catch,exception,e,return,null
JmsMessageHelper -> public static String getStringProperty(Message message, String propertyName);1476453102;Gets the String Properties from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getStringProperty(Message message, String propertyName) {_        try {_            return message.getStringProperty(propertyName)__        } catch (Exception e) {_            _        }__        return null__    };gets,the,string,properties,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,string,property,message,message,string,property,name,try,return,message,get,string,property,property,name,catch,exception,e,return,null
JmsMessageHelper -> public static String getStringProperty(Message message, String propertyName);1508614181;Gets the String Properties from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getStringProperty(Message message, String propertyName) {_        try {_            return message.getStringProperty(propertyName)__        } catch (Exception e) {_            _        }__        return null__    };gets,the,string,properties,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,string,property,message,message,string,property,name,try,return,message,get,string,property,property,name,catch,exception,e,return,null
JmsMessageHelper -> public static String getStringProperty(Message message, String propertyName);1520284101;Gets the String Properties from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getStringProperty(Message message, String propertyName) {_        try {_            return message.getStringProperty(propertyName)__        } catch (Exception e) {_            _        }__        return null__    };gets,the,string,properties,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,string,property,message,message,string,property,name,try,return,message,get,string,property,property,name,catch,exception,e,return,null
JmsMessageHelper -> public static String getStringProperty(Message message, String propertyName);1524001544;Gets the String Properties from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getStringProperty(Message message, String propertyName) {_        try {_            return message.getStringProperty(propertyName)__        } catch (Exception e) {_            _        }__        return null__    };gets,the,string,properties,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,string,property,message,message,string,property,name,try,return,message,get,string,property,property,name,catch,exception,e,return,null
JmsMessageHelper -> public static String getStringProperty(Message message, String propertyName);1537290824;Gets the String Properties from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getStringProperty(Message message, String propertyName) {_        try {_            return message.getStringProperty(propertyName)__        } catch (Exception e) {_            _        }__        return null__    };gets,the,string,properties,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,string,property,message,message,string,property,name,try,return,message,get,string,property,property,name,catch,exception,e,return,null
JmsMessageHelper -> public static String getStringProperty(Message message, String propertyName);1540108158;Gets the String Properties from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getStringProperty(Message message, String propertyName) {_        try {_            return message.getStringProperty(propertyName)__        } catch (Exception e) {_            _        }__        return null__    };gets,the,string,properties,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,string,property,message,message,string,property,name,try,return,message,get,string,property,property,name,catch,exception,e,return,null
JmsMessageHelper -> public static String getStringProperty(Message message, String propertyName);1540108161;Gets the String Properties from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getStringProperty(Message message, String propertyName) {_        try {_            return message.getStringProperty(propertyName)__        } catch (Exception e) {_            _        }__        return null__    };gets,the,string,properties,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,string,property,message,message,string,property,name,try,return,message,get,string,property,property,name,catch,exception,e,return,null
JmsMessageHelper -> public static String getStringProperty(Message message, String propertyName);1540108163;Gets the String Properties from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getStringProperty(Message message, String propertyName) {_        try {_            return message.getStringProperty(propertyName)__        } catch (Exception e) {_            _        }__        return null__    };gets,the,string,properties,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,string,property,message,message,string,property,name,try,return,message,get,string,property,property,name,catch,exception,e,return,null
JmsMessageHelper -> public static boolean isTopicPrefix(String destination);1392400400;Whether the destination name has either topic or temp topic prefix.__@param destination the destination_@return <tt>true</tt> if topic or temp-topic prefix, <tt>false</tt> otherwise;public static boolean isTopicPrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(TOPIC_PREFIX) || destination.startsWith(TEMP_TOPIC_PREFIX)__    };whether,the,destination,name,has,either,topic,or,temp,topic,prefix,param,destination,the,destination,return,tt,true,tt,if,topic,or,temp,topic,prefix,tt,false,tt,otherwise;public,static,boolean,is,topic,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,destination,starts,with
JmsMessageHelper -> public static boolean isTopicPrefix(String destination);1405374721;Whether the destination name has either topic or temp topic prefix.__@param destination the destination_@return <tt>true</tt> if topic or temp-topic prefix, <tt>false</tt> otherwise;public static boolean isTopicPrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(TOPIC_PREFIX) || destination.startsWith(TEMP_TOPIC_PREFIX)__    };whether,the,destination,name,has,either,topic,or,temp,topic,prefix,param,destination,the,destination,return,tt,true,tt,if,topic,or,temp,topic,prefix,tt,false,tt,otherwise;public,static,boolean,is,topic,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,destination,starts,with
JmsMessageHelper -> public static boolean isTopicPrefix(String destination);1436441288;Whether the destination name has either topic or temp topic prefix.__@param destination the destination_@return <tt>true</tt> if topic or temp-topic prefix, <tt>false</tt> otherwise;public static boolean isTopicPrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(TOPIC_PREFIX) || destination.startsWith(TEMP_TOPIC_PREFIX)__    };whether,the,destination,name,has,either,topic,or,temp,topic,prefix,param,destination,the,destination,return,tt,true,tt,if,topic,or,temp,topic,prefix,tt,false,tt,otherwise;public,static,boolean,is,topic,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,destination,starts,with
JmsMessageHelper -> public static boolean isTopicPrefix(String destination);1445671545;Whether the destination name has either topic or temp topic prefix.__@param destination the destination_@return <tt>true</tt> if topic or temp-topic prefix, <tt>false</tt> otherwise;public static boolean isTopicPrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(TOPIC_PREFIX) || destination.startsWith(TEMP_TOPIC_PREFIX)__    };whether,the,destination,name,has,either,topic,or,temp,topic,prefix,param,destination,the,destination,return,tt,true,tt,if,topic,or,temp,topic,prefix,tt,false,tt,otherwise;public,static,boolean,is,topic,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,destination,starts,with
JmsMessageHelper -> public static boolean isTopicPrefix(String destination);1476453102;Whether the destination name has either topic or temp topic prefix.__@param destination the destination_@return <tt>true</tt> if topic or temp-topic prefix, <tt>false</tt> otherwise;public static boolean isTopicPrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(TOPIC_PREFIX) || destination.startsWith(TEMP_TOPIC_PREFIX)__    };whether,the,destination,name,has,either,topic,or,temp,topic,prefix,param,destination,the,destination,return,tt,true,tt,if,topic,or,temp,topic,prefix,tt,false,tt,otherwise;public,static,boolean,is,topic,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,destination,starts,with
JmsMessageHelper -> public static boolean isTopicPrefix(String destination);1476453102;Whether the destination name has either topic or temp topic prefix.__@param destination the destination_@return <tt>true</tt> if topic or temp-topic prefix, <tt>false</tt> otherwise;public static boolean isTopicPrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(TOPIC_PREFIX) || destination.startsWith(TEMP_TOPIC_PREFIX)__    };whether,the,destination,name,has,either,topic,or,temp,topic,prefix,param,destination,the,destination,return,tt,true,tt,if,topic,or,temp,topic,prefix,tt,false,tt,otherwise;public,static,boolean,is,topic,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,destination,starts,with
JmsMessageHelper -> public static boolean isTopicPrefix(String destination);1508614181;Whether the destination name has either topic or temp topic prefix.__@param destination the destination_@return <tt>true</tt> if topic or temp-topic prefix, <tt>false</tt> otherwise;public static boolean isTopicPrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(TOPIC_PREFIX) || destination.startsWith(TEMP_TOPIC_PREFIX)__    };whether,the,destination,name,has,either,topic,or,temp,topic,prefix,param,destination,the,destination,return,tt,true,tt,if,topic,or,temp,topic,prefix,tt,false,tt,otherwise;public,static,boolean,is,topic,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,destination,starts,with
JmsMessageHelper -> public static boolean isTopicPrefix(String destination);1520284101;Whether the destination name has either topic or temp topic prefix.__@param destination the destination_@return <tt>true</tt> if topic or temp-topic prefix, <tt>false</tt> otherwise;public static boolean isTopicPrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(TOPIC_PREFIX) || destination.startsWith(TEMP_TOPIC_PREFIX)__    };whether,the,destination,name,has,either,topic,or,temp,topic,prefix,param,destination,the,destination,return,tt,true,tt,if,topic,or,temp,topic,prefix,tt,false,tt,otherwise;public,static,boolean,is,topic,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,destination,starts,with
JmsMessageHelper -> public static boolean isTopicPrefix(String destination);1524001544;Whether the destination name has either topic or temp topic prefix.__@param destination the destination_@return <tt>true</tt> if topic or temp-topic prefix, <tt>false</tt> otherwise;public static boolean isTopicPrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(TOPIC_PREFIX) || destination.startsWith(TEMP_TOPIC_PREFIX)__    };whether,the,destination,name,has,either,topic,or,temp,topic,prefix,param,destination,the,destination,return,tt,true,tt,if,topic,or,temp,topic,prefix,tt,false,tt,otherwise;public,static,boolean,is,topic,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,destination,starts,with
JmsMessageHelper -> public static boolean isTopicPrefix(String destination);1537290824;Whether the destination name has either topic or temp topic prefix.__@param destination the destination_@return <tt>true</tt> if topic or temp-topic prefix, <tt>false</tt> otherwise;public static boolean isTopicPrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(TOPIC_PREFIX) || destination.startsWith(TEMP_TOPIC_PREFIX)__    };whether,the,destination,name,has,either,topic,or,temp,topic,prefix,param,destination,the,destination,return,tt,true,tt,if,topic,or,temp,topic,prefix,tt,false,tt,otherwise;public,static,boolean,is,topic,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,destination,starts,with
JmsMessageHelper -> public static boolean isTopicPrefix(String destination);1540108158;Whether the destination name has either topic or temp topic prefix.__@param destination the destination_@return <tt>true</tt> if topic or temp-topic prefix, <tt>false</tt> otherwise;public static boolean isTopicPrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(TOPIC_PREFIX) || destination.startsWith(TEMP_TOPIC_PREFIX)__    };whether,the,destination,name,has,either,topic,or,temp,topic,prefix,param,destination,the,destination,return,tt,true,tt,if,topic,or,temp,topic,prefix,tt,false,tt,otherwise;public,static,boolean,is,topic,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,destination,starts,with
JmsMessageHelper -> public static boolean isTopicPrefix(String destination);1540108161;Whether the destination name has either topic or temp topic prefix.__@param destination the destination_@return <tt>true</tt> if topic or temp-topic prefix, <tt>false</tt> otherwise;public static boolean isTopicPrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(TOPIC_PREFIX) || destination.startsWith(TEMP_TOPIC_PREFIX)__    };whether,the,destination,name,has,either,topic,or,temp,topic,prefix,param,destination,the,destination,return,tt,true,tt,if,topic,or,temp,topic,prefix,tt,false,tt,otherwise;public,static,boolean,is,topic,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,destination,starts,with
JmsMessageHelper -> public static boolean isTopicPrefix(String destination);1540108163;Whether the destination name has either topic or temp topic prefix.__@param destination the destination_@return <tt>true</tt> if topic or temp-topic prefix, <tt>false</tt> otherwise;public static boolean isTopicPrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(TOPIC_PREFIX) || destination.startsWith(TEMP_TOPIC_PREFIX)__    };whether,the,destination,name,has,either,topic,or,temp,topic,prefix,param,destination,the,destination,return,tt,true,tt,if,topic,or,temp,topic,prefix,tt,false,tt,otherwise;public,static,boolean,is,topic,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,destination,starts,with
JmsMessageHelper -> public static String getJMSType(Message message);1298619517;Gets the JMSType from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1307988251;Gets the JMSType from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1308588240;Gets the JMSType from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1311865908;Gets the JMSType from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1326499990;Gets the JMSType from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1328014611;Gets the JMSType from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1351701243;Gets the JMSType from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1379495956;Gets the JMSType from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1389726752;Gets the JMSType from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1392400400;Gets the JMSType from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1405374721;Gets the JMSType from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1436441288;Gets the JMSType from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1445671545;Gets the JMSType from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1476453102;Gets the JMSType from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1476453102;Gets the JMSType from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1508614181;Gets the JMSType from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1520284101;Gets the JMSType from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1524001544;Gets the JMSType from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1537290824;Gets the JMSType from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1540108158;Gets the JMSType from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1540108161;Gets the JMSType from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSType(Message message);1540108163;Gets the JMSType from the message.__@param message  the message_@return the type, can be <tt>null</tt>;public static String getJMSType(Message message) {_        try {_            return message.getJMSType()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmstype,from,the,message,param,message,the,message,return,the,type,can,be,tt,null,tt;public,static,string,get,jmstype,message,message,try,return,message,get,jmstype,catch,exception,e,return,null
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1240897517;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<String, Object>()__        Enumeration en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, jmsMessage.getObjectProperty(key))__            }_        }__        _        jmsMessage.clearProperties()__        for (String key : map.keySet()) {_            jmsMessage.setObjectProperty(key, map.get(key))__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,string,object,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,jms,message,get,object,property,key,jms,message,clear,properties,for,string,key,map,key,set,jms,message,set,object,property,key,map,get,key,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1246452394;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<String, Object>()__        Enumeration en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, jmsMessage.getObjectProperty(key))__            }_        }__        _        jmsMessage.clearProperties()__        for (String key : map.keySet()) {_            jmsMessage.setObjectProperty(key, map.get(key))__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,string,object,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,jms,message,get,object,property,key,jms,message,clear,properties,for,string,key,map,key,set,jms,message,set,object,property,key,map,get,key,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1274451535;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<String, Object>()__        Enumeration en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, jmsMessage.getObjectProperty(key))__            }_        }__        _        jmsMessage.clearProperties()__        for (String key : map.keySet()) {_            jmsMessage.setObjectProperty(key, map.get(key))__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,string,object,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,jms,message,get,object,property,key,jms,message,clear,properties,for,string,key,map,key,set,jms,message,set,object,property,key,map,get,key,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1280043089;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<String, Object>()__        Enumeration en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, jmsMessage.getObjectProperty(key))__            }_        }__        _        jmsMessage.clearProperties()__        for (String key : map.keySet()) {_            jmsMessage.setObjectProperty(key, map.get(key))__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,string,object,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,jms,message,get,object,property,key,jms,message,clear,properties,for,string,key,map,key,set,jms,message,set,object,property,key,map,get,key,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1293266959;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<String, Object>()__        Enumeration en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, jmsMessage.getObjectProperty(key))__            }_        }__        _        jmsMessage.clearProperties()__        for (String key : map.keySet()) {_            jmsMessage.setObjectProperty(key, map.get(key))__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,string,object,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,jms,message,get,object,property,key,jms,message,clear,properties,for,string,key,map,key,set,jms,message,set,object,property,key,map,get,key,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1297377495;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<String, Object>()__        Enumeration en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, jmsMessage.getObjectProperty(key))__            }_        }__        _        jmsMessage.clearProperties()__        for (Entry<String, Object> entry : map.entrySet()) {_            jmsMessage.setObjectProperty(entry.getKey(), entry.getValue())__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,string,object,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,jms,message,get,object,property,key,jms,message,clear,properties,for,entry,string,object,entry,map,entry,set,jms,message,set,object,property,entry,get,key,entry,get,value,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1297971515;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<String, Object>()__        Enumeration en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, jmsMessage.getObjectProperty(key))__            }_        }__        _        jmsMessage.clearProperties()__        for (Entry<String, Object> entry : map.entrySet()) {_            jmsMessage.setObjectProperty(entry.getKey(), entry.getValue())__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,string,object,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,jms,message,get,object,property,key,jms,message,clear,properties,for,entry,string,object,entry,map,entry,set,jms,message,set,object,property,entry,get,key,entry,get,value,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1298619517;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<String, Object>()__        Enumeration en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, jmsMessage.getObjectProperty(key))__            }_        }__        _        jmsMessage.clearProperties()__        for (Entry<String, Object> entry : map.entrySet()) {_            jmsMessage.setObjectProperty(entry.getKey(), entry.getValue())__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,string,object,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,jms,message,get,object,property,key,jms,message,clear,properties,for,entry,string,object,entry,map,entry,set,jms,message,set,object,property,entry,get,key,entry,get,value,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1307988251;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<String, Object>()__        Enumeration en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, jmsMessage.getObjectProperty(key))__            }_        }__        _        jmsMessage.clearProperties()__        for (Entry<String, Object> entry : map.entrySet()) {_            jmsMessage.setObjectProperty(entry.getKey(), entry.getValue())__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,string,object,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,jms,message,get,object,property,key,jms,message,clear,properties,for,entry,string,object,entry,map,entry,set,jms,message,set,object,property,entry,get,key,entry,get,value,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1308588240;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<String, Object>()__        Enumeration en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, jmsMessage.getObjectProperty(key))__            }_        }__        _        jmsMessage.clearProperties()__        for (Entry<String, Object> entry : map.entrySet()) {_            jmsMessage.setObjectProperty(entry.getKey(), entry.getValue())__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,string,object,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,jms,message,get,object,property,key,jms,message,clear,properties,for,entry,string,object,entry,map,entry,set,jms,message,set,object,property,entry,get,key,entry,get,value,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1311865908;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<String, Object>()__        Enumeration en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, jmsMessage.getObjectProperty(key))__            }_        }__        _        jmsMessage.clearProperties()__        for (Entry<String, Object> entry : map.entrySet()) {_            jmsMessage.setObjectProperty(entry.getKey(), entry.getValue())__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,string,object,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,jms,message,get,object,property,key,jms,message,clear,properties,for,entry,string,object,entry,map,entry,set,jms,message,set,object,property,entry,get,key,entry,get,value,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1326499990;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<String, Object>()__        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, jmsMessage.getObjectProperty(key))__            }_        }__        _        jmsMessage.clearProperties()__        for (Entry<String, Object> entry : map.entrySet()) {_            jmsMessage.setObjectProperty(entry.getKey(), entry.getValue())__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,string,object,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,jms,message,get,object,property,key,jms,message,clear,properties,for,entry,string,object,entry,map,entry,set,jms,message,set,object,property,entry,get,key,entry,get,value,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1328014611;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<String, Object>()__        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, jmsMessage.getObjectProperty(key))__            }_        }__        _        jmsMessage.clearProperties()__        for (Entry<String, Object> entry : map.entrySet()) {_            jmsMessage.setObjectProperty(entry.getKey(), entry.getValue())__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,string,object,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,jms,message,get,object,property,key,jms,message,clear,properties,for,entry,string,object,entry,map,entry,set,jms,message,set,object,property,entry,get,key,entry,get,value,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1351701243;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<String, Object>()__        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, jmsMessage.getObjectProperty(key))__            }_        }__        _        jmsMessage.clearProperties()__        for (Entry<String, Object> entry : map.entrySet()) {_            jmsMessage.setObjectProperty(entry.getKey(), entry.getValue())__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,string,object,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,jms,message,get,object,property,key,jms,message,clear,properties,for,entry,string,object,entry,map,entry,set,jms,message,set,object,property,entry,get,key,entry,get,value,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1379495956;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<String, Object>()__        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, getProperty(jmsMessage, key))__            }_        }__        _        jmsMessage.clearProperties()__        for (Entry<String, Object> entry : map.entrySet()) {_            jmsMessage.setObjectProperty(entry.getKey(), entry.getValue())__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,string,object,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,get,property,jms,message,key,jms,message,clear,properties,for,entry,string,object,entry,map,entry,set,jms,message,set,object,property,entry,get,key,entry,get,value,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1389726752;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<String, Object>()__        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, getProperty(jmsMessage, key))__            }_        }__        _        jmsMessage.clearProperties()__        for (Entry<String, Object> entry : map.entrySet()) {_            jmsMessage.setObjectProperty(entry.getKey(), entry.getValue())__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,string,object,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,get,property,jms,message,key,jms,message,clear,properties,for,entry,string,object,entry,map,entry,set,jms,message,set,object,property,entry,get,key,entry,get,value,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1392400400;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<String, Object>()__        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, getProperty(jmsMessage, key))__            }_        }__        _        jmsMessage.clearProperties()__        for (Entry<String, Object> entry : map.entrySet()) {_            jmsMessage.setObjectProperty(entry.getKey(), entry.getValue())__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,string,object,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,get,property,jms,message,key,jms,message,clear,properties,for,entry,string,object,entry,map,entry,set,jms,message,set,object,property,entry,get,key,entry,get,value,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1405374721;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<String, Object>()__        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, getProperty(jmsMessage, key))__            }_        }__        _        jmsMessage.clearProperties()__        for (Entry<String, Object> entry : map.entrySet()) {_            jmsMessage.setObjectProperty(entry.getKey(), entry.getValue())__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,string,object,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,get,property,jms,message,key,jms,message,clear,properties,for,entry,string,object,entry,map,entry,set,jms,message,set,object,property,entry,get,key,entry,get,value,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1436441288;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<String, Object>()__        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, getProperty(jmsMessage, key))__            }_        }__        _        jmsMessage.clearProperties()__        for (Entry<String, Object> entry : map.entrySet()) {_            jmsMessage.setObjectProperty(entry.getKey(), entry.getValue())__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,string,object,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,get,property,jms,message,key,jms,message,clear,properties,for,entry,string,object,entry,map,entry,set,jms,message,set,object,property,entry,get,key,entry,get,value,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1445671545;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<String, Object>()__        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, getProperty(jmsMessage, key))__            }_        }__        _        jmsMessage.clearProperties()__        for (Entry<String, Object> entry : map.entrySet()) {_            jmsMessage.setObjectProperty(entry.getKey(), entry.getValue())__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,string,object,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,get,property,jms,message,key,jms,message,clear,properties,for,entry,string,object,entry,map,entry,set,jms,message,set,object,property,entry,get,key,entry,get,value,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1476453102;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<String, Object>()__        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, getProperty(jmsMessage, key))__            }_        }__        _        jmsMessage.clearProperties()__        for (Entry<String, Object> entry : map.entrySet()) {_            jmsMessage.setObjectProperty(entry.getKey(), entry.getValue())__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,string,object,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,get,property,jms,message,key,jms,message,clear,properties,for,entry,string,object,entry,map,entry,set,jms,message,set,object,property,entry,get,key,entry,get,value,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1476453102;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<String, Object>()__        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, getProperty(jmsMessage, key))__            }_        }__        _        jmsMessage.clearProperties()__        for (Entry<String, Object> entry : map.entrySet()) {_            jmsMessage.setObjectProperty(entry.getKey(), entry.getValue())__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,string,object,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,get,property,jms,message,key,jms,message,clear,properties,for,entry,string,object,entry,map,entry,set,jms,message,set,object,property,entry,get,key,entry,get,value,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1508614181;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<String, Object>()__        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, getProperty(jmsMessage, key))__            }_        }__        _        jmsMessage.clearProperties()__        for (Entry<String, Object> entry : map.entrySet()) {_            jmsMessage.setObjectProperty(entry.getKey(), entry.getValue())__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,string,object,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,get,property,jms,message,key,jms,message,clear,properties,for,entry,string,object,entry,map,entry,set,jms,message,set,object,property,entry,get,key,entry,get,value,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1520284101;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<String, Object>()__        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, getProperty(jmsMessage, key))__            }_        }__        _        jmsMessage.clearProperties()__        for (Entry<String, Object> entry : map.entrySet()) {_            jmsMessage.setObjectProperty(entry.getKey(), entry.getValue())__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,string,object,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,get,property,jms,message,key,jms,message,clear,properties,for,entry,string,object,entry,map,entry,set,jms,message,set,object,property,entry,get,key,entry,get,value,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1524001544;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<>()__        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, getProperty(jmsMessage, key))__            }_        }__        _        jmsMessage.clearProperties()__        for (Entry<String, Object> entry : map.entrySet()) {_            jmsMessage.setObjectProperty(entry.getKey(), entry.getValue())__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,get,property,jms,message,key,jms,message,clear,properties,for,entry,string,object,entry,map,entry,set,jms,message,set,object,property,entry,get,key,entry,get,value,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1537290824;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<>()__        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, getProperty(jmsMessage, key))__            }_        }__        _        jmsMessage.clearProperties()__        for (Entry<String, Object> entry : map.entrySet()) {_            jmsMessage.setObjectProperty(entry.getKey(), entry.getValue())__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,get,property,jms,message,key,jms,message,clear,properties,for,entry,string,object,entry,map,entry,set,jms,message,set,object,property,entry,get,key,entry,get,value,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1540108158;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<>()__        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, getProperty(jmsMessage, key))__            }_        }__        _        jmsMessage.clearProperties()__        for (Entry<String, Object> entry : map.entrySet()) {_            jmsMessage.setObjectProperty(entry.getKey(), entry.getValue())__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,get,property,jms,message,key,jms,message,clear,properties,for,entry,string,object,entry,map,entry,set,jms,message,set,object,property,entry,get,key,entry,get,value,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1540108161;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<>()__        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, getProperty(jmsMessage, key))__            }_        }__        _        jmsMessage.clearProperties()__        for (Entry<String, Object> entry : map.entrySet()) {_            jmsMessage.setObjectProperty(entry.getKey(), entry.getValue())__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,get,property,jms,message,key,jms,message,clear,properties,for,entry,string,object,entry,map,entry,set,jms,message,set,object,property,entry,get,key,entry,get,value,return,answer
JmsMessageHelper -> public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException;1540108163;Removes the property from the JMS message.__@param jmsMessage the JMS message_@param name       name of the property to remove_@return the old value of the property or <tt>null</tt> if not exists_@throws JMSException can be thrown;public static Object removeJmsProperty(Message jmsMessage, String name) throws JMSException {_        _        if (!jmsMessage.propertyExists(name)) {_            return null__        }__        Object answer = null___        _        _        _        _        Map<String, Object> map = new LinkedHashMap<>()__        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                answer = key__            } else {_                map.put(key, getProperty(jmsMessage, key))__            }_        }__        _        jmsMessage.clearProperties()__        for (Entry<String, Object> entry : map.entrySet()) {_            jmsMessage.setObjectProperty(entry.getKey(), entry.getValue())__        }__        return answer__    };removes,the,property,from,the,jms,message,param,jms,message,the,jms,message,param,name,name,of,the,property,to,remove,return,the,old,value,of,the,property,or,tt,null,tt,if,not,exists,throws,jmsexception,can,be,thrown;public,static,object,remove,jms,property,message,jms,message,string,name,throws,jmsexception,if,jms,message,property,exists,name,return,null,object,answer,null,map,string,object,map,new,linked,hash,map,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,answer,key,else,map,put,key,get,property,jms,message,key,jms,message,clear,properties,for,entry,string,object,entry,map,entry,set,jms,message,set,object,property,entry,get,key,entry,get,value,return,answer
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1246452394;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1274451535;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1280043089;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1293266959;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1297377495;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1297971515;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1298619517;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1307988251;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1308588240;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1311865908;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1326499990;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1328014611;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1351701243;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1379495956;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1389726752;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1392400400;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1405374721;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1436441288;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1445671545;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1476453102;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1476453102;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1508614181;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1520284101;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1524001544;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1537290824;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1540108158;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1540108161;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static boolean hasProperty(Message jmsMessage, String name) throws JMSException;1540108163;Tests whether a given property with the name exists__@param jmsMessage the JMS message_@param name       name of the property to test if exists_@return <tt>true</tt> if the property exists, <tt>false</tt> if not._@throws JMSException can be thrown;public static boolean hasProperty(Message jmsMessage, String name) throws JMSException {_        Enumeration<?> en = jmsMessage.getPropertyNames()__        while (en.hasMoreElements()) {_            String key = (String) en.nextElement()__            if (name.equals(key)) {_                return true__            }_        }_        return false__    };tests,whether,a,given,property,with,the,name,exists,param,jms,message,the,jms,message,param,name,name,of,the,property,to,test,if,exists,return,tt,true,tt,if,the,property,exists,tt,false,tt,if,not,throws,jmsexception,can,be,thrown;public,static,boolean,has,property,message,jms,message,string,name,throws,jmsexception,enumeration,en,jms,message,get,property,names,while,en,has,more,elements,string,key,string,en,next,element,if,name,equals,key,return,true,return,false
JmsMessageHelper -> public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException;1307988251;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message  the message_@param deliveryMode  the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException {_        int mode = Message.DEFAULT_DELIVERY_MODE___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else {_            _            Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__            if (value != null) {_                mode = value__            }_        }__        message.setJMSDeliveryMode(mode)__        message.setIntProperty(JmsConstants.JMS_DELIVERY_MODE, mode)__    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,exchange,exchange,message,message,object,delivery,mode,throws,jmsexception,int,mode,message,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,message,set,jmsdelivery,mode,mode,message,set,int,property,jms,constants,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException;1308588240;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message  the message_@param deliveryMode  the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else {_            _            Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__            if (value != null) {_                mode = value__            }_        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__            message.setIntProperty(JmsConstants.JMS_DELIVERY_MODE, mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,exchange,exchange,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,if,mode,null,message,set,jmsdelivery,mode,mode,message,set,int,property,jms,constants,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException;1311865908;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message  the message_@param deliveryMode  the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else {_            _            Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__            if (value != null) {_                mode = value__            }_        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__            message.setIntProperty(JmsConstants.JMS_DELIVERY_MODE, mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,exchange,exchange,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,if,mode,null,message,set,jmsdelivery,mode,mode,message,set,int,property,jms,constants,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException;1326499990;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message  the message_@param deliveryMode  the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else {_            _            Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__            if (value != null) {_                mode = value__            }_        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__            message.setIntProperty(JmsConstants.JMS_DELIVERY_MODE, mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,exchange,exchange,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,if,mode,null,message,set,jmsdelivery,mode,mode,message,set,int,property,jms,constants,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException;1328014611;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message  the message_@param deliveryMode  the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else {_            _            Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__            if (value != null) {_                mode = value__            }_        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__            message.setIntProperty(JmsConstants.JMS_DELIVERY_MODE, mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,exchange,exchange,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,if,mode,null,message,set,jmsdelivery,mode,mode,message,set,int,property,jms,constants,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException;1351701243;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message  the message_@param deliveryMode  the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else {_            _            Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__            if (value != null) {_                mode = value__            }_        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__            message.setIntProperty(JmsConstants.JMS_DELIVERY_MODE, mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,exchange,exchange,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,if,mode,null,message,set,jmsdelivery,mode,mode,message,set,int,property,jms,constants,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException;1379495956;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message  the message_@param deliveryMode  the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else {_            _            Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__            if (value != null) {_                mode = value__            }_        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__            message.setIntProperty(JmsConstants.JMS_DELIVERY_MODE, mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,exchange,exchange,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,if,mode,null,message,set,jmsdelivery,mode,mode,message,set,int,property,jms,constants,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException;1389726752;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message  the message_@param deliveryMode  the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else {_            _            Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__            if (value != null) {_                mode = value__            }_        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__            message.setIntProperty(JmsConstants.JMS_DELIVERY_MODE, mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,exchange,exchange,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,if,mode,null,message,set,jmsdelivery,mode,mode,message,set,int,property,jms,constants,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException;1392400400;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message  the message_@param deliveryMode  the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else {_            _            Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__            if (value != null) {_                mode = value__            }_        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__            message.setIntProperty(JmsConstants.JMS_DELIVERY_MODE, mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,exchange,exchange,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,if,mode,null,message,set,jmsdelivery,mode,mode,message,set,int,property,jms,constants,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException;1405374721;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message  the message_@param deliveryMode  the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else {_            _            Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__            if (value != null) {_                mode = value__            }_        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__            message.setIntProperty(JmsConstants.JMS_DELIVERY_MODE, mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,exchange,exchange,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,if,mode,null,message,set,jmsdelivery,mode,mode,message,set,int,property,jms,constants,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException;1436441288;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message  the message_@param deliveryMode  the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else {_            _            Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__            if (value != null) {_                mode = value__            }_        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__            message.setIntProperty(JmsConstants.JMS_DELIVERY_MODE, mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,exchange,exchange,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,if,mode,null,message,set,jmsdelivery,mode,mode,message,set,int,property,jms,constants,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException;1445671545;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message  the message_@param deliveryMode  the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else {_            _            Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__            if (value != null) {_                mode = value__            }_        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__            message.setIntProperty(JmsConstants.JMS_DELIVERY_MODE, mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,exchange,exchange,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,if,mode,null,message,set,jmsdelivery,mode,mode,message,set,int,property,jms,constants,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException;1476453102;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message  the message_@param deliveryMode  the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else {_            _            Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__            if (value != null) {_                mode = value__            }_        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__            message.setIntProperty(JmsConstants.JMS_DELIVERY_MODE, mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,exchange,exchange,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,if,mode,null,message,set,jmsdelivery,mode,mode,message,set,int,property,jms,constants,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException;1476453102;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message  the message_@param deliveryMode  the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else {_            _            Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__            if (value != null) {_                mode = value__            }_        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__            message.setIntProperty(JmsConstants.JMS_DELIVERY_MODE, mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,exchange,exchange,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,if,mode,null,message,set,jmsdelivery,mode,mode,message,set,int,property,jms,constants,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException;1508614181;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message  the message_@param deliveryMode  the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else {_            _            Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__            if (value != null) {_                mode = value__            }_        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__            message.setIntProperty(JmsConstants.JMS_DELIVERY_MODE, mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,exchange,exchange,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,if,mode,null,message,set,jmsdelivery,mode,mode,message,set,int,property,jms,constants,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException;1520284101;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message  the message_@param deliveryMode  the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else {_            _            Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__            if (value != null) {_                mode = value__            }_        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__            message.setIntProperty(JmsConstants.JMS_DELIVERY_MODE, mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,exchange,exchange,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,if,mode,null,message,set,jmsdelivery,mode,mode,message,set,int,property,jms,constants,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException;1524001544;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message  the message_@param deliveryMode  the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else {_            _            Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__            if (value != null) {_                mode = value__            }_        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__            message.setIntProperty(JmsConstants.JMS_DELIVERY_MODE, mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,exchange,exchange,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,if,mode,null,message,set,jmsdelivery,mode,mode,message,set,int,property,jms,constants,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException;1537290824;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message  the message_@param deliveryMode  the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else {_            _            Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__            if (value != null) {_                mode = value__            }_        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__            message.setIntProperty(JmsConstants.JMS_DELIVERY_MODE, mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,exchange,exchange,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,if,mode,null,message,set,jmsdelivery,mode,mode,message,set,int,property,jms,constants,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException;1540108158;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message  the message_@param deliveryMode  the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else {_            _            Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__            if (value != null) {_                mode = value__            }_        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__            message.setIntProperty(JmsConstants.JMS_DELIVERY_MODE, mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,exchange,exchange,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,if,mode,null,message,set,jmsdelivery,mode,mode,message,set,int,property,jms,constants,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException;1540108161;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message  the message_@param deliveryMode  the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else {_            _            Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__            if (value != null) {_                mode = value__            }_        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__            message.setIntProperty(JmsConstants.JMS_DELIVERY_MODE, mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,exchange,exchange,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,if,mode,null,message,set,jmsdelivery,mode,mode,message,set,int,property,jms,constants,mode
JmsMessageHelper -> public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException;1540108163;Sets the JMSDeliveryMode on the message.__@param exchange the exchange_@param message  the message_@param deliveryMode  the delivery mode, either as a String or integer_@throws javax.jms.JMSException is thrown if error setting the delivery mode;public static void setJMSDeliveryMode(Exchange exchange, Message message, Object deliveryMode) throws JMSException {_        Integer mode = null___        if (deliveryMode instanceof String) {_            String s = (String) deliveryMode__            if ("PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.PERSISTENT__            } else if ("NON_PERSISTENT".equalsIgnoreCase(s)) {_                mode = DeliveryMode.NON_PERSISTENT__            } else {_                _                Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__                if (value != null) {_                    mode = value__                } else {_                    throw new IllegalArgumentException("Unknown delivery mode with value: " + deliveryMode)__                }_            }_        } else {_            _            Integer value = ExchangeHelper.convertToType(exchange, Integer.class, deliveryMode)__            if (value != null) {_                mode = value__            }_        }__        if (mode != null) {_            message.setJMSDeliveryMode(mode)__            message.setIntProperty(JmsConstants.JMS_DELIVERY_MODE, mode)__        }_    };sets,the,jmsdelivery,mode,on,the,message,param,exchange,the,exchange,param,message,the,message,param,delivery,mode,the,delivery,mode,either,as,a,string,or,integer,throws,javax,jms,jmsexception,is,thrown,if,error,setting,the,delivery,mode;public,static,void,set,jmsdelivery,mode,exchange,exchange,message,message,object,delivery,mode,throws,jmsexception,integer,mode,null,if,delivery,mode,instanceof,string,string,s,string,delivery,mode,if,persistent,equals,ignore,case,s,mode,delivery,mode,persistent,else,if,equals,ignore,case,s,mode,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,else,throw,new,illegal,argument,exception,unknown,delivery,mode,with,value,delivery,mode,else,integer,value,exchange,helper,convert,to,type,exchange,integer,class,delivery,mode,if,value,null,mode,value,if,mode,null,message,set,jmsdelivery,mode,mode,message,set,int,property,jms,constants,mode
JmsMessageHelper -> public static Destination getJMSDestination(Message message);1445671545;Gets the JMSDestination from the message.__@param message  the message_@return the JMSDestination, or <tt>null</tt> if not able to get;public static Destination getJMSDestination(Message message) {_        try {_            return message.getJMSDestination()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsdestination,from,the,message,param,message,the,message,return,the,jmsdestination,or,tt,null,tt,if,not,able,to,get;public,static,destination,get,jmsdestination,message,message,try,return,message,get,jmsdestination,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSDestination(Message message);1476453102;Gets the JMSDestination from the message.__@param message  the message_@return the JMSDestination, or <tt>null</tt> if not able to get;public static Destination getJMSDestination(Message message) {_        try {_            return message.getJMSDestination()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsdestination,from,the,message,param,message,the,message,return,the,jmsdestination,or,tt,null,tt,if,not,able,to,get;public,static,destination,get,jmsdestination,message,message,try,return,message,get,jmsdestination,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSDestination(Message message);1476453102;Gets the JMSDestination from the message.__@param message  the message_@return the JMSDestination, or <tt>null</tt> if not able to get;public static Destination getJMSDestination(Message message) {_        try {_            return message.getJMSDestination()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsdestination,from,the,message,param,message,the,message,return,the,jmsdestination,or,tt,null,tt,if,not,able,to,get;public,static,destination,get,jmsdestination,message,message,try,return,message,get,jmsdestination,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSDestination(Message message);1508614181;Gets the JMSDestination from the message.__@param message  the message_@return the JMSDestination, or <tt>null</tt> if not able to get;public static Destination getJMSDestination(Message message) {_        try {_            return message.getJMSDestination()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsdestination,from,the,message,param,message,the,message,return,the,jmsdestination,or,tt,null,tt,if,not,able,to,get;public,static,destination,get,jmsdestination,message,message,try,return,message,get,jmsdestination,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSDestination(Message message);1520284101;Gets the JMSDestination from the message.__@param message  the message_@return the JMSDestination, or <tt>null</tt> if not able to get;public static Destination getJMSDestination(Message message) {_        try {_            return message.getJMSDestination()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsdestination,from,the,message,param,message,the,message,return,the,jmsdestination,or,tt,null,tt,if,not,able,to,get;public,static,destination,get,jmsdestination,message,message,try,return,message,get,jmsdestination,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSDestination(Message message);1524001544;Gets the JMSDestination from the message.__@param message  the message_@return the JMSDestination, or <tt>null</tt> if not able to get;public static Destination getJMSDestination(Message message) {_        try {_            return message.getJMSDestination()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsdestination,from,the,message,param,message,the,message,return,the,jmsdestination,or,tt,null,tt,if,not,able,to,get;public,static,destination,get,jmsdestination,message,message,try,return,message,get,jmsdestination,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSDestination(Message message);1537290824;Gets the JMSDestination from the message.__@param message  the message_@return the JMSDestination, or <tt>null</tt> if not able to get;public static Destination getJMSDestination(Message message) {_        try {_            return message.getJMSDestination()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsdestination,from,the,message,param,message,the,message,return,the,jmsdestination,or,tt,null,tt,if,not,able,to,get;public,static,destination,get,jmsdestination,message,message,try,return,message,get,jmsdestination,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSDestination(Message message);1540108158;Gets the JMSDestination from the message.__@param message  the message_@return the JMSDestination, or <tt>null</tt> if not able to get;public static Destination getJMSDestination(Message message) {_        try {_            return message.getJMSDestination()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsdestination,from,the,message,param,message,the,message,return,the,jmsdestination,or,tt,null,tt,if,not,able,to,get;public,static,destination,get,jmsdestination,message,message,try,return,message,get,jmsdestination,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSDestination(Message message);1540108161;Gets the JMSDestination from the message.__@param message  the message_@return the JMSDestination, or <tt>null</tt> if not able to get;public static Destination getJMSDestination(Message message) {_        try {_            return message.getJMSDestination()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsdestination,from,the,message,param,message,the,message,return,the,jmsdestination,or,tt,null,tt,if,not,able,to,get;public,static,destination,get,jmsdestination,message,message,try,return,message,get,jmsdestination,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSDestination(Message message);1540108163;Gets the JMSDestination from the message.__@param message  the message_@return the JMSDestination, or <tt>null</tt> if not able to get;public static Destination getJMSDestination(Message message) {_        try {_            return message.getJMSDestination()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsdestination,from,the,message,param,message,the,message,return,the,jmsdestination,or,tt,null,tt,if,not,able,to,get;public,static,destination,get,jmsdestination,message,message,try,return,message,get,jmsdestination,catch,exception,e,return,null
JmsMessageHelper -> public static String normalizeDestinationName(String destination, boolean includePrefix);1389726752;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@param includePrefix whether to include <tt>queue://</tt>, or <tt>topic://</tt> prefix in the normalized destination name_@return the normalized destination;public static String normalizeDestinationName(String destination, boolean includePrefix) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TEMP_QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TEMP_QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = TEMP_QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = TOPIC_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TEMP_TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TEMP_TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = TEMP_TOPIC_PREFIX + "//" + s__            }_            return s__        } else {_            return destination__        }_    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,param,include,prefix,whether,to,include,tt,queue,tt,or,tt,topic,tt,prefix,in,the,normalized,destination,name,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,boolean,include,prefix,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,return,destination
JmsMessageHelper -> public static String normalizeDestinationName(String destination, boolean includePrefix);1392400400;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@param includePrefix whether to include <tt>queue://</tt>, or <tt>topic://</tt> prefix in the normalized destination name_@return the normalized destination;public static String normalizeDestinationName(String destination, boolean includePrefix) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TEMP_QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TEMP_QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = TEMP_QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = TOPIC_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TEMP_TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TEMP_TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = TEMP_TOPIC_PREFIX + "//" + s__            }_            return s__        } else {_            return destination__        }_    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,param,include,prefix,whether,to,include,tt,queue,tt,or,tt,topic,tt,prefix,in,the,normalized,destination,name,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,boolean,include,prefix,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,return,destination
JmsMessageHelper -> public static String normalizeDestinationName(String destination, boolean includePrefix);1405374721;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@param includePrefix whether to include <tt>queue://</tt>, or <tt>topic://</tt> prefix in the normalized destination name_@return the normalized destination;public static String normalizeDestinationName(String destination, boolean includePrefix) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TEMP_QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TEMP_QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = TEMP_QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = TOPIC_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TEMP_TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TEMP_TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = TEMP_TOPIC_PREFIX + "//" + s__            }_            return s__        } else {_            return destination__        }_    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,param,include,prefix,whether,to,include,tt,queue,tt,or,tt,topic,tt,prefix,in,the,normalized,destination,name,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,boolean,include,prefix,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,return,destination
JmsMessageHelper -> public static String normalizeDestinationName(String destination, boolean includePrefix);1436441288;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@param includePrefix whether to include <tt>queue://</tt>, or <tt>topic://</tt> prefix in the normalized destination name_@return the normalized destination;public static String normalizeDestinationName(String destination, boolean includePrefix) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TEMP_QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TEMP_QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = TEMP_QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = TOPIC_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TEMP_TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TEMP_TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = TEMP_TOPIC_PREFIX + "//" + s__            }_            return s__        } else {_            return destination__        }_    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,param,include,prefix,whether,to,include,tt,queue,tt,or,tt,topic,tt,prefix,in,the,normalized,destination,name,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,boolean,include,prefix,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,return,destination
JmsMessageHelper -> public static String normalizeDestinationName(String destination, boolean includePrefix);1445671545;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@param includePrefix whether to include <tt>queue://</tt>, or <tt>topic://</tt> prefix in the normalized destination name_@return the normalized destination;public static String normalizeDestinationName(String destination, boolean includePrefix) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TEMP_QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TEMP_QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = TEMP_QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = TOPIC_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TEMP_TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TEMP_TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = TEMP_TOPIC_PREFIX + "//" + s__            }_            return s__        } else {_            return destination__        }_    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,param,include,prefix,whether,to,include,tt,queue,tt,or,tt,topic,tt,prefix,in,the,normalized,destination,name,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,boolean,include,prefix,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,return,destination
JmsMessageHelper -> public static String normalizeDestinationName(String destination, boolean includePrefix);1476453102;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@param includePrefix whether to include <tt>queue://</tt>, or <tt>topic://</tt> prefix in the normalized destination name_@return the normalized destination;public static String normalizeDestinationName(String destination, boolean includePrefix) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TEMP_QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TEMP_QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = TEMP_QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = TOPIC_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TEMP_TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TEMP_TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = TEMP_TOPIC_PREFIX + "//" + s__            }_            return s__        } else {_            return destination__        }_    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,param,include,prefix,whether,to,include,tt,queue,tt,or,tt,topic,tt,prefix,in,the,normalized,destination,name,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,boolean,include,prefix,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,return,destination
JmsMessageHelper -> public static String normalizeDestinationName(String destination, boolean includePrefix);1476453102;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@param includePrefix whether to include <tt>queue://</tt>, or <tt>topic://</tt> prefix in the normalized destination name_@return the normalized destination;public static String normalizeDestinationName(String destination, boolean includePrefix) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TEMP_QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TEMP_QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = TEMP_QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = TOPIC_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TEMP_TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TEMP_TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = TEMP_TOPIC_PREFIX + "//" + s__            }_            return s__        } else {_            return destination__        }_    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,param,include,prefix,whether,to,include,tt,queue,tt,or,tt,topic,tt,prefix,in,the,normalized,destination,name,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,boolean,include,prefix,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,return,destination
JmsMessageHelper -> public static String normalizeDestinationName(String destination, boolean includePrefix);1508614181;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@param includePrefix whether to include <tt>queue://</tt>, or <tt>topic://</tt> prefix in the normalized destination name_@return the normalized destination;public static String normalizeDestinationName(String destination, boolean includePrefix) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TEMP_QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TEMP_QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = TEMP_QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = TOPIC_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TEMP_TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TEMP_TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = TEMP_TOPIC_PREFIX + "//" + s__            }_            return s__        } else {_            return destination__        }_    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,param,include,prefix,whether,to,include,tt,queue,tt,or,tt,topic,tt,prefix,in,the,normalized,destination,name,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,boolean,include,prefix,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,return,destination
JmsMessageHelper -> public static String normalizeDestinationName(String destination, boolean includePrefix);1520284101;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@param includePrefix whether to include <tt>queue://</tt>, or <tt>topic://</tt> prefix in the normalized destination name_@return the normalized destination;public static String normalizeDestinationName(String destination, boolean includePrefix) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TEMP_QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TEMP_QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = TEMP_QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = TOPIC_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TEMP_TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TEMP_TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = TEMP_TOPIC_PREFIX + "//" + s__            }_            return s__        } else {_            return destination__        }_    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,param,include,prefix,whether,to,include,tt,queue,tt,or,tt,topic,tt,prefix,in,the,normalized,destination,name,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,boolean,include,prefix,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,return,destination
JmsMessageHelper -> public static String normalizeDestinationName(String destination, boolean includePrefix);1524001544;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@param includePrefix whether to include <tt>queue://</tt>, or <tt>topic://</tt> prefix in the normalized destination name_@return the normalized destination;public static String normalizeDestinationName(String destination, boolean includePrefix) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TEMP_QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TEMP_QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = TEMP_QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = TOPIC_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TEMP_TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TEMP_TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = TEMP_TOPIC_PREFIX + "//" + s__            }_            return s__        } else {_            return destination__        }_    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,param,include,prefix,whether,to,include,tt,queue,tt,or,tt,topic,tt,prefix,in,the,normalized,destination,name,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,boolean,include,prefix,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,return,destination
JmsMessageHelper -> public static String normalizeDestinationName(String destination, boolean includePrefix);1537290824;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@param includePrefix whether to include <tt>queue://</tt>, or <tt>topic://</tt> prefix in the normalized destination name_@return the normalized destination;public static String normalizeDestinationName(String destination, boolean includePrefix) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TEMP_QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TEMP_QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = TEMP_QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = TOPIC_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TEMP_TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TEMP_TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = TEMP_TOPIC_PREFIX + "//" + s__            }_            return s__        } else {_            return destination__        }_    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,param,include,prefix,whether,to,include,tt,queue,tt,or,tt,topic,tt,prefix,in,the,normalized,destination,name,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,boolean,include,prefix,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,return,destination
JmsMessageHelper -> public static String normalizeDestinationName(String destination, boolean includePrefix);1540108158;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@param includePrefix whether to include <tt>queue://</tt>, or <tt>topic://</tt> prefix in the normalized destination name_@return the normalized destination;public static String normalizeDestinationName(String destination, boolean includePrefix) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TEMP_QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TEMP_QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = TEMP_QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = TOPIC_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TEMP_TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TEMP_TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = TEMP_TOPIC_PREFIX + "//" + s__            }_            return s__        } else {_            return destination__        }_    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,param,include,prefix,whether,to,include,tt,queue,tt,or,tt,topic,tt,prefix,in,the,normalized,destination,name,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,boolean,include,prefix,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,return,destination
JmsMessageHelper -> public static String normalizeDestinationName(String destination, boolean includePrefix);1540108161;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@param includePrefix whether to include <tt>queue://</tt>, or <tt>topic://</tt> prefix in the normalized destination name_@return the normalized destination;public static String normalizeDestinationName(String destination, boolean includePrefix) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TEMP_QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TEMP_QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = TEMP_QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = TOPIC_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TEMP_TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TEMP_TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = TEMP_TOPIC_PREFIX + "//" + s__            }_            return s__        } else {_            return destination__        }_    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,param,include,prefix,whether,to,include,tt,queue,tt,or,tt,topic,tt,prefix,in,the,normalized,destination,name,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,boolean,include,prefix,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,return,destination
JmsMessageHelper -> public static String normalizeDestinationName(String destination, boolean includePrefix);1540108163;Normalizes the destination name._<p/>_This ensures the destination name is correct, and we do not create queues as <tt>queue://queue:foo</tt>, which_was intended as <tt>queue://foo</tt>.__@param destination the destination_@param includePrefix whether to include <tt>queue://</tt>, or <tt>topic://</tt> prefix in the normalized destination name_@return the normalized destination;public static String normalizeDestinationName(String destination, boolean includePrefix) {_        if (ObjectHelper.isEmpty(destination)) {_            return destination__        }_        if (destination.startsWith(QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TEMP_QUEUE_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TEMP_QUEUE_PREFIX.length()), '/')__            if (includePrefix) {_                s = TEMP_QUEUE_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = TOPIC_PREFIX + "//" + s__            }_            return s__        } else if (destination.startsWith(TEMP_TOPIC_PREFIX)) {_            String s = removeStartingCharacters(destination.substring(TEMP_TOPIC_PREFIX.length()), '/')__            if (includePrefix) {_                s = TEMP_TOPIC_PREFIX + "//" + s__            }_            return s__        } else {_            return destination__        }_    };normalizes,the,destination,name,p,this,ensures,the,destination,name,is,correct,and,we,do,not,create,queues,as,tt,queue,queue,foo,tt,which,was,intended,as,tt,queue,foo,tt,param,destination,the,destination,param,include,prefix,whether,to,include,tt,queue,tt,or,tt,topic,tt,prefix,in,the,normalized,destination,name,return,the,normalized,destination;public,static,string,normalize,destination,name,string,destination,boolean,include,prefix,if,object,helper,is,empty,destination,return,destination,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,if,destination,starts,with,string,s,remove,starting,characters,destination,substring,length,if,include,prefix,s,s,return,s,else,return,destination
JmsMessageHelper -> public static String getJMSCorrelationIDAsBytes(Message message);1436441288;Gets the JMSCorrelationIDAsBytes from the message.__@param message the message_@return the JMSCorrelationIDAsBytes, or <tt>null</tt> if not able to get;public static String getJMSCorrelationIDAsBytes(Message message) {_        try {_            return new String(message.getJMSCorrelationIDAsBytes())__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmscorrelation,idas,bytes,from,the,message,param,message,the,message,return,the,jmscorrelation,idas,bytes,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmscorrelation,idas,bytes,message,message,try,return,new,string,message,get,jmscorrelation,idas,bytes,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSCorrelationIDAsBytes(Message message);1445671545;Gets the JMSCorrelationIDAsBytes from the message.__@param message the message_@return the JMSCorrelationIDAsBytes, or <tt>null</tt> if not able to get;public static String getJMSCorrelationIDAsBytes(Message message) {_        try {_            return new String(message.getJMSCorrelationIDAsBytes())__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmscorrelation,idas,bytes,from,the,message,param,message,the,message,return,the,jmscorrelation,idas,bytes,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmscorrelation,idas,bytes,message,message,try,return,new,string,message,get,jmscorrelation,idas,bytes,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSCorrelationIDAsBytes(Message message);1476453102;Gets the JMSCorrelationIDAsBytes from the message.__@param message the message_@return the JMSCorrelationIDAsBytes, or <tt>null</tt> if not able to get;public static String getJMSCorrelationIDAsBytes(Message message) {_        try {_            byte[] bytes = message.getJMSCorrelationIDAsBytes()__            boolean isNull = true__            for(byte b : bytes)_             if(b != 0)_                 isNull = false__            return isNull ? null : new String(message.getJMSCorrelationIDAsBytes())__        } catch (Exception e) {_            _        }_        return null__    };gets,the,jmscorrelation,idas,bytes,from,the,message,param,message,the,message,return,the,jmscorrelation,idas,bytes,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmscorrelation,idas,bytes,message,message,try,byte,bytes,message,get,jmscorrelation,idas,bytes,boolean,is,null,true,for,byte,b,bytes,if,b,0,is,null,false,return,is,null,null,new,string,message,get,jmscorrelation,idas,bytes,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSCorrelationIDAsBytes(Message message);1476453102;Gets the JMSCorrelationIDAsBytes from the message.__@param message the message_@return the JMSCorrelationIDAsBytes, or <tt>null</tt> if not able to get;public static String getJMSCorrelationIDAsBytes(Message message) {_        try {_            byte[] bytes = message.getJMSCorrelationIDAsBytes()__            boolean isNull = true__            for (byte b : bytes) {_                if (b != 0) {_                    isNull = false__                }_            }_            return isNull ? null : new String(bytes)__        } catch (Exception e) {_            _        }_        return null__    };gets,the,jmscorrelation,idas,bytes,from,the,message,param,message,the,message,return,the,jmscorrelation,idas,bytes,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmscorrelation,idas,bytes,message,message,try,byte,bytes,message,get,jmscorrelation,idas,bytes,boolean,is,null,true,for,byte,b,bytes,if,b,0,is,null,false,return,is,null,null,new,string,bytes,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSCorrelationIDAsBytes(Message message);1508614181;Gets the JMSCorrelationIDAsBytes from the message.__@param message the message_@return the JMSCorrelationIDAsBytes, or <tt>null</tt> if not able to get;public static String getJMSCorrelationIDAsBytes(Message message) {_        try {_            byte[] bytes = message.getJMSCorrelationIDAsBytes()__            boolean isNull = true__            for (byte b : bytes) {_                if (b != 0) {_                    isNull = false__                }_            }_            return isNull ? null : new String(bytes)__        } catch (Exception e) {_            _        }_        return null__    };gets,the,jmscorrelation,idas,bytes,from,the,message,param,message,the,message,return,the,jmscorrelation,idas,bytes,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmscorrelation,idas,bytes,message,message,try,byte,bytes,message,get,jmscorrelation,idas,bytes,boolean,is,null,true,for,byte,b,bytes,if,b,0,is,null,false,return,is,null,null,new,string,bytes,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSCorrelationIDAsBytes(Message message);1520284101;Gets the JMSCorrelationIDAsBytes from the message.__@param message the message_@return the JMSCorrelationIDAsBytes, or <tt>null</tt> if not able to get;public static String getJMSCorrelationIDAsBytes(Message message) {_        try {_            byte[] bytes = message.getJMSCorrelationIDAsBytes()__            boolean isNull = true__            for (byte b : bytes) {_                if (b != 0) {_                    isNull = false__                }_            }_            return isNull ? null : new String(bytes)__        } catch (Exception e) {_            _        }_        return null__    };gets,the,jmscorrelation,idas,bytes,from,the,message,param,message,the,message,return,the,jmscorrelation,idas,bytes,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmscorrelation,idas,bytes,message,message,try,byte,bytes,message,get,jmscorrelation,idas,bytes,boolean,is,null,true,for,byte,b,bytes,if,b,0,is,null,false,return,is,null,null,new,string,bytes,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSCorrelationIDAsBytes(Message message);1524001544;Gets the JMSCorrelationIDAsBytes from the message.__@param message the message_@return the JMSCorrelationIDAsBytes, or <tt>null</tt> if not able to get;public static String getJMSCorrelationIDAsBytes(Message message) {_        try {_            byte[] bytes = message.getJMSCorrelationIDAsBytes()__            boolean isNull = true__            for (byte b : bytes) {_                if (b != 0) {_                    isNull = false__                }_            }_            return isNull ? null : new String(bytes)__        } catch (Exception e) {_            _        }_        return null__    };gets,the,jmscorrelation,idas,bytes,from,the,message,param,message,the,message,return,the,jmscorrelation,idas,bytes,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmscorrelation,idas,bytes,message,message,try,byte,bytes,message,get,jmscorrelation,idas,bytes,boolean,is,null,true,for,byte,b,bytes,if,b,0,is,null,false,return,is,null,null,new,string,bytes,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSCorrelationIDAsBytes(Message message);1537290824;Gets the JMSCorrelationIDAsBytes from the message.__@param message the message_@return the JMSCorrelationIDAsBytes, or <tt>null</tt> if not able to get;public static String getJMSCorrelationIDAsBytes(Message message) {_        try {_            byte[] bytes = message.getJMSCorrelationIDAsBytes()__            boolean isNull = true__            for (byte b : bytes) {_                if (b != 0) {_                    isNull = false__                }_            }_            return isNull ? null : new String(bytes)__        } catch (Exception e) {_            _        }_        return null__    };gets,the,jmscorrelation,idas,bytes,from,the,message,param,message,the,message,return,the,jmscorrelation,idas,bytes,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmscorrelation,idas,bytes,message,message,try,byte,bytes,message,get,jmscorrelation,idas,bytes,boolean,is,null,true,for,byte,b,bytes,if,b,0,is,null,false,return,is,null,null,new,string,bytes,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSCorrelationIDAsBytes(Message message);1540108158;Gets the JMSCorrelationIDAsBytes from the message.__@param message the message_@return the JMSCorrelationIDAsBytes, or <tt>null</tt> if not able to get;public static String getJMSCorrelationIDAsBytes(Message message) {_        try {_            byte[] bytes = message.getJMSCorrelationIDAsBytes()__            boolean isNull = true__            if (bytes != null) {_                for (byte b : bytes) {_                    if (b != 0) {_                        isNull = false__                    }_                }_            }_            return isNull ? null : new String(bytes)__        } catch (Exception e) {_            _        }_        return null__    };gets,the,jmscorrelation,idas,bytes,from,the,message,param,message,the,message,return,the,jmscorrelation,idas,bytes,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmscorrelation,idas,bytes,message,message,try,byte,bytes,message,get,jmscorrelation,idas,bytes,boolean,is,null,true,if,bytes,null,for,byte,b,bytes,if,b,0,is,null,false,return,is,null,null,new,string,bytes,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSCorrelationIDAsBytes(Message message);1540108161;Gets the JMSCorrelationIDAsBytes from the message.__@param message the message_@return the JMSCorrelationIDAsBytes, or <tt>null</tt> if not able to get;public static String getJMSCorrelationIDAsBytes(Message message) {_        try {_            byte[] bytes = message.getJMSCorrelationIDAsBytes()__            boolean isNull = true__            if (bytes != null) {_                for (byte b : bytes) {_                    if (b != 0) {_                        isNull = false__                    }_                }_            }_            return isNull ? null : new String(bytes)__        } catch (Exception e) {_            _        }_        return null__    };gets,the,jmscorrelation,idas,bytes,from,the,message,param,message,the,message,return,the,jmscorrelation,idas,bytes,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmscorrelation,idas,bytes,message,message,try,byte,bytes,message,get,jmscorrelation,idas,bytes,boolean,is,null,true,if,bytes,null,for,byte,b,bytes,if,b,0,is,null,false,return,is,null,null,new,string,bytes,catch,exception,e,return,null
JmsMessageHelper -> public static String getJMSCorrelationIDAsBytes(Message message);1540108163;Gets the JMSCorrelationIDAsBytes from the message.__@param message the message_@return the JMSCorrelationIDAsBytes, or <tt>null</tt> if not able to get;public static String getJMSCorrelationIDAsBytes(Message message) {_        try {_            byte[] bytes = message.getJMSCorrelationIDAsBytes()__            boolean isNull = true__            if (bytes != null) {_                for (byte b : bytes) {_                    if (b != 0) {_                        isNull = false__                    }_                }_            }_            return isNull ? null : new String(bytes)__        } catch (Exception e) {_            _        }_        return null__    };gets,the,jmscorrelation,idas,bytes,from,the,message,param,message,the,message,return,the,jmscorrelation,idas,bytes,or,tt,null,tt,if,not,able,to,get;public,static,string,get,jmscorrelation,idas,bytes,message,message,try,byte,bytes,message,get,jmscorrelation,idas,bytes,boolean,is,null,true,if,bytes,null,for,byte,b,bytes,if,b,0,is,null,false,return,is,null,null,new,string,bytes,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1298619517;Gets the JMSReplyTo from the message.__@param message  the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1307988251;Gets the JMSReplyTo from the message.__@param message  the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1308588240;Gets the JMSReplyTo from the message.__@param message  the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1311865908;Gets the JMSReplyTo from the message.__@param message  the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1326499990;Gets the JMSReplyTo from the message.__@param message  the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1328014611;Gets the JMSReplyTo from the message.__@param message  the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1351701243;Gets the JMSReplyTo from the message.__@param message  the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1379495956;Gets the JMSReplyTo from the message.__@param message  the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1389726752;Gets the JMSReplyTo from the message.__@param message  the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1392400400;Gets the JMSReplyTo from the message.__@param message  the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1405374721;Gets the JMSReplyTo from the message.__@param message  the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1436441288;Gets the JMSReplyTo from the message.__@param message  the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1445671545;Gets the JMSReplyTo from the message.__@param message  the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1476453102;Gets the JMSReplyTo from the message.__@param message  the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1476453102;Gets the JMSReplyTo from the message.__@param message  the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1508614181;Gets the JMSReplyTo from the message.__@param message  the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1520284101;Gets the JMSReplyTo from the message.__@param message  the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1524001544;Gets the JMSReplyTo from the message.__@param message  the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1537290824;Gets the JMSReplyTo from the message.__@param message  the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1540108158;Gets the JMSReplyTo from the message.__@param message  the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1540108161;Gets the JMSReplyTo from the message.__@param message  the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static Destination getJMSReplyTo(Message message);1540108163;Gets the JMSReplyTo from the message.__@param message  the message_@return the reply to, can be <tt>null</tt>;public static Destination getJMSReplyTo(Message message) {_        try {_            return message.getJMSReplyTo()__        } catch (Exception e) {_            _        }__        return null__    };gets,the,jmsreply,to,from,the,message,param,message,the,message,return,the,reply,to,can,be,tt,null,tt;public,static,destination,get,jmsreply,to,message,message,try,return,message,get,jmsreply,to,catch,exception,e,return,null
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1280043089;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1293266959;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1297377495;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1297971515;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1298619517;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1307988251;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1308588240;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1311865908;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1326499990;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1328014611;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1351701243;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1379495956;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1389726752;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1392400400;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1405374721;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1436441288;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1445671545;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1476453102;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1476453102;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1508614181;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1520284101;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1524001544;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1537290824;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1540108158;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1540108161;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static void setCorrelationId(Message message, String correlationId);1540108163;Sets the correlation id on the JMS message._<p/>_Will ignore exception thrown__@param message  the JMS message_@param correlationId the correlation id;public static void setCorrelationId(Message message, String correlationId) {_        try {_            message.setJMSCorrelationID(correlationId)__        } catch (JMSException e) {_            _        }_    };sets,the,correlation,id,on,the,jms,message,p,will,ignore,exception,thrown,param,message,the,jms,message,param,correlation,id,the,correlation,id;public,static,void,set,correlation,id,message,message,string,correlation,id,try,message,set,jmscorrelation,id,correlation,id,catch,jmsexception,e
JmsMessageHelper -> public static boolean isQueuePrefix(String destination);1392400400;Whether the destination name has either queue or temp queue prefix.__@param destination the destination_@return <tt>true</tt> if queue or temp-queue prefix, <tt>false</tt> otherwise;public static boolean isQueuePrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(QUEUE_PREFIX) || destination.startsWith(TEMP_QUEUE_PREFIX)__    };whether,the,destination,name,has,either,queue,or,temp,queue,prefix,param,destination,the,destination,return,tt,true,tt,if,queue,or,temp,queue,prefix,tt,false,tt,otherwise;public,static,boolean,is,queue,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,destination,starts,with
JmsMessageHelper -> public static boolean isQueuePrefix(String destination);1405374721;Whether the destination name has either queue or temp queue prefix.__@param destination the destination_@return <tt>true</tt> if queue or temp-queue prefix, <tt>false</tt> otherwise;public static boolean isQueuePrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(QUEUE_PREFIX) || destination.startsWith(TEMP_QUEUE_PREFIX)__    };whether,the,destination,name,has,either,queue,or,temp,queue,prefix,param,destination,the,destination,return,tt,true,tt,if,queue,or,temp,queue,prefix,tt,false,tt,otherwise;public,static,boolean,is,queue,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,destination,starts,with
JmsMessageHelper -> public static boolean isQueuePrefix(String destination);1436441288;Whether the destination name has either queue or temp queue prefix.__@param destination the destination_@return <tt>true</tt> if queue or temp-queue prefix, <tt>false</tt> otherwise;public static boolean isQueuePrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(QUEUE_PREFIX) || destination.startsWith(TEMP_QUEUE_PREFIX)__    };whether,the,destination,name,has,either,queue,or,temp,queue,prefix,param,destination,the,destination,return,tt,true,tt,if,queue,or,temp,queue,prefix,tt,false,tt,otherwise;public,static,boolean,is,queue,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,destination,starts,with
JmsMessageHelper -> public static boolean isQueuePrefix(String destination);1445671545;Whether the destination name has either queue or temp queue prefix.__@param destination the destination_@return <tt>true</tt> if queue or temp-queue prefix, <tt>false</tt> otherwise;public static boolean isQueuePrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(QUEUE_PREFIX) || destination.startsWith(TEMP_QUEUE_PREFIX)__    };whether,the,destination,name,has,either,queue,or,temp,queue,prefix,param,destination,the,destination,return,tt,true,tt,if,queue,or,temp,queue,prefix,tt,false,tt,otherwise;public,static,boolean,is,queue,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,destination,starts,with
JmsMessageHelper -> public static boolean isQueuePrefix(String destination);1476453102;Whether the destination name has either queue or temp queue prefix.__@param destination the destination_@return <tt>true</tt> if queue or temp-queue prefix, <tt>false</tt> otherwise;public static boolean isQueuePrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(QUEUE_PREFIX) || destination.startsWith(TEMP_QUEUE_PREFIX)__    };whether,the,destination,name,has,either,queue,or,temp,queue,prefix,param,destination,the,destination,return,tt,true,tt,if,queue,or,temp,queue,prefix,tt,false,tt,otherwise;public,static,boolean,is,queue,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,destination,starts,with
JmsMessageHelper -> public static boolean isQueuePrefix(String destination);1476453102;Whether the destination name has either queue or temp queue prefix.__@param destination the destination_@return <tt>true</tt> if queue or temp-queue prefix, <tt>false</tt> otherwise;public static boolean isQueuePrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(QUEUE_PREFIX) || destination.startsWith(TEMP_QUEUE_PREFIX)__    };whether,the,destination,name,has,either,queue,or,temp,queue,prefix,param,destination,the,destination,return,tt,true,tt,if,queue,or,temp,queue,prefix,tt,false,tt,otherwise;public,static,boolean,is,queue,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,destination,starts,with
JmsMessageHelper -> public static boolean isQueuePrefix(String destination);1508614181;Whether the destination name has either queue or temp queue prefix.__@param destination the destination_@return <tt>true</tt> if queue or temp-queue prefix, <tt>false</tt> otherwise;public static boolean isQueuePrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(QUEUE_PREFIX) || destination.startsWith(TEMP_QUEUE_PREFIX)__    };whether,the,destination,name,has,either,queue,or,temp,queue,prefix,param,destination,the,destination,return,tt,true,tt,if,queue,or,temp,queue,prefix,tt,false,tt,otherwise;public,static,boolean,is,queue,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,destination,starts,with
JmsMessageHelper -> public static boolean isQueuePrefix(String destination);1520284101;Whether the destination name has either queue or temp queue prefix.__@param destination the destination_@return <tt>true</tt> if queue or temp-queue prefix, <tt>false</tt> otherwise;public static boolean isQueuePrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(QUEUE_PREFIX) || destination.startsWith(TEMP_QUEUE_PREFIX)__    };whether,the,destination,name,has,either,queue,or,temp,queue,prefix,param,destination,the,destination,return,tt,true,tt,if,queue,or,temp,queue,prefix,tt,false,tt,otherwise;public,static,boolean,is,queue,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,destination,starts,with
JmsMessageHelper -> public static boolean isQueuePrefix(String destination);1524001544;Whether the destination name has either queue or temp queue prefix.__@param destination the destination_@return <tt>true</tt> if queue or temp-queue prefix, <tt>false</tt> otherwise;public static boolean isQueuePrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(QUEUE_PREFIX) || destination.startsWith(TEMP_QUEUE_PREFIX)__    };whether,the,destination,name,has,either,queue,or,temp,queue,prefix,param,destination,the,destination,return,tt,true,tt,if,queue,or,temp,queue,prefix,tt,false,tt,otherwise;public,static,boolean,is,queue,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,destination,starts,with
JmsMessageHelper -> public static boolean isQueuePrefix(String destination);1537290824;Whether the destination name has either queue or temp queue prefix.__@param destination the destination_@return <tt>true</tt> if queue or temp-queue prefix, <tt>false</tt> otherwise;public static boolean isQueuePrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(QUEUE_PREFIX) || destination.startsWith(TEMP_QUEUE_PREFIX)__    };whether,the,destination,name,has,either,queue,or,temp,queue,prefix,param,destination,the,destination,return,tt,true,tt,if,queue,or,temp,queue,prefix,tt,false,tt,otherwise;public,static,boolean,is,queue,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,destination,starts,with
JmsMessageHelper -> public static boolean isQueuePrefix(String destination);1540108158;Whether the destination name has either queue or temp queue prefix.__@param destination the destination_@return <tt>true</tt> if queue or temp-queue prefix, <tt>false</tt> otherwise;public static boolean isQueuePrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(QUEUE_PREFIX) || destination.startsWith(TEMP_QUEUE_PREFIX)__    };whether,the,destination,name,has,either,queue,or,temp,queue,prefix,param,destination,the,destination,return,tt,true,tt,if,queue,or,temp,queue,prefix,tt,false,tt,otherwise;public,static,boolean,is,queue,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,destination,starts,with
JmsMessageHelper -> public static boolean isQueuePrefix(String destination);1540108161;Whether the destination name has either queue or temp queue prefix.__@param destination the destination_@return <tt>true</tt> if queue or temp-queue prefix, <tt>false</tt> otherwise;public static boolean isQueuePrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(QUEUE_PREFIX) || destination.startsWith(TEMP_QUEUE_PREFIX)__    };whether,the,destination,name,has,either,queue,or,temp,queue,prefix,param,destination,the,destination,return,tt,true,tt,if,queue,or,temp,queue,prefix,tt,false,tt,otherwise;public,static,boolean,is,queue,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,destination,starts,with
JmsMessageHelper -> public static boolean isQueuePrefix(String destination);1540108163;Whether the destination name has either queue or temp queue prefix.__@param destination the destination_@return <tt>true</tt> if queue or temp-queue prefix, <tt>false</tt> otherwise;public static boolean isQueuePrefix(String destination) {_        if (ObjectHelper.isEmpty(destination)) {_            return false__        }__        return destination.startsWith(QUEUE_PREFIX) || destination.startsWith(TEMP_QUEUE_PREFIX)__    };whether,the,destination,name,has,either,queue,or,temp,queue,prefix,param,destination,the,destination,return,tt,true,tt,if,queue,or,temp,queue,prefix,tt,false,tt,otherwise;public,static,boolean,is,queue,prefix,string,destination,if,object,helper,is,empty,destination,return,false,return,destination,starts,with,destination,starts,with
JmsMessageHelper -> public static Long getSafeLongProperty(Message jmsMessage, String name);1508614181;Gets a JMS property in a safe way__@param jmsMessage the JMS message_@param name       name of the property to get_@return the property value, or <tt>null</tt> if does not exists or failure to get the value;public static Long getSafeLongProperty(Message jmsMessage, String name) {_        try {_            return jmsMessage.getLongProperty(name)__        } catch (Exception e) {_            _        }_        return null__    };gets,a,jms,property,in,a,safe,way,param,jms,message,the,jms,message,param,name,name,of,the,property,to,get,return,the,property,value,or,tt,null,tt,if,does,not,exists,or,failure,to,get,the,value;public,static,long,get,safe,long,property,message,jms,message,string,name,try,return,jms,message,get,long,property,name,catch,exception,e,return,null
JmsMessageHelper -> public static Long getSafeLongProperty(Message jmsMessage, String name);1520284101;Gets a JMS property in a safe way__@param jmsMessage the JMS message_@param name       name of the property to get_@return the property value, or <tt>null</tt> if does not exists or failure to get the value;public static Long getSafeLongProperty(Message jmsMessage, String name) {_        try {_            return jmsMessage.getLongProperty(name)__        } catch (Exception e) {_            _        }_        return null__    };gets,a,jms,property,in,a,safe,way,param,jms,message,the,jms,message,param,name,name,of,the,property,to,get,return,the,property,value,or,tt,null,tt,if,does,not,exists,or,failure,to,get,the,value;public,static,long,get,safe,long,property,message,jms,message,string,name,try,return,jms,message,get,long,property,name,catch,exception,e,return,null
JmsMessageHelper -> public static Long getSafeLongProperty(Message jmsMessage, String name);1524001544;Gets a JMS property in a safe way__@param jmsMessage the JMS message_@param name       name of the property to get_@return the property value, or <tt>null</tt> if does not exists or failure to get the value;public static Long getSafeLongProperty(Message jmsMessage, String name) {_        try {_            return jmsMessage.getLongProperty(name)__        } catch (Exception e) {_            _        }_        return null__    };gets,a,jms,property,in,a,safe,way,param,jms,message,the,jms,message,param,name,name,of,the,property,to,get,return,the,property,value,or,tt,null,tt,if,does,not,exists,or,failure,to,get,the,value;public,static,long,get,safe,long,property,message,jms,message,string,name,try,return,jms,message,get,long,property,name,catch,exception,e,return,null
JmsMessageHelper -> public static Long getSafeLongProperty(Message jmsMessage, String name);1537290824;Gets a JMS property in a safe way__@param jmsMessage the JMS message_@param name       name of the property to get_@return the property value, or <tt>null</tt> if does not exists or failure to get the value;public static Long getSafeLongProperty(Message jmsMessage, String name) {_        try {_            return jmsMessage.getLongProperty(name)__        } catch (Exception e) {_            _        }_        return null__    };gets,a,jms,property,in,a,safe,way,param,jms,message,the,jms,message,param,name,name,of,the,property,to,get,return,the,property,value,or,tt,null,tt,if,does,not,exists,or,failure,to,get,the,value;public,static,long,get,safe,long,property,message,jms,message,string,name,try,return,jms,message,get,long,property,name,catch,exception,e,return,null
JmsMessageHelper -> public static Long getSafeLongProperty(Message jmsMessage, String name);1540108158;Gets a JMS property in a safe way__@param jmsMessage the JMS message_@param name       name of the property to get_@return the property value, or <tt>null</tt> if does not exists or failure to get the value;public static Long getSafeLongProperty(Message jmsMessage, String name) {_        try {_            return jmsMessage.getLongProperty(name)__        } catch (Exception e) {_            _        }_        return null__    };gets,a,jms,property,in,a,safe,way,param,jms,message,the,jms,message,param,name,name,of,the,property,to,get,return,the,property,value,or,tt,null,tt,if,does,not,exists,or,failure,to,get,the,value;public,static,long,get,safe,long,property,message,jms,message,string,name,try,return,jms,message,get,long,property,name,catch,exception,e,return,null
JmsMessageHelper -> public static Long getSafeLongProperty(Message jmsMessage, String name);1540108161;Gets a JMS property in a safe way__@param jmsMessage the JMS message_@param name       name of the property to get_@return the property value, or <tt>null</tt> if does not exists or failure to get the value;public static Long getSafeLongProperty(Message jmsMessage, String name) {_        try {_            return jmsMessage.getLongProperty(name)__        } catch (Exception e) {_            _        }_        return null__    };gets,a,jms,property,in,a,safe,way,param,jms,message,the,jms,message,param,name,name,of,the,property,to,get,return,the,property,value,or,tt,null,tt,if,does,not,exists,or,failure,to,get,the,value;public,static,long,get,safe,long,property,message,jms,message,string,name,try,return,jms,message,get,long,property,name,catch,exception,e,return,null
JmsMessageHelper -> public static Long getSafeLongProperty(Message jmsMessage, String name);1540108163;Gets a JMS property in a safe way__@param jmsMessage the JMS message_@param name       name of the property to get_@return the property value, or <tt>null</tt> if does not exists or failure to get the value;public static Long getSafeLongProperty(Message jmsMessage, String name) {_        try {_            return jmsMessage.getLongProperty(name)__        } catch (Exception e) {_            _        }_        return null__    };gets,a,jms,property,in,a,safe,way,param,jms,message,the,jms,message,param,name,name,of,the,property,to,get,return,the,property,value,or,tt,null,tt,if,does,not,exists,or,failure,to,get,the,value;public,static,long,get,safe,long,property,message,jms,message,string,name,try,return,jms,message,get,long,property,name,catch,exception,e,return,null
