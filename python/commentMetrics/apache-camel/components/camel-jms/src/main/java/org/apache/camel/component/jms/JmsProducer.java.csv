# id;timestamp;commentText;codeText;commentWords;codeWords
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1280043089;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1280059519;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1281021972;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1283529391;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1285050113;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1289495625;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1293266959;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1294996389;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1295340123;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1295531018;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1295537240;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1295541548;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1296546062;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1297971515;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1298619517;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1301257798;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1303183403;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1305623803;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1306227708;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1306723260;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1307685726;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1313304505;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1313503699;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1328095661;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1329262563;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1338793615;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1339507862;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1341818780;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1341822329;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1348095760;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1351701243;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1355725881;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1374563401;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1376549254;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1383649331;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1385953128;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1392400400;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1415211488;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1420351395;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1464511159;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        if (endpoint.getConfiguration().isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,if,endpoint,get,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1484850270;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final JmsConfiguration configuration = endpoint.getConfiguration()__        final String correlationProperty = configuration.getCorrelationProperty()___        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        final String correlationPropertyValue__        if (correlationProperty == null) {_            correlationPropertyValue = null__        } else {_            correlationPropertyValue = message.getStringProperty(correlationProperty)__        }__        if (!ObjectHelper.isEmpty(correlationPropertyValue)) {_            return correlationPropertyValue__        } else if (configuration.isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,jms,configuration,configuration,endpoint,get,configuration,final,string,correlation,property,configuration,get,correlation,property,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,final,string,correlation,property,value,if,correlation,property,null,correlation,property,value,null,else,correlation,property,value,message,get,string,property,correlation,property,if,object,helper,is,empty,correlation,property,value,return,correlation,property,value,else,if,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1513158838;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final JmsConfiguration configuration = endpoint.getConfiguration()__        final String correlationProperty = configuration.getCorrelationProperty()___        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        final String correlationPropertyValue__        if (correlationProperty == null) {_            correlationPropertyValue = null__        } else {_            correlationPropertyValue = message.getStringProperty(correlationProperty)__        }__        if (!ObjectHelper.isEmpty(correlationPropertyValue)) {_            return correlationPropertyValue__        } else if (configuration.isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,jms,configuration,configuration,endpoint,get,configuration,final,string,correlation,property,configuration,get,correlation,property,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,final,string,correlation,property,value,if,correlation,property,null,correlation,property,value,null,else,correlation,property,value,message,get,string,property,correlation,property,if,object,helper,is,empty,correlation,property,value,return,correlation,property,value,else,if,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1536687142;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final JmsConfiguration configuration = endpoint.getConfiguration()__        final String correlationProperty = configuration.getCorrelationProperty()___        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        final String correlationPropertyValue__        if (correlationProperty == null) {_            correlationPropertyValue = null__        } else {_            correlationPropertyValue = message.getStringProperty(correlationProperty)__        }__        if (!ObjectHelper.isEmpty(correlationPropertyValue)) {_            return correlationPropertyValue__        } else if (configuration.isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,jms,configuration,configuration,endpoint,get,configuration,final,string,correlation,property,configuration,get,correlation,property,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,final,string,correlation,property,value,if,correlation,property,null,correlation,property,value,null,else,correlation,property,value,message,get,string,property,correlation,property,if,object,helper,is,empty,correlation,property,value,return,correlation,property,value,else,if,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1540108160;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final JmsConfiguration configuration = endpoint.getConfiguration()__        final String correlationProperty = configuration.getCorrelationProperty()___        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        final String correlationPropertyValue__        if (correlationProperty == null) {_            correlationPropertyValue = null__        } else {_            correlationPropertyValue = message.getStringProperty(correlationProperty)__        }__        if (!ObjectHelper.isEmpty(correlationPropertyValue)) {_            return correlationPropertyValue__        } else if (configuration.isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,jms,configuration,configuration,endpoint,get,configuration,final,string,correlation,property,configuration,get,correlation,property,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,final,string,correlation,property,value,if,correlation,property,null,correlation,property,value,null,else,correlation,property,value,message,get,string,property,correlation,property,if,object,helper,is,empty,correlation,property,value,return,correlation,property,value,else,if,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1540108161;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final JmsConfiguration configuration = endpoint.getConfiguration()__        final String correlationProperty = configuration.getCorrelationProperty()___        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        final String correlationPropertyValue__        if (correlationProperty == null) {_            correlationPropertyValue = null__        } else {_            correlationPropertyValue = message.getStringProperty(correlationProperty)__        }__        if (!ObjectHelper.isEmpty(correlationPropertyValue)) {_            return correlationPropertyValue__        } else if (configuration.isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,jms,configuration,configuration,endpoint,get,configuration,final,string,correlation,property,configuration,get,correlation,property,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,final,string,correlation,property,value,if,correlation,property,null,correlation,property,value,null,else,correlation,property,value,message,get,string,property,correlation,property,if,object,helper,is,empty,correlation,property,value,return,correlation,property,value,else,if,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1540108163;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final JmsConfiguration configuration = endpoint.getConfiguration()__        final String correlationProperty = configuration.getCorrelationProperty()___        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        final String correlationPropertyValue__        if (correlationProperty == null) {_            correlationPropertyValue = null__        } else {_            correlationPropertyValue = message.getStringProperty(correlationProperty)__        }__        if (!ObjectHelper.isEmpty(correlationPropertyValue)) {_            return correlationPropertyValue__        } else if (configuration.isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,jms,configuration,configuration,endpoint,get,configuration,final,string,correlation,property,configuration,get,correlation,property,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,final,string,correlation,property,value,if,correlation,property,null,correlation,property,value,null,else,correlation,property,value,message,get,string,property,correlation,property,if,object,helper,is,empty,correlation,property,value,return,correlation,property,value,else,if,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1548057494;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final JmsConfiguration configuration = endpoint.getConfiguration()__        final String correlationProperty = configuration.getCorrelationProperty()___        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        final String correlationPropertyValue__        if (correlationProperty == null) {_            correlationPropertyValue = null__        } else {_            correlationPropertyValue = message.getStringProperty(correlationProperty)__        }__        if (!ObjectHelper.isEmpty(correlationPropertyValue)) {_            return correlationPropertyValue__        } else if (configuration.isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,jms,configuration,configuration,endpoint,get,configuration,final,string,correlation,property,configuration,get,correlation,property,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,final,string,correlation,property,value,if,correlation,property,null,correlation,property,value,null,else,correlation,property,value,message,get,string,property,correlation,property,if,object,helper,is,empty,correlation,property,value,return,correlation,property,value,else,if,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1548175645;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final JmsConfiguration configuration = endpoint.getConfiguration()__        final String correlationProperty = configuration.getCorrelationProperty()___        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        final String correlationPropertyValue__        if (correlationProperty == null) {_            correlationPropertyValue = null__        } else {_            correlationPropertyValue = message.getStringProperty(correlationProperty)__        }__        if (!ObjectHelper.isEmpty(correlationPropertyValue)) {_            return correlationPropertyValue__        } else if (configuration.isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,jms,configuration,configuration,endpoint,get,configuration,final,string,correlation,property,configuration,get,correlation,property,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,final,string,correlation,property,value,if,correlation,property,null,correlation,property,value,null,else,correlation,property,value,message,get,string,property,correlation,property,if,object,helper,is,empty,correlation,property,value,return,correlation,property,value,else,if,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException;1548314659;Strategy to determine which correlation id to use among <tt>JMSMessageID</tt> and <tt>JMSCorrelationID</tt>.__@param message   the JMS message_@param provisionalCorrelationId an optional provisional correlation id, which is preferred to be used_@return the correlation id to use_@throws JMSException can be thrown;protected String determineCorrelationId(Message message, String provisionalCorrelationId) throws JMSException {_        if (provisionalCorrelationId != null) {_            return provisionalCorrelationId__        }__        final JmsConfiguration configuration = endpoint.getConfiguration()__        final String correlationProperty = configuration.getCorrelationProperty()___        final String messageId = message.getJMSMessageID()__        final String correlationId = message.getJMSCorrelationID()__        final String correlationPropertyValue__        if (correlationProperty == null) {_            correlationPropertyValue = null__        } else {_            correlationPropertyValue = message.getStringProperty(correlationProperty)__        }__        if (!ObjectHelper.isEmpty(correlationPropertyValue)) {_            return correlationPropertyValue__        } else if (configuration.isUseMessageIDAsCorrelationID()) {_            return messageId__        } else if (ObjectHelper.isEmpty(correlationId)) {_            _            return messageId__        } else {_            return correlationId__        }_    };strategy,to,determine,which,correlation,id,to,use,among,tt,jmsmessage,id,tt,and,tt,jmscorrelation,id,tt,param,message,the,jms,message,param,provisional,correlation,id,an,optional,provisional,correlation,id,which,is,preferred,to,be,used,return,the,correlation,id,to,use,throws,jmsexception,can,be,thrown;protected,string,determine,correlation,id,message,message,string,provisional,correlation,id,throws,jmsexception,if,provisional,correlation,id,null,return,provisional,correlation,id,final,jms,configuration,configuration,endpoint,get,configuration,final,string,correlation,property,configuration,get,correlation,property,final,string,message,id,message,get,jmsmessage,id,final,string,correlation,id,message,get,jmscorrelation,id,final,string,correlation,property,value,if,correlation,property,null,correlation,property,value,null,else,correlation,property,value,message,get,string,property,correlation,property,if,object,helper,is,empty,correlation,property,value,return,correlation,property,value,else,if,configuration,is,use,message,idas,correlation,id,return,message,id,else,if,object,helper,is,empty,correlation,id,return,message,id,else,return,correlation,id
JmsProducer -> public JmsOperations getTemplate();1204655001;Preserved for backwards compatibility.__@deprecated_@see #getInOnlyTemplate();public JmsOperations getTemplate() {_        return getInOnlyTemplate()__    };preserved,for,backwards,compatibility,deprecated,see,get,in,only,template;public,jms,operations,get,template,return,get,in,only,template
JmsProducer -> public JmsOperations getTemplate();1206431352;Preserved for backwards compatibility.__@deprecated_@see #getInOnlyTemplate();public JmsOperations getTemplate() {_        return getInOnlyTemplate()__    };preserved,for,backwards,compatibility,deprecated,see,get,in,only,template;public,jms,operations,get,template,return,get,in,only,template
JmsProducer -> public JmsOperations getTemplate();1206548722;Preserved for backwards compatibility.__@deprecated_@see #getInOnlyTemplate();public JmsOperations getTemplate() {_        return getInOnlyTemplate()__    };preserved,for,backwards,compatibility,deprecated,see,get,in,only,template;public,jms,operations,get,template,return,get,in,only,template
JmsProducer -> public JmsOperations getTemplate();1206940716;Preserved for backwards compatibility.__@deprecated_@see #getInOnlyTemplate();public JmsOperations getTemplate() {_        return getInOnlyTemplate()__    };preserved,for,backwards,compatibility,deprecated,see,get,in,only,template;public,jms,operations,get,template,return,get,in,only,template
JmsProducer -> public JmsOperations getTemplate();1208448482;Preserved for backwards compatibility.__@deprecated_@see #getInOnlyTemplate();public JmsOperations getTemplate() {_        return getInOnlyTemplate()__    };preserved,for,backwards,compatibility,deprecated,see,get,in,only,template;public,jms,operations,get,template,return,get,in,only,template
JmsProducer -> public JmsOperations getTemplate();1208695725;Preserved for backwards compatibility.__@deprecated_@see #getInOnlyTemplate();public JmsOperations getTemplate() {_        return getInOnlyTemplate()__    };preserved,for,backwards,compatibility,deprecated,see,get,in,only,template;public,jms,operations,get,template,return,get,in,only,template
JmsProducer -> public JmsOperations getTemplate();1209803508;Preserved for backwards compatibility.__@deprecated_@see #getInOnlyTemplate();public JmsOperations getTemplate() {_        return getInOnlyTemplate()__    };preserved,for,backwards,compatibility,deprecated,see,get,in,only,template;public,jms,operations,get,template,return,get,in,only,template
JmsProducer -> public JmsOperations getTemplate();1209877127;Preserved for backwards compatibility.__@deprecated_@see #getInOnlyTemplate();public JmsOperations getTemplate() {_        return getInOnlyTemplate()__    };preserved,for,backwards,compatibility,deprecated,see,get,in,only,template;public,jms,operations,get,template,return,get,in,only,template
JmsProducer -> public JmsOperations getTemplate();1210502265;Preserved for backwards compatibility.__@deprecated_@see #getInOnlyTemplate();public JmsOperations getTemplate() {_        return getInOnlyTemplate()__    };preserved,for,backwards,compatibility,deprecated,see,get,in,only,template;public,jms,operations,get,template,return,get,in,only,template
JmsProducer -> public JmsOperations getTemplate();1211648730;Preserved for backwards compatibility.__@deprecated_@see #getInOnlyTemplate();public JmsOperations getTemplate() {_        return getInOnlyTemplate()__    };preserved,for,backwards,compatibility,deprecated,see,get,in,only,template;public,jms,operations,get,template,return,get,in,only,template
JmsProducer -> public JmsOperations getTemplate();1221554494;Preserved for backwards compatibility.__@deprecated_@see #getInOnlyTemplate();public JmsOperations getTemplate() {_        return getInOnlyTemplate()__    };preserved,for,backwards,compatibility,deprecated,see,get,in,only,template;public,jms,operations,get,template,return,get,in,only,template
JmsProducer -> public JmsOperations getTemplate();1225898357;Preserved for backwards compatibility.__@deprecated_@see #getInOnlyTemplate();public JmsOperations getTemplate() {_        return getInOnlyTemplate()__    };preserved,for,backwards,compatibility,deprecated,see,get,in,only,template;public,jms,operations,get,template,return,get,in,only,template
JmsProducer -> public JmsOperations getTemplate();1226049018;Preserved for backwards compatibility.__@deprecated will be removed in Camel 2.0_@see #getInOnlyTemplate();public JmsOperations getTemplate() {_        return getInOnlyTemplate()__    };preserved,for,backwards,compatibility,deprecated,will,be,removed,in,camel,2,0,see,get,in,only,template;public,jms,operations,get,template,return,get,in,only,template
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, DeferredMessageSentCallback callback);1246452394;Sends the message using the JmsTemplate.__@param inOut  use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the javax.jms.Message to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, DeferredMessageSentCallback callback) {__        CamelJmsTemplate template = null__        CamelJmsTemplate102 template102 = null__        if (endpoint.isUseVersion102()) {_            template102 = (JmsConfiguration.CamelJmsTemplate102) (inOut ? getInOutTemplate() : getInOnlyTemplate())__        } else {_            template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())__        }__        if (LOG.isTraceEnabled()) {_            LOG.trace("Using JMS API " + (endpoint.isUseVersion102() ? "v1.0.2" : "v1.1"))__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                } else if (template102 != null) {_                    template102.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                } else if (template102 != null) {_                    template102.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                } else if (template102 != null) {_                    template102.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                } else if (template102 != null) {_                    template102.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,javax,jms,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,deferred,message,sent,callback,callback,camel,jms,template,template,null,camel,jms,template102,template102,null,if,endpoint,is,use,version102,template102,jms,configuration,camel,jms,template102,in,out,get,in,out,template,get,in,only,template,else,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,jms,api,endpoint,is,use,version102,v1,0,2,v1,1,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template102,null,template102,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,template102,null,template102,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template102,null,template102,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,if,template102,null,template102,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, DeferredMessageSentCallback callback);1246518585;Sends the message using the JmsTemplate.__@param inOut  use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the javax.jms.Message to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, DeferredMessageSentCallback callback) {__        CamelJmsTemplate template = null__        CamelJmsTemplate102 template102 = null__        if (endpoint.isUseVersion102()) {_            template102 = (JmsConfiguration.CamelJmsTemplate102) (inOut ? getInOutTemplate() : getInOnlyTemplate())__        } else {_            template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())__        }__        if (LOG.isTraceEnabled()) {_            LOG.trace("Using JMS API " + (endpoint.isUseVersion102() ? "v1.0.2" : "v1.1"))__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                } else if (template102 != null) {_                    template102.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                } else if (template102 != null) {_                    template102.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                } else if (template102 != null) {_                    template102.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                } else if (template102 != null) {_                    template102.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,javax,jms,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,deferred,message,sent,callback,callback,camel,jms,template,template,null,camel,jms,template102,template102,null,if,endpoint,is,use,version102,template102,jms,configuration,camel,jms,template102,in,out,get,in,out,template,get,in,only,template,else,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,jms,api,endpoint,is,use,version102,v1,0,2,v1,1,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template102,null,template102,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,template102,null,template102,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template102,null,template102,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,if,template102,null,template102,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, DeferredMessageSentCallback callback);1246524782;Sends the message using the JmsTemplate.__@param inOut  use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the javax.jms.Message to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, DeferredMessageSentCallback callback) {__        CamelJmsTemplate template = null__        CamelJmsTemplate102 template102 = null__        if (endpoint.isUseVersion102()) {_            template102 = (JmsConfiguration.CamelJmsTemplate102) (inOut ? getInOutTemplate() : getInOnlyTemplate())__        } else {_            template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())__        }__        if (LOG.isTraceEnabled()) {_            LOG.trace("Using " + (inOut ? "inOut" : "inOnly") + " jms template to send with API "_                    + (endpoint.isUseVersion102() ? "v1.0.2" : "v1.1"))__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                } else if (template102 != null) {_                    template102.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                } else if (template102 != null) {_                    template102.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                } else if (template102 != null) {_                    template102.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                } else if (template102 != null) {_                    template102.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,javax,jms,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,deferred,message,sent,callback,callback,camel,jms,template,template,null,camel,jms,template102,template102,null,if,endpoint,is,use,version102,template102,jms,configuration,camel,jms,template102,in,out,get,in,out,template,get,in,only,template,else,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,in,out,in,out,in,only,jms,template,to,send,with,api,endpoint,is,use,version102,v1,0,2,v1,1,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template102,null,template102,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,template102,null,template102,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template102,null,template102,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,if,template102,null,template102,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, DeferredMessageSentCallback callback);1246620635;Sends the message using the JmsTemplate.__@param inOut  use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the javax.jms.Message to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, DeferredMessageSentCallback callback) {__        CamelJmsTemplate template = null__        CamelJmsTemplate102 template102 = null__        if (endpoint.isUseVersion102()) {_            template102 = (JmsConfiguration.CamelJmsTemplate102) (inOut ? getInOutTemplate() : getInOnlyTemplate())__        } else {_            template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())__        }__        if (LOG.isTraceEnabled()) {_            LOG.trace("Using " + (inOut ? "inOut" : "inOnly") + " jms template to send with API "_                    + (endpoint.isUseVersion102() ? "v1.0.2" : "v1.1"))__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                } else if (template102 != null) {_                    template102.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                } else if (template102 != null) {_                    template102.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                } else if (template102 != null) {_                    template102.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                } else if (template102 != null) {_                    template102.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,javax,jms,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,deferred,message,sent,callback,callback,camel,jms,template,template,null,camel,jms,template102,template102,null,if,endpoint,is,use,version102,template102,jms,configuration,camel,jms,template102,in,out,get,in,out,template,get,in,only,template,else,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,in,out,in,out,in,only,jms,template,to,send,with,api,endpoint,is,use,version102,v1,0,2,v1,1,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template102,null,template102,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,template102,null,template102,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template102,null,template102,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,if,template102,null,template102,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, DeferredMessageSentCallback callback);1246960525;Sends the message using the JmsTemplate.__@param inOut  use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the javax.jms.Message to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, DeferredMessageSentCallback callback) {__        CamelJmsTemplate template = null__        CamelJmsTemplate102 template102 = null__        if (endpoint.isUseVersion102()) {_            template102 = (JmsConfiguration.CamelJmsTemplate102) (inOut ? getInOutTemplate() : getInOnlyTemplate())__        } else {_            template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())__        }__        if (LOG.isTraceEnabled()) {_            LOG.trace("Using " + (inOut ? "inOut" : "inOnly") + " jms template to send with API "_                    + (endpoint.isUseVersion102() ? "v1.0.2" : "v1.1"))__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                } else if (template102 != null) {_                    template102.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                } else if (template102 != null) {_                    template102.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                } else if (template102 != null) {_                    template102.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                } else if (template102 != null) {_                    template102.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,javax,jms,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,deferred,message,sent,callback,callback,camel,jms,template,template,null,camel,jms,template102,template102,null,if,endpoint,is,use,version102,template102,jms,configuration,camel,jms,template102,in,out,get,in,out,template,get,in,only,template,else,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,in,out,in,out,in,only,jms,template,to,send,with,api,endpoint,is,use,version102,v1,0,2,v1,1,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template102,null,template102,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,template102,null,template102,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template102,null,template102,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,if,template102,null,template102,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, DeferredMessageSentCallback callback);1247496302;Sends the message using the JmsTemplate.__@param inOut  use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the javax.jms.Message to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, DeferredMessageSentCallback callback) {__        CamelJmsTemplate template = null__        CamelJmsTemplate102 template102 = null__        if (endpoint.isUseVersion102()) {_            template102 = (JmsConfiguration.CamelJmsTemplate102) (inOut ? getInOutTemplate() : getInOnlyTemplate())__        } else {_            template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())__        }__        if (LOG.isTraceEnabled()) {_            LOG.trace("Using " + (inOut ? "inOut" : "inOnly") + " jms template to send with API "_                    + (endpoint.isUseVersion102() ? "v1.0.2" : "v1.1"))__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                } else if (template102 != null) {_                    template102.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                } else if (template102 != null) {_                    template102.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                } else if (template102 != null) {_                    template102.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                } else if (template102 != null) {_                    template102.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,javax,jms,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,deferred,message,sent,callback,callback,camel,jms,template,template,null,camel,jms,template102,template102,null,if,endpoint,is,use,version102,template102,jms,configuration,camel,jms,template102,in,out,get,in,out,template,get,in,only,template,else,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,in,out,in,out,in,only,jms,template,to,send,with,api,endpoint,is,use,version102,v1,0,2,v1,1,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template102,null,template102,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,template102,null,template102,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template102,null,template102,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,if,template102,null,template102,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, DeferredMessageSentCallback callback);1249372471;Sends the message using the JmsTemplate.__@param inOut  use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the javax.jms.Message to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, DeferredMessageSentCallback callback) {__        CamelJmsTemplate template = null__        CamelJmsTemplate102 template102 = null__        if (endpoint.isUseVersion102()) {_            template102 = (JmsConfiguration.CamelJmsTemplate102) (inOut ? getInOutTemplate() : getInOnlyTemplate())__        } else {_            template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())__        }__        if (LOG.isTraceEnabled()) {_            LOG.trace("Using " + (inOut ? "inOut" : "inOnly") + " jms template to send with API "_                    + (endpoint.isUseVersion102() ? "v1.0.2" : "v1.1"))__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                } else if (template102 != null) {_                    template102.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                } else if (template102 != null) {_                    template102.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                } else if (template102 != null) {_                    template102.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                } else if (template102 != null) {_                    template102.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,javax,jms,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,deferred,message,sent,callback,callback,camel,jms,template,template,null,camel,jms,template102,template102,null,if,endpoint,is,use,version102,template102,jms,configuration,camel,jms,template102,in,out,get,in,out,template,get,in,only,template,else,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,in,out,in,out,in,only,jms,template,to,send,with,api,endpoint,is,use,version102,v1,0,2,v1,1,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template102,null,template102,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,template102,null,template102,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template102,null,template102,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,if,template102,null,template102,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, DeferredMessageSentCallback callback);1255860102;Sends the message using the JmsTemplate.__@param inOut  use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the javax.jms.Message to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, DeferredMessageSentCallback callback) {__        CamelJmsTemplate template = null__        CamelJmsTemplate102 template102 = null__        if (endpoint.isUseVersion102()) {_            template102 = (JmsConfiguration.CamelJmsTemplate102) (inOut ? getInOutTemplate() : getInOnlyTemplate())__        } else {_            template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())__        }__        if (LOG.isTraceEnabled()) {_            LOG.trace("Using " + (inOut ? "inOut" : "inOnly") + " jms template to send with API "_                    + (endpoint.isUseVersion102() ? "v1.0.2" : "v1.1"))__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                } else if (template102 != null) {_                    template102.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                } else if (template102 != null) {_                    template102.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                } else if (template102 != null) {_                    template102.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                } else if (template102 != null) {_                    template102.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,javax,jms,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,deferred,message,sent,callback,callback,camel,jms,template,template,null,camel,jms,template102,template102,null,if,endpoint,is,use,version102,template102,jms,configuration,camel,jms,template102,in,out,get,in,out,template,get,in,only,template,else,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,in,out,in,out,in,only,jms,template,to,send,with,api,endpoint,is,use,version102,v1,0,2,v1,1,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template102,null,template102,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,template102,null,template102,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template102,null,template102,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,if,template102,null,template102,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, DeferredMessageSentCallback callback);1256200915;Sends the message using the JmsTemplate.__@param inOut  use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the javax.jms.Message to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, DeferredMessageSentCallback callback) {__        CamelJmsTemplate template = null__        CamelJmsTemplate102 template102 = null__        if (endpoint.isUseVersion102()) {_            template102 = (JmsConfiguration.CamelJmsTemplate102) (inOut ? getInOutTemplate() : getInOnlyTemplate())__        } else {_            template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())__        }__        if (LOG.isTraceEnabled()) {_            LOG.trace("Using " + (inOut ? "inOut" : "inOnly") + " jms template to send with API "_                    + (endpoint.isUseVersion102() ? "v1.0.2" : "v1.1"))__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                } else if (template102 != null) {_                    template102.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                } else if (template102 != null) {_                    template102.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                } else if (template102 != null) {_                    template102.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                } else if (template102 != null) {_                    template102.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,javax,jms,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,deferred,message,sent,callback,callback,camel,jms,template,template,null,camel,jms,template102,template102,null,if,endpoint,is,use,version102,template102,jms,configuration,camel,jms,template102,in,out,get,in,out,template,get,in,only,template,else,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,in,out,in,out,in,only,jms,template,to,send,with,api,endpoint,is,use,version102,v1,0,2,v1,1,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template102,null,template102,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,template102,null,template102,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template102,null,template102,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,if,template102,null,template102,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, DeferredMessageSentCallback callback);1259507416;Sends the message using the JmsTemplate.__@param inOut  use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the javax.jms.Message to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, DeferredMessageSentCallback callback) {__        CamelJmsTemplate template = null__        CamelJmsTemplate102 template102 = null__        if (endpoint.isUseVersion102()) {_            template102 = (JmsConfiguration.CamelJmsTemplate102) (inOut ? getInOutTemplate() : getInOnlyTemplate())__        } else {_            template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())__        }__        if (LOG.isTraceEnabled()) {_            LOG.trace("Using " + (inOut ? "inOut" : "inOnly") + " jms template to send with API "_                    + (endpoint.isUseVersion102() ? "v1.0.2" : "v1.1"))__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                } else if (template102 != null) {_                    template102.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                } else if (template102 != null) {_                    template102.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                } else if (template102 != null) {_                    template102.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                } else if (template102 != null) {_                    template102.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,javax,jms,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,deferred,message,sent,callback,callback,camel,jms,template,template,null,camel,jms,template102,template102,null,if,endpoint,is,use,version102,template102,jms,configuration,camel,jms,template102,in,out,get,in,out,template,get,in,only,template,else,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,in,out,in,out,in,only,jms,template,to,send,with,api,endpoint,is,use,version102,v1,0,2,v1,1,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template102,null,template102,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,template102,null,template102,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template102,null,template102,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,if,template102,null,template102,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, DeferredMessageSentCallback callback);1262946790;Sends the message using the JmsTemplate.__@param inOut  use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the javax.jms.Message to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, DeferredMessageSentCallback callback) {__        CamelJmsTemplate template = null__        CamelJmsTemplate102 template102 = null__        if (endpoint.isUseVersion102()) {_            template102 = (JmsConfiguration.CamelJmsTemplate102) (inOut ? getInOutTemplate() : getInOnlyTemplate())__        } else {_            template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())__        }__        if (LOG.isTraceEnabled()) {_            LOG.trace("Using " + (inOut ? "inOut" : "inOnly") + " jms template to send with API "_                    + (endpoint.isUseVersion102() ? "v1.0.2" : "v1.1"))__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                } else if (template102 != null) {_                    template102.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                } else if (template102 != null) {_                    template102.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                } else if (template102 != null) {_                    template102.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                } else if (template102 != null) {_                    template102.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,javax,jms,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,deferred,message,sent,callback,callback,camel,jms,template,template,null,camel,jms,template102,template102,null,if,endpoint,is,use,version102,template102,jms,configuration,camel,jms,template102,in,out,get,in,out,template,get,in,only,template,else,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,in,out,in,out,in,only,jms,template,to,send,with,api,endpoint,is,use,version102,v1,0,2,v1,1,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template102,null,template102,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,template102,null,template102,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template102,null,template102,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,if,template102,null,template102,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, DeferredMessageSentCallback callback);1279530707;Sends the message using the JmsTemplate.__@param inOut  use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the javax.jms.Message to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, DeferredMessageSentCallback callback) {__        CamelJmsTemplate template = null__        CamelJmsTemplate102 template102 = null__        if (endpoint.isUseVersion102()) {_            template102 = (JmsConfiguration.CamelJmsTemplate102) (inOut ? getInOutTemplate() : getInOnlyTemplate())__        } else {_            template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())__        }__        if (LOG.isTraceEnabled()) {_            LOG.trace("Using " + (inOut ? "inOut" : "inOnly") + " jms template to send with API "_                    + (endpoint.isUseVersion102() ? "v1.0.2" : "v1.1"))__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                } else if (template102 != null) {_                    template102.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                } else if (template102 != null) {_                    template102.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                } else if (template102 != null) {_                    template102.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                } else if (template102 != null) {_                    template102.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,javax,jms,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,deferred,message,sent,callback,callback,camel,jms,template,template,null,camel,jms,template102,template102,null,if,endpoint,is,use,version102,template102,jms,configuration,camel,jms,template102,in,out,get,in,out,template,get,in,only,template,else,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,in,out,in,out,in,only,jms,template,to,send,with,api,endpoint,is,use,version102,v1,0,2,v1,1,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template102,null,template102,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,template102,null,template102,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template102,null,template102,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,if,template102,null,template102,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, DeferredMessageSentCallback callback);1279698877;Sends the message using the JmsTemplate.__@param inOut  use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the javax.jms.Message to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, DeferredMessageSentCallback callback) {__        CamelJmsTemplate template = null__        CamelJmsTemplate102 template102 = null__        if (endpoint.isUseVersion102()) {_            template102 = (JmsConfiguration.CamelJmsTemplate102) (inOut ? getInOutTemplate() : getInOnlyTemplate())__        } else {_            template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())__        }__        if (LOG.isTraceEnabled()) {_            LOG.trace("Using " + (inOut ? "inOut" : "inOnly") + " jms template to send with API "_                    + (endpoint.isUseVersion102() ? "v1.0.2" : "v1.1"))__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                } else if (template102 != null) {_                    template102.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                } else if (template102 != null) {_                    template102.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                } else if (template102 != null) {_                    template102.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                } else if (template102 != null) {_                    template102.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,javax,jms,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,deferred,message,sent,callback,callback,camel,jms,template,template,null,camel,jms,template102,template102,null,if,endpoint,is,use,version102,template102,jms,configuration,camel,jms,template102,in,out,get,in,out,template,get,in,only,template,else,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,in,out,in,out,in,only,jms,template,to,send,with,api,endpoint,is,use,version102,v1,0,2,v1,1,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template102,null,template102,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,template102,null,template102,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template102,null,template102,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,if,template102,null,template102,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1280043089;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = null__        CamelJmsTemplate102 template102 = null__        if (endpoint.isUseVersion102()) {_            template102 = (JmsConfiguration.CamelJmsTemplate102) (inOut ? getInOutTemplate() : getInOnlyTemplate())__        } else {_            template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())__        }__        if (LOG.isTraceEnabled()) {_            LOG.trace("Using " + (inOut ? "inOut" : "inOnly") + " jms template to send with API "_                    + (endpoint.isUseVersion102() ? "v1.0.2" : "v1.1"))__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                } else if (template102 != null) {_                    template102.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                } else if (template102 != null) {_                    template102.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                } else if (template102 != null) {_                    template102.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                } else if (template102 != null) {_                    template102.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,null,camel,jms,template102,template102,null,if,endpoint,is,use,version102,template102,jms,configuration,camel,jms,template102,in,out,get,in,out,template,get,in,only,template,else,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,in,out,in,out,in,only,jms,template,to,send,with,api,endpoint,is,use,version102,v1,0,2,v1,1,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template102,null,template102,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,template102,null,template102,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template102,null,template102,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,if,template102,null,template102,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1280059519;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using " + (inOut ? "inOut" : "inOnly") + " jms template")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,in,out,in,out,in,only,jms,template,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1281021972;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using " + (inOut ? "inOut" : "inOnly") + " jms template")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,in,out,in,out,in,only,jms,template,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1283529391;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using " + (inOut ? "inOut" : "inOnly") + " jms template")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,in,out,in,out,in,only,jms,template,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1285050113;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using " + (inOut ? "inOut" : "inOnly") + " jms template")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,in,out,in,out,in,only,jms,template,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1289495625;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using " + (inOut ? "inOut" : "inOnly") + " jms template")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,in,out,in,out,in,only,jms,template,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1293266959;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using " + (inOut ? "inOut" : "inOnly") + " jms template")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,in,out,in,out,in,only,jms,template,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1294996389;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using " + (inOut ? "inOut" : "inOnly") + " jms template")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,in,out,in,out,in,only,jms,template,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1295340123;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using " + (inOut ? "inOut" : "inOnly") + " jms template")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,in,out,in,out,in,only,jms,template,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1295531018;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using " + (inOut ? "inOut" : "inOnly") + " jms template")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,in,out,in,out,in,only,jms,template,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1295537240;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using " + (inOut ? "inOut" : "inOnly") + " jms template")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,in,out,in,out,in,only,jms,template,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1295541548;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using " + (inOut ? "inOut" : "inOnly") + " jms template")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,in,out,in,out,in,only,jms,template,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1296546062;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using " + (inOut ? "inOut" : "inOnly") + " jms template")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,in,out,in,out,in,only,jms,template,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1297971515;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using " + (inOut ? "inOut" : "inOnly") + " jms template")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,in,out,in,out,in,only,jms,template,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1298619517;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using " + (inOut ? "inOut" : "inOnly") + " jms template")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,in,out,in,out,in,only,jms,template,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1301257798;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        LOG.trace("Using {} jms template", inOut ? "inOut" : "inOnly")___        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1303183403;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        LOG.trace("Using {} jms template", inOut ? "inOut" : "inOnly")___        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1305623803;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        LOG.trace("Using {} jms template", inOut ? "inOut" : "inOnly")___        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1306227708;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        LOG.trace("Using {} jms template", inOut ? "inOut" : "inOnly")___        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1306723260;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        LOG.trace("Using {} jms template", inOut ? "inOut" : "inOnly")___        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1307685726;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        LOG.trace("Using {} jms template", inOut ? "inOut" : "inOnly")___        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1313304505;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        LOG.trace("Using {} jms template", inOut ? "inOut" : "inOnly")___        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1313503699;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        LOG.trace("Using {} jms template", inOut ? "inOut" : "inOnly")___        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1328095661;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using {} jms template", inOut ? "inOut" : "inOnly")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1329262563;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using {} jms template", inOut ? "inOut" : "inOnly")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1338793615;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using {} jms template", inOut ? "inOut" : "inOnly")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1339507862;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using {} jms template", inOut ? "inOut" : "inOnly")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1341818780;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using {} jms template", inOut ? "inOut" : "inOnly")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1341822329;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using {} jms template", inOut ? "inOut" : "inOnly")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1348095760;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback for inOut messages;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using {} jms template", inOut ? "inOut" : "inOnly")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,for,in,out,messages;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1351701243;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback to invoke when message has been sent;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using {} jms template", inOut ? "inOut" : "inOnly")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,to,invoke,when,message,has,been,sent;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,callback,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,callback,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1355725881;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback to invoke when message has been sent;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using {} jms template", inOut ? "inOut" : "inOnly")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,to,invoke,when,message,has,been,sent;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,callback,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,callback,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1374563401;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback to invoke when message has been sent;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using {} jms template", inOut ? "inOut" : "inOnly")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,to,invoke,when,message,has,been,sent;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,callback,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,callback,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1376549254;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback to invoke when message has been sent;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using {} jms template", inOut ? "inOut" : "inOnly")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,to,invoke,when,message,has,been,sent;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,callback,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,callback,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1383649331;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback to invoke when message has been sent;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using {} jms template", inOut ? "inOut" : "inOnly")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,to,invoke,when,message,has,been,sent;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,callback,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,callback,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1385953128;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback to invoke when message has been sent;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using {} jms template", inOut ? "inOut" : "inOnly")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,to,invoke,when,message,has,been,sent;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,callback,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,callback,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1392400400;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback to invoke when message has been sent;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using {} jms template", inOut ? "inOut" : "inOnly")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,to,invoke,when,message,has,been,sent;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,callback,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,callback,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1415211488;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback to invoke when message has been sent;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using {} jms template", inOut ? "inOut" : "inOnly")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,to,invoke,when,message,has,been,sent;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,callback,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,callback,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1420351395;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback to invoke when message has been sent;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using {} jms template", inOut ? "inOut" : "inOnly")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,to,invoke,when,message,has,been,sent;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,callback,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,callback,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1464511159;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback to invoke when message has been sent;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using {} jms template", inOut ? "inOut" : "inOnly")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,to,invoke,when,message,has,been,sent;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,callback,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,callback,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1484850270;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback to invoke when message has been sent;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using {} jms template", inOut ? "inOut" : "inOnly")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,to,invoke,when,message,has,been,sent;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,callback,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,callback,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1513158838;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback to invoke when message has been sent;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using {} jms template", inOut ? "inOut" : "inOnly")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,to,invoke,when,message,has,been,sent;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,callback,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,callback,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1536687142;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback to invoke when message has been sent;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (LOG.isTraceEnabled()) {_            LOG.trace("Using {} jms template", inOut ? "inOut" : "inOnly")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,to,invoke,when,message,has,been,sent;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,callback,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,callback,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1540108160;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback to invoke when message has been sent;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (log.isTraceEnabled()) {_            log.trace("Using {} jms template", inOut ? "inOut" : "inOnly")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,to,invoke,when,message,has,been,sent;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,callback,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,callback,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1540108161;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback to invoke when message has been sent;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (log.isTraceEnabled()) {_            log.trace("Using {} jms template", inOut ? "inOut" : "inOnly")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,to,invoke,when,message,has,been,sent;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,callback,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,callback,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1540108163;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback to invoke when message has been sent;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (log.isTraceEnabled()) {_            log.trace("Using {} jms template", inOut ? "inOut" : "inOnly")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,to,invoke,when,message,has,been,sent;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,callback,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,callback,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1548057494;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback to invoke when message has been sent;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (log.isTraceEnabled()) {_            log.trace("Using {} jms template", inOut ? "inOut" : "inOnly")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,to,invoke,when,message,has,been,sent;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,callback,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,callback,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1548175645;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback to invoke when message has been sent;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (log.isTraceEnabled()) {_            log.trace("Using {} jms template", inOut ? "inOut" : "inOnly")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,to,invoke,when,message,has,been,sent;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,callback,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,callback,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void doSend(boolean inOut, String destinationName, Destination destination,                           MessageCreator messageCreator, MessageSentCallback callback);1548314659;Sends the message using the JmsTemplate.__@param inOut           use inOut or inOnly template_@param destinationName the destination name_@param destination     the destination (if no name provided)_@param messageCreator  the creator to create the {@link Message} to send_@param callback        optional callback to invoke when message has been sent;protected void doSend(boolean inOut, String destinationName, Destination destination,_                          MessageCreator messageCreator, MessageSentCallback callback) {__        CamelJmsTemplate template = (CamelJmsTemplate) (inOut ? getInOutTemplate() : getInOnlyTemplate())___        if (log.isTraceEnabled()) {_            log.trace("Using {} jms template", inOut ? "inOut" : "inOnly")__        }__        _        if (destination != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destination, messageCreator, callback)__                }_            }_        } else if (destinationName != null) {_            if (inOut) {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            } else {_                if (template != null) {_                    template.send(destinationName, messageCreator, callback)__                }_            }_        } else {_            throw new IllegalArgumentException("Neither destination nor destinationName is specified on this endpoint: " + endpoint)__        }_    };sends,the,message,using,the,jms,template,param,in,out,use,in,out,or,in,only,template,param,destination,name,the,destination,name,param,destination,the,destination,if,no,name,provided,param,message,creator,the,creator,to,create,the,link,message,to,send,param,callback,optional,callback,to,invoke,when,message,has,been,sent;protected,void,do,send,boolean,in,out,string,destination,name,destination,destination,message,creator,message,creator,message,sent,callback,callback,camel,jms,template,template,camel,jms,template,in,out,get,in,out,template,get,in,only,template,if,log,is,trace,enabled,log,trace,using,jms,template,in,out,in,out,in,only,if,destination,null,if,in,out,if,template,null,template,send,destination,message,creator,callback,else,if,template,null,template,send,destination,message,creator,callback,else,if,destination,name,null,if,in,out,if,template,null,template,send,destination,name,message,creator,callback,else,if,template,null,template,send,destination,name,message,creator,callback,else,throw,new,illegal,argument,exception,neither,destination,nor,destination,name,is,specified,on,this,endpoint,endpoint
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1303183403;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: " + template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.info("Successfully tested JMS Connection on startup for destination: " + template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,info,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1305623803;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: " + template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.info("Successfully tested JMS Connection on startup for destination: " + template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,info,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1306227708;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: " + template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.info("Successfully tested JMS Connection on startup for destination: " + template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,info,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1306723260;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: " + template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.info("Successfully tested JMS Connection on startup for destination: " + template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,info,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1307685726;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: " + template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.info("Successfully tested JMS Connection on startup for destination: " + template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,info,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1313304505;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: " + template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.info("Successfully tested JMS Connection on startup for destination: " + template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,info,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1313503699;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: " + template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.info("Successfully tested JMS Connection on startup for destination: " + template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,info,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1328095661;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: " + template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.debug("Successfully tested JMS Connection on startup for destination: " + template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,debug,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1329262563;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: " + template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.debug("Successfully tested JMS Connection on startup for destination: " + template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,debug,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1338793615;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: " + template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.debug("Successfully tested JMS Connection on startup for destination: " + template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,debug,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1339507862;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: " + template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.debug("Successfully tested JMS Connection on startup for destination: " + template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,debug,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1341818780;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: " + template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.debug("Successfully tested JMS Connection on startup for destination: " + template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,debug,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1341822329;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: " + template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.debug("Successfully tested JMS Connection on startup for destination: " + template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,debug,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1348095760;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: " + template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.debug("Successfully tested JMS Connection on startup for destination: " + template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,debug,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1351701243;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: " + template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.debug("Successfully tested JMS Connection on startup for destination: " + template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,debug,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1355725881;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: " + template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.debug("Successfully tested JMS Connection on startup for destination: " + template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,debug,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1374563401;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: " + template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.debug("Successfully tested JMS Connection on startup for destination: " + template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,debug,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1376549254;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: " + template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.debug("Successfully tested JMS Connection on startup for destination: " + template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,debug,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1383649331;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: " + template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.debug("Successfully tested JMS Connection on startup for destination: " + template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,debug,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1385953128;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: " + template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.debug("Successfully tested JMS Connection on startup for destination: " + template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,debug,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1392400400;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: " + template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.debug("Successfully tested JMS Connection on startup for destination: " + template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,debug,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1415211488;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: " + template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.debug("Successfully tested JMS Connection on startup for destination: " + template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,debug,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1420351395;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: " + template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.debug("Successfully tested JMS Connection on startup for destination: " + template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,debug,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1464511159;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: " + template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.debug("Successfully tested JMS Connection on startup for destination: " + template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,debug,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1484850270;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: " + template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.debug("Successfully tested JMS Connection on startup for destination: " + template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,debug,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1513158838;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: " + template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.debug("Successfully tested JMS Connection on startup for destination: " + template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,debug,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1536687142;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: {}", template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.debug("Successfully tested JMS Connection on startup for destination: {}", template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,debug,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1540108160;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: {}", template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.debug("Successfully tested JMS Connection on startup for destination: {}", template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,debug,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1540108161;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: {}", template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.debug("Successfully tested JMS Connection on startup for destination: {}", template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,debug,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1540108163;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: {}", template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.debug("Successfully tested JMS Connection on startup for destination: {}", template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,debug,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1548057494;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: {}", template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.debug("Successfully tested JMS Connection on startup for destination: {}", template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,debug,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1548175645;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: {}", template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.debug("Successfully tested JMS Connection on startup for destination: {}", template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,debug,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
JmsProducer -> protected void testConnectionOnStartup() throws FailedToCreateProducerException;1548314659;Pre tests the connection before starting the listening._<p/>_In case of connection failure the exception is thrown which prevents Camel from starting.__@throws FailedToCreateProducerException is thrown if testing the connection failed;protected void testConnectionOnStartup() throws FailedToCreateProducerException {_        try {_            CamelJmsTemplate template = (CamelJmsTemplate) getInOnlyTemplate()___            if (log.isDebugEnabled()) {_                log.debug("Testing JMS Connection on startup for destination: {}", template.getDefaultDestinationName())__            }__            Connection conn = template.getConnectionFactory().createConnection()__            JmsUtils.closeConnection(conn)___            log.debug("Successfully tested JMS Connection on startup for destination: {}", template.getDefaultDestinationName())__        } catch (Exception e) {_            throw new FailedToCreateProducerException(getEndpoint(), e)__        }_    };pre,tests,the,connection,before,starting,the,listening,p,in,case,of,connection,failure,the,exception,is,thrown,which,prevents,camel,from,starting,throws,failed,to,create,producer,exception,is,thrown,if,testing,the,connection,failed;protected,void,test,connection,on,startup,throws,failed,to,create,producer,exception,try,camel,jms,template,template,camel,jms,template,get,in,only,template,if,log,is,debug,enabled,log,debug,testing,jms,connection,on,startup,for,destination,template,get,default,destination,name,connection,conn,template,get,connection,factory,create,connection,jms,utils,close,connection,conn,log,debug,successfully,tested,jms,connection,on,startup,for,destination,template,get,default,destination,name,catch,exception,e,throw,new,failed,to,create,producer,exception,get,endpoint,e
