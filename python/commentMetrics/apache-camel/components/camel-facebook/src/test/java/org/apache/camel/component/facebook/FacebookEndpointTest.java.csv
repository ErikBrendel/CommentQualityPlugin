commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testNoArgsEndpoint() throws Exception {     final MockEndpoint mockEndpoint = getMockEndpoint("mock://testNoArgs").     mockEndpoint.expectedMessageCount(1).     template().requestBodyAndHeader("direct:testNoArgs", null, FacebookConstants.FACEBOOK_PROPERTY_PREFIX + "userId", "me").     mockEndpoint.assertIsSatisfied(). }
false;protected;0;8;;@Override protected CamelContext createCamelContext() throws Exception {     final CamelContext camelContext = super.createCamelContext().     final FacebookComponent component = new FacebookComponent().     component.setConfiguration(getConfiguration()).     camelContext.addComponent("facebook", component).     return camelContext. }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:testNoArgs").to("facebook:getuserlikes").to("mock://testNoArgs"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:testNoArgs").to("facebook:getuserlikes").to("mock://testNoArgs").         }     }. }
