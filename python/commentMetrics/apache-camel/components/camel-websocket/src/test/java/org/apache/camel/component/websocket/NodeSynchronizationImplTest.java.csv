# id;timestamp;commentText;codeText;commentWords;codeWords
NodeSynchronizationImplTest -> @Before     public void setUp() throws Exception;1325845474;@throws Exception;@Before_    public void setUp() throws Exception {__        store1 = new MemoryWebsocketStore()__        store2 = new MemoryWebsocketStore()___        websocket1 = new DefaultWebsocket(sync, consumer)__        websocket1.setConnectionKey(KEY_1)___        websocket2 = new DefaultWebsocket(sync, consumer)__        websocket2.setConnectionKey(KEY_2)___        _        _    };throws,exception;before,public,void,set,up,throws,exception,store1,new,memory,websocket,store,store2,new,memory,websocket,store,websocket1,new,default,websocket,sync,consumer,websocket1,set,connection,key,websocket2,new,default,websocket,sync,consumer,websocket2,set,connection,key
NodeSynchronizationImplTest -> @Before     public void setUp() throws Exception;1330966242;@throws Exception;@Before_    public void setUp() throws Exception {__        store1 = new MemoryWebsocketStore()__        store2 = new MemoryWebsocketStore()___        websocket1 = new DefaultWebsocket(sync, consumer)__        websocket1.setConnectionKey(KEY_1)___        websocket2 = new DefaultWebsocket(sync, consumer)__        websocket2.setConnectionKey(KEY_2)___        _        _    };throws,exception;before,public,void,set,up,throws,exception,store1,new,memory,websocket,store,store2,new,memory,websocket,store,websocket1,new,default,websocket,sync,consumer,websocket1,set,connection,key,websocket2,new,default,websocket,sync,consumer,websocket2,set,connection,key
NodeSynchronizationImplTest -> @Before     public void setUp() throws Exception;1331993155;@throws Exception;@Before_    public void setUp() throws Exception {__        store1 = new MemoryWebsocketStore()___        websocket1 = new DefaultWebsocket(sync, consumer)__        websocket1.setConnectionKey(KEY_1)___        websocket2 = new DefaultWebsocket(sync, consumer)__        websocket2.setConnectionKey(KEY_2)___        _        _    };throws,exception;before,public,void,set,up,throws,exception,store1,new,memory,websocket,store,websocket1,new,default,websocket,sync,consumer,websocket1,set,connection,key,websocket2,new,default,websocket,sync,consumer,websocket2,set,connection,key
NodeSynchronizationImplTest -> @Before     public void setUp() throws Exception;1491316490;@throws Exception;@Before_    public void setUp() throws Exception {__        store1 = new MemoryWebsocketStore()___        websocket1 = new DefaultWebsocket(sync, null, consumer)__        websocket1.setConnectionKey(KEY_1)___        websocket2 = new DefaultWebsocket(sync, null, consumer)__        websocket2.setConnectionKey(KEY_2)___        _        _    };throws,exception;before,public,void,set,up,throws,exception,store1,new,memory,websocket,store,websocket1,new,default,websocket,sync,null,consumer,websocket1,set,connection,key,websocket2,new,default,websocket,sync,null,consumer,websocket2,set,connection,key
NodeSynchronizationImplTest -> @Test     public void testAddSocketMemoryOnly();1325845474;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#addSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test_    public void testAddSocketMemoryOnly() {_        sync = new NodeSynchronizationImpl(store1)___        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,add,socket,org,apache,camel,component,websocket,default,websocket;test,public,void,test,add,socket,memory,only,sync,new,node,synchronization,impl,store1,sync,add,socket,websocket1,assert,equals,websocket1,store1,get
NodeSynchronizationImplTest -> @Test     public void testAddSocketMemoryOnly();1330966242;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#addSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test_    public void testAddSocketMemoryOnly() {_        sync = new DefaultNodeSynchronization(store1)___        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,add,socket,org,apache,camel,component,websocket,default,websocket;test,public,void,test,add,socket,memory,only,sync,new,default,node,synchronization,store1,sync,add,socket,websocket1,assert,equals,websocket1,store1,get
NodeSynchronizationImplTest -> @Test     public void testAddSocketMemoryOnly();1331993155;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#addSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test_    public void testAddSocketMemoryOnly() {_        sync = new DefaultNodeSynchronization(store1)___        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,add,socket,org,apache,camel,component,websocket,default,websocket;test,public,void,test,add,socket,memory,only,sync,new,default,node,synchronization,store1,sync,add,socket,websocket1,assert,equals,websocket1,store1,get
NodeSynchronizationImplTest -> @Test     public void testAddSocketMemoryOnly();1491316490;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#addSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test_    public void testAddSocketMemoryOnly() {_        sync = new DefaultNodeSynchronization(store1)___        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,add,socket,org,apache,camel,component,websocket,default,websocket;test,public,void,test,add,socket,memory,only,sync,new,default,node,synchronization,store1,sync,add,socket,websocket1,assert,equals,websocket1,store1,get
NodeSynchronizationImplTest -> @Test     public void testAddSocketMemoryOnly();1511977228;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#addSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test_    public void testAddSocketMemoryOnly() {_        sync = new DefaultNodeSynchronization(store1)___        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,add,socket,org,apache,camel,component,websocket,default,websocket;test,public,void,test,add,socket,memory,only,sync,new,default,node,synchronization,store1,sync,add,socket,websocket1,assert,equals,websocket1,store1,get
NodeSynchronizationImplTest -> @Test     public void testRemoveNotExisting();1325845474;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#removeSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test_    public void testRemoveNotExisting() {_        sync = new NodeSynchronizationImpl(store1)___        _        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))___        assertNull(store1.get(KEY_2))__        sync.removeSocket(websocket2)___        assertEquals(websocket1, store1.get(KEY_1))__        assertNull(store1.get(KEY_2))__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,remove,socket,org,apache,camel,component,websocket,default,websocket;test,public,void,test,remove,not,existing,sync,new,node,synchronization,impl,store1,sync,add,socket,websocket1,assert,equals,websocket1,store1,get,assert,null,store1,get,sync,remove,socket,websocket2,assert,equals,websocket1,store1,get,assert,null,store1,get
NodeSynchronizationImplTest -> @Test     public void testRemoveNotExisting();1330966242;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#removeSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test_    public void testRemoveNotExisting() {_        sync = new DefaultNodeSynchronization(store1)___        _        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))___        assertNull(store1.get(KEY_2))__        sync.removeSocket(websocket2)___        assertEquals(websocket1, store1.get(KEY_1))__        assertNull(store1.get(KEY_2))__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,remove,socket,org,apache,camel,component,websocket,default,websocket;test,public,void,test,remove,not,existing,sync,new,default,node,synchronization,store1,sync,add,socket,websocket1,assert,equals,websocket1,store1,get,assert,null,store1,get,sync,remove,socket,websocket2,assert,equals,websocket1,store1,get,assert,null,store1,get
NodeSynchronizationImplTest -> @Test     public void testRemoveNotExisting();1331993155;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#removeSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test_    public void testRemoveNotExisting() {_        sync = new DefaultNodeSynchronization(store1)___        _        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))___        assertNull(store1.get(KEY_2))__        sync.removeSocket(websocket2)___        assertEquals(websocket1, store1.get(KEY_1))__        assertNull(store1.get(KEY_2))__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,remove,socket,org,apache,camel,component,websocket,default,websocket;test,public,void,test,remove,not,existing,sync,new,default,node,synchronization,store1,sync,add,socket,websocket1,assert,equals,websocket1,store1,get,assert,null,store1,get,sync,remove,socket,websocket2,assert,equals,websocket1,store1,get,assert,null,store1,get
NodeSynchronizationImplTest -> @Test     public void testRemoveNotExisting();1491316490;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#removeSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test_    public void testRemoveNotExisting() {_        sync = new DefaultNodeSynchronization(store1)___        _        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))___        assertNull(store1.get(KEY_2))__        sync.removeSocket(websocket2)___        assertEquals(websocket1, store1.get(KEY_1))__        assertNull(store1.get(KEY_2))__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,remove,socket,org,apache,camel,component,websocket,default,websocket;test,public,void,test,remove,not,existing,sync,new,default,node,synchronization,store1,sync,add,socket,websocket1,assert,equals,websocket1,store1,get,assert,null,store1,get,sync,remove,socket,websocket2,assert,equals,websocket1,store1,get,assert,null,store1,get
NodeSynchronizationImplTest -> @Test     public void testRemoveNotExisting();1511977228;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#removeSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test_    public void testRemoveNotExisting() {_        sync = new DefaultNodeSynchronization(store1)___        _        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))___        assertNull(store1.get(KEY_2))__        sync.removeSocket(websocket2)___        assertEquals(websocket1, store1.get(KEY_1))__        assertNull(store1.get(KEY_2))__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,remove,socket,org,apache,camel,component,websocket,default,websocket;test,public,void,test,remove,not,existing,sync,new,default,node,synchronization,store1,sync,add,socket,websocket1,assert,equals,websocket1,store1,get,assert,null,store1,get,sync,remove,socket,websocket2,assert,equals,websocket1,store1,get,assert,null,store1,get
NodeSynchronizationImplTest -> @Test     public void testAddSocketMemoryAndGlobal();1325845474;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#addSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test_    public void testAddSocketMemoryAndGlobal() {_        sync = new NodeSynchronizationImpl(store1, store2)___        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))__        assertEquals(store1.get(KEY_1), store2.get(KEY_1))___        sync.addSocket(websocket2)__        assertEquals(websocket2, store1.get(KEY_2))__        assertEquals(store1.get(KEY_2), store2.get(KEY_2))__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,add,socket,org,apache,camel,component,websocket,default,websocket;test,public,void,test,add,socket,memory,and,global,sync,new,node,synchronization,impl,store1,store2,sync,add,socket,websocket1,assert,equals,websocket1,store1,get,assert,equals,store1,get,store2,get,sync,add,socket,websocket2,assert,equals,websocket2,store1,get,assert,equals,store1,get,store2,get
NodeSynchronizationImplTest -> @Test     public void testAddSocketMemoryAndGlobal();1330966242;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#addSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test_    public void testAddSocketMemoryAndGlobal() {_        sync = new DefaultNodeSynchronization(store1, store2)___        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))__        assertEquals(store1.get(KEY_1), store2.get(KEY_1))___        sync.addSocket(websocket2)__        assertEquals(websocket2, store1.get(KEY_2))__        assertEquals(store1.get(KEY_2), store2.get(KEY_2))__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,add,socket,org,apache,camel,component,websocket,default,websocket;test,public,void,test,add,socket,memory,and,global,sync,new,default,node,synchronization,store1,store2,sync,add,socket,websocket1,assert,equals,websocket1,store1,get,assert,equals,store1,get,store2,get,sync,add,socket,websocket2,assert,equals,websocket2,store1,get,assert,equals,store1,get,store2,get
NodeSynchronizationImplTest -> @Test     public void testAddSocketMemoryAndGlobal();1331993155;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#addSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test_    public void testAddSocketMemoryAndGlobal() {_        sync = new DefaultNodeSynchronization(store1)___        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))___        sync.addSocket(websocket2)__        assertEquals(websocket2, store1.get(KEY_2))__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,add,socket,org,apache,camel,component,websocket,default,websocket;test,public,void,test,add,socket,memory,and,global,sync,new,default,node,synchronization,store1,sync,add,socket,websocket1,assert,equals,websocket1,store1,get,sync,add,socket,websocket2,assert,equals,websocket2,store1,get
NodeSynchronizationImplTest -> @Test     public void testAddSocketMemoryAndGlobal();1491316490;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#addSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test_    public void testAddSocketMemoryAndGlobal() {_        sync = new DefaultNodeSynchronization(store1)___        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))___        sync.addSocket(websocket2)__        assertEquals(websocket2, store1.get(KEY_2))__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,add,socket,org,apache,camel,component,websocket,default,websocket;test,public,void,test,add,socket,memory,and,global,sync,new,default,node,synchronization,store1,sync,add,socket,websocket1,assert,equals,websocket1,store1,get,sync,add,socket,websocket2,assert,equals,websocket2,store1,get
NodeSynchronizationImplTest -> @Test     public void testAddSocketMemoryAndGlobal();1511977228;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#addSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test_    public void testAddSocketMemoryAndGlobal() {_        sync = new DefaultNodeSynchronization(store1)___        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))___        sync.addSocket(websocket2)__        assertEquals(websocket2, store1.get(KEY_2))__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,add,socket,org,apache,camel,component,websocket,default,websocket;test,public,void,test,add,socket,memory,and,global,sync,new,default,node,synchronization,store1,sync,add,socket,websocket1,assert,equals,websocket1,store1,get,sync,add,socket,websocket2,assert,equals,websocket2,store1,get
NodeSynchronizationImplTest -> @Test     public void testRemoveString();1325845474;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#removeSocket(String)} .;@Test_    public void testRemoveString() {_        sync = new NodeSynchronizationImpl(store1, store2)___        _        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))__        assertEquals(store1.get(KEY_1), store2.get(KEY_1))___        sync.addSocket(websocket2)__        assertEquals(websocket2, store1.get(KEY_2))__        assertEquals(store1.get(KEY_2), store2.get(KEY_2))___        _        sync.removeSocket(KEY_1)__        assertNull(store1.get(KEY_1))__        assertNull(store2.get(KEY_1))___        assertNotNull(store1.get(KEY_2))__        assertNotNull(store2.get(KEY_2))___        sync.removeSocket(KEY_2)__        assertNull(store1.get(KEY_2))__        assertNull(store2.get(KEY_2))__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,remove,socket,string;test,public,void,test,remove,string,sync,new,node,synchronization,impl,store1,store2,sync,add,socket,websocket1,assert,equals,websocket1,store1,get,assert,equals,store1,get,store2,get,sync,add,socket,websocket2,assert,equals,websocket2,store1,get,assert,equals,store1,get,store2,get,sync,remove,socket,assert,null,store1,get,assert,null,store2,get,assert,not,null,store1,get,assert,not,null,store2,get,sync,remove,socket,assert,null,store1,get,assert,null,store2,get
NodeSynchronizationImplTest -> @Test     public void testRemoveString();1330966242;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#removeSocket(String)} .;@Test_    public void testRemoveString() {_        sync = new DefaultNodeSynchronization(store1, store2)___        _        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))__        assertEquals(store1.get(KEY_1), store2.get(KEY_1))___        sync.addSocket(websocket2)__        assertEquals(websocket2, store1.get(KEY_2))__        assertEquals(store1.get(KEY_2), store2.get(KEY_2))___        _        sync.removeSocket(KEY_1)__        assertNull(store1.get(KEY_1))__        assertNull(store2.get(KEY_1))___        assertNotNull(store1.get(KEY_2))__        assertNotNull(store2.get(KEY_2))___        sync.removeSocket(KEY_2)__        assertNull(store1.get(KEY_2))__        assertNull(store2.get(KEY_2))__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,remove,socket,string;test,public,void,test,remove,string,sync,new,default,node,synchronization,store1,store2,sync,add,socket,websocket1,assert,equals,websocket1,store1,get,assert,equals,store1,get,store2,get,sync,add,socket,websocket2,assert,equals,websocket2,store1,get,assert,equals,store1,get,store2,get,sync,remove,socket,assert,null,store1,get,assert,null,store2,get,assert,not,null,store1,get,assert,not,null,store2,get,sync,remove,socket,assert,null,store1,get,assert,null,store2,get
NodeSynchronizationImplTest -> @Test     public void testRemoveString();1331993155;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#removeSocket(String)} .;@Test_    public void testRemoveString() {_        sync = new DefaultNodeSynchronization(store1)___        _        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))___        sync.addSocket(websocket2)__        assertEquals(websocket2, store1.get(KEY_2))___        _        sync.removeSocket(KEY_1)__        assertNull(store1.get(KEY_1))___        assertNotNull(store1.get(KEY_2))___        sync.removeSocket(KEY_2)__        assertNull(store1.get(KEY_2))__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,remove,socket,string;test,public,void,test,remove,string,sync,new,default,node,synchronization,store1,sync,add,socket,websocket1,assert,equals,websocket1,store1,get,sync,add,socket,websocket2,assert,equals,websocket2,store1,get,sync,remove,socket,assert,null,store1,get,assert,not,null,store1,get,sync,remove,socket,assert,null,store1,get
NodeSynchronizationImplTest -> @Test     public void testRemoveString();1491316490;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#removeSocket(String)} .;@Test_    public void testRemoveString() {_        sync = new DefaultNodeSynchronization(store1)___        _        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))___        sync.addSocket(websocket2)__        assertEquals(websocket2, store1.get(KEY_2))___        _        sync.removeSocket(KEY_1)__        assertNull(store1.get(KEY_1))___        assertNotNull(store1.get(KEY_2))___        sync.removeSocket(KEY_2)__        assertNull(store1.get(KEY_2))__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,remove,socket,string;test,public,void,test,remove,string,sync,new,default,node,synchronization,store1,sync,add,socket,websocket1,assert,equals,websocket1,store1,get,sync,add,socket,websocket2,assert,equals,websocket2,store1,get,sync,remove,socket,assert,null,store1,get,assert,not,null,store1,get,sync,remove,socket,assert,null,store1,get
NodeSynchronizationImplTest -> @Test     public void testRemoveString();1511977228;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#removeSocket(String)} .;@Test_    public void testRemoveString() {_        sync = new DefaultNodeSynchronization(store1)___        _        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))___        sync.addSocket(websocket2)__        assertEquals(websocket2, store1.get(KEY_2))___        _        sync.removeSocket(KEY_1)__        assertNull(store1.get(KEY_1))___        assertNotNull(store1.get(KEY_2))___        sync.removeSocket(KEY_2)__        assertNull(store1.get(KEY_2))__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,remove,socket,string;test,public,void,test,remove,string,sync,new,default,node,synchronization,store1,sync,add,socket,websocket1,assert,equals,websocket1,store1,get,sync,add,socket,websocket2,assert,equals,websocket2,store1,get,sync,remove,socket,assert,null,store1,get,assert,not,null,store1,get,sync,remove,socket,assert,null,store1,get
NodeSynchronizationImplTest -> @Test     public void testRemoveDefaultWebsocket();1325845474;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#removeSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test_    public void testRemoveDefaultWebsocket() {_        sync = new NodeSynchronizationImpl(store1, store2)___        _        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))__        assertEquals(store1.get(KEY_1), store2.get(KEY_1))___        sync.addSocket(websocket2)__        assertEquals(websocket2, store1.get(KEY_2))__        assertEquals(store1.get(KEY_2), store2.get(KEY_2))___        _        sync.removeSocket(websocket1)__        assertNull(store1.get(KEY_1))__        assertNull(store2.get(KEY_1))___        assertNotNull(store1.get(KEY_2))__        assertNotNull(store2.get(KEY_2))___        sync.removeSocket(websocket2)__        assertNull(store1.get(KEY_2))__        assertNull(store2.get(KEY_2))__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,remove,socket,org,apache,camel,component,websocket,default,websocket;test,public,void,test,remove,default,websocket,sync,new,node,synchronization,impl,store1,store2,sync,add,socket,websocket1,assert,equals,websocket1,store1,get,assert,equals,store1,get,store2,get,sync,add,socket,websocket2,assert,equals,websocket2,store1,get,assert,equals,store1,get,store2,get,sync,remove,socket,websocket1,assert,null,store1,get,assert,null,store2,get,assert,not,null,store1,get,assert,not,null,store2,get,sync,remove,socket,websocket2,assert,null,store1,get,assert,null,store2,get
NodeSynchronizationImplTest -> @Test     public void testRemoveDefaultWebsocket();1330966242;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#removeSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test_    public void testRemoveDefaultWebsocket() {_        sync = new DefaultNodeSynchronization(store1, store2)___        _        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))__        assertEquals(store1.get(KEY_1), store2.get(KEY_1))___        sync.addSocket(websocket2)__        assertEquals(websocket2, store1.get(KEY_2))__        assertEquals(store1.get(KEY_2), store2.get(KEY_2))___        _        sync.removeSocket(websocket1)__        assertNull(store1.get(KEY_1))__        assertNull(store2.get(KEY_1))___        assertNotNull(store1.get(KEY_2))__        assertNotNull(store2.get(KEY_2))___        sync.removeSocket(websocket2)__        assertNull(store1.get(KEY_2))__        assertNull(store2.get(KEY_2))__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,remove,socket,org,apache,camel,component,websocket,default,websocket;test,public,void,test,remove,default,websocket,sync,new,default,node,synchronization,store1,store2,sync,add,socket,websocket1,assert,equals,websocket1,store1,get,assert,equals,store1,get,store2,get,sync,add,socket,websocket2,assert,equals,websocket2,store1,get,assert,equals,store1,get,store2,get,sync,remove,socket,websocket1,assert,null,store1,get,assert,null,store2,get,assert,not,null,store1,get,assert,not,null,store2,get,sync,remove,socket,websocket2,assert,null,store1,get,assert,null,store2,get
NodeSynchronizationImplTest -> @Test     public void testRemoveDefaultWebsocket();1331993155;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#removeSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test_    public void testRemoveDefaultWebsocket() {_        sync = new DefaultNodeSynchronization(store1)___        _        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))___        sync.addSocket(websocket2)__        assertEquals(websocket2, store1.get(KEY_2))___        _        sync.removeSocket(websocket1)__        assertNull(store1.get(KEY_1))___        assertNotNull(store1.get(KEY_2))___        sync.removeSocket(websocket2)__        assertNull(store1.get(KEY_2))__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,remove,socket,org,apache,camel,component,websocket,default,websocket;test,public,void,test,remove,default,websocket,sync,new,default,node,synchronization,store1,sync,add,socket,websocket1,assert,equals,websocket1,store1,get,sync,add,socket,websocket2,assert,equals,websocket2,store1,get,sync,remove,socket,websocket1,assert,null,store1,get,assert,not,null,store1,get,sync,remove,socket,websocket2,assert,null,store1,get
NodeSynchronizationImplTest -> @Test     public void testRemoveDefaultWebsocket();1491316490;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#removeSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test_    public void testRemoveDefaultWebsocket() {_        sync = new DefaultNodeSynchronization(store1)___        _        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))___        sync.addSocket(websocket2)__        assertEquals(websocket2, store1.get(KEY_2))___        _        sync.removeSocket(websocket1)__        assertNull(store1.get(KEY_1))___        assertNotNull(store1.get(KEY_2))___        sync.removeSocket(websocket2)__        assertNull(store1.get(KEY_2))__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,remove,socket,org,apache,camel,component,websocket,default,websocket;test,public,void,test,remove,default,websocket,sync,new,default,node,synchronization,store1,sync,add,socket,websocket1,assert,equals,websocket1,store1,get,sync,add,socket,websocket2,assert,equals,websocket2,store1,get,sync,remove,socket,websocket1,assert,null,store1,get,assert,not,null,store1,get,sync,remove,socket,websocket2,assert,null,store1,get
NodeSynchronizationImplTest -> @Test     public void testRemoveDefaultWebsocket();1511977228;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#removeSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test_    public void testRemoveDefaultWebsocket() {_        sync = new DefaultNodeSynchronization(store1)___        _        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))___        sync.addSocket(websocket2)__        assertEquals(websocket2, store1.get(KEY_2))___        _        sync.removeSocket(websocket1)__        assertNull(store1.get(KEY_1))___        assertNotNull(store1.get(KEY_2))___        sync.removeSocket(websocket2)__        assertNull(store1.get(KEY_2))__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,remove,socket,org,apache,camel,component,websocket,default,websocket;test,public,void,test,remove,default,websocket,sync,new,default,node,synchronization,store1,sync,add,socket,websocket1,assert,equals,websocket1,store1,get,sync,add,socket,websocket2,assert,equals,websocket2,store1,get,sync,remove,socket,websocket1,assert,null,store1,get,assert,not,null,store1,get,sync,remove,socket,websocket2,assert,null,store1,get
NodeSynchronizationImplTest -> @Test     public void testAddSocketMemoryAndNullGlobal();1325845474;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#addSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test_    public void testAddSocketMemoryAndNullGlobal() {_        sync = new NodeSynchronizationImpl(store1, null)___        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,add,socket,org,apache,camel,component,websocket,default,websocket;test,public,void,test,add,socket,memory,and,null,global,sync,new,node,synchronization,impl,store1,null,sync,add,socket,websocket1,assert,equals,websocket1,store1,get
NodeSynchronizationImplTest -> @Test     public void testAddSocketMemoryAndNullGlobal();1330966242;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#addSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test_    public void testAddSocketMemoryAndNullGlobal() {_        sync = new DefaultNodeSynchronization(store1, null)___        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,add,socket,org,apache,camel,component,websocket,default,websocket;test,public,void,test,add,socket,memory,and,null,global,sync,new,default,node,synchronization,store1,null,sync,add,socket,websocket1,assert,equals,websocket1,store1,get
NodeSynchronizationImplTest -> @Test     public void testRemoveDefaultWebsocketKeyNotSet();1325845474;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#removeSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test_    public void testRemoveDefaultWebsocketKeyNotSet() {_        sync = new NodeSynchronizationImpl(store1)___        _        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))___        _        websocket1.setConnectionKey(null)___        try {_            _            sync.removeSocket(websocket1)__            fail("Exception expected")__        } catch (Exception e) {_            assertEquals(NullPointerException.class, e.getClass())__        }_    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,remove,socket,org,apache,camel,component,websocket,default,websocket;test,public,void,test,remove,default,websocket,key,not,set,sync,new,node,synchronization,impl,store1,sync,add,socket,websocket1,assert,equals,websocket1,store1,get,websocket1,set,connection,key,null,try,sync,remove,socket,websocket1,fail,exception,expected,catch,exception,e,assert,equals,null,pointer,exception,class,e,get,class
NodeSynchronizationImplTest -> @Test     public void testRemoveDefaultWebsocketKeyNotSet();1330966242;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#removeSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test_    public void testRemoveDefaultWebsocketKeyNotSet() {_        sync = new DefaultNodeSynchronization(store1)___        _        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))___        _        websocket1.setConnectionKey(null)___        try {_            _            sync.removeSocket(websocket1)__            fail("Exception expected")__        } catch (Exception e) {_            assertEquals(NullPointerException.class, e.getClass())__        }_    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,remove,socket,org,apache,camel,component,websocket,default,websocket;test,public,void,test,remove,default,websocket,key,not,set,sync,new,default,node,synchronization,store1,sync,add,socket,websocket1,assert,equals,websocket1,store1,get,websocket1,set,connection,key,null,try,sync,remove,socket,websocket1,fail,exception,expected,catch,exception,e,assert,equals,null,pointer,exception,class,e,get,class
NodeSynchronizationImplTest -> @Test     public void testRemoveDefaultWebsocketKeyNotSet();1331993155;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#removeSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test_    public void testRemoveDefaultWebsocketKeyNotSet() {_        sync = new DefaultNodeSynchronization(store1)___        _        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))___        _        websocket1.setConnectionKey(null)___        try {_            _            sync.removeSocket(websocket1)__            fail("Exception expected")__        } catch (Exception e) {_            assertEquals(NullPointerException.class, e.getClass())__        }_    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,remove,socket,org,apache,camel,component,websocket,default,websocket;test,public,void,test,remove,default,websocket,key,not,set,sync,new,default,node,synchronization,store1,sync,add,socket,websocket1,assert,equals,websocket1,store1,get,websocket1,set,connection,key,null,try,sync,remove,socket,websocket1,fail,exception,expected,catch,exception,e,assert,equals,null,pointer,exception,class,e,get,class
NodeSynchronizationImplTest -> @Test     public void testRemoveDefaultWebsocketKeyNotSet();1491316490;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#removeSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test_    public void testRemoveDefaultWebsocketKeyNotSet() {_        sync = new DefaultNodeSynchronization(store1)___        _        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))___        _        websocket1.setConnectionKey(null)___        try {_            _            sync.removeSocket(websocket1)__            fail("Exception expected")__        } catch (Exception e) {_            assertEquals(NullPointerException.class, e.getClass())__        }_    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,remove,socket,org,apache,camel,component,websocket,default,websocket;test,public,void,test,remove,default,websocket,key,not,set,sync,new,default,node,synchronization,store1,sync,add,socket,websocket1,assert,equals,websocket1,store1,get,websocket1,set,connection,key,null,try,sync,remove,socket,websocket1,fail,exception,expected,catch,exception,e,assert,equals,null,pointer,exception,class,e,get,class
NodeSynchronizationImplTest -> @Test     public void testRemoveDefaultWebsocketKeyNotSet();1511977228;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#removeSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test_    public void testRemoveDefaultWebsocketKeyNotSet() {_        sync = new DefaultNodeSynchronization(store1)___        _        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))___        _        websocket1.setConnectionKey(null)___        try {_            _            sync.removeSocket(websocket1)__            fail("Exception expected")__        } catch (Exception e) {_            assertEquals(NullPointerException.class, e.getClass())__        }_    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,remove,socket,org,apache,camel,component,websocket,default,websocket;test,public,void,test,remove,default,websocket,key,not,set,sync,new,default,node,synchronization,store1,sync,add,socket,websocket1,assert,equals,websocket1,store1,get,websocket1,set,connection,key,null,try,sync,remove,socket,websocket1,fail,exception,expected,catch,exception,e,assert,equals,null,pointer,exception,class,e,get,class
NodeSynchronizationImplTest -> @Test(expected = NullPointerException.class)     public void testAddNullValue();1325845474;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#addSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test(expected = NullPointerException.class)_    public void testAddNullValue() {_        sync.addSocket(null)__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,add,socket,org,apache,camel,component,websocket,default,websocket;test,expected,null,pointer,exception,class,public,void,test,add,null,value,sync,add,socket,null
NodeSynchronizationImplTest -> @Test(expected = NullPointerException.class)     public void testAddNullValue();1330966242;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#addSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test(expected = NullPointerException.class)_    public void testAddNullValue() {_        sync.addSocket(null)__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,add,socket,org,apache,camel,component,websocket,default,websocket;test,expected,null,pointer,exception,class,public,void,test,add,null,value,sync,add,socket,null
NodeSynchronizationImplTest -> @Test(expected = NullPointerException.class)     public void testAddNullValue();1331993155;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#addSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test(expected = NullPointerException.class)_    public void testAddNullValue() {_        sync.addSocket(null)__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,add,socket,org,apache,camel,component,websocket,default,websocket;test,expected,null,pointer,exception,class,public,void,test,add,null,value,sync,add,socket,null
NodeSynchronizationImplTest -> @Test(expected = NullPointerException.class)     public void testAddNullValue();1491316490;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#addSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test(expected = NullPointerException.class)_    public void testAddNullValue() {_        sync.addSocket(null)__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,add,socket,org,apache,camel,component,websocket,default,websocket;test,expected,null,pointer,exception,class,public,void,test,add,null,value,sync,add,socket,null
NodeSynchronizationImplTest -> @Test(expected = NullPointerException.class)     public void testAddNullValue();1511977228;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#addSocket(org.apache.camel.component.websocket.DefaultWebsocket)} .;@Test(expected = NullPointerException.class)_    public void testAddNullValue() {_        sync.addSocket(null)__    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,add,socket,org,apache,camel,component,websocket,default,websocket;test,expected,null,pointer,exception,class,public,void,test,add,null,value,sync,add,socket,null
NodeSynchronizationImplTest -> @Test     public void testRemoveStringNotExisting();1325845474;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#removeSocket(String)} .;@Test_    public void testRemoveStringNotExisting() {__        sync = new NodeSynchronizationImpl(store1)___        _        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))___        assertNull(store1.get(KEY_3))__        sync.removeSocket(KEY_3)___        assertEquals(websocket1, store1.get(KEY_1))__        assertNull(store1.get(KEY_3))___    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,remove,socket,string;test,public,void,test,remove,string,not,existing,sync,new,node,synchronization,impl,store1,sync,add,socket,websocket1,assert,equals,websocket1,store1,get,assert,null,store1,get,sync,remove,socket,assert,equals,websocket1,store1,get,assert,null,store1,get
NodeSynchronizationImplTest -> @Test     public void testRemoveStringNotExisting();1330966242;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#removeSocket(String)} .;@Test_    public void testRemoveStringNotExisting() {__        sync = new DefaultNodeSynchronization(store1)___        _        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))___        assertNull(store1.get(KEY_3))__        sync.removeSocket(KEY_3)___        assertEquals(websocket1, store1.get(KEY_1))__        assertNull(store1.get(KEY_3))___    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,remove,socket,string;test,public,void,test,remove,string,not,existing,sync,new,default,node,synchronization,store1,sync,add,socket,websocket1,assert,equals,websocket1,store1,get,assert,null,store1,get,sync,remove,socket,assert,equals,websocket1,store1,get,assert,null,store1,get
NodeSynchronizationImplTest -> @Test     public void testRemoveStringNotExisting();1331993155;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#removeSocket(String)} .;@Test_    public void testRemoveStringNotExisting() {__        sync = new DefaultNodeSynchronization(store1)___        _        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))___        assertNull(store1.get(KEY_3))__        sync.removeSocket(KEY_3)___        assertEquals(websocket1, store1.get(KEY_1))__        assertNull(store1.get(KEY_3))___    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,remove,socket,string;test,public,void,test,remove,string,not,existing,sync,new,default,node,synchronization,store1,sync,add,socket,websocket1,assert,equals,websocket1,store1,get,assert,null,store1,get,sync,remove,socket,assert,equals,websocket1,store1,get,assert,null,store1,get
NodeSynchronizationImplTest -> @Test     public void testRemoveStringNotExisting();1491316490;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#removeSocket(String)} .;@Test_    public void testRemoveStringNotExisting() {__        sync = new DefaultNodeSynchronization(store1)___        _        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))___        assertNull(store1.get(KEY_3))__        sync.removeSocket(KEY_3)___        assertEquals(websocket1, store1.get(KEY_1))__        assertNull(store1.get(KEY_3))___    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,remove,socket,string;test,public,void,test,remove,string,not,existing,sync,new,default,node,synchronization,store1,sync,add,socket,websocket1,assert,equals,websocket1,store1,get,assert,null,store1,get,sync,remove,socket,assert,equals,websocket1,store1,get,assert,null,store1,get
NodeSynchronizationImplTest -> @Test     public void testRemoveStringNotExisting();1511977228;Test method for {@link org.apache.camel.component.websocket.NodeSynchronization#removeSocket(String)} .;@Test_    public void testRemoveStringNotExisting() {__        sync = new DefaultNodeSynchronization(store1)___        _        sync.addSocket(websocket1)__        assertEquals(websocket1, store1.get(KEY_1))___        assertNull(store1.get(KEY_3))__        sync.removeSocket(KEY_3)___        assertEquals(websocket1, store1.get(KEY_1))__        assertNull(store1.get(KEY_3))___    };test,method,for,link,org,apache,camel,component,websocket,node,synchronization,remove,socket,string;test,public,void,test,remove,string,not,existing,sync,new,default,node,synchronization,store1,sync,add,socket,websocket1,assert,equals,websocket1,store1,get,assert,null,store1,get,sync,remove,socket,assert,equals,websocket1,store1,get,assert,null,store1,get
