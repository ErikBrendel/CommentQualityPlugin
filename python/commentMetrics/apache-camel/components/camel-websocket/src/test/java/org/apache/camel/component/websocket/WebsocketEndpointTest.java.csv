# id;timestamp;commentText;codeText;commentWords;codeWords
WebsocketEndpointTest -> @Test     public void testCreateConsumer() throws Exception;1325845474;Test method for {@link org.apache.camel.component.websocket.WebsocketEndpoint#createConsumer(org.apache.camel.Processor)} .;@Test_    public void testCreateConsumer() throws Exception {_        Consumer consumer = websocketEndpoint.createConsumer(processor)__        assertNotNull(consumer)__        assertEquals(WebsocketConsumer.class, consumer.getClass())__        InOrder inOrder = inOrder(component, processor)__        ArgumentCaptor<NodeSynchronization> synchronizationCaptor = ArgumentCaptor.forClass(NodeSynchronization.class)__        ArgumentCaptor<WebsocketConsumer> consumerCaptor = ArgumentCaptor.forClass(WebsocketConsumer.class)__        inOrder.verify(component, times(1)).addServlet(synchronizationCaptor.capture(), consumerCaptor.capture(), eq(REMAINING))__        inOrder.verifyNoMoreInteractions()___        assertEquals(NodeSynchronizationImpl.class, synchronizationCaptor.getValue().getClass())___        assertEquals(consumer, consumerCaptor.getValue())__    };test,method,for,link,org,apache,camel,component,websocket,websocket,endpoint,create,consumer,org,apache,camel,processor;test,public,void,test,create,consumer,throws,exception,consumer,consumer,websocket,endpoint,create,consumer,processor,assert,not,null,consumer,assert,equals,websocket,consumer,class,consumer,get,class,in,order,in,order,in,order,component,processor,argument,captor,node,synchronization,synchronization,captor,argument,captor,for,class,node,synchronization,class,argument,captor,websocket,consumer,consumer,captor,argument,captor,for,class,websocket,consumer,class,in,order,verify,component,times,1,add,servlet,synchronization,captor,capture,consumer,captor,capture,eq,remaining,in,order,verify,no,more,interactions,assert,equals,node,synchronization,impl,class,synchronization,captor,get,value,get,class,assert,equals,consumer,consumer,captor,get,value
WebsocketEndpointTest -> @Test     public void testCreateConsumer() throws Exception;1330966242;Test method for {@link org.apache.camel.component.websocket.WebsocketEndpoint#createConsumer(org.apache.camel.Processor)} .;@Test_    public void testCreateConsumer() throws Exception {_        Consumer consumer = websocketEndpoint.createConsumer(processor)__        assertNotNull(consumer)__        assertEquals(WebsocketConsumer.class, consumer.getClass())__        InOrder inOrder = inOrder(component, processor)__        ArgumentCaptor<NodeSynchronization> synchronizationCaptor = ArgumentCaptor.forClass(NodeSynchronization.class)__        ArgumentCaptor<WebsocketConsumer> consumerCaptor = ArgumentCaptor.forClass(WebsocketConsumer.class)__        inOrder.verify(component, times(1)).addServlet(synchronizationCaptor.capture(), consumerCaptor.capture(), eq(REMAINING))__        inOrder.verifyNoMoreInteractions()___        assertEquals(DefaultNodeSynchronization.class, synchronizationCaptor.getValue().getClass())___        assertEquals(consumer, consumerCaptor.getValue())__    };test,method,for,link,org,apache,camel,component,websocket,websocket,endpoint,create,consumer,org,apache,camel,processor;test,public,void,test,create,consumer,throws,exception,consumer,consumer,websocket,endpoint,create,consumer,processor,assert,not,null,consumer,assert,equals,websocket,consumer,class,consumer,get,class,in,order,in,order,in,order,component,processor,argument,captor,node,synchronization,synchronization,captor,argument,captor,for,class,node,synchronization,class,argument,captor,websocket,consumer,consumer,captor,argument,captor,for,class,websocket,consumer,class,in,order,verify,component,times,1,add,servlet,synchronization,captor,capture,consumer,captor,capture,eq,remaining,in,order,verify,no,more,interactions,assert,equals,default,node,synchronization,class,synchronization,captor,get,value,get,class,assert,equals,consumer,consumer,captor,get,value
WebsocketEndpointTest -> @Test     public void testCreateConsumer() throws Exception;1331993155;Test method for {@link org.apache.camel.component.websocket.WebsocketEndpoint#createConsumer(org.apache.camel.Processor)} .;@Test_    public void testCreateConsumer() throws Exception {_        Consumer consumer = websocketEndpoint.createConsumer(processor)__        assertNotNull(consumer)__        assertEquals(WebsocketConsumer.class, consumer.getClass())__        InOrder inOrder = inOrder(component, processor)__        ArgumentCaptor<NodeSynchronization> synchronizationCaptor = ArgumentCaptor.forClass(NodeSynchronization.class)__        ArgumentCaptor<WebsocketConsumer> consumerCaptor = ArgumentCaptor.forClass(WebsocketConsumer.class)__        inOrder.verify(component, times(1)).addServlet(synchronizationCaptor.capture(), consumerCaptor.capture(), eq(REMAINING))__        inOrder.verifyNoMoreInteractions()___        assertEquals(DefaultNodeSynchronization.class, synchronizationCaptor.getValue().getClass())___        assertEquals(consumer, consumerCaptor.getValue())__    };test,method,for,link,org,apache,camel,component,websocket,websocket,endpoint,create,consumer,org,apache,camel,processor;test,public,void,test,create,consumer,throws,exception,consumer,consumer,websocket,endpoint,create,consumer,processor,assert,not,null,consumer,assert,equals,websocket,consumer,class,consumer,get,class,in,order,in,order,in,order,component,processor,argument,captor,node,synchronization,synchronization,captor,argument,captor,for,class,node,synchronization,class,argument,captor,websocket,consumer,consumer,captor,argument,captor,for,class,websocket,consumer,class,in,order,verify,component,times,1,add,servlet,synchronization,captor,capture,consumer,captor,capture,eq,remaining,in,order,verify,no,more,interactions,assert,equals,default,node,synchronization,class,synchronization,captor,get,value,get,class,assert,equals,consumer,consumer,captor,get,value
WebsocketEndpointTest -> @Test     public void testCreateConsumer() throws Exception;1337851764;Test method for {@link org.apache.camel.component.websocket.WebsocketEndpoint#createConsumer(org.apache.camel.Processor)} .;@Test_    public void testCreateConsumer() throws Exception {_        Consumer consumer = websocketEndpoint.createConsumer(processor)__        assertNotNull(consumer)__        assertEquals(WebsocketConsumer.class, consumer.getClass())__        InOrder inOrder = inOrder(component, processor)__        ArgumentCaptor<NodeSynchronization> synchronizationCaptor = ArgumentCaptor.forClass(NodeSynchronization.class)__        ArgumentCaptor<WebsocketConsumer> consumerCaptor = ArgumentCaptor.forClass(WebsocketConsumer.class)__        inOrder.verify(component, times(1)).addServlet(synchronizationCaptor.capture(), consumerCaptor.capture(), eq(REMAINING))__        inOrder.verifyNoMoreInteractions()___        assertEquals(DefaultNodeSynchronization.class, synchronizationCaptor.getValue().getClass())___        assertEquals(consumer, consumerCaptor.getValue())__    };test,method,for,link,org,apache,camel,component,websocket,websocket,endpoint,create,consumer,org,apache,camel,processor;test,public,void,test,create,consumer,throws,exception,consumer,consumer,websocket,endpoint,create,consumer,processor,assert,not,null,consumer,assert,equals,websocket,consumer,class,consumer,get,class,in,order,in,order,in,order,component,processor,argument,captor,node,synchronization,synchronization,captor,argument,captor,for,class,node,synchronization,class,argument,captor,websocket,consumer,consumer,captor,argument,captor,for,class,websocket,consumer,class,in,order,verify,component,times,1,add,servlet,synchronization,captor,capture,consumer,captor,capture,eq,remaining,in,order,verify,no,more,interactions,assert,equals,default,node,synchronization,class,synchronization,captor,get,value,get,class,assert,equals,consumer,consumer,captor,get,value
WebsocketEndpointTest -> @Test     public void testCreateConsumer() throws Exception;1337942455;Test method for {@link org.apache.camel.component.websocket.WebsocketEndpoint#createConsumer(org.apache.camel.Processor)} .;@Test_    public void testCreateConsumer() throws Exception {_        Consumer consumer = websocketEndpoint.createConsumer(processor)__        component.connect((WebsocketProducerConsumer) consumer)___        assertNotNull(consumer)__        assertEquals(WebsocketConsumer.class, consumer.getClass())__        InOrder inOrder = inOrder(component, processor)__        ArgumentCaptor<NodeSynchronization> synchronizationCaptor = ArgumentCaptor.forClass(NodeSynchronization.class)__        ArgumentCaptor<WebsocketConsumer> consumerCaptor = ArgumentCaptor.forClass(WebsocketConsumer.class)__        inOrder.verify(component, times(1)).addServlet(synchronizationCaptor.capture(), consumerCaptor.capture(), eq(REMAINING))__        inOrder.verifyNoMoreInteractions()___        assertEquals(DefaultNodeSynchronization.class, synchronizationCaptor.getValue().getClass())___        assertEquals(consumer, consumerCaptor.getValue())__    };test,method,for,link,org,apache,camel,component,websocket,websocket,endpoint,create,consumer,org,apache,camel,processor;test,public,void,test,create,consumer,throws,exception,consumer,consumer,websocket,endpoint,create,consumer,processor,component,connect,websocket,producer,consumer,consumer,assert,not,null,consumer,assert,equals,websocket,consumer,class,consumer,get,class,in,order,in,order,in,order,component,processor,argument,captor,node,synchronization,synchronization,captor,argument,captor,for,class,node,synchronization,class,argument,captor,websocket,consumer,consumer,captor,argument,captor,for,class,websocket,consumer,class,in,order,verify,component,times,1,add,servlet,synchronization,captor,capture,consumer,captor,capture,eq,remaining,in,order,verify,no,more,interactions,assert,equals,default,node,synchronization,class,synchronization,captor,get,value,get,class,assert,equals,consumer,consumer,captor,get,value
WebsocketEndpointTest -> @Test     public void testCreateConsumer() throws Exception;1511977228;Test method for {@link org.apache.camel.component.websocket.WebsocketEndpoint#createConsumer(org.apache.camel.Processor)} .;@Test_    public void testCreateConsumer() throws Exception {_        Consumer consumer = websocketEndpoint.createConsumer(processor)__        component.connect((WebsocketProducerConsumer) consumer)___        assertNotNull(consumer)__        assertEquals(WebsocketConsumer.class, consumer.getClass())__        InOrder inOrder = inOrder(component, processor)__        ArgumentCaptor<NodeSynchronization> synchronizationCaptor = ArgumentCaptor.forClass(NodeSynchronization.class)__        ArgumentCaptor<WebsocketConsumer> consumerCaptor = ArgumentCaptor.forClass(WebsocketConsumer.class)__        inOrder.verify(component, times(1)).addServlet(synchronizationCaptor.capture(), consumerCaptor.capture(), eq(REMAINING))__        inOrder.verifyNoMoreInteractions()___        assertEquals(DefaultNodeSynchronization.class, synchronizationCaptor.getValue().getClass())___        assertEquals(consumer, consumerCaptor.getValue())__    };test,method,for,link,org,apache,camel,component,websocket,websocket,endpoint,create,consumer,org,apache,camel,processor;test,public,void,test,create,consumer,throws,exception,consumer,consumer,websocket,endpoint,create,consumer,processor,component,connect,websocket,producer,consumer,consumer,assert,not,null,consumer,assert,equals,websocket,consumer,class,consumer,get,class,in,order,in,order,in,order,component,processor,argument,captor,node,synchronization,synchronization,captor,argument,captor,for,class,node,synchronization,class,argument,captor,websocket,consumer,consumer,captor,argument,captor,for,class,websocket,consumer,class,in,order,verify,component,times,1,add,servlet,synchronization,captor,capture,consumer,captor,capture,eq,remaining,in,order,verify,no,more,interactions,assert,equals,default,node,synchronization,class,synchronization,captor,get,value,get,class,assert,equals,consumer,consumer,captor,get,value
WebsocketEndpointTest -> @Test     public void testCreateProducer() throws Exception;1325845474;Test method for {@link org.apache.camel.component.websocket.WebsocketEndpoint#createProducer()} .;@Test_    public void testCreateProducer() throws Exception {_        Producer producer = websocketEndpoint.createProducer()__        assertNotNull(producer)__        assertEquals(WebsocketProducer.class, producer.getClass())__        InOrder inOrder = inOrder(component, processor)__        ArgumentCaptor<NodeSynchronization> synchronizationCaptor = ArgumentCaptor.forClass(NodeSynchronization.class)__        inOrder.verify(component, times(1)).addServlet(synchronizationCaptor.capture(), (WebsocketConsumer) isNull(), eq(REMAINING))__        inOrder.verifyNoMoreInteractions()___        assertEquals(NodeSynchronizationImpl.class, synchronizationCaptor.getValue().getClass())__    };test,method,for,link,org,apache,camel,component,websocket,websocket,endpoint,create,producer;test,public,void,test,create,producer,throws,exception,producer,producer,websocket,endpoint,create,producer,assert,not,null,producer,assert,equals,websocket,producer,class,producer,get,class,in,order,in,order,in,order,component,processor,argument,captor,node,synchronization,synchronization,captor,argument,captor,for,class,node,synchronization,class,in,order,verify,component,times,1,add,servlet,synchronization,captor,capture,websocket,consumer,is,null,eq,remaining,in,order,verify,no,more,interactions,assert,equals,node,synchronization,impl,class,synchronization,captor,get,value,get,class
WebsocketEndpointTest -> @Test     public void testCreateProducer() throws Exception;1330966242;Test method for {@link org.apache.camel.component.websocket.WebsocketEndpoint#createProducer()} .;@Test_    public void testCreateProducer() throws Exception {_        Producer producer = websocketEndpoint.createProducer()__        assertNotNull(producer)__        assertEquals(WebsocketProducer.class, producer.getClass())__        InOrder inOrder = inOrder(component, processor)__        ArgumentCaptor<NodeSynchronization> synchronizationCaptor = ArgumentCaptor.forClass(NodeSynchronization.class)__        inOrder.verify(component, times(1)).addServlet(synchronizationCaptor.capture(), (WebsocketConsumer) isNull(), eq(REMAINING))__        inOrder.verifyNoMoreInteractions()___        assertEquals(DefaultNodeSynchronization.class, synchronizationCaptor.getValue().getClass())__    };test,method,for,link,org,apache,camel,component,websocket,websocket,endpoint,create,producer;test,public,void,test,create,producer,throws,exception,producer,producer,websocket,endpoint,create,producer,assert,not,null,producer,assert,equals,websocket,producer,class,producer,get,class,in,order,in,order,in,order,component,processor,argument,captor,node,synchronization,synchronization,captor,argument,captor,for,class,node,synchronization,class,in,order,verify,component,times,1,add,servlet,synchronization,captor,capture,websocket,consumer,is,null,eq,remaining,in,order,verify,no,more,interactions,assert,equals,default,node,synchronization,class,synchronization,captor,get,value,get,class
WebsocketEndpointTest -> @Test     public void testCreateProducer() throws Exception;1331993155;Test method for {@link org.apache.camel.component.websocket.WebsocketEndpoint#createProducer()} .;@Test_    public void testCreateProducer() throws Exception {_        Producer producer = websocketEndpoint.createProducer()__        assertNotNull(producer)__        assertEquals(WebsocketProducer.class, producer.getClass())__        InOrder inOrder = inOrder(component, processor)__        ArgumentCaptor<NodeSynchronization> synchronizationCaptor = ArgumentCaptor.forClass(NodeSynchronization.class)__        inOrder.verify(component, times(1)).addServlet(synchronizationCaptor.capture(), (WebsocketConsumer) isNull(), eq(REMAINING))__        inOrder.verifyNoMoreInteractions()___        assertEquals(DefaultNodeSynchronization.class, synchronizationCaptor.getValue().getClass())__    };test,method,for,link,org,apache,camel,component,websocket,websocket,endpoint,create,producer;test,public,void,test,create,producer,throws,exception,producer,producer,websocket,endpoint,create,producer,assert,not,null,producer,assert,equals,websocket,producer,class,producer,get,class,in,order,in,order,in,order,component,processor,argument,captor,node,synchronization,synchronization,captor,argument,captor,for,class,node,synchronization,class,in,order,verify,component,times,1,add,servlet,synchronization,captor,capture,websocket,consumer,is,null,eq,remaining,in,order,verify,no,more,interactions,assert,equals,default,node,synchronization,class,synchronization,captor,get,value,get,class
WebsocketEndpointTest -> @Test     public void testCreateProducer() throws Exception;1337851764;Test method for {@link org.apache.camel.component.websocket.WebsocketEndpoint#createProducer()} .;@Test_    public void testCreateProducer() throws Exception {_        Producer producer = websocketEndpoint.createProducer()__        assertNotNull(producer)__        assertEquals(WebsocketProducer.class, producer.getClass())__        InOrder inOrder = inOrder(component, processor)__        ArgumentCaptor<NodeSynchronization> synchronizationCaptor = ArgumentCaptor.forClass(NodeSynchronization.class)__        inOrder.verify(component, times(1)).addServlet(synchronizationCaptor.capture(), (WebsocketConsumer) isNull(), eq(REMAINING))__        inOrder.verifyNoMoreInteractions()___        assertEquals(DefaultNodeSynchronization.class, synchronizationCaptor.getValue().getClass())__    };test,method,for,link,org,apache,camel,component,websocket,websocket,endpoint,create,producer;test,public,void,test,create,producer,throws,exception,producer,producer,websocket,endpoint,create,producer,assert,not,null,producer,assert,equals,websocket,producer,class,producer,get,class,in,order,in,order,in,order,component,processor,argument,captor,node,synchronization,synchronization,captor,argument,captor,for,class,node,synchronization,class,in,order,verify,component,times,1,add,servlet,synchronization,captor,capture,websocket,consumer,is,null,eq,remaining,in,order,verify,no,more,interactions,assert,equals,default,node,synchronization,class,synchronization,captor,get,value,get,class
WebsocketEndpointTest -> @Test     public void testCreateProducer() throws Exception;1337942455;Test method for {@link org.apache.camel.component.websocket.WebsocketEndpoint#createProducer()} .;@Test_    public void testCreateProducer() throws Exception {_        Producer producer = websocketEndpoint.createProducer()__        component.connect((WebsocketProducerConsumer) producer)___        assertNotNull(producer)__        assertEquals(WebsocketProducer.class, producer.getClass())__        InOrder inOrder = inOrder(component, processor)__        ArgumentCaptor<NodeSynchronization> synchronizationCaptor = ArgumentCaptor.forClass(NodeSynchronization.class)__        inOrder.verify(component, times(1)).addServlet(synchronizationCaptor.capture(), (WebsocketConsumer) isNull(), eq(REMAINING))__        inOrder.verifyNoMoreInteractions()___        assertEquals(DefaultNodeSynchronization.class, synchronizationCaptor.getValue().getClass())__    };test,method,for,link,org,apache,camel,component,websocket,websocket,endpoint,create,producer;test,public,void,test,create,producer,throws,exception,producer,producer,websocket,endpoint,create,producer,component,connect,websocket,producer,consumer,producer,assert,not,null,producer,assert,equals,websocket,producer,class,producer,get,class,in,order,in,order,in,order,component,processor,argument,captor,node,synchronization,synchronization,captor,argument,captor,for,class,node,synchronization,class,in,order,verify,component,times,1,add,servlet,synchronization,captor,capture,websocket,consumer,is,null,eq,remaining,in,order,verify,no,more,interactions,assert,equals,default,node,synchronization,class,synchronization,captor,get,value,get,class
WebsocketEndpointTest -> @Test     public void testCreateProducer() throws Exception;1511977228;Test method for {@link org.apache.camel.component.websocket.WebsocketEndpoint#createProducer()} .;@Test_    public void testCreateProducer() throws Exception {_        Producer producer = websocketEndpoint.createProducer()__        component.connect((WebsocketProducerConsumer) producer)___        assertNotNull(producer)__        assertEquals(WebsocketProducer.class, producer.getClass())__        InOrder inOrder = inOrder(component, processor)__        ArgumentCaptor<NodeSynchronization> synchronizationCaptor = ArgumentCaptor.forClass(NodeSynchronization.class)__        inOrder.verify(component, times(1)).addServlet(synchronizationCaptor.capture(), (WebsocketConsumer) isNull(), eq(REMAINING))__        inOrder.verifyNoMoreInteractions()___        assertEquals(DefaultNodeSynchronization.class, synchronizationCaptor.getValue().getClass())__    };test,method,for,link,org,apache,camel,component,websocket,websocket,endpoint,create,producer;test,public,void,test,create,producer,throws,exception,producer,producer,websocket,endpoint,create,producer,component,connect,websocket,producer,consumer,producer,assert,not,null,producer,assert,equals,websocket,producer,class,producer,get,class,in,order,in,order,in,order,component,processor,argument,captor,node,synchronization,synchronization,captor,argument,captor,for,class,node,synchronization,class,in,order,verify,component,times,1,add,servlet,synchronization,captor,capture,websocket,consumer,is,null,eq,remaining,in,order,verify,no,more,interactions,assert,equals,default,node,synchronization,class,synchronization,captor,get,value,get,class
WebsocketEndpointTest -> @Before     public void setUp() throws Exception;1325845474;@throws Exception;@Before_    public void setUp() throws Exception {_        websocketEndpoint = new WebsocketEndpoint(URI, component, REMAINING, new WebsocketConfiguration())__    };throws,exception;before,public,void,set,up,throws,exception,websocket,endpoint,new,websocket,endpoint,uri,component,remaining,new,websocket,configuration
WebsocketEndpointTest -> @Before     public void setUp() throws Exception;1330966242;@throws Exception;@Before_    public void setUp() throws Exception {_        websocketEndpoint = new WebsocketEndpoint(URI, component, REMAINING, new WebsocketConfiguration())__    };throws,exception;before,public,void,set,up,throws,exception,websocket,endpoint,new,websocket,endpoint,uri,component,remaining,new,websocket,configuration
WebsocketEndpointTest -> @Before     public void setUp() throws Exception;1331993155;@throws Exception;@Before_    public void setUp() throws Exception {_        websocketEndpoint = new WebsocketEndpoint(URI, component, REMAINING)__    };throws,exception;before,public,void,set,up,throws,exception,websocket,endpoint,new,websocket,endpoint,uri,component,remaining
WebsocketEndpointTest -> @Before     public void setUp() throws Exception;1337851764;@throws Exception;@Before_    public void setUp() throws Exception {_        websocketEndpoint = new WebsocketEndpoint(component, URI, REMAINING, null)__    };throws,exception;before,public,void,set,up,throws,exception,websocket,endpoint,new,websocket,endpoint,component,uri,remaining,null
WebsocketEndpointTest -> @Before     public void setUp() throws Exception;1337942455;@throws Exception;@Before_    public void setUp() throws Exception {_        websocketEndpoint = new WebsocketEndpoint(component, URI, REMAINING, null)__        component = new WebsocketComponent()__        component.setPort(1988)__        component.setHost("localhost")__        component.createServer()__    };throws,exception;before,public,void,set,up,throws,exception,websocket,endpoint,new,websocket,endpoint,component,uri,remaining,null,component,new,websocket,component,component,set,port,1988,component,set,host,localhost,component,create,server
WebsocketEndpointTest -> @Test     public void testIsSingleton();1325845474;Test method for {@link org.apache.camel.component.websocket.WebsocketEndpoint#isSingleton()} .;@Test_    public void testIsSingleton() {_        assertTrue(websocketEndpoint.isSingleton())__    };test,method,for,link,org,apache,camel,component,websocket,websocket,endpoint,is,singleton;test,public,void,test,is,singleton,assert,true,websocket,endpoint,is,singleton
WebsocketEndpointTest -> @Test     public void testIsSingleton();1330966242;Test method for {@link org.apache.camel.component.websocket.WebsocketEndpoint#isSingleton()} .;@Test_    public void testIsSingleton() {_        assertTrue(websocketEndpoint.isSingleton())__    };test,method,for,link,org,apache,camel,component,websocket,websocket,endpoint,is,singleton;test,public,void,test,is,singleton,assert,true,websocket,endpoint,is,singleton
WebsocketEndpointTest -> @Test     public void testIsSingleton();1331993155;Test method for {@link org.apache.camel.component.websocket.WebsocketEndpoint#isSingleton()} .;@Test_    public void testIsSingleton() {_        assertTrue(websocketEndpoint.isSingleton())__    };test,method,for,link,org,apache,camel,component,websocket,websocket,endpoint,is,singleton;test,public,void,test,is,singleton,assert,true,websocket,endpoint,is,singleton
WebsocketEndpointTest -> @Test     public void testIsSingleton();1337851764;Test method for {@link org.apache.camel.component.websocket.WebsocketEndpoint#isSingleton()} .;@Test_    public void testIsSingleton() {_        assertTrue(websocketEndpoint.isSingleton())__    };test,method,for,link,org,apache,camel,component,websocket,websocket,endpoint,is,singleton;test,public,void,test,is,singleton,assert,true,websocket,endpoint,is,singleton
WebsocketEndpointTest -> @Test     public void testIsSingleton();1337942455;Test method for {@link org.apache.camel.component.websocket.WebsocketEndpoint#isSingleton()} .;@Test_    public void testIsSingleton() {_        assertTrue(websocketEndpoint.isSingleton())__    };test,method,for,link,org,apache,camel,component,websocket,websocket,endpoint,is,singleton;test,public,void,test,is,singleton,assert,true,websocket,endpoint,is,singleton
WebsocketEndpointTest -> @Test     public void testIsSingleton();1511977228;Test method for {@link org.apache.camel.component.websocket.WebsocketEndpoint#isSingleton()} .;@Test_    public void testIsSingleton() {_        assertTrue(websocketEndpoint.isSingleton())__    };test,method,for,link,org,apache,camel,component,websocket,websocket,endpoint,is,singleton;test,public,void,test,is,singleton,assert,true,websocket,endpoint,is,singleton
