commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public void setCamelContext(CamelContext camelContext) {     this.camelContext = camelContext. }
false;public;0;4;;@Override public CamelContext getCamelContext() {     return camelContext. }
false;public;0;3;;public MeterRegistry getMeterRegistry() {     return meterRegistry. }
false;public;1;3;;public void setMeterRegistry(MeterRegistry meterRegistry) {     this.meterRegistry = meterRegistry. }
false;public;0;3;;public boolean isPrettyPrint() {     return prettyPrint. }
false;public;1;3;;public void setPrettyPrint(boolean prettyPrint) {     this.prettyPrint = prettyPrint. }
false;public;0;3;;public TimeUnit getDurationUnit() {     return durationUnit. }
false;public;1;3;;public void setDurationUnit(TimeUnit durationUnit) {     this.durationUnit = durationUnit. }
false;public;1;4;;@Override public boolean isEnabled(CamelEvent eventObject) {     return eventType.isAssignableFrom(eventObject.getClass()). }
false;protected;0;24;;@Override protected void doStart() throws Exception {     super.doStart().     if (meterRegistry == null) {         meterRegistry = MicrometerUtils.getOrCreateMeterRegistry(camelContext.getRegistry(), METRICS_REGISTRY_NAME).     }     try {         MicrometerEventNotifierService registryService = camelContext.hasService(MicrometerEventNotifierService.class).         if (registryService == null) {             registryService = new MicrometerEventNotifierService().             registryService.setMeterRegistry(getMeterRegistry()).             registryService.setPrettyPrint(isPrettyPrint()).             registryService.setDurationUnit(getDurationUnit()).             registryService.setMatchingTags(Tags.of(SERVICE_NAME, registryService.getClass().getSimpleName())).             camelContext.addService(registryService).             // ensure registry service is started             ServiceHelper.startService(registryService).         }     } catch (Exception e) {         throw RuntimeCamelException.wrapRuntimeCamelException(e).     } }
