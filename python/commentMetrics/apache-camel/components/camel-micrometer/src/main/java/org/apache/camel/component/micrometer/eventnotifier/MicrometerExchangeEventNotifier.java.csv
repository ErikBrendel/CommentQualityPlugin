commented;modifiers;parameterAmount;loc;comment;code
false;public;1;3;;public void setIgnoreExchanges(Predicate<Exchange> ignoreExchanges) {     this.ignoreExchanges = ignoreExchanges. }
false;public;0;3;;public Predicate<Exchange> getIgnoreExchanges() {     return ignoreExchanges. }
false;public;0;3;;public MicrometerExchangeEventNotifierNamingStrategy getNamingStrategy() {     return namingStrategy. }
false;public;1;3;;public void setNamingStrategy(MicrometerExchangeEventNotifierNamingStrategy namingStrategy) {     this.namingStrategy = namingStrategy. }
false;public;1;12;;@Override public void notify(CamelEvent eventObject) {     if (!(getIgnoreExchanges().test(((ExchangeEvent) eventObject).getExchange()))) {         if (eventObject instanceof ExchangeSentEvent) {             handleSentEvent((ExchangeSentEvent) eventObject).         } else if (eventObject instanceof ExchangeCreatedEvent) {             handleCreatedEvent((ExchangeCreatedEvent) eventObject).         } else if (eventObject instanceof ExchangeCompletedEvent || eventObject instanceof ExchangeFailedEvent) {             handleDoneEvent((ExchangeEvent) eventObject).         }     } }
false;protected;1;5;;protected void handleSentEvent(ExchangeSentEvent sentEvent) {     String name = namingStrategy.getName(sentEvent.getExchange(), sentEvent.getEndpoint()).     Tags tags = namingStrategy.getTags(sentEvent, sentEvent.getEndpoint()).     getMeterRegistry().timer(name, tags).record(sentEvent.getTimeTaken(), TimeUnit.MILLISECONDS). }
false;protected;1;4;;protected void handleCreatedEvent(ExchangeCreatedEvent createdEvent) {     String name = namingStrategy.getName(createdEvent.getExchange(), createdEvent.getExchange().getFromEndpoint()).     createdEvent.getExchange().setProperty("eventTimer:" + name, Timer.start(getMeterRegistry())). }
false;protected;1;9;;protected void handleDoneEvent(ExchangeEvent doneEvent) {     String name = namingStrategy.getName(doneEvent.getExchange(), doneEvent.getExchange().getFromEndpoint()).     Tags tags = namingStrategy.getTags(doneEvent, doneEvent.getExchange().getFromEndpoint()).     // Would have preferred LongTaskTimer, but you cannot set the FAILED_TAG once it is registered     Timer.Sample sample = (Timer.Sample) doneEvent.getExchange().removeProperty("eventTimer:" + name).     if (sample != null) {         sample.stop(getMeterRegistry().timer(name, tags)).     } }
