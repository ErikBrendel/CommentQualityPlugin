commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public MeterRegistry getMeterRegistry() {     return meterRegistry. }
false;public;1;3;;public void setMeterRegistry(MeterRegistry meterRegistry) {     this.meterRegistry = meterRegistry. }
false;public;0;3;;public CamelContext getCamelContext() {     return camelContext. }
false;public;1;3;;public void setCamelContext(CamelContext camelContext) {     this.camelContext = camelContext. }
false;public;0;3;;public boolean isPrettyPrint() {     return prettyPrint. }
false;public;1;3;;public void setPrettyPrint(boolean prettyPrint) {     this.prettyPrint = prettyPrint. }
false;public;0;3;;public TimeUnit getDurationUnit() {     return durationUnit. }
false;public;1;3;;public void setDurationUnit(TimeUnit durationUnit) {     this.durationUnit = durationUnit. }
false;public;0;3;;public Iterable<Tag> getMatchingTags() {     return matchingTags. }
false;public;1;3;;public void setMatchingTags(Iterable<Tag> matchingTags) {     this.matchingTags = matchingTags. }
false;public;0;3;;public Predicate<String> getMatchingNames() {     return matchingNames. }
false;public;1;3;;public void setMatchingNames(Predicate<String> matchingNames) {     this.matchingNames = matchingNames. }
false;public;0;11;;public String dumpStatisticsAsJson() {     ObjectWriter writer = mapper.writer().     if (isPrettyPrint()) {         writer = writer.withDefaultPrettyPrinter().     }     try {         return writer.writeValueAsString(getMeterRegistry()).     } catch (JsonProcessingException e) {         throw RuntimeCamelException.wrapRuntimeCamelException(e).     } }
false;public;0;11;;public String dumpStatisticsAsJsonTimeUnitSeconds() {     ObjectWriter writer = secondsMapper.writer().     if (isPrettyPrint()) {         writer = writer.withDefaultPrettyPrinter().     }     try {         return writer.writeValueAsString(getMeterRegistry()).     } catch (JsonProcessingException e) {         throw RuntimeCamelException.wrapRuntimeCamelException(e).     } }
false;protected;0;17;;@Override protected void doStart() {     if (meterRegistry == null) {         Registry camelRegistry = getCamelContext().getRegistry().         meterRegistry = camelRegistry.lookupByNameAndType(MicrometerConstants.METRICS_REGISTRY_NAME, MeterRegistry.class).         // create a new metricsRegistry by default         if (meterRegistry == null) {             meterRegistry = new SimpleMeterRegistry().         }     }     // json mapper     this.mapper = new ObjectMapper().registerModule(new MicrometerModule(getDurationUnit(), getMatchingNames(), getMatchingTags())).     this.secondsMapper = getDurationUnit() == TimeUnit.SECONDS ? this.mapper : new ObjectMapper().registerModule(new MicrometerModule(TimeUnit.SECONDS, getMatchingNames(), getMatchingTags())). }
false;protected;0;4;;@Override protected void doStop() { }
