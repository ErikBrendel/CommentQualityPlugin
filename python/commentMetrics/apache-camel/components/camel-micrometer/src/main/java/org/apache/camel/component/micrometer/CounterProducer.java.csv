commented;modifiers;parameterAmount;loc;comment;code
false;protected;2;4;;@Override protected Function<MeterRegistry, Counter> registrar(String name, Iterable<Tag> tags) {     return meterRegistry -> meterRegistry.counter(name, tags). }
false;protected;3;15;;@Override protected void doProcess(Exchange exchange, MicrometerEndpoint endpoint, Counter counter) {     Message in = exchange.getIn().     Double increment = simple(exchange, endpoint.getIncrement(), Double.class).     Double decrement = simple(exchange, endpoint.getDecrement(), Double.class).     Double finalIncrement = getDoubleHeader(in, HEADER_COUNTER_INCREMENT, increment).     Double finalDecrement = getDoubleHeader(in, HEADER_COUNTER_DECREMENT, decrement).     if (finalIncrement != null) {         counter.increment(finalIncrement).     } else if (finalDecrement != null) {         counter.increment(-finalDecrement).     } else {         counter.increment().     } }
