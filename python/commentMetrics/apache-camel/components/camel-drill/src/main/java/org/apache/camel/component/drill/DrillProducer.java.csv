commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;6;;@Override protected void doStart() throws Exception {     super.doStart().     createJDBCConnection(). }
false;protected;0;9;;@Override protected void doStop() throws Exception {     super.doStop().     try {         connection.close().     } catch (Exception e) {     } }
false;public;1;23;;@Override public void process(final Exchange exchange) throws Exception {     final String query = exchange.getIn().getHeader(DrillConstants.DRILL_QUERY, String.class).     // check query     Statement st = null.     ResultSet rs = null.     try {         st = connection.createStatement().         rs = st.executeQuery(query).         exchange.getIn().setBody(endpoint.queryForList(rs)).     } finally {         try {             rs.close().         } catch (Exception e) {         }         try {             st.close().         } catch (Exception e) {         }     } }
false;private;0;9;;// end process private void createJDBCConnection() throws ClassNotFoundException, SQLException {     Class.forName(DrillConstants.DRILL_DRIVER).     // if(log.isDebugEnabled()) {     log.info("connection url: {}", endpoint.toJDBCUri()).     // }     this.connection = DriverManager.getConnection(endpoint.toJDBCUri()). }
