commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public DigitalOceanResources getResource() {     return resource. }
true;public;1;3;/**  * The DigitalOcean resource type on which perform the operation.  */ ;/**  * The DigitalOcean resource type on which perform the operation.  */ public void setResource(DigitalOceanResources resource) {     this.resource = resource. }
false;public;0;3;;public DigitalOceanOperations getOperation() {     return operation. }
true;public;1;3;/**  * The operation to perform to the given resource.  */ ;/**  * The operation to perform to the given resource.  */ public void setOperation(DigitalOceanOperations operation) {     this.operation = operation. }
false;public;0;3;;public String getOAuthToken() {     return oAuthToken. }
true;public;1;3;/**  * DigitalOcean OAuth Token  */ ;/**  * DigitalOcean OAuth Token  */ public void setOAuthToken(String oAuthToken) {     this.oAuthToken = oAuthToken. }
false;public;0;3;;public Integer getPerPage() {     return perPage. }
true;public;1;3;/**  * Use for pagination. Set the number of item per request. The maximum number of results per page is 200.  */ ;/**  * Use for pagination. Set the number of item per request. The maximum number of results per page is 200.  */ public void setPerPage(Integer perPage) {     this.perPage = perPage. }
false;public;0;3;;public Integer getPage() {     return page. }
true;public;1;3;/**  * Use for pagination. Force the page number.  */ ;/**  * Use for pagination. Force the page number.  */ public void setPage(Integer page) {     this.page = page. }
false;public;0;3;;public String getHttpProxyHost() {     return httpProxyHost. }
true;public;1;3;/**  * Set a proxy host if needed  */ ;/**  * Set a proxy host if needed  */ public void setHttpProxyHost(String httpProxyHost) {     this.httpProxyHost = httpProxyHost. }
false;public;0;3;;public String getHttpProxyUser() {     return httpProxyUser. }
true;public;1;3;/**  * Set a proxy host if needed  */ ;/**  * Set a proxy host if needed  */ public void setHttpProxyUser(String httpProxyUser) {     this.httpProxyUser = httpProxyUser. }
false;public;0;3;;public String getHttpProxyPassword() {     return httpProxyPassword. }
true;public;1;3;/**  * Set a proxy password if needed  */ ;/**  * Set a proxy password if needed  */ public void setHttpProxyPassword(String httpProxyPassword) {     this.httpProxyPassword = httpProxyPassword. }
false;public;0;3;;public Integer getHttpProxyPort() {     return httpProxyPort. }
true;public;1;3;/**  * Set a proxy port if needed  */ ;/**  * Set a proxy port if needed  */ public void setHttpProxyPort(Integer httpProxyPort) {     this.httpProxyPort = httpProxyPort. }
false;public;0;3;;public DigitalOceanClient getDigitalOceanClient() {     return digitalOceanClient. }
true;public;1;3;/**  * To use a existing configured DigitalOceanClient as client  */ ;/**  * To use a existing configured DigitalOceanClient as client  */ public void setDigitalOceanClient(DigitalOceanClient digitalOceanClient) {     this.digitalOceanClient = digitalOceanClient. }
