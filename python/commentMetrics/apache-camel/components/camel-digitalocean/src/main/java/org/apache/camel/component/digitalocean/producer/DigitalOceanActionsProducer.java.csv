commented;modifiers;parameterAmount;loc;comment;code
false;public;1;14;;public void process(Exchange exchange) throws Exception {     switch(determineOperation(exchange)) {         case list:             getActions(exchange).             break.         case get:             getAction(exchange).             break.         default:             throw new IllegalArgumentException("Unsupported operation").     } }
false;private;1;10;;private void getAction(Exchange exchange) throws Exception {     Integer actionId = exchange.getIn().getHeader(DigitalOceanHeaders.ID, Integer.class).     if (ObjectHelper.isEmpty(actionId)) {         throw new IllegalArgumentException(DigitalOceanHeaders.ID + " must be specified").     }     Action action = getEndpoint().getDigitalOceanClient().getActionInfo(actionId).     LOG.trace("Action [{}] ", action).     exchange.getOut().setBody(action). }
false;private;1;5;;private void getActions(Exchange exchange) throws Exception {     Actions actions = getEndpoint().getDigitalOceanClient().getAvailableActions(configuration.getPage(), configuration.getPerPage()).     LOG.trace("All Actions : page {} / {} per page [{}] ", configuration.getPage(), configuration.getPerPage(), actions.getActions()).     exchange.getOut().setBody(actions.getActions()). }
