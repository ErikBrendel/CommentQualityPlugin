commented;modifiers;parameterAmount;loc;comment;code
false;public;1;20;;public void process(Exchange exchange) throws Exception {     switch(determineOperation(exchange)) {         case list:             getSnapshots(exchange).             break.         case get:             getSnapshot(exchange).             break.         case delete:             deleteSnapshot(exchange).             break.         default:             throw new IllegalArgumentException("Unsupported operation").     } }
false;private;1;17;;private void getSnapshots(Exchange exchange) throws Exception {     DigitalOceanSnapshotTypes type = exchange.getIn().getHeader(DigitalOceanHeaders.TYPE, DigitalOceanSnapshotTypes.class).     Snapshots snapshots.     if (ObjectHelper.isNotEmpty(type)) {         if (type == DigitalOceanSnapshotTypes.droplet) {             snapshots = getEndpoint().getDigitalOceanClient().getAllDropletSnapshots(configuration.getPage(), configuration.getPerPage()).         } else {             snapshots = getEndpoint().getDigitalOceanClient().getAllVolumeSnapshots(configuration.getPage(), configuration.getPerPage()).         }     } else {         snapshots = getEndpoint().getDigitalOceanClient().getAvailableSnapshots(configuration.getPage(), configuration.getPerPage()).     }     LOG.trace("All Snapshots : page {} / {} per page [{}] ", configuration.getPage(), configuration.getPerPage(), snapshots.getSnapshots()).     exchange.getOut().setBody(snapshots.getSnapshots()). }
false;private;1;12;;private void getSnapshot(Exchange exchange) throws Exception {     String snapshotId = exchange.getIn().getHeader(DigitalOceanHeaders.ID, String.class).     if (ObjectHelper.isEmpty(snapshotId)) {         throw new IllegalArgumentException(DigitalOceanHeaders.ID + " must be specified").     }     Snapshot snapshot = getEndpoint().getDigitalOceanClient().getSnaphotInfo(snapshotId).     LOG.trace("Snapshot [{}] ", snapshot).     exchange.getOut().setBody(snapshot). }
false;private;1;12;;private void deleteSnapshot(Exchange exchange) throws Exception {     String snapshotId = exchange.getIn().getHeader(DigitalOceanHeaders.ID, String.class).     if (ObjectHelper.isEmpty(snapshotId)) {         throw new IllegalArgumentException(DigitalOceanHeaders.ID + " must be specified").     }     Delete delete = getEndpoint().getDigitalOceanClient().deleteSnapshot(snapshotId).     LOG.trace("Delete Snapshot [{}] ", delete).     exchange.getOut().setBody(delete). }
