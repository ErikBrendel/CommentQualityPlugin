commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;public void configure() {     from("direct:getAccountInfo").setHeader(DigitalOceanHeaders.OPERATION, constant(DigitalOceanOperations.get)).to("digitalocean:account?digitalOceanClient=#digitalOceanClient").to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() {             from("direct:getAccountInfo").setHeader(DigitalOceanHeaders.OPERATION, constant(DigitalOceanOperations.get)).to("digitalocean:account?digitalOceanClient=#digitalOceanClient").to("mock:result").         }     }. }
false;public;0;9;;@Test public void testGetAccountInfo() throws Exception {     mockResultEndpoint.expectedMinimumMessageCount(1).     Exchange exchange = template.request("direct:getAccountInfo", null).     assertMockEndpointsSatisfied().     assertIsInstanceOf(Account.class, exchange.getOut().getBody()).     assertEquals(exchange.getIn().getBody(Account.class).getEmail(), "camel@apache.org"). }
false;protected;0;7;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry registry = super.createRegistry().     DigitalOceanClient digitalOceanClient = new DigitalOceanClientMock().     registry.bind("digitalOceanClient", digitalOceanClient).     return registry. }
