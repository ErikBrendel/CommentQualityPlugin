commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Override public void configure() throws Exception {     from("direct:ticker").to("xchange:binance?service=marketdata&method=ticker").     from("direct:tickerBTCUSDT").to("xchange:binance?service=marketdata&method=ticker&currencyPair=BTC/USDT"). }
false;protected;0;14;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:ticker").to("xchange:binance?service=marketdata&method=ticker").             from("direct:tickerBTCUSDT").to("xchange:binance?service=marketdata&method=ticker&currencyPair=BTC/USDT").         }     }. }
false;public;0;9;;@Test public void testTicker() throws Exception {     Ticker ticker = template.requestBody("direct:ticker", CurrencyPair.EOS_ETH, Ticker.class).     Assert.assertNotNull("Ticker not null", ticker).     ticker = template.requestBodyAndHeader("direct:ticker", null, HEADER_CURRENCY_PAIR, CurrencyPair.EOS_ETH, Ticker.class).     Assert.assertNotNull("Ticker not null", ticker). }
false;public;0;6;;@Test public void testTickerBTCUSDT() throws Exception {     Ticker ticker = template.requestBody("direct:tickerBTCUSDT", null, Ticker.class).     Assert.assertNotNull("Ticker not null", ticker). }
