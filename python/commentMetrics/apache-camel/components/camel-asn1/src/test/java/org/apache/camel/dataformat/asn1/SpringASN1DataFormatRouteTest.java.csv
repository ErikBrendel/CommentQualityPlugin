commented;modifiers;parameterAmount;loc;comment;code
false;private;2;17;;private void baseUnmarshalReturnClassObjectTest(String mockEnpointName, String directEndpointName) throws Exception {     getMockEndpoint(mockEnpointName).expectedMessageCount(1).     File testFile = new File(fileName).     ByteArrayInputStream bais = ASN1DataFormatTestHelper.reteriveByteArrayInputStream(testFile).     template.sendBody(directEndpointName, bais).     List<Exchange> exchanges = getMockEndpoint(mockEnpointName).getExchanges().     assertTrue(exchanges.size() == 1).     for (Exchange exchange : exchanges) {         assertTrue(exchange.getIn().getBody() instanceof SmsCdr).     }     assertMockEndpointsSatisfied(). }
false;public;0;4;;@Test public void testUnmarshalReturnClassObject() throws Exception {     baseUnmarshalReturnClassObjectTest("mock:unmarshal", "direct:unmarshal"). }
false;protected;0;4;;@Override protected AbstractApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/dataformat/asn1/SpringASN1DataFormatRouteTest.xml"). }
