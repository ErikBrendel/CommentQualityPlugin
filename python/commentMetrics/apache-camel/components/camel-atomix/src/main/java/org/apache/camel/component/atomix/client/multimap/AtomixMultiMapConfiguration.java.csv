commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;// **************************************** // Properties // **************************************** public AtomixMultiMap.Action getDefaultAction() {     return defaultAction. }
true;public;1;3;/**  * The default action.  */ ;/**  * The default action.  */ public void setDefaultAction(AtomixMultiMap.Action defaultAction) {     this.defaultAction = defaultAction. }
false;public;0;3;;public Object getKey() {     return key. }
true;public;1;3;/**  * The key to use if none is set in the header or to listen for events for  * a specific key.  */ ;/**  * The key to use if none is set in the header or to listen for events for  * a specific key.  */ public void setKey(Object defaultKey) {     this.key = defaultKey. }
false;public;0;3;;public long getTtl() {     return ttl. }
true;public;1;3;/**  * The resource ttl.  */ ;/**  * The resource ttl.  */ public void setTtl(long ttl) {     this.ttl = ttl. }
false;public;0;7;;// **************************************** // Copy // **************************************** public AtomixMultiMapConfiguration copy() {     try {         return (AtomixMultiMapConfiguration) super.clone().     } catch (CloneNotSupportedException e) {         throw new RuntimeCamelException(e).     } }
