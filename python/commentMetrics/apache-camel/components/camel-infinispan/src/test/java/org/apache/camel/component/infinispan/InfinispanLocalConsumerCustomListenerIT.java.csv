commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;6;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry registry = super.createRegistry().     registry.bind("myCustomListener", new MyEmbeddedCustomListener(CUSTOM_CACHE_NAME)).     return registry. }
false;public;0;5;;@Override public void configure() {     fromF("infinispan:%s?cacheContainer=#cacheContainer&customListener=#myCustomListener", CUSTOM_CACHE_NAME).to("mock:result"). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() {             fromF("infinispan:%s?cacheContainer=#cacheContainer&customListener=#myCustomListener", CUSTOM_CACHE_NAME).to("mock:result").         }     }. }
false;public;0;13;;@Test public void createEventConsumed() throws InterruptedException {     // One for the existing entry and one for the new entry.     mockResult.expectedMessageCount(2).     basicCacheContainer.getCache(CUSTOM_CACHE_NAME).put("newKey", "newValue").     mockResult.message(0).outHeader(InfinispanConstants.IS_PRE).isEqualTo(true).     mockResult.message(0).outHeader(InfinispanConstants.KEY).isEqualTo("newKey").     mockResult.message(1).outHeader(InfinispanConstants.IS_PRE).isEqualTo(false).     mockResult.assertIsSatisfied(). }
