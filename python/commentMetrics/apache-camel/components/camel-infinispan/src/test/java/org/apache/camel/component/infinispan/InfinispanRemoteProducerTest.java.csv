commented;modifiers;parameterAmount;loc;comment;code
false;public;1;5;;@Override public void process(Exchange exchange) throws Exception {     exchange.getIn().setHeader(InfinispanConstants.KEY, "keyOne").     exchange.getIn().setHeader(InfinispanConstants.VALUE, "valueOne"). }
false;public;0;12;;@Test public void producerPublishesKeyAndValue() throws Exception {     Exchange request = template.request("direct:start", new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             exchange.getIn().setHeader(InfinispanConstants.KEY, "keyOne").             exchange.getIn().setHeader(InfinispanConstants.VALUE, "valueOne").         }     }).     assertNull(request.getException()). }
false;public;0;5;;@Override public void configure() {     from("direct:start").to("infinispan://my-cache?hosts=localhost"). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() {             from("direct:start").to("infinispan://my-cache?hosts=localhost").         }     }. }
