commented;modifiers;parameterAmount;loc;comment;code
false;public;0;15;;@Test public void embeddedCacheWithFlagsTest() throws Exception {     InfinispanConfiguration configuration = new InfinispanConfiguration().     configuration.setHosts("localhost").     configuration.setCacheContainer(new DefaultCacheManager(new ConfigurationBuilder().build(), true)).     InfinispanManager manager = new InfinispanManager(configuration).     manager.start().     BasicCache<Object, Object> cache = manager.getCache("misc_cache").     assertNotNull(cache).     manager.getCacheContainer().stop().     manager.stop(). }
false;public;0;20;;@Test public void remoteCacheWithoutProperties() throws Exception {     InfinispanConfiguration configuration = new InfinispanConfiguration().     configuration.setHosts("localhost").     InfinispanManager manager = new InfinispanManager(configuration).     manager.start().     BasicCache<Object, Object> cache = manager.getCache("misc_cache").     assertNotNull(cache).     assertTrue(cache instanceof RemoteCache).     RemoteCache<Object, Object> remoteCache = InfinispanUtil.asRemote(cache).     String key = UUID.randomUUID().toString().     assertNull(remoteCache.put(key, "val1")).     assertNull(remoteCache.put(key, "val2")).     manager.stop(). }
false;public;0;19;;@Test public void remoteCacheWithPropertiesTest() throws Exception {     InfinispanConfiguration configuration = new InfinispanConfiguration().     configuration.setHosts("localhost").     configuration.setConfigurationUri("infinispan/client.properties").     InfinispanManager manager = new InfinispanManager(configuration).     manager.start().     BasicCache<Object, Object> cache = manager.getCache("misc_cache").     assertNotNull(cache).     assertTrue(cache instanceof RemoteCache).     String key = UUID.randomUUID().toString().     assertNull(cache.put(key, "val1")).     assertNotNull(cache.put(key, "val2")).     manager.stop(). }
