commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected AbstractApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/component/etcd/cloud/SpringEtcdServiceCallDefaultRouteTest.xml"). }
false;public;0;16;;// ************************************************************************* // Setup / tear down // ************************************************************************* @Override public void doPreSetup() throws Exception {     JsonNode service1 = MAPPER.createObjectNode().put("name", "http-service").put("address", "127.0.0.1").put("port", "9091").     JsonNode service2 = MAPPER.createObjectNode().put("name", "http-service").put("address", "127.0.0.1").put("port", "9092").     CLIENT.put(CONFIGURATION.getServicePath() + "service-1", MAPPER.writeValueAsString(service1)).send().get().     CLIENT.put(CONFIGURATION.getServicePath() + "service-2", MAPPER.writeValueAsString(service2)).send().get().     super.doPreSetup(). }
false;public;0;6;;@Override @After public void tearDown() throws Exception {     super.tearDown().     CLIENT.deleteDir(CONFIGURATION.getServicePath()).recursive().send().get(). }
false;public;0;10;;// ************************************************************************* // Test // ************************************************************************* @Test public void testServiceCall() throws Exception {     getMockEndpoint("mock:result").expectedMessageCount(2).     getMockEndpoint("mock:result").expectedBodiesReceivedInAnyOrder("9091", "9092").     template.sendBody("direct:start", null).     template.sendBody("direct:start", null).     assertMockEndpointsSatisfied(). }
