commented;modifiers;parameterAmount;loc;comment;code
false;public;1;35;;@Override public void process(Exchange exchange) throws Exception {     if (exchange.getIn().getBody() == null) {         // fail fast         log.debug("Received exchange with empty body, skipping").         return.     }     TelegramConfiguration config = endpoint.getConfiguration().     // Tries to get a message in its OutgoingMessage format     // Automatic conversion applies here     OutgoingMessage message = exchange.getIn().getBody(OutgoingMessage.class).     if (message == null) {         throw new IllegalArgumentException("Cannot convert the content to a Telegram OutgoingMessage").     }     if (message.getChatId() == null) {         log.debug("Chat id is null on outgoing message, trying resolution").         String chatId = resolveChatId(config, message, exchange).         log.debug("Resolved chat id is {}", chatId).         message.setChatId(chatId).     }     TelegramService service = TelegramServiceProvider.get().getService().     log.debug("Message being sent is: {}", message).     log.debug("Headers of message being sent are: {}", exchange.getIn().getHeaders()).     Object receivedMessage = service.sendMessage(config.getAuthorizationToken(), message).     log.debug("Message being received is: {}", receivedMessage).     exchange.getOut().setBody(receivedMessage). }
false;private;3;23;;private String resolveChatId(TelegramConfiguration config, OutgoingMessage message, Exchange exchange) {     String chatId.     // Try to get the chat id from the message body     chatId = message.getChatId().     // Get the chat id from headers     if (chatId == null) {         chatId = (String) exchange.getIn().getHeader(TelegramConstants.TELEGRAM_CHAT_ID).     }     // If not present in the headers, use the configured value for chat id     if (chatId == null) {         chatId = config.getChatId().     }     // Chat id is mandatory     if (chatId == null) {         throw new IllegalStateException("Chat id is not set in message headers or route configuration").     }     return chatId. }
