commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Override @Before public void setUp() throws Exception {     this.messageInterpolator = new MyMessageInterpolator().     this.traversableResolver = new MyTraversableResolver().     this.constraintValidatorFactory = new MyConstraintValidatorFactory().     super.setUp(). }
false;protected;0;9;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry registry = super.createRegistry().     registry.bind("myMessageInterpolator", this.messageInterpolator).     registry.bind("myTraversableResolver", this.traversableResolver).     registry.bind("myConstraintValidatorFactory", this.constraintValidatorFactory).     return registry. }
false;public;0;10;;@Test public void configureWithDefaults() throws Exception {     if (isPlatform("aix")) {         // cannot run on aix         return.     }     BeanValidatorEndpoint endpoint = context.getEndpoint("bean-validator://x", BeanValidatorEndpoint.class).     assertNull(endpoint.getGroup()). }
false;public;0;18;;@Test public void configureBeanValidator() throws Exception {     if (isPlatform("aix")) {         // cannot run on aix         return.     }     BeanValidatorEndpoint endpoint = context.getEndpoint("bean-validator://x" + "?group=org.apache.camel.component.bean.validator.OptionalChecks" + "&messageInterpolator=#myMessageInterpolator" + "&traversableResolver=#myTraversableResolver" + "&constraintValidatorFactory=#myConstraintValidatorFactory", BeanValidatorEndpoint.class).     assertEquals("org.apache.camel.component.bean.validator.OptionalChecks", endpoint.getGroup()).     assertSame(endpoint.getMessageInterpolator(), this.messageInterpolator).     assertSame(endpoint.getTraversableResolver(), this.traversableResolver).     assertSame(endpoint.getConstraintValidatorFactory(), this.constraintValidatorFactory). }
false;public;2;3;;public String interpolate(String messageTemplate, Context context) {     return null. }
false;public;3;3;;public String interpolate(String messageTemplate, Context context, Locale locale) {     return null. }
false;public;5;3;;public boolean isCascadable(Object traversableObject, Node traversableProperty, Class<?> rootBeanType, Path pathToTraversableObject, ElementType elementType) {     return false. }
false;public;5;3;;public boolean isReachable(Object traversableObject, Node traversableProperty, Class<?> rootBeanType, Path pathToTraversableObject, ElementType elementType) {     return false. }
false;public;1;3;;public <T extends ConstraintValidator<?, ?>> T getInstance(Class<T> key) {     return null. }
false;public;1;4;;@Override public void releaseInstance(ConstraintValidator<?, ?> arg0) { // noop }
