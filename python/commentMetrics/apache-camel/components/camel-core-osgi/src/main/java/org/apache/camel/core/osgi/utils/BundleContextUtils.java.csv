# id;timestamp;commentText;codeText;commentWords;codeWords
BundleContextUtils -> public static BundleContext getBundleContext(Class clazz);1296711597;Retrieve the BundleContext that the given class has been loaded from.__@param clazz the class to find the bundle context from_@return the bundle context or <code>null</code> if it can't be found;public static BundleContext getBundleContext(Class clazz) {__        _        __        try {_            ClassLoader cl = clazz.getClassLoader()__            Class clClazz = cl.getClass()__            Method mth = null__            while (clClazz != null) {_                try {_                    mth = clClazz.getDeclaredMethod("getBundle")__                    break__                } catch (NoSuchMethodException e) {_                    _                }_                clClazz = clClazz.getSuperclass()__            }_            if (mth != null) {_                mth.setAccessible(true)__                return ((Bundle) mth.invoke(cl)).getBundleContext()__            }_        } catch (Throwable t) {_            _        }__        return null__    };retrieve,the,bundle,context,that,the,given,class,has,been,loaded,from,param,clazz,the,class,to,find,the,bundle,context,from,return,the,bundle,context,or,code,null,code,if,it,can,t,be,found;public,static,bundle,context,get,bundle,context,class,clazz,try,class,loader,cl,clazz,get,class,loader,class,cl,clazz,cl,get,class,method,mth,null,while,cl,clazz,null,try,mth,cl,clazz,get,declared,method,get,bundle,break,catch,no,such,method,exception,e,cl,clazz,cl,clazz,get,superclass,if,mth,null,mth,set,accessible,true,return,bundle,mth,invoke,cl,get,bundle,context,catch,throwable,t,return,null
BundleContextUtils -> public static BundleContext getBundleContext(Class clazz);1303345011;Retrieve the BundleContext that the given class has been loaded from.__@param clazz the class to find the bundle context from_@return the bundle context or <code>null</code> if it can't be found;public static BundleContext getBundleContext(Class clazz) {__        _        __        try {_            ClassLoader cl = clazz.getClassLoader()__            Class<?> clClazz = cl.getClass()__            Method mth = null__            while (clClazz != null) {_                try {_                    mth = clClazz.getDeclaredMethod("getBundle")__                    break__                } catch (NoSuchMethodException e) {_                    _                }_                clClazz = clClazz.getSuperclass()__            }_            if (mth != null) {_                mth.setAccessible(true)__                return ((Bundle) mth.invoke(cl)).getBundleContext()__            }_        } catch (Throwable t) {_            _        }__        return null__    };retrieve,the,bundle,context,that,the,given,class,has,been,loaded,from,param,clazz,the,class,to,find,the,bundle,context,from,return,the,bundle,context,or,code,null,code,if,it,can,t,be,found;public,static,bundle,context,get,bundle,context,class,clazz,try,class,loader,cl,clazz,get,class,loader,class,cl,clazz,cl,get,class,method,mth,null,while,cl,clazz,null,try,mth,cl,clazz,get,declared,method,get,bundle,break,catch,no,such,method,exception,e,cl,clazz,cl,clazz,get,superclass,if,mth,null,mth,set,accessible,true,return,bundle,mth,invoke,cl,get,bundle,context,catch,throwable,t,return,null
BundleContextUtils -> public static Map<String, Properties> findComponents(BundleContext bundleContext, CamelContext camelContext)         throws IOException, LoadPropertiesException;1371067456;Finds the components available on the bundle context and camel context;public static Map<String, Properties> findComponents(BundleContext bundleContext, CamelContext camelContext)_        throws IOException, LoadPropertiesException {__        SortedMap<String, Properties> answer = new TreeMap<String, Properties>()__        Bundle[] bundles = bundleContext.getBundles()__        for (Bundle bundle : bundles) {_            Enumeration<URL> iter = bundle.getResources(CamelContextHelper.COMPONENT_DESCRIPTOR)__            SortedMap<String, Properties> map = CamelContextHelper.findComponents(camelContext, iter)__            answer.putAll(map)__        }_        return answer__    };finds,the,components,available,on,the,bundle,context,and,camel,context;public,static,map,string,properties,find,components,bundle,context,bundle,context,camel,context,camel,context,throws,ioexception,load,properties,exception,sorted,map,string,properties,answer,new,tree,map,string,properties,bundle,bundles,bundle,context,get,bundles,for,bundle,bundle,bundles,enumeration,url,iter,bundle,get,resources,camel,context,helper,sorted,map,string,properties,map,camel,context,helper,find,components,camel,context,iter,answer,put,all,map,return,answer
BundleContextUtils -> public static Map<String, Properties> findComponents(BundleContext bundleContext, CamelContext camelContext)         throws IOException, LoadPropertiesException;1373129971;Finds the components available on the bundle context and camel context;public static Map<String, Properties> findComponents(BundleContext bundleContext, CamelContext camelContext)_        throws IOException, LoadPropertiesException {__        SortedMap<String, Properties> answer = new TreeMap<String, Properties>()__        Bundle[] bundles = bundleContext.getBundles()__        for (Bundle bundle : bundles) {_            Enumeration<URL> iter = bundle.getResources(CamelContextHelper.COMPONENT_DESCRIPTOR)__            SortedMap<String, Properties> map = CamelContextHelper.findComponents(camelContext, iter)__            answer.putAll(map)__        }_        return answer__    };finds,the,components,available,on,the,bundle,context,and,camel,context;public,static,map,string,properties,find,components,bundle,context,bundle,context,camel,context,camel,context,throws,ioexception,load,properties,exception,sorted,map,string,properties,answer,new,tree,map,string,properties,bundle,bundles,bundle,context,get,bundles,for,bundle,bundle,bundles,enumeration,url,iter,bundle,get,resources,camel,context,helper,sorted,map,string,properties,map,camel,context,helper,find,components,camel,context,iter,answer,put,all,map,return,answer
BundleContextUtils -> public static Map<String, Properties> findComponents(BundleContext bundleContext, CamelContext camelContext)         throws IOException, LoadPropertiesException;1487239706;Finds the components available on the bundle context and camel context;public static Map<String, Properties> findComponents(BundleContext bundleContext, CamelContext camelContext)_        throws IOException, LoadPropertiesException {__        SortedMap<String, Properties> answer = new TreeMap<String, Properties>()__        Bundle[] bundles = bundleContext.getBundles()__        for (Bundle bundle : bundles) {_            Enumeration<URL> iter = bundle.getResources(CamelContextHelper.COMPONENT_DESCRIPTOR)__            SortedMap<String, Properties> map = CamelContextHelper.findComponents(camelContext, iter)__            answer.putAll(map)__        }_        return answer__    };finds,the,components,available,on,the,bundle,context,and,camel,context;public,static,map,string,properties,find,components,bundle,context,bundle,context,camel,context,camel,context,throws,ioexception,load,properties,exception,sorted,map,string,properties,answer,new,tree,map,string,properties,bundle,bundles,bundle,context,get,bundles,for,bundle,bundle,bundles,enumeration,url,iter,bundle,get,resources,camel,context,helper,sorted,map,string,properties,map,camel,context,helper,find,components,camel,context,iter,answer,put,all,map,return,answer
BundleContextUtils -> public static Map<String, Properties> findComponents(BundleContext bundleContext, CamelContext camelContext)         throws IOException, LoadPropertiesException;1523914942;Finds the components available on the bundle context and camel context;public static Map<String, Properties> findComponents(BundleContext bundleContext, CamelContext camelContext)_        throws IOException, LoadPropertiesException {__        SortedMap<String, Properties> answer = new TreeMap<>()__        Bundle[] bundles = bundleContext.getBundles()__        for (Bundle bundle : bundles) {_            Enumeration<URL> iter = bundle.getResources(CamelContextHelper.COMPONENT_DESCRIPTOR)__            SortedMap<String, Properties> map = CamelContextHelper.findComponents(camelContext, iter)__            answer.putAll(map)__        }_        return answer__    };finds,the,components,available,on,the,bundle,context,and,camel,context;public,static,map,string,properties,find,components,bundle,context,bundle,context,camel,context,camel,context,throws,ioexception,load,properties,exception,sorted,map,string,properties,answer,new,tree,map,bundle,bundles,bundle,context,get,bundles,for,bundle,bundle,bundles,enumeration,url,iter,bundle,get,resources,camel,context,helper,sorted,map,string,properties,map,camel,context,helper,find,components,camel,context,iter,answer,put,all,map,return,answer
BundleContextUtils -> public static Map<String, Properties> findComponents(BundleContext bundleContext, CamelContext camelContext)         throws IOException, LoadPropertiesException;1540108163;Finds the components available on the bundle context and camel context;public static Map<String, Properties> findComponents(BundleContext bundleContext, CamelContext camelContext)_        throws IOException, LoadPropertiesException {__        SortedMap<String, Properties> answer = new TreeMap<>()__        Bundle[] bundles = bundleContext.getBundles()__        for (Bundle bundle : bundles) {_            Enumeration<URL> iter = bundle.getResources(CamelContextHelper.COMPONENT_DESCRIPTOR)__            SortedMap<String, Properties> map = CamelContextHelper.findComponents(camelContext, iter)__            answer.putAll(map)__        }_        return answer__    };finds,the,components,available,on,the,bundle,context,and,camel,context;public,static,map,string,properties,find,components,bundle,context,bundle,context,camel,context,camel,context,throws,ioexception,load,properties,exception,sorted,map,string,properties,answer,new,tree,map,bundle,bundles,bundle,context,get,bundles,for,bundle,bundle,bundles,enumeration,url,iter,bundle,get,resources,camel,context,helper,sorted,map,string,properties,map,camel,context,helper,find,components,camel,context,iter,answer,put,all,map,return,answer
BundleContextUtils -> public static Map<String, Properties> findComponents(BundleContext bundleContext, CamelContext camelContext)         throws IOException, LoadPropertiesException;1544427611;Finds the components available on the bundle context and camel context;public static Map<String, Properties> findComponents(BundleContext bundleContext, CamelContext camelContext)_        throws IOException, LoadPropertiesException {__        SortedMap<String, Properties> answer = new TreeMap<>()__        Bundle[] bundles = bundleContext.getBundles()__        for (Bundle bundle : bundles) {_            Enumeration<URL> iter = bundle.getResources(CamelContextHelper.COMPONENT_DESCRIPTOR)__            SortedMap<String, Properties> map = CamelContextHelper.findComponents(camelContext, iter)__            answer.putAll(map)__        }_        return answer__    };finds,the,components,available,on,the,bundle,context,and,camel,context;public,static,map,string,properties,find,components,bundle,context,bundle,context,camel,context,camel,context,throws,ioexception,load,properties,exception,sorted,map,string,properties,answer,new,tree,map,bundle,bundles,bundle,context,get,bundles,for,bundle,bundle,bundles,enumeration,url,iter,bundle,get,resources,camel,context,helper,sorted,map,string,properties,map,camel,context,helper,find,components,camel,context,iter,answer,put,all,map,return,answer
BundleContextUtils -> public static BundleContext getBundleContext(Class<?> clazz);1326392736;Retrieve the BundleContext that the given class has been loaded from.__@param clazz the class to find the bundle context from_@return the bundle context or <code>null</code> if it can't be found;public static BundleContext getBundleContext(Class<?> clazz) {__        _        __        try {_            ClassLoader cl = clazz.getClassLoader()__            Class<?> clClazz = cl.getClass()__            Method mth = null__            while (clClazz != null) {_                try {_                    mth = clClazz.getDeclaredMethod("getBundle")__                    break__                } catch (NoSuchMethodException e) {_                    _                }_                clClazz = clClazz.getSuperclass()__            }_            if (mth != null) {_                mth.setAccessible(true)__                return ((Bundle) mth.invoke(cl)).getBundleContext()__            }_        } catch (Throwable t) {_            _        }__        return null__    };retrieve,the,bundle,context,that,the,given,class,has,been,loaded,from,param,clazz,the,class,to,find,the,bundle,context,from,return,the,bundle,context,or,code,null,code,if,it,can,t,be,found;public,static,bundle,context,get,bundle,context,class,clazz,try,class,loader,cl,clazz,get,class,loader,class,cl,clazz,cl,get,class,method,mth,null,while,cl,clazz,null,try,mth,cl,clazz,get,declared,method,get,bundle,break,catch,no,such,method,exception,e,cl,clazz,cl,clazz,get,superclass,if,mth,null,mth,set,accessible,true,return,bundle,mth,invoke,cl,get,bundle,context,catch,throwable,t,return,null
BundleContextUtils -> public static BundleContext getBundleContext(Class<?> clazz);1370680149;Retrieve the BundleContext that the given class has been loaded from.__@param clazz the class to find the bundle context from_@return the bundle context or <code>null</code> if it can't be found;public static BundleContext getBundleContext(Class<?> clazz) {__        _        __        try {_            ClassLoader cl = clazz.getClassLoader()__            Class<?> clClazz = cl.getClass()__            Method mth = null__            while (clClazz != null) {_                try {_                    mth = clClazz.getDeclaredMethod("getBundle")__                    break__                } catch (NoSuchMethodException e) {_                    _                }_                clClazz = clClazz.getSuperclass()__            }_            if (mth != null) {_                mth.setAccessible(true)__                return ((Bundle) mth.invoke(cl)).getBundleContext()__            }_        } catch (Throwable t) {_            _        }__        return null__    };retrieve,the,bundle,context,that,the,given,class,has,been,loaded,from,param,clazz,the,class,to,find,the,bundle,context,from,return,the,bundle,context,or,code,null,code,if,it,can,t,be,found;public,static,bundle,context,get,bundle,context,class,clazz,try,class,loader,cl,clazz,get,class,loader,class,cl,clazz,cl,get,class,method,mth,null,while,cl,clazz,null,try,mth,cl,clazz,get,declared,method,get,bundle,break,catch,no,such,method,exception,e,cl,clazz,cl,clazz,get,superclass,if,mth,null,mth,set,accessible,true,return,bundle,mth,invoke,cl,get,bundle,context,catch,throwable,t,return,null
BundleContextUtils -> public static BundleContext getBundleContext(Class<?> clazz);1370786289;Retrieve the BundleContext that the given class has been loaded from.__@param clazz the class to find the bundle context from_@return the bundle context or <code>null</code> if it can't be found;public static BundleContext getBundleContext(Class<?> clazz) {__        _        __        try {_            ClassLoader cl = clazz.getClassLoader()__            Class<?> clClazz = cl.getClass()__            Method mth = null__            while (clClazz != null) {_                try {_                    mth = clClazz.getDeclaredMethod("getBundle")__                    break__                } catch (NoSuchMethodException e) {_                    _                }_                clClazz = clClazz.getSuperclass()__            }_            if (mth != null) {_                mth.setAccessible(true)__                return ((Bundle) mth.invoke(cl)).getBundleContext()__            }_        } catch (Throwable t) {_            _        }__        return null__    };retrieve,the,bundle,context,that,the,given,class,has,been,loaded,from,param,clazz,the,class,to,find,the,bundle,context,from,return,the,bundle,context,or,code,null,code,if,it,can,t,be,found;public,static,bundle,context,get,bundle,context,class,clazz,try,class,loader,cl,clazz,get,class,loader,class,cl,clazz,cl,get,class,method,mth,null,while,cl,clazz,null,try,mth,cl,clazz,get,declared,method,get,bundle,break,catch,no,such,method,exception,e,cl,clazz,cl,clazz,get,superclass,if,mth,null,mth,set,accessible,true,return,bundle,mth,invoke,cl,get,bundle,context,catch,throwable,t,return,null
BundleContextUtils -> public static BundleContext getBundleContext(Class<?> clazz);1371067456;Retrieve the BundleContext that the given class has been loaded from.__@param clazz the class to find the bundle context from_@return the bundle context or <code>null</code> if it can't be found;public static BundleContext getBundleContext(Class<?> clazz) {__        _        __        try {_            ClassLoader cl = clazz.getClassLoader()__            Class<?> clClazz = cl.getClass()__            Method mth = null__            while (clClazz != null) {_                try {_                    mth = clClazz.getDeclaredMethod("getBundle")__                    break__                } catch (NoSuchMethodException e) {_                    _                }_                clClazz = clClazz.getSuperclass()__            }_            if (mth != null) {_                mth.setAccessible(true)__                return ((Bundle) mth.invoke(cl)).getBundleContext()__            }_        } catch (Throwable t) {_            _        }__        return null__    };retrieve,the,bundle,context,that,the,given,class,has,been,loaded,from,param,clazz,the,class,to,find,the,bundle,context,from,return,the,bundle,context,or,code,null,code,if,it,can,t,be,found;public,static,bundle,context,get,bundle,context,class,clazz,try,class,loader,cl,clazz,get,class,loader,class,cl,clazz,cl,get,class,method,mth,null,while,cl,clazz,null,try,mth,cl,clazz,get,declared,method,get,bundle,break,catch,no,such,method,exception,e,cl,clazz,cl,clazz,get,superclass,if,mth,null,mth,set,accessible,true,return,bundle,mth,invoke,cl,get,bundle,context,catch,throwable,t,return,null
BundleContextUtils -> public static BundleContext getBundleContext(Class<?> clazz);1373129971;Retrieve the BundleContext that the given class has been loaded from.__@param clazz the class to find the bundle context from_@return the bundle context or <code>null</code> if it can't be found;public static BundleContext getBundleContext(Class<?> clazz) {__        _        __        try {_            ClassLoader cl = clazz.getClassLoader()__            Class<?> clClazz = cl.getClass()__            Method mth = null__            while (clClazz != null) {_                try {_                    mth = clClazz.getDeclaredMethod("getBundle")__                    break__                } catch (NoSuchMethodException e) {_                    _                }_                clClazz = clClazz.getSuperclass()__            }_            if (mth != null) {_                mth.setAccessible(true)__                return ((Bundle) mth.invoke(cl)).getBundleContext()__            }_        } catch (Throwable t) {_            _        }__        return null__    };retrieve,the,bundle,context,that,the,given,class,has,been,loaded,from,param,clazz,the,class,to,find,the,bundle,context,from,return,the,bundle,context,or,code,null,code,if,it,can,t,be,found;public,static,bundle,context,get,bundle,context,class,clazz,try,class,loader,cl,clazz,get,class,loader,class,cl,clazz,cl,get,class,method,mth,null,while,cl,clazz,null,try,mth,cl,clazz,get,declared,method,get,bundle,break,catch,no,such,method,exception,e,cl,clazz,cl,clazz,get,superclass,if,mth,null,mth,set,accessible,true,return,bundle,mth,invoke,cl,get,bundle,context,catch,throwable,t,return,null
BundleContextUtils -> public static BundleContext getBundleContext(Class<?> clazz);1487239706;Retrieve the BundleContext that the given class has been loaded from.__@param clazz the class to find the bundle context from_@return the bundle context or <code>null</code> if it can't be found;public static BundleContext getBundleContext(Class<?> clazz) {__        _        __        try {_            ClassLoader cl = clazz.getClassLoader()__            Class<?> clClazz = cl.getClass()__            Method mth = null__            while (clClazz != null) {_                try {_                    mth = clClazz.getDeclaredMethod("getBundle")__                    break__                } catch (NoSuchMethodException e) {_                    _                }_                clClazz = clClazz.getSuperclass()__            }_            if (mth != null) {_                mth.setAccessible(true)__                return ((Bundle) mth.invoke(cl)).getBundleContext()__            }_        } catch (Throwable t) {_            _        }__        return null__    };retrieve,the,bundle,context,that,the,given,class,has,been,loaded,from,param,clazz,the,class,to,find,the,bundle,context,from,return,the,bundle,context,or,code,null,code,if,it,can,t,be,found;public,static,bundle,context,get,bundle,context,class,clazz,try,class,loader,cl,clazz,get,class,loader,class,cl,clazz,cl,get,class,method,mth,null,while,cl,clazz,null,try,mth,cl,clazz,get,declared,method,get,bundle,break,catch,no,such,method,exception,e,cl,clazz,cl,clazz,get,superclass,if,mth,null,mth,set,accessible,true,return,bundle,mth,invoke,cl,get,bundle,context,catch,throwable,t,return,null
BundleContextUtils -> public static BundleContext getBundleContext(Class<?> clazz);1523914942;Retrieve the BundleContext that the given class has been loaded from.__@param clazz the class to find the bundle context from_@return the bundle context or <code>null</code> if it can't be found;public static BundleContext getBundleContext(Class<?> clazz) {__        _        __        try {_            ClassLoader cl = clazz.getClassLoader()__            Class<?> clClazz = cl.getClass()__            Method mth = null__            while (clClazz != null) {_                try {_                    mth = clClazz.getDeclaredMethod("getBundle")__                    break__                } catch (NoSuchMethodException e) {_                    _                }_                clClazz = clClazz.getSuperclass()__            }_            if (mth != null) {_                mth.setAccessible(true)__                return ((Bundle) mth.invoke(cl)).getBundleContext()__            }_        } catch (Throwable t) {_            _        }__        return null__    };retrieve,the,bundle,context,that,the,given,class,has,been,loaded,from,param,clazz,the,class,to,find,the,bundle,context,from,return,the,bundle,context,or,code,null,code,if,it,can,t,be,found;public,static,bundle,context,get,bundle,context,class,clazz,try,class,loader,cl,clazz,get,class,loader,class,cl,clazz,cl,get,class,method,mth,null,while,cl,clazz,null,try,mth,cl,clazz,get,declared,method,get,bundle,break,catch,no,such,method,exception,e,cl,clazz,cl,clazz,get,superclass,if,mth,null,mth,set,accessible,true,return,bundle,mth,invoke,cl,get,bundle,context,catch,throwable,t,return,null
BundleContextUtils -> public static BundleContext getBundleContext(Class<?> clazz);1540108163;Retrieve the BundleContext that the given class has been loaded from.__@param clazz the class to find the bundle context from_@return the bundle context or <code>null</code> if it can't be found;public static BundleContext getBundleContext(Class<?> clazz) {__        _        __        try {_            ClassLoader cl = clazz.getClassLoader()__            Class<?> clClazz = cl.getClass()__            Method mth = null__            while (clClazz != null) {_                try {_                    mth = clClazz.getDeclaredMethod("getBundle")__                    break__                } catch (NoSuchMethodException e) {_                    _                }_                clClazz = clClazz.getSuperclass()__            }_            if (mth != null) {_                mth.setAccessible(true)__                return ((Bundle) mth.invoke(cl)).getBundleContext()__            }_        } catch (Throwable t) {_            _        }__        return null__    };retrieve,the,bundle,context,that,the,given,class,has,been,loaded,from,param,clazz,the,class,to,find,the,bundle,context,from,return,the,bundle,context,or,code,null,code,if,it,can,t,be,found;public,static,bundle,context,get,bundle,context,class,clazz,try,class,loader,cl,clazz,get,class,loader,class,cl,clazz,cl,get,class,method,mth,null,while,cl,clazz,null,try,mth,cl,clazz,get,declared,method,get,bundle,break,catch,no,such,method,exception,e,cl,clazz,cl,clazz,get,superclass,if,mth,null,mth,set,accessible,true,return,bundle,mth,invoke,cl,get,bundle,context,catch,throwable,t,return,null
BundleContextUtils -> public static BundleContext getBundleContext(Class<?> clazz);1544427611;Retrieve the BundleContext that the given class has been loaded from.__@param clazz the class to find the bundle context from_@return the bundle context or <code>null</code> if it can't be found;public static BundleContext getBundleContext(Class<?> clazz) {__        _        __        try {_            ClassLoader cl = clazz.getClassLoader()__            Class<?> clClazz = cl.getClass()__            Method mth = null__            while (clClazz != null) {_                try {_                    mth = clClazz.getDeclaredMethod("getBundle")__                    break__                } catch (NoSuchMethodException e) {_                    _                }_                clClazz = clClazz.getSuperclass()__            }_            if (mth != null) {_                mth.setAccessible(true)__                return ((Bundle) mth.invoke(cl)).getBundleContext()__            }_        } catch (Throwable t) {_            _        }__        return null__    };retrieve,the,bundle,context,that,the,given,class,has,been,loaded,from,param,clazz,the,class,to,find,the,bundle,context,from,return,the,bundle,context,or,code,null,code,if,it,can,t,be,found;public,static,bundle,context,get,bundle,context,class,clazz,try,class,loader,cl,clazz,get,class,loader,class,cl,clazz,cl,get,class,method,mth,null,while,cl,clazz,null,try,mth,cl,clazz,get,declared,method,get,bundle,break,catch,no,such,method,exception,e,cl,clazz,cl,clazz,get,superclass,if,mth,null,mth,set,accessible,true,return,bundle,mth,invoke,cl,get,bundle,context,catch,throwable,t,return,null
BundleContextUtils -> public static Map<String, Properties> findComponents(BundleContext bundleContext, CamelContext camelContext)             throws IOException, LoadPropertiesException;1370680149;Finds the components available on the bundle context and camel context;public static Map<String, Properties> findComponents(BundleContext bundleContext, CamelContext camelContext)_            throws IOException, LoadPropertiesException {_        SortedMap<String, Properties> answer = new TreeMap<String, Properties>()__        Bundle[] bundles = bundleContext.getBundles()__        for (Bundle bundle : bundles) {_            Enumeration<URL> iter = bundle.getResources(CamelContextHelper.COMPONENT_DESCRIPTOR)__            SortedMap<String,Properties> map = CamelContextHelper.findComponents(camelContext, iter)__            answer.putAll(map)__        }_        return answer__    };finds,the,components,available,on,the,bundle,context,and,camel,context;public,static,map,string,properties,find,components,bundle,context,bundle,context,camel,context,camel,context,throws,ioexception,load,properties,exception,sorted,map,string,properties,answer,new,tree,map,string,properties,bundle,bundles,bundle,context,get,bundles,for,bundle,bundle,bundles,enumeration,url,iter,bundle,get,resources,camel,context,helper,sorted,map,string,properties,map,camel,context,helper,find,components,camel,context,iter,answer,put,all,map,return,answer
BundleContextUtils -> public static Map<String, Properties> findComponents(BundleContext bundleContext, CamelContext camelContext)             throws IOException, LoadPropertiesException;1370786289;Finds the components available on the bundle context and camel context;public static Map<String, Properties> findComponents(BundleContext bundleContext, CamelContext camelContext)_            throws IOException, LoadPropertiesException {_        SortedMap<String, Properties> answer = new TreeMap<String, Properties>()__        Bundle[] bundles = bundleContext.getBundles()__        for (Bundle bundle : bundles) {_            Enumeration<URL> iter = bundle.getResources(CamelContextHelper.COMPONENT_DESCRIPTOR)__            SortedMap<String,Properties> map = CamelContextHelper.findComponents(camelContext, iter)__            answer.putAll(map)__        }_        return answer__    };finds,the,components,available,on,the,bundle,context,and,camel,context;public,static,map,string,properties,find,components,bundle,context,bundle,context,camel,context,camel,context,throws,ioexception,load,properties,exception,sorted,map,string,properties,answer,new,tree,map,string,properties,bundle,bundles,bundle,context,get,bundles,for,bundle,bundle,bundles,enumeration,url,iter,bundle,get,resources,camel,context,helper,sorted,map,string,properties,map,camel,context,helper,find,components,camel,context,iter,answer,put,all,map,return,answer
