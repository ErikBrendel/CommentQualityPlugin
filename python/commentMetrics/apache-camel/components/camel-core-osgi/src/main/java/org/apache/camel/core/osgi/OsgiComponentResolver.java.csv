commented;modifiers;parameterAmount;loc;comment;code
false;public;2;9;;public Component resolveComponent(String name, CamelContext context) throws Exception {     Component componentReg = ResolverHelper.lookupComponentInRegistryWithFallback(context, name).     if (componentReg != null) {         return componentReg.     }     // Check in OSGi bundles     return getComponent(name, context). }
false;protected;2;18;;protected Component getComponent(String name, CamelContext context) throws Exception {     LOG.trace("Finding Component: {}", name).     try {         ServiceReference<?>[] refs = bundleContext.getServiceReferences(ComponentResolver.class.getName(), "(component=" + name + ")").         if (refs != null) {             for (ServiceReference<?> ref : refs) {                 Object service = bundleContext.getService(ref).                 if (ComponentResolver.class.isAssignableFrom(service.getClass())) {                     ComponentResolver resolver = (ComponentResolver) service.                     return resolver.resolveComponent(name, context).                 }             }         }         return null.     } catch (InvalidSyntaxException e) {         throw RuntimeCamelException.wrapRuntimeCamelException(e).     } }
