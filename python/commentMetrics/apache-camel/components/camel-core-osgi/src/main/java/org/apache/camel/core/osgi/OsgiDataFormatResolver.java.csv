commented;modifiers;parameterAmount;loc;comment;code
false;public;2;13;;public DataFormat resolveDataFormat(String name, CamelContext context) {     // lookup in registry first     DataFormat dataFormat = ResolverHelper.lookupDataFormatInRegistryWithFallback(context, name).     if (dataFormat == null) {         dataFormat = getDataFormat(name, context, false).     }     if (dataFormat == null) {         dataFormat = createDataFormat(name, context).     }     return dataFormat. }
false;public;2;15;;public DataFormat createDataFormat(String name, CamelContext context) {     DataFormat dataFormat = null.     // lookup in registry first     DataFormatFactory dataFormatFactory = ResolverHelper.lookupDataFormatFactoryInRegistryWithFallback(context, name).     if (dataFormatFactory != null) {         dataFormat = dataFormatFactory.newInstance().     }     if (dataFormat == null) {         dataFormat = getDataFormat(name, context, true).     }     return dataFormat. }
false;private;3;16;;private DataFormat getDataFormat(String name, CamelContext context, boolean create) {     LOG.trace("Finding DataFormat: {}", name).     try {         Collection<ServiceReference<DataFormatResolver>> refs = bundleContext.getServiceReferences(DataFormatResolver.class, "(dataformat=" + name + ")").         if (refs != null) {             for (ServiceReference<DataFormatResolver> ref : refs) {                 return create ? bundleContext.getService(ref).createDataFormat(name, context) : bundleContext.getService(ref).resolveDataFormat(name, context).             }         }         return null.     } catch (InvalidSyntaxException e) {         throw RuntimeCamelException.wrapRuntimeCamelException(e).     } }
