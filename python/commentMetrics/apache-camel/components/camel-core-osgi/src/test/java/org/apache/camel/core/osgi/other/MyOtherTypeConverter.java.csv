commented;modifiers;parameterAmount;loc;comment;code
true;public,static;1;14;/**  * Converts the given value to a boolean, handling strings or Boolean  * objects. otherwise returning false if the value could not be converted to  * a boolean  */ ;/**  * Converts the given value to a boolean, handling strings or Boolean  * objects. otherwise returning false if the value could not be converted to  * a boolean  */ @Converter public static boolean toBool(Object value) {     Boolean answer = null.     if (value instanceof String) {         answer = Boolean.valueOf((String) value).     }     if (value instanceof Boolean) {         answer = (Boolean) value.     }     if (answer != null) {         return answer.booleanValue().     }     return false. }
false;public,static;4;21;;@FallbackConverter public static Object convertTo(Class<?> type, Exchange exchange, Object value, TypeConverterRegistry registry) {     // use a fallback type converter so we can convert the embedded body if the value is GenericFile     if (GenericFile.class.isAssignableFrom(value.getClass())) {         GenericFile<?> file = (GenericFile<?>) value.         Class<?> from = file.getBody().getClass().         // maybe from is already the type we want         if (from.isAssignableFrom(type)) {             return file.getBody().         }         // no then try to lookup a type converter         TypeConverter tc = registry.lookup(type, from).         if (tc != null) {             Object body = file.getBody().             return tc.convertTo(type, exchange, body).         }     }     return null. }
