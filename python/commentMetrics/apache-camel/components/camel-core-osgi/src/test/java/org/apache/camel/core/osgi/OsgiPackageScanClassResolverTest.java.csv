commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void testOsgiResolverFindAnnotatedTest() throws IOException {     BundleContext context = getBundleContext().     assertNotNull("The BundleContext should not be null", context).     OsgiPackageScanClassResolver resolver = new OsgiPackageScanClassResolver(context).     String[] packageNames = { "org.apache.camel.core.osgi.test" }.     Set<Class<?>> classes = resolver.findAnnotated(Converter.class, packageNames).     assertEquals("There should find a class", classes.size(), 1).     assertTrue("Find a wrong class", classes.contains(MyTypeConverter.class)). }
false;public;0;10;;@Test public void testOsgiResolverFindImplementationTest() {     BundleContext context = getBundleContext().     assertNotNull("The BundleContext should not be null", context).     OsgiPackageScanClassResolver resolver = new OsgiPackageScanClassResolver(context).     String[] packageNames = { "org.apache.camel.core.osgi.test" }.     Set<Class<?>> classes = resolver.findImplementations(RoutesBuilder.class, packageNames).     assertEquals("There should find a class", classes.size(), 1).     assertTrue("Find a wrong class", classes.contains(MyRouteBuilder.class)). }
false;public;0;11;;@Test public void testOsgiResolverFindAnnotatedWithFallbackClassLoaderTest() throws IOException {     BundleContext context = getBundleContext().     assertNotNull("The BundleContext should not be null", context).     OsgiPackageScanClassResolver resolver = new OsgiPackageScanClassResolver(context).     String[] packageNames = { "org.apache.camel.core.osgi.other" }.     Set<Class<?>> classes = resolver.findAnnotated(Converter.class, packageNames).     assertEquals("There should find a class", classes.size(), 1).     assertTrue("Find a wrong class", classes.contains(MyOtherTypeConverter.class)). }
false;public;0;10;;@Test public void testOsgiResolverFindImplementationWithFallbackClassLoaderTest() {     BundleContext context = getBundleContext().     assertNotNull("The BundleContext should not be null", context).     OsgiPackageScanClassResolver resolver = new OsgiPackageScanClassResolver(context).     String[] packageNames = { "org.apache.camel.core.osgi.other" }.     Set<Class<?>> classes = resolver.findImplementations(RoutesBuilder.class, packageNames).     assertEquals("There should find a class", classes.size(), 1).     assertTrue("Find a wrong class", classes.contains(MyOtherRouteBuilder.class)). }
