commented;modifiers;parameterAmount;loc;comment;code
false;public;0;20;;@Before public void setup() throws Exception {     when(kinesisEndpoint.getClient()).thenReturn(kinesisClient).     when(kinesisEndpoint.getConfiguration()).thenReturn(kinesisConfiguration).     when(kinesisEndpoint.getConfiguration().getStreamName()).thenReturn(STREAM_NAME).     when(exchange.getOut()).thenReturn(outMessage).     when(exchange.getIn()).thenReturn(inMessage).     when(exchange.getPattern()).thenReturn(ExchangePattern.InOut).     when(inMessage.getBody(ByteBuffer.class)).thenReturn(SAMPLE_BUFFER).     when(inMessage.getHeader(KinesisConstants.PARTITION_KEY)).thenReturn(PARTITION_KEY).     when(putRecordResult.getSequenceNumber()).thenReturn(SEQUENCE_NUMBER).     when(putRecordResult.getShardId()).thenReturn(SHARD_ID).     when(kinesisClient.putRecord(any(PutRecordRequest.class))).thenReturn(putRecordResult).     kinesisProducer = new KinesisProducer(kinesisEndpoint). }
false;public;0;13;;@Test public void shouldPutRecordInRightStreamWhenProcessingExchange() throws Exception {     kinesisProducer.process(exchange).     ArgumentCaptor<PutRecordRequest> capture = ArgumentCaptor.forClass(PutRecordRequest.class).     verify(kinesisClient).putRecord(capture.capture()).     PutRecordRequest request = capture.getValue().     ByteBuffer byteBuffer = request.getData().     byte[] actualArray = byteBuffer.array().     byte[] sampleArray = SAMPLE_BUFFER.array().     assertEquals(sampleArray, actualArray).     assertEquals(STREAM_NAME, request.getStreamName()). }
false;public;0;16;;@Test public void shouldHaveProperHeadersWhenSending() throws Exception {     String seqNoForOrdering = "1851".     when(inMessage.getHeader(KinesisConstants.SEQUENCE_NUMBER)).thenReturn(seqNoForOrdering).     kinesisProducer.process(exchange).     ArgumentCaptor<PutRecordRequest> capture = ArgumentCaptor.forClass(PutRecordRequest.class).     verify(kinesisClient).putRecord(capture.capture()).     PutRecordRequest request = capture.getValue().     assertEquals(PARTITION_KEY, request.getPartitionKey()).     assertEquals(seqNoForOrdering, request.getSequenceNumberForOrdering()).     verify(outMessage).setHeader(KinesisConstants.SEQUENCE_NUMBER, SEQUENCE_NUMBER).     verify(outMessage).setHeader(KinesisConstants.SHARD_ID, SHARD_ID). }
