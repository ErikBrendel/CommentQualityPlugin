commented;modifiers;parameterAmount;loc;comment;code
false;public;1;3;;public void process(Exchange exchange) throws Exception {     exchange.getIn().setBody("my message text"). }
false;public;0;9;;@Test public void testFirehoseRouting() throws Exception {     Exchange exchange = template.send("direct:start", ExchangePattern.InOnly, new Processor() {          public void process(Exchange exchange) throws Exception {             exchange.getIn().setBody("my message text").         }     }).     assertNotNull(exchange.getIn().getHeader(KinesisFirehoseConstants.RECORD_ID)). }
false;protected;0;7;;@Override protected JndiRegistry createRegistry() throws Exception {     AmazonKinesisFirehose client = AmazonKinesisFirehoseAsyncClientBuilder.defaultClient().     JndiRegistry registry = super.createRegistry().     registry.bind("FirehoseClient", client).     return registry. }
false;public;0;5;;@Override public void configure() throws Exception {     from("direct:start").to("aws-kinesis-firehose://mystream?amazonKinesisFirehoseClient=#FirehoseClient"). }
false;protected;0;9;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("aws-kinesis-firehose://mystream?amazonKinesisFirehoseClient=#FirehoseClient").         }     }. }
