commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Override public int hashCode() {     int result = identifier != null ? identifier.hashCode() : 0.     result = 31 * result + (recordType != null ? recordType.hashCode() : 0).     result = 31 * result + (headerDate != null ? headerDate.hashCode() : 0).     return result. }
false;public;1;11;;@Override public boolean equals(Object obj) {     if (obj == null) {         return false.     } else if (obj == this) {         return true.     } else {         Header record = (Header) obj.         return identifier.equals(record.getIdentifier()) && recordType.equals(record.getRecordType()).     } }
false;public;0;4;;@Override public String toString() {     return "TYPE[" + this.recordType + "], IDENTIFIER[" + this.identifier + "]". }
true;public;0;3;/**  * @return the identifier  */ ;/**  * @return the identifier  */ public String getIdentifier() {     return identifier. }
true;public;1;3;/**  * @param identifier the identifier to set  */ ;/**  * @param identifier the identifier to set  */ public void setIdentifier(String identifier) {     this.identifier = identifier. }
true;public;0;3;/**  * @return the headerDate  */ ;/**  * @return the headerDate  */ public Date getHeaderDate() {     return headerDate. }
true;public;1;3;/**  * @param headerDate the headerDate to set  */ ;/**  * @param headerDate the headerDate to set  */ public void setHeaderDate(Date headerDate) {     this.headerDate = headerDate. }
true;public;0;3;/**  * @return the recordType  */ ;/**  * @return the recordType  */ public String getRecordType() {     return recordType. }
true;public;1;3;/**  * @param recordType the recordType to set  */ ;/**  * @param recordType the recordType to set  */ public void setRecordType(String recordType) {     this.recordType = recordType. }
false;public;0;6;;@Override public Map<String, Object> getHeaders() {     Map<String, Object> headers = new HashMap<>().     headers.put(recordType + "Date", headerDate).     return headers. }
