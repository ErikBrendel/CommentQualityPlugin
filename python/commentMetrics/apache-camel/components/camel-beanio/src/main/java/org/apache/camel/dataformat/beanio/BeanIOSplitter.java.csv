commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;19;;protected StreamFactory createStreamFactory(CamelContext camelContext) throws Exception {     ObjectHelper.notNull(getStreamName(), "Stream name not configured.").     // Create the stream factory that will be used to read/write objects.     StreamFactory answer = StreamFactory.newInstance().     // Load the mapping file using the resource helper to ensure it can be loaded in OSGi and other environments     InputStream is = ResourceHelper.resolveMandatoryResourceAsInputStream(camelContext, getMapping()).     try {         if (getProperties() != null) {             answer.load(is, getProperties()).         } else {             answer.load(is).         }     } finally {         IOHelper.close(is).     }     return answer. }
false;public;1;28;;public Object evaluate(Exchange exchange) throws Exception {     Message msg = exchange.getIn().     Object body = msg.getBody().     if (factory == null) {         factory = createStreamFactory(exchange.getContext()).     }     BeanReader beanReader = null.     if (body instanceof WrappedFile) {         body = ((WrappedFile) body).getFile().     }     if (body instanceof File) {         File file = (File) body.         beanReader = factory.createReader(getStreamName(), file).     }     if (beanReader == null) {         Reader reader = msg.getMandatoryBody(Reader.class).         beanReader = factory.createReader(getStreamName(), reader).     }     BeanIOIterator iterator = new BeanIOIterator(beanReader).     BeanReaderErrorHandler errorHandler = getOrCreateBeanReaderErrorHandler(configuration, exchange, null, iterator).     beanReader.setErrorHandler(errorHandler).     return iterator. }
false;public;2;9;;@Override public <T> T evaluate(Exchange exchange, Class<T> type) {     try {         Object result = evaluate(exchange).         return exchange.getContext().getTypeConverter().convertTo(type, exchange, result).     } catch (Exception e) {         throw RuntimeCamelException.wrapRuntimeCamelException(e).     } }
false;public;0;3;;public BeanIOConfiguration getConfiguration() {     return configuration. }
false;public;1;3;;public void setConfiguration(BeanIOConfiguration configuration) {     this.configuration = configuration. }
false;public;0;3;;public StreamFactory getFactory() {     return factory. }
false;public;1;3;;public void setFactory(StreamFactory factory) {     this.factory = factory. }
false;public;0;3;;public String getMapping() {     return configuration.getMapping(). }
false;public;1;3;;public void setIgnoreUnexpectedRecords(boolean ignoreUnexpectedRecords) {     configuration.setIgnoreUnexpectedRecords(ignoreUnexpectedRecords). }
false;public;1;3;;public void setProperties(Properties properties) {     configuration.setProperties(properties). }
false;public;1;3;;public void setStreamName(String streamName) {     configuration.setStreamName(streamName). }
false;public;0;3;;public boolean isIgnoreUnidentifiedRecords() {     return configuration.isIgnoreUnidentifiedRecords(). }
false;public;0;3;;public boolean isIgnoreInvalidRecords() {     return configuration.isIgnoreInvalidRecords(). }
false;public;1;3;;public void setIgnoreInvalidRecords(boolean ignoreInvalidRecords) {     configuration.setIgnoreInvalidRecords(ignoreInvalidRecords). }
false;public;1;3;;public void setEncoding(Charset encoding) {     configuration.setEncoding(encoding). }
false;public;0;3;;public boolean isIgnoreUnexpectedRecords() {     return configuration.isIgnoreUnexpectedRecords(). }
false;public;0;3;;public Properties getProperties() {     return configuration.getProperties(). }
false;public;0;3;;public String getStreamName() {     return configuration.getStreamName(). }
false;public;1;3;;public void setMapping(String mapping) {     configuration.setMapping(mapping). }
false;public;1;3;;public void setIgnoreUnidentifiedRecords(boolean ignoreUnidentifiedRecords) {     configuration.setIgnoreUnidentifiedRecords(ignoreUnidentifiedRecords). }
false;public;0;3;;public Charset getEncoding() {     return configuration.getEncoding(). }
false;public;0;3;;public BeanReaderErrorHandler getBeanReaderErrorHandler() {     return configuration.getBeanReaderErrorHandler(). }
false;public;1;3;;public void setBeanReaderErrorHandler(BeanReaderErrorHandler beanReaderErrorHandler) {     configuration.setBeanReaderErrorHandler(beanReaderErrorHandler). }
false;public;0;3;;public String getBeanReaderErrorHandlerType() {     return configuration.getBeanReaderErrorHandlerType(). }
false;public;1;3;;public void setBeanReaderErrorHandlerType(String beanReaderErrorHandlerType) {     configuration.setBeanReaderErrorHandlerType(beanReaderErrorHandlerType). }
false;public;1;3;;public void setBeanReaderErrorHandlerType(Class<?> beanReaderErrorHandlerType) {     configuration.setBeanReaderErrorHandlerType(beanReaderErrorHandlerType). }
