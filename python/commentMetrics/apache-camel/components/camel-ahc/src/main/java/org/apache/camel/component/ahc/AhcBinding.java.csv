commented;modifiers;parameterAmount;loc;comment;code
true;;2;1;/**  * Prepares the AHC {@link Request} to be send.  *  * @param endpoint the endpoint  * @param exchange the exchange  * @return the request to send using the {@link com.ning.http.client.AsyncHttpClient}  * @throws Exception is thrown if error occurred preparing the request  */ ;/**  * Prepares the AHC {@link Request} to be send.  *  * @param endpoint the endpoint  * @param exchange the exchange  * @return the request to send using the {@link com.ning.http.client.AsyncHttpClient}  * @throws Exception is thrown if error occurred preparing the request  */ Request prepareRequest(AhcEndpoint endpoint, Exchange exchange) throws Exception.
true;;3;1;/**  * Callback from the {@link com.ning.http.client.AsyncHttpClient} when an exception occurred sending the request.  *  * @param endpoint the endpoint  * @param exchange the exchange  * @param t        the thrown exception  * @throws Exception is thrown if error occurred in the callback  */ ;/**  * Callback from the {@link com.ning.http.client.AsyncHttpClient} when an exception occurred sending the request.  *  * @param endpoint the endpoint  * @param exchange the exchange  * @param t        the thrown exception  * @throws Exception is thrown if error occurred in the callback  */ void onThrowable(AhcEndpoint endpoint, Exchange exchange, Throwable t) throws Exception.
true;;3;1;/**  * Callback from the {@link com.ning.http.client.AsyncHttpClient} when the HTTP response status was received  *  * @param endpoint       the endpoint  * @param exchange       the exchange  * @param responseStatus the HTTP response status  * @throws Exception is thrown if error occurred in the callback  */ ;/**  * Callback from the {@link com.ning.http.client.AsyncHttpClient} when the HTTP response status was received  *  * @param endpoint       the endpoint  * @param exchange       the exchange  * @param responseStatus the HTTP response status  * @throws Exception is thrown if error occurred in the callback  */ void onStatusReceived(AhcEndpoint endpoint, Exchange exchange, HttpResponseStatus responseStatus) throws Exception.
true;;3;1;/**  * Callback from the {@link com.ning.http.client.AsyncHttpClient} when the HTTP headers was received  *  * @param endpoint the endpoint  * @param exchange the exchange  * @param headers  the HTTP headers  * @throws Exception is thrown if error occurred in the callback  */ ;/**  * Callback from the {@link com.ning.http.client.AsyncHttpClient} when the HTTP headers was received  *  * @param endpoint the endpoint  * @param exchange the exchange  * @param headers  the HTTP headers  * @throws Exception is thrown if error occurred in the callback  */ void onHeadersReceived(AhcEndpoint endpoint, Exchange exchange, HttpHeaders headers) throws Exception.
true;;7;2;/**  * Callback from the {@link com.ning.http.client.AsyncHttpClient} when complete and all the response has been received.  *  * @param endpoint      the endpoint  * @param exchange      the exchange  * @param url           the url requested  * @param os            output stream with the HTTP response body  * @param contentLength length of the response body  * @param statusCode    the http response code  * @param statusText    the http status text  * @throws Exception is thrown if error occurred in the callback  */ ;/**  * Callback from the {@link com.ning.http.client.AsyncHttpClient} when complete and all the response has been received.  *  * @param endpoint      the endpoint  * @param exchange      the exchange  * @param url           the url requested  * @param os            output stream with the HTTP response body  * @param contentLength length of the response body  * @param statusCode    the http response code  * @param statusText    the http status text  * @throws Exception is thrown if error occurred in the callback  */ void onComplete(AhcEndpoint endpoint, Exchange exchange, String url, ByteArrayOutputStream os, int contentLength, int statusCode, String statusText) throws Exception.
