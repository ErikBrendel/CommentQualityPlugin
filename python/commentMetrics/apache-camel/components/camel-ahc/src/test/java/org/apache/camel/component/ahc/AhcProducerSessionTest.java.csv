commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Test public void testProducerNoSession() throws Exception {     getMockEndpoint("mock:result").expectedBodiesReceived("New New World", "New New World").     template.sendBody("direct:start", "World").     template.sendBody("direct:start", "World").     assertMockEndpointsSatisfied(). }
false;public;0;7;;@Test public void testProducerInstanceSession() throws Exception {     getMockEndpoint("mock:result").expectedBodiesReceived("Old New World", "Old Old World").     template.sendBody("direct:instance", "World").     template.sendBody("direct:instance", "World").     assertMockEndpointsSatisfied(). }
false;public;0;7;;@Test public void testProducerExchangeSession() throws Exception {     getMockEndpoint("mock:result").expectedBodiesReceived("Old New World", "Old New World").     template.sendBody("direct:exchange", "World").     template.sendBody("direct:exchange", "World").     assertMockEndpointsSatisfied(). }
false;protected;0;7;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry jndiRegistry = super.createRegistry().     jndiRegistry.bind("instanceCookieHandler", new InstanceCookieHandler()).     jndiRegistry.bind("exchangeCookieHandler", new ExchangeCookieHandler()).     return jndiRegistry. }
false;private;0;4;;private String getTestServerEndpointSessionUrl() {     // session handling will not work for localhost     return getProtocol() + "://127.0.0.1:" + getPort() + "/session". }
false;private;0;3;;private String getTestServerEndpointSessionUri() {     return "jetty:" + getTestServerEndpointSessionUrl() + "?sessionSupport=true". }
false;public;1;30;;@Override public void process(Exchange exchange) throws Exception {     HttpMessage message = exchange.getIn(HttpMessage.class).     Object cookiesObj = message.getHeader("Cookie").     HttpSession session = message.getRequest().getSession().     String body = message.getBody(String.class).     if ("bar".equals(session.getAttribute("foo"))) {         message.setBody("Old " + body).         /*                                  * If we are in a session we should also have a cookie header with two                                  * cookies. This test checks that the cookies are in one line.                                  * We can also get the cookies with request.getCookies() but this will                                  * always give us two cookies even if there are two cookie headers instead                                  * of one multi-value cookie header.                                  */         if (cookiesObj instanceof String && ((String) cookiesObj).contains("othercookie=value")) {             if (!((String) cookiesObj).contains("JSESSIONID=")) {                 log.error("JSESSIONID missing").                 throw new IllegalStateException("JSESSIONID missing").             }         } else {             log.error("othercookie=value is missing in cookie").             throw new IllegalStateException("othercookie=value is missing in cookie").         }     } else {         session.setAttribute("foo", "bar").         message.setBody("New " + body).     }     message.getResponse().addCookie(new Cookie("othercookie", "value")). }
false;public;0;51;;@Override public void configure() throws Exception {     from("direct:start").to("ahc:" + getTestServerEndpointSessionUrl()).to("ahc:" + getTestServerEndpointSessionUrl()).to("mock:result").     from("direct:instance").to("ahc:" + getTestServerEndpointSessionUrl() + "?cookieHandler=#instanceCookieHandler").to("ahc:" + getTestServerEndpointSessionUrl() + "?cookieHandler=#instanceCookieHandler").to("mock:result").     from("direct:exchange").to("ahc:" + getTestServerEndpointSessionUrl() + "?cookieHandler=#exchangeCookieHandler").to("ahc:" + getTestServerEndpointSessionUrl() + "?cookieHandler=#exchangeCookieHandler").to("mock:result").     from(getTestServerEndpointSessionUri()).process(new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             HttpMessage message = exchange.getIn(HttpMessage.class).             Object cookiesObj = message.getHeader("Cookie").             HttpSession session = message.getRequest().getSession().             String body = message.getBody(String.class).             if ("bar".equals(session.getAttribute("foo"))) {                 message.setBody("Old " + body).                 /*                                  * If we are in a session we should also have a cookie header with two                                  * cookies. This test checks that the cookies are in one line.                                  * We can also get the cookies with request.getCookies() but this will                                  * always give us two cookies even if there are two cookie headers instead                                  * of one multi-value cookie header.                                  */                 if (cookiesObj instanceof String && ((String) cookiesObj).contains("othercookie=value")) {                     if (!((String) cookiesObj).contains("JSESSIONID=")) {                         log.error("JSESSIONID missing").                         throw new IllegalStateException("JSESSIONID missing").                     }                 } else {                     log.error("othercookie=value is missing in cookie").                     throw new IllegalStateException("othercookie=value is missing in cookie").                 }             } else {                 session.setAttribute("foo", "bar").                 message.setBody("New " + body).             }             message.getResponse().addCookie(new Cookie("othercookie", "value")).         }     }). }
false;protected;0;56;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("ahc:" + getTestServerEndpointSessionUrl()).to("ahc:" + getTestServerEndpointSessionUrl()).to("mock:result").             from("direct:instance").to("ahc:" + getTestServerEndpointSessionUrl() + "?cookieHandler=#instanceCookieHandler").to("ahc:" + getTestServerEndpointSessionUrl() + "?cookieHandler=#instanceCookieHandler").to("mock:result").             from("direct:exchange").to("ahc:" + getTestServerEndpointSessionUrl() + "?cookieHandler=#exchangeCookieHandler").to("ahc:" + getTestServerEndpointSessionUrl() + "?cookieHandler=#exchangeCookieHandler").to("mock:result").             from(getTestServerEndpointSessionUri()).process(new Processor() {                  @Override                 public void process(Exchange exchange) throws Exception {                     HttpMessage message = exchange.getIn(HttpMessage.class).                     Object cookiesObj = message.getHeader("Cookie").                     HttpSession session = message.getRequest().getSession().                     String body = message.getBody(String.class).                     if ("bar".equals(session.getAttribute("foo"))) {                         message.setBody("Old " + body).                         /*                                  * If we are in a session we should also have a cookie header with two                                  * cookies. This test checks that the cookies are in one line.                                  * We can also get the cookies with request.getCookies() but this will                                  * always give us two cookies even if there are two cookie headers instead                                  * of one multi-value cookie header.                                  */                         if (cookiesObj instanceof String && ((String) cookiesObj).contains("othercookie=value")) {                             if (!((String) cookiesObj).contains("JSESSIONID=")) {                                 log.error("JSESSIONID missing").                                 throw new IllegalStateException("JSESSIONID missing").                             }                         } else {                             log.error("othercookie=value is missing in cookie").                             throw new IllegalStateException("othercookie=value is missing in cookie").                         }                     } else {                         session.setAttribute("foo", "bar").                         message.setBody("New " + body).                     }                     message.getResponse().addCookie(new Cookie("othercookie", "value")).                 }             }).         }     }. }
