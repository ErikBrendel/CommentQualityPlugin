# id;timestamp;commentText;codeText;commentWords;codeWords
JdbcEndpoint -> public void setPrepareStatementStrategy(JdbcPrepareStatementStrategy prepareStatementStrategy);1429015317;Allows to plugin to use a custom org.apache.camel.component.jdbc.JdbcPrepareStatementStrategy to control preparation of the query and prepared statement.;public void setPrepareStatementStrategy(JdbcPrepareStatementStrategy prepareStatementStrategy) {_        this.prepareStatementStrategy = prepareStatementStrategy__    };allows,to,plugin,to,use,a,custom,org,apache,camel,component,jdbc,jdbc,prepare,statement,strategy,to,control,preparation,of,the,query,and,prepared,statement;public,void,set,prepare,statement,strategy,jdbc,prepare,statement,strategy,prepare,statement,strategy,this,prepare,statement,strategy,prepare,statement,strategy
JdbcEndpoint -> public void setPrepareStatementStrategy(JdbcPrepareStatementStrategy prepareStatementStrategy);1432903710;Allows to plugin to use a custom org.apache.camel.component.jdbc.JdbcPrepareStatementStrategy to control preparation of the query and prepared statement.;public void setPrepareStatementStrategy(JdbcPrepareStatementStrategy prepareStatementStrategy) {_        this.prepareStatementStrategy = prepareStatementStrategy__    };allows,to,plugin,to,use,a,custom,org,apache,camel,component,jdbc,jdbc,prepare,statement,strategy,to,control,preparation,of,the,query,and,prepared,statement;public,void,set,prepare,statement,strategy,jdbc,prepare,statement,strategy,prepare,statement,strategy,this,prepare,statement,strategy,prepare,statement,strategy
JdbcEndpoint -> public void setPrepareStatementStrategy(JdbcPrepareStatementStrategy prepareStatementStrategy);1443508472;Allows to plugin to use a custom org.apache.camel.component.jdbc.JdbcPrepareStatementStrategy to control preparation of the query and prepared statement.;public void setPrepareStatementStrategy(JdbcPrepareStatementStrategy prepareStatementStrategy) {_        this.prepareStatementStrategy = prepareStatementStrategy__    };allows,to,plugin,to,use,a,custom,org,apache,camel,component,jdbc,jdbc,prepare,statement,strategy,to,control,preparation,of,the,query,and,prepared,statement;public,void,set,prepare,statement,strategy,jdbc,prepare,statement,strategy,prepare,statement,strategy,this,prepare,statement,strategy,prepare,statement,strategy
JdbcEndpoint -> public void setPrepareStatementStrategy(JdbcPrepareStatementStrategy prepareStatementStrategy);1451237126;Allows to plugin to use a custom org.apache.camel.component.jdbc.JdbcPrepareStatementStrategy to control preparation of the query and prepared statement.;public void setPrepareStatementStrategy(JdbcPrepareStatementStrategy prepareStatementStrategy) {_        this.prepareStatementStrategy = prepareStatementStrategy__    };allows,to,plugin,to,use,a,custom,org,apache,camel,component,jdbc,jdbc,prepare,statement,strategy,to,control,preparation,of,the,query,and,prepared,statement;public,void,set,prepare,statement,strategy,jdbc,prepare,statement,strategy,prepare,statement,strategy,this,prepare,statement,strategy,prepare,statement,strategy
JdbcEndpoint -> public void setPrepareStatementStrategy(JdbcPrepareStatementStrategy prepareStatementStrategy);1451910300;Allows to plugin to use a custom org.apache.camel.component.jdbc.JdbcPrepareStatementStrategy to control preparation of the query and prepared statement.;public void setPrepareStatementStrategy(JdbcPrepareStatementStrategy prepareStatementStrategy) {_        this.prepareStatementStrategy = prepareStatementStrategy__    };allows,to,plugin,to,use,a,custom,org,apache,camel,component,jdbc,jdbc,prepare,statement,strategy,to,control,preparation,of,the,query,and,prepared,statement;public,void,set,prepare,statement,strategy,jdbc,prepare,statement,strategy,prepare,statement,strategy,this,prepare,statement,strategy,prepare,statement,strategy
JdbcEndpoint -> public void setPrepareStatementStrategy(JdbcPrepareStatementStrategy prepareStatementStrategy);1482328198;Allows to plugin to use a custom org.apache.camel.component.jdbc.JdbcPrepareStatementStrategy to control preparation of the query and prepared statement.;public void setPrepareStatementStrategy(JdbcPrepareStatementStrategy prepareStatementStrategy) {_        this.prepareStatementStrategy = prepareStatementStrategy__    };allows,to,plugin,to,use,a,custom,org,apache,camel,component,jdbc,jdbc,prepare,statement,strategy,to,control,preparation,of,the,query,and,prepared,statement;public,void,set,prepare,statement,strategy,jdbc,prepare,statement,strategy,prepare,statement,strategy,this,prepare,statement,strategy,prepare,statement,strategy
JdbcEndpoint -> public void setPrepareStatementStrategy(JdbcPrepareStatementStrategy prepareStatementStrategy);1485968451;Allows to plugin to use a custom org.apache.camel.component.jdbc.JdbcPrepareStatementStrategy to control preparation of the query and prepared statement.;public void setPrepareStatementStrategy(JdbcPrepareStatementStrategy prepareStatementStrategy) {_        this.prepareStatementStrategy = prepareStatementStrategy__    };allows,to,plugin,to,use,a,custom,org,apache,camel,component,jdbc,jdbc,prepare,statement,strategy,to,control,preparation,of,the,query,and,prepared,statement;public,void,set,prepare,statement,strategy,jdbc,prepare,statement,strategy,prepare,statement,strategy,this,prepare,statement,strategy,prepare,statement,strategy
JdbcEndpoint -> public void setPrepareStatementStrategy(JdbcPrepareStatementStrategy prepareStatementStrategy);1518772634;Allows to plugin to use a custom org.apache.camel.component.jdbc.JdbcPrepareStatementStrategy to control preparation of the query and prepared statement.;public void setPrepareStatementStrategy(JdbcPrepareStatementStrategy prepareStatementStrategy) {_        this.prepareStatementStrategy = prepareStatementStrategy__    };allows,to,plugin,to,use,a,custom,org,apache,camel,component,jdbc,jdbc,prepare,statement,strategy,to,control,preparation,of,the,query,and,prepared,statement;public,void,set,prepare,statement,strategy,jdbc,prepare,statement,strategy,prepare,statement,strategy,this,prepare,statement,strategy,prepare,statement,strategy
JdbcEndpoint -> public void setPrepareStatementStrategy(JdbcPrepareStatementStrategy prepareStatementStrategy);1531383099;Allows to plugin to use a custom org.apache.camel.component.jdbc.JdbcPrepareStatementStrategy to control preparation of the query and prepared statement.;public void setPrepareStatementStrategy(JdbcPrepareStatementStrategy prepareStatementStrategy) {_        this.prepareStatementStrategy = prepareStatementStrategy__    };allows,to,plugin,to,use,a,custom,org,apache,camel,component,jdbc,jdbc,prepare,statement,strategy,to,control,preparation,of,the,query,and,prepared,statement;public,void,set,prepare,statement,strategy,jdbc,prepare,statement,strategy,prepare,statement,strategy,this,prepare,statement,strategy,prepare,statement,strategy
JdbcEndpoint -> public void setPrepareStatementStrategy(JdbcPrepareStatementStrategy prepareStatementStrategy);1540108163;Allows to plugin to use a custom org.apache.camel.component.jdbc.JdbcPrepareStatementStrategy to control preparation of the query and prepared statement.;public void setPrepareStatementStrategy(JdbcPrepareStatementStrategy prepareStatementStrategy) {_        this.prepareStatementStrategy = prepareStatementStrategy__    };allows,to,plugin,to,use,a,custom,org,apache,camel,component,jdbc,jdbc,prepare,statement,strategy,to,control,preparation,of,the,query,and,prepared,statement;public,void,set,prepare,statement,strategy,jdbc,prepare,statement,strategy,prepare,statement,strategy,this,prepare,statement,strategy,prepare,statement,strategy
JdbcEndpoint -> public void setPrepareStatementStrategy(JdbcPrepareStatementStrategy prepareStatementStrategy);1547240981;Allows to plugin to use a custom org.apache.camel.component.jdbc.JdbcPrepareStatementStrategy to control preparation of the query and prepared statement.;public void setPrepareStatementStrategy(JdbcPrepareStatementStrategy prepareStatementStrategy) {_        this.prepareStatementStrategy = prepareStatementStrategy__    };allows,to,plugin,to,use,a,custom,org,apache,camel,component,jdbc,jdbc,prepare,statement,strategy,to,control,preparation,of,the,query,and,prepared,statement;public,void,set,prepare,statement,strategy,jdbc,prepare,statement,strategy,prepare,statement,strategy,this,prepare,statement,strategy,prepare,statement,strategy
JdbcEndpoint -> public void setPrepareStatementStrategy(JdbcPrepareStatementStrategy prepareStatementStrategy);1548055099;Allows to plugin to use a custom org.apache.camel.component.jdbc.JdbcPrepareStatementStrategy to control preparation of the query and prepared statement.;public void setPrepareStatementStrategy(JdbcPrepareStatementStrategy prepareStatementStrategy) {_        this.prepareStatementStrategy = prepareStatementStrategy__    };allows,to,plugin,to,use,a,custom,org,apache,camel,component,jdbc,jdbc,prepare,statement,strategy,to,control,preparation,of,the,query,and,prepared,statement;public,void,set,prepare,statement,strategy,jdbc,prepare,statement,strategy,prepare,statement,strategy,this,prepare,statement,strategy,prepare,statement,strategy
JdbcEndpoint -> public void setUseGetBytesForBlob(boolean useGetBytesForBlob);1443508472;To read BLOB columns as bytes instead of string data._<p/>_This may be needed for certain databases such as Oracle where you must read BLOB columns as bytes.;public void setUseGetBytesForBlob(boolean useGetBytesForBlob) {_        this.useGetBytesForBlob = useGetBytesForBlob__    };to,read,blob,columns,as,bytes,instead,of,string,data,p,this,may,be,needed,for,certain,databases,such,as,oracle,where,you,must,read,blob,columns,as,bytes;public,void,set,use,get,bytes,for,blob,boolean,use,get,bytes,for,blob,this,use,get,bytes,for,blob,use,get,bytes,for,blob
JdbcEndpoint -> public void setUseGetBytesForBlob(boolean useGetBytesForBlob);1451237126;To read BLOB columns as bytes instead of string data._<p/>_This may be needed for certain databases such as Oracle where you must read BLOB columns as bytes.;public void setUseGetBytesForBlob(boolean useGetBytesForBlob) {_        this.useGetBytesForBlob = useGetBytesForBlob__    };to,read,blob,columns,as,bytes,instead,of,string,data,p,this,may,be,needed,for,certain,databases,such,as,oracle,where,you,must,read,blob,columns,as,bytes;public,void,set,use,get,bytes,for,blob,boolean,use,get,bytes,for,blob,this,use,get,bytes,for,blob,use,get,bytes,for,blob
JdbcEndpoint -> public void setUseGetBytesForBlob(boolean useGetBytesForBlob);1451910300;To read BLOB columns as bytes instead of string data._<p/>_This may be needed for certain databases such as Oracle where you must read BLOB columns as bytes.;public void setUseGetBytesForBlob(boolean useGetBytesForBlob) {_        this.useGetBytesForBlob = useGetBytesForBlob__    };to,read,blob,columns,as,bytes,instead,of,string,data,p,this,may,be,needed,for,certain,databases,such,as,oracle,where,you,must,read,blob,columns,as,bytes;public,void,set,use,get,bytes,for,blob,boolean,use,get,bytes,for,blob,this,use,get,bytes,for,blob,use,get,bytes,for,blob
JdbcEndpoint -> public void setUseGetBytesForBlob(boolean useGetBytesForBlob);1482328198;To read BLOB columns as bytes instead of string data._<p/>_This may be needed for certain databases such as Oracle where you must read BLOB columns as bytes.;public void setUseGetBytesForBlob(boolean useGetBytesForBlob) {_        this.useGetBytesForBlob = useGetBytesForBlob__    };to,read,blob,columns,as,bytes,instead,of,string,data,p,this,may,be,needed,for,certain,databases,such,as,oracle,where,you,must,read,blob,columns,as,bytes;public,void,set,use,get,bytes,for,blob,boolean,use,get,bytes,for,blob,this,use,get,bytes,for,blob,use,get,bytes,for,blob
JdbcEndpoint -> public void setUseGetBytesForBlob(boolean useGetBytesForBlob);1485968451;To read BLOB columns as bytes instead of string data._<p/>_This may be needed for certain databases such as Oracle where you must read BLOB columns as bytes.;public void setUseGetBytesForBlob(boolean useGetBytesForBlob) {_        this.useGetBytesForBlob = useGetBytesForBlob__    };to,read,blob,columns,as,bytes,instead,of,string,data,p,this,may,be,needed,for,certain,databases,such,as,oracle,where,you,must,read,blob,columns,as,bytes;public,void,set,use,get,bytes,for,blob,boolean,use,get,bytes,for,blob,this,use,get,bytes,for,blob,use,get,bytes,for,blob
JdbcEndpoint -> public void setUseGetBytesForBlob(boolean useGetBytesForBlob);1518772634;To read BLOB columns as bytes instead of string data._<p/>_This may be needed for certain databases such as Oracle where you must read BLOB columns as bytes.;public void setUseGetBytesForBlob(boolean useGetBytesForBlob) {_        this.useGetBytesForBlob = useGetBytesForBlob__    };to,read,blob,columns,as,bytes,instead,of,string,data,p,this,may,be,needed,for,certain,databases,such,as,oracle,where,you,must,read,blob,columns,as,bytes;public,void,set,use,get,bytes,for,blob,boolean,use,get,bytes,for,blob,this,use,get,bytes,for,blob,use,get,bytes,for,blob
JdbcEndpoint -> public void setUseGetBytesForBlob(boolean useGetBytesForBlob);1531383099;To read BLOB columns as bytes instead of string data._<p/>_This may be needed for certain databases such as Oracle where you must read BLOB columns as bytes.;public void setUseGetBytesForBlob(boolean useGetBytesForBlob) {_        this.useGetBytesForBlob = useGetBytesForBlob__    };to,read,blob,columns,as,bytes,instead,of,string,data,p,this,may,be,needed,for,certain,databases,such,as,oracle,where,you,must,read,blob,columns,as,bytes;public,void,set,use,get,bytes,for,blob,boolean,use,get,bytes,for,blob,this,use,get,bytes,for,blob,use,get,bytes,for,blob
JdbcEndpoint -> public void setUseGetBytesForBlob(boolean useGetBytesForBlob);1540108163;To read BLOB columns as bytes instead of string data._<p/>_This may be needed for certain databases such as Oracle where you must read BLOB columns as bytes.;public void setUseGetBytesForBlob(boolean useGetBytesForBlob) {_        this.useGetBytesForBlob = useGetBytesForBlob__    };to,read,blob,columns,as,bytes,instead,of,string,data,p,this,may,be,needed,for,certain,databases,such,as,oracle,where,you,must,read,blob,columns,as,bytes;public,void,set,use,get,bytes,for,blob,boolean,use,get,bytes,for,blob,this,use,get,bytes,for,blob,use,get,bytes,for,blob
JdbcEndpoint -> public void setUseGetBytesForBlob(boolean useGetBytesForBlob);1547240981;To read BLOB columns as bytes instead of string data._<p/>_This may be needed for certain databases such as Oracle where you must read BLOB columns as bytes.;public void setUseGetBytesForBlob(boolean useGetBytesForBlob) {_        this.useGetBytesForBlob = useGetBytesForBlob__    };to,read,blob,columns,as,bytes,instead,of,string,data,p,this,may,be,needed,for,certain,databases,such,as,oracle,where,you,must,read,blob,columns,as,bytes;public,void,set,use,get,bytes,for,blob,boolean,use,get,bytes,for,blob,this,use,get,bytes,for,blob,use,get,bytes,for,blob
JdbcEndpoint -> public void setUseGetBytesForBlob(boolean useGetBytesForBlob);1548055099;To read BLOB columns as bytes instead of string data._<p/>_This may be needed for certain databases such as Oracle where you must read BLOB columns as bytes.;public void setUseGetBytesForBlob(boolean useGetBytesForBlob) {_        this.useGetBytesForBlob = useGetBytesForBlob__    };to,read,blob,columns,as,bytes,instead,of,string,data,p,this,may,be,needed,for,certain,databases,such,as,oracle,where,you,must,read,blob,columns,as,bytes;public,void,set,use,get,bytes,for,blob,boolean,use,get,bytes,for,blob,this,use,get,bytes,for,blob,use,get,bytes,for,blob
JdbcEndpoint -> public void setReadSize(int readSize);1429015317;The default maximum number of rows that can be read by a polling query. The default value is 0.;public void setReadSize(int readSize) {_        this.readSize = readSize__    };the,default,maximum,number,of,rows,that,can,be,read,by,a,polling,query,the,default,value,is,0;public,void,set,read,size,int,read,size,this,read,size,read,size
JdbcEndpoint -> public void setReadSize(int readSize);1432903710;The default maximum number of rows that can be read by a polling query. The default value is 0.;public void setReadSize(int readSize) {_        this.readSize = readSize__    };the,default,maximum,number,of,rows,that,can,be,read,by,a,polling,query,the,default,value,is,0;public,void,set,read,size,int,read,size,this,read,size,read,size
JdbcEndpoint -> public void setReadSize(int readSize);1443508472;The default maximum number of rows that can be read by a polling query. The default value is 0.;public void setReadSize(int readSize) {_        this.readSize = readSize__    };the,default,maximum,number,of,rows,that,can,be,read,by,a,polling,query,the,default,value,is,0;public,void,set,read,size,int,read,size,this,read,size,read,size
JdbcEndpoint -> public void setReadSize(int readSize);1451237126;The default maximum number of rows that can be read by a polling query. The default value is 0.;public void setReadSize(int readSize) {_        this.readSize = readSize__    };the,default,maximum,number,of,rows,that,can,be,read,by,a,polling,query,the,default,value,is,0;public,void,set,read,size,int,read,size,this,read,size,read,size
JdbcEndpoint -> public void setReadSize(int readSize);1451910300;The default maximum number of rows that can be read by a polling query. The default value is 0.;public void setReadSize(int readSize) {_        this.readSize = readSize__    };the,default,maximum,number,of,rows,that,can,be,read,by,a,polling,query,the,default,value,is,0;public,void,set,read,size,int,read,size,this,read,size,read,size
JdbcEndpoint -> public void setReadSize(int readSize);1482328198;The default maximum number of rows that can be read by a polling query. The default value is 0.;public void setReadSize(int readSize) {_        this.readSize = readSize__    };the,default,maximum,number,of,rows,that,can,be,read,by,a,polling,query,the,default,value,is,0;public,void,set,read,size,int,read,size,this,read,size,read,size
JdbcEndpoint -> public void setReadSize(int readSize);1485968451;The default maximum number of rows that can be read by a polling query. The default value is 0.;public void setReadSize(int readSize) {_        this.readSize = readSize__    };the,default,maximum,number,of,rows,that,can,be,read,by,a,polling,query,the,default,value,is,0;public,void,set,read,size,int,read,size,this,read,size,read,size
JdbcEndpoint -> public void setReadSize(int readSize);1518772634;The default maximum number of rows that can be read by a polling query. The default value is 0.;public void setReadSize(int readSize) {_        this.readSize = readSize__    };the,default,maximum,number,of,rows,that,can,be,read,by,a,polling,query,the,default,value,is,0;public,void,set,read,size,int,read,size,this,read,size,read,size
JdbcEndpoint -> public void setReadSize(int readSize);1531383099;The default maximum number of rows that can be read by a polling query. The default value is 0.;public void setReadSize(int readSize) {_        this.readSize = readSize__    };the,default,maximum,number,of,rows,that,can,be,read,by,a,polling,query,the,default,value,is,0;public,void,set,read,size,int,read,size,this,read,size,read,size
JdbcEndpoint -> public void setReadSize(int readSize);1540108163;The default maximum number of rows that can be read by a polling query. The default value is 0.;public void setReadSize(int readSize) {_        this.readSize = readSize__    };the,default,maximum,number,of,rows,that,can,be,read,by,a,polling,query,the,default,value,is,0;public,void,set,read,size,int,read,size,this,read,size,read,size
JdbcEndpoint -> public void setReadSize(int readSize);1547240981;The default maximum number of rows that can be read by a polling query. The default value is 0.;public void setReadSize(int readSize) {_        this.readSize = readSize__    };the,default,maximum,number,of,rows,that,can,be,read,by,a,polling,query,the,default,value,is,0;public,void,set,read,size,int,read,size,this,read,size,read,size
JdbcEndpoint -> public void setReadSize(int readSize);1548055099;The default maximum number of rows that can be read by a polling query. The default value is 0.;public void setReadSize(int readSize) {_        this.readSize = readSize__    };the,default,maximum,number,of,rows,that,can,be,read,by,a,polling,query,the,default,value,is,0;public,void,set,read,size,int,read,size,this,read,size,read,size
JdbcEndpoint -> public void setDataSource(DataSource dataSource);1416823940;The data source to use;public void setDataSource(DataSource dataSource) {_        this.dataSource = dataSource__    };the,data,source,to,use;public,void,set,data,source,data,source,data,source,this,data,source,data,source
JdbcEndpoint -> public void setDataSource(DataSource dataSource);1423750790;The data source to use;public void setDataSource(DataSource dataSource) {_        this.dataSource = dataSource__    };the,data,source,to,use;public,void,set,data,source,data,source,data,source,this,data,source,data,source
JdbcEndpoint -> public void setDataSource(DataSource dataSource);1425142361;The data source to use;public void setDataSource(DataSource dataSource) {_        this.dataSource = dataSource__    };the,data,source,to,use;public,void,set,data,source,data,source,data,source,this,data,source,data,source
JdbcEndpoint -> public void setDataSource(DataSource dataSource);1425581084;The data source to use;public void setDataSource(DataSource dataSource) {_        this.dataSource = dataSource__    };the,data,source,to,use;public,void,set,data,source,data,source,data,source,this,data,source,data,source
JdbcEndpoint -> public void setDataSource(DataSource dataSource);1427402378;The data source to use;public void setDataSource(DataSource dataSource) {_        this.dataSource = dataSource__    };the,data,source,to,use;public,void,set,data,source,data,source,data,source,this,data,source,data,source
JdbcEndpoint -> public void setDataSource(DataSource dataSource);1427880501;The data source to use;public void setDataSource(DataSource dataSource) {_        this.dataSource = dataSource__    };the,data,source,to,use;public,void,set,data,source,data,source,data,source,this,data,source,data,source
JdbcEndpoint -> public void setDataSource(DataSource dataSource);1429015317;The data source to use;public void setDataSource(DataSource dataSource) {_        this.dataSource = dataSource__    };the,data,source,to,use;public,void,set,data,source,data,source,data,source,this,data,source,data,source
JdbcEndpoint -> public void setDataSource(DataSource dataSource);1432903710;The data source to use;public void setDataSource(DataSource dataSource) {_        this.dataSource = dataSource__    };the,data,source,to,use;public,void,set,data,source,data,source,data,source,this,data,source,data,source
JdbcEndpoint -> public void setDataSource(DataSource dataSource);1443508472;The data source to use;public void setDataSource(DataSource dataSource) {_        this.dataSource = dataSource__    };the,data,source,to,use;public,void,set,data,source,data,source,data,source,this,data,source,data,source
JdbcEndpoint -> public void setDataSource(DataSource dataSource);1451237126;The data source to use;public void setDataSource(DataSource dataSource) {_        this.dataSource = dataSource__    };the,data,source,to,use;public,void,set,data,source,data,source,data,source,this,data,source,data,source
JdbcEndpoint -> public void setDataSource(DataSource dataSource);1451910300;The data source to use;public void setDataSource(DataSource dataSource) {_        this.dataSource = dataSource__    };the,data,source,to,use;public,void,set,data,source,data,source,data,source,this,data,source,data,source
JdbcEndpoint -> public void setDataSource(DataSource dataSource);1482328198;The data source to use;public void setDataSource(DataSource dataSource) {_        this.dataSource = dataSource__    };the,data,source,to,use;public,void,set,data,source,data,source,data,source,this,data,source,data,source
JdbcEndpoint -> public void setDataSource(DataSource dataSource);1485968451;The data source to use;public void setDataSource(DataSource dataSource) {_        this.dataSource = dataSource__    };the,data,source,to,use;public,void,set,data,source,data,source,data,source,this,data,source,data,source
JdbcEndpoint -> public void setDataSource(DataSource dataSource);1518772634;The data source to use;public void setDataSource(DataSource dataSource) {_        this.dataSource = dataSource__    };the,data,source,to,use;public,void,set,data,source,data,source,data,source,this,data,source,data,source
JdbcEndpoint -> public void setDataSource(DataSource dataSource);1531383099;The data source to use;public void setDataSource(DataSource dataSource) {_        this.dataSource = dataSource__    };the,data,source,to,use;public,void,set,data,source,data,source,data,source,this,data,source,data,source
JdbcEndpoint -> public void setDataSource(DataSource dataSource);1540108163;The data source to use;public void setDataSource(DataSource dataSource) {_        this.dataSource = dataSource__    };the,data,source,to,use;public,void,set,data,source,data,source,data,source,this,data,source,data,source
JdbcEndpoint -> public void setDataSource(DataSource dataSource);1547240981;The data source to use;public void setDataSource(DataSource dataSource) {_        this.dataSource = dataSource__    };the,data,source,to,use;public,void,set,data,source,data,source,data,source,this,data,source,data,source
JdbcEndpoint -> public void setDataSource(DataSource dataSource);1548055099;The data source to use;public void setDataSource(DataSource dataSource) {_        this.dataSource = dataSource__    };the,data,source,to,use;public,void,set,data,source,data,source,data,source,this,data,source,data,source
JdbcEndpoint -> public void setAllowNamedParameters(boolean allowNamedParameters);1429015317;Whether to allow using named parameters in the queries.;public void setAllowNamedParameters(boolean allowNamedParameters) {_        this.allowNamedParameters = allowNamedParameters__    };whether,to,allow,using,named,parameters,in,the,queries;public,void,set,allow,named,parameters,boolean,allow,named,parameters,this,allow,named,parameters,allow,named,parameters
JdbcEndpoint -> public void setAllowNamedParameters(boolean allowNamedParameters);1432903710;Whether to allow using named parameters in the queries.;public void setAllowNamedParameters(boolean allowNamedParameters) {_        this.allowNamedParameters = allowNamedParameters__    };whether,to,allow,using,named,parameters,in,the,queries;public,void,set,allow,named,parameters,boolean,allow,named,parameters,this,allow,named,parameters,allow,named,parameters
JdbcEndpoint -> public void setAllowNamedParameters(boolean allowNamedParameters);1443508472;Whether to allow using named parameters in the queries.;public void setAllowNamedParameters(boolean allowNamedParameters) {_        this.allowNamedParameters = allowNamedParameters__    };whether,to,allow,using,named,parameters,in,the,queries;public,void,set,allow,named,parameters,boolean,allow,named,parameters,this,allow,named,parameters,allow,named,parameters
JdbcEndpoint -> public void setAllowNamedParameters(boolean allowNamedParameters);1451237126;Whether to allow using named parameters in the queries.;public void setAllowNamedParameters(boolean allowNamedParameters) {_        this.allowNamedParameters = allowNamedParameters__    };whether,to,allow,using,named,parameters,in,the,queries;public,void,set,allow,named,parameters,boolean,allow,named,parameters,this,allow,named,parameters,allow,named,parameters
JdbcEndpoint -> public void setAllowNamedParameters(boolean allowNamedParameters);1451910300;Whether to allow using named parameters in the queries.;public void setAllowNamedParameters(boolean allowNamedParameters) {_        this.allowNamedParameters = allowNamedParameters__    };whether,to,allow,using,named,parameters,in,the,queries;public,void,set,allow,named,parameters,boolean,allow,named,parameters,this,allow,named,parameters,allow,named,parameters
JdbcEndpoint -> public void setAllowNamedParameters(boolean allowNamedParameters);1482328198;Whether to allow using named parameters in the queries.;public void setAllowNamedParameters(boolean allowNamedParameters) {_        this.allowNamedParameters = allowNamedParameters__    };whether,to,allow,using,named,parameters,in,the,queries;public,void,set,allow,named,parameters,boolean,allow,named,parameters,this,allow,named,parameters,allow,named,parameters
JdbcEndpoint -> public void setAllowNamedParameters(boolean allowNamedParameters);1485968451;Whether to allow using named parameters in the queries.;public void setAllowNamedParameters(boolean allowNamedParameters) {_        this.allowNamedParameters = allowNamedParameters__    };whether,to,allow,using,named,parameters,in,the,queries;public,void,set,allow,named,parameters,boolean,allow,named,parameters,this,allow,named,parameters,allow,named,parameters
JdbcEndpoint -> public void setAllowNamedParameters(boolean allowNamedParameters);1518772634;Whether to allow using named parameters in the queries.;public void setAllowNamedParameters(boolean allowNamedParameters) {_        this.allowNamedParameters = allowNamedParameters__    };whether,to,allow,using,named,parameters,in,the,queries;public,void,set,allow,named,parameters,boolean,allow,named,parameters,this,allow,named,parameters,allow,named,parameters
JdbcEndpoint -> public void setAllowNamedParameters(boolean allowNamedParameters);1531383099;Whether to allow using named parameters in the queries.;public void setAllowNamedParameters(boolean allowNamedParameters) {_        this.allowNamedParameters = allowNamedParameters__    };whether,to,allow,using,named,parameters,in,the,queries;public,void,set,allow,named,parameters,boolean,allow,named,parameters,this,allow,named,parameters,allow,named,parameters
JdbcEndpoint -> public void setAllowNamedParameters(boolean allowNamedParameters);1540108163;Whether to allow using named parameters in the queries.;public void setAllowNamedParameters(boolean allowNamedParameters) {_        this.allowNamedParameters = allowNamedParameters__    };whether,to,allow,using,named,parameters,in,the,queries;public,void,set,allow,named,parameters,boolean,allow,named,parameters,this,allow,named,parameters,allow,named,parameters
JdbcEndpoint -> public void setAllowNamedParameters(boolean allowNamedParameters);1547240981;Whether to allow using named parameters in the queries.;public void setAllowNamedParameters(boolean allowNamedParameters) {_        this.allowNamedParameters = allowNamedParameters__    };whether,to,allow,using,named,parameters,in,the,queries;public,void,set,allow,named,parameters,boolean,allow,named,parameters,this,allow,named,parameters,allow,named,parameters
JdbcEndpoint -> public void setAllowNamedParameters(boolean allowNamedParameters);1548055099;Whether to allow using named parameters in the queries.;public void setAllowNamedParameters(boolean allowNamedParameters) {_        this.allowNamedParameters = allowNamedParameters__    };whether,to,allow,using,named,parameters,in,the,queries;public,void,set,allow,named,parameters,boolean,allow,named,parameters,this,allow,named,parameters,allow,named,parameters
JdbcEndpoint -> public void setTransacted(boolean transacted);1429015317;Whether transactions are in use.;public void setTransacted(boolean transacted) {_        this.transacted = transacted__    };whether,transactions,are,in,use;public,void,set,transacted,boolean,transacted,this,transacted,transacted
JdbcEndpoint -> public void setTransacted(boolean transacted);1432903710;Whether transactions are in use.;public void setTransacted(boolean transacted) {_        this.transacted = transacted__    };whether,transactions,are,in,use;public,void,set,transacted,boolean,transacted,this,transacted,transacted
JdbcEndpoint -> public void setTransacted(boolean transacted);1443508472;Whether transactions are in use.;public void setTransacted(boolean transacted) {_        this.transacted = transacted__    };whether,transactions,are,in,use;public,void,set,transacted,boolean,transacted,this,transacted,transacted
JdbcEndpoint -> public void setTransacted(boolean transacted);1451237126;Whether transactions are in use.;public void setTransacted(boolean transacted) {_        this.transacted = transacted__    };whether,transactions,are,in,use;public,void,set,transacted,boolean,transacted,this,transacted,transacted
JdbcEndpoint -> public void setTransacted(boolean transacted);1451910300;Whether transactions are in use.;public void setTransacted(boolean transacted) {_        this.transacted = transacted__    };whether,transactions,are,in,use;public,void,set,transacted,boolean,transacted,this,transacted,transacted
JdbcEndpoint -> public void setTransacted(boolean transacted);1482328198;Whether transactions are in use.;public void setTransacted(boolean transacted) {_        this.transacted = transacted__    };whether,transactions,are,in,use;public,void,set,transacted,boolean,transacted,this,transacted,transacted
JdbcEndpoint -> public void setTransacted(boolean transacted);1485968451;Whether transactions are in use.;public void setTransacted(boolean transacted) {_        this.transacted = transacted__    };whether,transactions,are,in,use;public,void,set,transacted,boolean,transacted,this,transacted,transacted
JdbcEndpoint -> public void setTransacted(boolean transacted);1518772634;Whether transactions are in use.;public void setTransacted(boolean transacted) {_        this.transacted = transacted__    };whether,transactions,are,in,use;public,void,set,transacted,boolean,transacted,this,transacted,transacted
JdbcEndpoint -> public void setTransacted(boolean transacted);1531383099;Whether transactions are in use.;public void setTransacted(boolean transacted) {_        this.transacted = transacted__    };whether,transactions,are,in,use;public,void,set,transacted,boolean,transacted,this,transacted,transacted
JdbcEndpoint -> public void setTransacted(boolean transacted);1540108163;Whether transactions are in use.;public void setTransacted(boolean transacted) {_        this.transacted = transacted__    };whether,transactions,are,in,use;public,void,set,transacted,boolean,transacted,this,transacted,transacted
JdbcEndpoint -> public void setTransacted(boolean transacted);1547240981;Whether transactions are in use.;public void setTransacted(boolean transacted) {_        this.transacted = transacted__    };whether,transactions,are,in,use;public,void,set,transacted,boolean,transacted,this,transacted,transacted
JdbcEndpoint -> public void setTransacted(boolean transacted);1548055099;Whether transactions are in use.;public void setTransacted(boolean transacted) {_        this.transacted = transacted__    };whether,transactions,are,in,use;public,void,set,transacted,boolean,transacted,this,transacted,transacted
JdbcEndpoint -> public void setResetAutoCommit(boolean resetAutoCommit);1429015317;Camel will set the autoCommit on the JDBC connection to be false, commit the change after executed the statement and reset_the autoCommit flag of the connection at the end, if the resetAutoCommit is true. If the JDBC connection doesn't support_to reset the autoCommit flag, you can set the resetAutoCommit flag to be false, and Camel will not try to reset the autoCommit flag._When used with XA transactions you most likely need to set it to false so that the transaction manager is in charge of committing this tx.;public void setResetAutoCommit(boolean resetAutoCommit) {_        this.resetAutoCommit = resetAutoCommit__    };camel,will,set,the,auto,commit,on,the,jdbc,connection,to,be,false,commit,the,change,after,executed,the,statement,and,reset,the,auto,commit,flag,of,the,connection,at,the,end,if,the,reset,auto,commit,is,true,if,the,jdbc,connection,doesn,t,support,to,reset,the,auto,commit,flag,you,can,set,the,reset,auto,commit,flag,to,be,false,and,camel,will,not,try,to,reset,the,auto,commit,flag,when,used,with,xa,transactions,you,most,likely,need,to,set,it,to,false,so,that,the,transaction,manager,is,in,charge,of,committing,this,tx;public,void,set,reset,auto,commit,boolean,reset,auto,commit,this,reset,auto,commit,reset,auto,commit
JdbcEndpoint -> public void setResetAutoCommit(boolean resetAutoCommit);1432903710;Camel will set the autoCommit on the JDBC connection to be false, commit the change after executed the statement and reset_the autoCommit flag of the connection at the end, if the resetAutoCommit is true. If the JDBC connection doesn't support_to reset the autoCommit flag, you can set the resetAutoCommit flag to be false, and Camel will not try to reset the autoCommit flag._When used with XA transactions you most likely need to set it to false so that the transaction manager is in charge of committing this tx.;public void setResetAutoCommit(boolean resetAutoCommit) {_        this.resetAutoCommit = resetAutoCommit__    };camel,will,set,the,auto,commit,on,the,jdbc,connection,to,be,false,commit,the,change,after,executed,the,statement,and,reset,the,auto,commit,flag,of,the,connection,at,the,end,if,the,reset,auto,commit,is,true,if,the,jdbc,connection,doesn,t,support,to,reset,the,auto,commit,flag,you,can,set,the,reset,auto,commit,flag,to,be,false,and,camel,will,not,try,to,reset,the,auto,commit,flag,when,used,with,xa,transactions,you,most,likely,need,to,set,it,to,false,so,that,the,transaction,manager,is,in,charge,of,committing,this,tx;public,void,set,reset,auto,commit,boolean,reset,auto,commit,this,reset,auto,commit,reset,auto,commit
JdbcEndpoint -> public void setResetAutoCommit(boolean resetAutoCommit);1443508472;Camel will set the autoCommit on the JDBC connection to be false, commit the change after executed the statement and reset_the autoCommit flag of the connection at the end, if the resetAutoCommit is true. If the JDBC connection doesn't support_to reset the autoCommit flag, you can set the resetAutoCommit flag to be false, and Camel will not try to reset the autoCommit flag._When used with XA transactions you most likely need to set it to false so that the transaction manager is in charge of committing this tx.;public void setResetAutoCommit(boolean resetAutoCommit) {_        this.resetAutoCommit = resetAutoCommit__    };camel,will,set,the,auto,commit,on,the,jdbc,connection,to,be,false,commit,the,change,after,executed,the,statement,and,reset,the,auto,commit,flag,of,the,connection,at,the,end,if,the,reset,auto,commit,is,true,if,the,jdbc,connection,doesn,t,support,to,reset,the,auto,commit,flag,you,can,set,the,reset,auto,commit,flag,to,be,false,and,camel,will,not,try,to,reset,the,auto,commit,flag,when,used,with,xa,transactions,you,most,likely,need,to,set,it,to,false,so,that,the,transaction,manager,is,in,charge,of,committing,this,tx;public,void,set,reset,auto,commit,boolean,reset,auto,commit,this,reset,auto,commit,reset,auto,commit
JdbcEndpoint -> public void setResetAutoCommit(boolean resetAutoCommit);1451237126;Camel will set the autoCommit on the JDBC connection to be false, commit the change after executed the statement and reset_the autoCommit flag of the connection at the end, if the resetAutoCommit is true. If the JDBC connection doesn't support_to reset the autoCommit flag, you can set the resetAutoCommit flag to be false, and Camel will not try to reset the autoCommit flag._When used with XA transactions you most likely need to set it to false so that the transaction manager is in charge of committing this tx.;public void setResetAutoCommit(boolean resetAutoCommit) {_        this.resetAutoCommit = resetAutoCommit__    };camel,will,set,the,auto,commit,on,the,jdbc,connection,to,be,false,commit,the,change,after,executed,the,statement,and,reset,the,auto,commit,flag,of,the,connection,at,the,end,if,the,reset,auto,commit,is,true,if,the,jdbc,connection,doesn,t,support,to,reset,the,auto,commit,flag,you,can,set,the,reset,auto,commit,flag,to,be,false,and,camel,will,not,try,to,reset,the,auto,commit,flag,when,used,with,xa,transactions,you,most,likely,need,to,set,it,to,false,so,that,the,transaction,manager,is,in,charge,of,committing,this,tx;public,void,set,reset,auto,commit,boolean,reset,auto,commit,this,reset,auto,commit,reset,auto,commit
JdbcEndpoint -> public void setResetAutoCommit(boolean resetAutoCommit);1451910300;Camel will set the autoCommit on the JDBC connection to be false, commit the change after executed the statement and reset_the autoCommit flag of the connection at the end, if the resetAutoCommit is true. If the JDBC connection doesn't support_to reset the autoCommit flag, you can set the resetAutoCommit flag to be false, and Camel will not try to reset the autoCommit flag._When used with XA transactions you most likely need to set it to false so that the transaction manager is in charge of committing this tx.;public void setResetAutoCommit(boolean resetAutoCommit) {_        this.resetAutoCommit = resetAutoCommit__    };camel,will,set,the,auto,commit,on,the,jdbc,connection,to,be,false,commit,the,change,after,executed,the,statement,and,reset,the,auto,commit,flag,of,the,connection,at,the,end,if,the,reset,auto,commit,is,true,if,the,jdbc,connection,doesn,t,support,to,reset,the,auto,commit,flag,you,can,set,the,reset,auto,commit,flag,to,be,false,and,camel,will,not,try,to,reset,the,auto,commit,flag,when,used,with,xa,transactions,you,most,likely,need,to,set,it,to,false,so,that,the,transaction,manager,is,in,charge,of,committing,this,tx;public,void,set,reset,auto,commit,boolean,reset,auto,commit,this,reset,auto,commit,reset,auto,commit
JdbcEndpoint -> public void setResetAutoCommit(boolean resetAutoCommit);1482328198;Camel will set the autoCommit on the JDBC connection to be false, commit the change after executed the statement and reset_the autoCommit flag of the connection at the end, if the resetAutoCommit is true. If the JDBC connection doesn't support_to reset the autoCommit flag, you can set the resetAutoCommit flag to be false, and Camel will not try to reset the autoCommit flag._When used with XA transactions you most likely need to set it to false so that the transaction manager is in charge of committing this tx.;public void setResetAutoCommit(boolean resetAutoCommit) {_        this.resetAutoCommit = resetAutoCommit__    };camel,will,set,the,auto,commit,on,the,jdbc,connection,to,be,false,commit,the,change,after,executed,the,statement,and,reset,the,auto,commit,flag,of,the,connection,at,the,end,if,the,reset,auto,commit,is,true,if,the,jdbc,connection,doesn,t,support,to,reset,the,auto,commit,flag,you,can,set,the,reset,auto,commit,flag,to,be,false,and,camel,will,not,try,to,reset,the,auto,commit,flag,when,used,with,xa,transactions,you,most,likely,need,to,set,it,to,false,so,that,the,transaction,manager,is,in,charge,of,committing,this,tx;public,void,set,reset,auto,commit,boolean,reset,auto,commit,this,reset,auto,commit,reset,auto,commit
JdbcEndpoint -> public void setResetAutoCommit(boolean resetAutoCommit);1485968451;Camel will set the autoCommit on the JDBC connection to be false, commit the change after executed the statement and reset_the autoCommit flag of the connection at the end, if the resetAutoCommit is true. If the JDBC connection doesn't support_to reset the autoCommit flag, you can set the resetAutoCommit flag to be false, and Camel will not try to reset the autoCommit flag._When used with XA transactions you most likely need to set it to false so that the transaction manager is in charge of committing this tx.;public void setResetAutoCommit(boolean resetAutoCommit) {_        this.resetAutoCommit = resetAutoCommit__    };camel,will,set,the,auto,commit,on,the,jdbc,connection,to,be,false,commit,the,change,after,executed,the,statement,and,reset,the,auto,commit,flag,of,the,connection,at,the,end,if,the,reset,auto,commit,is,true,if,the,jdbc,connection,doesn,t,support,to,reset,the,auto,commit,flag,you,can,set,the,reset,auto,commit,flag,to,be,false,and,camel,will,not,try,to,reset,the,auto,commit,flag,when,used,with,xa,transactions,you,most,likely,need,to,set,it,to,false,so,that,the,transaction,manager,is,in,charge,of,committing,this,tx;public,void,set,reset,auto,commit,boolean,reset,auto,commit,this,reset,auto,commit,reset,auto,commit
JdbcEndpoint -> public void setResetAutoCommit(boolean resetAutoCommit);1518772634;Camel will set the autoCommit on the JDBC connection to be false, commit the change after executed the statement and reset_the autoCommit flag of the connection at the end, if the resetAutoCommit is true. If the JDBC connection doesn't support_to reset the autoCommit flag, you can set the resetAutoCommit flag to be false, and Camel will not try to reset the autoCommit flag._When used with XA transactions you most likely need to set it to false so that the transaction manager is in charge of committing this tx.;public void setResetAutoCommit(boolean resetAutoCommit) {_        this.resetAutoCommit = resetAutoCommit__    };camel,will,set,the,auto,commit,on,the,jdbc,connection,to,be,false,commit,the,change,after,executed,the,statement,and,reset,the,auto,commit,flag,of,the,connection,at,the,end,if,the,reset,auto,commit,is,true,if,the,jdbc,connection,doesn,t,support,to,reset,the,auto,commit,flag,you,can,set,the,reset,auto,commit,flag,to,be,false,and,camel,will,not,try,to,reset,the,auto,commit,flag,when,used,with,xa,transactions,you,most,likely,need,to,set,it,to,false,so,that,the,transaction,manager,is,in,charge,of,committing,this,tx;public,void,set,reset,auto,commit,boolean,reset,auto,commit,this,reset,auto,commit,reset,auto,commit
JdbcEndpoint -> public void setResetAutoCommit(boolean resetAutoCommit);1531383099;Camel will set the autoCommit on the JDBC connection to be false, commit the change after executed the statement and reset_the autoCommit flag of the connection at the end, if the resetAutoCommit is true. If the JDBC connection doesn't support_to reset the autoCommit flag, you can set the resetAutoCommit flag to be false, and Camel will not try to reset the autoCommit flag._When used with XA transactions you most likely need to set it to false so that the transaction manager is in charge of committing this tx.;public void setResetAutoCommit(boolean resetAutoCommit) {_        this.resetAutoCommit = resetAutoCommit__    };camel,will,set,the,auto,commit,on,the,jdbc,connection,to,be,false,commit,the,change,after,executed,the,statement,and,reset,the,auto,commit,flag,of,the,connection,at,the,end,if,the,reset,auto,commit,is,true,if,the,jdbc,connection,doesn,t,support,to,reset,the,auto,commit,flag,you,can,set,the,reset,auto,commit,flag,to,be,false,and,camel,will,not,try,to,reset,the,auto,commit,flag,when,used,with,xa,transactions,you,most,likely,need,to,set,it,to,false,so,that,the,transaction,manager,is,in,charge,of,committing,this,tx;public,void,set,reset,auto,commit,boolean,reset,auto,commit,this,reset,auto,commit,reset,auto,commit
JdbcEndpoint -> public void setResetAutoCommit(boolean resetAutoCommit);1540108163;Camel will set the autoCommit on the JDBC connection to be false, commit the change after executed the statement and reset_the autoCommit flag of the connection at the end, if the resetAutoCommit is true. If the JDBC connection doesn't support_to reset the autoCommit flag, you can set the resetAutoCommit flag to be false, and Camel will not try to reset the autoCommit flag._When used with XA transactions you most likely need to set it to false so that the transaction manager is in charge of committing this tx.;public void setResetAutoCommit(boolean resetAutoCommit) {_        this.resetAutoCommit = resetAutoCommit__    };camel,will,set,the,auto,commit,on,the,jdbc,connection,to,be,false,commit,the,change,after,executed,the,statement,and,reset,the,auto,commit,flag,of,the,connection,at,the,end,if,the,reset,auto,commit,is,true,if,the,jdbc,connection,doesn,t,support,to,reset,the,auto,commit,flag,you,can,set,the,reset,auto,commit,flag,to,be,false,and,camel,will,not,try,to,reset,the,auto,commit,flag,when,used,with,xa,transactions,you,most,likely,need,to,set,it,to,false,so,that,the,transaction,manager,is,in,charge,of,committing,this,tx;public,void,set,reset,auto,commit,boolean,reset,auto,commit,this,reset,auto,commit,reset,auto,commit
JdbcEndpoint -> public void setResetAutoCommit(boolean resetAutoCommit);1547240981;Camel will set the autoCommit on the JDBC connection to be false, commit the change after executed the statement and reset_the autoCommit flag of the connection at the end, if the resetAutoCommit is true. If the JDBC connection doesn't support_to reset the autoCommit flag, you can set the resetAutoCommit flag to be false, and Camel will not try to reset the autoCommit flag._When used with XA transactions you most likely need to set it to false so that the transaction manager is in charge of committing this tx.;public void setResetAutoCommit(boolean resetAutoCommit) {_        this.resetAutoCommit = resetAutoCommit__    };camel,will,set,the,auto,commit,on,the,jdbc,connection,to,be,false,commit,the,change,after,executed,the,statement,and,reset,the,auto,commit,flag,of,the,connection,at,the,end,if,the,reset,auto,commit,is,true,if,the,jdbc,connection,doesn,t,support,to,reset,the,auto,commit,flag,you,can,set,the,reset,auto,commit,flag,to,be,false,and,camel,will,not,try,to,reset,the,auto,commit,flag,when,used,with,xa,transactions,you,most,likely,need,to,set,it,to,false,so,that,the,transaction,manager,is,in,charge,of,committing,this,tx;public,void,set,reset,auto,commit,boolean,reset,auto,commit,this,reset,auto,commit,reset,auto,commit
JdbcEndpoint -> public void setResetAutoCommit(boolean resetAutoCommit);1548055099;Camel will set the autoCommit on the JDBC connection to be false, commit the change after executed the statement and reset_the autoCommit flag of the connection at the end, if the resetAutoCommit is true. If the JDBC connection doesn't support_to reset the autoCommit flag, you can set the resetAutoCommit flag to be false, and Camel will not try to reset the autoCommit flag._When used with XA transactions you most likely need to set it to false so that the transaction manager is in charge of committing this tx.;public void setResetAutoCommit(boolean resetAutoCommit) {_        this.resetAutoCommit = resetAutoCommit__    };camel,will,set,the,auto,commit,on,the,jdbc,connection,to,be,false,commit,the,change,after,executed,the,statement,and,reset,the,auto,commit,flag,of,the,connection,at,the,end,if,the,reset,auto,commit,is,true,if,the,jdbc,connection,doesn,t,support,to,reset,the,auto,commit,flag,you,can,set,the,reset,auto,commit,flag,to,be,false,and,camel,will,not,try,to,reset,the,auto,commit,flag,when,used,with,xa,transactions,you,most,likely,need,to,set,it,to,false,so,that,the,transaction,manager,is,in,charge,of,committing,this,tx;public,void,set,reset,auto,commit,boolean,reset,auto,commit,this,reset,auto,commit,reset,auto,commit
JdbcEndpoint -> public void setOutputClass(String outputClass);1429015317;Specify the full package and class name to use as conversion when outputType=SelectOne or SelectList.;public void setOutputClass(String outputClass) {_        this.outputClass = outputClass__    };specify,the,full,package,and,class,name,to,use,as,conversion,when,output,type,select,one,or,select,list;public,void,set,output,class,string,output,class,this,output,class,output,class
JdbcEndpoint -> public void setOutputClass(String outputClass);1432903710;Specify the full package and class name to use as conversion when outputType=SelectOne or SelectList.;public void setOutputClass(String outputClass) {_        this.outputClass = outputClass__    };specify,the,full,package,and,class,name,to,use,as,conversion,when,output,type,select,one,or,select,list;public,void,set,output,class,string,output,class,this,output,class,output,class
JdbcEndpoint -> public void setOutputClass(String outputClass);1443508472;Specify the full package and class name to use as conversion when outputType=SelectOne or SelectList.;public void setOutputClass(String outputClass) {_        this.outputClass = outputClass__    };specify,the,full,package,and,class,name,to,use,as,conversion,when,output,type,select,one,or,select,list;public,void,set,output,class,string,output,class,this,output,class,output,class
JdbcEndpoint -> public void setOutputClass(String outputClass);1451237126;Specify the full package and class name to use as conversion when outputType=SelectOne or SelectList.;public void setOutputClass(String outputClass) {_        this.outputClass = outputClass__    };specify,the,full,package,and,class,name,to,use,as,conversion,when,output,type,select,one,or,select,list;public,void,set,output,class,string,output,class,this,output,class,output,class
JdbcEndpoint -> public void setOutputClass(String outputClass);1451910300;Specify the full package and class name to use as conversion when outputType=SelectOne or SelectList.;public void setOutputClass(String outputClass) {_        this.outputClass = outputClass__    };specify,the,full,package,and,class,name,to,use,as,conversion,when,output,type,select,one,or,select,list;public,void,set,output,class,string,output,class,this,output,class,output,class
JdbcEndpoint -> public void setOutputClass(String outputClass);1482328198;Specify the full package and class name to use as conversion when outputType=SelectOne or SelectList.;public void setOutputClass(String outputClass) {_        this.outputClass = outputClass__    };specify,the,full,package,and,class,name,to,use,as,conversion,when,output,type,select,one,or,select,list;public,void,set,output,class,string,output,class,this,output,class,output,class
JdbcEndpoint -> public void setOutputClass(String outputClass);1485968451;Specify the full package and class name to use as conversion when outputType=SelectOne or SelectList.;public void setOutputClass(String outputClass) {_        this.outputClass = outputClass__    };specify,the,full,package,and,class,name,to,use,as,conversion,when,output,type,select,one,or,select,list;public,void,set,output,class,string,output,class,this,output,class,output,class
JdbcEndpoint -> public void setOutputClass(String outputClass);1518772634;Specify the full package and class name to use as conversion when outputType=SelectOne or SelectList.;public void setOutputClass(String outputClass) {_        this.outputClass = outputClass__    };specify,the,full,package,and,class,name,to,use,as,conversion,when,output,type,select,one,or,select,list;public,void,set,output,class,string,output,class,this,output,class,output,class
JdbcEndpoint -> public void setOutputClass(String outputClass);1531383099;Specify the full package and class name to use as conversion when outputType=SelectOne or SelectList.;public void setOutputClass(String outputClass) {_        this.outputClass = outputClass__    };specify,the,full,package,and,class,name,to,use,as,conversion,when,output,type,select,one,or,select,list;public,void,set,output,class,string,output,class,this,output,class,output,class
JdbcEndpoint -> public void setOutputClass(String outputClass);1540108163;Specify the full package and class name to use as conversion when outputType=SelectOne or SelectList.;public void setOutputClass(String outputClass) {_        this.outputClass = outputClass__    };specify,the,full,package,and,class,name,to,use,as,conversion,when,output,type,select,one,or,select,list;public,void,set,output,class,string,output,class,this,output,class,output,class
JdbcEndpoint -> public void setOutputClass(String outputClass);1547240981;Specify the full package and class name to use as conversion when outputType=SelectOne or SelectList.;public void setOutputClass(String outputClass) {_        this.outputClass = outputClass__    };specify,the,full,package,and,class,name,to,use,as,conversion,when,output,type,select,one,or,select,list;public,void,set,output,class,string,output,class,this,output,class,output,class
JdbcEndpoint -> public void setOutputClass(String outputClass);1548055099;Specify the full package and class name to use as conversion when outputType=SelectOne or SelectList.;public void setOutputClass(String outputClass) {_        this.outputClass = outputClass__    };specify,the,full,package,and,class,name,to,use,as,conversion,when,output,type,select,one,or,select,list;public,void,set,output,class,string,output,class,this,output,class,output,class
JdbcEndpoint -> public void setBeanRowMapper(BeanRowMapper beanRowMapper);1429015317;To use a custom org.apache.camel.component.jdbc.BeanRowMapper when using outputClass._The default implementation will lower case the row names and skip underscores, and dashes. For example "CUST_ID" is mapped as "custId".;public void setBeanRowMapper(BeanRowMapper beanRowMapper) {_        this.beanRowMapper = beanRowMapper__    };to,use,a,custom,org,apache,camel,component,jdbc,bean,row,mapper,when,using,output,class,the,default,implementation,will,lower,case,the,row,names,and,skip,underscores,and,dashes,for,example,is,mapped,as,cust,id;public,void,set,bean,row,mapper,bean,row,mapper,bean,row,mapper,this,bean,row,mapper,bean,row,mapper
JdbcEndpoint -> public void setBeanRowMapper(BeanRowMapper beanRowMapper);1432903710;To use a custom org.apache.camel.component.jdbc.BeanRowMapper when using outputClass._The default implementation will lower case the row names and skip underscores, and dashes. For example "CUST_ID" is mapped as "custId".;public void setBeanRowMapper(BeanRowMapper beanRowMapper) {_        this.beanRowMapper = beanRowMapper__    };to,use,a,custom,org,apache,camel,component,jdbc,bean,row,mapper,when,using,output,class,the,default,implementation,will,lower,case,the,row,names,and,skip,underscores,and,dashes,for,example,is,mapped,as,cust,id;public,void,set,bean,row,mapper,bean,row,mapper,bean,row,mapper,this,bean,row,mapper,bean,row,mapper
JdbcEndpoint -> public void setBeanRowMapper(BeanRowMapper beanRowMapper);1443508472;To use a custom org.apache.camel.component.jdbc.BeanRowMapper when using outputClass._The default implementation will lower case the row names and skip underscores, and dashes. For example "CUST_ID" is mapped as "custId".;public void setBeanRowMapper(BeanRowMapper beanRowMapper) {_        this.beanRowMapper = beanRowMapper__    };to,use,a,custom,org,apache,camel,component,jdbc,bean,row,mapper,when,using,output,class,the,default,implementation,will,lower,case,the,row,names,and,skip,underscores,and,dashes,for,example,is,mapped,as,cust,id;public,void,set,bean,row,mapper,bean,row,mapper,bean,row,mapper,this,bean,row,mapper,bean,row,mapper
JdbcEndpoint -> public void setBeanRowMapper(BeanRowMapper beanRowMapper);1451237126;To use a custom org.apache.camel.component.jdbc.BeanRowMapper when using outputClass._The default implementation will lower case the row names and skip underscores, and dashes. For example "CUST_ID" is mapped as "custId".;public void setBeanRowMapper(BeanRowMapper beanRowMapper) {_        this.beanRowMapper = beanRowMapper__    };to,use,a,custom,org,apache,camel,component,jdbc,bean,row,mapper,when,using,output,class,the,default,implementation,will,lower,case,the,row,names,and,skip,underscores,and,dashes,for,example,is,mapped,as,cust,id;public,void,set,bean,row,mapper,bean,row,mapper,bean,row,mapper,this,bean,row,mapper,bean,row,mapper
JdbcEndpoint -> public void setBeanRowMapper(BeanRowMapper beanRowMapper);1451910300;To use a custom org.apache.camel.component.jdbc.BeanRowMapper when using outputClass._The default implementation will lower case the row names and skip underscores, and dashes. For example "CUST_ID" is mapped as "custId".;public void setBeanRowMapper(BeanRowMapper beanRowMapper) {_        this.beanRowMapper = beanRowMapper__    };to,use,a,custom,org,apache,camel,component,jdbc,bean,row,mapper,when,using,output,class,the,default,implementation,will,lower,case,the,row,names,and,skip,underscores,and,dashes,for,example,is,mapped,as,cust,id;public,void,set,bean,row,mapper,bean,row,mapper,bean,row,mapper,this,bean,row,mapper,bean,row,mapper
JdbcEndpoint -> public void setBeanRowMapper(BeanRowMapper beanRowMapper);1482328198;To use a custom org.apache.camel.component.jdbc.BeanRowMapper when using outputClass._The default implementation will lower case the row names and skip underscores, and dashes. For example "CUST_ID" is mapped as "custId".;public void setBeanRowMapper(BeanRowMapper beanRowMapper) {_        this.beanRowMapper = beanRowMapper__    };to,use,a,custom,org,apache,camel,component,jdbc,bean,row,mapper,when,using,output,class,the,default,implementation,will,lower,case,the,row,names,and,skip,underscores,and,dashes,for,example,is,mapped,as,cust,id;public,void,set,bean,row,mapper,bean,row,mapper,bean,row,mapper,this,bean,row,mapper,bean,row,mapper
JdbcEndpoint -> public void setBeanRowMapper(BeanRowMapper beanRowMapper);1485968451;To use a custom org.apache.camel.component.jdbc.BeanRowMapper when using outputClass._The default implementation will lower case the row names and skip underscores, and dashes. For example "CUST_ID" is mapped as "custId".;public void setBeanRowMapper(BeanRowMapper beanRowMapper) {_        this.beanRowMapper = beanRowMapper__    };to,use,a,custom,org,apache,camel,component,jdbc,bean,row,mapper,when,using,output,class,the,default,implementation,will,lower,case,the,row,names,and,skip,underscores,and,dashes,for,example,is,mapped,as,cust,id;public,void,set,bean,row,mapper,bean,row,mapper,bean,row,mapper,this,bean,row,mapper,bean,row,mapper
JdbcEndpoint -> public void setBeanRowMapper(BeanRowMapper beanRowMapper);1518772634;To use a custom org.apache.camel.component.jdbc.BeanRowMapper when using outputClass._The default implementation will lower case the row names and skip underscores, and dashes. For example "CUST_ID" is mapped as "custId".;public void setBeanRowMapper(BeanRowMapper beanRowMapper) {_        this.beanRowMapper = beanRowMapper__    };to,use,a,custom,org,apache,camel,component,jdbc,bean,row,mapper,when,using,output,class,the,default,implementation,will,lower,case,the,row,names,and,skip,underscores,and,dashes,for,example,is,mapped,as,cust,id;public,void,set,bean,row,mapper,bean,row,mapper,bean,row,mapper,this,bean,row,mapper,bean,row,mapper
JdbcEndpoint -> public void setBeanRowMapper(BeanRowMapper beanRowMapper);1531383099;To use a custom org.apache.camel.component.jdbc.BeanRowMapper when using outputClass._The default implementation will lower case the row names and skip underscores, and dashes. For example "CUST_ID" is mapped as "custId".;public void setBeanRowMapper(BeanRowMapper beanRowMapper) {_        this.beanRowMapper = beanRowMapper__    };to,use,a,custom,org,apache,camel,component,jdbc,bean,row,mapper,when,using,output,class,the,default,implementation,will,lower,case,the,row,names,and,skip,underscores,and,dashes,for,example,is,mapped,as,cust,id;public,void,set,bean,row,mapper,bean,row,mapper,bean,row,mapper,this,bean,row,mapper,bean,row,mapper
JdbcEndpoint -> public void setBeanRowMapper(BeanRowMapper beanRowMapper);1540108163;To use a custom org.apache.camel.component.jdbc.BeanRowMapper when using outputClass._The default implementation will lower case the row names and skip underscores, and dashes. For example "CUST_ID" is mapped as "custId".;public void setBeanRowMapper(BeanRowMapper beanRowMapper) {_        this.beanRowMapper = beanRowMapper__    };to,use,a,custom,org,apache,camel,component,jdbc,bean,row,mapper,when,using,output,class,the,default,implementation,will,lower,case,the,row,names,and,skip,underscores,and,dashes,for,example,is,mapped,as,cust,id;public,void,set,bean,row,mapper,bean,row,mapper,bean,row,mapper,this,bean,row,mapper,bean,row,mapper
JdbcEndpoint -> public void setBeanRowMapper(BeanRowMapper beanRowMapper);1547240981;To use a custom org.apache.camel.component.jdbc.BeanRowMapper when using outputClass._The default implementation will lower case the row names and skip underscores, and dashes. For example "CUST_ID" is mapped as "custId".;public void setBeanRowMapper(BeanRowMapper beanRowMapper) {_        this.beanRowMapper = beanRowMapper__    };to,use,a,custom,org,apache,camel,component,jdbc,bean,row,mapper,when,using,output,class,the,default,implementation,will,lower,case,the,row,names,and,skip,underscores,and,dashes,for,example,is,mapped,as,cust,id;public,void,set,bean,row,mapper,bean,row,mapper,bean,row,mapper,this,bean,row,mapper,bean,row,mapper
JdbcEndpoint -> public void setBeanRowMapper(BeanRowMapper beanRowMapper);1548055099;To use a custom org.apache.camel.component.jdbc.BeanRowMapper when using outputClass._The default implementation will lower case the row names and skip underscores, and dashes. For example "CUST_ID" is mapped as "custId".;public void setBeanRowMapper(BeanRowMapper beanRowMapper) {_        this.beanRowMapper = beanRowMapper__    };to,use,a,custom,org,apache,camel,component,jdbc,bean,row,mapper,when,using,output,class,the,default,implementation,will,lower,case,the,row,names,and,skip,underscores,and,dashes,for,example,is,mapped,as,cust,id;public,void,set,bean,row,mapper,bean,row,mapper,bean,row,mapper,this,bean,row,mapper,bean,row,mapper
JdbcEndpoint -> public void setOutputType(JdbcOutputType outputType);1429015317;Determines the output the producer should use.;public void setOutputType(JdbcOutputType outputType) {_        this.outputType = outputType__    };determines,the,output,the,producer,should,use;public,void,set,output,type,jdbc,output,type,output,type,this,output,type,output,type
JdbcEndpoint -> public void setOutputType(JdbcOutputType outputType);1432903710;Determines the output the producer should use.;public void setOutputType(JdbcOutputType outputType) {_        this.outputType = outputType__    };determines,the,output,the,producer,should,use;public,void,set,output,type,jdbc,output,type,output,type,this,output,type,output,type
JdbcEndpoint -> public void setOutputType(JdbcOutputType outputType);1443508472;Determines the output the producer should use.;public void setOutputType(JdbcOutputType outputType) {_        this.outputType = outputType__    };determines,the,output,the,producer,should,use;public,void,set,output,type,jdbc,output,type,output,type,this,output,type,output,type
JdbcEndpoint -> public void setOutputType(JdbcOutputType outputType);1451237126;Determines the output the producer should use.;public void setOutputType(JdbcOutputType outputType) {_        this.outputType = outputType__    };determines,the,output,the,producer,should,use;public,void,set,output,type,jdbc,output,type,output,type,this,output,type,output,type
JdbcEndpoint -> public void setOutputType(JdbcOutputType outputType);1451910300;Determines the output the producer should use.;public void setOutputType(JdbcOutputType outputType) {_        this.outputType = outputType__    };determines,the,output,the,producer,should,use;public,void,set,output,type,jdbc,output,type,output,type,this,output,type,output,type
JdbcEndpoint -> public void setOutputType(JdbcOutputType outputType);1482328198;Determines the output the producer should use.;public void setOutputType(JdbcOutputType outputType) {_        this.outputType = outputType__    };determines,the,output,the,producer,should,use;public,void,set,output,type,jdbc,output,type,output,type,this,output,type,output,type
JdbcEndpoint -> public void setOutputType(JdbcOutputType outputType);1485968451;Determines the output the producer should use.;public void setOutputType(JdbcOutputType outputType) {_        this.outputType = outputType__    };determines,the,output,the,producer,should,use;public,void,set,output,type,jdbc,output,type,output,type,this,output,type,output,type
JdbcEndpoint -> public void setOutputType(JdbcOutputType outputType);1518772634;Determines the output the producer should use.;public void setOutputType(JdbcOutputType outputType) {_        this.outputType = outputType__    };determines,the,output,the,producer,should,use;public,void,set,output,type,jdbc,output,type,output,type,this,output,type,output,type
JdbcEndpoint -> public void setOutputType(JdbcOutputType outputType);1531383099;Determines the output the producer should use.;public void setOutputType(JdbcOutputType outputType) {_        this.outputType = outputType__    };determines,the,output,the,producer,should,use;public,void,set,output,type,jdbc,output,type,output,type,this,output,type,output,type
JdbcEndpoint -> public void setOutputType(JdbcOutputType outputType);1540108163;Determines the output the producer should use.;public void setOutputType(JdbcOutputType outputType) {_        this.outputType = outputType__    };determines,the,output,the,producer,should,use;public,void,set,output,type,jdbc,output,type,output,type,this,output,type,output,type
JdbcEndpoint -> public void setOutputType(JdbcOutputType outputType);1547240981;Determines the output the producer should use.;public void setOutputType(JdbcOutputType outputType) {_        this.outputType = outputType__    };determines,the,output,the,producer,should,use;public,void,set,output,type,jdbc,output,type,output,type,this,output,type,output,type
JdbcEndpoint -> public void setOutputType(JdbcOutputType outputType);1548055099;Determines the output the producer should use.;public void setOutputType(JdbcOutputType outputType) {_        this.outputType = outputType__    };determines,the,output,the,producer,should,use;public,void,set,output,type,jdbc,output,type,output,type,this,output,type,output,type
JdbcEndpoint -> public void setDataSourceName(String dataSourceName);1432903710;Name of DataSource to lookup in the Registry.;public void setDataSourceName(String dataSourceName) {_        this.dataSourceName = dataSourceName__    };name,of,data,source,to,lookup,in,the,registry;public,void,set,data,source,name,string,data,source,name,this,data,source,name,data,source,name
JdbcEndpoint -> public void setDataSourceName(String dataSourceName);1443508472;Name of DataSource to lookup in the Registry.;public void setDataSourceName(String dataSourceName) {_        this.dataSourceName = dataSourceName__    };name,of,data,source,to,lookup,in,the,registry;public,void,set,data,source,name,string,data,source,name,this,data,source,name,data,source,name
JdbcEndpoint -> public void setDataSourceName(String dataSourceName);1451237126;Name of DataSource to lookup in the Registry.;public void setDataSourceName(String dataSourceName) {_        this.dataSourceName = dataSourceName__    };name,of,data,source,to,lookup,in,the,registry;public,void,set,data,source,name,string,data,source,name,this,data,source,name,data,source,name
JdbcEndpoint -> public void setDataSourceName(String dataSourceName);1451910300;Name of DataSource to lookup in the Registry.;public void setDataSourceName(String dataSourceName) {_        this.dataSourceName = dataSourceName__    };name,of,data,source,to,lookup,in,the,registry;public,void,set,data,source,name,string,data,source,name,this,data,source,name,data,source,name
JdbcEndpoint -> public void setDataSourceName(String dataSourceName);1482328198;Name of DataSource to lookup in the Registry.;public void setDataSourceName(String dataSourceName) {_        this.dataSourceName = dataSourceName__    };name,of,data,source,to,lookup,in,the,registry;public,void,set,data,source,name,string,data,source,name,this,data,source,name,data,source,name
JdbcEndpoint -> public void setDataSourceName(String dataSourceName);1485968451;Name of DataSource to lookup in the Registry.;public void setDataSourceName(String dataSourceName) {_        this.dataSourceName = dataSourceName__    };name,of,data,source,to,lookup,in,the,registry;public,void,set,data,source,name,string,data,source,name,this,data,source,name,data,source,name
JdbcEndpoint -> public void setDataSourceName(String dataSourceName);1518772634;Name of DataSource to lookup in the Registry.;public void setDataSourceName(String dataSourceName) {_        this.dataSourceName = dataSourceName__    };name,of,data,source,to,lookup,in,the,registry;public,void,set,data,source,name,string,data,source,name,this,data,source,name,data,source,name
JdbcEndpoint -> public void setDataSourceName(String dataSourceName);1531383099;Name of DataSource to lookup in the Registry. If the name is dataSource or default, then Camel_will attempt to lookup a default DataSource from the registry, meaning if there is a only_one instance of DataSource found, then this DataSource will be used.;public void setDataSourceName(String dataSourceName) {_        this.dataSourceName = dataSourceName__    };name,of,data,source,to,lookup,in,the,registry,if,the,name,is,data,source,or,default,then,camel,will,attempt,to,lookup,a,default,data,source,from,the,registry,meaning,if,there,is,a,only,one,instance,of,data,source,found,then,this,data,source,will,be,used;public,void,set,data,source,name,string,data,source,name,this,data,source,name,data,source,name
JdbcEndpoint -> public void setDataSourceName(String dataSourceName);1540108163;Name of DataSource to lookup in the Registry. If the name is dataSource or default, then Camel_will attempt to lookup a default DataSource from the registry, meaning if there is a only_one instance of DataSource found, then this DataSource will be used.;public void setDataSourceName(String dataSourceName) {_        this.dataSourceName = dataSourceName__    };name,of,data,source,to,lookup,in,the,registry,if,the,name,is,data,source,or,default,then,camel,will,attempt,to,lookup,a,default,data,source,from,the,registry,meaning,if,there,is,a,only,one,instance,of,data,source,found,then,this,data,source,will,be,used;public,void,set,data,source,name,string,data,source,name,this,data,source,name,data,source,name
JdbcEndpoint -> public void setDataSourceName(String dataSourceName);1547240981;Name of DataSource to lookup in the Registry. If the name is dataSource or default, then Camel_will attempt to lookup a default DataSource from the registry, meaning if there is a only_one instance of DataSource found, then this DataSource will be used.;public void setDataSourceName(String dataSourceName) {_        this.dataSourceName = dataSourceName__    };name,of,data,source,to,lookup,in,the,registry,if,the,name,is,data,source,or,default,then,camel,will,attempt,to,lookup,a,default,data,source,from,the,registry,meaning,if,there,is,a,only,one,instance,of,data,source,found,then,this,data,source,will,be,used;public,void,set,data,source,name,string,data,source,name,this,data,source,name,data,source,name
JdbcEndpoint -> public void setDataSourceName(String dataSourceName);1548055099;Name of DataSource to lookup in the Registry. If the name is dataSource or default, then Camel_will attempt to lookup a default DataSource from the registry, meaning if there is a only_one instance of DataSource found, then this DataSource will be used.;public void setDataSourceName(String dataSourceName) {_        this.dataSourceName = dataSourceName__    };name,of,data,source,to,lookup,in,the,registry,if,the,name,is,data,source,or,default,then,camel,will,attempt,to,lookup,a,default,data,source,from,the,registry,meaning,if,there,is,a,only,one,instance,of,data,source,found,then,this,data,source,will,be,used;public,void,set,data,source,name,string,data,source,name,this,data,source,name,data,source,name
JdbcEndpoint -> public void setParameters(Map<String, Object> parameters);1259058670;Optional parameters to the {@link java.sql.Statement}._<p/>_For example to set maxRows, fetchSize etc.__@param parameters parameters which will be set using reflection;public void setParameters(Map<String, Object> parameters) {_        this.parameters = parameters__    };optional,parameters,to,the,link,java,sql,statement,p,for,example,to,set,max,rows,fetch,size,etc,param,parameters,parameters,which,will,be,set,using,reflection;public,void,set,parameters,map,string,object,parameters,this,parameters,parameters
JdbcEndpoint -> public void setParameters(Map<String, Object> parameters);1263280876;Optional parameters to the {@link java.sql.Statement}._<p/>_For example to set maxRows, fetchSize etc.__@param parameters parameters which will be set using reflection;public void setParameters(Map<String, Object> parameters) {_        this.parameters = parameters__    };optional,parameters,to,the,link,java,sql,statement,p,for,example,to,set,max,rows,fetch,size,etc,param,parameters,parameters,which,will,be,set,using,reflection;public,void,set,parameters,map,string,object,parameters,this,parameters,parameters
JdbcEndpoint -> public void setParameters(Map<String, Object> parameters);1297975937;Optional parameters to the {@link java.sql.Statement}._<p/>_For example to set maxRows, fetchSize etc.__@param parameters parameters which will be set using reflection;public void setParameters(Map<String, Object> parameters) {_        this.parameters = parameters__    };optional,parameters,to,the,link,java,sql,statement,p,for,example,to,set,max,rows,fetch,size,etc,param,parameters,parameters,which,will,be,set,using,reflection;public,void,set,parameters,map,string,object,parameters,this,parameters,parameters
JdbcEndpoint -> public void setParameters(Map<String, Object> parameters);1303847897;Optional parameters to the {@link java.sql.Statement}._<p/>_For example to set maxRows, fetchSize etc.__@param parameters parameters which will be set using reflection;public void setParameters(Map<String, Object> parameters) {_        this.parameters = parameters__    };optional,parameters,to,the,link,java,sql,statement,p,for,example,to,set,max,rows,fetch,size,etc,param,parameters,parameters,which,will,be,set,using,reflection;public,void,set,parameters,map,string,object,parameters,this,parameters,parameters
JdbcEndpoint -> public void setParameters(Map<String, Object> parameters);1311692742;Optional parameters to the {@link java.sql.Statement}._<p/>_For example to set maxRows, fetchSize etc.__@param parameters parameters which will be set using reflection;public void setParameters(Map<String, Object> parameters) {_        this.parameters = parameters__    };optional,parameters,to,the,link,java,sql,statement,p,for,example,to,set,max,rows,fetch,size,etc,param,parameters,parameters,which,will,be,set,using,reflection;public,void,set,parameters,map,string,object,parameters,this,parameters,parameters
JdbcEndpoint -> public void setParameters(Map<String, Object> parameters);1370186569;Optional parameters to the {@link java.sql.Statement}._<p/>_For example to set maxRows, fetchSize etc.__@param parameters parameters which will be set using reflection;public void setParameters(Map<String, Object> parameters) {_        this.parameters = parameters__    };optional,parameters,to,the,link,java,sql,statement,p,for,example,to,set,max,rows,fetch,size,etc,param,parameters,parameters,which,will,be,set,using,reflection;public,void,set,parameters,map,string,object,parameters,this,parameters,parameters
JdbcEndpoint -> public void setParameters(Map<String, Object> parameters);1379509253;Optional parameters to the {@link java.sql.Statement}._<p/>_For example to set maxRows, fetchSize etc.__@param parameters parameters which will be set using reflection;public void setParameters(Map<String, Object> parameters) {_        this.parameters = parameters__    };optional,parameters,to,the,link,java,sql,statement,p,for,example,to,set,max,rows,fetch,size,etc,param,parameters,parameters,which,will,be,set,using,reflection;public,void,set,parameters,map,string,object,parameters,this,parameters,parameters
JdbcEndpoint -> public void setParameters(Map<String, Object> parameters);1379510934;Optional parameters to the {@link java.sql.Statement}._<p/>_For example to set maxRows, fetchSize etc.__@param parameters parameters which will be set using reflection;public void setParameters(Map<String, Object> parameters) {_        this.parameters = parameters__    };optional,parameters,to,the,link,java,sql,statement,p,for,example,to,set,max,rows,fetch,size,etc,param,parameters,parameters,which,will,be,set,using,reflection;public,void,set,parameters,map,string,object,parameters,this,parameters,parameters
JdbcEndpoint -> public void setParameters(Map<String, Object> parameters);1405374721;Optional parameters to the {@link java.sql.Statement}._<p/>_For example to set maxRows, fetchSize etc.__@param parameters parameters which will be set using reflection;public void setParameters(Map<String, Object> parameters) {_        this.parameters = parameters__    };optional,parameters,to,the,link,java,sql,statement,p,for,example,to,set,max,rows,fetch,size,etc,param,parameters,parameters,which,will,be,set,using,reflection;public,void,set,parameters,map,string,object,parameters,this,parameters,parameters
JdbcEndpoint -> public void setParameters(Map<String, Object> parameters);1415211488;Optional parameters to the {@link java.sql.Statement}._<p/>_For example to set maxRows, fetchSize etc.__@param parameters parameters which will be set using reflection;public void setParameters(Map<String, Object> parameters) {_        this.parameters = parameters__    };optional,parameters,to,the,link,java,sql,statement,p,for,example,to,set,max,rows,fetch,size,etc,param,parameters,parameters,which,will,be,set,using,reflection;public,void,set,parameters,map,string,object,parameters,this,parameters,parameters
JdbcEndpoint -> public void setParameters(Map<String, Object> parameters);1416561667;Optional parameters to the {@link java.sql.Statement}._<p/>_For example to set maxRows, fetchSize etc.__@param parameters parameters which will be set using reflection;public void setParameters(Map<String, Object> parameters) {_        this.parameters = parameters__    };optional,parameters,to,the,link,java,sql,statement,p,for,example,to,set,max,rows,fetch,size,etc,param,parameters,parameters,which,will,be,set,using,reflection;public,void,set,parameters,map,string,object,parameters,this,parameters,parameters
JdbcEndpoint -> public void setParameters(Map<String, Object> parameters);1416823940;Optional parameters to the {@link java.sql.Statement}._<p/>_For example to set maxRows, fetchSize etc.__@param parameters parameters which will be set using reflection;public void setParameters(Map<String, Object> parameters) {_        this.parameters = parameters__    };optional,parameters,to,the,link,java,sql,statement,p,for,example,to,set,max,rows,fetch,size,etc,param,parameters,parameters,which,will,be,set,using,reflection;public,void,set,parameters,map,string,object,parameters,this,parameters,parameters
JdbcEndpoint -> public void setParameters(Map<String, Object> parameters);1423750790;Optional parameters to the {@link java.sql.Statement}._<p/>_For example to set maxRows, fetchSize etc.__@param parameters parameters which will be set using reflection;public void setParameters(Map<String, Object> parameters) {_        this.parameters = parameters__    };optional,parameters,to,the,link,java,sql,statement,p,for,example,to,set,max,rows,fetch,size,etc,param,parameters,parameters,which,will,be,set,using,reflection;public,void,set,parameters,map,string,object,parameters,this,parameters,parameters
JdbcEndpoint -> public void setParameters(Map<String, Object> parameters);1425142361;Optional parameters to the {@link java.sql.Statement}._<p/>_For example to set maxRows, fetchSize etc.__@param parameters parameters which will be set using reflection;public void setParameters(Map<String, Object> parameters) {_        this.parameters = parameters__    };optional,parameters,to,the,link,java,sql,statement,p,for,example,to,set,max,rows,fetch,size,etc,param,parameters,parameters,which,will,be,set,using,reflection;public,void,set,parameters,map,string,object,parameters,this,parameters,parameters
JdbcEndpoint -> public void setParameters(Map<String, Object> parameters);1425581084;Optional parameters to the {@link java.sql.Statement}._<p/>_For example to set maxRows, fetchSize etc.__@param parameters parameters which will be set using reflection;public void setParameters(Map<String, Object> parameters) {_        this.parameters = parameters__    };optional,parameters,to,the,link,java,sql,statement,p,for,example,to,set,max,rows,fetch,size,etc,param,parameters,parameters,which,will,be,set,using,reflection;public,void,set,parameters,map,string,object,parameters,this,parameters,parameters
JdbcEndpoint -> public void setParameters(Map<String, Object> parameters);1427402378;Optional parameters to the {@link java.sql.Statement}._<p/>_For example to set maxRows, fetchSize etc.__@param parameters parameters which will be set using reflection;public void setParameters(Map<String, Object> parameters) {_        this.parameters = parameters__    };optional,parameters,to,the,link,java,sql,statement,p,for,example,to,set,max,rows,fetch,size,etc,param,parameters,parameters,which,will,be,set,using,reflection;public,void,set,parameters,map,string,object,parameters,this,parameters,parameters
JdbcEndpoint -> public void setParameters(Map<String, Object> parameters);1427880501;Optional parameters to the {@link java.sql.Statement}._<p/>_For example to set maxRows, fetchSize etc.__@param parameters parameters which will be set using reflection;public void setParameters(Map<String, Object> parameters) {_        this.parameters = parameters__    };optional,parameters,to,the,link,java,sql,statement,p,for,example,to,set,max,rows,fetch,size,etc,param,parameters,parameters,which,will,be,set,using,reflection;public,void,set,parameters,map,string,object,parameters,this,parameters,parameters
JdbcEndpoint -> public void setParameters(Map<String, Object> parameters);1429015317;Optional parameters to the {@link java.sql.Statement}._<p/>_For example to set maxRows, fetchSize etc.__@param parameters parameters which will be set using reflection;public void setParameters(Map<String, Object> parameters) {_        this.parameters = parameters__    };optional,parameters,to,the,link,java,sql,statement,p,for,example,to,set,max,rows,fetch,size,etc,param,parameters,parameters,which,will,be,set,using,reflection;public,void,set,parameters,map,string,object,parameters,this,parameters,parameters
JdbcEndpoint -> public void setParameters(Map<String, Object> parameters);1432903710;Optional parameters to the {@link java.sql.Statement}._<p/>_For example to set maxRows, fetchSize etc.__@param parameters parameters which will be set using reflection;public void setParameters(Map<String, Object> parameters) {_        this.parameters = parameters__    };optional,parameters,to,the,link,java,sql,statement,p,for,example,to,set,max,rows,fetch,size,etc,param,parameters,parameters,which,will,be,set,using,reflection;public,void,set,parameters,map,string,object,parameters,this,parameters,parameters
JdbcEndpoint -> public void setParameters(Map<String, Object> parameters);1443508472;Optional parameters to the {@link java.sql.Statement}._<p/>_For example to set maxRows, fetchSize etc.__@param parameters parameters which will be set using reflection;public void setParameters(Map<String, Object> parameters) {_        this.parameters = parameters__    };optional,parameters,to,the,link,java,sql,statement,p,for,example,to,set,max,rows,fetch,size,etc,param,parameters,parameters,which,will,be,set,using,reflection;public,void,set,parameters,map,string,object,parameters,this,parameters,parameters
JdbcEndpoint -> public void setParameters(Map<String, Object> parameters);1451237126;Optional parameters to the {@link java.sql.Statement}._<p/>_For example to set maxRows, fetchSize etc.__@param parameters parameters which will be set using reflection;public void setParameters(Map<String, Object> parameters) {_        this.parameters = parameters__    };optional,parameters,to,the,link,java,sql,statement,p,for,example,to,set,max,rows,fetch,size,etc,param,parameters,parameters,which,will,be,set,using,reflection;public,void,set,parameters,map,string,object,parameters,this,parameters,parameters
JdbcEndpoint -> public void setParameters(Map<String, Object> parameters);1451910300;Optional parameters to the {@link java.sql.Statement}._<p/>_For example to set maxRows, fetchSize etc.__@param parameters parameters which will be set using reflection;public void setParameters(Map<String, Object> parameters) {_        this.parameters = parameters__    };optional,parameters,to,the,link,java,sql,statement,p,for,example,to,set,max,rows,fetch,size,etc,param,parameters,parameters,which,will,be,set,using,reflection;public,void,set,parameters,map,string,object,parameters,this,parameters,parameters
JdbcEndpoint -> public void setParameters(Map<String, Object> parameters);1482328198;Optional parameters to the {@link java.sql.Statement}._<p/>_For example to set maxRows, fetchSize etc.__@param parameters parameters which will be set using reflection;public void setParameters(Map<String, Object> parameters) {_        this.parameters = parameters__    };optional,parameters,to,the,link,java,sql,statement,p,for,example,to,set,max,rows,fetch,size,etc,param,parameters,parameters,which,will,be,set,using,reflection;public,void,set,parameters,map,string,object,parameters,this,parameters,parameters
JdbcEndpoint -> public void setParameters(Map<String, Object> parameters);1485968451;Optional parameters to the {@link java.sql.Statement}._<p/>_For example to set maxRows, fetchSize etc.__@param parameters parameters which will be set using reflection;public void setParameters(Map<String, Object> parameters) {_        this.parameters = parameters__    };optional,parameters,to,the,link,java,sql,statement,p,for,example,to,set,max,rows,fetch,size,etc,param,parameters,parameters,which,will,be,set,using,reflection;public,void,set,parameters,map,string,object,parameters,this,parameters,parameters
JdbcEndpoint -> public void setParameters(Map<String, Object> parameters);1518772634;Optional parameters to the {@link java.sql.Statement}._<p/>_For example to set maxRows, fetchSize etc.__@param parameters parameters which will be set using reflection;public void setParameters(Map<String, Object> parameters) {_        this.parameters = parameters__    };optional,parameters,to,the,link,java,sql,statement,p,for,example,to,set,max,rows,fetch,size,etc,param,parameters,parameters,which,will,be,set,using,reflection;public,void,set,parameters,map,string,object,parameters,this,parameters,parameters
JdbcEndpoint -> public void setParameters(Map<String, Object> parameters);1531383099;Optional parameters to the {@link java.sql.Statement}._<p/>_For example to set maxRows, fetchSize etc.__@param parameters parameters which will be set using reflection;public void setParameters(Map<String, Object> parameters) {_        this.parameters = parameters__    };optional,parameters,to,the,link,java,sql,statement,p,for,example,to,set,max,rows,fetch,size,etc,param,parameters,parameters,which,will,be,set,using,reflection;public,void,set,parameters,map,string,object,parameters,this,parameters,parameters
JdbcEndpoint -> public void setParameters(Map<String, Object> parameters);1540108163;Optional parameters to the {@link java.sql.Statement}._<p/>_For example to set maxRows, fetchSize etc.__@param parameters parameters which will be set using reflection;public void setParameters(Map<String, Object> parameters) {_        this.parameters = parameters__    };optional,parameters,to,the,link,java,sql,statement,p,for,example,to,set,max,rows,fetch,size,etc,param,parameters,parameters,which,will,be,set,using,reflection;public,void,set,parameters,map,string,object,parameters,this,parameters,parameters
JdbcEndpoint -> public void setParameters(Map<String, Object> parameters);1547240981;Optional parameters to the {@link java.sql.Statement}._<p/>_For example to set maxRows, fetchSize etc.__@param parameters parameters which will be set using reflection;public void setParameters(Map<String, Object> parameters) {_        this.parameters = parameters__    };optional,parameters,to,the,link,java,sql,statement,p,for,example,to,set,max,rows,fetch,size,etc,param,parameters,parameters,which,will,be,set,using,reflection;public,void,set,parameters,map,string,object,parameters,this,parameters,parameters
JdbcEndpoint -> public void setParameters(Map<String, Object> parameters);1548055099;Optional parameters to the {@link java.sql.Statement}._<p/>_For example to set maxRows, fetchSize etc.__@param parameters parameters which will be set using reflection;public void setParameters(Map<String, Object> parameters) {_        this.parameters = parameters__    };optional,parameters,to,the,link,java,sql,statement,p,for,example,to,set,max,rows,fetch,size,etc,param,parameters,parameters,which,will,be,set,using,reflection;public,void,set,parameters,map,string,object,parameters,this,parameters,parameters
JdbcEndpoint -> public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics);1263280876;Sets whether to use JDBC 4 or JDBC 3.0 or older semantic when retrieving column name._<p/>_JDBC 4.0 uses columnLabel to get the column name where as JDBC 3.0 uses both columnName or columnLabel._Unfortunately JDBC drivers behave differently so you can use this option to work out issues around your_JDBC driver if you get problem using this component_<p/>_This option is default <tt>true</tt>.__@param useJDBC4ColumnNameAndLabelSemantics  <tt>true</tt> to use JDBC 4.0 semantics, <tt>false</tt> to use JDBC 3.0.;public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics) {_        this.useJDBC4ColumnNameAndLabelSemantics = useJDBC4ColumnNameAndLabelSemantics__    };sets,whether,to,use,jdbc,4,or,jdbc,3,0,or,older,semantic,when,retrieving,column,name,p,jdbc,4,0,uses,column,label,to,get,the,column,name,where,as,jdbc,3,0,uses,both,column,name,or,column,label,unfortunately,jdbc,drivers,behave,differently,so,you,can,use,this,option,to,work,out,issues,around,your,jdbc,driver,if,you,get,problem,using,this,component,p,this,option,is,default,tt,true,tt,param,use,jdbc4column,name,and,label,semantics,tt,true,tt,to,use,jdbc,4,0,semantics,tt,false,tt,to,use,jdbc,3,0;public,void,set,use,jdbc4column,name,and,label,semantics,boolean,use,jdbc4column,name,and,label,semantics,this,use,jdbc4column,name,and,label,semantics,use,jdbc4column,name,and,label,semantics
JdbcEndpoint -> public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics);1297975937;Sets whether to use JDBC 4 or JDBC 3.0 or older semantic when retrieving column name._<p/>_JDBC 4.0 uses columnLabel to get the column name where as JDBC 3.0 uses both columnName or columnLabel._Unfortunately JDBC drivers behave differently so you can use this option to work out issues around your_JDBC driver if you get problem using this component_<p/>_This option is default <tt>true</tt>.__@param useJDBC4ColumnNameAndLabelSemantics  <tt>true</tt> to use JDBC 4.0 semantics, <tt>false</tt> to use JDBC 3.0.;public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics) {_        this.useJDBC4ColumnNameAndLabelSemantics = useJDBC4ColumnNameAndLabelSemantics__    };sets,whether,to,use,jdbc,4,or,jdbc,3,0,or,older,semantic,when,retrieving,column,name,p,jdbc,4,0,uses,column,label,to,get,the,column,name,where,as,jdbc,3,0,uses,both,column,name,or,column,label,unfortunately,jdbc,drivers,behave,differently,so,you,can,use,this,option,to,work,out,issues,around,your,jdbc,driver,if,you,get,problem,using,this,component,p,this,option,is,default,tt,true,tt,param,use,jdbc4column,name,and,label,semantics,tt,true,tt,to,use,jdbc,4,0,semantics,tt,false,tt,to,use,jdbc,3,0;public,void,set,use,jdbc4column,name,and,label,semantics,boolean,use,jdbc4column,name,and,label,semantics,this,use,jdbc4column,name,and,label,semantics,use,jdbc4column,name,and,label,semantics
JdbcEndpoint -> public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics);1303847897;Sets whether to use JDBC 4 or JDBC 3.0 or older semantic when retrieving column name._<p/>_JDBC 4.0 uses columnLabel to get the column name where as JDBC 3.0 uses both columnName or columnLabel._Unfortunately JDBC drivers behave differently so you can use this option to work out issues around your_JDBC driver if you get problem using this component_<p/>_This option is default <tt>true</tt>.__@param useJDBC4ColumnNameAndLabelSemantics  <tt>true</tt> to use JDBC 4.0 semantics, <tt>false</tt> to use JDBC 3.0.;public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics) {_        this.useJDBC4ColumnNameAndLabelSemantics = useJDBC4ColumnNameAndLabelSemantics__    };sets,whether,to,use,jdbc,4,or,jdbc,3,0,or,older,semantic,when,retrieving,column,name,p,jdbc,4,0,uses,column,label,to,get,the,column,name,where,as,jdbc,3,0,uses,both,column,name,or,column,label,unfortunately,jdbc,drivers,behave,differently,so,you,can,use,this,option,to,work,out,issues,around,your,jdbc,driver,if,you,get,problem,using,this,component,p,this,option,is,default,tt,true,tt,param,use,jdbc4column,name,and,label,semantics,tt,true,tt,to,use,jdbc,4,0,semantics,tt,false,tt,to,use,jdbc,3,0;public,void,set,use,jdbc4column,name,and,label,semantics,boolean,use,jdbc4column,name,and,label,semantics,this,use,jdbc4column,name,and,label,semantics,use,jdbc4column,name,and,label,semantics
JdbcEndpoint -> public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics);1311692742;Sets whether to use JDBC 4 or JDBC 3.0 or older semantic when retrieving column name._<p/>_JDBC 4.0 uses columnLabel to get the column name where as JDBC 3.0 uses both columnName or columnLabel._Unfortunately JDBC drivers behave differently so you can use this option to work out issues around your_JDBC driver if you get problem using this component_<p/>_This option is default <tt>true</tt>.__@param useJDBC4ColumnNameAndLabelSemantics  <tt>true</tt> to use JDBC 4.0 semantics, <tt>false</tt> to use JDBC 3.0.;public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics) {_        this.useJDBC4ColumnNameAndLabelSemantics = useJDBC4ColumnNameAndLabelSemantics__    };sets,whether,to,use,jdbc,4,or,jdbc,3,0,or,older,semantic,when,retrieving,column,name,p,jdbc,4,0,uses,column,label,to,get,the,column,name,where,as,jdbc,3,0,uses,both,column,name,or,column,label,unfortunately,jdbc,drivers,behave,differently,so,you,can,use,this,option,to,work,out,issues,around,your,jdbc,driver,if,you,get,problem,using,this,component,p,this,option,is,default,tt,true,tt,param,use,jdbc4column,name,and,label,semantics,tt,true,tt,to,use,jdbc,4,0,semantics,tt,false,tt,to,use,jdbc,3,0;public,void,set,use,jdbc4column,name,and,label,semantics,boolean,use,jdbc4column,name,and,label,semantics,this,use,jdbc4column,name,and,label,semantics,use,jdbc4column,name,and,label,semantics
JdbcEndpoint -> public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics);1370186569;Sets whether to use JDBC 4 or JDBC 3.0 or older semantic when retrieving column name._<p/>_JDBC 4.0 uses columnLabel to get the column name where as JDBC 3.0 uses both columnName or columnLabel._Unfortunately JDBC drivers behave differently so you can use this option to work out issues around your_JDBC driver if you get problem using this component_<p/>_This option is default <tt>true</tt>.__@param useJDBC4ColumnNameAndLabelSemantics_<tt>true</tt> to use JDBC 4.0 semantics, <tt>false</tt> to use JDBC 3.0.;public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics) {_        this.useJDBC4ColumnNameAndLabelSemantics = useJDBC4ColumnNameAndLabelSemantics__    };sets,whether,to,use,jdbc,4,or,jdbc,3,0,or,older,semantic,when,retrieving,column,name,p,jdbc,4,0,uses,column,label,to,get,the,column,name,where,as,jdbc,3,0,uses,both,column,name,or,column,label,unfortunately,jdbc,drivers,behave,differently,so,you,can,use,this,option,to,work,out,issues,around,your,jdbc,driver,if,you,get,problem,using,this,component,p,this,option,is,default,tt,true,tt,param,use,jdbc4column,name,and,label,semantics,tt,true,tt,to,use,jdbc,4,0,semantics,tt,false,tt,to,use,jdbc,3,0;public,void,set,use,jdbc4column,name,and,label,semantics,boolean,use,jdbc4column,name,and,label,semantics,this,use,jdbc4column,name,and,label,semantics,use,jdbc4column,name,and,label,semantics
JdbcEndpoint -> public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics);1379509253;Sets whether to use JDBC 4 or JDBC 3.0 or older semantic when retrieving column name._<p/>_JDBC 4.0 uses columnLabel to get the column name where as JDBC 3.0 uses both columnName or columnLabel._Unfortunately JDBC drivers behave differently so you can use this option to work out issues around your_JDBC driver if you get problem using this component_<p/>_This option is default <tt>true</tt>.__@param useJDBC4ColumnNameAndLabelSemantics_<tt>true</tt> to use JDBC 4.0 semantics, <tt>false</tt> to use JDBC 3.0.;public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics) {_        this.useJDBC4ColumnNameAndLabelSemantics = useJDBC4ColumnNameAndLabelSemantics__    };sets,whether,to,use,jdbc,4,or,jdbc,3,0,or,older,semantic,when,retrieving,column,name,p,jdbc,4,0,uses,column,label,to,get,the,column,name,where,as,jdbc,3,0,uses,both,column,name,or,column,label,unfortunately,jdbc,drivers,behave,differently,so,you,can,use,this,option,to,work,out,issues,around,your,jdbc,driver,if,you,get,problem,using,this,component,p,this,option,is,default,tt,true,tt,param,use,jdbc4column,name,and,label,semantics,tt,true,tt,to,use,jdbc,4,0,semantics,tt,false,tt,to,use,jdbc,3,0;public,void,set,use,jdbc4column,name,and,label,semantics,boolean,use,jdbc4column,name,and,label,semantics,this,use,jdbc4column,name,and,label,semantics,use,jdbc4column,name,and,label,semantics
JdbcEndpoint -> public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics);1379510934;Sets whether to use JDBC 4 or JDBC 3.0 or older semantic when retrieving column name._<p/>_JDBC 4.0 uses columnLabel to get the column name where as JDBC 3.0 uses both columnName or columnLabel._Unfortunately JDBC drivers behave differently so you can use this option to work out issues around your_JDBC driver if you get problem using this component_<p/>_This option is default <tt>true</tt>.__@param useJDBC4ColumnNameAndLabelSemantics_<tt>true</tt> to use JDBC 4.0 semantics, <tt>false</tt> to use JDBC 3.0.;public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics) {_        this.useJDBC4ColumnNameAndLabelSemantics = useJDBC4ColumnNameAndLabelSemantics__    };sets,whether,to,use,jdbc,4,or,jdbc,3,0,or,older,semantic,when,retrieving,column,name,p,jdbc,4,0,uses,column,label,to,get,the,column,name,where,as,jdbc,3,0,uses,both,column,name,or,column,label,unfortunately,jdbc,drivers,behave,differently,so,you,can,use,this,option,to,work,out,issues,around,your,jdbc,driver,if,you,get,problem,using,this,component,p,this,option,is,default,tt,true,tt,param,use,jdbc4column,name,and,label,semantics,tt,true,tt,to,use,jdbc,4,0,semantics,tt,false,tt,to,use,jdbc,3,0;public,void,set,use,jdbc4column,name,and,label,semantics,boolean,use,jdbc4column,name,and,label,semantics,this,use,jdbc4column,name,and,label,semantics,use,jdbc4column,name,and,label,semantics
JdbcEndpoint -> public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics);1405374721;Sets whether to use JDBC 4 or JDBC 3.0 or older semantic when retrieving column name._<p/>_JDBC 4.0 uses columnLabel to get the column name where as JDBC 3.0 uses both columnName or columnLabel._Unfortunately JDBC drivers behave differently so you can use this option to work out issues around your_JDBC driver if you get problem using this component_<p/>_This option is default <tt>true</tt>.__@param useJDBC4ColumnNameAndLabelSemantics_<tt>true</tt> to use JDBC 4.0 semantics, <tt>false</tt> to use JDBC 3.0.;public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics) {_        this.useJDBC4ColumnNameAndLabelSemantics = useJDBC4ColumnNameAndLabelSemantics__    };sets,whether,to,use,jdbc,4,or,jdbc,3,0,or,older,semantic,when,retrieving,column,name,p,jdbc,4,0,uses,column,label,to,get,the,column,name,where,as,jdbc,3,0,uses,both,column,name,or,column,label,unfortunately,jdbc,drivers,behave,differently,so,you,can,use,this,option,to,work,out,issues,around,your,jdbc,driver,if,you,get,problem,using,this,component,p,this,option,is,default,tt,true,tt,param,use,jdbc4column,name,and,label,semantics,tt,true,tt,to,use,jdbc,4,0,semantics,tt,false,tt,to,use,jdbc,3,0;public,void,set,use,jdbc4column,name,and,label,semantics,boolean,use,jdbc4column,name,and,label,semantics,this,use,jdbc4column,name,and,label,semantics,use,jdbc4column,name,and,label,semantics
JdbcEndpoint -> public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics);1415211488;Sets whether to use JDBC 4 or JDBC 3.0 or older semantic when retrieving column name._<p/>_JDBC 4.0 uses columnLabel to get the column name where as JDBC 3.0 uses both columnName or columnLabel._Unfortunately JDBC drivers behave differently so you can use this option to work out issues around your_JDBC driver if you get problem using this component_<p/>_This option is default <tt>true</tt>.__@param useJDBC4ColumnNameAndLabelSemantics_<tt>true</tt> to use JDBC 4.0 semantics, <tt>false</tt> to use JDBC 3.0.;public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics) {_        this.useJDBC4ColumnNameAndLabelSemantics = useJDBC4ColumnNameAndLabelSemantics__    };sets,whether,to,use,jdbc,4,or,jdbc,3,0,or,older,semantic,when,retrieving,column,name,p,jdbc,4,0,uses,column,label,to,get,the,column,name,where,as,jdbc,3,0,uses,both,column,name,or,column,label,unfortunately,jdbc,drivers,behave,differently,so,you,can,use,this,option,to,work,out,issues,around,your,jdbc,driver,if,you,get,problem,using,this,component,p,this,option,is,default,tt,true,tt,param,use,jdbc4column,name,and,label,semantics,tt,true,tt,to,use,jdbc,4,0,semantics,tt,false,tt,to,use,jdbc,3,0;public,void,set,use,jdbc4column,name,and,label,semantics,boolean,use,jdbc4column,name,and,label,semantics,this,use,jdbc4column,name,and,label,semantics,use,jdbc4column,name,and,label,semantics
JdbcEndpoint -> public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics);1416561667;Sets whether to use JDBC 4 or JDBC 3.0 or older semantic when retrieving column name._<p/>_JDBC 4.0 uses columnLabel to get the column name where as JDBC 3.0 uses both columnName or columnLabel._Unfortunately JDBC drivers behave differently so you can use this option to work out issues around your_JDBC driver if you get problem using this component_<p/>_This option is default <tt>true</tt>.__@param useJDBC4ColumnNameAndLabelSemantics_<tt>true</tt> to use JDBC 4.0 semantics, <tt>false</tt> to use JDBC 3.0.;public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics) {_        this.useJDBC4ColumnNameAndLabelSemantics = useJDBC4ColumnNameAndLabelSemantics__    };sets,whether,to,use,jdbc,4,or,jdbc,3,0,or,older,semantic,when,retrieving,column,name,p,jdbc,4,0,uses,column,label,to,get,the,column,name,where,as,jdbc,3,0,uses,both,column,name,or,column,label,unfortunately,jdbc,drivers,behave,differently,so,you,can,use,this,option,to,work,out,issues,around,your,jdbc,driver,if,you,get,problem,using,this,component,p,this,option,is,default,tt,true,tt,param,use,jdbc4column,name,and,label,semantics,tt,true,tt,to,use,jdbc,4,0,semantics,tt,false,tt,to,use,jdbc,3,0;public,void,set,use,jdbc4column,name,and,label,semantics,boolean,use,jdbc4column,name,and,label,semantics,this,use,jdbc4column,name,and,label,semantics,use,jdbc4column,name,and,label,semantics
JdbcEndpoint -> public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics);1416823940;Sets whether to use JDBC 4 or JDBC 3.0 or older semantic when retrieving column name._<p/>_JDBC 4.0 uses columnLabel to get the column name where as JDBC 3.0 uses both columnName or columnLabel._Unfortunately JDBC drivers behave differently so you can use this option to work out issues around your_JDBC driver if you get problem using this component_<p/>_This option is default <tt>true</tt>.__@param useJDBC4ColumnNameAndLabelSemantics_<tt>true</tt> to use JDBC 4.0 semantics, <tt>false</tt> to use JDBC 3.0.;public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics) {_        this.useJDBC4ColumnNameAndLabelSemantics = useJDBC4ColumnNameAndLabelSemantics__    };sets,whether,to,use,jdbc,4,or,jdbc,3,0,or,older,semantic,when,retrieving,column,name,p,jdbc,4,0,uses,column,label,to,get,the,column,name,where,as,jdbc,3,0,uses,both,column,name,or,column,label,unfortunately,jdbc,drivers,behave,differently,so,you,can,use,this,option,to,work,out,issues,around,your,jdbc,driver,if,you,get,problem,using,this,component,p,this,option,is,default,tt,true,tt,param,use,jdbc4column,name,and,label,semantics,tt,true,tt,to,use,jdbc,4,0,semantics,tt,false,tt,to,use,jdbc,3,0;public,void,set,use,jdbc4column,name,and,label,semantics,boolean,use,jdbc4column,name,and,label,semantics,this,use,jdbc4column,name,and,label,semantics,use,jdbc4column,name,and,label,semantics
JdbcEndpoint -> public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics);1423750790;Sets whether to use JDBC 4 or JDBC 3.0 or older semantic when retrieving column name._<p/>_JDBC 4.0 uses columnLabel to get the column name where as JDBC 3.0 uses both columnName or columnLabel._Unfortunately JDBC drivers behave differently so you can use this option to work out issues around your_JDBC driver if you get problem using this component_<p/>_This option is default <tt>true</tt>.__@param useJDBC4ColumnNameAndLabelSemantics_<tt>true</tt> to use JDBC 4.0 semantics, <tt>false</tt> to use JDBC 3.0.;public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics) {_        this.useJDBC4ColumnNameAndLabelSemantics = useJDBC4ColumnNameAndLabelSemantics__    };sets,whether,to,use,jdbc,4,or,jdbc,3,0,or,older,semantic,when,retrieving,column,name,p,jdbc,4,0,uses,column,label,to,get,the,column,name,where,as,jdbc,3,0,uses,both,column,name,or,column,label,unfortunately,jdbc,drivers,behave,differently,so,you,can,use,this,option,to,work,out,issues,around,your,jdbc,driver,if,you,get,problem,using,this,component,p,this,option,is,default,tt,true,tt,param,use,jdbc4column,name,and,label,semantics,tt,true,tt,to,use,jdbc,4,0,semantics,tt,false,tt,to,use,jdbc,3,0;public,void,set,use,jdbc4column,name,and,label,semantics,boolean,use,jdbc4column,name,and,label,semantics,this,use,jdbc4column,name,and,label,semantics,use,jdbc4column,name,and,label,semantics
JdbcEndpoint -> public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics);1425142361;Sets whether to use JDBC 4 or JDBC 3.0 or older semantic when retrieving column name._<p/>_JDBC 4.0 uses columnLabel to get the column name where as JDBC 3.0 uses both columnName or columnLabel._Unfortunately JDBC drivers behave differently so you can use this option to work out issues around your_JDBC driver if you get problem using this component_<p/>_This option is default <tt>true</tt>.__@param useJDBC4ColumnNameAndLabelSemantics_<tt>true</tt> to use JDBC 4.0 semantics, <tt>false</tt> to use JDBC 3.0.;public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics) {_        this.useJDBC4ColumnNameAndLabelSemantics = useJDBC4ColumnNameAndLabelSemantics__    };sets,whether,to,use,jdbc,4,or,jdbc,3,0,or,older,semantic,when,retrieving,column,name,p,jdbc,4,0,uses,column,label,to,get,the,column,name,where,as,jdbc,3,0,uses,both,column,name,or,column,label,unfortunately,jdbc,drivers,behave,differently,so,you,can,use,this,option,to,work,out,issues,around,your,jdbc,driver,if,you,get,problem,using,this,component,p,this,option,is,default,tt,true,tt,param,use,jdbc4column,name,and,label,semantics,tt,true,tt,to,use,jdbc,4,0,semantics,tt,false,tt,to,use,jdbc,3,0;public,void,set,use,jdbc4column,name,and,label,semantics,boolean,use,jdbc4column,name,and,label,semantics,this,use,jdbc4column,name,and,label,semantics,use,jdbc4column,name,and,label,semantics
JdbcEndpoint -> public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics);1425581084;Sets whether to use JDBC 4 or JDBC 3.0 or older semantic when retrieving column name._<p/>_JDBC 4.0 uses columnLabel to get the column name where as JDBC 3.0 uses both columnName or columnLabel._Unfortunately JDBC drivers behave differently so you can use this option to work out issues around your_JDBC driver if you get problem using this component_<p/>_This option is default <tt>true</tt>.__@param useJDBC4ColumnNameAndLabelSemantics_<tt>true</tt> to use JDBC 4.0 semantics, <tt>false</tt> to use JDBC 3.0.;public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics) {_        this.useJDBC4ColumnNameAndLabelSemantics = useJDBC4ColumnNameAndLabelSemantics__    };sets,whether,to,use,jdbc,4,or,jdbc,3,0,or,older,semantic,when,retrieving,column,name,p,jdbc,4,0,uses,column,label,to,get,the,column,name,where,as,jdbc,3,0,uses,both,column,name,or,column,label,unfortunately,jdbc,drivers,behave,differently,so,you,can,use,this,option,to,work,out,issues,around,your,jdbc,driver,if,you,get,problem,using,this,component,p,this,option,is,default,tt,true,tt,param,use,jdbc4column,name,and,label,semantics,tt,true,tt,to,use,jdbc,4,0,semantics,tt,false,tt,to,use,jdbc,3,0;public,void,set,use,jdbc4column,name,and,label,semantics,boolean,use,jdbc4column,name,and,label,semantics,this,use,jdbc4column,name,and,label,semantics,use,jdbc4column,name,and,label,semantics
JdbcEndpoint -> public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics);1427402378;Sets whether to use JDBC 4 or JDBC 3.0 or older semantic when retrieving column name._<p/>_JDBC 4.0 uses columnLabel to get the column name where as JDBC 3.0 uses both columnName or columnLabel._Unfortunately JDBC drivers behave differently so you can use this option to work out issues around your_JDBC driver if you get problem using this component_<p/>_This option is default <tt>true</tt>.__@param useJDBC4ColumnNameAndLabelSemantics_<tt>true</tt> to use JDBC 4.0 semantics, <tt>false</tt> to use JDBC 3.0.;public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics) {_        this.useJDBC4ColumnNameAndLabelSemantics = useJDBC4ColumnNameAndLabelSemantics__    };sets,whether,to,use,jdbc,4,or,jdbc,3,0,or,older,semantic,when,retrieving,column,name,p,jdbc,4,0,uses,column,label,to,get,the,column,name,where,as,jdbc,3,0,uses,both,column,name,or,column,label,unfortunately,jdbc,drivers,behave,differently,so,you,can,use,this,option,to,work,out,issues,around,your,jdbc,driver,if,you,get,problem,using,this,component,p,this,option,is,default,tt,true,tt,param,use,jdbc4column,name,and,label,semantics,tt,true,tt,to,use,jdbc,4,0,semantics,tt,false,tt,to,use,jdbc,3,0;public,void,set,use,jdbc4column,name,and,label,semantics,boolean,use,jdbc4column,name,and,label,semantics,this,use,jdbc4column,name,and,label,semantics,use,jdbc4column,name,and,label,semantics
JdbcEndpoint -> public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics);1427880501;Sets whether to use JDBC 4 or JDBC 3.0 or older semantic when retrieving column name._<p/>_JDBC 4.0 uses columnLabel to get the column name where as JDBC 3.0 uses both columnName or columnLabel._Unfortunately JDBC drivers behave differently so you can use this option to work out issues around your_JDBC driver if you get problem using this component_<p/>_This option is default <tt>true</tt>.__@param useJDBC4ColumnNameAndLabelSemantics_<tt>true</tt> to use JDBC 4.0 semantics, <tt>false</tt> to use JDBC 3.0.;public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics) {_        this.useJDBC4ColumnNameAndLabelSemantics = useJDBC4ColumnNameAndLabelSemantics__    };sets,whether,to,use,jdbc,4,or,jdbc,3,0,or,older,semantic,when,retrieving,column,name,p,jdbc,4,0,uses,column,label,to,get,the,column,name,where,as,jdbc,3,0,uses,both,column,name,or,column,label,unfortunately,jdbc,drivers,behave,differently,so,you,can,use,this,option,to,work,out,issues,around,your,jdbc,driver,if,you,get,problem,using,this,component,p,this,option,is,default,tt,true,tt,param,use,jdbc4column,name,and,label,semantics,tt,true,tt,to,use,jdbc,4,0,semantics,tt,false,tt,to,use,jdbc,3,0;public,void,set,use,jdbc4column,name,and,label,semantics,boolean,use,jdbc4column,name,and,label,semantics,this,use,jdbc4column,name,and,label,semantics,use,jdbc4column,name,and,label,semantics
JdbcEndpoint -> public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics);1429015317;Sets whether to use JDBC 4 or JDBC 3.0 or older semantic when retrieving column name._<p/>_JDBC 4.0 uses columnLabel to get the column name where as JDBC 3.0 uses both columnName or columnLabel._Unfortunately JDBC drivers behave differently so you can use this option to work out issues around your_JDBC driver if you get problem using this component_<p/>_This option is default <tt>true</tt>.__@param useJDBC4ColumnNameAndLabelSemantics <tt>true</tt> to use JDBC 4.0 semantics, <tt>false</tt> to use JDBC 3.0.;public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics) {_        this.useJDBC4ColumnNameAndLabelSemantics = useJDBC4ColumnNameAndLabelSemantics__    };sets,whether,to,use,jdbc,4,or,jdbc,3,0,or,older,semantic,when,retrieving,column,name,p,jdbc,4,0,uses,column,label,to,get,the,column,name,where,as,jdbc,3,0,uses,both,column,name,or,column,label,unfortunately,jdbc,drivers,behave,differently,so,you,can,use,this,option,to,work,out,issues,around,your,jdbc,driver,if,you,get,problem,using,this,component,p,this,option,is,default,tt,true,tt,param,use,jdbc4column,name,and,label,semantics,tt,true,tt,to,use,jdbc,4,0,semantics,tt,false,tt,to,use,jdbc,3,0;public,void,set,use,jdbc4column,name,and,label,semantics,boolean,use,jdbc4column,name,and,label,semantics,this,use,jdbc4column,name,and,label,semantics,use,jdbc4column,name,and,label,semantics
JdbcEndpoint -> public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics);1432903710;Sets whether to use JDBC 4 or JDBC 3.0 or older semantic when retrieving column name._<p/>_JDBC 4.0 uses columnLabel to get the column name where as JDBC 3.0 uses both columnName or columnLabel._Unfortunately JDBC drivers behave differently so you can use this option to work out issues around your_JDBC driver if you get problem using this component_<p/>_This option is default <tt>true</tt>.__@param useJDBC4ColumnNameAndLabelSemantics <tt>true</tt> to use JDBC 4.0 semantics, <tt>false</tt> to use JDBC 3.0.;public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics) {_        this.useJDBC4ColumnNameAndLabelSemantics = useJDBC4ColumnNameAndLabelSemantics__    };sets,whether,to,use,jdbc,4,or,jdbc,3,0,or,older,semantic,when,retrieving,column,name,p,jdbc,4,0,uses,column,label,to,get,the,column,name,where,as,jdbc,3,0,uses,both,column,name,or,column,label,unfortunately,jdbc,drivers,behave,differently,so,you,can,use,this,option,to,work,out,issues,around,your,jdbc,driver,if,you,get,problem,using,this,component,p,this,option,is,default,tt,true,tt,param,use,jdbc4column,name,and,label,semantics,tt,true,tt,to,use,jdbc,4,0,semantics,tt,false,tt,to,use,jdbc,3,0;public,void,set,use,jdbc4column,name,and,label,semantics,boolean,use,jdbc4column,name,and,label,semantics,this,use,jdbc4column,name,and,label,semantics,use,jdbc4column,name,and,label,semantics
JdbcEndpoint -> public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics);1443508472;Sets whether to use JDBC 4 or JDBC 3.0 or older semantic when retrieving column name._<p/>_JDBC 4.0 uses columnLabel to get the column name where as JDBC 3.0 uses both columnName or columnLabel._Unfortunately JDBC drivers behave differently so you can use this option to work out issues around your_JDBC driver if you get problem using this component_<p/>_This option is default <tt>true</tt>.__@param useJDBC4ColumnNameAndLabelSemantics <tt>true</tt> to use JDBC 4.0 semantics, <tt>false</tt> to use JDBC 3.0.;public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics) {_        this.useJDBC4ColumnNameAndLabelSemantics = useJDBC4ColumnNameAndLabelSemantics__    };sets,whether,to,use,jdbc,4,or,jdbc,3,0,or,older,semantic,when,retrieving,column,name,p,jdbc,4,0,uses,column,label,to,get,the,column,name,where,as,jdbc,3,0,uses,both,column,name,or,column,label,unfortunately,jdbc,drivers,behave,differently,so,you,can,use,this,option,to,work,out,issues,around,your,jdbc,driver,if,you,get,problem,using,this,component,p,this,option,is,default,tt,true,tt,param,use,jdbc4column,name,and,label,semantics,tt,true,tt,to,use,jdbc,4,0,semantics,tt,false,tt,to,use,jdbc,3,0;public,void,set,use,jdbc4column,name,and,label,semantics,boolean,use,jdbc4column,name,and,label,semantics,this,use,jdbc4column,name,and,label,semantics,use,jdbc4column,name,and,label,semantics
JdbcEndpoint -> public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics);1451237126;Sets whether to use JDBC 4 or JDBC 3.0 or older semantic when retrieving column name._<p/>_JDBC 4.0 uses columnLabel to get the column name where as JDBC 3.0 uses both columnName or columnLabel._Unfortunately JDBC drivers behave differently so you can use this option to work out issues around your_JDBC driver if you get problem using this component_<p/>_This option is default <tt>true</tt>.__@param useJDBC4ColumnNameAndLabelSemantics <tt>true</tt> to use JDBC 4.0 semantics, <tt>false</tt> to use JDBC 3.0.;public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics) {_        this.useJDBC4ColumnNameAndLabelSemantics = useJDBC4ColumnNameAndLabelSemantics__    };sets,whether,to,use,jdbc,4,or,jdbc,3,0,or,older,semantic,when,retrieving,column,name,p,jdbc,4,0,uses,column,label,to,get,the,column,name,where,as,jdbc,3,0,uses,both,column,name,or,column,label,unfortunately,jdbc,drivers,behave,differently,so,you,can,use,this,option,to,work,out,issues,around,your,jdbc,driver,if,you,get,problem,using,this,component,p,this,option,is,default,tt,true,tt,param,use,jdbc4column,name,and,label,semantics,tt,true,tt,to,use,jdbc,4,0,semantics,tt,false,tt,to,use,jdbc,3,0;public,void,set,use,jdbc4column,name,and,label,semantics,boolean,use,jdbc4column,name,and,label,semantics,this,use,jdbc4column,name,and,label,semantics,use,jdbc4column,name,and,label,semantics
JdbcEndpoint -> public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics);1451910300;Sets whether to use JDBC 4 or JDBC 3.0 or older semantic when retrieving column name._<p/>_JDBC 4.0 uses columnLabel to get the column name where as JDBC 3.0 uses both columnName or columnLabel._Unfortunately JDBC drivers behave differently so you can use this option to work out issues around your_JDBC driver if you get problem using this component_<p/>_This option is default <tt>true</tt>.__@param useJDBC4ColumnNameAndLabelSemantics <tt>true</tt> to use JDBC 4.0 semantics, <tt>false</tt> to use JDBC 3.0.;public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics) {_        this.useJDBC4ColumnNameAndLabelSemantics = useJDBC4ColumnNameAndLabelSemantics__    };sets,whether,to,use,jdbc,4,or,jdbc,3,0,or,older,semantic,when,retrieving,column,name,p,jdbc,4,0,uses,column,label,to,get,the,column,name,where,as,jdbc,3,0,uses,both,column,name,or,column,label,unfortunately,jdbc,drivers,behave,differently,so,you,can,use,this,option,to,work,out,issues,around,your,jdbc,driver,if,you,get,problem,using,this,component,p,this,option,is,default,tt,true,tt,param,use,jdbc4column,name,and,label,semantics,tt,true,tt,to,use,jdbc,4,0,semantics,tt,false,tt,to,use,jdbc,3,0;public,void,set,use,jdbc4column,name,and,label,semantics,boolean,use,jdbc4column,name,and,label,semantics,this,use,jdbc4column,name,and,label,semantics,use,jdbc4column,name,and,label,semantics
JdbcEndpoint -> public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics);1482328198;Sets whether to use JDBC 4 or JDBC 3.0 or older semantic when retrieving column name._<p/>_JDBC 4.0 uses columnLabel to get the column name where as JDBC 3.0 uses both columnName or columnLabel._Unfortunately JDBC drivers behave differently so you can use this option to work out issues around your_JDBC driver if you get problem using this component_<p/>_This option is default <tt>true</tt>.__@param useJDBC4ColumnNameAndLabelSemantics <tt>true</tt> to use JDBC 4.0 semantics, <tt>false</tt> to use JDBC 3.0.;public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics) {_        this.useJDBC4ColumnNameAndLabelSemantics = useJDBC4ColumnNameAndLabelSemantics__    };sets,whether,to,use,jdbc,4,or,jdbc,3,0,or,older,semantic,when,retrieving,column,name,p,jdbc,4,0,uses,column,label,to,get,the,column,name,where,as,jdbc,3,0,uses,both,column,name,or,column,label,unfortunately,jdbc,drivers,behave,differently,so,you,can,use,this,option,to,work,out,issues,around,your,jdbc,driver,if,you,get,problem,using,this,component,p,this,option,is,default,tt,true,tt,param,use,jdbc4column,name,and,label,semantics,tt,true,tt,to,use,jdbc,4,0,semantics,tt,false,tt,to,use,jdbc,3,0;public,void,set,use,jdbc4column,name,and,label,semantics,boolean,use,jdbc4column,name,and,label,semantics,this,use,jdbc4column,name,and,label,semantics,use,jdbc4column,name,and,label,semantics
JdbcEndpoint -> public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics);1485968451;Sets whether to use JDBC 4 or JDBC 3.0 or older semantic when retrieving column name._<p/>_JDBC 4.0 uses columnLabel to get the column name where as JDBC 3.0 uses both columnName or columnLabel._Unfortunately JDBC drivers behave differently so you can use this option to work out issues around your_JDBC driver if you get problem using this component_<p/>_This option is default <tt>true</tt>.__@param useJDBC4ColumnNameAndLabelSemantics <tt>true</tt> to use JDBC 4.0 semantics, <tt>false</tt> to use JDBC 3.0.;public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics) {_        this.useJDBC4ColumnNameAndLabelSemantics = useJDBC4ColumnNameAndLabelSemantics__    };sets,whether,to,use,jdbc,4,or,jdbc,3,0,or,older,semantic,when,retrieving,column,name,p,jdbc,4,0,uses,column,label,to,get,the,column,name,where,as,jdbc,3,0,uses,both,column,name,or,column,label,unfortunately,jdbc,drivers,behave,differently,so,you,can,use,this,option,to,work,out,issues,around,your,jdbc,driver,if,you,get,problem,using,this,component,p,this,option,is,default,tt,true,tt,param,use,jdbc4column,name,and,label,semantics,tt,true,tt,to,use,jdbc,4,0,semantics,tt,false,tt,to,use,jdbc,3,0;public,void,set,use,jdbc4column,name,and,label,semantics,boolean,use,jdbc4column,name,and,label,semantics,this,use,jdbc4column,name,and,label,semantics,use,jdbc4column,name,and,label,semantics
JdbcEndpoint -> public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics);1518772634;Sets whether to use JDBC 4 or JDBC 3.0 or older semantic when retrieving column name._<p/>_JDBC 4.0 uses columnLabel to get the column name where as JDBC 3.0 uses both columnName or columnLabel._Unfortunately JDBC drivers behave differently so you can use this option to work out issues around your_JDBC driver if you get problem using this component_<p/>_This option is default <tt>true</tt>.__@param useJDBC4ColumnNameAndLabelSemantics <tt>true</tt> to use JDBC 4.0 semantics, <tt>false</tt> to use JDBC 3.0.;public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics) {_        this.useJDBC4ColumnNameAndLabelSemantics = useJDBC4ColumnNameAndLabelSemantics__    };sets,whether,to,use,jdbc,4,or,jdbc,3,0,or,older,semantic,when,retrieving,column,name,p,jdbc,4,0,uses,column,label,to,get,the,column,name,where,as,jdbc,3,0,uses,both,column,name,or,column,label,unfortunately,jdbc,drivers,behave,differently,so,you,can,use,this,option,to,work,out,issues,around,your,jdbc,driver,if,you,get,problem,using,this,component,p,this,option,is,default,tt,true,tt,param,use,jdbc4column,name,and,label,semantics,tt,true,tt,to,use,jdbc,4,0,semantics,tt,false,tt,to,use,jdbc,3,0;public,void,set,use,jdbc4column,name,and,label,semantics,boolean,use,jdbc4column,name,and,label,semantics,this,use,jdbc4column,name,and,label,semantics,use,jdbc4column,name,and,label,semantics
JdbcEndpoint -> public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics);1531383099;Sets whether to use JDBC 4 or JDBC 3.0 or older semantic when retrieving column name._<p/>_JDBC 4.0 uses columnLabel to get the column name where as JDBC 3.0 uses both columnName or columnLabel._Unfortunately JDBC drivers behave differently so you can use this option to work out issues around your_JDBC driver if you get problem using this component_<p/>_This option is default <tt>true</tt>.__@param useJDBC4ColumnNameAndLabelSemantics <tt>true</tt> to use JDBC 4.0 semantics, <tt>false</tt> to use JDBC 3.0.;public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics) {_        this.useJDBC4ColumnNameAndLabelSemantics = useJDBC4ColumnNameAndLabelSemantics__    };sets,whether,to,use,jdbc,4,or,jdbc,3,0,or,older,semantic,when,retrieving,column,name,p,jdbc,4,0,uses,column,label,to,get,the,column,name,where,as,jdbc,3,0,uses,both,column,name,or,column,label,unfortunately,jdbc,drivers,behave,differently,so,you,can,use,this,option,to,work,out,issues,around,your,jdbc,driver,if,you,get,problem,using,this,component,p,this,option,is,default,tt,true,tt,param,use,jdbc4column,name,and,label,semantics,tt,true,tt,to,use,jdbc,4,0,semantics,tt,false,tt,to,use,jdbc,3,0;public,void,set,use,jdbc4column,name,and,label,semantics,boolean,use,jdbc4column,name,and,label,semantics,this,use,jdbc4column,name,and,label,semantics,use,jdbc4column,name,and,label,semantics
JdbcEndpoint -> public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics);1540108163;Sets whether to use JDBC 4 or JDBC 3.0 or older semantic when retrieving column name._<p/>_JDBC 4.0 uses columnLabel to get the column name where as JDBC 3.0 uses both columnName or columnLabel._Unfortunately JDBC drivers behave differently so you can use this option to work out issues around your_JDBC driver if you get problem using this component_<p/>_This option is default <tt>true</tt>.__@param useJDBC4ColumnNameAndLabelSemantics <tt>true</tt> to use JDBC 4.0 semantics, <tt>false</tt> to use JDBC 3.0.;public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics) {_        this.useJDBC4ColumnNameAndLabelSemantics = useJDBC4ColumnNameAndLabelSemantics__    };sets,whether,to,use,jdbc,4,or,jdbc,3,0,or,older,semantic,when,retrieving,column,name,p,jdbc,4,0,uses,column,label,to,get,the,column,name,where,as,jdbc,3,0,uses,both,column,name,or,column,label,unfortunately,jdbc,drivers,behave,differently,so,you,can,use,this,option,to,work,out,issues,around,your,jdbc,driver,if,you,get,problem,using,this,component,p,this,option,is,default,tt,true,tt,param,use,jdbc4column,name,and,label,semantics,tt,true,tt,to,use,jdbc,4,0,semantics,tt,false,tt,to,use,jdbc,3,0;public,void,set,use,jdbc4column,name,and,label,semantics,boolean,use,jdbc4column,name,and,label,semantics,this,use,jdbc4column,name,and,label,semantics,use,jdbc4column,name,and,label,semantics
JdbcEndpoint -> public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics);1547240981;Sets whether to use JDBC 4 or JDBC 3.0 or older semantic when retrieving column name._<p/>_JDBC 4.0 uses columnLabel to get the column name where as JDBC 3.0 uses both columnName or columnLabel._Unfortunately JDBC drivers behave differently so you can use this option to work out issues around your_JDBC driver if you get problem using this component_<p/>_This option is default <tt>true</tt>.__@param useJDBC4ColumnNameAndLabelSemantics <tt>true</tt> to use JDBC 4.0 semantics, <tt>false</tt> to use JDBC 3.0.;public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics) {_        this.useJDBC4ColumnNameAndLabelSemantics = useJDBC4ColumnNameAndLabelSemantics__    };sets,whether,to,use,jdbc,4,or,jdbc,3,0,or,older,semantic,when,retrieving,column,name,p,jdbc,4,0,uses,column,label,to,get,the,column,name,where,as,jdbc,3,0,uses,both,column,name,or,column,label,unfortunately,jdbc,drivers,behave,differently,so,you,can,use,this,option,to,work,out,issues,around,your,jdbc,driver,if,you,get,problem,using,this,component,p,this,option,is,default,tt,true,tt,param,use,jdbc4column,name,and,label,semantics,tt,true,tt,to,use,jdbc,4,0,semantics,tt,false,tt,to,use,jdbc,3,0;public,void,set,use,jdbc4column,name,and,label,semantics,boolean,use,jdbc4column,name,and,label,semantics,this,use,jdbc4column,name,and,label,semantics,use,jdbc4column,name,and,label,semantics
JdbcEndpoint -> public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics);1548055099;Sets whether to use JDBC 4 or JDBC 3.0 or older semantic when retrieving column name._<p/>_JDBC 4.0 uses columnLabel to get the column name where as JDBC 3.0 uses both columnName or columnLabel._Unfortunately JDBC drivers behave differently so you can use this option to work out issues around your_JDBC driver if you get problem using this component_<p/>_This option is default <tt>true</tt>.__@param useJDBC4ColumnNameAndLabelSemantics <tt>true</tt> to use JDBC 4.0 semantics, <tt>false</tt> to use JDBC 3.0.;public void setUseJDBC4ColumnNameAndLabelSemantics(boolean useJDBC4ColumnNameAndLabelSemantics) {_        this.useJDBC4ColumnNameAndLabelSemantics = useJDBC4ColumnNameAndLabelSemantics__    };sets,whether,to,use,jdbc,4,or,jdbc,3,0,or,older,semantic,when,retrieving,column,name,p,jdbc,4,0,uses,column,label,to,get,the,column,name,where,as,jdbc,3,0,uses,both,column,name,or,column,label,unfortunately,jdbc,drivers,behave,differently,so,you,can,use,this,option,to,work,out,issues,around,your,jdbc,driver,if,you,get,problem,using,this,component,p,this,option,is,default,tt,true,tt,param,use,jdbc4column,name,and,label,semantics,tt,true,tt,to,use,jdbc,4,0,semantics,tt,false,tt,to,use,jdbc,3,0;public,void,set,use,jdbc4column,name,and,label,semantics,boolean,use,jdbc4column,name,and,label,semantics,this,use,jdbc4column,name,and,label,semantics,use,jdbc4column,name,and,label,semantics
JdbcEndpoint -> public void setUseHeadersAsParameters(boolean useHeadersAsParameters);1429015317;Set this option to true to use the prepareStatementStrategy with named parameters._This allows to define queries with named placeholders, and use headers with the dynamic values for the query placeholders.;public void setUseHeadersAsParameters(boolean useHeadersAsParameters) {_        this.useHeadersAsParameters = useHeadersAsParameters__    };set,this,option,to,true,to,use,the,prepare,statement,strategy,with,named,parameters,this,allows,to,define,queries,with,named,placeholders,and,use,headers,with,the,dynamic,values,for,the,query,placeholders;public,void,set,use,headers,as,parameters,boolean,use,headers,as,parameters,this,use,headers,as,parameters,use,headers,as,parameters
JdbcEndpoint -> public void setUseHeadersAsParameters(boolean useHeadersAsParameters);1432903710;Set this option to true to use the prepareStatementStrategy with named parameters._This allows to define queries with named placeholders, and use headers with the dynamic values for the query placeholders.;public void setUseHeadersAsParameters(boolean useHeadersAsParameters) {_        this.useHeadersAsParameters = useHeadersAsParameters__    };set,this,option,to,true,to,use,the,prepare,statement,strategy,with,named,parameters,this,allows,to,define,queries,with,named,placeholders,and,use,headers,with,the,dynamic,values,for,the,query,placeholders;public,void,set,use,headers,as,parameters,boolean,use,headers,as,parameters,this,use,headers,as,parameters,use,headers,as,parameters
JdbcEndpoint -> public void setUseHeadersAsParameters(boolean useHeadersAsParameters);1443508472;Set this option to true to use the prepareStatementStrategy with named parameters._This allows to define queries with named placeholders, and use headers with the dynamic values for the query placeholders.;public void setUseHeadersAsParameters(boolean useHeadersAsParameters) {_        this.useHeadersAsParameters = useHeadersAsParameters__    };set,this,option,to,true,to,use,the,prepare,statement,strategy,with,named,parameters,this,allows,to,define,queries,with,named,placeholders,and,use,headers,with,the,dynamic,values,for,the,query,placeholders;public,void,set,use,headers,as,parameters,boolean,use,headers,as,parameters,this,use,headers,as,parameters,use,headers,as,parameters
JdbcEndpoint -> public void setUseHeadersAsParameters(boolean useHeadersAsParameters);1451237126;Set this option to true to use the prepareStatementStrategy with named parameters._This allows to define queries with named placeholders, and use headers with the dynamic values for the query placeholders.;public void setUseHeadersAsParameters(boolean useHeadersAsParameters) {_        this.useHeadersAsParameters = useHeadersAsParameters__    };set,this,option,to,true,to,use,the,prepare,statement,strategy,with,named,parameters,this,allows,to,define,queries,with,named,placeholders,and,use,headers,with,the,dynamic,values,for,the,query,placeholders;public,void,set,use,headers,as,parameters,boolean,use,headers,as,parameters,this,use,headers,as,parameters,use,headers,as,parameters
JdbcEndpoint -> public void setUseHeadersAsParameters(boolean useHeadersAsParameters);1451910300;Set this option to true to use the prepareStatementStrategy with named parameters._This allows to define queries with named placeholders, and use headers with the dynamic values for the query placeholders.;public void setUseHeadersAsParameters(boolean useHeadersAsParameters) {_        this.useHeadersAsParameters = useHeadersAsParameters__    };set,this,option,to,true,to,use,the,prepare,statement,strategy,with,named,parameters,this,allows,to,define,queries,with,named,placeholders,and,use,headers,with,the,dynamic,values,for,the,query,placeholders;public,void,set,use,headers,as,parameters,boolean,use,headers,as,parameters,this,use,headers,as,parameters,use,headers,as,parameters
JdbcEndpoint -> public void setUseHeadersAsParameters(boolean useHeadersAsParameters);1482328198;Set this option to true to use the prepareStatementStrategy with named parameters._This allows to define queries with named placeholders, and use headers with the dynamic values for the query placeholders.;public void setUseHeadersAsParameters(boolean useHeadersAsParameters) {_        this.useHeadersAsParameters = useHeadersAsParameters__    };set,this,option,to,true,to,use,the,prepare,statement,strategy,with,named,parameters,this,allows,to,define,queries,with,named,placeholders,and,use,headers,with,the,dynamic,values,for,the,query,placeholders;public,void,set,use,headers,as,parameters,boolean,use,headers,as,parameters,this,use,headers,as,parameters,use,headers,as,parameters
JdbcEndpoint -> public void setUseHeadersAsParameters(boolean useHeadersAsParameters);1485968451;Set this option to true to use the prepareStatementStrategy with named parameters._This allows to define queries with named placeholders, and use headers with the dynamic values for the query placeholders.;public void setUseHeadersAsParameters(boolean useHeadersAsParameters) {_        this.useHeadersAsParameters = useHeadersAsParameters__    };set,this,option,to,true,to,use,the,prepare,statement,strategy,with,named,parameters,this,allows,to,define,queries,with,named,placeholders,and,use,headers,with,the,dynamic,values,for,the,query,placeholders;public,void,set,use,headers,as,parameters,boolean,use,headers,as,parameters,this,use,headers,as,parameters,use,headers,as,parameters
JdbcEndpoint -> public void setUseHeadersAsParameters(boolean useHeadersAsParameters);1518772634;Set this option to true to use the prepareStatementStrategy with named parameters._This allows to define queries with named placeholders, and use headers with the dynamic values for the query placeholders.;public void setUseHeadersAsParameters(boolean useHeadersAsParameters) {_        this.useHeadersAsParameters = useHeadersAsParameters__    };set,this,option,to,true,to,use,the,prepare,statement,strategy,with,named,parameters,this,allows,to,define,queries,with,named,placeholders,and,use,headers,with,the,dynamic,values,for,the,query,placeholders;public,void,set,use,headers,as,parameters,boolean,use,headers,as,parameters,this,use,headers,as,parameters,use,headers,as,parameters
JdbcEndpoint -> public void setUseHeadersAsParameters(boolean useHeadersAsParameters);1531383099;Set this option to true to use the prepareStatementStrategy with named parameters._This allows to define queries with named placeholders, and use headers with the dynamic values for the query placeholders.;public void setUseHeadersAsParameters(boolean useHeadersAsParameters) {_        this.useHeadersAsParameters = useHeadersAsParameters__    };set,this,option,to,true,to,use,the,prepare,statement,strategy,with,named,parameters,this,allows,to,define,queries,with,named,placeholders,and,use,headers,with,the,dynamic,values,for,the,query,placeholders;public,void,set,use,headers,as,parameters,boolean,use,headers,as,parameters,this,use,headers,as,parameters,use,headers,as,parameters
JdbcEndpoint -> public void setUseHeadersAsParameters(boolean useHeadersAsParameters);1540108163;Set this option to true to use the prepareStatementStrategy with named parameters._This allows to define queries with named placeholders, and use headers with the dynamic values for the query placeholders.;public void setUseHeadersAsParameters(boolean useHeadersAsParameters) {_        this.useHeadersAsParameters = useHeadersAsParameters__    };set,this,option,to,true,to,use,the,prepare,statement,strategy,with,named,parameters,this,allows,to,define,queries,with,named,placeholders,and,use,headers,with,the,dynamic,values,for,the,query,placeholders;public,void,set,use,headers,as,parameters,boolean,use,headers,as,parameters,this,use,headers,as,parameters,use,headers,as,parameters
JdbcEndpoint -> public void setUseHeadersAsParameters(boolean useHeadersAsParameters);1547240981;Set this option to true to use the prepareStatementStrategy with named parameters._This allows to define queries with named placeholders, and use headers with the dynamic values for the query placeholders.;public void setUseHeadersAsParameters(boolean useHeadersAsParameters) {_        this.useHeadersAsParameters = useHeadersAsParameters__    };set,this,option,to,true,to,use,the,prepare,statement,strategy,with,named,parameters,this,allows,to,define,queries,with,named,placeholders,and,use,headers,with,the,dynamic,values,for,the,query,placeholders;public,void,set,use,headers,as,parameters,boolean,use,headers,as,parameters,this,use,headers,as,parameters,use,headers,as,parameters
JdbcEndpoint -> public void setUseHeadersAsParameters(boolean useHeadersAsParameters);1548055099;Set this option to true to use the prepareStatementStrategy with named parameters._This allows to define queries with named placeholders, and use headers with the dynamic values for the query placeholders.;public void setUseHeadersAsParameters(boolean useHeadersAsParameters) {_        this.useHeadersAsParameters = useHeadersAsParameters__    };set,this,option,to,true,to,use,the,prepare,statement,strategy,with,named,parameters,this,allows,to,define,queries,with,named,placeholders,and,use,headers,with,the,dynamic,values,for,the,query,placeholders;public,void,set,use,headers,as,parameters,boolean,use,headers,as,parameters,this,use,headers,as,parameters,use,headers,as,parameters
