# id;timestamp;commentText;codeText;commentWords;codeWords
JdbcProducer -> protected boolean setResultSet(Exchange exchange, Connection conn, ResultSet rs) throws SQLException;1418799922;Sets the result from the ResultSet to the Exchange as its OUT body.__@return whether to close resources;protected boolean setResultSet(Exchange exchange, Connection conn, ResultSet rs) throws SQLException {_        boolean answer = true___        ResultSetIterator iterator = new ResultSetIterator(conn, rs, getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics())___        _        exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders())___        JdbcOutputType outputType = getEndpoint().getOutputType()__        exchange.getOut().setHeader(JdbcConstants.JDBC_COLUMN_NAMES, iterator.getColumnNames())__        if (outputType == JdbcOutputType.StreamList) {_            exchange.getOut().setBody(iterator)__            exchange.addOnCompletion(new ResultSetIteratorCompletion(iterator))__            _            answer = false__        } else if (outputType == JdbcOutputType.SelectList) {_            List<?> list = extractRows(iterator)__            exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, list.size())__            exchange.getOut().setBody(list)__        } else if (outputType == JdbcOutputType.SelectOne) {_            exchange.getOut().setBody(extractSingleRow(iterator))__        }__        return answer__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body,return,whether,to,close,resources;protected,boolean,set,result,set,exchange,exchange,connection,conn,result,set,rs,throws,sqlexception,boolean,answer,true,result,set,iterator,iterator,new,result,set,iterator,conn,rs,get,endpoint,is,use,jdbc4column,name,and,label,semantics,exchange,get,out,get,headers,put,all,exchange,get,in,get,headers,jdbc,output,type,output,type,get,endpoint,get,output,type,exchange,get,out,set,header,jdbc,constants,iterator,get,column,names,if,output,type,jdbc,output,type,stream,list,exchange,get,out,set,body,iterator,exchange,add,on,completion,new,result,set,iterator,completion,iterator,answer,false,else,if,output,type,jdbc,output,type,select,list,list,list,extract,rows,iterator,exchange,get,out,set,header,jdbc,constants,list,size,exchange,get,out,set,body,list,else,if,output,type,jdbc,output,type,select,one,exchange,get,out,set,body,extract,single,row,iterator,return,answer
JdbcProducer -> protected boolean setResultSet(Exchange exchange, Connection conn, ResultSet rs) throws SQLException;1443508472;Sets the result from the ResultSet to the Exchange as its OUT body.__@return whether to close resources;protected boolean setResultSet(Exchange exchange, Connection conn, ResultSet rs) throws SQLException {_        boolean answer = true___        ResultSetIterator iterator = new ResultSetIterator(conn, rs, getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics(), getEndpoint().isUseGetBytesForBlob())___        _        exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders())___        JdbcOutputType outputType = getEndpoint().getOutputType()__        exchange.getOut().setHeader(JdbcConstants.JDBC_COLUMN_NAMES, iterator.getColumnNames())__        if (outputType == JdbcOutputType.StreamList) {_            exchange.getOut().setBody(iterator)__            exchange.addOnCompletion(new ResultSetIteratorCompletion(iterator))__            _            answer = false__        } else if (outputType == JdbcOutputType.SelectList) {_            List<?> list = extractRows(iterator)__            exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, list.size())__            exchange.getOut().setBody(list)__        } else if (outputType == JdbcOutputType.SelectOne) {_            exchange.getOut().setBody(extractSingleRow(iterator))__        }__        return answer__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body,return,whether,to,close,resources;protected,boolean,set,result,set,exchange,exchange,connection,conn,result,set,rs,throws,sqlexception,boolean,answer,true,result,set,iterator,iterator,new,result,set,iterator,conn,rs,get,endpoint,is,use,jdbc4column,name,and,label,semantics,get,endpoint,is,use,get,bytes,for,blob,exchange,get,out,get,headers,put,all,exchange,get,in,get,headers,jdbc,output,type,output,type,get,endpoint,get,output,type,exchange,get,out,set,header,jdbc,constants,iterator,get,column,names,if,output,type,jdbc,output,type,stream,list,exchange,get,out,set,body,iterator,exchange,add,on,completion,new,result,set,iterator,completion,iterator,answer,false,else,if,output,type,jdbc,output,type,select,list,list,list,extract,rows,iterator,exchange,get,out,set,header,jdbc,constants,list,size,exchange,get,out,set,body,list,else,if,output,type,jdbc,output,type,select,one,exchange,get,out,set,body,extract,single,row,iterator,return,answer
JdbcProducer -> protected boolean setResultSet(Exchange exchange, Connection conn, ResultSet rs) throws SQLException;1452271113;Sets the result from the ResultSet to the Exchange as its OUT body.__@return whether to close resources;protected boolean setResultSet(Exchange exchange, Connection conn, ResultSet rs) throws SQLException {_        boolean answer = true___        ResultSetIterator iterator = new ResultSetIterator(conn, rs, getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics(), getEndpoint().isUseGetBytesForBlob())___        _        exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders())___        JdbcOutputType outputType = getEndpoint().getOutputType()__        exchange.getOut().setHeader(JdbcConstants.JDBC_COLUMN_NAMES, iterator.getColumnNames())__        if (outputType == JdbcOutputType.StreamList) {_            exchange.getOut().setBody(iterator)__            exchange.addOnCompletion(new ResultSetIteratorCompletion(iterator))__            _            answer = false__        } else if (outputType == JdbcOutputType.SelectList) {_            List<?> list = extractRows(iterator)__            exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, list.size())__            exchange.getOut().setBody(list)__        } else if (outputType == JdbcOutputType.SelectOne) {_            exchange.getOut().setBody(extractSingleRow(iterator))__        }__        return answer__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body,return,whether,to,close,resources;protected,boolean,set,result,set,exchange,exchange,connection,conn,result,set,rs,throws,sqlexception,boolean,answer,true,result,set,iterator,iterator,new,result,set,iterator,conn,rs,get,endpoint,is,use,jdbc4column,name,and,label,semantics,get,endpoint,is,use,get,bytes,for,blob,exchange,get,out,get,headers,put,all,exchange,get,in,get,headers,jdbc,output,type,output,type,get,endpoint,get,output,type,exchange,get,out,set,header,jdbc,constants,iterator,get,column,names,if,output,type,jdbc,output,type,stream,list,exchange,get,out,set,body,iterator,exchange,add,on,completion,new,result,set,iterator,completion,iterator,answer,false,else,if,output,type,jdbc,output,type,select,list,list,list,extract,rows,iterator,exchange,get,out,set,header,jdbc,constants,list,size,exchange,get,out,set,body,list,else,if,output,type,jdbc,output,type,select,one,exchange,get,out,set,body,extract,single,row,iterator,return,answer
JdbcProducer -> protected boolean setResultSet(Exchange exchange, Connection conn, ResultSet rs) throws SQLException;1460186358;Sets the result from the ResultSet to the Exchange as its OUT body.__@return whether to close resources;protected boolean setResultSet(Exchange exchange, Connection conn, ResultSet rs) throws SQLException {_        boolean answer = true___        ResultSetIterator iterator = new ResultSetIterator(conn, rs, getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics(), getEndpoint().isUseGetBytesForBlob())___        _        exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders())___        JdbcOutputType outputType = getEndpoint().getOutputType()__        exchange.getOut().setHeader(JdbcConstants.JDBC_COLUMN_NAMES, iterator.getColumnNames())__        if (outputType == JdbcOutputType.StreamList) {_            exchange.getOut().setBody(iterator)__            exchange.addOnCompletion(new ResultSetIteratorCompletion(iterator))__            _            answer = false__        } else if (outputType == JdbcOutputType.SelectList) {_            List<?> list = extractRows(iterator)__            exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, list.size())__            exchange.getOut().setBody(list)__        } else if (outputType == JdbcOutputType.SelectOne) {_            exchange.getOut().setBody(extractSingleRow(iterator))__        }__        return answer__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body,return,whether,to,close,resources;protected,boolean,set,result,set,exchange,exchange,connection,conn,result,set,rs,throws,sqlexception,boolean,answer,true,result,set,iterator,iterator,new,result,set,iterator,conn,rs,get,endpoint,is,use,jdbc4column,name,and,label,semantics,get,endpoint,is,use,get,bytes,for,blob,exchange,get,out,get,headers,put,all,exchange,get,in,get,headers,jdbc,output,type,output,type,get,endpoint,get,output,type,exchange,get,out,set,header,jdbc,constants,iterator,get,column,names,if,output,type,jdbc,output,type,stream,list,exchange,get,out,set,body,iterator,exchange,add,on,completion,new,result,set,iterator,completion,iterator,answer,false,else,if,output,type,jdbc,output,type,select,list,list,list,extract,rows,iterator,exchange,get,out,set,header,jdbc,constants,list,size,exchange,get,out,set,body,list,else,if,output,type,jdbc,output,type,select,one,exchange,get,out,set,body,extract,single,row,iterator,return,answer
JdbcProducer -> protected boolean setResultSet(Exchange exchange, Connection conn, ResultSet rs) throws SQLException;1524001544;Sets the result from the ResultSet to the Exchange as its OUT body.__@return whether to close resources;protected boolean setResultSet(Exchange exchange, Connection conn, ResultSet rs) throws SQLException {_        boolean answer = true___        ResultSetIterator iterator = new ResultSetIterator(conn, rs, getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics(), getEndpoint().isUseGetBytesForBlob())___        _        exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders())___        JdbcOutputType outputType = getEndpoint().getOutputType()__        exchange.getOut().setHeader(JdbcConstants.JDBC_COLUMN_NAMES, iterator.getColumnNames())__        if (outputType == JdbcOutputType.StreamList) {_            exchange.getOut().setBody(iterator)__            exchange.addOnCompletion(new ResultSetIteratorCompletion(iterator))__            _            answer = false__        } else if (outputType == JdbcOutputType.SelectList) {_            List<?> list = extractRows(iterator)__            exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, list.size())__            exchange.getOut().setBody(list)__        } else if (outputType == JdbcOutputType.SelectOne) {_            exchange.getOut().setBody(extractSingleRow(iterator))__        }__        return answer__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body,return,whether,to,close,resources;protected,boolean,set,result,set,exchange,exchange,connection,conn,result,set,rs,throws,sqlexception,boolean,answer,true,result,set,iterator,iterator,new,result,set,iterator,conn,rs,get,endpoint,is,use,jdbc4column,name,and,label,semantics,get,endpoint,is,use,get,bytes,for,blob,exchange,get,out,get,headers,put,all,exchange,get,in,get,headers,jdbc,output,type,output,type,get,endpoint,get,output,type,exchange,get,out,set,header,jdbc,constants,iterator,get,column,names,if,output,type,jdbc,output,type,stream,list,exchange,get,out,set,body,iterator,exchange,add,on,completion,new,result,set,iterator,completion,iterator,answer,false,else,if,output,type,jdbc,output,type,select,list,list,list,extract,rows,iterator,exchange,get,out,set,header,jdbc,constants,list,size,exchange,get,out,set,body,list,else,if,output,type,jdbc,output,type,select,one,exchange,get,out,set,body,extract,single,row,iterator,return,answer
JdbcProducer -> protected boolean setResultSet(Exchange exchange, Connection conn, ResultSet rs) throws SQLException;1540108160;Sets the result from the ResultSet to the Exchange as its OUT body.__@return whether to close resources;protected boolean setResultSet(Exchange exchange, Connection conn, ResultSet rs) throws SQLException {_        boolean answer = true___        ResultSetIterator iterator = new ResultSetIterator(conn, rs, getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics(), getEndpoint().isUseGetBytesForBlob())___        _        exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders())___        JdbcOutputType outputType = getEndpoint().getOutputType()__        exchange.getOut().setHeader(JdbcConstants.JDBC_COLUMN_NAMES, iterator.getColumnNames())__        if (outputType == JdbcOutputType.StreamList) {_            exchange.getOut().setBody(iterator)__            exchange.addOnCompletion(new ResultSetIteratorCompletion(iterator))__            _            answer = false__        } else if (outputType == JdbcOutputType.SelectList) {_            List<?> list = extractRows(iterator)__            exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, list.size())__            exchange.getOut().setBody(list)__        } else if (outputType == JdbcOutputType.SelectOne) {_            exchange.getOut().setBody(extractSingleRow(iterator))__        }__        return answer__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body,return,whether,to,close,resources;protected,boolean,set,result,set,exchange,exchange,connection,conn,result,set,rs,throws,sqlexception,boolean,answer,true,result,set,iterator,iterator,new,result,set,iterator,conn,rs,get,endpoint,is,use,jdbc4column,name,and,label,semantics,get,endpoint,is,use,get,bytes,for,blob,exchange,get,out,get,headers,put,all,exchange,get,in,get,headers,jdbc,output,type,output,type,get,endpoint,get,output,type,exchange,get,out,set,header,jdbc,constants,iterator,get,column,names,if,output,type,jdbc,output,type,stream,list,exchange,get,out,set,body,iterator,exchange,add,on,completion,new,result,set,iterator,completion,iterator,answer,false,else,if,output,type,jdbc,output,type,select,list,list,list,extract,rows,iterator,exchange,get,out,set,header,jdbc,constants,list,size,exchange,get,out,set,body,list,else,if,output,type,jdbc,output,type,select,one,exchange,get,out,set,body,extract,single,row,iterator,return,answer
JdbcProducer -> protected boolean setResultSet(Exchange exchange, Connection conn, ResultSet rs) throws SQLException;1540108161;Sets the result from the ResultSet to the Exchange as its OUT body.__@return whether to close resources;protected boolean setResultSet(Exchange exchange, Connection conn, ResultSet rs) throws SQLException {_        boolean answer = true___        ResultSetIterator iterator = new ResultSetIterator(conn, rs, getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics(), getEndpoint().isUseGetBytesForBlob())___        _        exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders())___        JdbcOutputType outputType = getEndpoint().getOutputType()__        exchange.getOut().setHeader(JdbcConstants.JDBC_COLUMN_NAMES, iterator.getColumnNames())__        if (outputType == JdbcOutputType.StreamList) {_            exchange.getOut().setBody(iterator)__            exchange.addOnCompletion(new ResultSetIteratorCompletion(iterator))__            _            answer = false__        } else if (outputType == JdbcOutputType.SelectList) {_            List<?> list = extractRows(iterator)__            exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, list.size())__            exchange.getOut().setBody(list)__        } else if (outputType == JdbcOutputType.SelectOne) {_            exchange.getOut().setBody(extractSingleRow(iterator))__        }__        return answer__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body,return,whether,to,close,resources;protected,boolean,set,result,set,exchange,exchange,connection,conn,result,set,rs,throws,sqlexception,boolean,answer,true,result,set,iterator,iterator,new,result,set,iterator,conn,rs,get,endpoint,is,use,jdbc4column,name,and,label,semantics,get,endpoint,is,use,get,bytes,for,blob,exchange,get,out,get,headers,put,all,exchange,get,in,get,headers,jdbc,output,type,output,type,get,endpoint,get,output,type,exchange,get,out,set,header,jdbc,constants,iterator,get,column,names,if,output,type,jdbc,output,type,stream,list,exchange,get,out,set,body,iterator,exchange,add,on,completion,new,result,set,iterator,completion,iterator,answer,false,else,if,output,type,jdbc,output,type,select,list,list,list,extract,rows,iterator,exchange,get,out,set,header,jdbc,constants,list,size,exchange,get,out,set,body,list,else,if,output,type,jdbc,output,type,select,one,exchange,get,out,set,body,extract,single,row,iterator,return,answer
JdbcProducer -> protected boolean setResultSet(Exchange exchange, Connection conn, ResultSet rs) throws SQLException;1540108163;Sets the result from the ResultSet to the Exchange as its OUT body.__@return whether to close resources;protected boolean setResultSet(Exchange exchange, Connection conn, ResultSet rs) throws SQLException {_        boolean answer = true___        ResultSetIterator iterator = new ResultSetIterator(conn, rs, getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics(), getEndpoint().isUseGetBytesForBlob())___        _        exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders())___        JdbcOutputType outputType = getEndpoint().getOutputType()__        exchange.getOut().setHeader(JdbcConstants.JDBC_COLUMN_NAMES, iterator.getColumnNames())__        if (outputType == JdbcOutputType.StreamList) {_            exchange.getOut().setBody(iterator)__            exchange.addOnCompletion(new ResultSetIteratorCompletion(iterator))__            _            answer = false__        } else if (outputType == JdbcOutputType.SelectList) {_            List<?> list = extractRows(iterator)__            exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, list.size())__            exchange.getOut().setBody(list)__        } else if (outputType == JdbcOutputType.SelectOne) {_            exchange.getOut().setBody(extractSingleRow(iterator))__        }__        return answer__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body,return,whether,to,close,resources;protected,boolean,set,result,set,exchange,exchange,connection,conn,result,set,rs,throws,sqlexception,boolean,answer,true,result,set,iterator,iterator,new,result,set,iterator,conn,rs,get,endpoint,is,use,jdbc4column,name,and,label,semantics,get,endpoint,is,use,get,bytes,for,blob,exchange,get,out,get,headers,put,all,exchange,get,in,get,headers,jdbc,output,type,output,type,get,endpoint,get,output,type,exchange,get,out,set,header,jdbc,constants,iterator,get,column,names,if,output,type,jdbc,output,type,stream,list,exchange,get,out,set,body,iterator,exchange,add,on,completion,new,result,set,iterator,completion,iterator,answer,false,else,if,output,type,jdbc,output,type,select,list,list,list,extract,rows,iterator,exchange,get,out,set,header,jdbc,constants,list,size,exchange,get,out,set,body,list,else,if,output,type,jdbc,output,type,select,one,exchange,get,out,set,body,extract,single,row,iterator,return,answer
JdbcProducer -> protected boolean setResultSet(Exchange exchange, Connection conn, ResultSet rs) throws SQLException;1548055099;Sets the result from the ResultSet to the Exchange as its OUT body.__@return whether to close resources;protected boolean setResultSet(Exchange exchange, Connection conn, ResultSet rs) throws SQLException {_        boolean answer = true___        ResultSetIterator iterator = new ResultSetIterator(conn, rs, getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics(), getEndpoint().isUseGetBytesForBlob())___        _        exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders())___        JdbcOutputType outputType = getEndpoint().getOutputType()__        exchange.getOut().setHeader(JdbcConstants.JDBC_COLUMN_NAMES, iterator.getColumnNames())__        if (outputType == JdbcOutputType.StreamList) {_            exchange.getOut().setBody(iterator)__            exchange.addOnCompletion(new ResultSetIteratorCompletion(iterator))__            _            answer = false__        } else if (outputType == JdbcOutputType.SelectList) {_            List<?> list = extractRows(iterator)__            exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, list.size())__            exchange.getOut().setBody(list)__        } else if (outputType == JdbcOutputType.SelectOne) {_            exchange.getOut().setBody(extractSingleRow(iterator))__        }__        return answer__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body,return,whether,to,close,resources;protected,boolean,set,result,set,exchange,exchange,connection,conn,result,set,rs,throws,sqlexception,boolean,answer,true,result,set,iterator,iterator,new,result,set,iterator,conn,rs,get,endpoint,is,use,jdbc4column,name,and,label,semantics,get,endpoint,is,use,get,bytes,for,blob,exchange,get,out,get,headers,put,all,exchange,get,in,get,headers,jdbc,output,type,output,type,get,endpoint,get,output,type,exchange,get,out,set,header,jdbc,constants,iterator,get,column,names,if,output,type,jdbc,output,type,stream,list,exchange,get,out,set,body,iterator,exchange,add,on,completion,new,result,set,iterator,completion,iterator,answer,false,else,if,output,type,jdbc,output,type,select,list,list,list,extract,rows,iterator,exchange,get,out,set,header,jdbc,constants,list,size,exchange,get,out,set,body,list,else,if,output,type,jdbc,output,type,select,one,exchange,get,out,set,body,extract,single,row,iterator,return,answer
JdbcProducer -> public void process(Exchange exchange) throws Exception;1188377147;Execute sql of exchange and set results on output__@see org.apache.camel.Processor#process(org.apache.camel.Exchange);public void process(Exchange exchange) throws Exception {_        String sql = exchange.getIn().getBody(String.class)__        Connection conn = null__        Statement stmt = null__        try {_            conn = source.getConnection()__            stmt = conn.createStatement()__            if (stmt.execute(sql)) {_                ResultSet rs = stmt.getResultSet()__                setResultSet(exchange, rs)__                rs.close()__            } else {_                int updateCount = stmt.getUpdateCount()__                exchange.getOut().setHeader("jdbc.updateCount", updateCount)__            }_        } finally {_            if (stmt != null) {_                stmt.close()__            }_            if (conn != null) {_                conn.close()__            }_        }_    };execute,sql,of,exchange,and,set,results,on,output,see,org,apache,camel,processor,process,org,apache,camel,exchange;public,void,process,exchange,exchange,throws,exception,string,sql,exchange,get,in,get,body,string,class,connection,conn,null,statement,stmt,null,try,conn,source,get,connection,stmt,conn,create,statement,if,stmt,execute,sql,result,set,rs,stmt,get,result,set,set,result,set,exchange,rs,rs,close,else,int,update,count,stmt,get,update,count,exchange,get,out,set,header,jdbc,update,count,update,count,finally,if,stmt,null,stmt,close,if,conn,null,conn,close
JdbcProducer -> public void process(Exchange exchange) throws Exception;1191252181;Execute sql of exchange and set results on output__@see org.apache.camel.Processor#process(org.apache.camel.Exchange);public void process(Exchange exchange) throws Exception {_        String sql = exchange.getIn().getBody(String.class)__        Connection conn = null__        Statement stmt = null__        try {_            conn = source.getConnection()__            stmt = conn.createStatement()__            if (stmt.execute(sql)) {_                ResultSet rs = stmt.getResultSet()__                setResultSet(exchange, rs)__                rs.close()__            } else {_                int updateCount = stmt.getUpdateCount()__                exchange.getOut().setHeader("jdbc.updateCount", updateCount)__            }_        } finally {_            if (stmt != null) {_                stmt.close()__            }_            if (conn != null) {_                conn.close()__            }_        }_    };execute,sql,of,exchange,and,set,results,on,output,see,org,apache,camel,processor,process,org,apache,camel,exchange;public,void,process,exchange,exchange,throws,exception,string,sql,exchange,get,in,get,body,string,class,connection,conn,null,statement,stmt,null,try,conn,source,get,connection,stmt,conn,create,statement,if,stmt,execute,sql,result,set,rs,stmt,get,result,set,set,result,set,exchange,rs,rs,close,else,int,update,count,stmt,get,update,count,exchange,get,out,set,header,jdbc,update,count,update,count,finally,if,stmt,null,stmt,close,if,conn,null,conn,close
JdbcProducer -> public void process(Exchange exchange) throws Exception;1203821224;Execute sql of exchange and set results on output__@see org.apache.camel.Processor#process(org.apache.camel.Exchange);public void process(Exchange exchange) throws Exception {_        String sql = exchange.getIn().getBody(String.class)__        Connection conn = null__        Statement stmt = null__        try {_            conn = source.getConnection()__            stmt = conn.createStatement()__            if (stmt.execute(sql)) {_                ResultSet rs = stmt.getResultSet()__                setResultSet(exchange, rs)__                rs.close()__            } else {_                int updateCount = stmt.getUpdateCount()__                exchange.getOut().setHeader("jdbc.updateCount", updateCount)__            }_        } finally {_            if (stmt != null) {_                stmt.close()__            }_            if (conn != null) {_                conn.close()__            }_        }_    };execute,sql,of,exchange,and,set,results,on,output,see,org,apache,camel,processor,process,org,apache,camel,exchange;public,void,process,exchange,exchange,throws,exception,string,sql,exchange,get,in,get,body,string,class,connection,conn,null,statement,stmt,null,try,conn,source,get,connection,stmt,conn,create,statement,if,stmt,execute,sql,result,set,rs,stmt,get,result,set,set,result,set,exchange,rs,rs,close,else,int,update,count,stmt,get,update,count,exchange,get,out,set,header,jdbc,update,count,update,count,finally,if,stmt,null,stmt,close,if,conn,null,conn,close
JdbcProducer -> public void process(Exchange exchange) throws Exception;1206431352;Execute sql of exchange and set results on output__@see org.apache.camel.Processor#process(org.apache.camel.Exchange);public void process(Exchange exchange) throws Exception {_        String sql = exchange.getIn().getBody(String.class)__        Connection conn = null__        Statement stmt = null__        try {_            conn = source.getConnection()__            stmt = conn.createStatement()__            if (stmt.execute(sql)) {_                ResultSet rs = stmt.getResultSet()__                setResultSet(exchange, rs)__                rs.close()__            } else {_                int updateCount = stmt.getUpdateCount()__                exchange.getOut().setHeader("jdbc.updateCount", updateCount)__            }_        } finally {_            if (stmt != null) {_                stmt.close()__            }_            if (conn != null) {_                conn.close()__            }_        }_    };execute,sql,of,exchange,and,set,results,on,output,see,org,apache,camel,processor,process,org,apache,camel,exchange;public,void,process,exchange,exchange,throws,exception,string,sql,exchange,get,in,get,body,string,class,connection,conn,null,statement,stmt,null,try,conn,source,get,connection,stmt,conn,create,statement,if,stmt,execute,sql,result,set,rs,stmt,get,result,set,set,result,set,exchange,rs,rs,close,else,int,update,count,stmt,get,update,count,exchange,get,out,set,header,jdbc,update,count,update,count,finally,if,stmt,null,stmt,close,if,conn,null,conn,close
JdbcProducer -> public void process(Exchange exchange) throws Exception;1210605532;Execute sql of exchange and set results on output__@see org.apache.camel.Processor#process(org.apache.camel.Exchange);public void process(Exchange exchange) throws Exception {_        String sql = exchange.getIn().getBody(String.class)__        Connection conn = null__        Statement stmt = null__        try {_            conn = source.getConnection()__            stmt = conn.createStatement()__            if (stmt.execute(sql)) {_                ResultSet rs = stmt.getResultSet()__                setResultSet(exchange, rs)__                rs.close()__            } else {_                int updateCount = stmt.getUpdateCount()__                exchange.getOut().setHeader("jdbc.updateCount", updateCount)__            }_        } finally {_            if (stmt != null) {_                stmt.close()__            }_            if (conn != null) {_                conn.close()__            }_        }_    };execute,sql,of,exchange,and,set,results,on,output,see,org,apache,camel,processor,process,org,apache,camel,exchange;public,void,process,exchange,exchange,throws,exception,string,sql,exchange,get,in,get,body,string,class,connection,conn,null,statement,stmt,null,try,conn,source,get,connection,stmt,conn,create,statement,if,stmt,execute,sql,result,set,rs,stmt,get,result,set,set,result,set,exchange,rs,rs,close,else,int,update,count,stmt,get,update,count,exchange,get,out,set,header,jdbc,update,count,update,count,finally,if,stmt,null,stmt,close,if,conn,null,conn,close
JdbcProducer -> public void process(Exchange exchange) throws Exception;1215062431;Execute sql of exchange and set results on output__@see org.apache.camel.Processor#process(org.apache.camel.Exchange);public void process(Exchange exchange) throws Exception {_        String sql = exchange.getIn().getBody(String.class)__        Connection conn = null__        Statement stmt = null__        ResultSet rs = null__        try {_            conn = source.getConnection()__            stmt = conn.createStatement()__            if (stmt.execute(sql)) {_                rs = stmt.getResultSet()__                setResultSet(exchange, rs)__            } else {_                int updateCount = stmt.getUpdateCount()__                exchange.getOut().setHeader("jdbc.updateCount", updateCount)__            }_        } finally {_            try {_                if (rs != null) {_                    rs.close()__                }_                if (stmt != null) {_                    stmt.close()__                }_                if (conn != null) {_                    conn.close()__                }_            } catch (SQLException e) {_                LOG.warn("Error closing JDBC resource: " + e, e)__            }_        }_    };execute,sql,of,exchange,and,set,results,on,output,see,org,apache,camel,processor,process,org,apache,camel,exchange;public,void,process,exchange,exchange,throws,exception,string,sql,exchange,get,in,get,body,string,class,connection,conn,null,statement,stmt,null,result,set,rs,null,try,conn,source,get,connection,stmt,conn,create,statement,if,stmt,execute,sql,rs,stmt,get,result,set,set,result,set,exchange,rs,else,int,update,count,stmt,get,update,count,exchange,get,out,set,header,jdbc,update,count,update,count,finally,try,if,rs,null,rs,close,if,stmt,null,stmt,close,if,conn,null,conn,close,catch,sqlexception,e,log,warn,error,closing,jdbc,resource,e,e
JdbcProducer -> public void process(Exchange exchange) throws Exception;1215396115;Execute sql of exchange and set results on output__@see org.apache.camel.Processor#process(org.apache.camel.Exchange);public void process(Exchange exchange) throws Exception {_        String sql = exchange.getIn().getBody(String.class)__        Connection conn = null__        Statement stmt = null__        ResultSet rs = null__        try {_            conn = source.getConnection()__            stmt = conn.createStatement()__            if (stmt.execute(sql)) {_                rs = stmt.getResultSet()__                setResultSet(exchange, rs)__            } else {_                int updateCount = stmt.getUpdateCount()__                exchange.getOut().setHeader("jdbc.updateCount", updateCount)__            }_        } finally {_            try {_                if (rs != null) {_                    rs.close()__                }_                if (stmt != null) {_                    stmt.close()__                }_                if (conn != null) {_                    conn.close()__                }_            } catch (SQLException e) {_                LOG.warn("Error closing JDBC resource: " + e, e)__            }_        }_    };execute,sql,of,exchange,and,set,results,on,output,see,org,apache,camel,processor,process,org,apache,camel,exchange;public,void,process,exchange,exchange,throws,exception,string,sql,exchange,get,in,get,body,string,class,connection,conn,null,statement,stmt,null,result,set,rs,null,try,conn,source,get,connection,stmt,conn,create,statement,if,stmt,execute,sql,rs,stmt,get,result,set,set,result,set,exchange,rs,else,int,update,count,stmt,get,update,count,exchange,get,out,set,header,jdbc,update,count,update,count,finally,try,if,rs,null,rs,close,if,stmt,null,stmt,close,if,conn,null,conn,close,catch,sqlexception,e,log,warn,error,closing,jdbc,resource,e,e
JdbcProducer -> public void process(Exchange exchange) throws Exception;1226305935;Execute sql of exchange and set results on output__@see org.apache.camel.Processor#process(org.apache.camel.Exchange);public void process(Exchange exchange) throws Exception {_        String sql = exchange.getIn().getBody(String.class)__        Connection conn = null__        Statement stmt = null__        ResultSet rs = null__        try {_            conn = source.getConnection()__            stmt = conn.createStatement()__            if (stmt.execute(sql)) {_                rs = stmt.getResultSet()__                setResultSet(exchange, rs)__            } else {_                int updateCount = stmt.getUpdateCount()__                exchange.getOut().setHeader("jdbc.updateCount", updateCount)__            }_        } finally {_            try {_                if (rs != null) {_                    rs.close()__                }_                if (stmt != null) {_                    stmt.close()__                }_                if (conn != null) {_                    conn.close()__                }_            } catch (SQLException e) {_                LOG.warn("Error closing JDBC resource: " + e, e)__            }_        }_    };execute,sql,of,exchange,and,set,results,on,output,see,org,apache,camel,processor,process,org,apache,camel,exchange;public,void,process,exchange,exchange,throws,exception,string,sql,exchange,get,in,get,body,string,class,connection,conn,null,statement,stmt,null,result,set,rs,null,try,conn,source,get,connection,stmt,conn,create,statement,if,stmt,execute,sql,rs,stmt,get,result,set,set,result,set,exchange,rs,else,int,update,count,stmt,get,update,count,exchange,get,out,set,header,jdbc,update,count,update,count,finally,try,if,rs,null,rs,close,if,stmt,null,stmt,close,if,conn,null,conn,close,catch,sqlexception,e,log,warn,error,closing,jdbc,resource,e,e
JdbcProducer -> public void process(Exchange exchange) throws Exception;1226518886;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        String sql = exchange.getIn().getBody(String.class)__        Connection conn = null__        Statement stmt = null__        ResultSet rs = null__        try {_            conn = dataSource.getConnection()__            stmt = conn.createStatement()__            if (LOG.isDebugEnabled()) {_                LOG.debug("Executing JDBC statement: " + sql)__            }_            if (stmt.execute(sql)) {_                rs = stmt.getResultSet()__                setResultSet(exchange, rs)__            } else {_                int updateCount = stmt.getUpdateCount()__                exchange.getOut().setHeader("jdbc.updateCount", updateCount)__            }_        } finally {_            try {_                if (rs != null) {_                    rs.close()__                }_                if (stmt != null) {_                    stmt.close()__                }_                if (conn != null) {_                    conn.close()__                }_            } catch (SQLException e) {_                LOG.warn("Error closing JDBC resource: " + e, e)__            }_        }_    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,string,sql,exchange,get,in,get,body,string,class,connection,conn,null,statement,stmt,null,result,set,rs,null,try,conn,data,source,get,connection,stmt,conn,create,statement,if,log,is,debug,enabled,log,debug,executing,jdbc,statement,sql,if,stmt,execute,sql,rs,stmt,get,result,set,set,result,set,exchange,rs,else,int,update,count,stmt,get,update,count,exchange,get,out,set,header,jdbc,update,count,update,count,finally,try,if,rs,null,rs,close,if,stmt,null,stmt,close,if,conn,null,conn,close,catch,sqlexception,e,log,warn,error,closing,jdbc,resource,e,e
JdbcProducer -> public void process(Exchange exchange) throws Exception;1235737914;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        String sql = exchange.getIn().getBody(String.class)__        Connection conn = null__        Statement stmt = null__        ResultSet rs = null__        try {_            conn = dataSource.getConnection()__            stmt = conn.createStatement()__            if (LOG.isDebugEnabled()) {_                LOG.debug("Executing JDBC statement: " + sql)__            }_            if (stmt.execute(sql)) {_                rs = stmt.getResultSet()__                setResultSet(exchange, rs)__            } else {_                int updateCount = stmt.getUpdateCount()__                exchange.getOut().setHeader(JdbcConstants.JDBC_UPDATE_COUNT, updateCount)__            }_        } finally {_            try {_                if (rs != null) {_                    rs.close()__                }_                if (stmt != null) {_                    stmt.close()__                }_                if (conn != null) {_                    conn.close()__                }_            } catch (SQLException e) {_                LOG.warn("Error closing JDBC resource: " + e, e)__            }_        }_    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,string,sql,exchange,get,in,get,body,string,class,connection,conn,null,statement,stmt,null,result,set,rs,null,try,conn,data,source,get,connection,stmt,conn,create,statement,if,log,is,debug,enabled,log,debug,executing,jdbc,statement,sql,if,stmt,execute,sql,rs,stmt,get,result,set,set,result,set,exchange,rs,else,int,update,count,stmt,get,update,count,exchange,get,out,set,header,jdbc,constants,update,count,finally,try,if,rs,null,rs,close,if,stmt,null,stmt,close,if,conn,null,conn,close,catch,sqlexception,e,log,warn,error,closing,jdbc,resource,e,e
JdbcProducer -> public void process(Exchange exchange) throws Exception;1253170425;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        String sql = exchange.getIn().getBody(String.class)__        Connection conn = null__        Statement stmt = null__        ResultSet rs = null__        try {_            conn = dataSource.getConnection()__            stmt = conn.createStatement()__            if (LOG.isDebugEnabled()) {_                LOG.debug("Executing JDBC statement: " + sql)__            }_            if (stmt.execute(sql)) {_                rs = stmt.getResultSet()__                setResultSet(exchange, rs)__            } else {_                int updateCount = stmt.getUpdateCount()__                exchange.getOut().setHeader(JdbcConstants.JDBC_UPDATE_COUNT, updateCount)__            }_        } finally {_            try {_                if (rs != null) {_                    rs.close()__                }_                if (stmt != null) {_                    stmt.close()__                }_                if (conn != null) {_                    conn.close()__                }_            } catch (SQLException e) {_                LOG.warn("Error closing JDBC resource: " + e, e)__            }_        }_    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,string,sql,exchange,get,in,get,body,string,class,connection,conn,null,statement,stmt,null,result,set,rs,null,try,conn,data,source,get,connection,stmt,conn,create,statement,if,log,is,debug,enabled,log,debug,executing,jdbc,statement,sql,if,stmt,execute,sql,rs,stmt,get,result,set,set,result,set,exchange,rs,else,int,update,count,stmt,get,update,count,exchange,get,out,set,header,jdbc,constants,update,count,finally,try,if,rs,null,rs,close,if,stmt,null,stmt,close,if,conn,null,conn,close,catch,sqlexception,e,log,warn,error,closing,jdbc,resource,e,e
JdbcProducer -> public void process(Exchange exchange) throws Exception;1259058670;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        String sql = exchange.getIn().getBody(String.class)__        Connection conn = null__        Statement stmt = null__        ResultSet rs = null__        try {_            conn = dataSource.getConnection()__            stmt = conn.createStatement()___            if (parameters != null && !parameters.isEmpty()) {_                IntrospectionSupport.setProperties(stmt, parameters)__            }_            _            if (LOG.isDebugEnabled()) {_                LOG.debug("Executing JDBC statement: " + sql)__            }_            if (stmt.execute(sql)) {_                rs = stmt.getResultSet()__                setResultSet(exchange, rs)__            } else {_                int updateCount = stmt.getUpdateCount()__                exchange.getOut().setHeader(JdbcConstants.JDBC_UPDATE_COUNT, updateCount)__            }_        } finally {_            try {_                if (rs != null) {_                    rs.close()__                }_                if (stmt != null) {_                    stmt.close()__                }_                if (conn != null) {_                    conn.close()__                }_            } catch (SQLException e) {_                LOG.warn("Error closing JDBC resource: " + e, e)__            }_        }_    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,string,sql,exchange,get,in,get,body,string,class,connection,conn,null,statement,stmt,null,result,set,rs,null,try,conn,data,source,get,connection,stmt,conn,create,statement,if,parameters,null,parameters,is,empty,introspection,support,set,properties,stmt,parameters,if,log,is,debug,enabled,log,debug,executing,jdbc,statement,sql,if,stmt,execute,sql,rs,stmt,get,result,set,set,result,set,exchange,rs,else,int,update,count,stmt,get,update,count,exchange,get,out,set,header,jdbc,constants,update,count,finally,try,if,rs,null,rs,close,if,stmt,null,stmt,close,if,conn,null,conn,close,catch,sqlexception,e,log,warn,error,closing,jdbc,resource,e,e
JdbcProducer -> public void process(Exchange exchange) throws Exception;1261731183;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        String sql = exchange.getIn().getBody(String.class)__        Connection conn = null__        Statement stmt = null__        ResultSet rs = null__        try {_            conn = dataSource.getConnection()__            stmt = conn.createStatement()___            if (parameters != null && !parameters.isEmpty()) {_                IntrospectionSupport.setProperties(stmt, parameters)__            }_            _            if (LOG.isDebugEnabled()) {_                LOG.debug("Executing JDBC statement: " + sql)__            }__            _            exchange.getOut().setHeaders(exchange.getIn().getHeaders())___            if (stmt.execute(sql)) {_                rs = stmt.getResultSet()__                setResultSet(exchange, rs)__            } else {_                int updateCount = stmt.getUpdateCount()__                exchange.getOut().setHeader(JdbcConstants.JDBC_UPDATE_COUNT, updateCount)__            }_        } finally {_            try {_                if (rs != null) {_                    rs.close()__                }_                if (stmt != null) {_                    stmt.close()__                }_                if (conn != null) {_                    conn.close()__                }_            } catch (SQLException e) {_                LOG.warn("Error closing JDBC resource: " + e, e)__            }_        }_    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,string,sql,exchange,get,in,get,body,string,class,connection,conn,null,statement,stmt,null,result,set,rs,null,try,conn,data,source,get,connection,stmt,conn,create,statement,if,parameters,null,parameters,is,empty,introspection,support,set,properties,stmt,parameters,if,log,is,debug,enabled,log,debug,executing,jdbc,statement,sql,exchange,get,out,set,headers,exchange,get,in,get,headers,if,stmt,execute,sql,rs,stmt,get,result,set,set,result,set,exchange,rs,else,int,update,count,stmt,get,update,count,exchange,get,out,set,header,jdbc,constants,update,count,finally,try,if,rs,null,rs,close,if,stmt,null,stmt,close,if,conn,null,conn,close,catch,sqlexception,e,log,warn,error,closing,jdbc,resource,e,e
JdbcProducer -> public void process(Exchange exchange) throws Exception;1263280876;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        String sql = exchange.getIn().getBody(String.class)__        Connection conn = null__        Statement stmt = null__        ResultSet rs = null__        try {_            conn = dataSource.getConnection()__            stmt = conn.createStatement()___            if (parameters != null && !parameters.isEmpty()) {_                IntrospectionSupport.setProperties(stmt, parameters)__            }_            _            if (LOG.isDebugEnabled()) {_                LOG.debug("Executing JDBC statement: " + sql)__            }__            _            exchange.getOut().setHeaders(exchange.getIn().getHeaders())___            if (stmt.execute(sql)) {_                rs = stmt.getResultSet()__                setResultSet(exchange, rs)__            } else {_                int updateCount = stmt.getUpdateCount()__                exchange.getOut().setHeader(JdbcConstants.JDBC_UPDATE_COUNT, updateCount)__            }_        } finally {_            try {_                if (rs != null) {_                    rs.close()__                }_                if (stmt != null) {_                    stmt.close()__                }_                if (conn != null) {_                    conn.close()__                }_            } catch (SQLException e) {_                LOG.warn("Error closing JDBC resource: " + e, e)__            }_        }_    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,string,sql,exchange,get,in,get,body,string,class,connection,conn,null,statement,stmt,null,result,set,rs,null,try,conn,data,source,get,connection,stmt,conn,create,statement,if,parameters,null,parameters,is,empty,introspection,support,set,properties,stmt,parameters,if,log,is,debug,enabled,log,debug,executing,jdbc,statement,sql,exchange,get,out,set,headers,exchange,get,in,get,headers,if,stmt,execute,sql,rs,stmt,get,result,set,set,result,set,exchange,rs,else,int,update,count,stmt,get,update,count,exchange,get,out,set,header,jdbc,constants,update,count,finally,try,if,rs,null,rs,close,if,stmt,null,stmt,close,if,conn,null,conn,close,catch,sqlexception,e,log,warn,error,closing,jdbc,resource,e,e
JdbcProducer -> public void process(Exchange exchange) throws Exception;1283263860;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        String sql = exchange.getIn().getBody(String.class)__        Connection conn = null__        Statement stmt = null__        ResultSet rs = null__        try {_            conn = dataSource.getConnection()__            stmt = conn.createStatement()___            if (parameters != null && !parameters.isEmpty()) {_                IntrospectionSupport.setProperties(stmt, parameters)__            }_            _            if (LOG.isDebugEnabled()) {_                LOG.debug("Executing JDBC statement: " + sql)__            }__            if (stmt.execute(sql)) {_                rs = stmt.getResultSet()__                setResultSet(exchange, rs)__            } else {_                int updateCount = stmt.getUpdateCount()__                exchange.getOut().setHeader(JdbcConstants.JDBC_UPDATE_COUNT, updateCount)__            }_        } finally {_            try {_                if (rs != null) {_                    rs.close()__                }_                if (stmt != null) {_                    stmt.close()__                }_                if (conn != null) {_                    conn.close()__                }_            } catch (SQLException e) {_                LOG.warn("Error closing JDBC resource: " + e, e)__            }_        }__        _        exchange.getOut().setHeaders(exchange.getIn().getHeaders())__    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,string,sql,exchange,get,in,get,body,string,class,connection,conn,null,statement,stmt,null,result,set,rs,null,try,conn,data,source,get,connection,stmt,conn,create,statement,if,parameters,null,parameters,is,empty,introspection,support,set,properties,stmt,parameters,if,log,is,debug,enabled,log,debug,executing,jdbc,statement,sql,if,stmt,execute,sql,rs,stmt,get,result,set,set,result,set,exchange,rs,else,int,update,count,stmt,get,update,count,exchange,get,out,set,header,jdbc,constants,update,count,finally,try,if,rs,null,rs,close,if,stmt,null,stmt,close,if,conn,null,conn,close,catch,sqlexception,e,log,warn,error,closing,jdbc,resource,e,e,exchange,get,out,set,headers,exchange,get,in,get,headers
JdbcProducer -> public void process(Exchange exchange) throws Exception;1283264658;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        String sql = exchange.getIn().getBody(String.class)__        Connection conn = null__        Statement stmt = null__        ResultSet rs = null__        try {_            conn = dataSource.getConnection()__            stmt = conn.createStatement()___            if (parameters != null && !parameters.isEmpty()) {_                IntrospectionSupport.setProperties(stmt, parameters)__            }_            _            if (LOG.isDebugEnabled()) {_                LOG.debug("Executing JDBC statement: " + sql)__            }__            if (stmt.execute(sql)) {_                rs = stmt.getResultSet()__                setResultSet(exchange, rs)__            } else {_                int updateCount = stmt.getUpdateCount()__                exchange.getOut().setHeader(JdbcConstants.JDBC_UPDATE_COUNT, updateCount)__            }_        } finally {_            try {_                if (rs != null) {_                    rs.close()__                }_                if (stmt != null) {_                    stmt.close()__                }_                if (conn != null) {_                    conn.close()__                }_            } catch (SQLException e) {_                LOG.warn("Error closing JDBC resource: " + e, e)__            }_        }__        _        exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders())__    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,string,sql,exchange,get,in,get,body,string,class,connection,conn,null,statement,stmt,null,result,set,rs,null,try,conn,data,source,get,connection,stmt,conn,create,statement,if,parameters,null,parameters,is,empty,introspection,support,set,properties,stmt,parameters,if,log,is,debug,enabled,log,debug,executing,jdbc,statement,sql,if,stmt,execute,sql,rs,stmt,get,result,set,set,result,set,exchange,rs,else,int,update,count,stmt,get,update,count,exchange,get,out,set,header,jdbc,constants,update,count,finally,try,if,rs,null,rs,close,if,stmt,null,stmt,close,if,conn,null,conn,close,catch,sqlexception,e,log,warn,error,closing,jdbc,resource,e,e,exchange,get,out,get,headers,put,all,exchange,get,in,get,headers
JdbcProducer -> public void process(Exchange exchange) throws Exception;1296546062;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        String sql = exchange.getIn().getBody(String.class)__        Connection conn = null__        Statement stmt = null__        ResultSet rs = null__        try {_            conn = dataSource.getConnection()__            stmt = conn.createStatement()___            if (parameters != null && !parameters.isEmpty()) {_                IntrospectionSupport.setProperties(stmt, parameters)__            }_            _            if (LOG.isDebugEnabled()) {_                LOG.debug("Executing JDBC statement: " + sql)__            }__            if (stmt.execute(sql)) {_                rs = stmt.getResultSet()__                setResultSet(exchange, rs)__            } else {_                int updateCount = stmt.getUpdateCount()__                exchange.getOut().setHeader(JdbcConstants.JDBC_UPDATE_COUNT, updateCount)__            }_        } finally {_            try {_                if (rs != null) {_                    rs.close()__                }_                if (stmt != null) {_                    stmt.close()__                }_                if (conn != null) {_                    conn.close()__                }_            } catch (SQLException e) {_                LOG.warn("Error closing JDBC resource: " + e, e)__            }_        }__        _        exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders())__    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,string,sql,exchange,get,in,get,body,string,class,connection,conn,null,statement,stmt,null,result,set,rs,null,try,conn,data,source,get,connection,stmt,conn,create,statement,if,parameters,null,parameters,is,empty,introspection,support,set,properties,stmt,parameters,if,log,is,debug,enabled,log,debug,executing,jdbc,statement,sql,if,stmt,execute,sql,rs,stmt,get,result,set,set,result,set,exchange,rs,else,int,update,count,stmt,get,update,count,exchange,get,out,set,header,jdbc,constants,update,count,finally,try,if,rs,null,rs,close,if,stmt,null,stmt,close,if,conn,null,conn,close,catch,sqlexception,e,log,warn,error,closing,jdbc,resource,e,e,exchange,get,out,get,headers,put,all,exchange,get,in,get,headers
JdbcProducer -> public void process(Exchange exchange) throws Exception;1297975937;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        String sql = exchange.getIn().getBody(String.class)__        Connection conn = null__        Statement stmt = null__        ResultSet rs = null__        try {_            conn = dataSource.getConnection()__            stmt = conn.createStatement()___            if (parameters != null && !parameters.isEmpty()) {_                IntrospectionSupport.setProperties(stmt, parameters)__            }_            _            if (LOG.isDebugEnabled()) {_                LOG.debug("Executing JDBC statement: " + sql)__            }__            if (stmt.execute(sql)) {_                rs = stmt.getResultSet()__                setResultSet(exchange, rs)__            } else {_                int updateCount = stmt.getUpdateCount()__                exchange.getOut().setHeader(JdbcConstants.JDBC_UPDATE_COUNT, updateCount)__            }_        } finally {_            try {_                if (rs != null) {_                    rs.close()__                }_                if (stmt != null) {_                    stmt.close()__                }_                if (conn != null) {_                    conn.close()__                }_            } catch (SQLException e) {_                LOG.warn("Error closing JDBC resource: " + e, e)__            }_        }__        _        exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders())__    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,string,sql,exchange,get,in,get,body,string,class,connection,conn,null,statement,stmt,null,result,set,rs,null,try,conn,data,source,get,connection,stmt,conn,create,statement,if,parameters,null,parameters,is,empty,introspection,support,set,properties,stmt,parameters,if,log,is,debug,enabled,log,debug,executing,jdbc,statement,sql,if,stmt,execute,sql,rs,stmt,get,result,set,set,result,set,exchange,rs,else,int,update,count,stmt,get,update,count,exchange,get,out,set,header,jdbc,constants,update,count,finally,try,if,rs,null,rs,close,if,stmt,null,stmt,close,if,conn,null,conn,close,catch,sqlexception,e,log,warn,error,closing,jdbc,resource,e,e,exchange,get,out,get,headers,put,all,exchange,get,in,get,headers
JdbcProducer -> public void process(Exchange exchange) throws Exception;1303847897;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        String sql = exchange.getIn().getBody(String.class)__        Connection conn = null__        Statement stmt = null__        ResultSet rs = null__        _        try {_            conn = dataSource.getConnection()__            conn.setAutoCommit(false)__            _            stmt = conn.createStatement()__            _            if (parameters != null && !parameters.isEmpty()) {_                IntrospectionSupport.setProperties(stmt, parameters)__            }_            _            if (LOG.isDebugEnabled()) {_                LOG.debug("Executing JDBC statement: " + sql)__            }__            if (stmt.execute(sql)) {_                rs = stmt.getResultSet()__                setResultSet(exchange, rs)__            } else {_                int updateCount = stmt.getUpdateCount()__                exchange.getOut().setHeader(JdbcConstants.JDBC_UPDATE_COUNT, updateCount)__            }_            conn.commit()__        } catch (Exception e){_            try{_                conn.rollback()__            } catch (SQLException sqle){_                LOG.warn("Error on jdbc component rollback: " + sqle, sqle)__            }_            throw e__        } finally {_            closeQuietly(rs)__            closeQuietly(stmt)__            closeQuietly(conn)__        }__        _        exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders())__    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,string,sql,exchange,get,in,get,body,string,class,connection,conn,null,statement,stmt,null,result,set,rs,null,try,conn,data,source,get,connection,conn,set,auto,commit,false,stmt,conn,create,statement,if,parameters,null,parameters,is,empty,introspection,support,set,properties,stmt,parameters,if,log,is,debug,enabled,log,debug,executing,jdbc,statement,sql,if,stmt,execute,sql,rs,stmt,get,result,set,set,result,set,exchange,rs,else,int,update,count,stmt,get,update,count,exchange,get,out,set,header,jdbc,constants,update,count,conn,commit,catch,exception,e,try,conn,rollback,catch,sqlexception,sqle,log,warn,error,on,jdbc,component,rollback,sqle,sqle,throw,e,finally,close,quietly,rs,close,quietly,stmt,close,quietly,conn,exchange,get,out,get,headers,put,all,exchange,get,in,get,headers
JdbcProducer -> public void process(Exchange exchange) throws Exception;1303937346;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        String sql = exchange.getIn().getBody(String.class)__        Connection conn = null__        Statement stmt = null__        ResultSet rs = null__        Boolean autoCommit = null__        _        try {_            conn = dataSource.getConnection()__            autoCommit = conn.getAutoCommit()__            conn.setAutoCommit(false)__            _            stmt = conn.createStatement()__            _            if (parameters != null && !parameters.isEmpty()) {_                IntrospectionSupport.setProperties(stmt, parameters)__            }_            _            if (LOG.isDebugEnabled()) {_                LOG.debug("Executing JDBC statement: " + sql)__            }__            if (stmt.execute(sql)) {_                rs = stmt.getResultSet()__                setResultSet(exchange, rs)__            } else {_                int updateCount = stmt.getUpdateCount()__                exchange.getOut().setHeader(JdbcConstants.JDBC_UPDATE_COUNT, updateCount)__            }_            conn.commit()__        } catch (Exception e){_            try{_                conn.rollback()__            } catch (SQLException sqle){_                LOG.warn("Error on jdbc component rollback: " + sqle, sqle)__            }_            throw e__        } finally {_            closeQuietly(rs)__            closeQuietly(stmt)__            resetAutoCommit(conn, autoCommit)__            closeQuietly(conn)__        }__        _        exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders())__    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,string,sql,exchange,get,in,get,body,string,class,connection,conn,null,statement,stmt,null,result,set,rs,null,boolean,auto,commit,null,try,conn,data,source,get,connection,auto,commit,conn,get,auto,commit,conn,set,auto,commit,false,stmt,conn,create,statement,if,parameters,null,parameters,is,empty,introspection,support,set,properties,stmt,parameters,if,log,is,debug,enabled,log,debug,executing,jdbc,statement,sql,if,stmt,execute,sql,rs,stmt,get,result,set,set,result,set,exchange,rs,else,int,update,count,stmt,get,update,count,exchange,get,out,set,header,jdbc,constants,update,count,conn,commit,catch,exception,e,try,conn,rollback,catch,sqlexception,sqle,log,warn,error,on,jdbc,component,rollback,sqle,sqle,throw,e,finally,close,quietly,rs,close,quietly,stmt,reset,auto,commit,conn,auto,commit,close,quietly,conn,exchange,get,out,get,headers,put,all,exchange,get,in,get,headers
JdbcProducer -> public void process(Exchange exchange) throws Exception;1304094062;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        String sql = exchange.getIn().getBody(String.class)__        Connection conn = null__        Statement stmt = null__        ResultSet rs = null__        Boolean autoCommit = null__        _        try {_            conn = dataSource.getConnection()__            autoCommit = conn.getAutoCommit()__            conn.setAutoCommit(false)__            _            stmt = conn.createStatement()__            _            if (parameters != null && !parameters.isEmpty()) {_                IntrospectionSupport.setProperties(stmt, parameters)__            }_            _            if (LOG.isDebugEnabled()) {_                LOG.debug("Executing JDBC statement: " + sql)__            }__            if (stmt.execute(sql)) {_                rs = stmt.getResultSet()__                setResultSet(exchange, rs)__            } else {_                int updateCount = stmt.getUpdateCount()__                exchange.getOut().setHeader(JdbcConstants.JDBC_UPDATE_COUNT, updateCount)__            }_            conn.commit()__        } catch (Exception e) {_            try {_                conn.rollback()__            } catch (SQLException sqle) {_                LOG.warn("Error on jdbc component rollback: " + sqle, sqle)__            }_            throw e__        } finally {_            closeQuietly(rs)__            closeQuietly(stmt)__            resetAutoCommit(conn, autoCommit)__            closeQuietly(conn)__        }__        _        exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders())__    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,string,sql,exchange,get,in,get,body,string,class,connection,conn,null,statement,stmt,null,result,set,rs,null,boolean,auto,commit,null,try,conn,data,source,get,connection,auto,commit,conn,get,auto,commit,conn,set,auto,commit,false,stmt,conn,create,statement,if,parameters,null,parameters,is,empty,introspection,support,set,properties,stmt,parameters,if,log,is,debug,enabled,log,debug,executing,jdbc,statement,sql,if,stmt,execute,sql,rs,stmt,get,result,set,set,result,set,exchange,rs,else,int,update,count,stmt,get,update,count,exchange,get,out,set,header,jdbc,constants,update,count,conn,commit,catch,exception,e,try,conn,rollback,catch,sqlexception,sqle,log,warn,error,on,jdbc,component,rollback,sqle,sqle,throw,e,finally,close,quietly,rs,close,quietly,stmt,reset,auto,commit,conn,auto,commit,close,quietly,conn,exchange,get,out,get,headers,put,all,exchange,get,in,get,headers
JdbcProducer -> public void process(Exchange exchange) throws Exception;1307685726;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        String sql = exchange.getIn().getBody(String.class)__        Connection conn = null__        Statement stmt = null__        ResultSet rs = null__        Boolean autoCommit = null__        _        try {_            conn = dataSource.getConnection()__            autoCommit = conn.getAutoCommit()__            conn.setAutoCommit(false)__            _            stmt = conn.createStatement()__            _            if (parameters != null && !parameters.isEmpty()) {_                IntrospectionSupport.setProperties(stmt, parameters)__            }_            _            LOG.debug("Executing JDBC statement: {}", sql)___            if (stmt.execute(sql)) {_                rs = stmt.getResultSet()__                setResultSet(exchange, rs)__            } else {_                int updateCount = stmt.getUpdateCount()__                exchange.getOut().setHeader(JdbcConstants.JDBC_UPDATE_COUNT, updateCount)__            }_            conn.commit()__        } catch (Exception e) {_            try {_                conn.rollback()__            } catch (SQLException sqle) {_                LOG.warn("Error on jdbc component rollback: " + sqle, sqle)__            }_            throw e__        } finally {_            closeQuietly(rs)__            closeQuietly(stmt)__            resetAutoCommit(conn, autoCommit)__            closeQuietly(conn)__        }__        _        exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders())__    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,string,sql,exchange,get,in,get,body,string,class,connection,conn,null,statement,stmt,null,result,set,rs,null,boolean,auto,commit,null,try,conn,data,source,get,connection,auto,commit,conn,get,auto,commit,conn,set,auto,commit,false,stmt,conn,create,statement,if,parameters,null,parameters,is,empty,introspection,support,set,properties,stmt,parameters,log,debug,executing,jdbc,statement,sql,if,stmt,execute,sql,rs,stmt,get,result,set,set,result,set,exchange,rs,else,int,update,count,stmt,get,update,count,exchange,get,out,set,header,jdbc,constants,update,count,conn,commit,catch,exception,e,try,conn,rollback,catch,sqlexception,sqle,log,warn,error,on,jdbc,component,rollback,sqle,sqle,throw,e,finally,close,quietly,rs,close,quietly,stmt,reset,auto,commit,conn,auto,commit,close,quietly,conn,exchange,get,out,get,headers,put,all,exchange,get,in,get,headers
JdbcProducer -> public void process(Exchange exchange) throws Exception;1311692742;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        if (getEndpoint().isResetAutoCommit()) {_            processingSqlBySettingAutoCommit(exchange)__        } else {_            processingSqlWithoutSettingAutoCommit(exchange)__        }_        _        exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders())__    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,if,get,endpoint,is,reset,auto,commit,processing,sql,by,setting,auto,commit,exchange,else,processing,sql,without,setting,auto,commit,exchange,exchange,get,out,get,headers,put,all,exchange,get,in,get,headers
JdbcProducer -> public void process(Exchange exchange) throws Exception;1314695830;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        if (getEndpoint().isResetAutoCommit()) {_            processingSqlBySettingAutoCommit(exchange)__        } else {_            processingSqlWithoutSettingAutoCommit(exchange)__        }_        _        exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders())__    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,if,get,endpoint,is,reset,auto,commit,processing,sql,by,setting,auto,commit,exchange,else,processing,sql,without,setting,auto,commit,exchange,exchange,get,out,get,headers,put,all,exchange,get,in,get,headers
JdbcProducer -> public void process(Exchange exchange) throws Exception;1318405667;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        if (getEndpoint().isResetAutoCommit()) {_            processingSqlBySettingAutoCommit(exchange)__        } else {_            processingSqlWithoutSettingAutoCommit(exchange)__        }_        _        exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders())__    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,if,get,endpoint,is,reset,auto,commit,processing,sql,by,setting,auto,commit,exchange,else,processing,sql,without,setting,auto,commit,exchange,exchange,get,out,get,headers,put,all,exchange,get,in,get,headers
JdbcProducer -> public void process(Exchange exchange) throws Exception;1319017322;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        if (getEndpoint().isResetAutoCommit()) {_            processingSqlBySettingAutoCommit(exchange)__        } else {_            processingSqlWithoutSettingAutoCommit(exchange)__        }_        _        exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders())__    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,if,get,endpoint,is,reset,auto,commit,processing,sql,by,setting,auto,commit,exchange,else,processing,sql,without,setting,auto,commit,exchange,exchange,get,out,get,headers,put,all,exchange,get,in,get,headers
JdbcProducer -> public void process(Exchange exchange) throws Exception;1332684738;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        if (getEndpoint().isResetAutoCommit()) {_            processingSqlBySettingAutoCommit(exchange)__        } else {_            processingSqlWithoutSettingAutoCommit(exchange)__        }_        _        exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders())__    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,if,get,endpoint,is,reset,auto,commit,processing,sql,by,setting,auto,commit,exchange,else,processing,sql,without,setting,auto,commit,exchange,exchange,get,out,get,headers,put,all,exchange,get,in,get,headers
JdbcProducer -> public void process(Exchange exchange) throws Exception;1346310526;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        if (getEndpoint().isResetAutoCommit()) {_            processingSqlBySettingAutoCommit(exchange)__        } else {_            processingSqlWithoutSettingAutoCommit(exchange)__        }_        _        exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders())__    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,if,get,endpoint,is,reset,auto,commit,processing,sql,by,setting,auto,commit,exchange,else,processing,sql,without,setting,auto,commit,exchange,exchange,get,out,get,headers,put,all,exchange,get,in,get,headers
JdbcProducer -> public void process(Exchange exchange) throws Exception;1346310687;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        if (getEndpoint().isResetAutoCommit()) {_            processingSqlBySettingAutoCommit(exchange)__        } else {_            processingSqlWithoutSettingAutoCommit(exchange)__        }_        _        exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders())__    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,if,get,endpoint,is,reset,auto,commit,processing,sql,by,setting,auto,commit,exchange,else,processing,sql,without,setting,auto,commit,exchange,exchange,get,out,get,headers,put,all,exchange,get,in,get,headers
JdbcProducer -> public void process(Exchange exchange) throws Exception;1369467735;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        if (getEndpoint().isResetAutoCommit()) {_            processingSqlBySettingAutoCommit(exchange)__        } else {_            processingSqlWithoutSettingAutoCommit(exchange)__        }_        _        exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders())__    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,if,get,endpoint,is,reset,auto,commit,processing,sql,by,setting,auto,commit,exchange,else,processing,sql,without,setting,auto,commit,exchange,exchange,get,out,get,headers,put,all,exchange,get,in,get,headers
JdbcProducer -> public void process(Exchange exchange) throws Exception;1370186569;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        if (getEndpoint().isResetAutoCommit()) {_            processingSqlBySettingAutoCommit(exchange)__        } else {_            processingSqlWithoutSettingAutoCommit(exchange)__        }_        _        exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders())__    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,if,get,endpoint,is,reset,auto,commit,processing,sql,by,setting,auto,commit,exchange,else,processing,sql,without,setting,auto,commit,exchange,exchange,get,out,get,headers,put,all,exchange,get,in,get,headers
JdbcProducer -> public void process(Exchange exchange) throws Exception;1376549254;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        if (getEndpoint().isResetAutoCommit()) {_            processingSqlBySettingAutoCommit(exchange)__        } else {_            processingSqlWithoutSettingAutoCommit(exchange)__        }_        _        exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders())__    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,if,get,endpoint,is,reset,auto,commit,processing,sql,by,setting,auto,commit,exchange,else,processing,sql,without,setting,auto,commit,exchange,exchange,get,out,get,headers,put,all,exchange,get,in,get,headers
JdbcProducer -> public void process(Exchange exchange) throws Exception;1379509253;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        if (getEndpoint().isResetAutoCommit()) {_            processingSqlBySettingAutoCommit(exchange)__        } else {_            processingSqlWithoutSettingAutoCommit(exchange)__        }_        _        exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders())__    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,if,get,endpoint,is,reset,auto,commit,processing,sql,by,setting,auto,commit,exchange,else,processing,sql,without,setting,auto,commit,exchange,exchange,get,out,get,headers,put,all,exchange,get,in,get,headers
JdbcProducer -> public void process(Exchange exchange) throws Exception;1379510934;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        if (getEndpoint().isResetAutoCommit()) {_            processingSqlBySettingAutoCommit(exchange)__        } else {_            processingSqlWithoutSettingAutoCommit(exchange)__        }_        _        exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders())__    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,if,get,endpoint,is,reset,auto,commit,processing,sql,by,setting,auto,commit,exchange,else,processing,sql,without,setting,auto,commit,exchange,exchange,get,out,get,headers,put,all,exchange,get,in,get,headers
JdbcProducer -> public void process(Exchange exchange) throws Exception;1398321263;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        if (getEndpoint().isResetAutoCommit()) {_            processingSqlBySettingAutoCommit(exchange)__        } else {_            processingSqlWithoutSettingAutoCommit(exchange)__        }_        _        exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders())__    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,if,get,endpoint,is,reset,auto,commit,processing,sql,by,setting,auto,commit,exchange,else,processing,sql,without,setting,auto,commit,exchange,exchange,get,out,get,headers,put,all,exchange,get,in,get,headers
JdbcProducer -> public void process(Exchange exchange) throws Exception;1405374721;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        if (getEndpoint().isResetAutoCommit()) {_            processingSqlBySettingAutoCommit(exchange)__        } else {_            processingSqlWithoutSettingAutoCommit(exchange)__        }_    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,if,get,endpoint,is,reset,auto,commit,processing,sql,by,setting,auto,commit,exchange,else,processing,sql,without,setting,auto,commit,exchange
JdbcProducer -> public void process(Exchange exchange) throws Exception;1415211488;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        if (getEndpoint().isResetAutoCommit()) {_            processingSqlBySettingAutoCommit(exchange)__        } else {_            processingSqlWithoutSettingAutoCommit(exchange)__        }_    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,if,get,endpoint,is,reset,auto,commit,processing,sql,by,setting,auto,commit,exchange,else,processing,sql,without,setting,auto,commit,exchange
JdbcProducer -> public void process(Exchange exchange) throws Exception;1418799922;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        if (getEndpoint().isResetAutoCommit()) {_            processingSqlBySettingAutoCommit(exchange)__        } else {_            processingSqlWithoutSettingAutoCommit(exchange)__        }_    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,if,get,endpoint,is,reset,auto,commit,processing,sql,by,setting,auto,commit,exchange,else,processing,sql,without,setting,auto,commit,exchange
JdbcProducer -> public void process(Exchange exchange) throws Exception;1443508472;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        if (getEndpoint().isResetAutoCommit()) {_            processingSqlBySettingAutoCommit(exchange)__        } else {_            processingSqlWithoutSettingAutoCommit(exchange)__        }_    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,if,get,endpoint,is,reset,auto,commit,processing,sql,by,setting,auto,commit,exchange,else,processing,sql,without,setting,auto,commit,exchange
JdbcProducer -> public void process(Exchange exchange) throws Exception;1452271113;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        if (getEndpoint().isResetAutoCommit()) {_            processingSqlBySettingAutoCommit(exchange)__        } else {_            processingSqlWithoutSettingAutoCommit(exchange)__        }_    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,if,get,endpoint,is,reset,auto,commit,processing,sql,by,setting,auto,commit,exchange,else,processing,sql,without,setting,auto,commit,exchange
JdbcProducer -> public void process(Exchange exchange) throws Exception;1460186358;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        if (getEndpoint().isResetAutoCommit()) {_            processingSqlBySettingAutoCommit(exchange)__        } else {_            processingSqlWithoutSettingAutoCommit(exchange)__        }_    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,if,get,endpoint,is,reset,auto,commit,processing,sql,by,setting,auto,commit,exchange,else,processing,sql,without,setting,auto,commit,exchange
JdbcProducer -> public void process(Exchange exchange) throws Exception;1524001544;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        if (getEndpoint().isResetAutoCommit()) {_            processingSqlBySettingAutoCommit(exchange)__        } else {_            processingSqlWithoutSettingAutoCommit(exchange)__        }_    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,if,get,endpoint,is,reset,auto,commit,processing,sql,by,setting,auto,commit,exchange,else,processing,sql,without,setting,auto,commit,exchange
JdbcProducer -> public void process(Exchange exchange) throws Exception;1540108160;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        if (getEndpoint().isResetAutoCommit()) {_            processingSqlBySettingAutoCommit(exchange)__        } else {_            processingSqlWithoutSettingAutoCommit(exchange)__        }_    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,if,get,endpoint,is,reset,auto,commit,processing,sql,by,setting,auto,commit,exchange,else,processing,sql,without,setting,auto,commit,exchange
JdbcProducer -> public void process(Exchange exchange) throws Exception;1540108161;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        if (getEndpoint().isResetAutoCommit()) {_            processingSqlBySettingAutoCommit(exchange)__        } else {_            processingSqlWithoutSettingAutoCommit(exchange)__        }_    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,if,get,endpoint,is,reset,auto,commit,processing,sql,by,setting,auto,commit,exchange,else,processing,sql,without,setting,auto,commit,exchange
JdbcProducer -> public void process(Exchange exchange) throws Exception;1540108163;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        if (getEndpoint().isResetAutoCommit()) {_            processingSqlBySettingAutoCommit(exchange)__        } else {_            processingSqlWithoutSettingAutoCommit(exchange)__        }_    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,if,get,endpoint,is,reset,auto,commit,processing,sql,by,setting,auto,commit,exchange,else,processing,sql,without,setting,auto,commit,exchange
JdbcProducer -> public void process(Exchange exchange) throws Exception;1548055099;Execute sql of exchange and set results on output;public void process(Exchange exchange) throws Exception {_        if (getEndpoint().isResetAutoCommit()) {_            processingSqlBySettingAutoCommit(exchange)__        } else {_            processingSqlWithoutSettingAutoCommit(exchange)__        }_    };execute,sql,of,exchange,and,set,results,on,output;public,void,process,exchange,exchange,throws,exception,if,get,endpoint,is,reset,auto,commit,processing,sql,by,setting,auto,commit,exchange,else,processing,sql,without,setting,auto,commit,exchange
JdbcProducer -> protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException;1226518886;Sets the result from the ResultSet to the Exchange as its OUT body.;protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException {_        ResultSetMetaData meta = rs.getMetaData()___        HashMap<String, Object> props = new HashMap<String, Object>()__        IntrospectionSupport.getProperties(meta, props, "jdbc.")__        exchange.getOut().setHeaders(props)___        int count = meta.getColumnCount()__        List<HashMap<String, Object>> data = new ArrayList<HashMap<String, Object>>()__        int rowNumber = 0__        while (rs.next() && (readSize == 0 || rowNumber < readSize)) {_            HashMap<String, Object> row = new HashMap<String, Object>()__            for (int i = 0_ i < count_ i++) {_                int columnNumber = i + 1__                String columnName = meta.getColumnName(columnNumber)__                row.put(columnName, rs.getObject(columnName))__            }_            data.add(row)__            rowNumber++__        }__        exchange.getOut().setBody(data)__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body;protected,void,set,result,set,exchange,exchange,result,set,rs,throws,sqlexception,result,set,meta,data,meta,rs,get,meta,data,hash,map,string,object,props,new,hash,map,string,object,introspection,support,get,properties,meta,props,jdbc,exchange,get,out,set,headers,props,int,count,meta,get,column,count,list,hash,map,string,object,data,new,array,list,hash,map,string,object,int,row,number,0,while,rs,next,read,size,0,row,number,read,size,hash,map,string,object,row,new,hash,map,string,object,for,int,i,0,i,count,i,int,column,number,i,1,string,column,name,meta,get,column,name,column,number,row,put,column,name,rs,get,object,column,name,data,add,row,row,number,exchange,get,out,set,body,data
JdbcProducer -> protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException;1235737914;Sets the result from the ResultSet to the Exchange as its OUT body.;protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException {_        ResultSetMetaData meta = rs.getMetaData()___        int count = meta.getColumnCount()__        List<Map<String, Object>> data = new ArrayList<Map<String, Object>>()__        int rowNumber = 0__        while (rs.next() && (readSize == 0 || rowNumber < readSize)) {_            Map<String, Object> row = new HashMap<String, Object>()__            for (int i = 0_ i < count_ i++) {_                int columnNumber = i + 1__                String columnName = meta.getColumnName(columnNumber)__                row.put(columnName, rs.getObject(columnName))__            }_            data.add(row)__            rowNumber++__        }_        exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, rowNumber)__        exchange.getOut().setBody(data)__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body;protected,void,set,result,set,exchange,exchange,result,set,rs,throws,sqlexception,result,set,meta,data,meta,rs,get,meta,data,int,count,meta,get,column,count,list,map,string,object,data,new,array,list,map,string,object,int,row,number,0,while,rs,next,read,size,0,row,number,read,size,map,string,object,row,new,hash,map,string,object,for,int,i,0,i,count,i,int,column,number,i,1,string,column,name,meta,get,column,name,column,number,row,put,column,name,rs,get,object,column,name,data,add,row,row,number,exchange,get,out,set,header,jdbc,constants,row,number,exchange,get,out,set,body,data
JdbcProducer -> protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException;1253170425;Sets the result from the ResultSet to the Exchange as its OUT body.;protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException {_        ResultSetMetaData meta = rs.getMetaData()___        int count = meta.getColumnCount()__        List<Map<String, Object>> data = new ArrayList<Map<String, Object>>()__        int rowNumber = 0__        while (rs.next() && (readSize == 0 || rowNumber < readSize)) {_            Map<String, Object> row = new HashMap<String, Object>()__            for (int i = 0_ i < count_ i++) {_                int columnNumber = i + 1__                String columnName = meta.getColumnName(columnNumber)__                row.put(columnName, rs.getObject(columnName))__            }_            data.add(row)__            rowNumber++__        }_        exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, rowNumber)__        exchange.getOut().setBody(data)__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body;protected,void,set,result,set,exchange,exchange,result,set,rs,throws,sqlexception,result,set,meta,data,meta,rs,get,meta,data,int,count,meta,get,column,count,list,map,string,object,data,new,array,list,map,string,object,int,row,number,0,while,rs,next,read,size,0,row,number,read,size,map,string,object,row,new,hash,map,string,object,for,int,i,0,i,count,i,int,column,number,i,1,string,column,name,meta,get,column,name,column,number,row,put,column,name,rs,get,object,column,name,data,add,row,row,number,exchange,get,out,set,header,jdbc,constants,row,number,exchange,get,out,set,body,data
JdbcProducer -> protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException;1259058670;Sets the result from the ResultSet to the Exchange as its OUT body.;protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException {_        ResultSetMetaData meta = rs.getMetaData()___        int count = meta.getColumnCount()__        List<Map<String, Object>> data = new ArrayList<Map<String, Object>>()__        int rowNumber = 0__        while (rs.next() && (readSize == 0 || rowNumber < readSize)) {_            Map<String, Object> row = new HashMap<String, Object>()__            for (int i = 0_ i < count_ i++) {_                int columnNumber = i + 1__                String columnName = meta.getColumnName(columnNumber)__                row.put(columnName, rs.getObject(columnName))__            }_            data.add(row)__            rowNumber++__        }_        exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, rowNumber)__        exchange.getOut().setBody(data)__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body;protected,void,set,result,set,exchange,exchange,result,set,rs,throws,sqlexception,result,set,meta,data,meta,rs,get,meta,data,int,count,meta,get,column,count,list,map,string,object,data,new,array,list,map,string,object,int,row,number,0,while,rs,next,read,size,0,row,number,read,size,map,string,object,row,new,hash,map,string,object,for,int,i,0,i,count,i,int,column,number,i,1,string,column,name,meta,get,column,name,column,number,row,put,column,name,rs,get,object,column,name,data,add,row,row,number,exchange,get,out,set,header,jdbc,constants,row,number,exchange,get,out,set,body,data
JdbcProducer -> protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException;1261731183;Sets the result from the ResultSet to the Exchange as its OUT body.;protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException {_        ResultSetMetaData meta = rs.getMetaData()___        int count = meta.getColumnCount()__        List<Map<String, Object>> data = new ArrayList<Map<String, Object>>()__        int rowNumber = 0__        while (rs.next() && (readSize == 0 || rowNumber < readSize)) {_            Map<String, Object> row = new HashMap<String, Object>()__            for (int i = 0_ i < count_ i++) {_                int columnNumber = i + 1__                String columnName = meta.getColumnName(columnNumber)__                row.put(columnName, rs.getObject(columnName))__            }_            data.add(row)__            rowNumber++__        }_        exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, rowNumber)__        exchange.getOut().setBody(data)__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body;protected,void,set,result,set,exchange,exchange,result,set,rs,throws,sqlexception,result,set,meta,data,meta,rs,get,meta,data,int,count,meta,get,column,count,list,map,string,object,data,new,array,list,map,string,object,int,row,number,0,while,rs,next,read,size,0,row,number,read,size,map,string,object,row,new,hash,map,string,object,for,int,i,0,i,count,i,int,column,number,i,1,string,column,name,meta,get,column,name,column,number,row,put,column,name,rs,get,object,column,name,data,add,row,row,number,exchange,get,out,set,header,jdbc,constants,row,number,exchange,get,out,set,body,data
JdbcProducer -> protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException;1263280876;Sets the result from the ResultSet to the Exchange as its OUT body.;protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException {_        ResultSetMetaData meta = rs.getMetaData()___        _        boolean jdbc4 = getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics()___        int count = meta.getColumnCount()__        List<Map<String, Object>> data = new ArrayList<Map<String, Object>>()__        int rowNumber = 0__        while (rs.next() && (readSize == 0 || rowNumber < readSize)) {_            Map<String, Object> row = new HashMap<String, Object>()__            for (int i = 0_ i < count_ i++) {_                int columnNumber = i + 1__                _                String columnName__                if (jdbc4) {_                    _                    columnName = meta.getColumnLabel(columnNumber)__                } else {_                    _                    try {_                        columnName = meta.getColumnLabel(columnNumber)__                    } catch (SQLException e) {_                        columnName = meta.getColumnName(columnNumber)__                    }_                }_                _                row.put(columnName, rs.getObject(columnNumber))__            }_            data.add(row)__            rowNumber++__        }_        exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, rowNumber)__        exchange.getOut().setBody(data)__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body;protected,void,set,result,set,exchange,exchange,result,set,rs,throws,sqlexception,result,set,meta,data,meta,rs,get,meta,data,boolean,jdbc4,get,endpoint,is,use,jdbc4column,name,and,label,semantics,int,count,meta,get,column,count,list,map,string,object,data,new,array,list,map,string,object,int,row,number,0,while,rs,next,read,size,0,row,number,read,size,map,string,object,row,new,hash,map,string,object,for,int,i,0,i,count,i,int,column,number,i,1,string,column,name,if,jdbc4,column,name,meta,get,column,label,column,number,else,try,column,name,meta,get,column,label,column,number,catch,sqlexception,e,column,name,meta,get,column,name,column,number,row,put,column,name,rs,get,object,column,number,data,add,row,row,number,exchange,get,out,set,header,jdbc,constants,row,number,exchange,get,out,set,body,data
JdbcProducer -> protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException;1283263860;Sets the result from the ResultSet to the Exchange as its OUT body.;protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException {_        ResultSetMetaData meta = rs.getMetaData()___        _        boolean jdbc4 = getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics()___        int count = meta.getColumnCount()__        List<Map<String, Object>> data = new ArrayList<Map<String, Object>>()__        int rowNumber = 0__        while (rs.next() && (readSize == 0 || rowNumber < readSize)) {_            Map<String, Object> row = new HashMap<String, Object>()__            for (int i = 0_ i < count_ i++) {_                int columnNumber = i + 1__                _                String columnName__                if (jdbc4) {_                    _                    columnName = meta.getColumnLabel(columnNumber)__                } else {_                    _                    try {_                        columnName = meta.getColumnLabel(columnNumber)__                    } catch (SQLException e) {_                        columnName = meta.getColumnName(columnNumber)__                    }_                }_                _                row.put(columnName, rs.getObject(columnNumber))__            }_            data.add(row)__            rowNumber++__        }_        exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, rowNumber)__        exchange.getOut().setBody(data)__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body;protected,void,set,result,set,exchange,exchange,result,set,rs,throws,sqlexception,result,set,meta,data,meta,rs,get,meta,data,boolean,jdbc4,get,endpoint,is,use,jdbc4column,name,and,label,semantics,int,count,meta,get,column,count,list,map,string,object,data,new,array,list,map,string,object,int,row,number,0,while,rs,next,read,size,0,row,number,read,size,map,string,object,row,new,hash,map,string,object,for,int,i,0,i,count,i,int,column,number,i,1,string,column,name,if,jdbc4,column,name,meta,get,column,label,column,number,else,try,column,name,meta,get,column,label,column,number,catch,sqlexception,e,column,name,meta,get,column,name,column,number,row,put,column,name,rs,get,object,column,number,data,add,row,row,number,exchange,get,out,set,header,jdbc,constants,row,number,exchange,get,out,set,body,data
JdbcProducer -> protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException;1283264658;Sets the result from the ResultSet to the Exchange as its OUT body.;protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException {_        ResultSetMetaData meta = rs.getMetaData()___        _        boolean jdbc4 = getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics()___        int count = meta.getColumnCount()__        List<Map<String, Object>> data = new ArrayList<Map<String, Object>>()__        int rowNumber = 0__        while (rs.next() && (readSize == 0 || rowNumber < readSize)) {_            Map<String, Object> row = new HashMap<String, Object>()__            for (int i = 0_ i < count_ i++) {_                int columnNumber = i + 1__                _                String columnName__                if (jdbc4) {_                    _                    columnName = meta.getColumnLabel(columnNumber)__                } else {_                    _                    try {_                        columnName = meta.getColumnLabel(columnNumber)__                    } catch (SQLException e) {_                        columnName = meta.getColumnName(columnNumber)__                    }_                }_                _                row.put(columnName, rs.getObject(columnNumber))__            }_            data.add(row)__            rowNumber++__        }_        exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, rowNumber)__        exchange.getOut().setBody(data)__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body;protected,void,set,result,set,exchange,exchange,result,set,rs,throws,sqlexception,result,set,meta,data,meta,rs,get,meta,data,boolean,jdbc4,get,endpoint,is,use,jdbc4column,name,and,label,semantics,int,count,meta,get,column,count,list,map,string,object,data,new,array,list,map,string,object,int,row,number,0,while,rs,next,read,size,0,row,number,read,size,map,string,object,row,new,hash,map,string,object,for,int,i,0,i,count,i,int,column,number,i,1,string,column,name,if,jdbc4,column,name,meta,get,column,label,column,number,else,try,column,name,meta,get,column,label,column,number,catch,sqlexception,e,column,name,meta,get,column,name,column,number,row,put,column,name,rs,get,object,column,number,data,add,row,row,number,exchange,get,out,set,header,jdbc,constants,row,number,exchange,get,out,set,body,data
JdbcProducer -> protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException;1296546062;Sets the result from the ResultSet to the Exchange as its OUT body.;protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException {_        ResultSetMetaData meta = rs.getMetaData()___        _        boolean jdbc4 = getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics()___        int count = meta.getColumnCount()__        List<Map<String, Object>> data = new ArrayList<Map<String, Object>>()__        int rowNumber = 0__        while (rs.next() && (readSize == 0 || rowNumber < readSize)) {_            Map<String, Object> row = new HashMap<String, Object>()__            for (int i = 0_ i < count_ i++) {_                int columnNumber = i + 1__                _                String columnName__                if (jdbc4) {_                    _                    columnName = meta.getColumnLabel(columnNumber)__                } else {_                    _                    try {_                        columnName = meta.getColumnLabel(columnNumber)__                    } catch (SQLException e) {_                        columnName = meta.getColumnName(columnNumber)__                    }_                }_                _                row.put(columnName, rs.getObject(columnNumber))__            }_            data.add(row)__            rowNumber++__        }_        exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, rowNumber)__        exchange.getOut().setBody(data)__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body;protected,void,set,result,set,exchange,exchange,result,set,rs,throws,sqlexception,result,set,meta,data,meta,rs,get,meta,data,boolean,jdbc4,get,endpoint,is,use,jdbc4column,name,and,label,semantics,int,count,meta,get,column,count,list,map,string,object,data,new,array,list,map,string,object,int,row,number,0,while,rs,next,read,size,0,row,number,read,size,map,string,object,row,new,hash,map,string,object,for,int,i,0,i,count,i,int,column,number,i,1,string,column,name,if,jdbc4,column,name,meta,get,column,label,column,number,else,try,column,name,meta,get,column,label,column,number,catch,sqlexception,e,column,name,meta,get,column,name,column,number,row,put,column,name,rs,get,object,column,number,data,add,row,row,number,exchange,get,out,set,header,jdbc,constants,row,number,exchange,get,out,set,body,data
JdbcProducer -> protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException;1297975937;Sets the result from the ResultSet to the Exchange as its OUT body.;protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException {_        ResultSetMetaData meta = rs.getMetaData()___        _        boolean jdbc4 = getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics()___        int count = meta.getColumnCount()__        List<Map<String, Object>> data = new ArrayList<Map<String, Object>>()__        int rowNumber = 0__        while (rs.next() && (readSize == 0 || rowNumber < readSize)) {_            Map<String, Object> row = new HashMap<String, Object>()__            for (int i = 0_ i < count_ i++) {_                int columnNumber = i + 1__                _                String columnName__                if (jdbc4) {_                    _                    columnName = meta.getColumnLabel(columnNumber)__                } else {_                    _                    try {_                        columnName = meta.getColumnLabel(columnNumber)__                    } catch (SQLException e) {_                        columnName = meta.getColumnName(columnNumber)__                    }_                }_                _                row.put(columnName, rs.getObject(columnNumber))__            }_            data.add(row)__            rowNumber++__        }_        exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, rowNumber)__        exchange.getOut().setBody(data)__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body;protected,void,set,result,set,exchange,exchange,result,set,rs,throws,sqlexception,result,set,meta,data,meta,rs,get,meta,data,boolean,jdbc4,get,endpoint,is,use,jdbc4column,name,and,label,semantics,int,count,meta,get,column,count,list,map,string,object,data,new,array,list,map,string,object,int,row,number,0,while,rs,next,read,size,0,row,number,read,size,map,string,object,row,new,hash,map,string,object,for,int,i,0,i,count,i,int,column,number,i,1,string,column,name,if,jdbc4,column,name,meta,get,column,label,column,number,else,try,column,name,meta,get,column,label,column,number,catch,sqlexception,e,column,name,meta,get,column,name,column,number,row,put,column,name,rs,get,object,column,number,data,add,row,row,number,exchange,get,out,set,header,jdbc,constants,row,number,exchange,get,out,set,body,data
JdbcProducer -> protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException;1303847897;Sets the result from the ResultSet to the Exchange as its OUT body.;protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException {_        ResultSetMetaData meta = rs.getMetaData()___        _        boolean jdbc4 = getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics()___        int count = meta.getColumnCount()__        List<Map<String, Object>> data = new ArrayList<Map<String, Object>>()__        int rowNumber = 0__        while (rs.next() && (readSize == 0 || rowNumber < readSize)) {_            Map<String, Object> row = new HashMap<String, Object>()__            for (int i = 0_ i < count_ i++) {_                int columnNumber = i + 1__                _                String columnName__                if (jdbc4) {_                    _                    columnName = meta.getColumnLabel(columnNumber)__                } else {_                    _                    try {_                        columnName = meta.getColumnLabel(columnNumber)__                    } catch (SQLException e) {_                        columnName = meta.getColumnName(columnNumber)__                    }_                }_                _                row.put(columnName, rs.getObject(columnNumber))__            }_            data.add(row)__            rowNumber++__        }_        exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, rowNumber)__        exchange.getOut().setBody(data)__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body;protected,void,set,result,set,exchange,exchange,result,set,rs,throws,sqlexception,result,set,meta,data,meta,rs,get,meta,data,boolean,jdbc4,get,endpoint,is,use,jdbc4column,name,and,label,semantics,int,count,meta,get,column,count,list,map,string,object,data,new,array,list,map,string,object,int,row,number,0,while,rs,next,read,size,0,row,number,read,size,map,string,object,row,new,hash,map,string,object,for,int,i,0,i,count,i,int,column,number,i,1,string,column,name,if,jdbc4,column,name,meta,get,column,label,column,number,else,try,column,name,meta,get,column,label,column,number,catch,sqlexception,e,column,name,meta,get,column,name,column,number,row,put,column,name,rs,get,object,column,number,data,add,row,row,number,exchange,get,out,set,header,jdbc,constants,row,number,exchange,get,out,set,body,data
JdbcProducer -> protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException;1303937346;Sets the result from the ResultSet to the Exchange as its OUT body.;protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException {_        ResultSetMetaData meta = rs.getMetaData()___        _        boolean jdbc4 = getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics()___        int count = meta.getColumnCount()__        List<Map<String, Object>> data = new ArrayList<Map<String, Object>>()__        int rowNumber = 0__        while (rs.next() && (readSize == 0 || rowNumber < readSize)) {_            Map<String, Object> row = new HashMap<String, Object>()__            for (int i = 0_ i < count_ i++) {_                int columnNumber = i + 1__                _                String columnName__                if (jdbc4) {_                    _                    columnName = meta.getColumnLabel(columnNumber)__                } else {_                    _                    try {_                        columnName = meta.getColumnLabel(columnNumber)__                    } catch (SQLException e) {_                        columnName = meta.getColumnName(columnNumber)__                    }_                }_                _                row.put(columnName, rs.getObject(columnNumber))__            }_            data.add(row)__            rowNumber++__        }_        exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, rowNumber)__        exchange.getOut().setBody(data)__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body;protected,void,set,result,set,exchange,exchange,result,set,rs,throws,sqlexception,result,set,meta,data,meta,rs,get,meta,data,boolean,jdbc4,get,endpoint,is,use,jdbc4column,name,and,label,semantics,int,count,meta,get,column,count,list,map,string,object,data,new,array,list,map,string,object,int,row,number,0,while,rs,next,read,size,0,row,number,read,size,map,string,object,row,new,hash,map,string,object,for,int,i,0,i,count,i,int,column,number,i,1,string,column,name,if,jdbc4,column,name,meta,get,column,label,column,number,else,try,column,name,meta,get,column,label,column,number,catch,sqlexception,e,column,name,meta,get,column,name,column,number,row,put,column,name,rs,get,object,column,number,data,add,row,row,number,exchange,get,out,set,header,jdbc,constants,row,number,exchange,get,out,set,body,data
JdbcProducer -> protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException;1304094062;Sets the result from the ResultSet to the Exchange as its OUT body.;protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException {_        ResultSetMetaData meta = rs.getMetaData()___        _        boolean jdbc4 = getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics()___        int count = meta.getColumnCount()__        List<Map<String, Object>> data = new ArrayList<Map<String, Object>>()__        int rowNumber = 0__        while (rs.next() && (readSize == 0 || rowNumber < readSize)) {_            Map<String, Object> row = new HashMap<String, Object>()__            for (int i = 0_ i < count_ i++) {_                int columnNumber = i + 1__                _                String columnName__                if (jdbc4) {_                    _                    columnName = meta.getColumnLabel(columnNumber)__                } else {_                    _                    try {_                        columnName = meta.getColumnLabel(columnNumber)__                    } catch (SQLException e) {_                        columnName = meta.getColumnName(columnNumber)__                    }_                }_                _                row.put(columnName, rs.getObject(columnNumber))__            }_            data.add(row)__            rowNumber++__        }_        exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, rowNumber)__        exchange.getOut().setBody(data)__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body;protected,void,set,result,set,exchange,exchange,result,set,rs,throws,sqlexception,result,set,meta,data,meta,rs,get,meta,data,boolean,jdbc4,get,endpoint,is,use,jdbc4column,name,and,label,semantics,int,count,meta,get,column,count,list,map,string,object,data,new,array,list,map,string,object,int,row,number,0,while,rs,next,read,size,0,row,number,read,size,map,string,object,row,new,hash,map,string,object,for,int,i,0,i,count,i,int,column,number,i,1,string,column,name,if,jdbc4,column,name,meta,get,column,label,column,number,else,try,column,name,meta,get,column,label,column,number,catch,sqlexception,e,column,name,meta,get,column,name,column,number,row,put,column,name,rs,get,object,column,number,data,add,row,row,number,exchange,get,out,set,header,jdbc,constants,row,number,exchange,get,out,set,body,data
JdbcProducer -> protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException;1307685726;Sets the result from the ResultSet to the Exchange as its OUT body.;protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException {_        ResultSetMetaData meta = rs.getMetaData()___        _        boolean jdbc4 = getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics()___        int count = meta.getColumnCount()__        List<Map<String, Object>> data = new ArrayList<Map<String, Object>>()__        int rowNumber = 0__        while (rs.next() && (readSize == 0 || rowNumber < readSize)) {_            Map<String, Object> row = new HashMap<String, Object>()__            for (int i = 0_ i < count_ i++) {_                int columnNumber = i + 1__                _                String columnName__                if (jdbc4) {_                    _                    columnName = meta.getColumnLabel(columnNumber)__                } else {_                    _                    try {_                        columnName = meta.getColumnLabel(columnNumber)__                    } catch (SQLException e) {_                        columnName = meta.getColumnName(columnNumber)__                    }_                }_                _                row.put(columnName, rs.getObject(columnNumber))__            }_            data.add(row)__            rowNumber++__        }_        exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, rowNumber)__        exchange.getOut().setBody(data)__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body;protected,void,set,result,set,exchange,exchange,result,set,rs,throws,sqlexception,result,set,meta,data,meta,rs,get,meta,data,boolean,jdbc4,get,endpoint,is,use,jdbc4column,name,and,label,semantics,int,count,meta,get,column,count,list,map,string,object,data,new,array,list,map,string,object,int,row,number,0,while,rs,next,read,size,0,row,number,read,size,map,string,object,row,new,hash,map,string,object,for,int,i,0,i,count,i,int,column,number,i,1,string,column,name,if,jdbc4,column,name,meta,get,column,label,column,number,else,try,column,name,meta,get,column,label,column,number,catch,sqlexception,e,column,name,meta,get,column,name,column,number,row,put,column,name,rs,get,object,column,number,data,add,row,row,number,exchange,get,out,set,header,jdbc,constants,row,number,exchange,get,out,set,body,data
JdbcProducer -> protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException;1311692742;Sets the result from the ResultSet to the Exchange as its OUT body.;protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException {_        ResultSetMetaData meta = rs.getMetaData()___        _        boolean jdbc4 = getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics()___        int count = meta.getColumnCount()__        List<Map<String, Object>> data = new ArrayList<Map<String, Object>>()__        int rowNumber = 0__        while (rs.next() && (readSize == 0 || rowNumber < readSize)) {_            Map<String, Object> row = new HashMap<String, Object>()__            for (int i = 0_ i < count_ i++) {_                int columnNumber = i + 1__                _                String columnName__                if (jdbc4) {_                    _                    columnName = meta.getColumnLabel(columnNumber)__                } else {_                    _                    try {_                        columnName = meta.getColumnLabel(columnNumber)__                    } catch (SQLException e) {_                        columnName = meta.getColumnName(columnNumber)__                    }_                }_                _                row.put(columnName, rs.getObject(columnNumber))__            }_            data.add(row)__            rowNumber++__        }_        exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, rowNumber)__        exchange.getOut().setBody(data)__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body;protected,void,set,result,set,exchange,exchange,result,set,rs,throws,sqlexception,result,set,meta,data,meta,rs,get,meta,data,boolean,jdbc4,get,endpoint,is,use,jdbc4column,name,and,label,semantics,int,count,meta,get,column,count,list,map,string,object,data,new,array,list,map,string,object,int,row,number,0,while,rs,next,read,size,0,row,number,read,size,map,string,object,row,new,hash,map,string,object,for,int,i,0,i,count,i,int,column,number,i,1,string,column,name,if,jdbc4,column,name,meta,get,column,label,column,number,else,try,column,name,meta,get,column,label,column,number,catch,sqlexception,e,column,name,meta,get,column,name,column,number,row,put,column,name,rs,get,object,column,number,data,add,row,row,number,exchange,get,out,set,header,jdbc,constants,row,number,exchange,get,out,set,body,data
JdbcProducer -> protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException;1314695830;Sets the result from the ResultSet to the Exchange as its OUT body.;protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException {_        ResultSetMetaData meta = rs.getMetaData()___        _        boolean jdbc4 = getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics()___        int count = meta.getColumnCount()__        List<Map<String, Object>> data = new ArrayList<Map<String, Object>>()__        int rowNumber = 0__        while (rs.next() && (readSize == 0 || rowNumber < readSize)) {_            Map<String, Object> row = new LinkedHashMap<String, Object>()__            for (int i = 0_ i < count_ i++) {_                int columnNumber = i + 1__                _                String columnName__                if (jdbc4) {_                    _                    columnName = meta.getColumnLabel(columnNumber)__                } else {_                    _                    try {_                        columnName = meta.getColumnLabel(columnNumber)__                    } catch (SQLException e) {_                        columnName = meta.getColumnName(columnNumber)__                    }_                }_                _                row.put(columnName, rs.getObject(columnNumber))__            }_            data.add(row)__            rowNumber++__        }_        exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, rowNumber)__        exchange.getOut().setBody(data)__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body;protected,void,set,result,set,exchange,exchange,result,set,rs,throws,sqlexception,result,set,meta,data,meta,rs,get,meta,data,boolean,jdbc4,get,endpoint,is,use,jdbc4column,name,and,label,semantics,int,count,meta,get,column,count,list,map,string,object,data,new,array,list,map,string,object,int,row,number,0,while,rs,next,read,size,0,row,number,read,size,map,string,object,row,new,linked,hash,map,string,object,for,int,i,0,i,count,i,int,column,number,i,1,string,column,name,if,jdbc4,column,name,meta,get,column,label,column,number,else,try,column,name,meta,get,column,label,column,number,catch,sqlexception,e,column,name,meta,get,column,name,column,number,row,put,column,name,rs,get,object,column,number,data,add,row,row,number,exchange,get,out,set,header,jdbc,constants,row,number,exchange,get,out,set,body,data
JdbcProducer -> protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException;1318405667;Sets the result from the ResultSet to the Exchange as its OUT body.;protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException {_        ResultSetMetaData meta = rs.getMetaData()___        _        boolean jdbc4 = getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics()___        int count = meta.getColumnCount()__        List<Map<String, Object>> data = new ArrayList<Map<String, Object>>()__        int rowNumber = 0__        while (rs.next() && (readSize == 0 || rowNumber < readSize)) {_            Map<String, Object> row = new LinkedHashMap<String, Object>()__            for (int i = 0_ i < count_ i++) {_                int columnNumber = i + 1__                _                String columnName__                if (jdbc4) {_                    _                    columnName = meta.getColumnLabel(columnNumber)__                } else {_                    _                    try {_                        columnName = meta.getColumnLabel(columnNumber)__                    } catch (SQLException e) {_                        columnName = meta.getColumnName(columnNumber)__                    }_                }_                _                row.put(columnName, rs.getObject(columnNumber))__            }_            data.add(row)__            rowNumber++__        }_        exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, rowNumber)__        exchange.getOut().setBody(data)__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body;protected,void,set,result,set,exchange,exchange,result,set,rs,throws,sqlexception,result,set,meta,data,meta,rs,get,meta,data,boolean,jdbc4,get,endpoint,is,use,jdbc4column,name,and,label,semantics,int,count,meta,get,column,count,list,map,string,object,data,new,array,list,map,string,object,int,row,number,0,while,rs,next,read,size,0,row,number,read,size,map,string,object,row,new,linked,hash,map,string,object,for,int,i,0,i,count,i,int,column,number,i,1,string,column,name,if,jdbc4,column,name,meta,get,column,label,column,number,else,try,column,name,meta,get,column,label,column,number,catch,sqlexception,e,column,name,meta,get,column,name,column,number,row,put,column,name,rs,get,object,column,number,data,add,row,row,number,exchange,get,out,set,header,jdbc,constants,row,number,exchange,get,out,set,body,data
JdbcProducer -> protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException;1319017322;Sets the result from the ResultSet to the Exchange as its OUT body.;protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException {_        ResultSetMetaData meta = rs.getMetaData()___        _        boolean jdbc4 = getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics()___        int count = meta.getColumnCount()__        List<Map<String, Object>> data = new ArrayList<Map<String, Object>>()__        int rowNumber = 0__        while (rs.next() && (readSize == 0 || rowNumber < readSize)) {_            Map<String, Object> row = new LinkedHashMap<String, Object>()__            for (int i = 0_ i < count_ i++) {_                int columnNumber = i + 1__                _                String columnName__                if (jdbc4) {_                    _                    columnName = meta.getColumnLabel(columnNumber)__                } else {_                    _                    try {_                        columnName = meta.getColumnLabel(columnNumber)__                    } catch (SQLException e) {_                        columnName = meta.getColumnName(columnNumber)__                    }_                }_                _                row.put(columnName, rs.getObject(columnNumber))__            }_            data.add(row)__            rowNumber++__        }_        exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, rowNumber)__        exchange.getOut().setBody(data)__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body;protected,void,set,result,set,exchange,exchange,result,set,rs,throws,sqlexception,result,set,meta,data,meta,rs,get,meta,data,boolean,jdbc4,get,endpoint,is,use,jdbc4column,name,and,label,semantics,int,count,meta,get,column,count,list,map,string,object,data,new,array,list,map,string,object,int,row,number,0,while,rs,next,read,size,0,row,number,read,size,map,string,object,row,new,linked,hash,map,string,object,for,int,i,0,i,count,i,int,column,number,i,1,string,column,name,if,jdbc4,column,name,meta,get,column,label,column,number,else,try,column,name,meta,get,column,label,column,number,catch,sqlexception,e,column,name,meta,get,column,name,column,number,row,put,column,name,rs,get,object,column,number,data,add,row,row,number,exchange,get,out,set,header,jdbc,constants,row,number,exchange,get,out,set,body,data
JdbcProducer -> protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException;1332684738;Sets the result from the ResultSet to the Exchange as its OUT body.;protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException {_        List<Map<String, Object>> data = extractResultSetData(rs)___        exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, data.size())__        exchange.getOut().setBody(data)__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body;protected,void,set,result,set,exchange,exchange,result,set,rs,throws,sqlexception,list,map,string,object,data,extract,result,set,data,rs,exchange,get,out,set,header,jdbc,constants,data,size,exchange,get,out,set,body,data
JdbcProducer -> protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException;1346310526;Sets the result from the ResultSet to the Exchange as its OUT body.;protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException {_        List<Map<String, Object>> data = extractResultSetData(rs)___        exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, data.size())__        exchange.getOut().setBody(data)__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body;protected,void,set,result,set,exchange,exchange,result,set,rs,throws,sqlexception,list,map,string,object,data,extract,result,set,data,rs,exchange,get,out,set,header,jdbc,constants,data,size,exchange,get,out,set,body,data
JdbcProducer -> protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException;1346310687;Sets the result from the ResultSet to the Exchange as its OUT body.;protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException {_        List<Map<String, Object>> data = extractResultSetData(rs)___        exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, data.size())__        exchange.getOut().setBody(data)__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body;protected,void,set,result,set,exchange,exchange,result,set,rs,throws,sqlexception,list,map,string,object,data,extract,result,set,data,rs,exchange,get,out,set,header,jdbc,constants,data,size,exchange,get,out,set,body,data
JdbcProducer -> protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException;1369467735;Sets the result from the ResultSet to the Exchange as its OUT body.;protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException {_        List<Map<String, Object>> data = extractResultSetData(rs)___        exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, data.size())__        exchange.getOut().setHeader(JdbcConstants.JDBC_COLUMN_NAMES, data.get(0).keySet())__        exchange.getOut().setBody(data)__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body;protected,void,set,result,set,exchange,exchange,result,set,rs,throws,sqlexception,list,map,string,object,data,extract,result,set,data,rs,exchange,get,out,set,header,jdbc,constants,data,size,exchange,get,out,set,header,jdbc,constants,data,get,0,key,set,exchange,get,out,set,body,data
JdbcProducer -> protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException;1370186569;Sets the result from the ResultSet to the Exchange as its OUT body.;protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException {_        List<Map<String, Object>> data = extractResultSetData(rs)___        exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, data.size())__        if (!data.isEmpty()) {_            exchange.getOut().setHeader(JdbcConstants.JDBC_COLUMN_NAMES, data.get(0).keySet())__        }_        exchange.getOut().setBody(data)__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body;protected,void,set,result,set,exchange,exchange,result,set,rs,throws,sqlexception,list,map,string,object,data,extract,result,set,data,rs,exchange,get,out,set,header,jdbc,constants,data,size,if,data,is,empty,exchange,get,out,set,header,jdbc,constants,data,get,0,key,set,exchange,get,out,set,body,data
JdbcProducer -> protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException;1376549254;Sets the result from the ResultSet to the Exchange as its OUT body.;protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException {_        List<Map<String, Object>> data = extractResultSetData(rs)___        exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, data.size())__        if (!data.isEmpty()) {_            exchange.getOut().setHeader(JdbcConstants.JDBC_COLUMN_NAMES, data.get(0).keySet())__        }_        exchange.getOut().setBody(data)__    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body;protected,void,set,result,set,exchange,exchange,result,set,rs,throws,sqlexception,list,map,string,object,data,extract,result,set,data,rs,exchange,get,out,set,header,jdbc,constants,data,size,if,data,is,empty,exchange,get,out,set,header,jdbc,constants,data,get,0,key,set,exchange,get,out,set,body,data
JdbcProducer -> protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException;1379509253;Sets the result from the ResultSet to the Exchange as its OUT body.;protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException {_        JdbcOutputType outputType = getEndpoint().getOutputType()___        if (outputType == JdbcOutputType.SelectList) {_            List<Map<String, Object>> data = extractResultSetData(rs)__            exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, data.size())__            if (!data.isEmpty()) {_                exchange.getOut().setHeader(JdbcConstants.JDBC_COLUMN_NAMES, data.get(0).keySet())__            }_            exchange.getOut().setBody(data)__        } else if (outputType == JdbcOutputType.SelectOne) {_            Object obj = queryForObject(rs)__            exchange.getOut().setBody(obj)__        }_    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body;protected,void,set,result,set,exchange,exchange,result,set,rs,throws,sqlexception,jdbc,output,type,output,type,get,endpoint,get,output,type,if,output,type,jdbc,output,type,select,list,list,map,string,object,data,extract,result,set,data,rs,exchange,get,out,set,header,jdbc,constants,data,size,if,data,is,empty,exchange,get,out,set,header,jdbc,constants,data,get,0,key,set,exchange,get,out,set,body,data,else,if,output,type,jdbc,output,type,select,one,object,obj,query,for,object,rs,exchange,get,out,set,body,obj
JdbcProducer -> protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException;1379510934;Sets the result from the ResultSet to the Exchange as its OUT body.;protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException {_        JdbcOutputType outputType = getEndpoint().getOutputType()___        if (outputType == JdbcOutputType.SelectList) {_            List<Map<String, Object>> data = extractResultSetData(rs)__            exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, data.size())__            if (!data.isEmpty()) {_                exchange.getOut().setHeader(JdbcConstants.JDBC_COLUMN_NAMES, data.get(0).keySet())__            }_            exchange.getOut().setBody(data)__        } else if (outputType == JdbcOutputType.SelectOne) {_            Object obj = queryForObject(rs)__            exchange.getOut().setBody(obj)__        }_    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body;protected,void,set,result,set,exchange,exchange,result,set,rs,throws,sqlexception,jdbc,output,type,output,type,get,endpoint,get,output,type,if,output,type,jdbc,output,type,select,list,list,map,string,object,data,extract,result,set,data,rs,exchange,get,out,set,header,jdbc,constants,data,size,if,data,is,empty,exchange,get,out,set,header,jdbc,constants,data,get,0,key,set,exchange,get,out,set,body,data,else,if,output,type,jdbc,output,type,select,one,object,obj,query,for,object,rs,exchange,get,out,set,body,obj
JdbcProducer -> protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException;1398321263;Sets the result from the ResultSet to the Exchange as its OUT body.;protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException {_        JdbcOutputType outputType = getEndpoint().getOutputType()___        if (outputType == JdbcOutputType.SelectList) {_            List<Map<String, Object>> data = extractResultSetData(rs)__            exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, data.size())__            if (!data.isEmpty()) {_                exchange.getOut().setHeader(JdbcConstants.JDBC_COLUMN_NAMES, data.get(0).keySet())__            }_            exchange.getOut().setBody(data)__        } else if (outputType == JdbcOutputType.SelectOne) {_            Object obj = queryForObject(rs)__            exchange.getOut().setBody(obj)__        }_    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body;protected,void,set,result,set,exchange,exchange,result,set,rs,throws,sqlexception,jdbc,output,type,output,type,get,endpoint,get,output,type,if,output,type,jdbc,output,type,select,list,list,map,string,object,data,extract,result,set,data,rs,exchange,get,out,set,header,jdbc,constants,data,size,if,data,is,empty,exchange,get,out,set,header,jdbc,constants,data,get,0,key,set,exchange,get,out,set,body,data,else,if,output,type,jdbc,output,type,select,one,object,obj,query,for,object,rs,exchange,get,out,set,body,obj
JdbcProducer -> protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException;1405374721;Sets the result from the ResultSet to the Exchange as its OUT body.;protected void setResultSet(Exchange exchange, ResultSet rs) throws SQLException {_        ResultSetIterator iterator = new ResultSetIterator(rs, getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics())___        _        exchange.getOut().getHeaders().putAll(exchange.getIn().getHeaders())___        JdbcOutputType outputType = getEndpoint().getOutputType()__        exchange.getOut().setHeader(JdbcConstants.JDBC_COLUMN_NAMES, iterator.getColumnNames())__        if (outputType == JdbcOutputType.StreamList) {_            exchange.getOut().setBody(iterator)__            exchange.addOnCompletion(new ResultSetIteratorCompletion(iterator))__        } else if (outputType == JdbcOutputType.SelectList) {_            List<Map<String, Object>> list = extractRows(iterator)__            exchange.getOut().setHeader(JdbcConstants.JDBC_ROW_COUNT, list.size())__            exchange.getOut().setBody(list)__        } else if (outputType == JdbcOutputType.SelectOne) {_            exchange.getOut().setBody(extractSingleRow(iterator))__        }_    };sets,the,result,from,the,result,set,to,the,exchange,as,its,out,body;protected,void,set,result,set,exchange,exchange,result,set,rs,throws,sqlexception,result,set,iterator,iterator,new,result,set,iterator,rs,get,endpoint,is,use,jdbc4column,name,and,label,semantics,exchange,get,out,get,headers,put,all,exchange,get,in,get,headers,jdbc,output,type,output,type,get,endpoint,get,output,type,exchange,get,out,set,header,jdbc,constants,iterator,get,column,names,if,output,type,jdbc,output,type,stream,list,exchange,get,out,set,body,iterator,exchange,add,on,completion,new,result,set,iterator,completion,iterator,else,if,output,type,jdbc,output,type,select,list,list,map,string,object,list,extract,rows,iterator,exchange,get,out,set,header,jdbc,constants,list,size,exchange,get,out,set,body,list,else,if,output,type,jdbc,output,type,select,one,exchange,get,out,set,body,extract,single,row,iterator
JdbcProducer -> protected List<Map<String, Object>> extractResultSetData(ResultSet rs) throws SQLException;1332684738;Extract the result from the ResultSet__@param rs rs produced by the SQL request_@return All the resulting rows containing each field of the ResultSet;protected List<Map<String, Object>> extractResultSetData(ResultSet rs) throws SQLException {_        ResultSetMetaData meta = rs.getMetaData()___        _        boolean jdbc4 = getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics()___        int count = meta.getColumnCount()__        List<Map<String, Object>> data = new ArrayList<Map<String, Object>>()__        int rowNumber = 0__        while (rs.next() && (readSize == 0 || rowNumber < readSize)) {_            Map<String, Object> row = new LinkedHashMap<String, Object>()__            for (int i = 0_ i < count_ i++) {_                int columnNumber = i + 1__                _                String columnName__                if (jdbc4) {_                    _                    columnName = meta.getColumnLabel(columnNumber)__                } else {_                    _                    try {_                        columnName = meta.getColumnLabel(columnNumber)__                    } catch (SQLException e) {_                        columnName = meta.getColumnName(columnNumber)__                    }_                }_                _                row.put(columnName, rs.getObject(columnNumber))__            }_            data.add(row)__            rowNumber++__        }_        return data__    };extract,the,result,from,the,result,set,param,rs,rs,produced,by,the,sql,request,return,all,the,resulting,rows,containing,each,field,of,the,result,set;protected,list,map,string,object,extract,result,set,data,result,set,rs,throws,sqlexception,result,set,meta,data,meta,rs,get,meta,data,boolean,jdbc4,get,endpoint,is,use,jdbc4column,name,and,label,semantics,int,count,meta,get,column,count,list,map,string,object,data,new,array,list,map,string,object,int,row,number,0,while,rs,next,read,size,0,row,number,read,size,map,string,object,row,new,linked,hash,map,string,object,for,int,i,0,i,count,i,int,column,number,i,1,string,column,name,if,jdbc4,column,name,meta,get,column,label,column,number,else,try,column,name,meta,get,column,label,column,number,catch,sqlexception,e,column,name,meta,get,column,name,column,number,row,put,column,name,rs,get,object,column,number,data,add,row,row,number,return,data
JdbcProducer -> protected List<Map<String, Object>> extractResultSetData(ResultSet rs) throws SQLException;1346310526;Extract the result from the ResultSet__@param rs rs produced by the SQL request_@return All the resulting rows containing each field of the ResultSet;protected List<Map<String, Object>> extractResultSetData(ResultSet rs) throws SQLException {_        ResultSetMetaData meta = rs.getMetaData()___        _        boolean jdbc4 = getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics()___        int count = meta.getColumnCount()__        List<Map<String, Object>> data = new ArrayList<Map<String, Object>>()__        int rowNumber = 0__        while (rs.next() && (readSize == 0 || rowNumber < readSize)) {_            Map<String, Object> row = new LinkedHashMap<String, Object>()__            for (int i = 0_ i < count_ i++) {_                int columnNumber = i + 1__                _                String columnName__                if (jdbc4) {_                    _                    columnName = meta.getColumnLabel(columnNumber)__                } else {_                    _                    try {_                        columnName = meta.getColumnLabel(columnNumber)__                    } catch (SQLException e) {_                        columnName = meta.getColumnName(columnNumber)__                    }_                }_				_				int columnType = meta.getColumnType( columnNumber )__				if (columnType == Types.CLOB || columnType == Types.BLOB) {_					row.put(columnName, rs.getString( columnNumber))__				}_				else {_					row.put(columnName, rs.getObject(columnNumber))__				}_            }_            data.add(row)__            rowNumber++__        }_        return data__    };extract,the,result,from,the,result,set,param,rs,rs,produced,by,the,sql,request,return,all,the,resulting,rows,containing,each,field,of,the,result,set;protected,list,map,string,object,extract,result,set,data,result,set,rs,throws,sqlexception,result,set,meta,data,meta,rs,get,meta,data,boolean,jdbc4,get,endpoint,is,use,jdbc4column,name,and,label,semantics,int,count,meta,get,column,count,list,map,string,object,data,new,array,list,map,string,object,int,row,number,0,while,rs,next,read,size,0,row,number,read,size,map,string,object,row,new,linked,hash,map,string,object,for,int,i,0,i,count,i,int,column,number,i,1,string,column,name,if,jdbc4,column,name,meta,get,column,label,column,number,else,try,column,name,meta,get,column,label,column,number,catch,sqlexception,e,column,name,meta,get,column,name,column,number,int,column,type,meta,get,column,type,column,number,if,column,type,types,clob,column,type,types,blob,row,put,column,name,rs,get,string,column,number,else,row,put,column,name,rs,get,object,column,number,data,add,row,row,number,return,data
JdbcProducer -> protected List<Map<String, Object>> extractResultSetData(ResultSet rs) throws SQLException;1346310687;Extract the result from the ResultSet__@param rs rs produced by the SQL request_@return All the resulting rows containing each field of the ResultSet;protected List<Map<String, Object>> extractResultSetData(ResultSet rs) throws SQLException {_        ResultSetMetaData meta = rs.getMetaData()___        _        boolean jdbc4 = getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics()___        int count = meta.getColumnCount()__        List<Map<String, Object>> data = new ArrayList<Map<String, Object>>()__        int rowNumber = 0__        while (rs.next() && (readSize == 0 || rowNumber < readSize)) {_            Map<String, Object> row = new LinkedHashMap<String, Object>()__            for (int i = 0_ i < count_ i++) {_                int columnNumber = i + 1__                _                String columnName__                if (jdbc4) {_                    _                    columnName = meta.getColumnLabel(columnNumber)__                } else {_                    _                    try {_                        columnName = meta.getColumnLabel(columnNumber)__                    } catch (SQLException e) {_                        columnName = meta.getColumnName(columnNumber)__                    }_                }_                _                int columnType = meta.getColumnType(columnNumber)__                if (columnType == Types.CLOB || columnType == Types.BLOB) {_                    row.put(columnName, rs.getString(columnNumber))__                } else {_                    row.put(columnName, rs.getObject(columnNumber))__                }_            }_            data.add(row)__            rowNumber++__        }_        return data__    };extract,the,result,from,the,result,set,param,rs,rs,produced,by,the,sql,request,return,all,the,resulting,rows,containing,each,field,of,the,result,set;protected,list,map,string,object,extract,result,set,data,result,set,rs,throws,sqlexception,result,set,meta,data,meta,rs,get,meta,data,boolean,jdbc4,get,endpoint,is,use,jdbc4column,name,and,label,semantics,int,count,meta,get,column,count,list,map,string,object,data,new,array,list,map,string,object,int,row,number,0,while,rs,next,read,size,0,row,number,read,size,map,string,object,row,new,linked,hash,map,string,object,for,int,i,0,i,count,i,int,column,number,i,1,string,column,name,if,jdbc4,column,name,meta,get,column,label,column,number,else,try,column,name,meta,get,column,label,column,number,catch,sqlexception,e,column,name,meta,get,column,name,column,number,int,column,type,meta,get,column,type,column,number,if,column,type,types,clob,column,type,types,blob,row,put,column,name,rs,get,string,column,number,else,row,put,column,name,rs,get,object,column,number,data,add,row,row,number,return,data
JdbcProducer -> protected List<Map<String, Object>> extractResultSetData(ResultSet rs) throws SQLException;1369467735;Extract the result from the ResultSet__@param rs rs produced by the SQL request_@return All the resulting rows containing each field of the ResultSet;protected List<Map<String, Object>> extractResultSetData(ResultSet rs) throws SQLException {_        ResultSetMetaData meta = rs.getMetaData()___        _        boolean jdbc4 = getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics()___        int count = meta.getColumnCount()__        List<Map<String, Object>> data = new ArrayList<Map<String, Object>>()__        int rowNumber = 0__        while (rs.next() && (readSize == 0 || rowNumber < readSize)) {_            Map<String, Object> row = new LinkedHashMap<String, Object>()__            for (int i = 0_ i < count_ i++) {_                int columnNumber = i + 1__                _                String columnName__                if (jdbc4) {_                    _                    columnName = meta.getColumnLabel(columnNumber)__                } else {_                    _                    try {_                        columnName = meta.getColumnLabel(columnNumber)__                    } catch (SQLException e) {_                        columnName = meta.getColumnName(columnNumber)__                    }_                }_                _                int columnType = meta.getColumnType(columnNumber)__                if (columnType == Types.CLOB || columnType == Types.BLOB) {_                    row.put(columnName, rs.getString(columnNumber))__                } else {_                    row.put(columnName, rs.getObject(columnNumber))__                }_            }_            data.add(row)__            rowNumber++__        }_        return data__    };extract,the,result,from,the,result,set,param,rs,rs,produced,by,the,sql,request,return,all,the,resulting,rows,containing,each,field,of,the,result,set;protected,list,map,string,object,extract,result,set,data,result,set,rs,throws,sqlexception,result,set,meta,data,meta,rs,get,meta,data,boolean,jdbc4,get,endpoint,is,use,jdbc4column,name,and,label,semantics,int,count,meta,get,column,count,list,map,string,object,data,new,array,list,map,string,object,int,row,number,0,while,rs,next,read,size,0,row,number,read,size,map,string,object,row,new,linked,hash,map,string,object,for,int,i,0,i,count,i,int,column,number,i,1,string,column,name,if,jdbc4,column,name,meta,get,column,label,column,number,else,try,column,name,meta,get,column,label,column,number,catch,sqlexception,e,column,name,meta,get,column,name,column,number,int,column,type,meta,get,column,type,column,number,if,column,type,types,clob,column,type,types,blob,row,put,column,name,rs,get,string,column,number,else,row,put,column,name,rs,get,object,column,number,data,add,row,row,number,return,data
JdbcProducer -> protected List<Map<String, Object>> extractResultSetData(ResultSet rs) throws SQLException;1370186569;Extract the result from the ResultSet__@param rs rs produced by the SQL request_@return All the resulting rows containing each field of the ResultSet;protected List<Map<String, Object>> extractResultSetData(ResultSet rs) throws SQLException {_        ResultSetMetaData meta = rs.getMetaData()___        _        boolean jdbc4 = getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics()___        int count = meta.getColumnCount()__        List<Map<String, Object>> data = new ArrayList<Map<String, Object>>()__        int rowNumber = 0__        while (rs.next() && (readSize == 0 || rowNumber < readSize)) {_            Map<String, Object> row = new LinkedHashMap<String, Object>()__            for (int i = 0_ i < count_ i++) {_                int columnNumber = i + 1__                _                String columnName__                if (jdbc4) {_                    _                    columnName = meta.getColumnLabel(columnNumber)__                } else {_                    _                    try {_                        columnName = meta.getColumnLabel(columnNumber)__                    } catch (SQLException e) {_                        columnName = meta.getColumnName(columnNumber)__                    }_                }_                _                int columnType = meta.getColumnType(columnNumber)__                if (columnType == Types.CLOB || columnType == Types.BLOB) {_                    row.put(columnName, rs.getString(columnNumber))__                } else {_                    row.put(columnName, rs.getObject(columnNumber))__                }_            }_            data.add(row)__            rowNumber++__        }_        return data__    };extract,the,result,from,the,result,set,param,rs,rs,produced,by,the,sql,request,return,all,the,resulting,rows,containing,each,field,of,the,result,set;protected,list,map,string,object,extract,result,set,data,result,set,rs,throws,sqlexception,result,set,meta,data,meta,rs,get,meta,data,boolean,jdbc4,get,endpoint,is,use,jdbc4column,name,and,label,semantics,int,count,meta,get,column,count,list,map,string,object,data,new,array,list,map,string,object,int,row,number,0,while,rs,next,read,size,0,row,number,read,size,map,string,object,row,new,linked,hash,map,string,object,for,int,i,0,i,count,i,int,column,number,i,1,string,column,name,if,jdbc4,column,name,meta,get,column,label,column,number,else,try,column,name,meta,get,column,label,column,number,catch,sqlexception,e,column,name,meta,get,column,name,column,number,int,column,type,meta,get,column,type,column,number,if,column,type,types,clob,column,type,types,blob,row,put,column,name,rs,get,string,column,number,else,row,put,column,name,rs,get,object,column,number,data,add,row,row,number,return,data
JdbcProducer -> protected List<Map<String, Object>> extractResultSetData(ResultSet rs) throws SQLException;1376549254;Extract the result from the ResultSet__@param rs rs produced by the SQL request_@return All the resulting rows containing each field of the ResultSet;protected List<Map<String, Object>> extractResultSetData(ResultSet rs) throws SQLException {_        ResultSetMetaData meta = rs.getMetaData()___        _        boolean jdbc4 = getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics()___        int count = meta.getColumnCount()__        List<Map<String, Object>> data = new ArrayList<Map<String, Object>>()__        int rowNumber = 0__        while (rs.next() && (readSize == 0 || rowNumber < readSize)) {_            Map<String, Object> row = new LinkedHashMap<String, Object>()__            for (int i = 0_ i < count_ i++) {_                int columnNumber = i + 1__                _                String columnName__                if (jdbc4) {_                    _                    columnName = meta.getColumnLabel(columnNumber)__                } else {_                    _                    try {_                        columnName = meta.getColumnLabel(columnNumber)__                    } catch (SQLException e) {_                        columnName = meta.getColumnName(columnNumber)__                    }_                }_                _                int columnType = meta.getColumnType(columnNumber)__                if (columnType == Types.CLOB || columnType == Types.BLOB) {_                    row.put(columnName, rs.getString(columnNumber))__                } else {_                    row.put(columnName, rs.getObject(columnNumber))__                }_            }_            data.add(row)__            rowNumber++__        }_        return data__    };extract,the,result,from,the,result,set,param,rs,rs,produced,by,the,sql,request,return,all,the,resulting,rows,containing,each,field,of,the,result,set;protected,list,map,string,object,extract,result,set,data,result,set,rs,throws,sqlexception,result,set,meta,data,meta,rs,get,meta,data,boolean,jdbc4,get,endpoint,is,use,jdbc4column,name,and,label,semantics,int,count,meta,get,column,count,list,map,string,object,data,new,array,list,map,string,object,int,row,number,0,while,rs,next,read,size,0,row,number,read,size,map,string,object,row,new,linked,hash,map,string,object,for,int,i,0,i,count,i,int,column,number,i,1,string,column,name,if,jdbc4,column,name,meta,get,column,label,column,number,else,try,column,name,meta,get,column,label,column,number,catch,sqlexception,e,column,name,meta,get,column,name,column,number,int,column,type,meta,get,column,type,column,number,if,column,type,types,clob,column,type,types,blob,row,put,column,name,rs,get,string,column,number,else,row,put,column,name,rs,get,object,column,number,data,add,row,row,number,return,data
JdbcProducer -> protected List<Map<String, Object>> extractResultSetData(ResultSet rs) throws SQLException;1379509253;Extract the result from the ResultSet__@param rs rs produced by the SQL request_@return All the resulting rows containing each field of the ResultSet;protected List<Map<String, Object>> extractResultSetData(ResultSet rs) throws SQLException {_        ResultSetMetaData meta = rs.getMetaData()___        _        boolean jdbc4 = getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics()___        int count = meta.getColumnCount()__        List<Map<String, Object>> data = new ArrayList<Map<String, Object>>()__        int rowNumber = 0__        while (rs.next() && (readSize == 0 || rowNumber < readSize)) {_            Map<String, Object> row = new LinkedHashMap<String, Object>()__            for (int i = 0_ i < count_ i++) {_                int columnNumber = i + 1__                _                String columnName__                if (jdbc4) {_                    _                    columnName = meta.getColumnLabel(columnNumber)__                } else {_                    _                    try {_                        columnName = meta.getColumnLabel(columnNumber)__                    } catch (SQLException e) {_                        columnName = meta.getColumnName(columnNumber)__                    }_                }_                _                int columnType = meta.getColumnType(columnNumber)__                if (columnType == Types.CLOB || columnType == Types.BLOB) {_                    row.put(columnName, rs.getString(columnNumber))__                } else {_                    row.put(columnName, rs.getObject(columnNumber))__                }_            }_            data.add(row)__            rowNumber++__        }_        return data__    };extract,the,result,from,the,result,set,param,rs,rs,produced,by,the,sql,request,return,all,the,resulting,rows,containing,each,field,of,the,result,set;protected,list,map,string,object,extract,result,set,data,result,set,rs,throws,sqlexception,result,set,meta,data,meta,rs,get,meta,data,boolean,jdbc4,get,endpoint,is,use,jdbc4column,name,and,label,semantics,int,count,meta,get,column,count,list,map,string,object,data,new,array,list,map,string,object,int,row,number,0,while,rs,next,read,size,0,row,number,read,size,map,string,object,row,new,linked,hash,map,string,object,for,int,i,0,i,count,i,int,column,number,i,1,string,column,name,if,jdbc4,column,name,meta,get,column,label,column,number,else,try,column,name,meta,get,column,label,column,number,catch,sqlexception,e,column,name,meta,get,column,name,column,number,int,column,type,meta,get,column,type,column,number,if,column,type,types,clob,column,type,types,blob,row,put,column,name,rs,get,string,column,number,else,row,put,column,name,rs,get,object,column,number,data,add,row,row,number,return,data
JdbcProducer -> protected List<Map<String, Object>> extractResultSetData(ResultSet rs) throws SQLException;1379510934;Extract the result from the ResultSet__@param rs rs produced by the SQL request_@return All the resulting rows containing each field of the ResultSet;protected List<Map<String, Object>> extractResultSetData(ResultSet rs) throws SQLException {_        ResultSetMetaData meta = rs.getMetaData()___        _        boolean jdbc4 = getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics()___        int count = meta.getColumnCount()__        List<Map<String, Object>> data = new ArrayList<Map<String, Object>>()__        int rowNumber = 0__        while (rs.next() && (readSize == 0 || rowNumber < readSize)) {_            Map<String, Object> row = new LinkedHashMap<String, Object>()__            for (int i = 0_ i < count_ i++) {_                int columnNumber = i + 1__                _                String columnName__                if (jdbc4) {_                    _                    columnName = meta.getColumnLabel(columnNumber)__                } else {_                    _                    try {_                        columnName = meta.getColumnLabel(columnNumber)__                    } catch (SQLException e) {_                        columnName = meta.getColumnName(columnNumber)__                    }_                }_                _                int columnType = meta.getColumnType(columnNumber)__                if (columnType == Types.CLOB || columnType == Types.BLOB) {_                    row.put(columnName, rs.getString(columnNumber))__                } else {_                    row.put(columnName, rs.getObject(columnNumber))__                }_            }_            data.add(row)__            rowNumber++__        }_        return data__    };extract,the,result,from,the,result,set,param,rs,rs,produced,by,the,sql,request,return,all,the,resulting,rows,containing,each,field,of,the,result,set;protected,list,map,string,object,extract,result,set,data,result,set,rs,throws,sqlexception,result,set,meta,data,meta,rs,get,meta,data,boolean,jdbc4,get,endpoint,is,use,jdbc4column,name,and,label,semantics,int,count,meta,get,column,count,list,map,string,object,data,new,array,list,map,string,object,int,row,number,0,while,rs,next,read,size,0,row,number,read,size,map,string,object,row,new,linked,hash,map,string,object,for,int,i,0,i,count,i,int,column,number,i,1,string,column,name,if,jdbc4,column,name,meta,get,column,label,column,number,else,try,column,name,meta,get,column,label,column,number,catch,sqlexception,e,column,name,meta,get,column,name,column,number,int,column,type,meta,get,column,type,column,number,if,column,type,types,clob,column,type,types,blob,row,put,column,name,rs,get,string,column,number,else,row,put,column,name,rs,get,object,column,number,data,add,row,row,number,return,data
JdbcProducer -> protected List<Map<String, Object>> extractResultSetData(ResultSet rs) throws SQLException;1398321263;Extract the result from the ResultSet__@param rs rs produced by the SQL request_@return All the resulting rows containing each field of the ResultSet;protected List<Map<String, Object>> extractResultSetData(ResultSet rs) throws SQLException {_        ResultSetMetaData meta = rs.getMetaData()___        _        boolean jdbc4 = getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics()___        int count = meta.getColumnCount()__        List<Map<String, Object>> data = new ArrayList<Map<String, Object>>()__        int rowNumber = 0__        while (rs.next() && (readSize == 0 || rowNumber < readSize)) {_            Map<String, Object> row = new LinkedHashMap<String, Object>()__            for (int i = 0_ i < count_ i++) {_                int columnNumber = i + 1__                _                String columnName__                if (jdbc4) {_                    _                    columnName = meta.getColumnLabel(columnNumber)__                } else {_                    _                    try {_                        columnName = meta.getColumnLabel(columnNumber)__                    } catch (SQLException e) {_                        columnName = meta.getColumnName(columnNumber)__                    }_                }_                _                int columnType = meta.getColumnType(columnNumber)__                if (columnType == Types.CLOB || columnType == Types.BLOB) {_                    row.put(columnName, rs.getString(columnNumber))__                } else {_                    row.put(columnName, rs.getObject(columnNumber))__                }_            }_            data.add(row)__            rowNumber++__        }_        return data__    };extract,the,result,from,the,result,set,param,rs,rs,produced,by,the,sql,request,return,all,the,resulting,rows,containing,each,field,of,the,result,set;protected,list,map,string,object,extract,result,set,data,result,set,rs,throws,sqlexception,result,set,meta,data,meta,rs,get,meta,data,boolean,jdbc4,get,endpoint,is,use,jdbc4column,name,and,label,semantics,int,count,meta,get,column,count,list,map,string,object,data,new,array,list,map,string,object,int,row,number,0,while,rs,next,read,size,0,row,number,read,size,map,string,object,row,new,linked,hash,map,string,object,for,int,i,0,i,count,i,int,column,number,i,1,string,column,name,if,jdbc4,column,name,meta,get,column,label,column,number,else,try,column,name,meta,get,column,label,column,number,catch,sqlexception,e,column,name,meta,get,column,name,column,number,int,column,type,meta,get,column,type,column,number,if,column,type,types,clob,column,type,types,blob,row,put,column,name,rs,get,string,column,number,else,row,put,column,name,rs,get,object,column,number,data,add,row,row,number,return,data
JdbcProducer -> protected void setGeneratedKeys(Exchange exchange, ResultSet generatedKeys) throws SQLException;1332684738;Sets the generated if any to the Exchange in headers :_- {@link JdbcConstants#JDBC_GENERATED_KEYS_ROW_COUNT} : the row count of generated keys_- {@link JdbcConstants#JDBC_GENERATED_KEYS_DATA} : the generated keys data__@param exchange The exchange where to store the generated keys_@param generatedKeys The result set containing the generated keys;protected void setGeneratedKeys(Exchange exchange, ResultSet generatedKeys) throws SQLException {_        if (generatedKeys != null) {_            List<Map<String, Object>> data = extractResultSetData(generatedKeys)___            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_ROW_COUNT, data.size())__            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_DATA, data)__        }_    };sets,the,generated,if,any,to,the,exchange,in,headers,link,jdbc,constants,the,row,count,of,generated,keys,link,jdbc,constants,the,generated,keys,data,param,exchange,the,exchange,where,to,store,the,generated,keys,param,generated,keys,the,result,set,containing,the,generated,keys;protected,void,set,generated,keys,exchange,exchange,result,set,generated,keys,throws,sqlexception,if,generated,keys,null,list,map,string,object,data,extract,result,set,data,generated,keys,exchange,get,out,set,header,jdbc,constants,data,size,exchange,get,out,set,header,jdbc,constants,data
JdbcProducer -> protected void setGeneratedKeys(Exchange exchange, ResultSet generatedKeys) throws SQLException;1346310526;Sets the generated if any to the Exchange in headers :_- {@link JdbcConstants#JDBC_GENERATED_KEYS_ROW_COUNT} : the row count of generated keys_- {@link JdbcConstants#JDBC_GENERATED_KEYS_DATA} : the generated keys data__@param exchange The exchange where to store the generated keys_@param generatedKeys The result set containing the generated keys;protected void setGeneratedKeys(Exchange exchange, ResultSet generatedKeys) throws SQLException {_        if (generatedKeys != null) {_            List<Map<String, Object>> data = extractResultSetData(generatedKeys)___            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_ROW_COUNT, data.size())__            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_DATA, data)__        }_    };sets,the,generated,if,any,to,the,exchange,in,headers,link,jdbc,constants,the,row,count,of,generated,keys,link,jdbc,constants,the,generated,keys,data,param,exchange,the,exchange,where,to,store,the,generated,keys,param,generated,keys,the,result,set,containing,the,generated,keys;protected,void,set,generated,keys,exchange,exchange,result,set,generated,keys,throws,sqlexception,if,generated,keys,null,list,map,string,object,data,extract,result,set,data,generated,keys,exchange,get,out,set,header,jdbc,constants,data,size,exchange,get,out,set,header,jdbc,constants,data
JdbcProducer -> protected void setGeneratedKeys(Exchange exchange, ResultSet generatedKeys) throws SQLException;1346310687;Sets the generated if any to the Exchange in headers :_- {@link JdbcConstants#JDBC_GENERATED_KEYS_ROW_COUNT} : the row count of generated keys_- {@link JdbcConstants#JDBC_GENERATED_KEYS_DATA} : the generated keys data__@param exchange The exchange where to store the generated keys_@param generatedKeys The result set containing the generated keys;protected void setGeneratedKeys(Exchange exchange, ResultSet generatedKeys) throws SQLException {_        if (generatedKeys != null) {_            List<Map<String, Object>> data = extractResultSetData(generatedKeys)___            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_ROW_COUNT, data.size())__            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_DATA, data)__        }_    };sets,the,generated,if,any,to,the,exchange,in,headers,link,jdbc,constants,the,row,count,of,generated,keys,link,jdbc,constants,the,generated,keys,data,param,exchange,the,exchange,where,to,store,the,generated,keys,param,generated,keys,the,result,set,containing,the,generated,keys;protected,void,set,generated,keys,exchange,exchange,result,set,generated,keys,throws,sqlexception,if,generated,keys,null,list,map,string,object,data,extract,result,set,data,generated,keys,exchange,get,out,set,header,jdbc,constants,data,size,exchange,get,out,set,header,jdbc,constants,data
JdbcProducer -> protected void setGeneratedKeys(Exchange exchange, ResultSet generatedKeys) throws SQLException;1369467735;Sets the generated if any to the Exchange in headers :_- {@link JdbcConstants#JDBC_GENERATED_KEYS_ROW_COUNT} : the row count of generated keys_- {@link JdbcConstants#JDBC_GENERATED_KEYS_DATA} : the generated keys data__@param exchange The exchange where to store the generated keys_@param generatedKeys The result set containing the generated keys;protected void setGeneratedKeys(Exchange exchange, ResultSet generatedKeys) throws SQLException {_        if (generatedKeys != null) {_            List<Map<String, Object>> data = extractResultSetData(generatedKeys)___            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_ROW_COUNT, data.size())__            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_DATA, data)__        }_    };sets,the,generated,if,any,to,the,exchange,in,headers,link,jdbc,constants,the,row,count,of,generated,keys,link,jdbc,constants,the,generated,keys,data,param,exchange,the,exchange,where,to,store,the,generated,keys,param,generated,keys,the,result,set,containing,the,generated,keys;protected,void,set,generated,keys,exchange,exchange,result,set,generated,keys,throws,sqlexception,if,generated,keys,null,list,map,string,object,data,extract,result,set,data,generated,keys,exchange,get,out,set,header,jdbc,constants,data,size,exchange,get,out,set,header,jdbc,constants,data
JdbcProducer -> protected void setGeneratedKeys(Exchange exchange, ResultSet generatedKeys) throws SQLException;1370186569;Sets the generated if any to the Exchange in headers :_- {@link JdbcConstants#JDBC_GENERATED_KEYS_ROW_COUNT} : the row count of generated keys_- {@link JdbcConstants#JDBC_GENERATED_KEYS_DATA} : the generated keys data__@param exchange      The exchange where to store the generated keys_@param generatedKeys The result set containing the generated keys;protected void setGeneratedKeys(Exchange exchange, ResultSet generatedKeys) throws SQLException {_        if (generatedKeys != null) {_            List<Map<String, Object>> data = extractResultSetData(generatedKeys)___            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_ROW_COUNT, data.size())__            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_DATA, data)__        }_    };sets,the,generated,if,any,to,the,exchange,in,headers,link,jdbc,constants,the,row,count,of,generated,keys,link,jdbc,constants,the,generated,keys,data,param,exchange,the,exchange,where,to,store,the,generated,keys,param,generated,keys,the,result,set,containing,the,generated,keys;protected,void,set,generated,keys,exchange,exchange,result,set,generated,keys,throws,sqlexception,if,generated,keys,null,list,map,string,object,data,extract,result,set,data,generated,keys,exchange,get,out,set,header,jdbc,constants,data,size,exchange,get,out,set,header,jdbc,constants,data
JdbcProducer -> protected void setGeneratedKeys(Exchange exchange, ResultSet generatedKeys) throws SQLException;1376549254;Sets the generated if any to the Exchange in headers :_- {@link JdbcConstants#JDBC_GENERATED_KEYS_ROW_COUNT} : the row count of generated keys_- {@link JdbcConstants#JDBC_GENERATED_KEYS_DATA} : the generated keys data__@param exchange      The exchange where to store the generated keys_@param generatedKeys The result set containing the generated keys;protected void setGeneratedKeys(Exchange exchange, ResultSet generatedKeys) throws SQLException {_        if (generatedKeys != null) {_            List<Map<String, Object>> data = extractResultSetData(generatedKeys)___            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_ROW_COUNT, data.size())__            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_DATA, data)__        }_    };sets,the,generated,if,any,to,the,exchange,in,headers,link,jdbc,constants,the,row,count,of,generated,keys,link,jdbc,constants,the,generated,keys,data,param,exchange,the,exchange,where,to,store,the,generated,keys,param,generated,keys,the,result,set,containing,the,generated,keys;protected,void,set,generated,keys,exchange,exchange,result,set,generated,keys,throws,sqlexception,if,generated,keys,null,list,map,string,object,data,extract,result,set,data,generated,keys,exchange,get,out,set,header,jdbc,constants,data,size,exchange,get,out,set,header,jdbc,constants,data
JdbcProducer -> protected void setGeneratedKeys(Exchange exchange, ResultSet generatedKeys) throws SQLException;1379509253;Sets the generated if any to the Exchange in headers :_- {@link JdbcConstants#JDBC_GENERATED_KEYS_ROW_COUNT} : the row count of generated keys_- {@link JdbcConstants#JDBC_GENERATED_KEYS_DATA} : the generated keys data__@param exchange      The exchange where to store the generated keys_@param generatedKeys The result set containing the generated keys;protected void setGeneratedKeys(Exchange exchange, ResultSet generatedKeys) throws SQLException {_        if (generatedKeys != null) {_            List<Map<String, Object>> data = extractResultSetData(generatedKeys)___            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_ROW_COUNT, data.size())__            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_DATA, data)__        }_    };sets,the,generated,if,any,to,the,exchange,in,headers,link,jdbc,constants,the,row,count,of,generated,keys,link,jdbc,constants,the,generated,keys,data,param,exchange,the,exchange,where,to,store,the,generated,keys,param,generated,keys,the,result,set,containing,the,generated,keys;protected,void,set,generated,keys,exchange,exchange,result,set,generated,keys,throws,sqlexception,if,generated,keys,null,list,map,string,object,data,extract,result,set,data,generated,keys,exchange,get,out,set,header,jdbc,constants,data,size,exchange,get,out,set,header,jdbc,constants,data
JdbcProducer -> protected void setGeneratedKeys(Exchange exchange, ResultSet generatedKeys) throws SQLException;1379510934;Sets the generated if any to the Exchange in headers :_- {@link JdbcConstants#JDBC_GENERATED_KEYS_ROW_COUNT} : the row count of generated keys_- {@link JdbcConstants#JDBC_GENERATED_KEYS_DATA} : the generated keys data__@param exchange      The exchange where to store the generated keys_@param generatedKeys The result set containing the generated keys;protected void setGeneratedKeys(Exchange exchange, ResultSet generatedKeys) throws SQLException {_        if (generatedKeys != null) {_            List<Map<String, Object>> data = extractResultSetData(generatedKeys)___            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_ROW_COUNT, data.size())__            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_DATA, data)__        }_    };sets,the,generated,if,any,to,the,exchange,in,headers,link,jdbc,constants,the,row,count,of,generated,keys,link,jdbc,constants,the,generated,keys,data,param,exchange,the,exchange,where,to,store,the,generated,keys,param,generated,keys,the,result,set,containing,the,generated,keys;protected,void,set,generated,keys,exchange,exchange,result,set,generated,keys,throws,sqlexception,if,generated,keys,null,list,map,string,object,data,extract,result,set,data,generated,keys,exchange,get,out,set,header,jdbc,constants,data,size,exchange,get,out,set,header,jdbc,constants,data
JdbcProducer -> protected void setGeneratedKeys(Exchange exchange, ResultSet generatedKeys) throws SQLException;1398321263;Sets the generated if any to the Exchange in headers :_- {@link JdbcConstants#JDBC_GENERATED_KEYS_ROW_COUNT} : the row count of generated keys_- {@link JdbcConstants#JDBC_GENERATED_KEYS_DATA} : the generated keys data__@param exchange      The exchange where to store the generated keys_@param generatedKeys The result set containing the generated keys;protected void setGeneratedKeys(Exchange exchange, ResultSet generatedKeys) throws SQLException {_        if (generatedKeys != null) {_            List<Map<String, Object>> data = extractResultSetData(generatedKeys)___            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_ROW_COUNT, data.size())__            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_DATA, data)__        }_    };sets,the,generated,if,any,to,the,exchange,in,headers,link,jdbc,constants,the,row,count,of,generated,keys,link,jdbc,constants,the,generated,keys,data,param,exchange,the,exchange,where,to,store,the,generated,keys,param,generated,keys,the,result,set,containing,the,generated,keys;protected,void,set,generated,keys,exchange,exchange,result,set,generated,keys,throws,sqlexception,if,generated,keys,null,list,map,string,object,data,extract,result,set,data,generated,keys,exchange,get,out,set,header,jdbc,constants,data,size,exchange,get,out,set,header,jdbc,constants,data
JdbcProducer -> protected void setGeneratedKeys(Exchange exchange, ResultSet generatedKeys) throws SQLException;1405374721;Sets the generated if any to the Exchange in headers :_- {@link JdbcConstants#JDBC_GENERATED_KEYS_ROW_COUNT} : the row count of generated keys_- {@link JdbcConstants#JDBC_GENERATED_KEYS_DATA} : the generated keys data__@param exchange The exchange where to store the generated keys_@param generatedKeys The result set containing the generated keys;protected void setGeneratedKeys(Exchange exchange, ResultSet generatedKeys) throws SQLException {_        if (generatedKeys != null) {_            ResultSetIterator iterator = new ResultSetIterator(generatedKeys, getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics())__            List<Map<String, Object>> data = extractRows(iterator)___            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_ROW_COUNT, data.size())__            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_DATA, data)__        }_    };sets,the,generated,if,any,to,the,exchange,in,headers,link,jdbc,constants,the,row,count,of,generated,keys,link,jdbc,constants,the,generated,keys,data,param,exchange,the,exchange,where,to,store,the,generated,keys,param,generated,keys,the,result,set,containing,the,generated,keys;protected,void,set,generated,keys,exchange,exchange,result,set,generated,keys,throws,sqlexception,if,generated,keys,null,result,set,iterator,iterator,new,result,set,iterator,generated,keys,get,endpoint,is,use,jdbc4column,name,and,label,semantics,list,map,string,object,data,extract,rows,iterator,exchange,get,out,set,header,jdbc,constants,data,size,exchange,get,out,set,header,jdbc,constants,data
JdbcProducer -> protected void setGeneratedKeys(Exchange exchange, ResultSet generatedKeys) throws SQLException;1415211488;Sets the generated if any to the Exchange in headers :_- {@link JdbcConstants#JDBC_GENERATED_KEYS_ROW_COUNT} : the row count of generated keys_- {@link JdbcConstants#JDBC_GENERATED_KEYS_DATA} : the generated keys data__@param exchange The exchange where to store the generated keys_@param generatedKeys The result set containing the generated keys;protected void setGeneratedKeys(Exchange exchange, ResultSet generatedKeys) throws SQLException {_        if (generatedKeys != null) {_            ResultSetIterator iterator = new ResultSetIterator(generatedKeys, getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics())__            List<Map<String, Object>> data = extractRows(iterator)___            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_ROW_COUNT, data.size())__            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_DATA, data)__        }_    };sets,the,generated,if,any,to,the,exchange,in,headers,link,jdbc,constants,the,row,count,of,generated,keys,link,jdbc,constants,the,generated,keys,data,param,exchange,the,exchange,where,to,store,the,generated,keys,param,generated,keys,the,result,set,containing,the,generated,keys;protected,void,set,generated,keys,exchange,exchange,result,set,generated,keys,throws,sqlexception,if,generated,keys,null,result,set,iterator,iterator,new,result,set,iterator,generated,keys,get,endpoint,is,use,jdbc4column,name,and,label,semantics,list,map,string,object,data,extract,rows,iterator,exchange,get,out,set,header,jdbc,constants,data,size,exchange,get,out,set,header,jdbc,constants,data
JdbcProducer -> protected void setGeneratedKeys(Exchange exchange, Connection conn, ResultSet generatedKeys) throws SQLException;1418799922;Sets the generated if any to the Exchange in headers :_- {@link JdbcConstants#JDBC_GENERATED_KEYS_ROW_COUNT} : the row count of generated keys_- {@link JdbcConstants#JDBC_GENERATED_KEYS_DATA} : the generated keys data__@param exchange      The exchange where to store the generated keys_@param conn          Current JDBC connection_@param generatedKeys The result set containing the generated keys;protected void setGeneratedKeys(Exchange exchange, Connection conn, ResultSet generatedKeys) throws SQLException {_        if (generatedKeys != null) {_            ResultSetIterator iterator = new ResultSetIterator(conn, generatedKeys, getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics())__            List<Map<String, Object>> data = extractRows(iterator)___            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_ROW_COUNT, data.size())__            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_DATA, data)__        }_    };sets,the,generated,if,any,to,the,exchange,in,headers,link,jdbc,constants,the,row,count,of,generated,keys,link,jdbc,constants,the,generated,keys,data,param,exchange,the,exchange,where,to,store,the,generated,keys,param,conn,current,jdbc,connection,param,generated,keys,the,result,set,containing,the,generated,keys;protected,void,set,generated,keys,exchange,exchange,connection,conn,result,set,generated,keys,throws,sqlexception,if,generated,keys,null,result,set,iterator,iterator,new,result,set,iterator,conn,generated,keys,get,endpoint,is,use,jdbc4column,name,and,label,semantics,list,map,string,object,data,extract,rows,iterator,exchange,get,out,set,header,jdbc,constants,data,size,exchange,get,out,set,header,jdbc,constants,data
JdbcProducer -> protected void setGeneratedKeys(Exchange exchange, Connection conn, ResultSet generatedKeys) throws SQLException;1443508472;Sets the generated if any to the Exchange in headers :_- {@link JdbcConstants#JDBC_GENERATED_KEYS_ROW_COUNT} : the row count of generated keys_- {@link JdbcConstants#JDBC_GENERATED_KEYS_DATA} : the generated keys data__@param exchange      The exchange where to store the generated keys_@param conn          Current JDBC connection_@param generatedKeys The result set containing the generated keys;protected void setGeneratedKeys(Exchange exchange, Connection conn, ResultSet generatedKeys) throws SQLException {_        if (generatedKeys != null) {_            ResultSetIterator iterator = new ResultSetIterator(conn, generatedKeys, getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics(), getEndpoint().isUseGetBytesForBlob())__            List<Map<String, Object>> data = extractRows(iterator)___            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_ROW_COUNT, data.size())__            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_DATA, data)__        }_    };sets,the,generated,if,any,to,the,exchange,in,headers,link,jdbc,constants,the,row,count,of,generated,keys,link,jdbc,constants,the,generated,keys,data,param,exchange,the,exchange,where,to,store,the,generated,keys,param,conn,current,jdbc,connection,param,generated,keys,the,result,set,containing,the,generated,keys;protected,void,set,generated,keys,exchange,exchange,connection,conn,result,set,generated,keys,throws,sqlexception,if,generated,keys,null,result,set,iterator,iterator,new,result,set,iterator,conn,generated,keys,get,endpoint,is,use,jdbc4column,name,and,label,semantics,get,endpoint,is,use,get,bytes,for,blob,list,map,string,object,data,extract,rows,iterator,exchange,get,out,set,header,jdbc,constants,data,size,exchange,get,out,set,header,jdbc,constants,data
JdbcProducer -> protected void setGeneratedKeys(Exchange exchange, Connection conn, ResultSet generatedKeys) throws SQLException;1452271113;Sets the generated if any to the Exchange in headers :_- {@link JdbcConstants#JDBC_GENERATED_KEYS_ROW_COUNT} : the row count of generated keys_- {@link JdbcConstants#JDBC_GENERATED_KEYS_DATA} : the generated keys data__@param exchange      The exchange where to store the generated keys_@param conn          Current JDBC connection_@param generatedKeys The result set containing the generated keys;protected void setGeneratedKeys(Exchange exchange, Connection conn, ResultSet generatedKeys) throws SQLException {_        if (generatedKeys != null) {_            ResultSetIterator iterator = new ResultSetIterator(conn, generatedKeys, getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics(), getEndpoint().isUseGetBytesForBlob())__            List<Map<String, Object>> data = extractRows(iterator)___            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_ROW_COUNT, data.size())__            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_DATA, data)__        }_    };sets,the,generated,if,any,to,the,exchange,in,headers,link,jdbc,constants,the,row,count,of,generated,keys,link,jdbc,constants,the,generated,keys,data,param,exchange,the,exchange,where,to,store,the,generated,keys,param,conn,current,jdbc,connection,param,generated,keys,the,result,set,containing,the,generated,keys;protected,void,set,generated,keys,exchange,exchange,connection,conn,result,set,generated,keys,throws,sqlexception,if,generated,keys,null,result,set,iterator,iterator,new,result,set,iterator,conn,generated,keys,get,endpoint,is,use,jdbc4column,name,and,label,semantics,get,endpoint,is,use,get,bytes,for,blob,list,map,string,object,data,extract,rows,iterator,exchange,get,out,set,header,jdbc,constants,data,size,exchange,get,out,set,header,jdbc,constants,data
JdbcProducer -> protected void setGeneratedKeys(Exchange exchange, Connection conn, ResultSet generatedKeys) throws SQLException;1460186358;Sets the generated if any to the Exchange in headers :_- {@link JdbcConstants#JDBC_GENERATED_KEYS_ROW_COUNT} : the row count of generated keys_- {@link JdbcConstants#JDBC_GENERATED_KEYS_DATA} : the generated keys data__@param exchange      The exchange where to store the generated keys_@param conn          Current JDBC connection_@param generatedKeys The result set containing the generated keys;protected void setGeneratedKeys(Exchange exchange, Connection conn, ResultSet generatedKeys) throws SQLException {_        if (generatedKeys != null) {_            ResultSetIterator iterator = new ResultSetIterator(conn, generatedKeys, getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics(), getEndpoint().isUseGetBytesForBlob())__            List<Map<String, Object>> data = extractRows(iterator)___            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_ROW_COUNT, data.size())__            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_DATA, data)__        }_    };sets,the,generated,if,any,to,the,exchange,in,headers,link,jdbc,constants,the,row,count,of,generated,keys,link,jdbc,constants,the,generated,keys,data,param,exchange,the,exchange,where,to,store,the,generated,keys,param,conn,current,jdbc,connection,param,generated,keys,the,result,set,containing,the,generated,keys;protected,void,set,generated,keys,exchange,exchange,connection,conn,result,set,generated,keys,throws,sqlexception,if,generated,keys,null,result,set,iterator,iterator,new,result,set,iterator,conn,generated,keys,get,endpoint,is,use,jdbc4column,name,and,label,semantics,get,endpoint,is,use,get,bytes,for,blob,list,map,string,object,data,extract,rows,iterator,exchange,get,out,set,header,jdbc,constants,data,size,exchange,get,out,set,header,jdbc,constants,data
JdbcProducer -> protected void setGeneratedKeys(Exchange exchange, Connection conn, ResultSet generatedKeys) throws SQLException;1524001544;Sets the generated if any to the Exchange in headers :_- {@link JdbcConstants#JDBC_GENERATED_KEYS_ROW_COUNT} : the row count of generated keys_- {@link JdbcConstants#JDBC_GENERATED_KEYS_DATA} : the generated keys data__@param exchange      The exchange where to store the generated keys_@param conn          Current JDBC connection_@param generatedKeys The result set containing the generated keys;protected void setGeneratedKeys(Exchange exchange, Connection conn, ResultSet generatedKeys) throws SQLException {_        if (generatedKeys != null) {_            ResultSetIterator iterator = new ResultSetIterator(conn, generatedKeys, getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics(), getEndpoint().isUseGetBytesForBlob())__            List<Map<String, Object>> data = extractRows(iterator)___            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_ROW_COUNT, data.size())__            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_DATA, data)__        }_    };sets,the,generated,if,any,to,the,exchange,in,headers,link,jdbc,constants,the,row,count,of,generated,keys,link,jdbc,constants,the,generated,keys,data,param,exchange,the,exchange,where,to,store,the,generated,keys,param,conn,current,jdbc,connection,param,generated,keys,the,result,set,containing,the,generated,keys;protected,void,set,generated,keys,exchange,exchange,connection,conn,result,set,generated,keys,throws,sqlexception,if,generated,keys,null,result,set,iterator,iterator,new,result,set,iterator,conn,generated,keys,get,endpoint,is,use,jdbc4column,name,and,label,semantics,get,endpoint,is,use,get,bytes,for,blob,list,map,string,object,data,extract,rows,iterator,exchange,get,out,set,header,jdbc,constants,data,size,exchange,get,out,set,header,jdbc,constants,data
JdbcProducer -> protected void setGeneratedKeys(Exchange exchange, Connection conn, ResultSet generatedKeys) throws SQLException;1540108160;Sets the generated if any to the Exchange in headers :_- {@link JdbcConstants#JDBC_GENERATED_KEYS_ROW_COUNT} : the row count of generated keys_- {@link JdbcConstants#JDBC_GENERATED_KEYS_DATA} : the generated keys data__@param exchange      The exchange where to store the generated keys_@param conn          Current JDBC connection_@param generatedKeys The result set containing the generated keys;protected void setGeneratedKeys(Exchange exchange, Connection conn, ResultSet generatedKeys) throws SQLException {_        if (generatedKeys != null) {_            ResultSetIterator iterator = new ResultSetIterator(conn, generatedKeys, getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics(), getEndpoint().isUseGetBytesForBlob())__            List<Map<String, Object>> data = extractRows(iterator)___            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_ROW_COUNT, data.size())__            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_DATA, data)__        }_    };sets,the,generated,if,any,to,the,exchange,in,headers,link,jdbc,constants,the,row,count,of,generated,keys,link,jdbc,constants,the,generated,keys,data,param,exchange,the,exchange,where,to,store,the,generated,keys,param,conn,current,jdbc,connection,param,generated,keys,the,result,set,containing,the,generated,keys;protected,void,set,generated,keys,exchange,exchange,connection,conn,result,set,generated,keys,throws,sqlexception,if,generated,keys,null,result,set,iterator,iterator,new,result,set,iterator,conn,generated,keys,get,endpoint,is,use,jdbc4column,name,and,label,semantics,get,endpoint,is,use,get,bytes,for,blob,list,map,string,object,data,extract,rows,iterator,exchange,get,out,set,header,jdbc,constants,data,size,exchange,get,out,set,header,jdbc,constants,data
JdbcProducer -> protected void setGeneratedKeys(Exchange exchange, Connection conn, ResultSet generatedKeys) throws SQLException;1540108161;Sets the generated if any to the Exchange in headers :_- {@link JdbcConstants#JDBC_GENERATED_KEYS_ROW_COUNT} : the row count of generated keys_- {@link JdbcConstants#JDBC_GENERATED_KEYS_DATA} : the generated keys data__@param exchange      The exchange where to store the generated keys_@param conn          Current JDBC connection_@param generatedKeys The result set containing the generated keys;protected void setGeneratedKeys(Exchange exchange, Connection conn, ResultSet generatedKeys) throws SQLException {_        if (generatedKeys != null) {_            ResultSetIterator iterator = new ResultSetIterator(conn, generatedKeys, getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics(), getEndpoint().isUseGetBytesForBlob())__            List<Map<String, Object>> data = extractRows(iterator)___            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_ROW_COUNT, data.size())__            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_DATA, data)__        }_    };sets,the,generated,if,any,to,the,exchange,in,headers,link,jdbc,constants,the,row,count,of,generated,keys,link,jdbc,constants,the,generated,keys,data,param,exchange,the,exchange,where,to,store,the,generated,keys,param,conn,current,jdbc,connection,param,generated,keys,the,result,set,containing,the,generated,keys;protected,void,set,generated,keys,exchange,exchange,connection,conn,result,set,generated,keys,throws,sqlexception,if,generated,keys,null,result,set,iterator,iterator,new,result,set,iterator,conn,generated,keys,get,endpoint,is,use,jdbc4column,name,and,label,semantics,get,endpoint,is,use,get,bytes,for,blob,list,map,string,object,data,extract,rows,iterator,exchange,get,out,set,header,jdbc,constants,data,size,exchange,get,out,set,header,jdbc,constants,data
JdbcProducer -> protected void setGeneratedKeys(Exchange exchange, Connection conn, ResultSet generatedKeys) throws SQLException;1540108163;Sets the generated if any to the Exchange in headers :_- {@link JdbcConstants#JDBC_GENERATED_KEYS_ROW_COUNT} : the row count of generated keys_- {@link JdbcConstants#JDBC_GENERATED_KEYS_DATA} : the generated keys data__@param exchange      The exchange where to store the generated keys_@param conn          Current JDBC connection_@param generatedKeys The result set containing the generated keys;protected void setGeneratedKeys(Exchange exchange, Connection conn, ResultSet generatedKeys) throws SQLException {_        if (generatedKeys != null) {_            ResultSetIterator iterator = new ResultSetIterator(conn, generatedKeys, getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics(), getEndpoint().isUseGetBytesForBlob())__            List<Map<String, Object>> data = extractRows(iterator)___            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_ROW_COUNT, data.size())__            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_DATA, data)__        }_    };sets,the,generated,if,any,to,the,exchange,in,headers,link,jdbc,constants,the,row,count,of,generated,keys,link,jdbc,constants,the,generated,keys,data,param,exchange,the,exchange,where,to,store,the,generated,keys,param,conn,current,jdbc,connection,param,generated,keys,the,result,set,containing,the,generated,keys;protected,void,set,generated,keys,exchange,exchange,connection,conn,result,set,generated,keys,throws,sqlexception,if,generated,keys,null,result,set,iterator,iterator,new,result,set,iterator,conn,generated,keys,get,endpoint,is,use,jdbc4column,name,and,label,semantics,get,endpoint,is,use,get,bytes,for,blob,list,map,string,object,data,extract,rows,iterator,exchange,get,out,set,header,jdbc,constants,data,size,exchange,get,out,set,header,jdbc,constants,data
JdbcProducer -> protected void setGeneratedKeys(Exchange exchange, Connection conn, ResultSet generatedKeys) throws SQLException;1548055099;Sets the generated if any to the Exchange in headers :_- {@link JdbcConstants#JDBC_GENERATED_KEYS_ROW_COUNT} : the row count of generated keys_- {@link JdbcConstants#JDBC_GENERATED_KEYS_DATA} : the generated keys data__@param exchange      The exchange where to store the generated keys_@param conn          Current JDBC connection_@param generatedKeys The result set containing the generated keys;protected void setGeneratedKeys(Exchange exchange, Connection conn, ResultSet generatedKeys) throws SQLException {_        if (generatedKeys != null) {_            ResultSetIterator iterator = new ResultSetIterator(conn, generatedKeys, getEndpoint().isUseJDBC4ColumnNameAndLabelSemantics(), getEndpoint().isUseGetBytesForBlob())__            List<Map<String, Object>> data = extractRows(iterator)___            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_ROW_COUNT, data.size())__            exchange.getOut().setHeader(JdbcConstants.JDBC_GENERATED_KEYS_DATA, data)__        }_    };sets,the,generated,if,any,to,the,exchange,in,headers,link,jdbc,constants,the,row,count,of,generated,keys,link,jdbc,constants,the,generated,keys,data,param,exchange,the,exchange,where,to,store,the,generated,keys,param,conn,current,jdbc,connection,param,generated,keys,the,result,set,containing,the,generated,keys;protected,void,set,generated,keys,exchange,exchange,connection,conn,result,set,generated,keys,throws,sqlexception,if,generated,keys,null,result,set,iterator,iterator,new,result,set,iterator,conn,generated,keys,get,endpoint,is,use,jdbc4column,name,and,label,semantics,get,endpoint,is,use,get,bytes,for,blob,list,map,string,object,data,extract,rows,iterator,exchange,get,out,set,header,jdbc,constants,data,size,exchange,get,out,set,header,jdbc,constants,data
