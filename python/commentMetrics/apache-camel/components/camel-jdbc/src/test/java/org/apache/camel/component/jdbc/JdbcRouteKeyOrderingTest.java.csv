# id;timestamp;commentText;codeText;commentWords;codeWords
JdbcRouteKeyOrderingTest -> private static boolean isOrdered(Set<String> keySet);1314695938;@param keySet (should have 2 items "ID" & "NAME")_@return true if "ID" comes before "NAME", false otherwise;private static boolean isOrdered(Set<String> keySet) {_        final String msg = "isOrdered() relies on \"ID\" & \"NAME\" being the only two fields"__        assertTrue(msg, keySet.contains("ID"))__        assertTrue(msg, keySet.contains("NAME"))__        assertEquals(msg, 2, keySet.size())__        _        final Iterator<String> iter = keySet.iterator()__        return "ID".equals(iter.next()) && "NAME".equals(iter.next())__    };param,key,set,should,have,2,items,id,name,return,true,if,id,comes,before,name,false,otherwise;private,static,boolean,is,ordered,set,string,key,set,final,string,msg,is,ordered,relies,on,id,name,being,the,only,two,fields,assert,true,msg,key,set,contains,id,assert,true,msg,key,set,contains,name,assert,equals,msg,2,key,set,size,final,iterator,string,iter,key,set,iterator,return,id,equals,iter,next,name,equals,iter,next
JdbcRouteKeyOrderingTest -> private static boolean isOrdered(Set<String> keySet);1325353821;@param keySet (should have 2 items "ID" & "NAME")_@return true if "ID" comes before "NAME", false otherwise;private static boolean isOrdered(Set<String> keySet) {_        final String msg = "isOrdered() relies on \"ID\" & \"NAME\" being the only two fields"__        assertTrue(msg, keySet.contains("ID"))__        assertTrue(msg, keySet.contains("NAME"))__        assertEquals(msg, 2, keySet.size())__        _        final Iterator<String> iter = keySet.iterator()__        return "ID".equals(iter.next()) && "NAME".equals(iter.next())__    };param,key,set,should,have,2,items,id,name,return,true,if,id,comes,before,name,false,otherwise;private,static,boolean,is,ordered,set,string,key,set,final,string,msg,is,ordered,relies,on,id,name,being,the,only,two,fields,assert,true,msg,key,set,contains,id,assert,true,msg,key,set,contains,name,assert,equals,msg,2,key,set,size,final,iterator,string,iter,key,set,iterator,return,id,equals,iter,next,name,equals,iter,next
JdbcRouteKeyOrderingTest -> private static boolean isOrdered(Set<String> keySet);1330973608;@param keySet (should have 2 items "ID" & "NAME")_@return true if "ID" comes before "NAME", false otherwise;private static boolean isOrdered(Set<String> keySet) {_        final String msg = "isOrdered() relies on \"ID\" & \"NAME\" being the only two fields"__        assertTrue(msg, keySet.contains("ID"))__        assertTrue(msg, keySet.contains("NAME"))__        assertEquals(msg, 2, keySet.size())__        _        final Iterator<String> iter = keySet.iterator()__        return "ID".equals(iter.next()) && "NAME".equals(iter.next())__    };param,key,set,should,have,2,items,id,name,return,true,if,id,comes,before,name,false,otherwise;private,static,boolean,is,ordered,set,string,key,set,final,string,msg,is,ordered,relies,on,id,name,being,the,only,two,fields,assert,true,msg,key,set,contains,id,assert,true,msg,key,set,contains,name,assert,equals,msg,2,key,set,size,final,iterator,string,iter,key,set,iterator,return,id,equals,iter,next,name,equals,iter,next
