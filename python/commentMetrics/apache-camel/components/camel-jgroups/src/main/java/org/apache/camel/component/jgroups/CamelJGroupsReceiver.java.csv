commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public void done(boolean doneSync) { // noop }
false;public;1;19;;@Override public void viewAccepted(View view) {     if (endpoint.isEnableViewMessages()) {         Exchange exchange = endpoint.createExchange(view).         try {             LOG.debug("Processing view: {}", view).             processor.process(exchange, new AsyncCallback() {                  @Override                 public void done(boolean doneSync) {                 // noop                 }             }).         } catch (Exception e) {             throw new JGroupsException("Error in consumer while dispatching exchange containing view " + view, e).         }     } else {         LOG.debug("Option enableViewMessages is set to false. Skipping processing of the view: {}", view).     } }
false;public;1;4;;@Override public void done(boolean doneSync) { // noop }
false;public;1;15;;@Override public void receive(Message message) {     Exchange exchange = endpoint.createExchange(message).     try {         LOG.debug("Processing message: {}", message).         processor.process(exchange, new AsyncCallback() {              @Override             public void done(boolean doneSync) {             // noop             }         }).     } catch (Exception e) {         throw new JGroupsException("Error in consumer while dispatching exchange containing message " + message, e).     } }
