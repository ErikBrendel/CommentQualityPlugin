commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;5;;// Life cycle callbacks @Override protected void doStart() throws Exception {     super.doStart().     endpoint.connect(). }
false;protected;0;5;;@Override protected void doStop() throws Exception {     endpoint.disconnect().     super.doStop(). }
false;public;1;21;;// Processing logic @Override public void process(Exchange exchange) throws Exception {     Object body = exchange.getIn().getBody().     if (body != null) {         Address destinationAddress = exchange.getIn().getHeader(JGroupsEndpoint.HEADER_JGROUPS_DEST, Address.class).         Address sourceAddress = exchange.getIn().getHeader(JGroupsEndpoint.HEADER_JGROUPS_SRC, Address.class).         log.debug("Posting: {} to cluster: {}", body, clusterName).         if (destinationAddress != null) {             log.debug("Posting to custom destination address: {}", destinationAddress).         }         if (sourceAddress != null) {             log.debug("Posting from custom source address: {}", sourceAddress).         }         Message message = new Message(destinationAddress, body).         message.setSrc(sourceAddress).         channel.send(message).     } else {         log.debug("Body is null, cannot post to channel.").     } }
