commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Test public void testStopStartProducer() throws Exception {     context().getRouteController().stopRoute(PRODUCER_ROUTE).     context().getRouteController().startRoute(PRODUCER_ROUTE).     testSendReceive(). }
false;public;0;7;;@Test public void testStopStartConsumer() throws Exception {     context().getRouteController().stopRoute(CONSUMER_ROUTE).     template().sendBody(DIRECT_PRODUCER, TEST_MESSAGE).     context().getRouteController().startRoute(CONSUMER_ROUTE).     testSendReceive(). }
false;private;0;6;;private void testSendReceive() throws InterruptedException {     template().sendBody(DIRECT_PRODUCER, TEST_MESSAGE).     final MockEndpoint mockEndpoint = getMockEndpoint(MOCK_CONSUMER).     mockEndpoint.expectedMinimumMessageCount(1).     mockEndpoint.assertIsSatisfied(). }
false;public;0;6;;@Override public void configure() throws Exception {     from(DIRECT_PRODUCER).routeId(PRODUCER_ROUTE).to(JGROUPS_SHARED_CHANNEL).     from(JGROUPS_SHARED_CHANNEL).routeId(CONSUMER_ROUTE).to(MOCK_CONSUMER). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from(DIRECT_PRODUCER).routeId(PRODUCER_ROUTE).to(JGROUPS_SHARED_CHANNEL).             from(JGROUPS_SHARED_CHANNEL).routeId(CONSUMER_ROUTE).to(MOCK_CONSUMER).         }     }. }
