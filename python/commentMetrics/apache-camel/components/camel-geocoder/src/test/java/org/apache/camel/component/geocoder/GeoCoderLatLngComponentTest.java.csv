commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;@Test public void testGeoCoder() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(1).     mock.expectedHeaderReceived(GeoCoderConstants.COUNTRY_SHORT, "US").     mock.expectedHeaderReceived(GeoCoderConstants.CITY, "New York").     // the address header overrides the endpoint configuration     template.sendBody("direct:start", "Hello").     assertMockEndpointsSatisfied(). }
false;public;0;8;;public void configure() {     from("direct:start").to("geocoder:latlng:40.714224,-73.961452?apiKey=" + getApiKey()).to("log:result").log("Location ${header.CamelGeocoderAddress} is at lat/lng: ${header.CamelGeocoderLatlng}" + " and in city ${header.CamelGeoCoderCity} in country ${header.CamelGeoCoderCountryLong}").to("mock:result"). }
false;protected;0;13;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() {             from("direct:start").to("geocoder:latlng:40.714224,-73.961452?apiKey=" + getApiKey()).to("log:result").log("Location ${header.CamelGeocoderAddress} is at lat/lng: ${header.CamelGeocoderLatlng}" + " and in city ${header.CamelGeoCoderCity} in country ${header.CamelGeoCoderCountryLong}").to("mock:result").         }     }. }
