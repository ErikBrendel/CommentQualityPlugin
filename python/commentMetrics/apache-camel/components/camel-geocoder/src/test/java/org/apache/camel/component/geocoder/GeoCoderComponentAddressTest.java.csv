commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void testGeoCoder() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(1).     mock.expectedHeaderReceived(GeoCoderConstants.LATLNG, "55.67609680,12.56833720").     // the address header overrides the endpoint configuration     template.sendBodyAndHeader("direct:start", "Hello", GeoCoderConstants.ADDRESS, " ").     assertMockEndpointsSatisfied(). }
false;public;0;7;;public void configure() {     from("direct:start").to("geocoder:address: empty?apiKey=" + getApiKey()).to("log:result").log("Location ${header.CamelGeocoderAddress} is at lat/lng: ${header.CamelGeocoderLatlng} in city ${header.CamelGeocoderCity}").to("mock:result"). }
false;protected;0;12;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() {             from("direct:start").to("geocoder:address: empty?apiKey=" + getApiKey()).to("log:result").log("Location ${header.CamelGeocoderAddress} is at lat/lng: ${header.CamelGeocoderLatlng} in city ${header.CamelGeocoderCity}").to("mock:result").         }     }. }
