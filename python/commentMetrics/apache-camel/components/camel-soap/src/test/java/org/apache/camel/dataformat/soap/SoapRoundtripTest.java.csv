commented;modifiers;parameterAmount;loc;comment;code
false;public;0;13;;@Test public void testRoundTrip() throws IOException, InterruptedException {     resultEndpoint.expectedMessageCount(1).     GetCustomersByName request = new GetCustomersByName().     request.setName("Mueller").     producer.sendBody(request).     resultEndpoint.assertIsSatisfied().     Exchange exchange = resultEndpoint.getExchanges().get(0).     GetCustomersByName received = exchange.getIn().getBody(GetCustomersByName.class).     assertNotNull(received).     assertEquals("Mueller", received.getName()). }
false;public;0;8;;@Override public void configure() throws Exception {     ElementNameStrategy elNameStrat = new TypeNameStrategy().     from("direct:start").marshal().soapjaxb(jaxbPackage, elNameStrat).unmarshal().soapjaxb(jaxbPackage, elNameStrat).to("mock:result"). }
false;protected;0;16;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          String jaxbPackage = GetCustomersByName.class.getPackage().getName().          @Override         public void configure() throws Exception {             ElementNameStrategy elNameStrat = new TypeNameStrategy().             from("direct:start").marshal().soapjaxb(jaxbPackage, elNameStrat).unmarshal().soapjaxb(jaxbPackage, elNameStrat).to("mock:result").         }     }. }
