commented;modifiers;parameterAmount;loc;comment;code
false;public;2;14;;@Override public GetCustomersByNameResponse getCustomersByName(GetCustomersByName parameters, Product product) {     if (product == null) {         throw new IllegalArgumentException("product may not be null").     }     GetCustomersByNameResponse response = new GetCustomersByNameResponse().     Customer customer = new Customer().     customer.setName(product.getName()).     customer.setRevenue(100000).     response.getReturn().add(customer).     return response. }
false;public;3;18;;@Override public void saveCustomer(SaveCustomer parameters, Product product, Holder<Company> company) {     if (product == null) {         throw new IllegalArgumentException("product may not be null.").     }     if (company == null) {         throw new IllegalArgumentException("company may not be null.").     }     Company returnCompany = new Company().     returnCompany.setName("MultipartSoft").     returnCompany.setPresident("Dr. Multipart").     company.value = returnCompany.     lastSavedCustomer = parameters.getCustomer(). }
false;public;2;12;;@Override public void getAllCustomers(Holder<GetAllCustomersResponse> parameters, Holder<CompanyType> companyType) {     if (companyType == null) {         throw new IllegalArgumentException("companyType may not be null").     }     GetAllCustomersResponse response = new GetAllCustomersResponse().     Customer customer = new Customer().     customer.setName("Smith").     customer.setRevenue(100000).     response.getReturn().add(customer). }
false;public;0;3;;public Customer getLastSavedCustomer() {     return lastSavedCustomer. }
false;public;3;19;;@Override public void saveCustomerToo(SaveCustomer parameters, Product product, Holder<Company> company) {     if (product == null) {         throw new IllegalArgumentException("product may not be null.").     }     if (company == null) {         throw new IllegalArgumentException("company may not be null.").     }     Company returnCompany = new Company().     returnCompany.setName("MultipartSoft").     returnCompany.setPresident("Dr. Multipart").     company.value = returnCompany.     lastSavedCustomer = parameters.getCustomer(). }
