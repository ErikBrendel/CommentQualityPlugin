commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Test public void testTypeNameStrategy() {     TypeNameStrategy strategy = new TypeNameStrategy().     QName name = strategy.findQNameForSoapActionOrType("", GetCustomersByName.class).     Assert.assertEquals("http://customerservice.example.com/", name.getNamespaceURI()).     Assert.assertEquals("getCustomersByName", name.getLocalPart()). }
false;public;0;10;;@Test public void testNoAnnotation() {     TypeNameStrategy strategy = new TypeNameStrategy().     try {         strategy.findQNameForSoapActionOrType("", String.class).         Assert.fail().     } catch (RuntimeException e) {     // Expected here     } }
false;public;0;11;;@Test public void testNoPackageInfo() {     TypeNameStrategy strategy = new TypeNameStrategy().     QName name = strategy.findQNameForSoapActionOrType("", AnnotatedClassWithoutNamespace.class).     Assert.assertEquals("test", name.getLocalPart()).     Assert.assertEquals("##default", name.getNamespaceURI()).     QName name2 = strategy.findQNameForSoapActionOrType("", AnnotatedClassWithNamespace.class).     Assert.assertEquals("test", name2.getLocalPart()).     Assert.assertEquals("http://mynamespace", name2.getNamespaceURI()). }
