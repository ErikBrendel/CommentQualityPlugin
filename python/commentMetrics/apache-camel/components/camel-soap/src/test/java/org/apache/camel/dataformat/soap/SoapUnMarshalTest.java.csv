commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;@Test public void testUnMarshalSoap() throws IOException, InterruptedException {     resultEndpoint.expectedMessageCount(1).     InputStream in = this.getClass().getResourceAsStream("request.xml").     producer.sendBody(in).     resultEndpoint.assertIsSatisfied().     Exchange exchange = resultEndpoint.getExchanges().get(0).     Object body = exchange.getIn().getBody().     assertEquals(GetCustomersByName.class, body.getClass()).     GetCustomersByName request = (GetCustomersByName) body.     assertEquals("Smith", request.getName()). }
false;public;0;10;;@Test public void testUnMarshalSoapFaultWithoutDetail() throws IOException, InterruptedException {     try {         InputStream in = this.getClass().getResourceAsStream("faultWithoutDetail.xml").         producer.sendBody(in).         fail("Should have thrown an Exception.").     } catch (Exception e) {         assertEquals(SOAPFaultException.class, e.getCause().getClass()).     } }
false;public;0;9;;@Override public void configure() throws Exception {     SoapJaxbDataFormat dataFormate = new SoapJaxbDataFormat().     dataFormate.setContextPath(SERVICE_PACKAGE).     dataFormate.setSchema("classpath:org/apache/camel/dataformat/soap/CustomerService.xsd,classpath:soap.xsd").     from("direct:start").unmarshal(dataFormate).to("mock:result"). }
false;protected;0;15;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             SoapJaxbDataFormat dataFormate = new SoapJaxbDataFormat().             dataFormate.setContextPath(SERVICE_PACKAGE).             dataFormate.setSchema("classpath:org/apache/camel/dataformat/soap/CustomerService.xsd,classpath:soap.xsd").             from("direct:start").unmarshal(dataFormate).to("mock:result").         }     }. }
