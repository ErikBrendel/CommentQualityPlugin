# id;timestamp;commentText;codeText;commentWords;codeWords
QNameStrategyTest -> @Test     public void testQName();1265620686;The strategy should always produce the QName that_it was given on the constructor;@Test_    public void testQName() {_        QName elementName = new QName("http://my.name.org", "myElement")__        QNameStrategy strategy = new QNameStrategy(elementName)__        ClassResolver resolver = new DefaultClassResolver()__        _        QName actualElementName = strategy.findQNameForSoapActionOrType(null, GetCustomersByName.class, resolver)__        Assert.assertEquals(elementName, actualElementName)__    };the,strategy,should,always,produce,the,qname,that,it,was,given,on,the,constructor;test,public,void,test,qname,qname,element,name,new,qname,http,my,name,org,my,element,qname,strategy,strategy,new,qname,strategy,element,name,class,resolver,resolver,new,default,class,resolver,qname,actual,element,name,strategy,find,qname,for,soap,action,or,type,null,get,customers,by,name,class,resolver,assert,assert,equals,element,name,actual,element,name
QNameStrategyTest -> @Test     public void testQName();1265681137;The strategy should always produce the QName that_it was given on the constructor;@Test_    public void testQName() {_        QName elementName = new QName("http://my.name.org", "myElement")__        QNameStrategy strategy = new QNameStrategy(elementName)__        _        QName actualElementName = strategy.findQNameForSoapActionOrType(null, GetCustomersByName.class)__        Assert.assertEquals(elementName, actualElementName)__    };the,strategy,should,always,produce,the,qname,that,it,was,given,on,the,constructor;test,public,void,test,qname,qname,element,name,new,qname,http,my,name,org,my,element,qname,strategy,strategy,new,qname,strategy,element,name,qname,actual,element,name,strategy,find,qname,for,soap,action,or,type,null,get,customers,by,name,class,assert,assert,equals,element,name,actual,element,name
QNameStrategyTest -> @Test     public void testQName();1265702792;The strategy should always produce the QName that_it was given on the constructor;@Test_    public void testQName() {_        QName elementName = new QName("http://my.name.org", "myElement")__        QNameStrategy strategy = new QNameStrategy(elementName)__        _        QName actualElementName = strategy.findQNameForSoapActionOrType(null, GetCustomersByName.class)__        Assert.assertEquals(elementName, actualElementName)__    };the,strategy,should,always,produce,the,qname,that,it,was,given,on,the,constructor;test,public,void,test,qname,qname,element,name,new,qname,http,my,name,org,my,element,qname,strategy,strategy,new,qname,strategy,element,name,qname,actual,element,name,strategy,find,qname,for,soap,action,or,type,null,get,customers,by,name,class,assert,assert,equals,element,name,actual,element,name
QNameStrategyTest -> @Test     public void testQName();1358887940;The strategy should always produce the QName that_it was given on the constructor;@Test_    public void testQName() {_        QName elementName = new QName("http://my.name.org", "myElement")__        QNameStrategy strategy = new QNameStrategy(elementName)__        _        QName actualElementName = strategy.findQNameForSoapActionOrType(null, GetCustomersByName.class)__        Assert.assertEquals(elementName, actualElementName)__    };the,strategy,should,always,produce,the,qname,that,it,was,given,on,the,constructor;test,public,void,test,qname,qname,element,name,new,qname,http,my,name,org,my,element,qname,strategy,strategy,new,qname,strategy,element,name,qname,actual,element,name,strategy,find,qname,for,soap,action,or,type,null,get,customers,by,name,class,assert,assert,equals,element,name,actual,element,name
QNameStrategyTest -> @Test     public void testQName();1537290824;The strategy should always produce the QName that_it was given on the constructor;@Test_    public void testQName() {_        QName elementName = new QName("http://my.name.org", "myElement")__        QNameStrategy strategy = new QNameStrategy(elementName)__        _        QName actualElementName = strategy.findQNameForSoapActionOrType(null, GetCustomersByName.class)__        Assert.assertEquals(elementName, actualElementName)__    };the,strategy,should,always,produce,the,qname,that,it,was,given,on,the,constructor;test,public,void,test,qname,qname,element,name,new,qname,http,my,name,org,my,element,qname,strategy,strategy,new,qname,strategy,element,name,qname,actual,element,name,strategy,find,qname,for,soap,action,or,type,null,get,customers,by,name,class,assert,assert,equals,element,name,actual,element,name
QNameStrategyTest -> @Test     public void testQName();1540108161;The strategy should always produce the QName that_it was given on the constructor;@Test_    public void testQName() {_        QName elementName = new QName("http://my.name.org", "myElement")__        QNameStrategy strategy = new QNameStrategy(elementName)__        _        QName actualElementName = strategy.findQNameForSoapActionOrType(null, GetCustomersByName.class)__        Assert.assertEquals(elementName, actualElementName)__    };the,strategy,should,always,produce,the,qname,that,it,was,given,on,the,constructor;test,public,void,test,qname,qname,element,name,new,qname,http,my,name,org,my,element,qname,strategy,strategy,new,qname,strategy,element,name,qname,actual,element,name,strategy,find,qname,for,soap,action,or,type,null,get,customers,by,name,class,assert,assert,equals,element,name,actual,element,name
