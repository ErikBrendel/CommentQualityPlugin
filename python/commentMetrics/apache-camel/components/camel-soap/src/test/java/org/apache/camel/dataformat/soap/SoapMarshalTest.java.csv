commented;modifiers;parameterAmount;loc;comment;code
true;public;0;10;/**  * Test Soap marshalling by sending a GetCustomerByName object and checking  * against a xml file.  *  * @throws IOException  * @throws InterruptedException  */ ;/**  * Test Soap marshalling by sending a GetCustomerByName object and checking  * against a xml file.  *  * @throws IOException  * @throws InterruptedException  */ @Test public void testMarshalNormalObject() throws IOException, InterruptedException {     InputStream in = this.getClass().getResourceAsStream("SoapMarshalTestExpectedResult.xml").     resultEndpoint.expectedMessageCount(1).     resultEndpoint.expectedBodiesReceived(TestUtil.readStream(in)).     GetCustomersByName request = new GetCustomersByName().     request.setName("Smith").     producer.sendBody(request).     resultEndpoint.assertIsSatisfied(). }
true;public;0;11;/**  * Test Soap marshalling by sending a NoSuchCustomerException object and  * checking against a xml file. We expect to receive a SOAP fault here that  * contains a NoSuchCustomer object as detail.  *  * @throws IOException  * @throws InterruptedException  */ ;/**  * Test Soap marshalling by sending a NoSuchCustomerException object and  * checking against a xml file. We expect to receive a SOAP fault here that  * contains a NoSuchCustomer object as detail.  *  * @throws IOException  * @throws InterruptedException  */ @Test public void testMarshalException() throws IOException, InterruptedException {     InputStream in = this.getClass().getResourceAsStream("SoapMarshalTestExpectedFault.xml").     resultEndpoint.expectedMessageCount(1).     resultEndpoint.expectedBodiesReceived(TestUtil.readStream(in)).     NoSuchCustomer noSuchCustomer = new NoSuchCustomer().     noSuchCustomer.setCustomerId("None").     NoSuchCustomerException exception = new NoSuchCustomerException("No customer found", noSuchCustomer).     producer.sendBodyAndHeader(null, Exchange.EXCEPTION_CAUGHT, exception).     resultEndpoint.assertIsSatisfied(). }
true;protected;0;5;/**  * Create data format by using the constructor  */ ;/**  * Create data format by using the constructor  */ protected SoapJaxbDataFormat createDataFormat() {     String jaxbPackage = GetCustomersByName.class.getPackage().getName().     ElementNameStrategy elStrat = new TypeNameStrategy().     return new SoapJaxbDataFormat(jaxbPackage, elStrat). }
false;public;0;7;;@Override public void configure() throws Exception {     SoapJaxbDataFormat df = createDataFormat().     //      from("direct:start").marshal(//      df).to("mock:result"). }
false;protected;0;13;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             SoapJaxbDataFormat df = createDataFormat().             //              from("direct:start").marshal(//              df).to("mock:result").         }     }. }
