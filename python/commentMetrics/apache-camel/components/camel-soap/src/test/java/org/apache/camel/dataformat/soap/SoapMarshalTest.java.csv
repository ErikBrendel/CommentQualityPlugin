# id;timestamp;commentText;codeText;commentWords;codeWords
SoapMarshalTest -> @Test     public void testMarshalNormalObject() throws IOException, InterruptedException;1268967338;Test Soap marshalling by sending a GetCustomerByName object and checking_against a xml file.__@throws IOException_@throws InterruptedException;@Test_    public void testMarshalNormalObject() throws IOException, InterruptedException {_        InputStream in = this.getClass().getResourceAsStream("SoapMarshalTestExpectedResult.xml")__        resultEndpoint.expectedMessageCount(1)__        resultEndpoint.expectedBodiesReceived(TestUtil.readStream(in))__        GetCustomersByName request = new GetCustomersByName()__        request.setName("Smith")__        producer.sendBody(request)__        resultEndpoint.assertIsSatisfied()__    };test,soap,marshalling,by,sending,a,get,customer,by,name,object,and,checking,against,a,xml,file,throws,ioexception,throws,interrupted,exception;test,public,void,test,marshal,normal,object,throws,ioexception,interrupted,exception,input,stream,in,this,get,class,get,resource,as,stream,soap,marshal,test,expected,result,xml,result,endpoint,expected,message,count,1,result,endpoint,expected,bodies,received,test,util,read,stream,in,get,customers,by,name,request,new,get,customers,by,name,request,set,name,smith,producer,send,body,request,result,endpoint,assert,is,satisfied
SoapMarshalTest -> @Test     public void testMarshalNormalObject() throws IOException, InterruptedException;1537290824;Test Soap marshalling by sending a GetCustomerByName object and checking_against a xml file.__@throws IOException_@throws InterruptedException;@Test_    public void testMarshalNormalObject() throws IOException, InterruptedException {_        InputStream in = this.getClass().getResourceAsStream("SoapMarshalTestExpectedResult.xml")__        resultEndpoint.expectedMessageCount(1)__        resultEndpoint.expectedBodiesReceived(TestUtil.readStream(in))__        GetCustomersByName request = new GetCustomersByName()__        request.setName("Smith")__        producer.sendBody(request)__        resultEndpoint.assertIsSatisfied()__    };test,soap,marshalling,by,sending,a,get,customer,by,name,object,and,checking,against,a,xml,file,throws,ioexception,throws,interrupted,exception;test,public,void,test,marshal,normal,object,throws,ioexception,interrupted,exception,input,stream,in,this,get,class,get,resource,as,stream,soap,marshal,test,expected,result,xml,result,endpoint,expected,message,count,1,result,endpoint,expected,bodies,received,test,util,read,stream,in,get,customers,by,name,request,new,get,customers,by,name,request,set,name,smith,producer,send,body,request,result,endpoint,assert,is,satisfied
SoapMarshalTest -> @Test     public void testMarshalNormalObject() throws IOException, InterruptedException;1540108161;Test Soap marshalling by sending a GetCustomerByName object and checking_against a xml file.__@throws IOException_@throws InterruptedException;@Test_    public void testMarshalNormalObject() throws IOException, InterruptedException {_        InputStream in = this.getClass().getResourceAsStream("SoapMarshalTestExpectedResult.xml")__        resultEndpoint.expectedMessageCount(1)__        resultEndpoint.expectedBodiesReceived(TestUtil.readStream(in))__        GetCustomersByName request = new GetCustomersByName()__        request.setName("Smith")__        producer.sendBody(request)__        resultEndpoint.assertIsSatisfied()__    };test,soap,marshalling,by,sending,a,get,customer,by,name,object,and,checking,against,a,xml,file,throws,ioexception,throws,interrupted,exception;test,public,void,test,marshal,normal,object,throws,ioexception,interrupted,exception,input,stream,in,this,get,class,get,resource,as,stream,soap,marshal,test,expected,result,xml,result,endpoint,expected,message,count,1,result,endpoint,expected,bodies,received,test,util,read,stream,in,get,customers,by,name,request,new,get,customers,by,name,request,set,name,smith,producer,send,body,request,result,endpoint,assert,is,satisfied
SoapMarshalTest -> @Test     public void testMarshalException() throws IOException, InterruptedException;1268967338;Test Soap marshalling by sending a NoSuchCustomerException object and_checking against a xml file. We expect to receive a SOAP fault here that_contains a NoSuchCustomer object as detail.__@throws IOException_@throws InterruptedException;@Test_    public void testMarshalException() throws IOException, InterruptedException {_        InputStream in = this.getClass().getResourceAsStream("SoapMarshalTestExpectedFault.xml")__        resultEndpoint.expectedMessageCount(1)__        resultEndpoint.expectedBodiesReceived(TestUtil.readStream(in))__        NoSuchCustomer noSuchCustomer = new NoSuchCustomer()__        noSuchCustomer.setCustomerId("None")__        NoSuchCustomerException exception = new NoSuchCustomerException("No customer found", noSuchCustomer)__        producer.sendBodyAndHeader(null, Exchange.EXCEPTION_CAUGHT, exception)__        resultEndpoint.assertIsSatisfied()__    };test,soap,marshalling,by,sending,a,no,such,customer,exception,object,and,checking,against,a,xml,file,we,expect,to,receive,a,soap,fault,here,that,contains,a,no,such,customer,object,as,detail,throws,ioexception,throws,interrupted,exception;test,public,void,test,marshal,exception,throws,ioexception,interrupted,exception,input,stream,in,this,get,class,get,resource,as,stream,soap,marshal,test,expected,fault,xml,result,endpoint,expected,message,count,1,result,endpoint,expected,bodies,received,test,util,read,stream,in,no,such,customer,no,such,customer,new,no,such,customer,no,such,customer,set,customer,id,none,no,such,customer,exception,exception,new,no,such,customer,exception,no,customer,found,no,such,customer,producer,send,body,and,header,null,exchange,exception,result,endpoint,assert,is,satisfied
SoapMarshalTest -> @Test     public void testMarshalException() throws IOException, InterruptedException;1537290824;Test Soap marshalling by sending a NoSuchCustomerException object and_checking against a xml file. We expect to receive a SOAP fault here that_contains a NoSuchCustomer object as detail.__@throws IOException_@throws InterruptedException;@Test_    public void testMarshalException() throws IOException, InterruptedException {_        InputStream in = this.getClass().getResourceAsStream("SoapMarshalTestExpectedFault.xml")__        resultEndpoint.expectedMessageCount(1)__        resultEndpoint.expectedBodiesReceived(TestUtil.readStream(in))__        NoSuchCustomer noSuchCustomer = new NoSuchCustomer()__        noSuchCustomer.setCustomerId("None")__        NoSuchCustomerException exception = new NoSuchCustomerException("No customer found", noSuchCustomer)__        producer.sendBodyAndHeader(null, Exchange.EXCEPTION_CAUGHT, exception)__        resultEndpoint.assertIsSatisfied()__    };test,soap,marshalling,by,sending,a,no,such,customer,exception,object,and,checking,against,a,xml,file,we,expect,to,receive,a,soap,fault,here,that,contains,a,no,such,customer,object,as,detail,throws,ioexception,throws,interrupted,exception;test,public,void,test,marshal,exception,throws,ioexception,interrupted,exception,input,stream,in,this,get,class,get,resource,as,stream,soap,marshal,test,expected,fault,xml,result,endpoint,expected,message,count,1,result,endpoint,expected,bodies,received,test,util,read,stream,in,no,such,customer,no,such,customer,new,no,such,customer,no,such,customer,set,customer,id,none,no,such,customer,exception,exception,new,no,such,customer,exception,no,customer,found,no,such,customer,producer,send,body,and,header,null,exchange,exception,result,endpoint,assert,is,satisfied
SoapMarshalTest -> @Test     public void testMarshalException() throws IOException, InterruptedException;1540108161;Test Soap marshalling by sending a NoSuchCustomerException object and_checking against a xml file. We expect to receive a SOAP fault here that_contains a NoSuchCustomer object as detail.__@throws IOException_@throws InterruptedException;@Test_    public void testMarshalException() throws IOException, InterruptedException {_        InputStream in = this.getClass().getResourceAsStream("SoapMarshalTestExpectedFault.xml")__        resultEndpoint.expectedMessageCount(1)__        resultEndpoint.expectedBodiesReceived(TestUtil.readStream(in))__        NoSuchCustomer noSuchCustomer = new NoSuchCustomer()__        noSuchCustomer.setCustomerId("None")__        NoSuchCustomerException exception = new NoSuchCustomerException("No customer found", noSuchCustomer)__        producer.sendBodyAndHeader(null, Exchange.EXCEPTION_CAUGHT, exception)__        resultEndpoint.assertIsSatisfied()__    };test,soap,marshalling,by,sending,a,no,such,customer,exception,object,and,checking,against,a,xml,file,we,expect,to,receive,a,soap,fault,here,that,contains,a,no,such,customer,object,as,detail,throws,ioexception,throws,interrupted,exception;test,public,void,test,marshal,exception,throws,ioexception,interrupted,exception,input,stream,in,this,get,class,get,resource,as,stream,soap,marshal,test,expected,fault,xml,result,endpoint,expected,message,count,1,result,endpoint,expected,bodies,received,test,util,read,stream,in,no,such,customer,no,such,customer,new,no,such,customer,no,such,customer,set,customer,id,none,no,such,customer,exception,exception,new,no,such,customer,exception,no,customer,found,no,such,customer,producer,send,body,and,header,null,exchange,exception,result,endpoint,assert,is,satisfied
SoapMarshalTest -> public void testMarshalNormalObject() throws IOException, InterruptedException;1265702792;Test Soap marshalling by sending a GetCustomerByName object and checking_against a xml file.__@throws IOException_@throws InterruptedException;public void testMarshalNormalObject() throws IOException, InterruptedException {_        InputStream in = this.getClass().getResourceAsStream("SoapMarshalTestExpectedResult.xml")__        resultEndpoint.expectedMessageCount(1)__        resultEndpoint.expectedBodiesReceived(TestUtil.readStream(in))__        GetCustomersByName request = new GetCustomersByName()__        request.setName("Smith")__        producer.sendBody(request)__        resultEndpoint.assertIsSatisfied()__    };test,soap,marshalling,by,sending,a,get,customer,by,name,object,and,checking,against,a,xml,file,throws,ioexception,throws,interrupted,exception;public,void,test,marshal,normal,object,throws,ioexception,interrupted,exception,input,stream,in,this,get,class,get,resource,as,stream,soap,marshal,test,expected,result,xml,result,endpoint,expected,message,count,1,result,endpoint,expected,bodies,received,test,util,read,stream,in,get,customers,by,name,request,new,get,customers,by,name,request,set,name,smith,producer,send,body,request,result,endpoint,assert,is,satisfied
SoapMarshalTest -> public void testMarshalNormalObject() throws IOException, InterruptedException;1267509915;Test Soap marshalling by sending a GetCustomerByName object and checking_against a xml file.__@throws IOException_@throws InterruptedException;public void testMarshalNormalObject() throws IOException, InterruptedException {_        InputStream in = this.getClass().getResourceAsStream("SoapMarshalTestExpectedResult.xml")__        resultEndpoint.expectedMessageCount(1)__        resultEndpoint.expectedBodiesReceived(TestUtil.readStream(in))__        GetCustomersByName request = new GetCustomersByName()__        request.setName("Smith")__        producer.sendBody(request)__        resultEndpoint.assertIsSatisfied()__    };test,soap,marshalling,by,sending,a,get,customer,by,name,object,and,checking,against,a,xml,file,throws,ioexception,throws,interrupted,exception;public,void,test,marshal,normal,object,throws,ioexception,interrupted,exception,input,stream,in,this,get,class,get,resource,as,stream,soap,marshal,test,expected,result,xml,result,endpoint,expected,message,count,1,result,endpoint,expected,bodies,received,test,util,read,stream,in,get,customers,by,name,request,new,get,customers,by,name,request,set,name,smith,producer,send,body,request,result,endpoint,assert,is,satisfied
SoapMarshalTest -> protected SoapJaxbDataFormat createDataFormat();1268967338;Create data format by using the constructor;protected SoapJaxbDataFormat createDataFormat() {_        String jaxbPackage = GetCustomersByName.class.getPackage().getName()__        ElementNameStrategy elStrat = new TypeNameStrategy()__        return new SoapJaxbDataFormat(jaxbPackage, elStrat)__    };create,data,format,by,using,the,constructor;protected,soap,jaxb,data,format,create,data,format,string,jaxb,package,get,customers,by,name,class,get,package,get,name,element,name,strategy,el,strat,new,type,name,strategy,return,new,soap,jaxb,data,format,jaxb,package,el,strat
SoapMarshalTest -> protected SoapJaxbDataFormat createDataFormat();1537290824;Create data format by using the constructor;protected SoapJaxbDataFormat createDataFormat() {_        String jaxbPackage = GetCustomersByName.class.getPackage().getName()__        ElementNameStrategy elStrat = new TypeNameStrategy()__        return new SoapJaxbDataFormat(jaxbPackage, elStrat)__    };create,data,format,by,using,the,constructor;protected,soap,jaxb,data,format,create,data,format,string,jaxb,package,get,customers,by,name,class,get,package,get,name,element,name,strategy,el,strat,new,type,name,strategy,return,new,soap,jaxb,data,format,jaxb,package,el,strat
SoapMarshalTest -> protected SoapJaxbDataFormat createDataFormat();1540108161;Create data format by using the constructor;protected SoapJaxbDataFormat createDataFormat() {_        String jaxbPackage = GetCustomersByName.class.getPackage().getName()__        ElementNameStrategy elStrat = new TypeNameStrategy()__        return new SoapJaxbDataFormat(jaxbPackage, elStrat)__    };create,data,format,by,using,the,constructor;protected,soap,jaxb,data,format,create,data,format,string,jaxb,package,get,customers,by,name,class,get,package,get,name,element,name,strategy,el,strat,new,type,name,strategy,return,new,soap,jaxb,data,format,jaxb,package,el,strat
SoapMarshalTest -> public void testMarshalException() throws IOException, InterruptedException;1265702792;Test Soap marshalling by sending a NoSuchCustomerException object and_checking against a xml file. We expect to receive a SOAP fault here that_contains a NoSuchCustomer object as detail.__@throws IOException_@throws InterruptedException;public void testMarshalException() throws IOException, InterruptedException {_        InputStream in = this.getClass().getResourceAsStream("SoapMarshalTestExpectedFault.xml")__        resultEndpoint.expectedMessageCount(1)__        resultEndpoint.expectedBodiesReceived(TestUtil.readStream(in))__        NoSuchCustomer noSuchCustomer = new NoSuchCustomer()__        noSuchCustomer.setCustomerId("None")__        NoSuchCustomerException exception = new NoSuchCustomerException("No customer found", noSuchCustomer)__        producer.sendBodyAndHeader(null, Exchange.EXCEPTION_CAUGHT, exception)__        resultEndpoint.assertIsSatisfied()__    };test,soap,marshalling,by,sending,a,no,such,customer,exception,object,and,checking,against,a,xml,file,we,expect,to,receive,a,soap,fault,here,that,contains,a,no,such,customer,object,as,detail,throws,ioexception,throws,interrupted,exception;public,void,test,marshal,exception,throws,ioexception,interrupted,exception,input,stream,in,this,get,class,get,resource,as,stream,soap,marshal,test,expected,fault,xml,result,endpoint,expected,message,count,1,result,endpoint,expected,bodies,received,test,util,read,stream,in,no,such,customer,no,such,customer,new,no,such,customer,no,such,customer,set,customer,id,none,no,such,customer,exception,exception,new,no,such,customer,exception,no,customer,found,no,such,customer,producer,send,body,and,header,null,exchange,exception,result,endpoint,assert,is,satisfied
SoapMarshalTest -> public void testMarshalException() throws IOException, InterruptedException;1267509915;Test Soap marshalling by sending a NoSuchCustomerException object and_checking against a xml file. We expect to receive a SOAP fault here that_contains a NoSuchCustomer object as detail.__@throws IOException_@throws InterruptedException;public void testMarshalException() throws IOException, InterruptedException {_        InputStream in = this.getClass().getResourceAsStream("SoapMarshalTestExpectedFault.xml")__        resultEndpoint.expectedMessageCount(1)__        resultEndpoint.expectedBodiesReceived(TestUtil.readStream(in))__        NoSuchCustomer noSuchCustomer = new NoSuchCustomer()__        noSuchCustomer.setCustomerId("None")__        NoSuchCustomerException exception = new NoSuchCustomerException("No customer found", noSuchCustomer)__        producer.sendBodyAndHeader(null, Exchange.EXCEPTION_CAUGHT, exception)__        resultEndpoint.assertIsSatisfied()__    };test,soap,marshalling,by,sending,a,no,such,customer,exception,object,and,checking,against,a,xml,file,we,expect,to,receive,a,soap,fault,here,that,contains,a,no,such,customer,object,as,detail,throws,ioexception,throws,interrupted,exception;public,void,test,marshal,exception,throws,ioexception,interrupted,exception,input,stream,in,this,get,class,get,resource,as,stream,soap,marshal,test,expected,fault,xml,result,endpoint,expected,message,count,1,result,endpoint,expected,bodies,received,test,util,read,stream,in,no,such,customer,no,such,customer,new,no,such,customer,no,such,customer,set,customer,id,none,no,such,customer,exception,exception,new,no,such,customer,exception,no,customer,found,no,such,customer,producer,send,body,and,header,null,exchange,exception,result,endpoint,assert,is,satisfied
