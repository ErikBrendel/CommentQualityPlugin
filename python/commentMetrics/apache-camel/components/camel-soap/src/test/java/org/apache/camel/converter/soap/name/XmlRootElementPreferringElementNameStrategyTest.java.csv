commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Test public void testFindQNameForSoapActionOrTypeWithXmlSchemaPresent() throws Exception {     QName qname = ens.findQNameForSoapActionOrType("abc", RequestWithDefaultNs.class).     assertEquals("local names must match", "foo", qname.getLocalPart()).     assertEquals("namespace must match", "baz", qname.getNamespaceURI()). }
false;public;0;10;;@Test public void testFindQNameForSoapActionOrType() throws Exception {     QName qname = ens.findQNameForSoapActionOrType(DEFAULT_NS, Request.class).     assertEquals("local names must match", LOCAL_NAME, qname.getLocalPart()).     assertEquals("namespace must match", CUSTOM_NS, qname.getNamespaceURI()).     qname = ens.findQNameForSoapActionOrType(CUSTOM_NS, Request.class).     assertEquals("local names must match", LOCAL_NAME, qname.getLocalPart()).     assertEquals("namespace must match", CUSTOM_NS, qname.getNamespaceURI()). }
false;public;0;4;;@Test(expected = UnsupportedOperationException.class) public void testFindExceptionForFaultName() throws Exception {     ens.findExceptionForFaultName(new QName(LOCAL_NAME, CUSTOM_NS)). }
