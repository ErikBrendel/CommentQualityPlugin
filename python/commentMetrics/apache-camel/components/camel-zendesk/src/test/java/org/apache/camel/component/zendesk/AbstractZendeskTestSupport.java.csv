commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;38;;@Override protected CamelContext createCamelContext() throws Exception {     final CamelContext context = super.createCamelContext().     final ZendeskConfiguration configuration = new ZendeskConfiguration().     final Properties properties = new Properties().     try {         properties.load(getClass().getResourceAsStream(TEST_OPTIONS_PROPERTIES)).         Map<String, Object> options = new HashMap<>().         for (Map.Entry<Object, Object> entry : properties.entrySet()) {             options.put(entry.getKey().toString(), entry.getValue()).         }         IntrospectionSupport.setProperties(configuration, options).     } catch (Exception e) {     // ignore - system property or ENV may be supplied     }     configuration.setServerUrl(System.getenv(ENV_ZENDESK_SERVER_URL) != null ? System.getenv(ENV_ZENDESK_SERVER_URL) : configuration.getServerUrl()).     configuration.setUsername(System.getenv(ENV_ZENDESK_USERNAME) != null ? System.getenv(ENV_ZENDESK_USERNAME) : configuration.getUsername()).     configuration.setPassword(System.getenv(ENV_ZENDESK_PASSWORD) != null ? System.getenv(ENV_ZENDESK_PASSWORD) : configuration.getPassword()).     configuration.setToken(System.getenv(ENV_ZENDESK_TOKEN) != null ? System.getenv(ENV_ZENDESK_TOKEN) : configuration.getToken()).     configuration.setOauthToken(System.getenv(ENV_ZENDESK_OAUTH_TOKEN) != null ? System.getenv(ENV_ZENDESK_OAUTH_TOKEN) : configuration.getOauthToken()).     configuration.setServerUrl(System.getProperty(SYSPROP_ZENDESK_SERVER_URL, configuration.getServerUrl())).     configuration.setUsername(System.getProperty(SYSPROP_ZENDESK_USERNAME, configuration.getUsername())).     configuration.setPassword(System.getProperty(SYSPROP_ZENDESK_PASSWORD, configuration.getPassword())).     configuration.setToken(System.getProperty(SYSPROP_ZENDESK_TOKEN, configuration.getToken())).     configuration.setOauthToken(System.getProperty(SYSPROP_ZENDESK_OAUTH_TOKEN, configuration.getOauthToken())).     if (configuration.getServerUrl() == null || configuration.getUsername() == null || (configuration.getPassword() == null && configuration.getToken() == null && configuration.getOauthToken() == null)) {         throw new IllegalArgumentException("Zendesk configuration is missing").     }     // add ZendeskComponent to Camel context     final ZendeskComponent component = new ZendeskComponent(context).     component.setConfiguration(configuration).     context.addComponent("zendesk", component).     return context. }
false;public;0;5;;@Override public boolean isCreateCamelContextPerClass() {     // only create the context once for this class     return true. }
false;protected;3;4;;@SuppressWarnings("unchecked") protected <T> T requestBodyAndHeaders(String endpointUri, Object body, Map<String, Object> headers) {     return (T) template.requestBodyAndHeaders(endpointUri, body, headers). }
false;protected;2;4;;@SuppressWarnings("unchecked") protected <T> T requestBody(String endpointUri, Object body) {     return (T) template.requestBody(endpointUri, body). }
