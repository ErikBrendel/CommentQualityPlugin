commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * What operation to use  *  * @return the methodName  */ ;/**  * What operation to use  *  * @return the methodName  */ public String getMethodName() {     return methodName. }
true;public;1;3;/**  * What operation to use  *  * @param methodName  *            the methodName to set  */ ;/**  * What operation to use  *  * @param methodName  *            the methodName to set  */ public void setMethodName(String methodName) {     this.methodName = methodName. }
true;public;0;3;/**  * The server URL to connect.  *  * @return server URL  */ ;/**  * The server URL to connect.  *  * @return server URL  */ public String getServerUrl() {     return serverUrl. }
true;public;1;3;/**  * The server URL to connect.  *  * @param url server URL  */ ;/**  * The server URL to connect.  *  * @param url server URL  */ public void setServerUrl(String url) {     this.serverUrl = url. }
true;public;0;3;/**  * The user name.  *  * @return user name  */ ;/**  * The user name.  *  * @return user name  */ public String getUsername() {     return username. }
true;public;1;3;/**  * The user name.  *  * @param user user name  */ ;/**  * The user name.  *  * @param user user name  */ public void setUsername(String user) {     this.username = user. }
true;public;0;3;/**  * The security token.  *  * @return security token  */ ;/**  * The security token.  *  * @return security token  */ public String getToken() {     return token. }
true;public;1;3;/**  * The security token.  *  * @param token security token  */ ;/**  * The security token.  *  * @param token security token  */ public void setToken(String token) {     this.token = token. }
true;public;0;3;/**  * The OAuth token.  * @return OAuth token  */ ;/**  * The OAuth token.  * @return OAuth token  */ public String getOauthToken() {     return oauthToken. }
true;public;1;3;/**  * The OAuth token.  *  * @param token OAuth token  */ ;/**  * The OAuth token.  *  * @param token OAuth token  */ public void setOauthToken(String token) {     this.oauthToken = token. }
true;public;0;3;/**  * The password.  *  * @return password  */ ;/**  * The password.  *  * @return password  */ public String getPassword() {     return password. }
true;public;1;3;/**  * The password.  * @param password password  */ ;/**  * The password.  * @param password password  */ public void setPassword(String password) {     this.password = password. }
false;public;1;13;;@Override public boolean equals(Object other) {     if (other instanceof ZendeskConfiguration) {         ZendeskConfiguration otherZendeskConf = (ZendeskConfiguration) other.         return ObjectHelper.equal(methodName, otherZendeskConf.getMethodName()) && ObjectHelper.equal(serverUrl, otherZendeskConf.getServerUrl()) && ObjectHelper.equal(username, otherZendeskConf.getUsername()) && ObjectHelper.equal(password, otherZendeskConf.getPassword()) && ObjectHelper.equal(token, otherZendeskConf.getToken()) && ObjectHelper.equal(oauthToken, otherZendeskConf.getOauthToken()).     }     return false. }
false;public;0;5;;@Override public String toString() {     return String.format("ZendeskConfiguration:[methodName=%s, serverUrl=%s, username=%s, password=%s, token=%s, oauthToken=%s]", methodName, serverUrl, username, password, token, oauthToken). }
false;public;0;4;;@Override public int hashCode() {     return toString().hashCode(). }
