# id;timestamp;commentText;codeText;commentWords;codeWords
MockEndpointFixture -> protected Exchange getExchange(int aIndex);1305835015;Gets the received exchange at the specified index;protected Exchange getExchange(int aIndex) {_        List<Exchange> exchanges = mMockEndpoint.getReceivedExchanges()__        Exchange exchange = exchanges.get(aIndex)__        return exchange__    };gets,the,received,exchange,at,the,specified,index;protected,exchange,get,exchange,int,a,index,list,exchange,exchanges,m,mock,endpoint,get,received,exchanges,exchange,exchange,exchanges,get,a,index,return,exchange
MockEndpointFixture -> protected Exchange getExchange(int aIndex);1500233680;Gets the received exchange at the specified index;protected Exchange getExchange(int aIndex) {_        List<Exchange> exchanges = mMockEndpoint.getReceivedExchanges()__        Exchange exchange = exchanges.get(aIndex)__        return exchange__    };gets,the,received,exchange,at,the,specified,index;protected,exchange,get,exchange,int,a,index,list,exchange,exchanges,m,mock,endpoint,get,received,exchanges,exchange,exchange,exchanges,get,a,index,return,exchange
MockEndpointFixture -> protected Exchange getExchange(int aIndex);1540108161;Gets the received exchange at the specified index;protected Exchange getExchange(int aIndex) {_        List<Exchange> exchanges = mMockEndpoint.getReceivedExchanges()__        Exchange exchange = exchanges.get(aIndex)__        return exchange__    };gets,the,received,exchange,at,the,specified,index;protected,exchange,get,exchange,int,a,index,list,exchange,exchanges,m,mock,endpoint,get,received,exchanges,exchange,exchange,exchanges,get,a,index,return,exchange
MockEndpointFixture -> protected void resetMockEndpoint();1305835015;Resets the mock endpoint so we can run another test. This will clear out any_previously received messages.;protected void resetMockEndpoint() {_        getMockEndpoint().reset()__    };resets,the,mock,endpoint,so,we,can,run,another,test,this,will,clear,out,any,previously,received,messages;protected,void,reset,mock,endpoint,get,mock,endpoint,reset
MockEndpointFixture -> protected void resetMockEndpoint();1500233680;Resets the mock endpoint so we can run another test. This will clear out any_previously received messages.;protected void resetMockEndpoint() {_        getMockEndpoint().reset()__    };resets,the,mock,endpoint,so,we,can,run,another,test,this,will,clear,out,any,previously,received,messages;protected,void,reset,mock,endpoint,get,mock,endpoint,reset
MockEndpointFixture -> protected void resetMockEndpoint();1540108161;Resets the mock endpoint so we can run another test. This will clear out any_previously received messages.;protected void resetMockEndpoint() {_        getMockEndpoint().reset()__    };resets,the,mock,endpoint,so,we,can,run,another,test,this,will,clear,out,any,previously,received,messages;protected,void,reset,mock,endpoint,get,mock,endpoint,reset
MockEndpointFixture -> protected <T> T getBody(int aIndex, Class<T> aType);1305835015;Gets the body of the received message at the specified index;protected <T> T getBody(int aIndex, Class<T> aType) {_        Message in = getMessage(aIndex)__        T body = in.getBody(aType)__        assertNotNull(body)__        return body__    };gets,the,body,of,the,received,message,at,the,specified,index;protected,t,t,get,body,int,a,index,class,t,a,type,message,in,get,message,a,index,t,body,in,get,body,a,type,assert,not,null,body,return,body
MockEndpointFixture -> protected <T> T getBody(int aIndex, Class<T> aType);1500233680;Gets the body of the received message at the specified index;protected <T> T getBody(int aIndex, Class<T> aType) {_        Message in = getMessage(aIndex)__        T body = in.getBody(aType)__        assertNotNull(body)__        return body__    };gets,the,body,of,the,received,message,at,the,specified,index;protected,t,t,get,body,int,a,index,class,t,a,type,message,in,get,message,a,index,t,body,in,get,body,a,type,assert,not,null,body,return,body
MockEndpointFixture -> protected <T> T getBody(int aIndex, Class<T> aType);1540108161;Gets the body of the received message at the specified index;protected <T> T getBody(int aIndex, Class<T> aType) {_        Message in = getMessage(aIndex)__        T body = in.getBody(aType)__        assertNotNull(body)__        return body__    };gets,the,body,of,the,received,message,at,the,specified,index;protected,t,t,get,body,int,a,index,class,t,a,type,message,in,get,message,a,index,t,body,in,get,body,a,type,assert,not,null,body,return,body
MockEndpointFixture -> protected Message getMessage(int aIndex);1305835015;Gets the received message at the specified index;protected Message getMessage(int aIndex) {_        Exchange exchange = getExchange(aIndex)__        Message in = exchange.getIn()__        return in__    };gets,the,received,message,at,the,specified,index;protected,message,get,message,int,a,index,exchange,exchange,get,exchange,a,index,message,in,exchange,get,in,return,in
MockEndpointFixture -> protected Message getMessage(int aIndex);1500233680;Gets the received message at the specified index;protected Message getMessage(int aIndex) {_        Exchange exchange = getExchange(aIndex)__        Message in = exchange.getIn()__        return in__    };gets,the,received,message,at,the,specified,index;protected,message,get,message,int,a,index,exchange,exchange,get,exchange,a,index,message,in,exchange,get,in,return,in
MockEndpointFixture -> protected Message getMessage(int aIndex);1540108161;Gets the received message at the specified index;protected Message getMessage(int aIndex) {_        Exchange exchange = getExchange(aIndex)__        Message in = exchange.getIn()__        return in__    };gets,the,received,message,at,the,specified,index;protected,message,get,message,int,a,index,exchange,exchange,get,exchange,a,index,message,in,exchange,get,in,return,in
MockEndpointFixture -> protected void assertMessageReceived(File aExpectedFile) throws Exception;1305835015;Assert that we've received the message and resets the mock endpoint;protected void assertMessageReceived(File aExpectedFile) throws Exception {_        Document expectedDoc = XmlFixture.toDoc(aExpectedFile)__        assertMessageReceived(expectedDoc)__    };assert,that,we,ve,received,the,message,and,resets,the,mock,endpoint;protected,void,assert,message,received,file,a,expected,file,throws,exception,document,expected,doc,xml,fixture,to,doc,a,expected,file,assert,message,received,expected,doc
MockEndpointFixture -> protected void assertMessageReceived(File aExpectedFile) throws Exception;1500233680;Assert that we've received the message and resets the mock endpoint;protected void assertMessageReceived(File aExpectedFile) throws Exception {_        Source expectedDoc = XmlFixture.toSource(aExpectedFile)__        assertMessageReceived(expectedDoc)__    };assert,that,we,ve,received,the,message,and,resets,the,mock,endpoint;protected,void,assert,message,received,file,a,expected,file,throws,exception,source,expected,doc,xml,fixture,to,source,a,expected,file,assert,message,received,expected,doc
MockEndpointFixture -> protected void assertMessageReceived(File aExpectedFile) throws Exception;1540108161;Assert that we've received the message and resets the mock endpoint;protected void assertMessageReceived(File aExpectedFile) throws Exception {_        Source expectedDoc = XmlFixture.toSource(aExpectedFile)__        assertMessageReceived(expectedDoc)__    };assert,that,we,ve,received,the,message,and,resets,the,mock,endpoint;protected,void,assert,message,received,file,a,expected,file,throws,exception,source,expected,doc,xml,fixture,to,source,a,expected,file,assert,message,received,expected,doc
