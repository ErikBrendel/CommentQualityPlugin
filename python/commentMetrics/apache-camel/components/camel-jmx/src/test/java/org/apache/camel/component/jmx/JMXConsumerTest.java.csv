commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Before public void setUp() throws Exception {     super.setUp().     simpleBean = getSimpleMXBean(). }
false;public;0;15;;@Test public void attributeChange() throws Exception {     getMockFixture().getMockEndpoint().setExpectedMessageCount(1).     simpleBean.setStringValue("foo").     waitAndAssertMessageReceived("src/test/resources/consumer-test/attributeChange-0.xml").     getMockFixture().getMockEndpoint().setExpectedMessageCount(1).     simpleBean.setStringValue("bar").     waitAndAssertMessageReceived("src/test/resources/consumer-test/attributeChange-1.xml").     // set the string to null     getMockFixture().getMockEndpoint().setExpectedMessageCount(1).     simpleBean.setStringValue(null).     waitAndAssertMessageReceived("src/test/resources/consumer-test/attributeChange-2.xml"). }
false;public;0;5;;@Test public void notification() throws Exception {     simpleBean.touch().     waitAndAssertMessageReceived("src/test/resources/consumer-test/touched.xml"). }
false;public;0;5;;@Test public void userData() throws Exception {     simpleBean.userData("myUserData").     waitAndAssertMessageReceived("src/test/resources/consumer-test/userdata.xml"). }
false;public;0;5;;@Test public void jmxConnection() throws Exception {     simpleBean.triggerConnectionNotification().     waitAndAssertMessageReceived("src/test/resources/consumer-test/jmxConnectionNotification.xml"). }
false;public;0;5;;@Test public void mbeanServerNotification() throws Exception {     simpleBean.triggerMBeanServerNotification().     waitAndAssertMessageReceived("src/test/resources/consumer-test/mbeanServerNotification.xml"). }
false;public;0;5;;@Ignore public void relationNotification() throws Exception {     simpleBean.triggerRelationNotification().     waitAndAssertMessageReceived("src/test/resources/consumer-test/relationNotification.xml"). }
false;public;0;5;;@Test public void timerNotification() throws Exception {     simpleBean.triggerTimerNotification().     waitAndAssertMessageReceived("src/test/resources/consumer-test/timerNotification.xml"). }
false;private;1;4;;private void waitAndAssertMessageReceived(String aExpectedFilePath) throws InterruptedException, Exception {     getMockFixture().waitForMessages().     getMockFixture().assertMessageReceived(new File(aExpectedFilePath)). }
