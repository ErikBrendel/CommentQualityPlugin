# id;timestamp;commentText;codeText;commentWords;codeWords
SimpleBeanFixture -> protected void unregisterBean(ObjectName aObjectName) throws MBeanRegistrationException, InstanceNotFoundException;1288942801;Unregisters the bean;protected void unregisterBean(ObjectName aObjectName) throws MBeanRegistrationException, InstanceNotFoundException {_        server.unregisterMBean(aObjectName)__    };unregisters,the,bean;protected,void,unregister,bean,object,name,a,object,name,throws,mbean,registration,exception,instance,not,found,exception,server,unregister,mbean,a,object,name
SimpleBeanFixture -> protected void unregisterBean(ObjectName aObjectName) throws MBeanRegistrationException, InstanceNotFoundException;1289066889;Unregisters the bean;protected void unregisterBean(ObjectName aObjectName) throws MBeanRegistrationException, InstanceNotFoundException {_        server.unregisterMBean(aObjectName)__    };unregisters,the,bean;protected,void,unregister,bean,object,name,a,object,name,throws,mbean,registration,exception,instance,not,found,exception,server,unregister,mbean,a,object,name
SimpleBeanFixture -> protected void unregisterBean(ObjectName aObjectName) throws MBeanRegistrationException, InstanceNotFoundException;1289068983;Unregisters the bean;protected void unregisterBean(ObjectName aObjectName) throws MBeanRegistrationException, InstanceNotFoundException {_        server.unregisterMBean(aObjectName)__    };unregisters,the,bean;protected,void,unregister,bean,object,name,a,object,name,throws,mbean,registration,exception,instance,not,found,exception,server,unregister,mbean,a,object,name
SimpleBeanFixture -> protected void unregisterBean(ObjectName aObjectName) throws MBeanRegistrationException, InstanceNotFoundException;1305835015;Unregisters the bean;protected void unregisterBean(ObjectName aObjectName) throws MBeanRegistrationException, InstanceNotFoundException {_        server.unregisterMBean(aObjectName)__    };unregisters,the,bean;protected,void,unregister,bean,object,name,a,object,name,throws,mbean,registration,exception,instance,not,found,exception,server,unregister,mbean,a,object,name
SimpleBeanFixture -> protected void unregisterBean(ObjectName aObjectName) throws MBeanRegistrationException, InstanceNotFoundException;1323680223;Unregisters the bean;protected void unregisterBean(ObjectName aObjectName) throws MBeanRegistrationException, InstanceNotFoundException {_        server.unregisterMBean(aObjectName)__    };unregisters,the,bean;protected,void,unregister,bean,object,name,a,object,name,throws,mbean,registration,exception,instance,not,found,exception,server,unregister,mbean,a,object,name
SimpleBeanFixture -> protected void unregisterBean(ObjectName aObjectName) throws MBeanRegistrationException, InstanceNotFoundException;1325779288;Unregisters the bean;protected void unregisterBean(ObjectName aObjectName) throws MBeanRegistrationException, InstanceNotFoundException {_        server.unregisterMBean(aObjectName)__    };unregisters,the,bean;protected,void,unregister,bean,object,name,a,object,name,throws,mbean,registration,exception,instance,not,found,exception,server,unregister,mbean,a,object,name
SimpleBeanFixture -> protected void unregisterBean(ObjectName aObjectName) throws MBeanRegistrationException, InstanceNotFoundException;1329744445;Unregisters the bean;protected void unregisterBean(ObjectName aObjectName) throws MBeanRegistrationException, InstanceNotFoundException {_        server.unregisterMBean(aObjectName)__    };unregisters,the,bean;protected,void,unregister,bean,object,name,a,object,name,throws,mbean,registration,exception,instance,not,found,exception,server,unregister,mbean,a,object,name
SimpleBeanFixture -> protected void unregisterBean(ObjectName aObjectName) throws MBeanRegistrationException, InstanceNotFoundException;1540108158;Unregisters the bean;protected void unregisterBean(ObjectName aObjectName) throws MBeanRegistrationException, InstanceNotFoundException {_        server.unregisterMBean(aObjectName)__    };unregisters,the,bean;protected,void,unregister,bean,object,name,a,object,name,throws,mbean,registration,exception,instance,not,found,exception,server,unregister,mbean,a,object,name
SimpleBeanFixture -> protected void unregisterBean(ObjectName aObjectName) throws MBeanRegistrationException, InstanceNotFoundException;1540108164;Unregisters the bean;protected void unregisterBean(ObjectName aObjectName) throws MBeanRegistrationException, InstanceNotFoundException {_        server.unregisterMBean(aObjectName)__    };unregisters,the,bean;protected,void,unregister,bean,object,name,a,object,name,throws,mbean,registration,exception,instance,not,found,exception,server,unregister,mbean,a,object,name
SimpleBeanFixture -> protected void unregisterBean(ObjectName aObjectName) throws MBeanRegistrationException, InstanceNotFoundException;1551167777;Unregisters the bean;protected void unregisterBean(ObjectName aObjectName) throws MBeanRegistrationException, InstanceNotFoundException {_        server.unregisterMBean(aObjectName)__    };unregisters,the,bean;protected,void,unregister,bean,object,name,a,object,name,throws,mbean,registration,exception,instance,not,found,exception,server,unregister,mbean,a,object,name
SimpleBeanFixture -> @SuppressWarnings("deprecation")     protected void initContext() throws Exception;1329744445;Initializes the camel context by creating a simple route from our mbean_to the mock endpoint.;@SuppressWarnings("deprecation")_    protected void initContext() throws Exception {_        mContext.setLazyLoadTypeConverters(true)__        final MockEndpoint mock = mContext.getEndpoint("mock:sink", MockEndpoint.class)__        mock.setExpectedMessageCount(1)__        mMockEndpoint = new MockEndpointFixture(mock)__        mContext.setRegistry(getRegistry())__        mContext.addRoutes(new RouteBuilder() {_            @Override_            public void configure() throws Exception {_                from(buildFromURI().toString()).to(mock)__            }_        })__    };initializes,the,camel,context,by,creating,a,simple,route,from,our,mbean,to,the,mock,endpoint;suppress,warnings,deprecation,protected,void,init,context,throws,exception,m,context,set,lazy,load,type,converters,true,final,mock,endpoint,mock,m,context,get,endpoint,mock,sink,mock,endpoint,class,mock,set,expected,message,count,1,m,mock,endpoint,new,mock,endpoint,fixture,mock,m,context,set,registry,get,registry,m,context,add,routes,new,route,builder,override,public,void,configure,throws,exception,from,build,from,uri,to,string,to,mock
SimpleBeanFixture -> @SuppressWarnings("deprecation")     protected void initContext() throws Exception;1540108158;Initializes the camel context by creating a simple route from our mbean_to the mock endpoint.;@SuppressWarnings("deprecation")_    protected void initContext() throws Exception {_        final MockEndpoint mock = mContext.getEndpoint("mock:sink", MockEndpoint.class)__        mock.setExpectedMessageCount(1)__        mMockEndpoint = new MockEndpointFixture(mock)__        mContext.setRegistry(getRegistry())__        mContext.addRoutes(new RouteBuilder() {_            @Override_            public void configure() throws Exception {_                from(buildFromURI().toString()).to(mock)__            }_        })__    };initializes,the,camel,context,by,creating,a,simple,route,from,our,mbean,to,the,mock,endpoint;suppress,warnings,deprecation,protected,void,init,context,throws,exception,final,mock,endpoint,mock,m,context,get,endpoint,mock,sink,mock,endpoint,class,mock,set,expected,message,count,1,m,mock,endpoint,new,mock,endpoint,fixture,mock,m,context,set,registry,get,registry,m,context,add,routes,new,route,builder,override,public,void,configure,throws,exception,from,build,from,uri,to,string,to,mock
SimpleBeanFixture -> protected void resetMockEndpoint();1288942801;Resets the mock endpoint so we can run another test. This will clear out any_previously received messages.;protected void resetMockEndpoint() {_        getMockEndpoint().reset()__    };resets,the,mock,endpoint,so,we,can,run,another,test,this,will,clear,out,any,previously,received,messages;protected,void,reset,mock,endpoint,get,mock,endpoint,reset
SimpleBeanFixture -> protected void resetMockEndpoint();1289066889;Resets the mock endpoint so we can run another test. This will clear out any_previously received messages.;protected void resetMockEndpoint() {_        getMockEndpoint().reset()__    };resets,the,mock,endpoint,so,we,can,run,another,test,this,will,clear,out,any,previously,received,messages;protected,void,reset,mock,endpoint,get,mock,endpoint,reset
SimpleBeanFixture -> protected void resetMockEndpoint();1289068983;Resets the mock endpoint so we can run another test. This will clear out any_previously received messages.;protected void resetMockEndpoint() {_        getMockEndpoint().reset()__    };resets,the,mock,endpoint,so,we,can,run,another,test,this,will,clear,out,any,previously,received,messages;protected,void,reset,mock,endpoint,get,mock,endpoint,reset
SimpleBeanFixture -> protected void initRegistry();1288942801;Override this to put stuff into the registry so it's available to be_referenced. (i.e. NotificationFilter or Hashtable<String,String> for ObjectProperties;protected void initRegistry() {_    };override,this,to,put,stuff,into,the,registry,so,it,s,available,to,be,referenced,i,e,notification,filter,or,hashtable,string,string,for,object,properties;protected,void,init,registry
SimpleBeanFixture -> protected void initRegistry();1289066889;Override this to put stuff into the registry so it's available to be_referenced. (i.e. NotificationFilter or Hashtable<String,String> for ObjectProperties;protected void initRegistry() {_    };override,this,to,put,stuff,into,the,registry,so,it,s,available,to,be,referenced,i,e,notification,filter,or,hashtable,string,string,for,object,properties;protected,void,init,registry
SimpleBeanFixture -> protected void initRegistry();1289068983;Override this to put stuff into the registry so it's available to be_referenced. (i.e. NotificationFilter or Hashtable<String,String> for ObjectProperties;protected void initRegistry() {_    };override,this,to,put,stuff,into,the,registry,so,it,s,available,to,be,referenced,i,e,notification,filter,or,hashtable,string,string,for,object,properties;protected,void,init,registry
SimpleBeanFixture -> protected void initRegistry();1305835015;Override this to put stuff into the registry so it's available to be_referenced. (i.e. NotificationFilter or Hashtable<String,String> for ObjectProperties;protected void initRegistry() {_    };override,this,to,put,stuff,into,the,registry,so,it,s,available,to,be,referenced,i,e,notification,filter,or,hashtable,string,string,for,object,properties;protected,void,init,registry
SimpleBeanFixture -> protected void initRegistry();1323680223;Override this to put stuff into the registry so it's available to be_referenced. (i.e. NotificationFilter or Hashtable<String,String> for ObjectProperties;protected void initRegistry() {_    };override,this,to,put,stuff,into,the,registry,so,it,s,available,to,be,referenced,i,e,notification,filter,or,hashtable,string,string,for,object,properties;protected,void,init,registry
SimpleBeanFixture -> protected void initRegistry();1325779288;Override this to put stuff into the registry so it's available to be_referenced. (i.e. NotificationFilter or Hashtable<String,String> for ObjectProperties;protected void initRegistry() {_    };override,this,to,put,stuff,into,the,registry,so,it,s,available,to,be,referenced,i,e,notification,filter,or,hashtable,string,string,for,object,properties;protected,void,init,registry
SimpleBeanFixture -> protected void initRegistry();1329744445;Override this to put stuff into the registry so it's available to be_referenced. (i.e. NotificationFilter or Hashtable<String,String> for ObjectProperties;protected void initRegistry() {_    };override,this,to,put,stuff,into,the,registry,so,it,s,available,to,be,referenced,i,e,notification,filter,or,hashtable,string,string,for,object,properties;protected,void,init,registry
SimpleBeanFixture -> protected void initRegistry();1540108158;Override this to put stuff into the registry so it's available to be_referenced. (i.e. NotificationFilter or Hashtable<String,String> for ObjectProperties;protected void initRegistry() {_    };override,this,to,put,stuff,into,the,registry,so,it,s,available,to,be,referenced,i,e,notification,filter,or,hashtable,string,string,for,object,properties;protected,void,init,registry
SimpleBeanFixture -> protected void initRegistry();1540108164;Override this to put stuff into the registry so it's available to be_referenced. (i.e. NotificationFilter or Hashtable<String,String> for ObjectProperties;protected void initRegistry() {_    };override,this,to,put,stuff,into,the,registry,so,it,s,available,to,be,referenced,i,e,notification,filter,or,hashtable,string,string,for,object,properties;protected,void,init,registry
SimpleBeanFixture -> protected void initRegistry();1551167777;Override this to put stuff into the registry so it's available to be_referenced. (i.e. NotificationFilter or Hashtable<String,String> for ObjectProperties;protected void initRegistry() {_    };override,this,to,put,stuff,into,the,registry,so,it,s,available,to,be,referenced,i,e,notification,filter,or,hashtable,string,string,for,object,properties;protected,void,init,registry
SimpleBeanFixture -> protected ObjectName makeObjectName(String aName) throws MalformedObjectNameException;1288942801;Makes an ObjectName for the given domain using our domain and the name attribute.;protected ObjectName makeObjectName(String aName) throws MalformedObjectNameException {_        ObjectName objectName = new ObjectName(DOMAIN, NAME, aName)__        return objectName__    };makes,an,object,name,for,the,given,domain,using,our,domain,and,the,name,attribute;protected,object,name,make,object,name,string,a,name,throws,malformed,object,name,exception,object,name,object,name,new,object,name,domain,name,a,name,return,object,name
SimpleBeanFixture -> protected ObjectName makeObjectName(String aName) throws MalformedObjectNameException;1289066889;Makes an ObjectName for the given domain using our domain and the name attribute.;protected ObjectName makeObjectName(String aName) throws MalformedObjectNameException {_        ObjectName objectName = new ObjectName(DOMAIN, NAME, aName)__        return objectName__    };makes,an,object,name,for,the,given,domain,using,our,domain,and,the,name,attribute;protected,object,name,make,object,name,string,a,name,throws,malformed,object,name,exception,object,name,object,name,new,object,name,domain,name,a,name,return,object,name
SimpleBeanFixture -> protected ObjectName makeObjectName(String aName) throws MalformedObjectNameException;1289068983;Makes an ObjectName for the given domain using our domain and the name attribute.;protected ObjectName makeObjectName(String aName) throws MalformedObjectNameException {_        ObjectName objectName = new ObjectName(DOMAIN, NAME, aName)__        return objectName__    };makes,an,object,name,for,the,given,domain,using,our,domain,and,the,name,attribute;protected,object,name,make,object,name,string,a,name,throws,malformed,object,name,exception,object,name,object,name,new,object,name,domain,name,a,name,return,object,name
SimpleBeanFixture -> protected ObjectName makeObjectName(String aName) throws MalformedObjectNameException;1305835015;Makes an ObjectName for the given domain using our domain and the name attribute.;protected ObjectName makeObjectName(String aName) throws MalformedObjectNameException {_        ObjectName objectName = new ObjectName(DOMAIN, NAME, aName)__        return objectName__    };makes,an,object,name,for,the,given,domain,using,our,domain,and,the,name,attribute;protected,object,name,make,object,name,string,a,name,throws,malformed,object,name,exception,object,name,object,name,new,object,name,domain,name,a,name,return,object,name
SimpleBeanFixture -> protected ObjectName makeObjectName(String aName) throws MalformedObjectNameException;1323680223;Makes an ObjectName for the given domain using our domain and the name attribute.;protected ObjectName makeObjectName(String aName) throws MalformedObjectNameException {_        ObjectName objectName = new ObjectName(DOMAIN, NAME, aName)__        return objectName__    };makes,an,object,name,for,the,given,domain,using,our,domain,and,the,name,attribute;protected,object,name,make,object,name,string,a,name,throws,malformed,object,name,exception,object,name,object,name,new,object,name,domain,name,a,name,return,object,name
SimpleBeanFixture -> protected ObjectName makeObjectName(String aName) throws MalformedObjectNameException;1325779288;Makes an ObjectName for the given domain using our domain and the name attribute.;protected ObjectName makeObjectName(String aName) throws MalformedObjectNameException {_        ObjectName objectName = new ObjectName(DOMAIN, NAME, aName)__        return objectName__    };makes,an,object,name,for,the,given,domain,using,our,domain,and,the,name,attribute;protected,object,name,make,object,name,string,a,name,throws,malformed,object,name,exception,object,name,object,name,new,object,name,domain,name,a,name,return,object,name
SimpleBeanFixture -> protected ObjectName makeObjectName(String aName) throws MalformedObjectNameException;1329744445;Makes an ObjectName for the given domain using our domain and the name attribute.;protected ObjectName makeObjectName(String aName) throws MalformedObjectNameException {_        ObjectName objectName = new ObjectName(DOMAIN, NAME, aName)__        return objectName__    };makes,an,object,name,for,the,given,domain,using,our,domain,and,the,name,attribute;protected,object,name,make,object,name,string,a,name,throws,malformed,object,name,exception,object,name,object,name,new,object,name,domain,name,a,name,return,object,name
SimpleBeanFixture -> protected ObjectName makeObjectName(String aName) throws MalformedObjectNameException;1540108158;Makes an ObjectName for the given domain using our domain and the name attribute.;protected ObjectName makeObjectName(String aName) throws MalformedObjectNameException {_        ObjectName objectName = new ObjectName(DOMAIN, NAME, aName)__        return objectName__    };makes,an,object,name,for,the,given,domain,using,our,domain,and,the,name,attribute;protected,object,name,make,object,name,string,a,name,throws,malformed,object,name,exception,object,name,object,name,new,object,name,domain,name,a,name,return,object,name
SimpleBeanFixture -> protected ObjectName makeObjectName(String aName) throws MalformedObjectNameException;1540108164;Makes an ObjectName for the given domain using our domain and the name attribute.;protected ObjectName makeObjectName(String aName) throws MalformedObjectNameException {_        ObjectName objectName = new ObjectName(DOMAIN, NAME, aName)__        return objectName__    };makes,an,object,name,for,the,given,domain,using,our,domain,and,the,name,attribute;protected,object,name,make,object,name,string,a,name,throws,malformed,object,name,exception,object,name,object,name,new,object,name,domain,name,a,name,return,object,name
SimpleBeanFixture -> protected ObjectName makeObjectName(String aName) throws MalformedObjectNameException;1551167777;Makes an ObjectName for the given domain using our domain and the name attribute.;protected ObjectName makeObjectName(String aName) throws MalformedObjectNameException {_        ObjectName objectName = new ObjectName(DOMAIN, NAME, aName)__        return objectName__    };makes,an,object,name,for,the,given,domain,using,our,domain,and,the,name,attribute;protected,object,name,make,object,name,string,a,name,throws,malformed,object,name,exception,object,name,object,name,new,object,name,domain,name,a,name,return,object,name
SimpleBeanFixture -> protected Exchange getExchange(int aIndex);1288942801;Gets the received exchange at the specified index;protected Exchange getExchange(int aIndex) {_        List<Exchange> exchanges = mMockEndpoint.getReceivedExchanges()__        Exchange exchange = exchanges.get(aIndex)__        return exchange__    };gets,the,received,exchange,at,the,specified,index;protected,exchange,get,exchange,int,a,index,list,exchange,exchanges,m,mock,endpoint,get,received,exchanges,exchange,exchange,exchanges,get,a,index,return,exchange
SimpleBeanFixture -> protected Exchange getExchange(int aIndex);1289066889;Gets the received exchange at the specified index;protected Exchange getExchange(int aIndex) {_        List<Exchange> exchanges = mMockEndpoint.getReceivedExchanges()__        Exchange exchange = exchanges.get(aIndex)__        return exchange__    };gets,the,received,exchange,at,the,specified,index;protected,exchange,get,exchange,int,a,index,list,exchange,exchanges,m,mock,endpoint,get,received,exchanges,exchange,exchange,exchanges,get,a,index,return,exchange
SimpleBeanFixture -> protected Exchange getExchange(int aIndex);1289068983;Gets the received exchange at the specified index;protected Exchange getExchange(int aIndex) {_        List<Exchange> exchanges = mMockEndpoint.getReceivedExchanges()__        Exchange exchange = exchanges.get(aIndex)__        return exchange__    };gets,the,received,exchange,at,the,specified,index;protected,exchange,get,exchange,int,a,index,list,exchange,exchanges,m,mock,endpoint,get,received,exchanges,exchange,exchange,exchanges,get,a,index,return,exchange
SimpleBeanFixture -> protected JMXUriBuilder buildFromURI();1288942801;Override this to control the properties that make up the endpoint;protected JMXUriBuilder buildFromURI() {_        JMXUriBuilder uri = new JMXUriBuilder().withObjectDomain(DOMAIN)_                .withObjectName("simpleBean")__        return uri__    };override,this,to,control,the,properties,that,make,up,the,endpoint;protected,jmxuri,builder,build,from,uri,jmxuri,builder,uri,new,jmxuri,builder,with,object,domain,domain,with,object,name,simple,bean,return,uri
SimpleBeanFixture -> protected JMXUriBuilder buildFromURI();1289066889;Override this to control the properties that make up the endpoint;protected JMXUriBuilder buildFromURI() {_        JMXUriBuilder uri = new JMXUriBuilder().withObjectDomain(DOMAIN)_                .withObjectName("simpleBean")__        return uri__    };override,this,to,control,the,properties,that,make,up,the,endpoint;protected,jmxuri,builder,build,from,uri,jmxuri,builder,uri,new,jmxuri,builder,with,object,domain,domain,with,object,name,simple,bean,return,uri
SimpleBeanFixture -> protected JMXUriBuilder buildFromURI();1289068983;Override this to control the properties that make up the endpoint;protected JMXUriBuilder buildFromURI() {_        JMXUriBuilder uri = new JMXUriBuilder().withObjectDomain(DOMAIN)_                .withObjectName("simpleBean")__        return uri__    };override,this,to,control,the,properties,that,make,up,the,endpoint;protected,jmxuri,builder,build,from,uri,jmxuri,builder,uri,new,jmxuri,builder,with,object,domain,domain,with,object,name,simple,bean,return,uri
SimpleBeanFixture -> protected JMXUriBuilder buildFromURI();1305835015;Override this to control the properties that make up the endpoint;protected JMXUriBuilder buildFromURI() {_        JMXUriBuilder uri = new JMXUriBuilder().withObjectDomain(DOMAIN)_                .withObjectName("simpleBean")__        return uri__    };override,this,to,control,the,properties,that,make,up,the,endpoint;protected,jmxuri,builder,build,from,uri,jmxuri,builder,uri,new,jmxuri,builder,with,object,domain,domain,with,object,name,simple,bean,return,uri
SimpleBeanFixture -> protected JMXUriBuilder buildFromURI();1323680223;Override this to control the properties that make up the endpoint;protected JMXUriBuilder buildFromURI() {_        JMXUriBuilder uri = new JMXUriBuilder().withObjectDomain(DOMAIN)_                .withObjectName("simpleBean")__        return uri__    };override,this,to,control,the,properties,that,make,up,the,endpoint;protected,jmxuri,builder,build,from,uri,jmxuri,builder,uri,new,jmxuri,builder,with,object,domain,domain,with,object,name,simple,bean,return,uri
SimpleBeanFixture -> protected JMXUriBuilder buildFromURI();1325779288;Override this to control the properties that make up the endpoint;protected JMXUriBuilder buildFromURI() {_        JMXUriBuilder uri = new JMXUriBuilder().withObjectDomain(DOMAIN)_                .withObjectName("simpleBean")__        return uri__    };override,this,to,control,the,properties,that,make,up,the,endpoint;protected,jmxuri,builder,build,from,uri,jmxuri,builder,uri,new,jmxuri,builder,with,object,domain,domain,with,object,name,simple,bean,return,uri
SimpleBeanFixture -> protected JMXUriBuilder buildFromURI();1329744445;Override this to control the properties that make up the endpoint;protected JMXUriBuilder buildFromURI() {_        JMXUriBuilder uri = new JMXUriBuilder().withObjectDomain(DOMAIN)_                .withObjectName("simpleBean")__        return uri__    };override,this,to,control,the,properties,that,make,up,the,endpoint;protected,jmxuri,builder,build,from,uri,jmxuri,builder,uri,new,jmxuri,builder,with,object,domain,domain,with,object,name,simple,bean,return,uri
SimpleBeanFixture -> protected JMXUriBuilder buildFromURI();1540108158;Override this to control the properties that make up the endpoint;protected JMXUriBuilder buildFromURI() {_        JMXUriBuilder uri = new JMXUriBuilder().withObjectDomain(DOMAIN)_                .withObjectName("simpleBean")__        return uri__    };override,this,to,control,the,properties,that,make,up,the,endpoint;protected,jmxuri,builder,build,from,uri,jmxuri,builder,uri,new,jmxuri,builder,with,object,domain,domain,with,object,name,simple,bean,return,uri
SimpleBeanFixture -> protected JMXUriBuilder buildFromURI();1540108164;Override this to control the properties that make up the endpoint;protected JMXUriBuilder buildFromURI() {_        JMXUriBuilder uri = new JMXUriBuilder().withObjectDomain(DOMAIN)_                .withObjectName("simpleBean")__        return uri__    };override,this,to,control,the,properties,that,make,up,the,endpoint;protected,jmxuri,builder,build,from,uri,jmxuri,builder,uri,new,jmxuri,builder,with,object,domain,domain,with,object,name,simple,bean,return,uri
SimpleBeanFixture -> protected JMXUriBuilder buildFromURI();1551167777;Override this to control the properties that make up the endpoint;protected JMXUriBuilder buildFromURI() {_        JMXUriBuilder uri = new JMXUriBuilder().withObjectDomain(DOMAIN)_                .withObjectName("simpleBean")__        return uri__    };override,this,to,control,the,properties,that,make,up,the,endpoint;protected,jmxuri,builder,build,from,uri,jmxuri,builder,uri,new,jmxuri,builder,with,object,domain,domain,with,object,name,simple,bean,return,uri
SimpleBeanFixture -> protected ISimpleMXBean getSimpleMXBean() throws MalformedObjectNameException;1288942801;Gets the mxbean for our remote object using the default name "simpleBean";protected ISimpleMXBean getSimpleMXBean() throws MalformedObjectNameException {_        return getMXBean(makeObjectName("simpleBean"))__    };gets,the,mxbean,for,our,remote,object,using,the,default,name,simple,bean;protected,isimple,mxbean,get,simple,mxbean,throws,malformed,object,name,exception,return,get,mxbean,make,object,name,simple,bean
SimpleBeanFixture -> protected ISimpleMXBean getSimpleMXBean() throws MalformedObjectNameException;1289066889;Gets the mxbean for our remote object using the default name "simpleBean";protected ISimpleMXBean getSimpleMXBean() throws MalformedObjectNameException {_        return getMXBean(makeObjectName("simpleBean"))__    };gets,the,mxbean,for,our,remote,object,using,the,default,name,simple,bean;protected,isimple,mxbean,get,simple,mxbean,throws,malformed,object,name,exception,return,get,mxbean,make,object,name,simple,bean
SimpleBeanFixture -> protected ISimpleMXBean getSimpleMXBean() throws MalformedObjectNameException;1289068983;Gets the mxbean for our remote object using the default name "simpleBean";protected ISimpleMXBean getSimpleMXBean() throws MalformedObjectNameException {_        return getMXBean(makeObjectName("simpleBean"))__    };gets,the,mxbean,for,our,remote,object,using,the,default,name,simple,bean;protected,isimple,mxbean,get,simple,mxbean,throws,malformed,object,name,exception,return,get,mxbean,make,object,name,simple,bean
SimpleBeanFixture -> protected ISimpleMXBean getSimpleMXBean() throws MalformedObjectNameException;1305835015;Gets the mxbean for our remote object using the default name "simpleBean";protected ISimpleMXBean getSimpleMXBean() throws MalformedObjectNameException {_        return getMXBean(makeObjectName("simpleBean"))__    };gets,the,mxbean,for,our,remote,object,using,the,default,name,simple,bean;protected,isimple,mxbean,get,simple,mxbean,throws,malformed,object,name,exception,return,get,mxbean,make,object,name,simple,bean
SimpleBeanFixture -> protected ISimpleMXBean getSimpleMXBean() throws MalformedObjectNameException;1323680223;Gets the mxbean for our remote object using the default name "simpleBean";protected ISimpleMXBean getSimpleMXBean() throws MalformedObjectNameException {_        return getMXBean(makeObjectName("simpleBean"))__    };gets,the,mxbean,for,our,remote,object,using,the,default,name,simple,bean;protected,isimple,mxbean,get,simple,mxbean,throws,malformed,object,name,exception,return,get,mxbean,make,object,name,simple,bean
SimpleBeanFixture -> protected ISimpleMXBean getSimpleMXBean() throws MalformedObjectNameException;1325779288;Gets the mxbean for our remote object using the default name "simpleBean";protected ISimpleMXBean getSimpleMXBean() throws MalformedObjectNameException {_        return getMXBean(makeObjectName("simpleBean"))__    };gets,the,mxbean,for,our,remote,object,using,the,default,name,simple,bean;protected,isimple,mxbean,get,simple,mxbean,throws,malformed,object,name,exception,return,get,mxbean,make,object,name,simple,bean
SimpleBeanFixture -> protected ISimpleMXBean getSimpleMXBean() throws MalformedObjectNameException;1329744445;Gets the mxbean for our remote object using the default name "simpleBean";protected ISimpleMXBean getSimpleMXBean() throws MalformedObjectNameException {_        return getMXBean(makeObjectName("simpleBean"))__    };gets,the,mxbean,for,our,remote,object,using,the,default,name,simple,bean;protected,isimple,mxbean,get,simple,mxbean,throws,malformed,object,name,exception,return,get,mxbean,make,object,name,simple,bean
SimpleBeanFixture -> protected ISimpleMXBean getSimpleMXBean() throws MalformedObjectNameException;1540108158;Gets the mxbean for our remote object using the default name "simpleBean";protected ISimpleMXBean getSimpleMXBean() throws MalformedObjectNameException {_        return getMXBean(makeObjectName("simpleBean"))__    };gets,the,mxbean,for,our,remote,object,using,the,default,name,simple,bean;protected,isimple,mxbean,get,simple,mxbean,throws,malformed,object,name,exception,return,get,mxbean,make,object,name,simple,bean
SimpleBeanFixture -> protected ISimpleMXBean getSimpleMXBean() throws MalformedObjectNameException;1540108164;Gets the mxbean for our remote object using the default name "simpleBean";protected ISimpleMXBean getSimpleMXBean() throws MalformedObjectNameException {_        return getMXBean(makeObjectName("simpleBean"))__    };gets,the,mxbean,for,our,remote,object,using,the,default,name,simple,bean;protected,isimple,mxbean,get,simple,mxbean,throws,malformed,object,name,exception,return,get,mxbean,make,object,name,simple,bean
SimpleBeanFixture -> protected ISimpleMXBean getSimpleMXBean() throws MalformedObjectNameException;1551167777;Gets the mxbean for our remote object using the default name "simpleBean";protected ISimpleMXBean getSimpleMXBean() throws MalformedObjectNameException {_        return getMXBean(makeObjectName("simpleBean"))__    };gets,the,mxbean,for,our,remote,object,using,the,default,name,simple,bean;protected,isimple,mxbean,get,simple,mxbean,throws,malformed,object,name,exception,return,get,mxbean,make,object,name,simple,bean
SimpleBeanFixture -> protected ISimpleMXBean getMXBean(ObjectName aObjectName);1288942801;Gets the mxbean for our remote object using the specified name;protected ISimpleMXBean getMXBean(ObjectName aObjectName) {_        ISimpleMXBean simpleBean = JMX.newMXBeanProxy(server, aObjectName, ISimpleMXBean.class)__        return simpleBean__    };gets,the,mxbean,for,our,remote,object,using,the,specified,name;protected,isimple,mxbean,get,mxbean,object,name,a,object,name,isimple,mxbean,simple,bean,jmx,new,mxbean,proxy,server,a,object,name,isimple,mxbean,class,return,simple,bean
SimpleBeanFixture -> protected ISimpleMXBean getMXBean(ObjectName aObjectName);1289066889;Gets the mxbean for our remote object using the specified name;protected ISimpleMXBean getMXBean(ObjectName aObjectName) {_        return (ISimpleMXBean) MBeanServerInvocationHandler.newProxyInstance(_                server,_                aObjectName,_                ISimpleMXBean.class,_                false)__        ___    };gets,the,mxbean,for,our,remote,object,using,the,specified,name;protected,isimple,mxbean,get,mxbean,object,name,a,object,name,return,isimple,mxbean,mbean,server,invocation,handler,new,proxy,instance,server,a,object,name,isimple,mxbean,class,false
SimpleBeanFixture -> protected ISimpleMXBean getMXBean(ObjectName aObjectName);1289068983;Gets the mxbean for our remote object using the specified name;protected ISimpleMXBean getMXBean(ObjectName aObjectName) {_        return (ISimpleMXBean) MBeanServerInvocationHandler.newProxyInstance(_                server,_                aObjectName,_                ISimpleMXBean.class,_                false)__        ___    };gets,the,mxbean,for,our,remote,object,using,the,specified,name;protected,isimple,mxbean,get,mxbean,object,name,a,object,name,return,isimple,mxbean,mbean,server,invocation,handler,new,proxy,instance,server,a,object,name,isimple,mxbean,class,false
SimpleBeanFixture -> protected ISimpleMXBean getMXBean(ObjectName aObjectName);1305835015;Gets the mxbean for our remote object using the specified name;protected ISimpleMXBean getMXBean(ObjectName aObjectName) {_        return (ISimpleMXBean) MBeanServerInvocationHandler.newProxyInstance(_                server,_                aObjectName,_                ISimpleMXBean.class,_                false)__        ___    };gets,the,mxbean,for,our,remote,object,using,the,specified,name;protected,isimple,mxbean,get,mxbean,object,name,a,object,name,return,isimple,mxbean,mbean,server,invocation,handler,new,proxy,instance,server,a,object,name,isimple,mxbean,class,false
SimpleBeanFixture -> protected ISimpleMXBean getMXBean(ObjectName aObjectName);1323680223;Gets the mxbean for our remote object using the specified name;protected ISimpleMXBean getMXBean(ObjectName aObjectName) {_        return (ISimpleMXBean) MBeanServerInvocationHandler.newProxyInstance(_                server,_                aObjectName,_                ISimpleMXBean.class,_                false)__        ___    };gets,the,mxbean,for,our,remote,object,using,the,specified,name;protected,isimple,mxbean,get,mxbean,object,name,a,object,name,return,isimple,mxbean,mbean,server,invocation,handler,new,proxy,instance,server,a,object,name,isimple,mxbean,class,false
SimpleBeanFixture -> protected ISimpleMXBean getMXBean(ObjectName aObjectName);1325779288;Gets the mxbean for our remote object using the specified name;protected ISimpleMXBean getMXBean(ObjectName aObjectName) {_        return MBeanServerInvocationHandler.newProxyInstance(_                server,_                aObjectName,_                ISimpleMXBean.class,_                false)__        ___    };gets,the,mxbean,for,our,remote,object,using,the,specified,name;protected,isimple,mxbean,get,mxbean,object,name,a,object,name,return,mbean,server,invocation,handler,new,proxy,instance,server,a,object,name,isimple,mxbean,class,false
SimpleBeanFixture -> protected ISimpleMXBean getMXBean(ObjectName aObjectName);1329744445;Gets the mxbean for our remote object using the specified name;protected ISimpleMXBean getMXBean(ObjectName aObjectName) {_        return MBeanServerInvocationHandler.newProxyInstance(_                server,_                aObjectName,_                ISimpleMXBean.class,_                false)__        ___    };gets,the,mxbean,for,our,remote,object,using,the,specified,name;protected,isimple,mxbean,get,mxbean,object,name,a,object,name,return,mbean,server,invocation,handler,new,proxy,instance,server,a,object,name,isimple,mxbean,class,false
SimpleBeanFixture -> protected ISimpleMXBean getMXBean(ObjectName aObjectName);1540108158;Gets the mxbean for our remote object using the specified name;protected ISimpleMXBean getMXBean(ObjectName aObjectName) {_        return MBeanServerInvocationHandler.newProxyInstance(_                server,_                aObjectName,_                ISimpleMXBean.class,_                false)__        ___    };gets,the,mxbean,for,our,remote,object,using,the,specified,name;protected,isimple,mxbean,get,mxbean,object,name,a,object,name,return,mbean,server,invocation,handler,new,proxy,instance,server,a,object,name,isimple,mxbean,class,false
SimpleBeanFixture -> protected ISimpleMXBean getMXBean(ObjectName aObjectName);1540108164;Gets the mxbean for our remote object using the specified name;protected ISimpleMXBean getMXBean(ObjectName aObjectName) {_        return MBeanServerInvocationHandler.newProxyInstance(_                server,_                aObjectName,_                ISimpleMXBean.class,_                false)__        ___    };gets,the,mxbean,for,our,remote,object,using,the,specified,name;protected,isimple,mxbean,get,mxbean,object,name,a,object,name,return,mbean,server,invocation,handler,new,proxy,instance,server,a,object,name,isimple,mxbean,class,false
SimpleBeanFixture -> protected ISimpleMXBean getMXBean(ObjectName aObjectName);1551167777;Gets the mxbean for our remote object using the specified name;protected ISimpleMXBean getMXBean(ObjectName aObjectName) {_        return MBeanServerInvocationHandler.newProxyInstance(_                server,_                aObjectName,_                ISimpleMXBean.class,_                false)__        ___    };gets,the,mxbean,for,our,remote,object,using,the,specified,name;protected,isimple,mxbean,get,mxbean,object,name,a,object,name,return,mbean,server,invocation,handler,new,proxy,instance,server,a,object,name,isimple,mxbean,class,false
SimpleBeanFixture -> protected Message getMessage(int aIndex);1288942801;Gets the received message at the specified index;protected Message getMessage(int aIndex) {_        Exchange exchange = getExchange(aIndex)__        Message in = exchange.getIn()__        return in__    };gets,the,received,message,at,the,specified,index;protected,message,get,message,int,a,index,exchange,exchange,get,exchange,a,index,message,in,exchange,get,in,return,in
SimpleBeanFixture -> protected Message getMessage(int aIndex);1289066889;Gets the received message at the specified index;protected Message getMessage(int aIndex) {_        Exchange exchange = getExchange(aIndex)__        Message in = exchange.getIn()__        return in__    };gets,the,received,message,at,the,specified,index;protected,message,get,message,int,a,index,exchange,exchange,get,exchange,a,index,message,in,exchange,get,in,return,in
SimpleBeanFixture -> protected Message getMessage(int aIndex);1289068983;Gets the received message at the specified index;protected Message getMessage(int aIndex) {_        Exchange exchange = getExchange(aIndex)__        Message in = exchange.getIn()__        return in__    };gets,the,received,message,at,the,specified,index;protected,message,get,message,int,a,index,exchange,exchange,get,exchange,a,index,message,in,exchange,get,in,return,in
SimpleBeanFixture -> protected void assertMessageReceived(File aExpectedFile) throws Exception;1288942801;Assert that we've received the message and resets the mock endpoint;protected void assertMessageReceived(File aExpectedFile) throws Exception {_        XmlFixture.assertXMLIgnorePrefix("failed to match",_                XmlFixture.toDoc(aExpectedFile),_                XmlFixture.toDoc(getBody(0, String.class)))__        resetMockEndpoint()__    };assert,that,we,ve,received,the,message,and,resets,the,mock,endpoint;protected,void,assert,message,received,file,a,expected,file,throws,exception,xml,fixture,assert,xmlignore,prefix,failed,to,match,xml,fixture,to,doc,a,expected,file,xml,fixture,to,doc,get,body,0,string,class,reset,mock,endpoint
SimpleBeanFixture -> protected void assertMessageReceived(File aExpectedFile) throws Exception;1289066889;Assert that we've received the message and resets the mock endpoint;protected void assertMessageReceived(File aExpectedFile) throws Exception {_        Document actual = XmlFixture.toDoc(getBody(0, String.class))__        Document noTime = XmlFixture.stripTimestamp(actual)__        XmlFixture.assertXMLIgnorePrefix("failed to match",_                XmlFixture.toDoc(aExpectedFile),_                noTime)__        _        _        _        XPathFactory xpf = XPathFactory.newInstance()__        XPath xp = xpf.newXPath()__        xp.setNamespaceContext(new NamespaceContext(){_            public String getNamespaceURI(String aArg0) {_                return "urn:org.apache.camel.component:jmx"__            }_            public String getPrefix(String aArg0) {_                return "jmx"__            }_            public Iterator getPrefixes(String aArg0) {_                return null__            }_        })__        assertEquals("1262878215000", xp.evaluate("string(//jmx:timestamp)", actual))__        assertEquals("1", xp.evaluate("count(//jmx:dateTime)", actual))__        resetMockEndpoint()__    };assert,that,we,ve,received,the,message,and,resets,the,mock,endpoint;protected,void,assert,message,received,file,a,expected,file,throws,exception,document,actual,xml,fixture,to,doc,get,body,0,string,class,document,no,time,xml,fixture,strip,timestamp,actual,xml,fixture,assert,xmlignore,prefix,failed,to,match,xml,fixture,to,doc,a,expected,file,no,time,xpath,factory,xpf,xpath,factory,new,instance,xpath,xp,xpf,new,xpath,xp,set,namespace,context,new,namespace,context,public,string,get,namespace,uri,string,a,arg0,return,urn,org,apache,camel,component,jmx,public,string,get,prefix,string,a,arg0,return,jmx,public,iterator,get,prefixes,string,a,arg0,return,null,assert,equals,1262878215000,xp,evaluate,string,jmx,timestamp,actual,assert,equals,1,xp,evaluate,count,jmx,date,time,actual,reset,mock,endpoint
SimpleBeanFixture -> protected void assertMessageReceived(File aExpectedFile) throws Exception;1289068983;Assert that we've received the message and resets the mock endpoint;protected void assertMessageReceived(File aExpectedFile) throws Exception {_        Document actual = XmlFixture.toDoc(getBody(0, String.class))__        Document noTime = XmlFixture.stripTimestamp(actual)__        XmlFixture.assertXMLIgnorePrefix("failed to match",_                XmlFixture.toDoc(aExpectedFile),_                noTime)__        _        _        _        XPathFactory xpf = XPathFactory.newInstance()__        XPath xp = xpf.newXPath()__        xp.setNamespaceContext(new NamespaceContext() {_            public String getNamespaceURI(String aArg0) {_                return "urn:org.apache.camel.component:jmx"__            }_            public String getPrefix(String aArg0) {_                return "jmx"__            }_            public Iterator getPrefixes(String aArg0) {_                return null__            }_        })__        assertEquals("1", xp.evaluate("count(//jmx:timestamp)", actual))__        assertEquals("1", xp.evaluate("count(//jmx:dateTime)", actual))__        resetMockEndpoint()__    };assert,that,we,ve,received,the,message,and,resets,the,mock,endpoint;protected,void,assert,message,received,file,a,expected,file,throws,exception,document,actual,xml,fixture,to,doc,get,body,0,string,class,document,no,time,xml,fixture,strip,timestamp,actual,xml,fixture,assert,xmlignore,prefix,failed,to,match,xml,fixture,to,doc,a,expected,file,no,time,xpath,factory,xpf,xpath,factory,new,instance,xpath,xp,xpf,new,xpath,xp,set,namespace,context,new,namespace,context,public,string,get,namespace,uri,string,a,arg0,return,urn,org,apache,camel,component,jmx,public,string,get,prefix,string,a,arg0,return,jmx,public,iterator,get,prefixes,string,a,arg0,return,null,assert,equals,1,xp,evaluate,count,jmx,timestamp,actual,assert,equals,1,xp,evaluate,count,jmx,date,time,actual,reset,mock,endpoint
SimpleBeanFixture -> protected void initBean() throws Exception;1288942801;Creates the bean and registers it within the mbean server._Note that we're using a fixed timestamp here to simplify the assertions in the tests;protected void initBean() throws Exception {_        registerBean(createSimpleBean(), makeObjectName("simpleBean"))__    };creates,the,bean,and,registers,it,within,the,mbean,server,note,that,we,re,using,a,fixed,timestamp,here,to,simplify,the,assertions,in,the,tests;protected,void,init,bean,throws,exception,register,bean,create,simple,bean,make,object,name,simple,bean
SimpleBeanFixture -> protected void initBean() throws Exception;1289066889;Creates the bean and registers it within the mbean server._Note that we're using a fixed timestamp here to simplify the assertions in the tests;protected void initBean() throws Exception {_        registerBean(createSimpleBean(), makeObjectName("simpleBean"))__    };creates,the,bean,and,registers,it,within,the,mbean,server,note,that,we,re,using,a,fixed,timestamp,here,to,simplify,the,assertions,in,the,tests;protected,void,init,bean,throws,exception,register,bean,create,simple,bean,make,object,name,simple,bean
SimpleBeanFixture -> protected void initBean() throws Exception;1289068983;Creates the bean and registers it within the mbean server._Note that we're using a fixed timestamp here to simplify the assertions in the tests;protected void initBean() throws Exception {_        registerBean(createSimpleBean(), makeObjectName("simpleBean"))__    };creates,the,bean,and,registers,it,within,the,mbean,server,note,that,we,re,using,a,fixed,timestamp,here,to,simplify,the,assertions,in,the,tests;protected,void,init,bean,throws,exception,register,bean,create,simple,bean,make,object,name,simple,bean
SimpleBeanFixture -> protected void initBean() throws Exception;1305835015;Creates the bean and registers it within the mbean server._Note that we're using a fixed timestamp here to simplify the assertions in the tests;protected void initBean() throws Exception {_        registerBean(createSimpleBean(), makeObjectName("simpleBean"))__    };creates,the,bean,and,registers,it,within,the,mbean,server,note,that,we,re,using,a,fixed,timestamp,here,to,simplify,the,assertions,in,the,tests;protected,void,init,bean,throws,exception,register,bean,create,simple,bean,make,object,name,simple,bean
SimpleBeanFixture -> protected void initBean() throws Exception;1323680223;Creates the bean and registers it within the mbean server._Note that we're using a fixed timestamp here to simplify the assertions in the tests;protected void initBean() throws Exception {_        registerBean(createSimpleBean(), makeObjectName("simpleBean"))__    };creates,the,bean,and,registers,it,within,the,mbean,server,note,that,we,re,using,a,fixed,timestamp,here,to,simplify,the,assertions,in,the,tests;protected,void,init,bean,throws,exception,register,bean,create,simple,bean,make,object,name,simple,bean
SimpleBeanFixture -> protected void initBean() throws Exception;1325779288;Creates the bean and registers it within the mbean server._Note that we're using a fixed timestamp here to simplify the assertions in the tests;protected void initBean() throws Exception {_        registerBean(createSimpleBean(), makeObjectName("simpleBean"))__    };creates,the,bean,and,registers,it,within,the,mbean,server,note,that,we,re,using,a,fixed,timestamp,here,to,simplify,the,assertions,in,the,tests;protected,void,init,bean,throws,exception,register,bean,create,simple,bean,make,object,name,simple,bean
SimpleBeanFixture -> protected void initBean() throws Exception;1329744445;Creates the bean and registers it within the mbean server._Note that we're using a fixed timestamp here to simplify the assertions in the tests;protected void initBean() throws Exception {_        registerBean(createSimpleBean(), makeObjectName("simpleBean"))__    };creates,the,bean,and,registers,it,within,the,mbean,server,note,that,we,re,using,a,fixed,timestamp,here,to,simplify,the,assertions,in,the,tests;protected,void,init,bean,throws,exception,register,bean,create,simple,bean,make,object,name,simple,bean
SimpleBeanFixture -> protected void initBean() throws Exception;1540108158;Creates the bean and registers it within the mbean server._Note that we're using a fixed timestamp here to simplify the assertions in the tests;protected void initBean() throws Exception {_        registerBean(createSimpleBean(), makeObjectName("simpleBean"))__    };creates,the,bean,and,registers,it,within,the,mbean,server,note,that,we,re,using,a,fixed,timestamp,here,to,simplify,the,assertions,in,the,tests;protected,void,init,bean,throws,exception,register,bean,create,simple,bean,make,object,name,simple,bean
SimpleBeanFixture -> protected void initBean() throws Exception;1540108164;Creates the bean and registers it within the mbean server._Note that we're using a fixed timestamp here to simplify the assertions in the tests;protected void initBean() throws Exception {_        registerBean(createSimpleBean(), makeObjectName("simpleBean"))__    };creates,the,bean,and,registers,it,within,the,mbean,server,note,that,we,re,using,a,fixed,timestamp,here,to,simplify,the,assertions,in,the,tests;protected,void,init,bean,throws,exception,register,bean,create,simple,bean,make,object,name,simple,bean
SimpleBeanFixture -> protected void initBean() throws Exception;1551167777;Creates the bean and registers it within the mbean server._Note that we're using a fixed timestamp here to simplify the assertions in the tests;protected void initBean() throws Exception {_        registerBean(createSimpleBean(), makeObjectName("simpleBean"))__    };creates,the,bean,and,registers,it,within,the,mbean,server,note,that,we,re,using,a,fixed,timestamp,here,to,simplify,the,assertions,in,the,tests;protected,void,init,bean,throws,exception,register,bean,create,simple,bean,make,object,name,simple,bean
SimpleBeanFixture -> protected void initContext() throws Exception;1288942801;Initializes the camel context by creating a simple route from our mbean_to the mock endpoint.;protected void initContext() throws Exception {_        mMockEndpoint = (MockEndpoint) mContext.getEndpoint("mock:sink")__        mMockEndpoint.setExpectedMessageCount(1)__        mContext.setRegistry(getRegistry())__        mContext.addRoutes(new RouteBuilder() {_            @Override_            public void configure() throws Exception {_                from(buildFromURI().toString()).to(mMockEndpoint)__            }_        })__    };initializes,the,camel,context,by,creating,a,simple,route,from,our,mbean,to,the,mock,endpoint;protected,void,init,context,throws,exception,m,mock,endpoint,mock,endpoint,m,context,get,endpoint,mock,sink,m,mock,endpoint,set,expected,message,count,1,m,context,set,registry,get,registry,m,context,add,routes,new,route,builder,override,public,void,configure,throws,exception,from,build,from,uri,to,string,to,m,mock,endpoint
SimpleBeanFixture -> protected void initContext() throws Exception;1289066889;Initializes the camel context by creating a simple route from our mbean_to the mock endpoint.;protected void initContext() throws Exception {_        mMockEndpoint = (MockEndpoint) mContext.getEndpoint("mock:sink")__        mMockEndpoint.setExpectedMessageCount(1)__        mContext.setRegistry(getRegistry())__        mContext.addRoutes(new RouteBuilder() {_            @Override_            public void configure() throws Exception {_                from(buildFromURI().toString()).to(mMockEndpoint)__            }_        })__    };initializes,the,camel,context,by,creating,a,simple,route,from,our,mbean,to,the,mock,endpoint;protected,void,init,context,throws,exception,m,mock,endpoint,mock,endpoint,m,context,get,endpoint,mock,sink,m,mock,endpoint,set,expected,message,count,1,m,context,set,registry,get,registry,m,context,add,routes,new,route,builder,override,public,void,configure,throws,exception,from,build,from,uri,to,string,to,m,mock,endpoint
SimpleBeanFixture -> protected void initContext() throws Exception;1289068983;Initializes the camel context by creating a simple route from our mbean_to the mock endpoint.;protected void initContext() throws Exception {_        mMockEndpoint = (MockEndpoint) mContext.getEndpoint("mock:sink")__        mMockEndpoint.setExpectedMessageCount(1)__        mContext.setRegistry(getRegistry())__        mContext.addRoutes(new RouteBuilder() {_            @Override_            public void configure() throws Exception {_                from(buildFromURI().toString()).to(mMockEndpoint)__            }_        })__    };initializes,the,camel,context,by,creating,a,simple,route,from,our,mbean,to,the,mock,endpoint;protected,void,init,context,throws,exception,m,mock,endpoint,mock,endpoint,m,context,get,endpoint,mock,sink,m,mock,endpoint,set,expected,message,count,1,m,context,set,registry,get,registry,m,context,add,routes,new,route,builder,override,public,void,configure,throws,exception,from,build,from,uri,to,string,to,m,mock,endpoint
SimpleBeanFixture -> protected void initContext() throws Exception;1305835015;Initializes the camel context by creating a simple route from our mbean_to the mock endpoint.;protected void initContext() throws Exception {_        mContext.setLazyLoadTypeConverters(true)__        final MockEndpoint mock = (MockEndpoint) mContext.getEndpoint("mock:sink")__        mock.setExpectedMessageCount(1)__        mMockEndpoint = new MockEndpointFixture(mock)__        mContext.setRegistry(getRegistry())__        mContext.addRoutes(new RouteBuilder() {_            @Override_            public void configure() throws Exception {_                from(buildFromURI().toString()).to(mock)__            }_        })__    };initializes,the,camel,context,by,creating,a,simple,route,from,our,mbean,to,the,mock,endpoint;protected,void,init,context,throws,exception,m,context,set,lazy,load,type,converters,true,final,mock,endpoint,mock,mock,endpoint,m,context,get,endpoint,mock,sink,mock,set,expected,message,count,1,m,mock,endpoint,new,mock,endpoint,fixture,mock,m,context,set,registry,get,registry,m,context,add,routes,new,route,builder,override,public,void,configure,throws,exception,from,build,from,uri,to,string,to,mock
SimpleBeanFixture -> protected void initContext() throws Exception;1323680223;Initializes the camel context by creating a simple route from our mbean_to the mock endpoint.;protected void initContext() throws Exception {_        mContext.setLazyLoadTypeConverters(true)__        final MockEndpoint mock = mContext.getEndpoint("mock:sink", MockEndpoint.class)__        mock.setExpectedMessageCount(1)__        mMockEndpoint = new MockEndpointFixture(mock)__        mContext.setRegistry(getRegistry())__        mContext.addRoutes(new RouteBuilder() {_            @Override_            public void configure() throws Exception {_                from(buildFromURI().toString()).to(mock)__            }_        })__    };initializes,the,camel,context,by,creating,a,simple,route,from,our,mbean,to,the,mock,endpoint;protected,void,init,context,throws,exception,m,context,set,lazy,load,type,converters,true,final,mock,endpoint,mock,m,context,get,endpoint,mock,sink,mock,endpoint,class,mock,set,expected,message,count,1,m,mock,endpoint,new,mock,endpoint,fixture,mock,m,context,set,registry,get,registry,m,context,add,routes,new,route,builder,override,public,void,configure,throws,exception,from,build,from,uri,to,string,to,mock
SimpleBeanFixture -> protected void initContext() throws Exception;1325779288;Initializes the camel context by creating a simple route from our mbean_to the mock endpoint.;protected void initContext() throws Exception {_        mContext.setLazyLoadTypeConverters(true)__        final MockEndpoint mock = mContext.getEndpoint("mock:sink", MockEndpoint.class)__        mock.setExpectedMessageCount(1)__        mMockEndpoint = new MockEndpointFixture(mock)__        mContext.setRegistry(getRegistry())__        mContext.addRoutes(new RouteBuilder() {_            @Override_            public void configure() throws Exception {_                from(buildFromURI().toString()).to(mock)__            }_        })__    };initializes,the,camel,context,by,creating,a,simple,route,from,our,mbean,to,the,mock,endpoint;protected,void,init,context,throws,exception,m,context,set,lazy,load,type,converters,true,final,mock,endpoint,mock,m,context,get,endpoint,mock,sink,mock,endpoint,class,mock,set,expected,message,count,1,m,mock,endpoint,new,mock,endpoint,fixture,mock,m,context,set,registry,get,registry,m,context,add,routes,new,route,builder,override,public,void,configure,throws,exception,from,build,from,uri,to,string,to,mock
SimpleBeanFixture -> protected void initContext() throws Exception;1540108164;Initializes the camel context by creating a simple route from our mbean_to the mock endpoint.;protected void initContext() throws Exception {_        final MockEndpoint mock = mContext.getEndpoint("mock:sink", MockEndpoint.class)__        mock.setExpectedMessageCount(1)__        mMockEndpoint = new MockEndpointFixture(mock)__        mContext.setRegistry(getRegistry())__        mContext.addRoutes(new RouteBuilder() {_            @Override_            public void configure() throws Exception {_                from(buildFromURI().toString()).to(mock)__            }_        })__    };initializes,the,camel,context,by,creating,a,simple,route,from,our,mbean,to,the,mock,endpoint;protected,void,init,context,throws,exception,final,mock,endpoint,mock,m,context,get,endpoint,mock,sink,mock,endpoint,class,mock,set,expected,message,count,1,m,mock,endpoint,new,mock,endpoint,fixture,mock,m,context,set,registry,get,registry,m,context,add,routes,new,route,builder,override,public,void,configure,throws,exception,from,build,from,uri,to,string,to,mock
SimpleBeanFixture -> protected void initContext() throws Exception;1551167777;Initializes the camel context by creating a simple route from our mbean_to the mock endpoint.;protected void initContext() throws Exception {_        final MockEndpoint mock = mContext.getEndpoint("mock:sink", MockEndpoint.class)__        mock.setExpectedMessageCount(1)__        mMockEndpoint = new MockEndpointFixture(mock)__        mContext.setRegistry(getRegistry())__        mContext.addRoutes(new RouteBuilder() {_            @Override_            public void configure() throws Exception {_                from(buildFromURI().toString()).to(mock)__            }_        })__    };initializes,the,camel,context,by,creating,a,simple,route,from,our,mbean,to,the,mock,endpoint;protected,void,init,context,throws,exception,final,mock,endpoint,mock,m,context,get,endpoint,mock,sink,mock,endpoint,class,mock,set,expected,message,count,1,m,mock,endpoint,new,mock,endpoint,fixture,mock,m,context,set,registry,get,registry,m,context,add,routes,new,route,builder,override,public,void,configure,throws,exception,from,build,from,uri,to,string,to,mock
SimpleBeanFixture -> protected void registerBean(Object aBean, ObjectName aObjectName) throws Exception;1288942801;Registers the bean on the platform mbean server;protected void registerBean(Object aBean, ObjectName aObjectName) throws Exception {_        server.registerMBean(aBean, aObjectName)__    };registers,the,bean,on,the,platform,mbean,server;protected,void,register,bean,object,a,bean,object,name,a,object,name,throws,exception,server,register,mbean,a,bean,a,object,name
SimpleBeanFixture -> protected void registerBean(Object aBean, ObjectName aObjectName) throws Exception;1289066889;Registers the bean on the platform mbean server;protected void registerBean(Object aBean, ObjectName aObjectName) throws Exception {_        server.registerMBean(aBean, aObjectName)__    };registers,the,bean,on,the,platform,mbean,server;protected,void,register,bean,object,a,bean,object,name,a,object,name,throws,exception,server,register,mbean,a,bean,a,object,name
SimpleBeanFixture -> protected void registerBean(Object aBean, ObjectName aObjectName) throws Exception;1289068983;Registers the bean on the platform mbean server;protected void registerBean(Object aBean, ObjectName aObjectName) throws Exception {_        server.registerMBean(aBean, aObjectName)__    };registers,the,bean,on,the,platform,mbean,server;protected,void,register,bean,object,a,bean,object,name,a,object,name,throws,exception,server,register,mbean,a,bean,a,object,name
SimpleBeanFixture -> protected void registerBean(Object aBean, ObjectName aObjectName) throws Exception;1305835015;Registers the bean on the platform mbean server;protected void registerBean(Object aBean, ObjectName aObjectName) throws Exception {_        server.registerMBean(aBean, aObjectName)__    };registers,the,bean,on,the,platform,mbean,server;protected,void,register,bean,object,a,bean,object,name,a,object,name,throws,exception,server,register,mbean,a,bean,a,object,name
SimpleBeanFixture -> protected void registerBean(Object aBean, ObjectName aObjectName) throws Exception;1323680223;Registers the bean on the platform mbean server;protected void registerBean(Object aBean, ObjectName aObjectName) throws Exception {_        server.registerMBean(aBean, aObjectName)__    };registers,the,bean,on,the,platform,mbean,server;protected,void,register,bean,object,a,bean,object,name,a,object,name,throws,exception,server,register,mbean,a,bean,a,object,name
SimpleBeanFixture -> protected void registerBean(Object aBean, ObjectName aObjectName) throws Exception;1325779288;Registers the bean on the platform mbean server;protected void registerBean(Object aBean, ObjectName aObjectName) throws Exception {_        server.registerMBean(aBean, aObjectName)__    };registers,the,bean,on,the,platform,mbean,server;protected,void,register,bean,object,a,bean,object,name,a,object,name,throws,exception,server,register,mbean,a,bean,a,object,name
SimpleBeanFixture -> protected void registerBean(Object aBean, ObjectName aObjectName) throws Exception;1329744445;Registers the bean on the platform mbean server;protected void registerBean(Object aBean, ObjectName aObjectName) throws Exception {_        server.registerMBean(aBean, aObjectName)__    };registers,the,bean,on,the,platform,mbean,server;protected,void,register,bean,object,a,bean,object,name,a,object,name,throws,exception,server,register,mbean,a,bean,a,object,name
SimpleBeanFixture -> protected void registerBean(Object aBean, ObjectName aObjectName) throws Exception;1540108158;Registers the bean on the platform mbean server;protected void registerBean(Object aBean, ObjectName aObjectName) throws Exception {_        server.registerMBean(aBean, aObjectName)__    };registers,the,bean,on,the,platform,mbean,server;protected,void,register,bean,object,a,bean,object,name,a,object,name,throws,exception,server,register,mbean,a,bean,a,object,name
SimpleBeanFixture -> protected void registerBean(Object aBean, ObjectName aObjectName) throws Exception;1540108164;Registers the bean on the platform mbean server;protected void registerBean(Object aBean, ObjectName aObjectName) throws Exception {_        server.registerMBean(aBean, aObjectName)__    };registers,the,bean,on,the,platform,mbean,server;protected,void,register,bean,object,a,bean,object,name,a,object,name,throws,exception,server,register,mbean,a,bean,a,object,name
SimpleBeanFixture -> protected void registerBean(Object aBean, ObjectName aObjectName) throws Exception;1551167777;Registers the bean on the platform mbean server;protected void registerBean(Object aBean, ObjectName aObjectName) throws Exception {_        server.registerMBean(aBean, aObjectName)__    };registers,the,bean,on,the,platform,mbean,server;protected,void,register,bean,object,a,bean,object,name,a,object,name,throws,exception,server,register,mbean,a,bean,a,object,name
SimpleBeanFixture -> protected <T> T getBody(int aIndex, Class<T> aType);1288942801;Gets the body of the received message at the specified index;protected <T> T getBody(int aIndex, Class<T> aType) {_        Message in = getMessage(aIndex)__        T body = in.getBody(aType)__        assertNotNull(body)__        return body__    };gets,the,body,of,the,received,message,at,the,specified,index;protected,t,t,get,body,int,a,index,class,t,a,type,message,in,get,message,a,index,t,body,in,get,body,a,type,assert,not,null,body,return,body
SimpleBeanFixture -> protected <T> T getBody(int aIndex, Class<T> aType);1289066889;Gets the body of the received message at the specified index;protected <T> T getBody(int aIndex, Class<T> aType) {_        Message in = getMessage(aIndex)__        T body = in.getBody(aType)__        assertNotNull(body)__        return body__    };gets,the,body,of,the,received,message,at,the,specified,index;protected,t,t,get,body,int,a,index,class,t,a,type,message,in,get,message,a,index,t,body,in,get,body,a,type,assert,not,null,body,return,body
SimpleBeanFixture -> protected <T> T getBody(int aIndex, Class<T> aType);1289068983;Gets the body of the received message at the specified index;protected <T> T getBody(int aIndex, Class<T> aType) {_        Message in = getMessage(aIndex)__        T body = in.getBody(aType)__        assertNotNull(body)__        return body__    };gets,the,body,of,the,received,message,at,the,specified,index;protected,t,t,get,body,int,a,index,class,t,a,type,message,in,get,message,a,index,t,body,in,get,body,a,type,assert,not,null,body,return,body
