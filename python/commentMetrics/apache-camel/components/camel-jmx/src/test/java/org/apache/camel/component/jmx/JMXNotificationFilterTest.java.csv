commented;modifiers;parameterAmount;loc;comment;code
false;public;0;26;;@Test public void testNotificationFilter() throws Exception {     ISimpleMXBean bean = getSimpleMXBean().     assertEquals("no notifications should have been filtered at this point", 0, mRejected.size()).     // we should only get 5 messages, which is 1/2 the number of times we touched the object.     // The 1/2 is due to the behavior of the test NotificationFilter implemented below     getMockFixture().getMockEndpoint().setExpectedMessageCount(5).     for (int i = 0. i < 10. i++) {         bean.touch().     }     getMockFixture().waitForMessages().     assertEquals("5 notifications should have been filtered", 5, mRejected.size()).     // assert that all of the rejected ones are odd and accepted ones even     for (Notification rejected : mRejected) {         assertEquals(1, rejected.getSequenceNumber() % 2).     }     for (Exchange received : getMockFixture().getMockEndpoint().getReceivedExchanges()) {         Notification n = (Notification) received.getIn().getBody().         assertEquals(0, n.getSequenceNumber() % 2).     } }
false;protected;0;5;;@Override protected JMXUriBuilder buildFromURI() {     // use the raw format so we can we can get the Notification and assert on the sequence     return super.buildFromURI().withNotificationFilter("#myFilter").withFormat("raw"). }
false;public;1;8;;public boolean isNotificationEnabled(Notification aNotification) {     // only accept even notifications     boolean enabled = aNotification.getSequenceNumber() % 2 == 0.     if (!enabled) {         mRejected.add(aNotification).     }     return enabled. }
false;protected;0;19;;@Override protected void initRegistry() {     super.initRegistry().     // initialize the registry with our filter     getRegistry().put("myFilter", new NotificationFilter() {          private static final long serialVersionUID = 1L.          public boolean isNotificationEnabled(Notification aNotification) {             // only accept even notifications             boolean enabled = aNotification.getSequenceNumber() % 2 == 0.             if (!enabled) {                 mRejected.add(aNotification).             }             return enabled.         }     }). }
