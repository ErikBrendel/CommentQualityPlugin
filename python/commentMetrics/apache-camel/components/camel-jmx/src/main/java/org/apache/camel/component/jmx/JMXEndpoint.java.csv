# id;timestamp;commentText;codeText;commentWords;codeWords
JMXEndpoint -> public void setObjectProperties(Hashtable<String, String> aObjectProperties);1288942801;Setter for the ObjectProperties is either called by reflection when_processing the URI or manually by the component._<p/>_If the URI contained a value with a reference like "objectProperties=#myHashtable"_then the Hashtable will be set in place._<p/>_If there are extra properties that begin with "key." then the component will_create a Hashtable with these values after removing the "key." prefix.;public void setObjectProperties(Hashtable<String, String> aObjectProperties) {_        if (getObjectName() != null) {_            throw new IllegalArgumentException("Cannot set both objectName and objectProperties")__        }_        mObjectProperties = aObjectProperties__    };setter,for,the,object,properties,is,either,called,by,reflection,when,processing,the,uri,or,manually,by,the,component,p,if,the,uri,contained,a,value,with,a,reference,like,object,properties,my,hashtable,then,the,hashtable,will,be,set,in,place,p,if,there,are,extra,properties,that,begin,with,key,then,the,component,will,create,a,hashtable,with,these,values,after,removing,the,key,prefix;public,void,set,object,properties,hashtable,string,string,a,object,properties,if,get,object,name,null,throw,new,illegal,argument,exception,cannot,set,both,object,name,and,object,properties,m,object,properties,a,object,properties
JMXEndpoint -> public void setObjectProperties(Hashtable<String, String> aObjectProperties);1305835015;Setter for the ObjectProperties is either called by reflection when_processing the URI or manually by the component._<p/>_If the URI contained a value with a reference like "objectProperties=#myHashtable"_then the Hashtable will be set in place._<p/>_If there are extra properties that begin with "key." then the component will_create a Hashtable with these values after removing the "key." prefix.;public void setObjectProperties(Hashtable<String, String> aObjectProperties) {_        if (getObjectName() != null) {_            throw new IllegalArgumentException("Cannot set both objectName and objectProperties")__        }_        mObjectProperties = aObjectProperties__    };setter,for,the,object,properties,is,either,called,by,reflection,when,processing,the,uri,or,manually,by,the,component,p,if,the,uri,contained,a,value,with,a,reference,like,object,properties,my,hashtable,then,the,hashtable,will,be,set,in,place,p,if,there,are,extra,properties,that,begin,with,key,then,the,component,will,create,a,hashtable,with,these,values,after,removing,the,key,prefix;public,void,set,object,properties,hashtable,string,string,a,object,properties,if,get,object,name,null,throw,new,illegal,argument,exception,cannot,set,both,object,name,and,object,properties,m,object,properties,a,object,properties
JMXEndpoint -> public void setObjectProperties(Hashtable<String, String> aObjectProperties);1331935855;Setter for the ObjectProperties is either called by reflection when_processing the URI or manually by the component._<p/>_If the URI contained a value with a reference like "objectProperties=#myHashtable"_then the Hashtable will be set in place._<p/>_If there are extra properties that begin with "key." then the component will_create a Hashtable with these values after removing the "key." prefix.;public void setObjectProperties(Hashtable<String, String> aObjectProperties) {_        if (getObjectName() != null) {_            throw new IllegalArgumentException("Cannot set both objectName and objectProperties")__        }_        mObjectProperties = aObjectProperties__    };setter,for,the,object,properties,is,either,called,by,reflection,when,processing,the,uri,or,manually,by,the,component,p,if,the,uri,contained,a,value,with,a,reference,like,object,properties,my,hashtable,then,the,hashtable,will,be,set,in,place,p,if,there,are,extra,properties,that,begin,with,key,then,the,component,will,create,a,hashtable,with,these,values,after,removing,the,key,prefix;public,void,set,object,properties,hashtable,string,string,a,object,properties,if,get,object,name,null,throw,new,illegal,argument,exception,cannot,set,both,object,name,and,object,properties,m,object,properties,a,object,properties
JMXEndpoint -> public void setObjectProperties(Hashtable<String, String> aObjectProperties);1347621219;Setter for the ObjectProperties is either called by reflection when_processing the URI or manually by the component._<p/>_If the URI contained a value with a reference like "objectProperties=#myHashtable"_then the Hashtable will be set in place._<p/>_If there are extra properties that begin with "key." then the component will_create a Hashtable with these values after removing the "key." prefix.;public void setObjectProperties(Hashtable<String, String> aObjectProperties) {_        if (getObjectName() != null) {_            throw new IllegalArgumentException("Cannot set both objectName and objectProperties")__        }_        mObjectProperties = aObjectProperties__    };setter,for,the,object,properties,is,either,called,by,reflection,when,processing,the,uri,or,manually,by,the,component,p,if,the,uri,contained,a,value,with,a,reference,like,object,properties,my,hashtable,then,the,hashtable,will,be,set,in,place,p,if,there,are,extra,properties,that,begin,with,key,then,the,component,will,create,a,hashtable,with,these,values,after,removing,the,key,prefix;public,void,set,object,properties,hashtable,string,string,a,object,properties,if,get,object,name,null,throw,new,illegal,argument,exception,cannot,set,both,object,name,and,object,properties,m,object,properties,a,object,properties
JMXEndpoint -> public void setObjectProperties(Hashtable<String, String> aObjectProperties);1366899100;Setter for the ObjectProperties is either called by reflection when_processing the URI or manually by the component._<p/>_If the URI contained a value with a reference like "objectProperties=#myHashtable"_then the Hashtable will be set in place._<p/>_If there are extra properties that begin with "key." then the component will_create a Hashtable with these values after removing the "key." prefix.;public void setObjectProperties(Hashtable<String, String> aObjectProperties) {_        if (getObjectName() != null) {_            throw new IllegalArgumentException("Cannot set both objectName and objectProperties")__        }_        mObjectProperties = aObjectProperties__    };setter,for,the,object,properties,is,either,called,by,reflection,when,processing,the,uri,or,manually,by,the,component,p,if,the,uri,contained,a,value,with,a,reference,like,object,properties,my,hashtable,then,the,hashtable,will,be,set,in,place,p,if,there,are,extra,properties,that,begin,with,key,then,the,component,will,create,a,hashtable,with,these,values,after,removing,the,key,prefix;public,void,set,object,properties,hashtable,string,string,a,object,properties,if,get,object,name,null,throw,new,illegal,argument,exception,cannot,set,both,object,name,and,object,properties,m,object,properties,a,object,properties
JMXEndpoint -> public void setObjectProperties(Hashtable<String, String> aObjectProperties);1420193308;Setter for the ObjectProperties is either called by reflection when_processing the URI or manually by the component._<p/>_If the URI contained a value with a reference like "objectProperties=#myHashtable"_then the Hashtable will be set in place._<p/>_If there are extra properties that begin with "key." then the component will_create a Hashtable with these values after removing the "key." prefix.;public void setObjectProperties(Hashtable<String, String> aObjectProperties) {_        if (getObjectName() != null) {_            throw new IllegalArgumentException("Cannot set both objectName and objectProperties")__        }_        objectProperties = aObjectProperties__    };setter,for,the,object,properties,is,either,called,by,reflection,when,processing,the,uri,or,manually,by,the,component,p,if,the,uri,contained,a,value,with,a,reference,like,object,properties,my,hashtable,then,the,hashtable,will,be,set,in,place,p,if,there,are,extra,properties,that,begin,with,key,then,the,component,will,create,a,hashtable,with,these,values,after,removing,the,key,prefix;public,void,set,object,properties,hashtable,string,string,a,object,properties,if,get,object,name,null,throw,new,illegal,argument,exception,cannot,set,both,object,name,and,object,properties,object,properties,a,object,properties
JMXEndpoint -> public void setObjectProperties(Hashtable<String, String> aObjectProperties);1423750790;Setter for the ObjectProperties is either called by reflection when_processing the URI or manually by the component._<p/>_If the URI contained a value with a reference like "objectProperties=#myHashtable"_then the Hashtable will be set in place._<p/>_If there are extra properties that begin with "key." then the component will_create a Hashtable with these values after removing the "key." prefix.;public void setObjectProperties(Hashtable<String, String> aObjectProperties) {_        if (getObjectName() != null) {_            throw new IllegalArgumentException("Cannot set both objectName and objectProperties")__        }_        objectProperties = aObjectProperties__    };setter,for,the,object,properties,is,either,called,by,reflection,when,processing,the,uri,or,manually,by,the,component,p,if,the,uri,contained,a,value,with,a,reference,like,object,properties,my,hashtable,then,the,hashtable,will,be,set,in,place,p,if,there,are,extra,properties,that,begin,with,key,then,the,component,will,create,a,hashtable,with,these,values,after,removing,the,key,prefix;public,void,set,object,properties,hashtable,string,string,a,object,properties,if,get,object,name,null,throw,new,illegal,argument,exception,cannot,set,both,object,name,and,object,properties,object,properties,a,object,properties
JMXEndpoint -> public void setObjectProperties(Hashtable<String, String> aObjectProperties);1425144441;Setter for the ObjectProperties is either called by reflection when_processing the URI or manually by the component._<p/>_If the URI contained a value with a reference like "objectProperties=#myHashtable"_then the Hashtable will be set in place._<p/>_If there are extra properties that begin with "key." then the component will_create a Hashtable with these values after removing the "key." prefix.;public void setObjectProperties(Hashtable<String, String> aObjectProperties) {_        if (getObjectName() != null) {_            throw new IllegalArgumentException("Cannot set both objectName and objectProperties")__        }_        objectProperties = aObjectProperties__    };setter,for,the,object,properties,is,either,called,by,reflection,when,processing,the,uri,or,manually,by,the,component,p,if,the,uri,contained,a,value,with,a,reference,like,object,properties,my,hashtable,then,the,hashtable,will,be,set,in,place,p,if,there,are,extra,properties,that,begin,with,key,then,the,component,will,create,a,hashtable,with,these,values,after,removing,the,key,prefix;public,void,set,object,properties,hashtable,string,string,a,object,properties,if,get,object,name,null,throw,new,illegal,argument,exception,cannot,set,both,object,name,and,object,properties,object,properties,a,object,properties
JMXEndpoint -> public void setObjectProperties(Hashtable<String, String> aObjectProperties);1427402378;Setter for the ObjectProperties is either called by reflection when_processing the URI or manually by the component._<p/>_If the URI contained a value with a reference like "objectProperties=#myHashtable"_then the Hashtable will be set in place._<p/>_If there are extra properties that begin with "key." then the component will_create a Hashtable with these values after removing the "key." prefix.;public void setObjectProperties(Hashtable<String, String> aObjectProperties) {_        if (getObjectName() != null) {_            throw new IllegalArgumentException("Cannot set both objectName and objectProperties")__        }_        objectProperties = aObjectProperties__    };setter,for,the,object,properties,is,either,called,by,reflection,when,processing,the,uri,or,manually,by,the,component,p,if,the,uri,contained,a,value,with,a,reference,like,object,properties,my,hashtable,then,the,hashtable,will,be,set,in,place,p,if,there,are,extra,properties,that,begin,with,key,then,the,component,will,create,a,hashtable,with,these,values,after,removing,the,key,prefix;public,void,set,object,properties,hashtable,string,string,a,object,properties,if,get,object,name,null,throw,new,illegal,argument,exception,cannot,set,both,object,name,and,object,properties,object,properties,a,object,properties
JMXEndpoint -> public void setObjectProperties(Hashtable<String, String> aObjectProperties);1442846533;Setter for the ObjectProperties is either called by reflection when_processing the URI or manually by the component._<p/>_If the URI contained a value with a reference like "objectProperties=#myHashtable"_then the Hashtable will be set in place._<p/>_If there are extra properties that begin with "key." then the component will_create a Hashtable with these values after removing the "key." prefix.;public void setObjectProperties(Hashtable<String, String> aObjectProperties) {_        if (getObjectName() != null) {_            throw new IllegalArgumentException("Cannot set both objectName and objectProperties")__        }_        objectProperties = aObjectProperties__    };setter,for,the,object,properties,is,either,called,by,reflection,when,processing,the,uri,or,manually,by,the,component,p,if,the,uri,contained,a,value,with,a,reference,like,object,properties,my,hashtable,then,the,hashtable,will,be,set,in,place,p,if,there,are,extra,properties,that,begin,with,key,then,the,component,will,create,a,hashtable,with,these,values,after,removing,the,key,prefix;public,void,set,object,properties,hashtable,string,string,a,object,properties,if,get,object,name,null,throw,new,illegal,argument,exception,cannot,set,both,object,name,and,object,properties,object,properties,a,object,properties
JMXEndpoint -> public void setObjectProperties(Hashtable<String, String> aObjectProperties);1451237126;Setter for the ObjectProperties is either called by reflection when_processing the URI or manually by the component._<p/>_If the URI contained a value with a reference like "objectProperties=#myHashtable"_then the Hashtable will be set in place._<p/>_If there are extra properties that begin with "key." then the component will_create a Hashtable with these values after removing the "key." prefix.;public void setObjectProperties(Hashtable<String, String> aObjectProperties) {_        if (getObjectName() != null) {_            throw new IllegalArgumentException("Cannot set both objectName and objectProperties")__        }_        objectProperties = aObjectProperties__    };setter,for,the,object,properties,is,either,called,by,reflection,when,processing,the,uri,or,manually,by,the,component,p,if,the,uri,contained,a,value,with,a,reference,like,object,properties,my,hashtable,then,the,hashtable,will,be,set,in,place,p,if,there,are,extra,properties,that,begin,with,key,then,the,component,will,create,a,hashtable,with,these,values,after,removing,the,key,prefix;public,void,set,object,properties,hashtable,string,string,a,object,properties,if,get,object,name,null,throw,new,illegal,argument,exception,cannot,set,both,object,name,and,object,properties,object,properties,a,object,properties
JMXEndpoint -> public void setObjectProperties(Map<String, String> objectProperties);1452084517;Setter for the ObjectProperties is either called by reflection when_processing the URI or manually by the component._<p/>_If the URI contained a value with a reference like "objectProperties=#myHashtable"_then the Hashtable will be set in place._<p/>_If there are extra properties that begin with "key." then the component will_create a Hashtable with these values after removing the "key." prefix.;public void setObjectProperties(Map<String, String> objectProperties) {_        if (getObjectName() != null) {_            throw new IllegalArgumentException("Cannot set both objectName and objectProperties")__        }_        this.objectProperties = objectProperties__    };setter,for,the,object,properties,is,either,called,by,reflection,when,processing,the,uri,or,manually,by,the,component,p,if,the,uri,contained,a,value,with,a,reference,like,object,properties,my,hashtable,then,the,hashtable,will,be,set,in,place,p,if,there,are,extra,properties,that,begin,with,key,then,the,component,will,create,a,hashtable,with,these,values,after,removing,the,key,prefix;public,void,set,object,properties,map,string,string,object,properties,if,get,object,name,null,throw,new,illegal,argument,exception,cannot,set,both,object,name,and,object,properties,this,object,properties,object,properties
JMXEndpoint -> public void setObjectProperties(Map<String, String> objectProperties);1465649425;Setter for the ObjectProperties is either called by reflection when_processing the URI or manually by the component._<p/>_If the URI contained a value with a reference like "objectProperties=#myHashtable"_then the Hashtable will be set in place._<p/>_If there are extra properties that begin with "key." then the component will_create a Hashtable with these values after removing the "key." prefix.;public void setObjectProperties(Map<String, String> objectProperties) {_        if (getObjectName() != null) {_            throw new IllegalArgumentException("Cannot set both objectName and objectProperties")__        }_        this.objectProperties = objectProperties__    };setter,for,the,object,properties,is,either,called,by,reflection,when,processing,the,uri,or,manually,by,the,component,p,if,the,uri,contained,a,value,with,a,reference,like,object,properties,my,hashtable,then,the,hashtable,will,be,set,in,place,p,if,there,are,extra,properties,that,begin,with,key,then,the,component,will,create,a,hashtable,with,these,values,after,removing,the,key,prefix;public,void,set,object,properties,map,string,string,object,properties,if,get,object,name,null,throw,new,illegal,argument,exception,cannot,set,both,object,name,and,object,properties,this,object,properties,object,properties
JMXEndpoint -> public void setObjectProperties(Map<String, String> objectProperties);1485968451;Setter for the ObjectProperties is either called by reflection when_processing the URI or manually by the component._<p/>_If the URI contained a value with a reference like "objectProperties=#myHashtable"_then the Hashtable will be set in place._<p/>_If there are extra properties that begin with "key." then the component will_create a Hashtable with these values after removing the "key." prefix.;public void setObjectProperties(Map<String, String> objectProperties) {_        if (getObjectName() != null) {_            throw new IllegalArgumentException("Cannot set both objectName and objectProperties")__        }_        this.objectProperties = objectProperties__    };setter,for,the,object,properties,is,either,called,by,reflection,when,processing,the,uri,or,manually,by,the,component,p,if,the,uri,contained,a,value,with,a,reference,like,object,properties,my,hashtable,then,the,hashtable,will,be,set,in,place,p,if,there,are,extra,properties,that,begin,with,key,then,the,component,will,create,a,hashtable,with,these,values,after,removing,the,key,prefix;public,void,set,object,properties,map,string,string,object,properties,if,get,object,name,null,throw,new,illegal,argument,exception,cannot,set,both,object,name,and,object,properties,this,object,properties,object,properties
JMXEndpoint -> public void setObjectProperties(Map<String, String> objectProperties);1524001544;Setter for the ObjectProperties is either called by reflection when_processing the URI or manually by the component._<p/>_If the URI contained a value with a reference like "objectProperties=#myHashtable"_then the Hashtable will be set in place._<p/>_If there are extra properties that begin with "key." then the component will_create a Hashtable with these values after removing the "key." prefix.;public void setObjectProperties(Map<String, String> objectProperties) {_        if (getObjectName() != null) {_            throw new IllegalArgumentException("Cannot set both objectName and objectProperties")__        }_        this.objectProperties = objectProperties__    };setter,for,the,object,properties,is,either,called,by,reflection,when,processing,the,uri,or,manually,by,the,component,p,if,the,uri,contained,a,value,with,a,reference,like,object,properties,my,hashtable,then,the,hashtable,will,be,set,in,place,p,if,there,are,extra,properties,that,begin,with,key,then,the,component,will,create,a,hashtable,with,these,values,after,removing,the,key,prefix;public,void,set,object,properties,map,string,string,object,properties,if,get,object,name,null,throw,new,illegal,argument,exception,cannot,set,both,object,name,and,object,properties,this,object,properties,object,properties
JMXEndpoint -> public void setObjectProperties(Map<String, String> objectProperties);1531293869;Setter for the ObjectProperties is either called by reflection when_processing the URI or manually by the component._<p/>_If the URI contained a value with a reference like "objectProperties=#myHashtable"_then the Hashtable will be set in place._<p/>_If there are extra properties that begin with "key." then the component will_create a Hashtable with these values after removing the "key." prefix.;public void setObjectProperties(Map<String, String> objectProperties) {_        if (getObjectName() != null) {_            throw new IllegalArgumentException("Cannot set both objectName and objectProperties")__        }_        this.objectProperties = objectProperties__    };setter,for,the,object,properties,is,either,called,by,reflection,when,processing,the,uri,or,manually,by,the,component,p,if,the,uri,contained,a,value,with,a,reference,like,object,properties,my,hashtable,then,the,hashtable,will,be,set,in,place,p,if,there,are,extra,properties,that,begin,with,key,then,the,component,will,create,a,hashtable,with,these,values,after,removing,the,key,prefix;public,void,set,object,properties,map,string,string,object,properties,if,get,object,name,null,throw,new,illegal,argument,exception,cannot,set,both,object,name,and,object,properties,this,object,properties,object,properties
JMXEndpoint -> public void setObjectProperties(Map<String, String> objectProperties);1531294222;Setter for the ObjectProperties is either called by reflection when_processing the URI or manually by the component._<p/>_If the URI contained a value with a reference like "objectProperties=#myHashtable"_then the Hashtable will be set in place._<p/>_If there are extra properties that begin with "key." then the component will_create a Hashtable with these values after removing the "key." prefix.;public void setObjectProperties(Map<String, String> objectProperties) {_        if (getObjectName() != null) {_            throw new IllegalArgumentException("Cannot set both objectName and objectProperties")__        }_        this.objectProperties = objectProperties__    };setter,for,the,object,properties,is,either,called,by,reflection,when,processing,the,uri,or,manually,by,the,component,p,if,the,uri,contained,a,value,with,a,reference,like,object,properties,my,hashtable,then,the,hashtable,will,be,set,in,place,p,if,there,are,extra,properties,that,begin,with,key,then,the,component,will,create,a,hashtable,with,these,values,after,removing,the,key,prefix;public,void,set,object,properties,map,string,string,object,properties,if,get,object,name,null,throw,new,illegal,argument,exception,cannot,set,both,object,name,and,object,properties,this,object,properties,object,properties
JMXEndpoint -> public void setObjectProperties(Map<String, String> objectProperties);1531294561;Setter for the ObjectProperties is either called by reflection when_processing the URI or manually by the component._<p/>_If the URI contained a value with a reference like "objectProperties=#myHashtable"_then the Hashtable will be set in place._<p/>_If there are extra properties that begin with "key." then the component will_create a Hashtable with these values after removing the "key." prefix.;public void setObjectProperties(Map<String, String> objectProperties) {_        if (getObjectName() != null) {_            throw new IllegalArgumentException("Cannot set both objectName and objectProperties")__        }_        this.objectProperties = objectProperties__    };setter,for,the,object,properties,is,either,called,by,reflection,when,processing,the,uri,or,manually,by,the,component,p,if,the,uri,contained,a,value,with,a,reference,like,object,properties,my,hashtable,then,the,hashtable,will,be,set,in,place,p,if,there,are,extra,properties,that,begin,with,key,then,the,component,will,create,a,hashtable,with,these,values,after,removing,the,key,prefix;public,void,set,object,properties,map,string,string,object,properties,if,get,object,name,null,throw,new,illegal,argument,exception,cannot,set,both,object,name,and,object,properties,this,object,properties,object,properties
JMXEndpoint -> public void setObjectProperties(Map<String, String> objectProperties);1531381050;Setter for the ObjectProperties is either called by reflection when_processing the URI or manually by the component._<p/>_If the URI contained a value with a reference like "objectProperties=#myHashtable"_then the Hashtable will be set in place._<p/>_If there are extra properties that begin with "key." then the component will_create a Hashtable with these values after removing the "key." prefix.;public void setObjectProperties(Map<String, String> objectProperties) {_        if (getObjectName() != null) {_            throw new IllegalArgumentException("Cannot set both objectName and objectProperties")__        }_        this.objectProperties = objectProperties__    };setter,for,the,object,properties,is,either,called,by,reflection,when,processing,the,uri,or,manually,by,the,component,p,if,the,uri,contained,a,value,with,a,reference,like,object,properties,my,hashtable,then,the,hashtable,will,be,set,in,place,p,if,there,are,extra,properties,that,begin,with,key,then,the,component,will,create,a,hashtable,with,these,values,after,removing,the,key,prefix;public,void,set,object,properties,map,string,string,object,properties,if,get,object,name,null,throw,new,illegal,argument,exception,cannot,set,both,object,name,and,object,properties,this,object,properties,object,properties
JMXEndpoint -> public void setObjectProperties(Map<String, String> objectProperties);1531381050;Setter for the ObjectProperties is either called by reflection when_processing the URI or manually by the component._<p/>_If the URI contained a value with a reference like "objectProperties=#myHashtable"_then the Hashtable will be set in place._<p/>_If there are extra properties that begin with "key." then the component will_create a Hashtable with these values after removing the "key." prefix.;public void setObjectProperties(Map<String, String> objectProperties) {_        if (getObjectName() != null) {_            throw new IllegalArgumentException("Cannot set both objectName and objectProperties")__        }_        this.objectProperties = objectProperties__    };setter,for,the,object,properties,is,either,called,by,reflection,when,processing,the,uri,or,manually,by,the,component,p,if,the,uri,contained,a,value,with,a,reference,like,object,properties,my,hashtable,then,the,hashtable,will,be,set,in,place,p,if,there,are,extra,properties,that,begin,with,key,then,the,component,will,create,a,hashtable,with,these,values,after,removing,the,key,prefix;public,void,set,object,properties,map,string,string,object,properties,if,get,object,name,null,throw,new,illegal,argument,exception,cannot,set,both,object,name,and,object,properties,this,object,properties,object,properties
JMXEndpoint -> public void setObjectProperties(Map<String, String> objectProperties);1540108163;Setter for the ObjectProperties is either called by reflection when_processing the URI or manually by the component._<p/>_If the URI contained a value with a reference like "objectProperties=#myHashtable"_then the Hashtable will be set in place._<p/>_If there are extra properties that begin with "key." then the component will_create a Hashtable with these values after removing the "key." prefix.;public void setObjectProperties(Map<String, String> objectProperties) {_        if (getObjectName() != null) {_            throw new IllegalArgumentException("Cannot set both objectName and objectProperties")__        }_        this.objectProperties = objectProperties__    };setter,for,the,object,properties,is,either,called,by,reflection,when,processing,the,uri,or,manually,by,the,component,p,if,the,uri,contained,a,value,with,a,reference,like,object,properties,my,hashtable,then,the,hashtable,will,be,set,in,place,p,if,there,are,extra,properties,that,begin,with,key,then,the,component,will,create,a,hashtable,with,these,values,after,removing,the,key,prefix;public,void,set,object,properties,map,string,string,object,properties,if,get,object,name,null,throw,new,illegal,argument,exception,cannot,set,both,object,name,and,object,properties,this,object,properties,object,properties
JMXEndpoint -> public void setObjectProperties(Map<String, String> objectProperties);1547240981;Setter for the ObjectProperties is either called by reflection when_processing the URI or manually by the component._<p/>_If the URI contained a value with a reference like "objectProperties=#myHashtable"_then the Hashtable will be set in place._<p/>_If there are extra properties that begin with "key." then the component will_create a Hashtable with these values after removing the "key." prefix.;public void setObjectProperties(Map<String, String> objectProperties) {_        if (getObjectName() != null) {_            throw new IllegalArgumentException("Cannot set both objectName and objectProperties")__        }_        this.objectProperties = objectProperties__    };setter,for,the,object,properties,is,either,called,by,reflection,when,processing,the,uri,or,manually,by,the,component,p,if,the,uri,contained,a,value,with,a,reference,like,object,properties,my,hashtable,then,the,hashtable,will,be,set,in,place,p,if,there,are,extra,properties,that,begin,with,key,then,the,component,will,create,a,hashtable,with,these,values,after,removing,the,key,prefix;public,void,set,object,properties,map,string,string,object,properties,if,get,object,name,null,throw,new,illegal,argument,exception,cannot,set,both,object,name,and,object,properties,this,object,properties,object,properties
JMXEndpoint -> public void setObjectProperties(Map<String, String> objectProperties);1547480087;Setter for the ObjectProperties is either called by reflection when_processing the URI or manually by the component._<p/>_If the URI contained a value with a reference like "objectProperties=#myHashtable"_then the Hashtable will be set in place._<p/>_If there are extra properties that begin with "key." then the component will_create a Hashtable with these values after removing the "key." prefix.;public void setObjectProperties(Map<String, String> objectProperties) {_        if (getObjectName() != null) {_            throw new IllegalArgumentException("Cannot set both objectName and objectProperties")__        }_        this.objectProperties = objectProperties__    };setter,for,the,object,properties,is,either,called,by,reflection,when,processing,the,uri,or,manually,by,the,component,p,if,the,uri,contained,a,value,with,a,reference,like,object,properties,my,hashtable,then,the,hashtable,will,be,set,in,place,p,if,there,are,extra,properties,that,begin,with,key,then,the,component,will,create,a,hashtable,with,these,values,after,removing,the,key,prefix;public,void,set,object,properties,map,string,string,object,properties,if,get,object,name,null,throw,new,illegal,argument,exception,cannot,set,both,object,name,and,object,properties,this,object,properties,object,properties
JMXEndpoint -> public void setObjectProperties(Map<String, String> objectProperties);1548066972;Setter for the ObjectProperties is either called by reflection when_processing the URI or manually by the component._<p/>_If the URI contained a value with a reference like "objectProperties=#myHashtable"_then the Hashtable will be set in place._<p/>_If there are extra properties that begin with "key." then the component will_create a Hashtable with these values after removing the "key." prefix.;public void setObjectProperties(Map<String, String> objectProperties) {_        if (getObjectName() != null) {_            throw new IllegalArgumentException("Cannot set both objectName and objectProperties")__        }_        this.objectProperties = objectProperties__    };setter,for,the,object,properties,is,either,called,by,reflection,when,processing,the,uri,or,manually,by,the,component,p,if,the,uri,contained,a,value,with,a,reference,like,object,properties,my,hashtable,then,the,hashtable,will,be,set,in,place,p,if,there,are,extra,properties,that,begin,with,key,then,the,component,will,create,a,hashtable,with,these,values,after,removing,the,key,prefix;public,void,set,object,properties,map,string,string,object,properties,if,get,object,name,null,throw,new,illegal,argument,exception,cannot,set,both,object,name,and,object,properties,this,object,properties,object,properties
