# id;timestamp;commentText;codeText;commentWords;codeWords
JMXUriBuilder -> public JMXUriBuilder withObjectProperties(Map<String, String> aPropertiesSansKeyPrefix);1288942801;Converts all of the values to params with the "key." prefix so the_component will pick up on them and set them on the endpoint. Alternatively,_you can pass in a reference to a Hashtable using the version of this_method that takes a single string.;public JMXUriBuilder withObjectProperties(Map<String, String> aPropertiesSansKeyPrefix) {_        for (Entry<String, String> entry : aPropertiesSansKeyPrefix.entrySet()) {_            addProperty("key." + entry.getKey(), entry.getValue())__        }_        return this__    };converts,all,of,the,values,to,params,with,the,key,prefix,so,the,component,will,pick,up,on,them,and,set,them,on,the,endpoint,alternatively,you,can,pass,in,a,reference,to,a,hashtable,using,the,version,of,this,method,that,takes,a,single,string;public,jmxuri,builder,with,object,properties,map,string,string,a,properties,sans,key,prefix,for,entry,string,string,entry,a,properties,sans,key,prefix,entry,set,add,property,key,entry,get,key,entry,get,value,return,this
JMXUriBuilder -> public JMXUriBuilder withObjectProperties(Map<String, String> aPropertiesSansKeyPrefix);1305835015;Converts all of the values to params with the "key." prefix so the_component will pick up on them and set them on the endpoint. Alternatively,_you can pass in a reference to a Hashtable using the version of this_method that takes a single string.;public JMXUriBuilder withObjectProperties(Map<String, String> aPropertiesSansKeyPrefix) {_        for (Entry<String, String> entry : aPropertiesSansKeyPrefix.entrySet()) {_            addProperty("key." + entry.getKey(), entry.getValue())__        }_        return this__    };converts,all,of,the,values,to,params,with,the,key,prefix,so,the,component,will,pick,up,on,them,and,set,them,on,the,endpoint,alternatively,you,can,pass,in,a,reference,to,a,hashtable,using,the,version,of,this,method,that,takes,a,single,string;public,jmxuri,builder,with,object,properties,map,string,string,a,properties,sans,key,prefix,for,entry,string,string,entry,a,properties,sans,key,prefix,entry,set,add,property,key,entry,get,key,entry,get,value,return,this
JMXUriBuilder -> public JMXUriBuilder withObjectProperties(Map<String, String> aPropertiesSansKeyPrefix);1347621219;Converts all of the values to params with the "key." prefix so the_component will pick up on them and set them on the endpoint. Alternatively,_you can pass in a reference to a Hashtable using the version of this_method that takes a single string.;public JMXUriBuilder withObjectProperties(Map<String, String> aPropertiesSansKeyPrefix) {_        for (Entry<String, String> entry : aPropertiesSansKeyPrefix.entrySet()) {_            addProperty("key." + entry.getKey(), entry.getValue())__        }_        return this__    };converts,all,of,the,values,to,params,with,the,key,prefix,so,the,component,will,pick,up,on,them,and,set,them,on,the,endpoint,alternatively,you,can,pass,in,a,reference,to,a,hashtable,using,the,version,of,this,method,that,takes,a,single,string;public,jmxuri,builder,with,object,properties,map,string,string,a,properties,sans,key,prefix,for,entry,string,string,entry,a,properties,sans,key,prefix,entry,set,add,property,key,entry,get,key,entry,get,value,return,this
JMXUriBuilder -> public JMXUriBuilder withObjectProperties(Map<String, String> aPropertiesSansKeyPrefix);1524001544;Converts all of the values to params with the "key." prefix so the_component will pick up on them and set them on the endpoint. Alternatively,_you can pass in a reference to a Hashtable using the version of this_method that takes a single string.;public JMXUriBuilder withObjectProperties(Map<String, String> aPropertiesSansKeyPrefix) {_        for (Entry<String, String> entry : aPropertiesSansKeyPrefix.entrySet()) {_            addProperty("key." + entry.getKey(), entry.getValue())__        }_        return this__    };converts,all,of,the,values,to,params,with,the,key,prefix,so,the,component,will,pick,up,on,them,and,set,them,on,the,endpoint,alternatively,you,can,pass,in,a,reference,to,a,hashtable,using,the,version,of,this,method,that,takes,a,single,string;public,jmxuri,builder,with,object,properties,map,string,string,a,properties,sans,key,prefix,for,entry,string,string,entry,a,properties,sans,key,prefix,entry,set,add,property,key,entry,get,key,entry,get,value,return,this
JMXUriBuilder -> public JMXUriBuilder withObjectPropertiesReference(String aReferenceToHashtable);1288942801;Your value should start with a hash mark since it's a reference to a value._This method will add the hash mark if it's not present.;public JMXUriBuilder withObjectPropertiesReference(String aReferenceToHashtable) {_        if (aReferenceToHashtable.startsWith("#")) {_            addProperty("objectProperties", aReferenceToHashtable)__        } else {_            addProperty("objectProperties", "#" + aReferenceToHashtable)__        }_        return this__    };your,value,should,start,with,a,hash,mark,since,it,s,a,reference,to,a,value,this,method,will,add,the,hash,mark,if,it,s,not,present;public,jmxuri,builder,with,object,properties,reference,string,a,reference,to,hashtable,if,a,reference,to,hashtable,starts,with,add,property,object,properties,a,reference,to,hashtable,else,add,property,object,properties,a,reference,to,hashtable,return,this
JMXUriBuilder -> public JMXUriBuilder withObjectPropertiesReference(String aReferenceToHashtable);1305835015;Your value should start with a hash mark since it's a reference to a value._This method will add the hash mark if it's not present.;public JMXUriBuilder withObjectPropertiesReference(String aReferenceToHashtable) {_        if (aReferenceToHashtable.startsWith("#")) {_            addProperty("objectProperties", aReferenceToHashtable)__        } else {_            addProperty("objectProperties", "#" + aReferenceToHashtable)__        }_        return this__    };your,value,should,start,with,a,hash,mark,since,it,s,a,reference,to,a,value,this,method,will,add,the,hash,mark,if,it,s,not,present;public,jmxuri,builder,with,object,properties,reference,string,a,reference,to,hashtable,if,a,reference,to,hashtable,starts,with,add,property,object,properties,a,reference,to,hashtable,else,add,property,object,properties,a,reference,to,hashtable,return,this
JMXUriBuilder -> public JMXUriBuilder withObjectPropertiesReference(String aReferenceToHashtable);1347621219;Your value should start with a hash mark since it's a reference to a value._This method will add the hash mark if it's not present.;public JMXUriBuilder withObjectPropertiesReference(String aReferenceToHashtable) {_        if (aReferenceToHashtable.startsWith("#")) {_            addProperty("objectProperties", aReferenceToHashtable)__        } else {_            addProperty("objectProperties", "#" + aReferenceToHashtable)__        }_        return this__    };your,value,should,start,with,a,hash,mark,since,it,s,a,reference,to,a,value,this,method,will,add,the,hash,mark,if,it,s,not,present;public,jmxuri,builder,with,object,properties,reference,string,a,reference,to,hashtable,if,a,reference,to,hashtable,starts,with,add,property,object,properties,a,reference,to,hashtable,else,add,property,object,properties,a,reference,to,hashtable,return,this
JMXUriBuilder -> public JMXUriBuilder withObjectPropertiesReference(String aReferenceToHashtable);1524001544;Your value should start with a hash mark since it's a reference to a value._This method will add the hash mark if it's not present.;public JMXUriBuilder withObjectPropertiesReference(String aReferenceToHashtable) {_        if (aReferenceToHashtable.startsWith("#")) {_            addProperty("objectProperties", aReferenceToHashtable)__        } else {_            addProperty("objectProperties", "#" + aReferenceToHashtable)__        }_        return this__    };your,value,should,start,with,a,hash,mark,since,it,s,a,reference,to,a,value,this,method,will,add,the,hash,mark,if,it,s,not,present;public,jmxuri,builder,with,object,properties,reference,string,a,reference,to,hashtable,if,a,reference,to,hashtable,starts,with,add,property,object,properties,a,reference,to,hashtable,else,add,property,object,properties,a,reference,to,hashtable,return,this
