commented;modifiers;parameterAmount;loc;comment;code
false;public;0;30;;@Test public void testRestPathMatcher() throws Exception {     assertTrue(matcher.matchRestPath("/foo/", "/foo/", true)).     assertTrue(matcher.matchRestPath("/foo/", "foo/", true)).     assertTrue(matcher.matchRestPath("/foo/", "foo", true)).     assertTrue(matcher.matchRestPath("foo/", "foo", true)).     assertTrue(matcher.matchRestPath("foo", "foo", true)).     assertTrue(matcher.matchRestPath("foo/", "foo", true)).     assertTrue(matcher.matchRestPath("/foo/", "foo", true)).     assertTrue(matcher.matchRestPath("/foo/1234/list/2014", "/foo/1234/list/2014", true)).     assertTrue(matcher.matchRestPath("/foo/1234/list/2014/", "/foo/1234/list/2014", true)).     assertTrue(matcher.matchRestPath("/foo/1234/list/2014", "/foo/1234/list/2014/", true)).     assertTrue(matcher.matchRestPath("/foo/1234/list/2014/", "/foo/1234/list/2014/", true)).     assertTrue(matcher.matchRestPath("/foo/1234/list/2014", "/foo/{user}/list/{year}", true)).     assertFalse(matcher.matchRestPath("/foo/", "/bar/", true)).     assertFalse(matcher.matchRestPath("/foo/1234/list/2014", "/foo/1234/list/2015", true)).     assertFalse(matcher.matchRestPath("/foo/1234/list/2014/", "/foo/1234/list/2015", true)).     assertFalse(matcher.matchRestPath("/foo/1234/list/2014", "/foo/1234/list/2015/", true)).     assertFalse(matcher.matchRestPath("/foo/1234/list/2014/", "/foo/1234/list/2015/", true)).     assertFalse(matcher.matchRestPath("/foo/1234/list/2014", "/foo/{user}/list/", true)).     assertTrue(matcher.matchRestPath("/foo/1/list/2", "/foo/{user}/list/{year}", true)).     assertTrue(matcher.matchRestPath("/foo/1234567890/list/2", "/foo/{user}/list/{year}", true)).     assertTrue(matcher.matchRestPath("/foo/1234567890/list/1234567890", "/foo/{user}/list/{year}", true)).     assertTrue(matcher.matchRestPath("/123/list/2014", "/{user}/list/{year}", true)).     assertTrue(matcher.matchRestPath("/1234567890/list/2014", "/{user}/list/{year}", true)). }
false;public;0;30;;@Test public void testRestPathMatcherNoWildcard() throws Exception {     assertTrue(matcher.matchRestPath("/foo/", "/foo/", false)).     assertTrue(matcher.matchRestPath("/foo/", "foo/", false)).     assertTrue(matcher.matchRestPath("/foo/", "foo", false)).     assertTrue(matcher.matchRestPath("foo/", "foo", false)).     assertTrue(matcher.matchRestPath("foo", "foo", false)).     assertTrue(matcher.matchRestPath("foo/", "foo", false)).     assertTrue(matcher.matchRestPath("/foo/", "foo", false)).     assertTrue(matcher.matchRestPath("/foo/1234/list/2014", "/foo/1234/list/2014", false)).     assertTrue(matcher.matchRestPath("/foo/1234/list/2014/", "/foo/1234/list/2014", false)).     assertTrue(matcher.matchRestPath("/foo/1234/list/2014", "/foo/1234/list/2014/", false)).     assertTrue(matcher.matchRestPath("/foo/1234/list/2014/", "/foo/1234/list/2014/", false)).     assertTrue(matcher.matchRestPath("/foo/1234/list/2014", "/foo/{user}/list/{year}", true)).     assertFalse(matcher.matchRestPath("/foo/", "/bar/", false)).     assertFalse(matcher.matchRestPath("/foo/1234/list/2014", "/foo/1234/list/2015", false)).     assertFalse(matcher.matchRestPath("/foo/1234/list/2014/", "/foo/1234/list/2015", false)).     assertFalse(matcher.matchRestPath("/foo/1234/list/2014", "/foo/1234/list/2015/", false)).     assertFalse(matcher.matchRestPath("/foo/1234/list/2014/", "/foo/1234/list/2015/", false)).     assertFalse(matcher.matchRestPath("/foo/1234/list/2014", "/foo/{user}/list/", false)).     assertFalse(matcher.matchRestPath("/foo/1/list/2", "/foo/{user}/list/{year}", false)).     assertFalse(matcher.matchRestPath("/foo/1234567890/list/2", "/foo/{user}/list/{year}", false)).     assertFalse(matcher.matchRestPath("/foo/1234567890/list/1234567890", "/foo/{user}/list/{year}", false)).     assertFalse(matcher.matchRestPath("/123/list/2014", "/{user}/list/{year}", false)).     assertFalse(matcher.matchRestPath("/1234567890/list/2014", "/{user}/list/{year}", false)). }
