commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public Integer getPort() {     return port. }
false;public;1;4;;@Resource(name = "dynaPort") public void setPort(Integer port) {     this.port = port. }
false;public,static;0;7;;@BeforeClass public static void setUpJaas() throws Exception {     // ensure jsse clients can validate the self signed dummy localhost cert,     // use the server keystore as the trust store for these tests     URL trustStoreUrl = NettyHttpSSLTest.class.getClassLoader().getResource("jsse/localhost.ks").     System.setProperty("javax.net.ssl.trustStore", trustStoreUrl.toURI().getPath()). }
false;public,static;0;4;;@AfterClass public static void tearDownJaas() throws Exception {     System.clearProperty("java.security.auth.login.config"). }
false;public;0;9;;@Test public void testSSLInOutWithNettyConsumer() throws Exception {     mockEndpoint.expectedBodiesReceived("Hello World").     String out = template.requestBody("https://localhost:" + getPort(), "Hello World", String.class).     assertEquals("Bye World", out).     mockEndpoint.assertIsSatisfied(). }
