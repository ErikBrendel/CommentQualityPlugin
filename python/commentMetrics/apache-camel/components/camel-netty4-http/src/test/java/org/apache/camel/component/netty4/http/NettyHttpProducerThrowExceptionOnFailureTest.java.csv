commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testFailWithoutException() throws Exception {     try {         String out = template().requestBody("netty4-http:http://localhost:{{port}}/fail?throwExceptionOnFailure=false", null, String.class).         assertEquals("Fail", out).     } catch (Throwable t) {         t.printStackTrace().         fail("Should not throw an exception").     } }
false;public;0;10;;@Test public void testFailWithException() throws Exception {     try {         template().requestBody("netty4-http:http://localhost:{{port}}/fail?throwExceptionOnFailure=true", null, String.class).         fail("Should throw an exception").     } catch (Throwable t) {         NettyHttpOperationFailedException cause = (NettyHttpOperationFailedException) t.getCause().         assertEquals(404, cause.getStatusCode()).     } }
false;public;0;6;;@Override public void configure() throws Exception {     from("netty4-http:http://localhost:{{port}}/fail").setHeader(Exchange.HTTP_RESPONSE_CODE).constant(404).transform(constant("Fail")). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("netty4-http:http://localhost:{{port}}/fail").setHeader(Exchange.HTTP_RESPONSE_CODE).constant(404).transform(constant("Fail")).         }     }. }
