commented;modifiers;parameterAmount;loc;comment;code
false;public;0;35;;@Test public void testTwoRoutes() throws Exception {     getMockEndpoint("mock:foo").expectedBodiesReceived("Hello World").     getMockEndpoint("mock:bar").expectedBodiesReceived("Hello Camel").     String out = template.requestBody("netty4-http:http://localhost:{{port}}/foo", "Hello World", String.class).     assertEquals("Bye World", out).     out = template.requestBody("netty4-http:http://localhost:{{port}}/bar", "Hello Camel", String.class).     assertEquals("Bye Camel", out).     assertMockEndpointsSatisfied().     // stop foo route     context.getRouteController().stopRoute("foo").     resetMocks().     getMockEndpoint("mock:foo").expectedMessageCount(0).     getMockEndpoint("mock:bar").expectedBodiesReceived("Hello Camel").     // the foo route is stopped so this service is no longer there     try {         template.requestBody("netty4-http:http://localhost:{{port}}/foo", "Hello World", String.class).         fail("Should have thrown exception").     } catch (CamelExecutionException e) {         NettyHttpOperationFailedException cause = assertIsInstanceOf(NettyHttpOperationFailedException.class, e.getCause()).         assertEquals(404, cause.getStatusCode()).     }     out = template.requestBody("netty4-http:http://localhost:{{port}}/bar", "Hello Camel", String.class).     assertEquals("Bye Camel", out).     assertMockEndpointsSatisfied(). }
false;public;0;10;;@Override public void configure() throws Exception {     from("netty4-http:http://0.0.0.0:{{port}}/foo").routeId("foo").to("mock:foo").transform().constant("Bye World").     from("netty4-http:http://0.0.0.0:{{port}}/bar").routeId("bar").to("mock:bar").transform().constant("Bye Camel"). }
false;protected;0;15;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("netty4-http:http://0.0.0.0:{{port}}/foo").routeId("foo").to("mock:foo").transform().constant("Bye World").             from("netty4-http:http://0.0.0.0:{{port}}/bar").routeId("bar").to("mock:bar").transform().constant("Bye Camel").         }     }. }
