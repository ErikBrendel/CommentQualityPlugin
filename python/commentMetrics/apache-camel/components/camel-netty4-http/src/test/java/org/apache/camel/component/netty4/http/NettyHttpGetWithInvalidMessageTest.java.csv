commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;23;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry registry = super.createRegistry().     // setup the String encoder and decoder     StringDecoder stringDecoder = new StringDecoder().     registry.bind("string-decoder", stringDecoder).     StringEncoder stringEncoder = new StringEncoder().     registry.bind("string-encoder", stringEncoder).     List<ChannelHandler> decoders = new ArrayList<>().     decoders.add(stringDecoder).     List<ChannelHandler> encoders = new ArrayList<>().     encoders.add(stringEncoder).     registry.bind("encoders", encoders).     registry.bind("decoders", decoders).     return registry. }
false;public;0;4;;@Test public void testNettyHttpServer() throws Exception {     invokeService(8100). }
true;public;0;3;// @Test ;// @Test public void testJettyHttpServer() throws Exception {     invokeService(port1). }
false;public;1;4;;@Override public void process(Exchange exchange) throws Exception {     exchange.getIn().setBody(REQUEST_STRING). }
false;private;1;14;;private void invokeService(int port) {     Exchange out = template.request("netty4:tcp://localhost:" + port + "?encoders=#encoders&decoders=#decoders&sync=true", new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             exchange.getIn().setBody(REQUEST_STRING).         }     }).     assertNotNull(out).     String result = out.getOut().getBody(String.class).     assertNotNull(result).     assertTrue("We should get the 404 response.", result.indexOf("404 Not Found") > 0). }
false;public;0;9;;@Override public void configure() throws Exception {     port1 = AvailablePortFinder.getNextAvailable(8100).     // set up a netty http proxy     from("netty4-http:http://localhost:" + port1 + "/test").transform().simple("Bye ${header.user}."). }
false;protected;0;14;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             port1 = AvailablePortFinder.getNextAvailable(8100).             // set up a netty http proxy             from("netty4-http:http://localhost:" + port1 + "/test").transform().simple("Bye ${header.user}.").         }     }. }
