commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isUseRouteBuilder() {     return false. }
false;public;0;11;;@Override public void configure() throws Exception {     from("netty4-http:http://0.0.0.0:{{port}}/foo?option.child.keepAlive=false").to("mock:foo").transform().constant("Bye World").     // we cannot have a 2nd route on same port with different option that the 1st route     from("netty4-http:http://0.0.0.0:{{port}}/bar?option.child.keepAlive=true").to("mock:bar").transform().constant("Bye Camel"). }
false;public;0;22;;@Test public void testTwoRoutes() throws Exception {     context.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("netty4-http:http://0.0.0.0:{{port}}/foo?option.child.keepAlive=false").to("mock:foo").transform().constant("Bye World").             // we cannot have a 2nd route on same port with different option that the 1st route             from("netty4-http:http://0.0.0.0:{{port}}/bar?option.child.keepAlive=true").to("mock:bar").transform().constant("Bye Camel").         }     }).     try {         context.start().         fail("Should have thrown exception").     } catch (IllegalArgumentException e) {         assertTrue(e.getMessage().startsWith("Bootstrap configuration must be identical when adding additional consumer")).     } }
