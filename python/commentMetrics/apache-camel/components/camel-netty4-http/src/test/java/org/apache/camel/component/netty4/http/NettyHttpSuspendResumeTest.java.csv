commented;modifiers;parameterAmount;loc;comment;code
false;public;0;35;;@Test public void testNettySuspendResume() throws Exception {     // these tests does not run well on Windows     if (isPlatform("windows")) {         return.     }     context.getShutdownStrategy().setTimeout(50).     String reply = template.requestBody(serverUri, "World", String.class).     assertEquals("Bye World", reply).     // now suspend netty     NettyHttpConsumer consumer = (NettyHttpConsumer) context.getRoute("foo").getConsumer().     assertNotNull(consumer).     // suspend     consumer.suspend().     try {         template.requestBody(serverUri, "Moon", String.class).         fail("Should throw exception").     } catch (Exception e) {         assertTrue(e.getCause().getMessage().startsWith("Cannot connect to localhost")).     }     // resume     consumer.resume().     Thread.sleep(2000).     // and send request which should be processed     reply = template.requestBody(serverUri, "Moon", String.class).     assertEquals("Bye Moon", reply). }
false;public;0;5;;@Override public void configure() throws Exception {     from(serverUri).routeId("foo").transform(body().prepend("Bye ")). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from(serverUri).routeId("foo").transform(body().prepend("Bye ")).         }     }. }
