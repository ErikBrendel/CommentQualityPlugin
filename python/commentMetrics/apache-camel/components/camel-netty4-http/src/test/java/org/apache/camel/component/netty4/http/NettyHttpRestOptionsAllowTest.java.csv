commented;modifiers;parameterAmount;loc;comment;code
false;public;1;5;;@Override public void process(Exchange exchange) throws Exception {     exchange.getIn().setHeader(Exchange.HTTP_METHOD, HttpMethods.OPTIONS).     exchange.getIn().setBody(""). }
false;public;0;16;;@Test public void shouldGetAllowMethods() throws Exception {     Exchange response = template.request("netty4-http:http://localhost:{{port}}/myapp", new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             exchange.getIn().setHeader(Exchange.HTTP_METHOD, HttpMethods.OPTIONS).             exchange.getIn().setBody("").         }     }).     String body = response.getOut().getBody(String.class).     String allowHeader = (String) response.getOut().getHeader("Allow").     int code = (int) response.getOut().getHeader(HTTP_RESPONSE_CODE).     assertEquals(ALLOW_METHODS, allowHeader).     assertEquals(200, code).     assertEquals("", body). }
false;public;0;4;;@Override public void configure() throws Exception {     from("netty4-http:http://0.0.0.0:{{port}}/myapp").setBody().constant("options"). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("netty4-http:http://0.0.0.0:{{port}}/myapp").setBody().constant("options").         }     }. }
