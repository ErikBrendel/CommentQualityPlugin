commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Override @Before public void setUp() throws Exception {     deleteDirectory("target/cachedir").     createDirectory("target/cachedir").     super.setUp(). }
false;public;0;14;;@Test public void testStreamCacheToFileShouldBeDeletedInCaseOfResponse() throws Exception {     NotifyBuilder builder = new NotifyBuilder(context).whenDone(1).create().     String out = template.requestBody("http://localhost:{{port}}/myserver", body, String.class).     assertEquals(body2, out).     assertTrue(builder.matches(5, TimeUnit.SECONDS)).     // the temporary files should have been deleted     File file = new File("target/cachedir").     String[] files = file.list().     assertEquals("There should be no files", 0, files.length). }
false;public;0;12;;@Override public void configure() throws Exception {     // enable stream caching and use a low threshold so its forced to write to file     context.getStreamCachingStrategy().setSpoolDirectory("target/cachedir").     context.getStreamCachingStrategy().setSpoolThreshold(16).     context.setStreamCaching(true).     from("netty4-http:http://localhost:{{port}}/myserver").transform().constant(new BufferedInputStream(new ByteArrayInputStream(body2.getBytes()))).to("log:reply"). }
false;protected;0;17;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // enable stream caching and use a low threshold so its forced to write to file             context.getStreamCachingStrategy().setSpoolDirectory("target/cachedir").             context.getStreamCachingStrategy().setSpoolThreshold(16).             context.setStreamCaching(true).             from("netty4-http:http://localhost:{{port}}/myserver").transform().constant(new BufferedInputStream(new ByteArrayInputStream(body2.getBytes()))).to("log:reply").         }     }. }
