commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testHttpProducerSendEmptyHeader() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(1).     mock.expectedHeaderReceived("foo", "").     template.sendBodyAndHeader("netty4-http:http://localhost:{{port}}/myapp/mytest", "Hello World", "foo", "").     assertMockEndpointsSatisfied(). }
false;public;0;6;;@Override public void configure() throws Exception {     from("netty4-http:http://localhost:{{port}}/myapp/mytest").convertBodyTo(String.class).to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("netty4-http:http://localhost:{{port}}/myapp/mytest").convertBodyTo(String.class).to("mock:result").         }     }. }
