commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;@Test public void testHttpHeaderMaxSizeOk() throws Exception {     HttpClient client = new HttpClient().     HttpMethod method = new PostMethod("http://localhost:" + getPort() + "/myapp/mytest").     method.setRequestHeader("name", "you").     client.executeMethod(method).     assertEquals(200, method.getStatusCode()).     assertEquals("Bye World", method.getResponseBodyAsString()). }
false;public;0;11;;@Test public void testHttpHeaderMaxSizeFail() throws Exception {     HttpClient client = new HttpClient().     HttpMethod method = new PostMethod("http://localhost:" + getPort() + "/myapp/mytest").     method.setRequestHeader("name", "12345678901234567890123456789012345678901234567890123456789012345678901234567890").     client.executeMethod(method).     assertEquals(400, method.getStatusCode()). }
false;public;0;4;;public void configure() throws Exception {     from("netty4-http:http://localhost:{{port}}/myapp/mytest?maxHeaderSize=100").transform().constant("Bye World"). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from("netty4-http:http://localhost:{{port}}/myapp/mytest?maxHeaderSize=100").transform().constant("Bye World").         }     }. }
