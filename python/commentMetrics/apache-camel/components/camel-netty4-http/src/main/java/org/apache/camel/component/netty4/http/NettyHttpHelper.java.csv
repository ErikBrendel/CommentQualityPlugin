# id;timestamp;commentText;codeText;commentWords;codeWords
NettyHttpHelper -> public static boolean isStatusCodeOk(int statusCode, String okStatusCodeRange);1439470590;Checks whether the given http status code is within the ok range__@param statusCode the status code_@param okStatusCodeRange the ok range (inclusive)_@return <tt>true</tt> if ok, <tt>false</tt> otherwise;public static boolean isStatusCodeOk(int statusCode, String okStatusCodeRange) {_        int from = Integer.valueOf(ObjectHelper.before(okStatusCodeRange, "-"))__        int to = Integer.valueOf(ObjectHelper.after(okStatusCodeRange, "-"))__        return statusCode >= from && statusCode <= to__    };checks,whether,the,given,http,status,code,is,within,the,ok,range,param,status,code,the,status,code,param,ok,status,code,range,the,ok,range,inclusive,return,tt,true,tt,if,ok,tt,false,tt,otherwise;public,static,boolean,is,status,code,ok,int,status,code,string,ok,status,code,range,int,from,integer,value,of,object,helper,before,ok,status,code,range,int,to,integer,value,of,object,helper,after,ok,status,code,range,return,status,code,from,status,code,to
NettyHttpHelper -> public static boolean isStatusCodeOk(int statusCode, String okStatusCodeRange);1440718658;Checks whether the given http status code is within the ok range__@param statusCode the status code_@param okStatusCodeRange the ok range (inclusive)_@return <tt>true</tt> if ok, <tt>false</tt> otherwise;public static boolean isStatusCodeOk(int statusCode, String okStatusCodeRange) {_        int from = Integer.valueOf(ObjectHelper.before(okStatusCodeRange, "-"))__        int to = Integer.valueOf(ObjectHelper.after(okStatusCodeRange, "-"))__        return statusCode >= from && statusCode <= to__    };checks,whether,the,given,http,status,code,is,within,the,ok,range,param,status,code,the,status,code,param,ok,status,code,range,the,ok,range,inclusive,return,tt,true,tt,if,ok,tt,false,tt,otherwise;public,static,boolean,is,status,code,ok,int,status,code,string,ok,status,code,range,int,from,integer,value,of,object,helper,before,ok,status,code,range,int,to,integer,value,of,object,helper,after,ok,status,code,range,return,status,code,from,status,code,to
NettyHttpHelper -> public static boolean isStatusCodeOk(int statusCode, String okStatusCodeRange);1456393004;Checks whether the given http status code is within the ok range__@param statusCode the status code_@param okStatusCodeRange the ok range (inclusive)_@return <tt>true</tt> if ok, <tt>false</tt> otherwise;public static boolean isStatusCodeOk(int statusCode, String okStatusCodeRange) {_        int from = Integer.valueOf(ObjectHelper.before(okStatusCodeRange, "-"))__        int to = Integer.valueOf(ObjectHelper.after(okStatusCodeRange, "-"))__        return statusCode >= from && statusCode <= to__    };checks,whether,the,given,http,status,code,is,within,the,ok,range,param,status,code,the,status,code,param,ok,status,code,range,the,ok,range,inclusive,return,tt,true,tt,if,ok,tt,false,tt,otherwise;public,static,boolean,is,status,code,ok,int,status,code,string,ok,status,code,range,int,from,integer,value,of,object,helper,before,ok,status,code,range,int,to,integer,value,of,object,helper,after,ok,status,code,range,return,status,code,from,status,code,to
NettyHttpHelper -> public static boolean isStatusCodeOk(int statusCode, String okStatusCodeRange);1465979012;Checks whether the given http status code is within the ok range__@param statusCode the status code_@param okStatusCodeRange the ok range (inclusive)_@return <tt>true</tt> if ok, <tt>false</tt> otherwise;public static boolean isStatusCodeOk(int statusCode, String okStatusCodeRange) {_        int from = Integer.valueOf(ObjectHelper.before(okStatusCodeRange, "-"))__        int to = Integer.valueOf(ObjectHelper.after(okStatusCodeRange, "-"))__        return statusCode >= from && statusCode <= to__    };checks,whether,the,given,http,status,code,is,within,the,ok,range,param,status,code,the,status,code,param,ok,status,code,range,the,ok,range,inclusive,return,tt,true,tt,if,ok,tt,false,tt,otherwise;public,static,boolean,is,status,code,ok,int,status,code,string,ok,status,code,range,int,from,integer,value,of,object,helper,before,ok,status,code,range,int,to,integer,value,of,object,helper,after,ok,status,code,range,return,status,code,from,status,code,to
NettyHttpHelper -> public static boolean isStatusCodeOk(int statusCode, String okStatusCodeRange);1472223211;Checks whether the given http status code is within the ok range__@param statusCode the status code_@param okStatusCodeRange the ok range (inclusive)_@return <tt>true</tt> if ok, <tt>false</tt> otherwise;public static boolean isStatusCodeOk(int statusCode, String okStatusCodeRange) {_        int from = Integer.valueOf(ObjectHelper.before(okStatusCodeRange, "-"))__        int to = Integer.valueOf(ObjectHelper.after(okStatusCodeRange, "-"))__        return statusCode >= from && statusCode <= to__    };checks,whether,the,given,http,status,code,is,within,the,ok,range,param,status,code,the,status,code,param,ok,status,code,range,the,ok,range,inclusive,return,tt,true,tt,if,ok,tt,false,tt,otherwise;public,static,boolean,is,status,code,ok,int,status,code,string,ok,status,code,range,int,from,integer,value,of,object,helper,before,ok,status,code,range,int,to,integer,value,of,object,helper,after,ok,status,code,range,return,status,code,from,status,code,to
NettyHttpHelper -> public static boolean isStatusCodeOk(int statusCode, String okStatusCodeRange);1495541549;Checks whether the given http status code is within the ok range__@param statusCode the status code_@param okStatusCodeRange the ok range (inclusive)_@return <tt>true</tt> if ok, <tt>false</tt> otherwise;public static boolean isStatusCodeOk(int statusCode, String okStatusCodeRange) {_        int from = Integer.valueOf(ObjectHelper.before(okStatusCodeRange, "-"))__        int to = Integer.valueOf(ObjectHelper.after(okStatusCodeRange, "-"))__        return statusCode >= from && statusCode <= to__    };checks,whether,the,given,http,status,code,is,within,the,ok,range,param,status,code,the,status,code,param,ok,status,code,range,the,ok,range,inclusive,return,tt,true,tt,if,ok,tt,false,tt,otherwise;public,static,boolean,is,status,code,ok,int,status,code,string,ok,status,code,range,int,from,integer,value,of,object,helper,before,ok,status,code,range,int,to,integer,value,of,object,helper,after,ok,status,code,range,return,status,code,from,status,code,to
NettyHttpHelper -> public static boolean isStatusCodeOk(int statusCode, String okStatusCodeRange);1513617645;Checks whether the given http status code is within the ok range__@param statusCode the status code_@param okStatusCodeRange the ok range (inclusive)_@return <tt>true</tt> if ok, <tt>false</tt> otherwise;public static boolean isStatusCodeOk(int statusCode, String okStatusCodeRange) {_        String[] ranges = okStatusCodeRange.split(",")__        for (String range : ranges) {_            boolean ok__            if (range.contains("-")) {_                int from = Integer.valueOf(StringHelper.before(range, "-"))__                int to = Integer.valueOf(StringHelper.after(range, "-"))__                ok =  statusCode >= from && statusCode <= to__            } else {_                int exact = Integer.valueOf(range)__                ok = exact == statusCode__            }_            if (ok) {_                return true__            }_        }_        return false__    };checks,whether,the,given,http,status,code,is,within,the,ok,range,param,status,code,the,status,code,param,ok,status,code,range,the,ok,range,inclusive,return,tt,true,tt,if,ok,tt,false,tt,otherwise;public,static,boolean,is,status,code,ok,int,status,code,string,ok,status,code,range,string,ranges,ok,status,code,range,split,for,string,range,ranges,boolean,ok,if,range,contains,int,from,integer,value,of,string,helper,before,range,int,to,integer,value,of,string,helper,after,range,ok,status,code,from,status,code,to,else,int,exact,integer,value,of,range,ok,exact,status,code,if,ok,return,true,return,false
NettyHttpHelper -> public static boolean isStatusCodeOk(int statusCode, String okStatusCodeRange);1524063141;Checks whether the given http status code is within the ok range__@param statusCode the status code_@param okStatusCodeRange the ok range (inclusive)_@return <tt>true</tt> if ok, <tt>false</tt> otherwise;public static boolean isStatusCodeOk(int statusCode, String okStatusCodeRange) {_        String[] ranges = okStatusCodeRange.split(",")__        for (String range : ranges) {_            boolean ok__            if (range.contains("-")) {_                int from = Integer.valueOf(StringHelper.before(range, "-"))__                int to = Integer.valueOf(StringHelper.after(range, "-"))__                ok =  statusCode >= from && statusCode <= to__            } else {_                int exact = Integer.valueOf(range)__                ok = exact == statusCode__            }_            if (ok) {_                return true__            }_        }_        return false__    };checks,whether,the,given,http,status,code,is,within,the,ok,range,param,status,code,the,status,code,param,ok,status,code,range,the,ok,range,inclusive,return,tt,true,tt,if,ok,tt,false,tt,otherwise;public,static,boolean,is,status,code,ok,int,status,code,string,ok,status,code,range,string,ranges,ok,status,code,range,split,for,string,range,ranges,boolean,ok,if,range,contains,int,from,integer,value,of,string,helper,before,range,int,to,integer,value,of,string,helper,after,range,ok,status,code,from,status,code,to,else,int,exact,integer,value,of,range,ok,exact,status,code,if,ok,return,true,return,false
NettyHttpHelper -> public static boolean isStatusCodeOk(int statusCode, String okStatusCodeRange);1535969486;Checks whether the given http status code is within the ok range__@param statusCode the status code_@param okStatusCodeRange the ok range (inclusive)_@return <tt>true</tt> if ok, <tt>false</tt> otherwise;public static boolean isStatusCodeOk(int statusCode, String okStatusCodeRange) {_        String[] ranges = okStatusCodeRange.split(",")__        for (String range : ranges) {_            boolean ok__            if (range.contains("-")) {_                int from = Integer.valueOf(StringHelper.before(range, "-"))__                int to = Integer.valueOf(StringHelper.after(range, "-"))__                ok =  statusCode >= from && statusCode <= to__            } else {_                int exact = Integer.valueOf(range)__                ok = exact == statusCode__            }_            if (ok) {_                return true__            }_        }_        return false__    };checks,whether,the,given,http,status,code,is,within,the,ok,range,param,status,code,the,status,code,param,ok,status,code,range,the,ok,range,inclusive,return,tt,true,tt,if,ok,tt,false,tt,otherwise;public,static,boolean,is,status,code,ok,int,status,code,string,ok,status,code,range,string,ranges,ok,status,code,range,split,for,string,range,ranges,boolean,ok,if,range,contains,int,from,integer,value,of,string,helper,before,range,int,to,integer,value,of,string,helper,after,range,ok,status,code,from,status,code,to,else,int,exact,integer,value,of,range,ok,exact,status,code,if,ok,return,true,return,false
NettyHttpHelper -> public static boolean isStatusCodeOk(int statusCode, String okStatusCodeRange);1540108158;Checks whether the given http status code is within the ok range__@param statusCode the status code_@param okStatusCodeRange the ok range (inclusive)_@return <tt>true</tt> if ok, <tt>false</tt> otherwise;public static boolean isStatusCodeOk(int statusCode, String okStatusCodeRange) {_        String[] ranges = okStatusCodeRange.split(",")__        for (String range : ranges) {_            boolean ok__            if (range.contains("-")) {_                int from = Integer.valueOf(StringHelper.before(range, "-"))__                int to = Integer.valueOf(StringHelper.after(range, "-"))__                ok =  statusCode >= from && statusCode <= to__            } else {_                int exact = Integer.valueOf(range)__                ok = exact == statusCode__            }_            if (ok) {_                return true__            }_        }_        return false__    };checks,whether,the,given,http,status,code,is,within,the,ok,range,param,status,code,the,status,code,param,ok,status,code,range,the,ok,range,inclusive,return,tt,true,tt,if,ok,tt,false,tt,otherwise;public,static,boolean,is,status,code,ok,int,status,code,string,ok,status,code,range,string,ranges,ok,status,code,range,split,for,string,range,ranges,boolean,ok,if,range,contains,int,from,integer,value,of,string,helper,before,range,int,to,integer,value,of,string,helper,after,range,ok,status,code,from,status,code,to,else,int,exact,integer,value,of,range,ok,exact,status,code,if,ok,return,true,return,false
NettyHttpHelper -> public static boolean isStatusCodeOk(int statusCode, String okStatusCodeRange);1540108163;Checks whether the given http status code is within the ok range__@param statusCode the status code_@param okStatusCodeRange the ok range (inclusive)_@return <tt>true</tt> if ok, <tt>false</tt> otherwise;public static boolean isStatusCodeOk(int statusCode, String okStatusCodeRange) {_        String[] ranges = okStatusCodeRange.split(",")__        for (String range : ranges) {_            boolean ok__            if (range.contains("-")) {_                int from = Integer.valueOf(StringHelper.before(range, "-"))__                int to = Integer.valueOf(StringHelper.after(range, "-"))__                ok =  statusCode >= from && statusCode <= to__            } else {_                int exact = Integer.valueOf(range)__                ok = exact == statusCode__            }_            if (ok) {_                return true__            }_        }_        return false__    };checks,whether,the,given,http,status,code,is,within,the,ok,range,param,status,code,the,status,code,param,ok,status,code,range,the,ok,range,inclusive,return,tt,true,tt,if,ok,tt,false,tt,otherwise;public,static,boolean,is,status,code,ok,int,status,code,string,ok,status,code,range,string,ranges,ok,status,code,range,split,for,string,range,ranges,boolean,ok,if,range,contains,int,from,integer,value,of,string,helper,before,range,int,to,integer,value,of,string,helper,after,range,ok,status,code,from,status,code,to,else,int,exact,integer,value,of,range,ok,exact,status,code,if,ok,return,true,return,false
NettyHttpHelper -> public static boolean isStatusCodeOk(int statusCode, String okStatusCodeRange);1540108164;Checks whether the given http status code is within the ok range__@param statusCode the status code_@param okStatusCodeRange the ok range (inclusive)_@return <tt>true</tt> if ok, <tt>false</tt> otherwise;public static boolean isStatusCodeOk(int statusCode, String okStatusCodeRange) {_        String[] ranges = okStatusCodeRange.split(",")__        for (String range : ranges) {_            boolean ok__            if (range.contains("-")) {_                int from = Integer.valueOf(StringHelper.before(range, "-"))__                int to = Integer.valueOf(StringHelper.after(range, "-"))__                ok =  statusCode >= from && statusCode <= to__            } else {_                int exact = Integer.valueOf(range)__                ok = exact == statusCode__            }_            if (ok) {_                return true__            }_        }_        return false__    };checks,whether,the,given,http,status,code,is,within,the,ok,range,param,status,code,the,status,code,param,ok,status,code,range,the,ok,range,inclusive,return,tt,true,tt,if,ok,tt,false,tt,otherwise;public,static,boolean,is,status,code,ok,int,status,code,string,ok,status,code,range,string,ranges,ok,status,code,range,split,for,string,range,ranges,boolean,ok,if,range,contains,int,from,integer,value,of,string,helper,before,range,int,to,integer,value,of,string,helper,after,range,ok,status,code,from,status,code,to,else,int,exact,integer,value,of,range,ok,exact,status,code,if,ok,return,true,return,false
NettyHttpHelper -> public static HttpMethod createMethod(Message message, boolean hasPayload);1415211488;Creates the {@link HttpMethod} to use to call the remote server, often either its GET or POST.__@param message  the Camel message_@return the created method;public static HttpMethod createMethod(Message message, boolean hasPayload) {_        _        HttpMethod m = message.getHeader(Exchange.HTTP_METHOD, HttpMethod.class)__        if (m != null) {_            return m__        }_        String name = message.getHeader(Exchange.HTTP_METHOD, String.class)__        if (name != null) {_            return HttpMethod.valueOf(name)__        }__        if (hasPayload) {_            _            return HttpMethod.POST__        } else {_            _            return HttpMethod.GET__        }_    };creates,the,link,http,method,to,use,to,call,the,remote,server,often,either,its,get,or,post,param,message,the,camel,message,return,the,created,method;public,static,http,method,create,method,message,message,boolean,has,payload,http,method,m,message,get,header,exchange,http,method,class,if,m,null,return,m,string,name,message,get,header,exchange,string,class,if,name,null,return,http,method,value,of,name,if,has,payload,return,http,method,post,else,return,http,method,get
NettyHttpHelper -> public static HttpMethod createMethod(Message message, boolean hasPayload);1439470590;Creates the {@link HttpMethod} to use to call the remote server, often either its GET or POST.__@param message  the Camel message_@return the created method;public static HttpMethod createMethod(Message message, boolean hasPayload) {_        _        HttpMethod m = message.getHeader(Exchange.HTTP_METHOD, HttpMethod.class)__        if (m != null) {_            return m__        }_        String name = message.getHeader(Exchange.HTTP_METHOD, String.class)__        if (name != null) {_            return HttpMethod.valueOf(name)__        }__        if (hasPayload) {_            _            return HttpMethod.POST__        } else {_            _            return HttpMethod.GET__        }_    };creates,the,link,http,method,to,use,to,call,the,remote,server,often,either,its,get,or,post,param,message,the,camel,message,return,the,created,method;public,static,http,method,create,method,message,message,boolean,has,payload,http,method,m,message,get,header,exchange,http,method,class,if,m,null,return,m,string,name,message,get,header,exchange,string,class,if,name,null,return,http,method,value,of,name,if,has,payload,return,http,method,post,else,return,http,method,get
NettyHttpHelper -> public static HttpMethod createMethod(Message message, boolean hasPayload);1440718658;Creates the {@link HttpMethod} to use to call the remote server, often either its GET or POST.__@param message  the Camel message_@return the created method;public static HttpMethod createMethod(Message message, boolean hasPayload) {_        _        HttpMethod m = message.getHeader(Exchange.HTTP_METHOD, HttpMethod.class)__        if (m != null) {_            return m__        }_        String name = message.getHeader(Exchange.HTTP_METHOD, String.class)__        if (name != null) {_            return HttpMethod.valueOf(name)__        }__        if (hasPayload) {_            _            return HttpMethod.POST__        } else {_            _            return HttpMethod.GET__        }_    };creates,the,link,http,method,to,use,to,call,the,remote,server,often,either,its,get,or,post,param,message,the,camel,message,return,the,created,method;public,static,http,method,create,method,message,message,boolean,has,payload,http,method,m,message,get,header,exchange,http,method,class,if,m,null,return,m,string,name,message,get,header,exchange,string,class,if,name,null,return,http,method,value,of,name,if,has,payload,return,http,method,post,else,return,http,method,get
NettyHttpHelper -> public static HttpMethod createMethod(Message message, boolean hasPayload);1456393004;Creates the {@link HttpMethod} to use to call the remote server, often either its GET or POST.__@param message  the Camel message_@return the created method;public static HttpMethod createMethod(Message message, boolean hasPayload) {_        _        HttpMethod m = message.getHeader(Exchange.HTTP_METHOD, HttpMethod.class)__        if (m != null) {_            return m__        }_        String name = message.getHeader(Exchange.HTTP_METHOD, String.class)__        if (name != null) {_            return HttpMethod.valueOf(name)__        }__        if (hasPayload) {_            _            return HttpMethod.POST__        } else {_            _            return HttpMethod.GET__        }_    };creates,the,link,http,method,to,use,to,call,the,remote,server,often,either,its,get,or,post,param,message,the,camel,message,return,the,created,method;public,static,http,method,create,method,message,message,boolean,has,payload,http,method,m,message,get,header,exchange,http,method,class,if,m,null,return,m,string,name,message,get,header,exchange,string,class,if,name,null,return,http,method,value,of,name,if,has,payload,return,http,method,post,else,return,http,method,get
NettyHttpHelper -> public static HttpMethod createMethod(Message message, boolean hasPayload);1465979012;Creates the {@link HttpMethod} to use to call the remote server, often either its GET or POST.__@param message  the Camel message_@return the created method;public static HttpMethod createMethod(Message message, boolean hasPayload) {_        _        HttpMethod m = message.getHeader(Exchange.HTTP_METHOD, HttpMethod.class)__        if (m != null) {_            return m__        }_        String name = message.getHeader(Exchange.HTTP_METHOD, String.class)__        if (name != null) {_            return HttpMethod.valueOf(name)__        }__        if (hasPayload) {_            _            return HttpMethod.POST__        } else {_            _            return HttpMethod.GET__        }_    };creates,the,link,http,method,to,use,to,call,the,remote,server,often,either,its,get,or,post,param,message,the,camel,message,return,the,created,method;public,static,http,method,create,method,message,message,boolean,has,payload,http,method,m,message,get,header,exchange,http,method,class,if,m,null,return,m,string,name,message,get,header,exchange,string,class,if,name,null,return,http,method,value,of,name,if,has,payload,return,http,method,post,else,return,http,method,get
NettyHttpHelper -> public static HttpMethod createMethod(Message message, boolean hasPayload);1472223211;Creates the {@link HttpMethod} to use to call the remote server, often either its GET or POST.__@param message  the Camel message_@return the created method;public static HttpMethod createMethod(Message message, boolean hasPayload) {_        _        HttpMethod m = message.getHeader(Exchange.HTTP_METHOD, HttpMethod.class)__        if (m != null) {_            return m__        }_        String name = message.getHeader(Exchange.HTTP_METHOD, String.class)__        if (name != null) {_            return HttpMethod.valueOf(name)__        }__        if (hasPayload) {_            _            return HttpMethod.POST__        } else {_            _            return HttpMethod.GET__        }_    };creates,the,link,http,method,to,use,to,call,the,remote,server,often,either,its,get,or,post,param,message,the,camel,message,return,the,created,method;public,static,http,method,create,method,message,message,boolean,has,payload,http,method,m,message,get,header,exchange,http,method,class,if,m,null,return,m,string,name,message,get,header,exchange,string,class,if,name,null,return,http,method,value,of,name,if,has,payload,return,http,method,post,else,return,http,method,get
NettyHttpHelper -> public static HttpMethod createMethod(Message message, boolean hasPayload);1495541549;Creates the {@link HttpMethod} to use to call the remote server, often either its GET or POST.__@param message  the Camel message_@return the created method;public static HttpMethod createMethod(Message message, boolean hasPayload) {_        _        HttpMethod m = message.getHeader(Exchange.HTTP_METHOD, HttpMethod.class)__        if (m != null) {_            return m__        }_        String name = message.getHeader(Exchange.HTTP_METHOD, String.class)__        if (name != null) {_            _            name = name.toUpperCase()__            return HttpMethod.valueOf(name)__        }__        if (hasPayload) {_            _            return HttpMethod.POST__        } else {_            _            return HttpMethod.GET__        }_    };creates,the,link,http,method,to,use,to,call,the,remote,server,often,either,its,get,or,post,param,message,the,camel,message,return,the,created,method;public,static,http,method,create,method,message,message,boolean,has,payload,http,method,m,message,get,header,exchange,http,method,class,if,m,null,return,m,string,name,message,get,header,exchange,string,class,if,name,null,name,name,to,upper,case,return,http,method,value,of,name,if,has,payload,return,http,method,post,else,return,http,method,get
NettyHttpHelper -> public static HttpMethod createMethod(Message message, boolean hasPayload);1513617645;Creates the {@link HttpMethod} to use to call the remote server, often either its GET or POST.__@param message  the Camel message_@return the created method;public static HttpMethod createMethod(Message message, boolean hasPayload) {_        _        HttpMethod m = message.getHeader(Exchange.HTTP_METHOD, HttpMethod.class)__        if (m != null) {_            return m__        }_        String name = message.getHeader(Exchange.HTTP_METHOD, String.class)__        if (name != null) {_            _            name = name.toUpperCase()__            return HttpMethod.valueOf(name)__        }__        if (hasPayload) {_            _            return HttpMethod.POST__        } else {_            _            return HttpMethod.GET__        }_    };creates,the,link,http,method,to,use,to,call,the,remote,server,often,either,its,get,or,post,param,message,the,camel,message,return,the,created,method;public,static,http,method,create,method,message,message,boolean,has,payload,http,method,m,message,get,header,exchange,http,method,class,if,m,null,return,m,string,name,message,get,header,exchange,string,class,if,name,null,name,name,to,upper,case,return,http,method,value,of,name,if,has,payload,return,http,method,post,else,return,http,method,get
NettyHttpHelper -> public static HttpMethod createMethod(Message message, boolean hasPayload);1524063141;Creates the {@link HttpMethod} to use to call the remote server, often either its GET or POST.__@param message  the Camel message_@return the created method;public static HttpMethod createMethod(Message message, boolean hasPayload) {_        _        HttpMethod m = message.getHeader(Exchange.HTTP_METHOD, HttpMethod.class)__        if (m != null) {_            return m__        }_        String name = message.getHeader(Exchange.HTTP_METHOD, String.class)__        if (name != null) {_            _            name = name.toUpperCase()__            return HttpMethod.valueOf(name)__        }__        if (hasPayload) {_            _            return HttpMethod.POST__        } else {_            _            return HttpMethod.GET__        }_    };creates,the,link,http,method,to,use,to,call,the,remote,server,often,either,its,get,or,post,param,message,the,camel,message,return,the,created,method;public,static,http,method,create,method,message,message,boolean,has,payload,http,method,m,message,get,header,exchange,http,method,class,if,m,null,return,m,string,name,message,get,header,exchange,string,class,if,name,null,name,name,to,upper,case,return,http,method,value,of,name,if,has,payload,return,http,method,post,else,return,http,method,get
NettyHttpHelper -> public static HttpMethod createMethod(Message message, boolean hasPayload);1535969486;Creates the {@link HttpMethod} to use to call the remote server, often either its GET or POST.__@param message  the Camel message_@return the created method;public static HttpMethod createMethod(Message message, boolean hasPayload) {_        _        HttpMethod m = message.getHeader(Exchange.HTTP_METHOD, HttpMethod.class)__        if (m != null) {_            return m__        }_        String name = message.getHeader(Exchange.HTTP_METHOD, String.class)__        if (name != null) {_            _            name = name.toUpperCase()__            return HttpMethod.valueOf(name)__        }__        if (hasPayload) {_            _            return HttpMethod.POST__        } else {_            _            return HttpMethod.GET__        }_    };creates,the,link,http,method,to,use,to,call,the,remote,server,often,either,its,get,or,post,param,message,the,camel,message,return,the,created,method;public,static,http,method,create,method,message,message,boolean,has,payload,http,method,m,message,get,header,exchange,http,method,class,if,m,null,return,m,string,name,message,get,header,exchange,string,class,if,name,null,name,name,to,upper,case,return,http,method,value,of,name,if,has,payload,return,http,method,post,else,return,http,method,get
NettyHttpHelper -> public static HttpMethod createMethod(Message message, boolean hasPayload);1540108158;Creates the {@link HttpMethod} to use to call the remote server, often either its GET or POST.__@param message  the Camel message_@return the created method;public static HttpMethod createMethod(Message message, boolean hasPayload) {_        _        HttpMethod m = message.getHeader(Exchange.HTTP_METHOD, HttpMethod.class)__        if (m != null) {_            return m__        }_        String name = message.getHeader(Exchange.HTTP_METHOD, String.class)__        if (name != null) {_            _            name = name.toUpperCase()__            return HttpMethod.valueOf(name)__        }__        if (hasPayload) {_            _            return HttpMethod.POST__        } else {_            _            return HttpMethod.GET__        }_    };creates,the,link,http,method,to,use,to,call,the,remote,server,often,either,its,get,or,post,param,message,the,camel,message,return,the,created,method;public,static,http,method,create,method,message,message,boolean,has,payload,http,method,m,message,get,header,exchange,http,method,class,if,m,null,return,m,string,name,message,get,header,exchange,string,class,if,name,null,name,name,to,upper,case,return,http,method,value,of,name,if,has,payload,return,http,method,post,else,return,http,method,get
NettyHttpHelper -> public static HttpMethod createMethod(Message message, boolean hasPayload);1540108163;Creates the {@link HttpMethod} to use to call the remote server, often either its GET or POST.__@param message  the Camel message_@return the created method;public static HttpMethod createMethod(Message message, boolean hasPayload) {_        _        HttpMethod m = message.getHeader(Exchange.HTTP_METHOD, HttpMethod.class)__        if (m != null) {_            return m__        }_        String name = message.getHeader(Exchange.HTTP_METHOD, String.class)__        if (name != null) {_            _            name = name.toUpperCase()__            return HttpMethod.valueOf(name)__        }__        if (hasPayload) {_            _            return HttpMethod.POST__        } else {_            _            return HttpMethod.GET__        }_    };creates,the,link,http,method,to,use,to,call,the,remote,server,often,either,its,get,or,post,param,message,the,camel,message,return,the,created,method;public,static,http,method,create,method,message,message,boolean,has,payload,http,method,m,message,get,header,exchange,http,method,class,if,m,null,return,m,string,name,message,get,header,exchange,string,class,if,name,null,name,name,to,upper,case,return,http,method,value,of,name,if,has,payload,return,http,method,post,else,return,http,method,get
NettyHttpHelper -> public static HttpMethod createMethod(Message message, boolean hasPayload);1540108164;Creates the {@link HttpMethod} to use to call the remote server, often either its GET or POST.__@param message  the Camel message_@return the created method;public static HttpMethod createMethod(Message message, boolean hasPayload) {_        _        HttpMethod m = message.getHeader(Exchange.HTTP_METHOD, HttpMethod.class)__        if (m != null) {_            return m__        }_        String name = message.getHeader(Exchange.HTTP_METHOD, String.class)__        if (name != null) {_            _            name = name.toUpperCase()__            return HttpMethod.valueOf(name)__        }__        if (hasPayload) {_            _            return HttpMethod.POST__        } else {_            _            return HttpMethod.GET__        }_    };creates,the,link,http,method,to,use,to,call,the,remote,server,often,either,its,get,or,post,param,message,the,camel,message,return,the,created,method;public,static,http,method,create,method,message,message,boolean,has,payload,http,method,m,message,get,header,exchange,http,method,class,if,m,null,return,m,string,name,message,get,header,exchange,string,class,if,name,null,name,name,to,upper,case,return,http,method,value,of,name,if,has,payload,return,http,method,post,else,return,http,method,get
NettyHttpHelper -> public static String createURL(Exchange exchange, NettyHttpEndpoint endpoint) throws URISyntaxException;1415211488;Creates the URL to invoke.__@param exchange the exchange_@param endpoint the endpoint_@return the URL to invoke;public static String createURL(Exchange exchange, NettyHttpEndpoint endpoint) throws URISyntaxException {_        String uri = endpoint.getEndpointUri()___        _        try {_            uri = exchange.getContext().resolvePropertyPlaceholders(uri)__        } catch (Exception e) {_            throw new RuntimeExchangeException("Cannot resolve property placeholders with uri: " + uri, exchange, e)__        }__        _        String path = exchange.getIn().getHeader(Exchange.HTTP_PATH, String.class)__        _        if (path != null) {_            if (path.startsWith("/")) {_                path = path.substring(1)__            }_            if (path.length() > 0) {_                _                _                if (!uri.endsWith("/")) {_                    uri = uri + "/"__                }_                uri = uri.concat(path)__            }_        }__        _        uri = UnsafeUriCharactersEncoder.encodeHttpURI(uri)___        return uri__    };creates,the,url,to,invoke,param,exchange,the,exchange,param,endpoint,the,endpoint,return,the,url,to,invoke;public,static,string,create,url,exchange,exchange,netty,http,endpoint,endpoint,throws,urisyntax,exception,string,uri,endpoint,get,endpoint,uri,try,uri,exchange,get,context,resolve,property,placeholders,uri,catch,exception,e,throw,new,runtime,exchange,exception,cannot,resolve,property,placeholders,with,uri,uri,exchange,e,string,path,exchange,get,in,get,header,exchange,string,class,if,path,null,if,path,starts,with,path,path,substring,1,if,path,length,0,if,uri,ends,with,uri,uri,uri,uri,concat,path,uri,unsafe,uri,characters,encoder,encode,http,uri,uri,return,uri
NettyHttpHelper -> public static String createURL(Exchange exchange, NettyHttpEndpoint endpoint) throws URISyntaxException;1439470590;Creates the URL to invoke.__@param exchange the exchange_@param endpoint the endpoint_@return the URL to invoke;public static String createURL(Exchange exchange, NettyHttpEndpoint endpoint) throws URISyntaxException {_        String uri = endpoint.getEndpointUri()___        _        try {_            uri = exchange.getContext().resolvePropertyPlaceholders(uri)__        } catch (Exception e) {_            throw new RuntimeExchangeException("Cannot resolve property placeholders with uri: " + uri, exchange, e)__        }__        _        String path = exchange.getIn().getHeader(Exchange.HTTP_PATH, String.class)__        _        if (path != null) {_            if (path.startsWith("/")) {_                path = path.substring(1)__            }_            if (path.length() > 0) {_                _                _                if (!uri.endsWith("/")) {_                    uri = uri + "/"__                }_                uri = uri.concat(path)__            }_        }__        _        uri = UnsafeUriCharactersEncoder.encodeHttpURI(uri)___        return uri__    };creates,the,url,to,invoke,param,exchange,the,exchange,param,endpoint,the,endpoint,return,the,url,to,invoke;public,static,string,create,url,exchange,exchange,netty,http,endpoint,endpoint,throws,urisyntax,exception,string,uri,endpoint,get,endpoint,uri,try,uri,exchange,get,context,resolve,property,placeholders,uri,catch,exception,e,throw,new,runtime,exchange,exception,cannot,resolve,property,placeholders,with,uri,uri,exchange,e,string,path,exchange,get,in,get,header,exchange,string,class,if,path,null,if,path,starts,with,path,path,substring,1,if,path,length,0,if,uri,ends,with,uri,uri,uri,uri,concat,path,uri,unsafe,uri,characters,encoder,encode,http,uri,uri,return,uri
NettyHttpHelper -> public static String createURL(Exchange exchange, NettyHttpEndpoint endpoint) throws URISyntaxException;1440718658;Creates the URL to invoke.__@param exchange the exchange_@param endpoint the endpoint_@return the URL to invoke;public static String createURL(Exchange exchange, NettyHttpEndpoint endpoint) throws URISyntaxException {_        String uri = endpoint.getEndpointUri()___        _        try {_            uri = exchange.getContext().resolvePropertyPlaceholders(uri)__        } catch (Exception e) {_            throw new RuntimeExchangeException("Cannot resolve property placeholders with uri: " + uri, exchange, e)__        }__        _        String path = exchange.getIn().getHeader(Exchange.HTTP_PATH, String.class)__        _        if (path != null) {_            if (path.startsWith("/")) {_                path = path.substring(1)__            }_            _            if (path.length() > 0) {_                _                int idx = uri.indexOf("?")___                _                if (idx == -1) {_                    _                    uri = uri.endsWith("/") ? uri : uri + "/"__                    uri = uri.concat(path)__                } else {_                    _                    String base = uri.substring(0, idx)__                    base = base.endsWith("/") ? base : base + "/"__                    base = base.concat(path)__                    uri = base.concat(uri.substring(idx))__                }_            }_        }__        _        uri = UnsafeUriCharactersEncoder.encodeHttpURI(uri)___        return uri__    };creates,the,url,to,invoke,param,exchange,the,exchange,param,endpoint,the,endpoint,return,the,url,to,invoke;public,static,string,create,url,exchange,exchange,netty,http,endpoint,endpoint,throws,urisyntax,exception,string,uri,endpoint,get,endpoint,uri,try,uri,exchange,get,context,resolve,property,placeholders,uri,catch,exception,e,throw,new,runtime,exchange,exception,cannot,resolve,property,placeholders,with,uri,uri,exchange,e,string,path,exchange,get,in,get,header,exchange,string,class,if,path,null,if,path,starts,with,path,path,substring,1,if,path,length,0,int,idx,uri,index,of,if,idx,1,uri,uri,ends,with,uri,uri,uri,uri,concat,path,else,string,base,uri,substring,0,idx,base,base,ends,with,base,base,base,base,concat,path,uri,base,concat,uri,substring,idx,uri,unsafe,uri,characters,encoder,encode,http,uri,uri,return,uri
NettyHttpHelper -> public static String createURL(Exchange exchange, NettyHttpEndpoint endpoint) throws URISyntaxException;1456393004;Creates the URL to invoke.__@param exchange the exchange_@param endpoint the endpoint_@return the URL to invoke;public static String createURL(Exchange exchange, NettyHttpEndpoint endpoint) throws URISyntaxException {_        String uri = endpoint.getEndpointUri()___        _        try {_            uri = exchange.getContext().resolvePropertyPlaceholders(uri)__        } catch (Exception e) {_            throw new RuntimeExchangeException("Cannot resolve property placeholders with uri: " + uri, exchange, e)__        }__        _        String path = exchange.getIn().getHeader(Exchange.HTTP_PATH, String.class)__        _        if (path != null) {_            if (path.startsWith("/")) {_                path = path.substring(1)__            }_            _            if (path.length() > 0) {_                _                int idx = uri.indexOf("?")___                _                if (idx == -1) {_                    _                    uri = uri.endsWith("/") ? uri : uri + "/"__                    uri = uri.concat(path)__                } else {_                    _                    String base = uri.substring(0, idx)__                    base = base.endsWith("/") ? base : base + "/"__                    base = base.concat(path)__                    uri = base.concat(uri.substring(idx))__                }_            }_        }__        _        uri = UnsafeUriCharactersEncoder.encodeHttpURI(uri)___        return uri__    };creates,the,url,to,invoke,param,exchange,the,exchange,param,endpoint,the,endpoint,return,the,url,to,invoke;public,static,string,create,url,exchange,exchange,netty,http,endpoint,endpoint,throws,urisyntax,exception,string,uri,endpoint,get,endpoint,uri,try,uri,exchange,get,context,resolve,property,placeholders,uri,catch,exception,e,throw,new,runtime,exchange,exception,cannot,resolve,property,placeholders,with,uri,uri,exchange,e,string,path,exchange,get,in,get,header,exchange,string,class,if,path,null,if,path,starts,with,path,path,substring,1,if,path,length,0,int,idx,uri,index,of,if,idx,1,uri,uri,ends,with,uri,uri,uri,uri,concat,path,else,string,base,uri,substring,0,idx,base,base,ends,with,base,base,base,base,concat,path,uri,base,concat,uri,substring,idx,uri,unsafe,uri,characters,encoder,encode,http,uri,uri,return,uri
NettyHttpHelper -> public static String createURL(Exchange exchange, NettyHttpEndpoint endpoint) throws URISyntaxException;1465979012;Creates the URL to invoke.__@param exchange the exchange_@param endpoint the endpoint_@return the URL to invoke;public static String createURL(Exchange exchange, NettyHttpEndpoint endpoint) throws URISyntaxException {_        String uri = endpoint.getEndpointUri()___        _        try {_            uri = exchange.getContext().resolvePropertyPlaceholders(uri)__        } catch (Exception e) {_            throw new RuntimeExchangeException("Cannot resolve property placeholders with uri: " + uri, exchange, e)__        }__        _        String path = exchange.getIn().getHeader(Exchange.HTTP_PATH, String.class)__        _        if (path != null) {_            if (path.startsWith("/")) {_                path = path.substring(1)__            }_            _            if (path.length() > 0) {_                _                int idx = uri.indexOf("?")___                _                if (idx == -1) {_                    _                    uri = uri.endsWith("/") ? uri : uri + "/"__                    uri = uri.concat(path)__                } else {_                    _                    String base = uri.substring(0, idx)__                    base = base.endsWith("/") ? base : base + "/"__                    base = base.concat(path)__                    uri = base.concat(uri.substring(idx))__                }_            }_        }__        _        uri = UnsafeUriCharactersEncoder.encodeHttpURI(uri)___        return uri__    };creates,the,url,to,invoke,param,exchange,the,exchange,param,endpoint,the,endpoint,return,the,url,to,invoke;public,static,string,create,url,exchange,exchange,netty,http,endpoint,endpoint,throws,urisyntax,exception,string,uri,endpoint,get,endpoint,uri,try,uri,exchange,get,context,resolve,property,placeholders,uri,catch,exception,e,throw,new,runtime,exchange,exception,cannot,resolve,property,placeholders,with,uri,uri,exchange,e,string,path,exchange,get,in,get,header,exchange,string,class,if,path,null,if,path,starts,with,path,path,substring,1,if,path,length,0,int,idx,uri,index,of,if,idx,1,uri,uri,ends,with,uri,uri,uri,uri,concat,path,else,string,base,uri,substring,0,idx,base,base,ends,with,base,base,base,base,concat,path,uri,base,concat,uri,substring,idx,uri,unsafe,uri,characters,encoder,encode,http,uri,uri,return,uri
NettyHttpHelper -> public static String createURL(Exchange exchange, NettyHttpEndpoint endpoint) throws URISyntaxException;1472223211;Creates the URL to invoke.__@param exchange the exchange_@param endpoint the endpoint_@return the URL to invoke;public static String createURL(Exchange exchange, NettyHttpEndpoint endpoint) throws URISyntaxException {_        _        String uri = (String) exchange.getIn().removeHeader(Exchange.REST_HTTP_URI)__        if (uri == null) {_            uri = endpoint.getEndpointUri()__        }__        _        try {_            uri = exchange.getContext().resolvePropertyPlaceholders(uri)__        } catch (Exception e) {_            throw new RuntimeExchangeException("Cannot resolve property placeholders with uri: " + uri, exchange, e)__        }__        _        String path = exchange.getIn().getHeader(Exchange.HTTP_PATH, String.class)__        _        if (path != null) {_            if (path.startsWith("/")) {_                path = path.substring(1)__            }_            _            if (path.length() > 0) {_                _                int idx = uri.indexOf("?")___                _                if (idx == -1) {_                    _                    uri = uri.endsWith("/") ? uri : uri + "/"__                    uri = uri.concat(path)__                } else {_                    _                    String base = uri.substring(0, idx)__                    base = base.endsWith("/") ? base : base + "/"__                    base = base.concat(path)__                    uri = base.concat(uri.substring(idx))__                }_            }_        }__        _        uri = UnsafeUriCharactersEncoder.encodeHttpURI(uri)___        return uri__    };creates,the,url,to,invoke,param,exchange,the,exchange,param,endpoint,the,endpoint,return,the,url,to,invoke;public,static,string,create,url,exchange,exchange,netty,http,endpoint,endpoint,throws,urisyntax,exception,string,uri,string,exchange,get,in,remove,header,exchange,if,uri,null,uri,endpoint,get,endpoint,uri,try,uri,exchange,get,context,resolve,property,placeholders,uri,catch,exception,e,throw,new,runtime,exchange,exception,cannot,resolve,property,placeholders,with,uri,uri,exchange,e,string,path,exchange,get,in,get,header,exchange,string,class,if,path,null,if,path,starts,with,path,path,substring,1,if,path,length,0,int,idx,uri,index,of,if,idx,1,uri,uri,ends,with,uri,uri,uri,uri,concat,path,else,string,base,uri,substring,0,idx,base,base,ends,with,base,base,base,base,concat,path,uri,base,concat,uri,substring,idx,uri,unsafe,uri,characters,encoder,encode,http,uri,uri,return,uri
NettyHttpHelper -> public static String createURL(Exchange exchange, NettyHttpEndpoint endpoint) throws URISyntaxException;1495541549;Creates the URL to invoke.__@param exchange the exchange_@param endpoint the endpoint_@return the URL to invoke;public static String createURL(Exchange exchange, NettyHttpEndpoint endpoint) throws URISyntaxException {_        _        String uri = (String) exchange.getIn().removeHeader(Exchange.REST_HTTP_URI)__        if (uri == null) {_            uri = endpoint.getEndpointUri()__        }__        _        try {_            uri = exchange.getContext().resolvePropertyPlaceholders(uri)__        } catch (Exception e) {_            throw new RuntimeExchangeException("Cannot resolve property placeholders with uri: " + uri, exchange, e)__        }__        _        String path = exchange.getIn().getHeader(Exchange.HTTP_PATH, String.class)__        _        if (path != null) {_            if (path.startsWith("/")) {_                path = path.substring(1)__            }_            _            if (path.length() > 0) {_                _                int idx = uri.indexOf("?")___                _                if (idx == -1) {_                    _                    uri = uri.endsWith("/") ? uri : uri + "/"__                    uri = uri.concat(path)__                } else {_                    _                    String base = uri.substring(0, idx)__                    base = base.endsWith("/") ? base : base + "/"__                    base = base.concat(path)__                    uri = base.concat(uri.substring(idx))__                }_            }_        }__        _        uri = UnsafeUriCharactersEncoder.encodeHttpURI(uri)___        return uri__    };creates,the,url,to,invoke,param,exchange,the,exchange,param,endpoint,the,endpoint,return,the,url,to,invoke;public,static,string,create,url,exchange,exchange,netty,http,endpoint,endpoint,throws,urisyntax,exception,string,uri,string,exchange,get,in,remove,header,exchange,if,uri,null,uri,endpoint,get,endpoint,uri,try,uri,exchange,get,context,resolve,property,placeholders,uri,catch,exception,e,throw,new,runtime,exchange,exception,cannot,resolve,property,placeholders,with,uri,uri,exchange,e,string,path,exchange,get,in,get,header,exchange,string,class,if,path,null,if,path,starts,with,path,path,substring,1,if,path,length,0,int,idx,uri,index,of,if,idx,1,uri,uri,ends,with,uri,uri,uri,uri,concat,path,else,string,base,uri,substring,0,idx,base,base,ends,with,base,base,base,base,concat,path,uri,base,concat,uri,substring,idx,uri,unsafe,uri,characters,encoder,encode,http,uri,uri,return,uri
NettyHttpHelper -> public static String createURL(Exchange exchange, NettyHttpEndpoint endpoint) throws URISyntaxException;1513617645;Creates the URL to invoke.__@param exchange the exchange_@param endpoint the endpoint_@return the URL to invoke;public static String createURL(Exchange exchange, NettyHttpEndpoint endpoint) throws URISyntaxException {_        _        String uri = (String) exchange.getIn().removeHeader(Exchange.REST_HTTP_URI)__        if (uri == null) {_            uri = endpoint.getEndpointUri()__        }__        _        try {_            uri = exchange.getContext().resolvePropertyPlaceholders(uri)__        } catch (Exception e) {_            throw new RuntimeExchangeException("Cannot resolve property placeholders with uri: " + uri, exchange, e)__        }__        _        String path = exchange.getIn().getHeader(Exchange.HTTP_PATH, String.class)__        _        if (path != null) {_            if (path.startsWith("/")) {_                path = path.substring(1)__            }_            _            if (path.length() > 0) {_                _                int idx = uri.indexOf("?")___                _                if (idx == -1) {_                    _                    uri = uri.endsWith("/") ? uri : uri + "/"__                    uri = uri.concat(path)__                } else {_                    _                    String base = uri.substring(0, idx)__                    base = base.endsWith("/") ? base : base + "/"__                    base = base.concat(path)__                    uri = base.concat(uri.substring(idx))__                }_            }_        }__        _        uri = UnsafeUriCharactersEncoder.encodeHttpURI(uri)___        return uri__    };creates,the,url,to,invoke,param,exchange,the,exchange,param,endpoint,the,endpoint,return,the,url,to,invoke;public,static,string,create,url,exchange,exchange,netty,http,endpoint,endpoint,throws,urisyntax,exception,string,uri,string,exchange,get,in,remove,header,exchange,if,uri,null,uri,endpoint,get,endpoint,uri,try,uri,exchange,get,context,resolve,property,placeholders,uri,catch,exception,e,throw,new,runtime,exchange,exception,cannot,resolve,property,placeholders,with,uri,uri,exchange,e,string,path,exchange,get,in,get,header,exchange,string,class,if,path,null,if,path,starts,with,path,path,substring,1,if,path,length,0,int,idx,uri,index,of,if,idx,1,uri,uri,ends,with,uri,uri,uri,uri,concat,path,else,string,base,uri,substring,0,idx,base,base,ends,with,base,base,base,base,concat,path,uri,base,concat,uri,substring,idx,uri,unsafe,uri,characters,encoder,encode,http,uri,uri,return,uri
NettyHttpHelper -> public static String createURL(Exchange exchange, NettyHttpEndpoint endpoint) throws URISyntaxException;1524063141;Creates the URL to invoke.__@param exchange the exchange_@param endpoint the endpoint_@return the URL to invoke;public static String createURL(Exchange exchange, NettyHttpEndpoint endpoint) throws URISyntaxException {_        _        String uri = (String) exchange.getIn().removeHeader(Exchange.REST_HTTP_URI)__        if (uri == null) {_            uri = endpoint.getEndpointUri()__        }__        _        try {_            uri = exchange.getContext().resolvePropertyPlaceholders(uri)__        } catch (Exception e) {_            throw new RuntimeExchangeException("Cannot resolve property placeholders with uri: " + uri, exchange, e)__        }__        _        String path = exchange.getIn().getHeader(Exchange.HTTP_PATH, String.class)__        _        if (path != null) {_            if (path.startsWith("/")) {_                path = path.substring(1)__            }_            _            if (path.length() > 0) {_                _                int idx = uri.indexOf("?")___                _                if (idx == -1) {_                    _                    uri = uri.endsWith("/") ? uri : uri + "/"__                    uri = uri.concat(path)__                } else {_                    _                    String base = uri.substring(0, idx)__                    base = base.endsWith("/") ? base : base + "/"__                    base = base.concat(path)__                    uri = base.concat(uri.substring(idx))__                }_            }_        }__        _        uri = UnsafeUriCharactersEncoder.encodeHttpURI(uri)___        return uri__    };creates,the,url,to,invoke,param,exchange,the,exchange,param,endpoint,the,endpoint,return,the,url,to,invoke;public,static,string,create,url,exchange,exchange,netty,http,endpoint,endpoint,throws,urisyntax,exception,string,uri,string,exchange,get,in,remove,header,exchange,if,uri,null,uri,endpoint,get,endpoint,uri,try,uri,exchange,get,context,resolve,property,placeholders,uri,catch,exception,e,throw,new,runtime,exchange,exception,cannot,resolve,property,placeholders,with,uri,uri,exchange,e,string,path,exchange,get,in,get,header,exchange,string,class,if,path,null,if,path,starts,with,path,path,substring,1,if,path,length,0,int,idx,uri,index,of,if,idx,1,uri,uri,ends,with,uri,uri,uri,uri,concat,path,else,string,base,uri,substring,0,idx,base,base,ends,with,base,base,base,base,concat,path,uri,base,concat,uri,substring,idx,uri,unsafe,uri,characters,encoder,encode,http,uri,uri,return,uri
NettyHttpHelper -> public static String createURL(Exchange exchange, NettyHttpEndpoint endpoint) throws URISyntaxException;1535969486;Creates the URL to invoke.__@param exchange the exchange_@param endpoint the endpoint_@return the URL to invoke;public static String createURL(Exchange exchange, NettyHttpEndpoint endpoint) throws URISyntaxException {_        _        String uri = (String) exchange.getIn().removeHeader(Exchange.REST_HTTP_URI)__        if (uri == null) {_            uri = endpoint.getEndpointUri()__        }__        _        try {_            uri = exchange.getContext().resolvePropertyPlaceholders(uri)__        } catch (Exception e) {_            throw new RuntimeExchangeException("Cannot resolve property placeholders with uri: " + uri, exchange, e)__        }__        _        String path = exchange.getIn().getHeader(Exchange.HTTP_PATH, String.class)__        _        if (path != null) {_            if (path.startsWith("/")) {_                path = path.substring(1)__            }_            _            if (path.length() > 0) {_                _                int idx = uri.indexOf("?")___                _                if (idx == -1) {_                    _                    uri = uri.endsWith("/") ? uri : uri + "/"__                    uri = uri.concat(path)__                } else {_                    _                    String base = uri.substring(0, idx)__                    base = base.endsWith("/") ? base : base + "/"__                    base = base.concat(path)__                    uri = base.concat(uri.substring(idx))__                }_            }_        }__        _        uri = UnsafeUriCharactersEncoder.encodeHttpURI(uri)___        return uri__    };creates,the,url,to,invoke,param,exchange,the,exchange,param,endpoint,the,endpoint,return,the,url,to,invoke;public,static,string,create,url,exchange,exchange,netty,http,endpoint,endpoint,throws,urisyntax,exception,string,uri,string,exchange,get,in,remove,header,exchange,if,uri,null,uri,endpoint,get,endpoint,uri,try,uri,exchange,get,context,resolve,property,placeholders,uri,catch,exception,e,throw,new,runtime,exchange,exception,cannot,resolve,property,placeholders,with,uri,uri,exchange,e,string,path,exchange,get,in,get,header,exchange,string,class,if,path,null,if,path,starts,with,path,path,substring,1,if,path,length,0,int,idx,uri,index,of,if,idx,1,uri,uri,ends,with,uri,uri,uri,uri,concat,path,else,string,base,uri,substring,0,idx,base,base,ends,with,base,base,base,base,concat,path,uri,base,concat,uri,substring,idx,uri,unsafe,uri,characters,encoder,encode,http,uri,uri,return,uri
NettyHttpHelper -> public static String createURL(Exchange exchange, NettyHttpEndpoint endpoint) throws URISyntaxException;1540108158;Creates the URL to invoke.__@param exchange the exchange_@param endpoint the endpoint_@return the URL to invoke;public static String createURL(Exchange exchange, NettyHttpEndpoint endpoint) throws URISyntaxException {_        _        String uri = (String) exchange.getIn().removeHeader(Exchange.REST_HTTP_URI)__        if (uri == null) {_            uri = endpoint.getEndpointUri()__        }__        _        try {_            uri = exchange.getContext().resolvePropertyPlaceholders(uri)__        } catch (Exception e) {_            throw new RuntimeExchangeException("Cannot resolve property placeholders with uri: " + uri, exchange, e)__        }__        _        String path = exchange.getIn().getHeader(Exchange.HTTP_PATH, String.class)__        _        if (path != null) {_            if (path.startsWith("/")) {_                path = path.substring(1)__            }_            _            if (path.length() > 0) {_                _                int idx = uri.indexOf("?")___                _                if (idx == -1) {_                    _                    uri = uri.endsWith("/") ? uri : uri + "/"__                    uri = uri.concat(path)__                } else {_                    _                    String base = uri.substring(0, idx)__                    base = base.endsWith("/") ? base : base + "/"__                    base = base.concat(path)__                    uri = base.concat(uri.substring(idx))__                }_            }_        }__        _        uri = UnsafeUriCharactersEncoder.encodeHttpURI(uri)___        return uri__    };creates,the,url,to,invoke,param,exchange,the,exchange,param,endpoint,the,endpoint,return,the,url,to,invoke;public,static,string,create,url,exchange,exchange,netty,http,endpoint,endpoint,throws,urisyntax,exception,string,uri,string,exchange,get,in,remove,header,exchange,if,uri,null,uri,endpoint,get,endpoint,uri,try,uri,exchange,get,context,resolve,property,placeholders,uri,catch,exception,e,throw,new,runtime,exchange,exception,cannot,resolve,property,placeholders,with,uri,uri,exchange,e,string,path,exchange,get,in,get,header,exchange,string,class,if,path,null,if,path,starts,with,path,path,substring,1,if,path,length,0,int,idx,uri,index,of,if,idx,1,uri,uri,ends,with,uri,uri,uri,uri,concat,path,else,string,base,uri,substring,0,idx,base,base,ends,with,base,base,base,base,concat,path,uri,base,concat,uri,substring,idx,uri,unsafe,uri,characters,encoder,encode,http,uri,uri,return,uri
NettyHttpHelper -> public static String createURL(Exchange exchange, NettyHttpEndpoint endpoint) throws URISyntaxException;1540108163;Creates the URL to invoke.__@param exchange the exchange_@param endpoint the endpoint_@return the URL to invoke;public static String createURL(Exchange exchange, NettyHttpEndpoint endpoint) throws URISyntaxException {_        _        String uri = (String) exchange.getIn().removeHeader(Exchange.REST_HTTP_URI)__        if (uri == null) {_            uri = endpoint.getEndpointUri()__        }__        _        try {_            uri = exchange.getContext().resolvePropertyPlaceholders(uri)__        } catch (Exception e) {_            throw new RuntimeExchangeException("Cannot resolve property placeholders with uri: " + uri, exchange, e)__        }__        _        String path = exchange.getIn().getHeader(Exchange.HTTP_PATH, String.class)__        _        if (path != null) {_            if (path.startsWith("/")) {_                path = path.substring(1)__            }_            _            if (path.length() > 0) {_                _                int idx = uri.indexOf("?")___                _                if (idx == -1) {_                    _                    uri = uri.endsWith("/") ? uri : uri + "/"__                    uri = uri.concat(path)__                } else {_                    _                    String base = uri.substring(0, idx)__                    base = base.endsWith("/") ? base : base + "/"__                    base = base.concat(path)__                    uri = base.concat(uri.substring(idx))__                }_            }_        }__        _        uri = UnsafeUriCharactersEncoder.encodeHttpURI(uri)___        return uri__    };creates,the,url,to,invoke,param,exchange,the,exchange,param,endpoint,the,endpoint,return,the,url,to,invoke;public,static,string,create,url,exchange,exchange,netty,http,endpoint,endpoint,throws,urisyntax,exception,string,uri,string,exchange,get,in,remove,header,exchange,if,uri,null,uri,endpoint,get,endpoint,uri,try,uri,exchange,get,context,resolve,property,placeholders,uri,catch,exception,e,throw,new,runtime,exchange,exception,cannot,resolve,property,placeholders,with,uri,uri,exchange,e,string,path,exchange,get,in,get,header,exchange,string,class,if,path,null,if,path,starts,with,path,path,substring,1,if,path,length,0,int,idx,uri,index,of,if,idx,1,uri,uri,ends,with,uri,uri,uri,uri,concat,path,else,string,base,uri,substring,0,idx,base,base,ends,with,base,base,base,base,concat,path,uri,base,concat,uri,substring,idx,uri,unsafe,uri,characters,encoder,encode,http,uri,uri,return,uri
NettyHttpHelper -> public static String createURL(Exchange exchange, NettyHttpEndpoint endpoint) throws URISyntaxException;1540108164;Creates the URL to invoke.__@param exchange the exchange_@param endpoint the endpoint_@return the URL to invoke;public static String createURL(Exchange exchange, NettyHttpEndpoint endpoint) throws URISyntaxException {_        _        String uri = (String) exchange.getIn().removeHeader(Exchange.REST_HTTP_URI)__        if (uri == null) {_            uri = endpoint.getEndpointUri()__        }__        _        try {_            uri = exchange.getContext().resolvePropertyPlaceholders(uri)__        } catch (Exception e) {_            throw new RuntimeExchangeException("Cannot resolve property placeholders with uri: " + uri, exchange, e)__        }__        _        String path = exchange.getIn().getHeader(Exchange.HTTP_PATH, String.class)__        _        if (path != null) {_            if (path.startsWith("/")) {_                path = path.substring(1)__            }_            _            if (path.length() > 0) {_                _                int idx = uri.indexOf("?")___                _                if (idx == -1) {_                    _                    uri = uri.endsWith("/") ? uri : uri + "/"__                    uri = uri.concat(path)__                } else {_                    _                    String base = uri.substring(0, idx)__                    base = base.endsWith("/") ? base : base + "/"__                    base = base.concat(path)__                    uri = base.concat(uri.substring(idx))__                }_            }_        }__        _        uri = UnsafeUriCharactersEncoder.encodeHttpURI(uri)___        return uri__    };creates,the,url,to,invoke,param,exchange,the,exchange,param,endpoint,the,endpoint,return,the,url,to,invoke;public,static,string,create,url,exchange,exchange,netty,http,endpoint,endpoint,throws,urisyntax,exception,string,uri,string,exchange,get,in,remove,header,exchange,if,uri,null,uri,endpoint,get,endpoint,uri,try,uri,exchange,get,context,resolve,property,placeholders,uri,catch,exception,e,throw,new,runtime,exchange,exception,cannot,resolve,property,placeholders,with,uri,uri,exchange,e,string,path,exchange,get,in,get,header,exchange,string,class,if,path,null,if,path,starts,with,path,path,substring,1,if,path,length,0,int,idx,uri,index,of,if,idx,1,uri,uri,ends,with,uri,uri,uri,uri,concat,path,else,string,base,uri,substring,0,idx,base,base,ends,with,base,base,base,base,concat,path,uri,base,concat,uri,substring,idx,uri,unsafe,uri,characters,encoder,encode,http,uri,uri,return,uri
NettyHttpHelper -> @SuppressWarnings("unchecked")     public static void appendHeader(Map<String, Object> headers, String key, Object value);1415211488;Appends the key/value to the headers._<p/>_This implementation supports keys with multiple values. In such situations the value_will be a {@link java.util.List} that contains the multiple values.__@param headers  headers_@param key      the key_@param value    the value;@SuppressWarnings("unchecked")_    public static void appendHeader(Map<String, Object> headers, String key, Object value) {_        if (headers.containsKey(key)) {_            Object existing = headers.get(key)__            List<Object> list__            if (existing instanceof List) {_                list = (List<Object>) existing__            } else {_                list = new ArrayList<Object>()__                list.add(existing)__            }_            list.add(value)__            value = list__        }__        headers.put(key, value)__    };appends,the,key,value,to,the,headers,p,this,implementation,supports,keys,with,multiple,values,in,such,situations,the,value,will,be,a,link,java,util,list,that,contains,the,multiple,values,param,headers,headers,param,key,the,key,param,value,the,value;suppress,warnings,unchecked,public,static,void,append,header,map,string,object,headers,string,key,object,value,if,headers,contains,key,key,object,existing,headers,get,key,list,object,list,if,existing,instanceof,list,list,list,object,existing,else,list,new,array,list,object,list,add,existing,list,add,value,value,list,headers,put,key,value
NettyHttpHelper -> @SuppressWarnings("unchecked")     public static void appendHeader(Map<String, Object> headers, String key, Object value);1439470590;Appends the key/value to the headers._<p/>_This implementation supports keys with multiple values. In such situations the value_will be a {@link java.util.List} that contains the multiple values.__@param headers  headers_@param key      the key_@param value    the value;@SuppressWarnings("unchecked")_    public static void appendHeader(Map<String, Object> headers, String key, Object value) {_        if (headers.containsKey(key)) {_            Object existing = headers.get(key)__            List<Object> list__            if (existing instanceof List) {_                list = (List<Object>) existing__            } else {_                list = new ArrayList<Object>()__                list.add(existing)__            }_            list.add(value)__            value = list__        }__        headers.put(key, value)__    };appends,the,key,value,to,the,headers,p,this,implementation,supports,keys,with,multiple,values,in,such,situations,the,value,will,be,a,link,java,util,list,that,contains,the,multiple,values,param,headers,headers,param,key,the,key,param,value,the,value;suppress,warnings,unchecked,public,static,void,append,header,map,string,object,headers,string,key,object,value,if,headers,contains,key,key,object,existing,headers,get,key,list,object,list,if,existing,instanceof,list,list,list,object,existing,else,list,new,array,list,object,list,add,existing,list,add,value,value,list,headers,put,key,value
NettyHttpHelper -> @SuppressWarnings("unchecked")     public static void appendHeader(Map<String, Object> headers, String key, Object value);1440718658;Appends the key/value to the headers._<p/>_This implementation supports keys with multiple values. In such situations the value_will be a {@link java.util.List} that contains the multiple values.__@param headers  headers_@param key      the key_@param value    the value;@SuppressWarnings("unchecked")_    public static void appendHeader(Map<String, Object> headers, String key, Object value) {_        if (headers.containsKey(key)) {_            Object existing = headers.get(key)__            List<Object> list__            if (existing instanceof List) {_                list = (List<Object>) existing__            } else {_                list = new ArrayList<Object>()__                list.add(existing)__            }_            list.add(value)__            value = list__        }__        headers.put(key, value)__    };appends,the,key,value,to,the,headers,p,this,implementation,supports,keys,with,multiple,values,in,such,situations,the,value,will,be,a,link,java,util,list,that,contains,the,multiple,values,param,headers,headers,param,key,the,key,param,value,the,value;suppress,warnings,unchecked,public,static,void,append,header,map,string,object,headers,string,key,object,value,if,headers,contains,key,key,object,existing,headers,get,key,list,object,list,if,existing,instanceof,list,list,list,object,existing,else,list,new,array,list,object,list,add,existing,list,add,value,value,list,headers,put,key,value
NettyHttpHelper -> @SuppressWarnings("unchecked")     public static void appendHeader(Map<String, Object> headers, String key, Object value);1456393004;Appends the key/value to the headers._<p/>_This implementation supports keys with multiple values. In such situations the value_will be a {@link java.util.List} that contains the multiple values.__@param headers  headers_@param key      the key_@param value    the value;@SuppressWarnings("unchecked")_    public static void appendHeader(Map<String, Object> headers, String key, Object value) {_        if (headers.containsKey(key)) {_            Object existing = headers.get(key)__            List<Object> list__            if (existing instanceof List) {_                list = (List<Object>) existing__            } else {_                list = new ArrayList<Object>()__                list.add(existing)__            }_            list.add(value)__            value = list__        }__        headers.put(key, value)__    };appends,the,key,value,to,the,headers,p,this,implementation,supports,keys,with,multiple,values,in,such,situations,the,value,will,be,a,link,java,util,list,that,contains,the,multiple,values,param,headers,headers,param,key,the,key,param,value,the,value;suppress,warnings,unchecked,public,static,void,append,header,map,string,object,headers,string,key,object,value,if,headers,contains,key,key,object,existing,headers,get,key,list,object,list,if,existing,instanceof,list,list,list,object,existing,else,list,new,array,list,object,list,add,existing,list,add,value,value,list,headers,put,key,value
NettyHttpHelper -> @SuppressWarnings("unchecked")     public static void appendHeader(Map<String, Object> headers, String key, Object value);1465979012;Appends the key/value to the headers._<p/>_This implementation supports keys with multiple values. In such situations the value_will be a {@link java.util.List} that contains the multiple values.__@param headers  headers_@param key      the key_@param value    the value;@SuppressWarnings("unchecked")_    public static void appendHeader(Map<String, Object> headers, String key, Object value) {_        if (headers.containsKey(key)) {_            Object existing = headers.get(key)__            List<Object> list__            if (existing instanceof List) {_                list = (List<Object>) existing__            } else {_                list = new ArrayList<Object>()__                list.add(existing)__            }_            list.add(value)__            value = list__        }__        headers.put(key, value)__    };appends,the,key,value,to,the,headers,p,this,implementation,supports,keys,with,multiple,values,in,such,situations,the,value,will,be,a,link,java,util,list,that,contains,the,multiple,values,param,headers,headers,param,key,the,key,param,value,the,value;suppress,warnings,unchecked,public,static,void,append,header,map,string,object,headers,string,key,object,value,if,headers,contains,key,key,object,existing,headers,get,key,list,object,list,if,existing,instanceof,list,list,list,object,existing,else,list,new,array,list,object,list,add,existing,list,add,value,value,list,headers,put,key,value
NettyHttpHelper -> @SuppressWarnings("unchecked")     public static void appendHeader(Map<String, Object> headers, String key, Object value);1472223211;Appends the key/value to the headers._<p/>_This implementation supports keys with multiple values. In such situations the value_will be a {@link java.util.List} that contains the multiple values.__@param headers  headers_@param key      the key_@param value    the value;@SuppressWarnings("unchecked")_    public static void appendHeader(Map<String, Object> headers, String key, Object value) {_        if (headers.containsKey(key)) {_            Object existing = headers.get(key)__            List<Object> list__            if (existing instanceof List) {_                list = (List<Object>) existing__            } else {_                list = new ArrayList<Object>()__                list.add(existing)__            }_            list.add(value)__            value = list__        }__        headers.put(key, value)__    };appends,the,key,value,to,the,headers,p,this,implementation,supports,keys,with,multiple,values,in,such,situations,the,value,will,be,a,link,java,util,list,that,contains,the,multiple,values,param,headers,headers,param,key,the,key,param,value,the,value;suppress,warnings,unchecked,public,static,void,append,header,map,string,object,headers,string,key,object,value,if,headers,contains,key,key,object,existing,headers,get,key,list,object,list,if,existing,instanceof,list,list,list,object,existing,else,list,new,array,list,object,list,add,existing,list,add,value,value,list,headers,put,key,value
NettyHttpHelper -> @SuppressWarnings("unchecked")     public static void appendHeader(Map<String, Object> headers, String key, Object value);1495541549;Appends the key/value to the headers._<p/>_This implementation supports keys with multiple values. In such situations the value_will be a {@link java.util.List} that contains the multiple values.__@param headers  headers_@param key      the key_@param value    the value;@SuppressWarnings("unchecked")_    public static void appendHeader(Map<String, Object> headers, String key, Object value) {_        if (headers.containsKey(key)) {_            Object existing = headers.get(key)__            List<Object> list__            if (existing instanceof List) {_                list = (List<Object>) existing__            } else {_                list = new ArrayList<Object>()__                list.add(existing)__            }_            list.add(value)__            value = list__        }__        headers.put(key, value)__    };appends,the,key,value,to,the,headers,p,this,implementation,supports,keys,with,multiple,values,in,such,situations,the,value,will,be,a,link,java,util,list,that,contains,the,multiple,values,param,headers,headers,param,key,the,key,param,value,the,value;suppress,warnings,unchecked,public,static,void,append,header,map,string,object,headers,string,key,object,value,if,headers,contains,key,key,object,existing,headers,get,key,list,object,list,if,existing,instanceof,list,list,list,object,existing,else,list,new,array,list,object,list,add,existing,list,add,value,value,list,headers,put,key,value
NettyHttpHelper -> @SuppressWarnings("unchecked")     public static void appendHeader(Map<String, Object> headers, String key, Object value);1513617645;Appends the key/value to the headers._<p/>_This implementation supports keys with multiple values. In such situations the value_will be a {@link java.util.List} that contains the multiple values.__@param headers  headers_@param key      the key_@param value    the value;@SuppressWarnings("unchecked")_    public static void appendHeader(Map<String, Object> headers, String key, Object value) {_        if (headers.containsKey(key)) {_            Object existing = headers.get(key)__            List<Object> list__            if (existing instanceof List) {_                list = (List<Object>) existing__            } else {_                list = new ArrayList<Object>()__                list.add(existing)__            }_            list.add(value)__            value = list__        }__        headers.put(key, value)__    };appends,the,key,value,to,the,headers,p,this,implementation,supports,keys,with,multiple,values,in,such,situations,the,value,will,be,a,link,java,util,list,that,contains,the,multiple,values,param,headers,headers,param,key,the,key,param,value,the,value;suppress,warnings,unchecked,public,static,void,append,header,map,string,object,headers,string,key,object,value,if,headers,contains,key,key,object,existing,headers,get,key,list,object,list,if,existing,instanceof,list,list,list,object,existing,else,list,new,array,list,object,list,add,existing,list,add,value,value,list,headers,put,key,value
NettyHttpHelper -> @SuppressWarnings("unchecked")     public static void appendHeader(Map<String, Object> headers, String key, Object value);1524063141;Appends the key/value to the headers._<p/>_This implementation supports keys with multiple values. In such situations the value_will be a {@link java.util.List} that contains the multiple values.__@param headers  headers_@param key      the key_@param value    the value;@SuppressWarnings("unchecked")_    public static void appendHeader(Map<String, Object> headers, String key, Object value) {_        if (headers.containsKey(key)) {_            Object existing = headers.get(key)__            List<Object> list__            if (existing instanceof List) {_                list = (List<Object>) existing__            } else {_                list = new ArrayList<>()__                list.add(existing)__            }_            list.add(value)__            value = list__        }__        headers.put(key, value)__    };appends,the,key,value,to,the,headers,p,this,implementation,supports,keys,with,multiple,values,in,such,situations,the,value,will,be,a,link,java,util,list,that,contains,the,multiple,values,param,headers,headers,param,key,the,key,param,value,the,value;suppress,warnings,unchecked,public,static,void,append,header,map,string,object,headers,string,key,object,value,if,headers,contains,key,key,object,existing,headers,get,key,list,object,list,if,existing,instanceof,list,list,list,object,existing,else,list,new,array,list,list,add,existing,list,add,value,value,list,headers,put,key,value
NettyHttpHelper -> @SuppressWarnings("unchecked")     public static void appendHeader(Map<String, Object> headers, String key, Object value);1535969486;Appends the key/value to the headers._<p/>_This implementation supports keys with multiple values. In such situations the value_will be a {@link java.util.List} that contains the multiple values.__@param headers  headers_@param key      the key_@param value    the value;@SuppressWarnings("unchecked")_    public static void appendHeader(Map<String, Object> headers, String key, Object value) {_        if (headers.containsKey(key)) {_            Object existing = headers.get(key)__            List<Object> list__            if (existing instanceof List) {_                list = (List<Object>) existing__            } else {_                list = new ArrayList<>()__                list.add(existing)__            }_            list.add(value)__            value = list__        }__        headers.put(key, value)__    };appends,the,key,value,to,the,headers,p,this,implementation,supports,keys,with,multiple,values,in,such,situations,the,value,will,be,a,link,java,util,list,that,contains,the,multiple,values,param,headers,headers,param,key,the,key,param,value,the,value;suppress,warnings,unchecked,public,static,void,append,header,map,string,object,headers,string,key,object,value,if,headers,contains,key,key,object,existing,headers,get,key,list,object,list,if,existing,instanceof,list,list,list,object,existing,else,list,new,array,list,list,add,existing,list,add,value,value,list,headers,put,key,value
NettyHttpHelper -> @SuppressWarnings("unchecked")     public static void appendHeader(Map<String, Object> headers, String key, Object value);1540108158;Appends the key/value to the headers._<p/>_This implementation supports keys with multiple values. In such situations the value_will be a {@link java.util.List} that contains the multiple values.__@param headers  headers_@param key      the key_@param value    the value;@SuppressWarnings("unchecked")_    public static void appendHeader(Map<String, Object> headers, String key, Object value) {_        if (headers.containsKey(key)) {_            Object existing = headers.get(key)__            List<Object> list__            if (existing instanceof List) {_                list = (List<Object>) existing__            } else {_                list = new ArrayList<>()__                list.add(existing)__            }_            list.add(value)__            value = list__        }__        headers.put(key, value)__    };appends,the,key,value,to,the,headers,p,this,implementation,supports,keys,with,multiple,values,in,such,situations,the,value,will,be,a,link,java,util,list,that,contains,the,multiple,values,param,headers,headers,param,key,the,key,param,value,the,value;suppress,warnings,unchecked,public,static,void,append,header,map,string,object,headers,string,key,object,value,if,headers,contains,key,key,object,existing,headers,get,key,list,object,list,if,existing,instanceof,list,list,list,object,existing,else,list,new,array,list,list,add,existing,list,add,value,value,list,headers,put,key,value
NettyHttpHelper -> @SuppressWarnings("unchecked")     public static void appendHeader(Map<String, Object> headers, String key, Object value);1540108163;Appends the key/value to the headers._<p/>_This implementation supports keys with multiple values. In such situations the value_will be a {@link java.util.List} that contains the multiple values.__@param headers  headers_@param key      the key_@param value    the value;@SuppressWarnings("unchecked")_    public static void appendHeader(Map<String, Object> headers, String key, Object value) {_        if (headers.containsKey(key)) {_            Object existing = headers.get(key)__            List<Object> list__            if (existing instanceof List) {_                list = (List<Object>) existing__            } else {_                list = new ArrayList<>()__                list.add(existing)__            }_            list.add(value)__            value = list__        }__        headers.put(key, value)__    };appends,the,key,value,to,the,headers,p,this,implementation,supports,keys,with,multiple,values,in,such,situations,the,value,will,be,a,link,java,util,list,that,contains,the,multiple,values,param,headers,headers,param,key,the,key,param,value,the,value;suppress,warnings,unchecked,public,static,void,append,header,map,string,object,headers,string,key,object,value,if,headers,contains,key,key,object,existing,headers,get,key,list,object,list,if,existing,instanceof,list,list,list,object,existing,else,list,new,array,list,list,add,existing,list,add,value,value,list,headers,put,key,value
NettyHttpHelper -> @SuppressWarnings("unchecked")     public static void appendHeader(Map<String, Object> headers, String key, Object value);1540108164;Appends the key/value to the headers._<p/>_This implementation supports keys with multiple values. In such situations the value_will be a {@link java.util.List} that contains the multiple values.__@param headers  headers_@param key      the key_@param value    the value;@SuppressWarnings("unchecked")_    public static void appendHeader(Map<String, Object> headers, String key, Object value) {_        if (headers.containsKey(key)) {_            Object existing = headers.get(key)__            List<Object> list__            if (existing instanceof List) {_                list = (List<Object>) existing__            } else {_                list = new ArrayList<>()__                list.add(existing)__            }_            list.add(value)__            value = list__        }__        headers.put(key, value)__    };appends,the,key,value,to,the,headers,p,this,implementation,supports,keys,with,multiple,values,in,such,situations,the,value,will,be,a,link,java,util,list,that,contains,the,multiple,values,param,headers,headers,param,key,the,key,param,value,the,value;suppress,warnings,unchecked,public,static,void,append,header,map,string,object,headers,string,key,object,value,if,headers,contains,key,key,object,existing,headers,get,key,list,object,list,if,existing,instanceof,list,list,list,object,existing,else,list,new,array,list,list,add,existing,list,add,value,value,list,headers,put,key,value
NettyHttpHelper -> public static URI createURI(Exchange exchange, String url, NettyHttpEndpoint endpoint) throws URISyntaxException;1415211488;Creates the URI to invoke.__@param exchange the exchange_@param url      the url to invoke_@param endpoint the endpoint_@return the URI to invoke;public static URI createURI(Exchange exchange, String url, NettyHttpEndpoint endpoint) throws URISyntaxException {_        URI uri = new URI(url)__        _        String queryString = exchange.getIn().getHeader(Exchange.HTTP_QUERY, String.class)__        if (queryString == null) {_            _            queryString = uri.getRawQuery()__        }_        if (queryString != null) {_            _            queryString = UnsafeUriCharactersEncoder.encodeHttpURI(queryString)__            uri = URISupport.createURIWithQuery(uri, queryString)__        }_        return uri__    };creates,the,uri,to,invoke,param,exchange,the,exchange,param,url,the,url,to,invoke,param,endpoint,the,endpoint,return,the,uri,to,invoke;public,static,uri,create,uri,exchange,exchange,string,url,netty,http,endpoint,endpoint,throws,urisyntax,exception,uri,uri,new,uri,url,string,query,string,exchange,get,in,get,header,exchange,string,class,if,query,string,null,query,string,uri,get,raw,query,if,query,string,null,query,string,unsafe,uri,characters,encoder,encode,http,uri,query,string,uri,urisupport,create,uriwith,query,uri,query,string,return,uri
NettyHttpHelper -> public static URI createURI(Exchange exchange, String url, NettyHttpEndpoint endpoint) throws URISyntaxException;1439470590;Creates the URI to invoke.__@param exchange the exchange_@param url      the url to invoke_@param endpoint the endpoint_@return the URI to invoke;public static URI createURI(Exchange exchange, String url, NettyHttpEndpoint endpoint) throws URISyntaxException {_        URI uri = new URI(url)__        _        String queryString = exchange.getIn().getHeader(Exchange.HTTP_QUERY, String.class)__        if (queryString == null) {_            _            queryString = uri.getRawQuery()__        }_        if (queryString != null) {_            _            queryString = UnsafeUriCharactersEncoder.encodeHttpURI(queryString)__            uri = URISupport.createURIWithQuery(uri, queryString)__        }_        return uri__    };creates,the,uri,to,invoke,param,exchange,the,exchange,param,url,the,url,to,invoke,param,endpoint,the,endpoint,return,the,uri,to,invoke;public,static,uri,create,uri,exchange,exchange,string,url,netty,http,endpoint,endpoint,throws,urisyntax,exception,uri,uri,new,uri,url,string,query,string,exchange,get,in,get,header,exchange,string,class,if,query,string,null,query,string,uri,get,raw,query,if,query,string,null,query,string,unsafe,uri,characters,encoder,encode,http,uri,query,string,uri,urisupport,create,uriwith,query,uri,query,string,return,uri
NettyHttpHelper -> public static URI createURI(Exchange exchange, String url, NettyHttpEndpoint endpoint) throws URISyntaxException;1440718658;Creates the URI to invoke.__@param exchange the exchange_@param url      the url to invoke_@param endpoint the endpoint_@return the URI to invoke;public static URI createURI(Exchange exchange, String url, NettyHttpEndpoint endpoint) throws URISyntaxException {_        URI uri = new URI(url)__        _        String queryString = exchange.getIn().getHeader(Exchange.HTTP_QUERY, String.class)__        if (queryString == null) {_            _            queryString = uri.getRawQuery()__        }_        if (queryString != null) {_            _            queryString = UnsafeUriCharactersEncoder.encodeHttpURI(queryString)__            uri = URISupport.createURIWithQuery(uri, queryString)__        }_        return uri__    };creates,the,uri,to,invoke,param,exchange,the,exchange,param,url,the,url,to,invoke,param,endpoint,the,endpoint,return,the,uri,to,invoke;public,static,uri,create,uri,exchange,exchange,string,url,netty,http,endpoint,endpoint,throws,urisyntax,exception,uri,uri,new,uri,url,string,query,string,exchange,get,in,get,header,exchange,string,class,if,query,string,null,query,string,uri,get,raw,query,if,query,string,null,query,string,unsafe,uri,characters,encoder,encode,http,uri,query,string,uri,urisupport,create,uriwith,query,uri,query,string,return,uri
NettyHttpHelper -> public static URI createURI(Exchange exchange, String url, NettyHttpEndpoint endpoint) throws URISyntaxException;1456393004;Creates the URI to invoke.__@param exchange the exchange_@param url      the url to invoke_@param endpoint the endpoint_@return the URI to invoke;public static URI createURI(Exchange exchange, String url, NettyHttpEndpoint endpoint) throws URISyntaxException {_        URI uri = new URI(url)__        _        _        String queryString = exchange.getIn().getHeader(Exchange.HTTP_RAW_QUERY, String.class)__        if (queryString == null) {_            queryString = exchange.getIn().getHeader(Exchange.HTTP_QUERY, String.class)__        }_        if (queryString == null) {_            _            queryString = uri.getRawQuery()__        }_        if (queryString != null) {_            _            queryString = UnsafeUriCharactersEncoder.encodeHttpURI(queryString)__            uri = URISupport.createURIWithQuery(uri, queryString)__        }_        return uri__    };creates,the,uri,to,invoke,param,exchange,the,exchange,param,url,the,url,to,invoke,param,endpoint,the,endpoint,return,the,uri,to,invoke;public,static,uri,create,uri,exchange,exchange,string,url,netty,http,endpoint,endpoint,throws,urisyntax,exception,uri,uri,new,uri,url,string,query,string,exchange,get,in,get,header,exchange,string,class,if,query,string,null,query,string,exchange,get,in,get,header,exchange,string,class,if,query,string,null,query,string,uri,get,raw,query,if,query,string,null,query,string,unsafe,uri,characters,encoder,encode,http,uri,query,string,uri,urisupport,create,uriwith,query,uri,query,string,return,uri
NettyHttpHelper -> public static URI createURI(Exchange exchange, String url, NettyHttpEndpoint endpoint) throws URISyntaxException;1465979012;Creates the URI to invoke.__@param exchange the exchange_@param url      the url to invoke_@param endpoint the endpoint_@return the URI to invoke;public static URI createURI(Exchange exchange, String url, NettyHttpEndpoint endpoint) throws URISyntaxException {_        URI uri = new URI(url)__        _        _        String queryString = exchange.getIn().getHeader(Exchange.HTTP_RAW_QUERY, String.class)__        if (queryString == null) {_            queryString = exchange.getIn().getHeader(Exchange.HTTP_QUERY, String.class)__        }_        if (queryString == null) {_            _            queryString = uri.getRawQuery()__        }_        if (queryString != null) {_            _            queryString = UnsafeUriCharactersEncoder.encodeHttpURI(queryString)__            uri = URISupport.createURIWithQuery(uri, queryString)__        }_        return uri__    };creates,the,uri,to,invoke,param,exchange,the,exchange,param,url,the,url,to,invoke,param,endpoint,the,endpoint,return,the,uri,to,invoke;public,static,uri,create,uri,exchange,exchange,string,url,netty,http,endpoint,endpoint,throws,urisyntax,exception,uri,uri,new,uri,url,string,query,string,exchange,get,in,get,header,exchange,string,class,if,query,string,null,query,string,exchange,get,in,get,header,exchange,string,class,if,query,string,null,query,string,uri,get,raw,query,if,query,string,null,query,string,unsafe,uri,characters,encoder,encode,http,uri,query,string,uri,urisupport,create,uriwith,query,uri,query,string,return,uri
NettyHttpHelper -> public static URI createURI(Exchange exchange, String url, NettyHttpEndpoint endpoint) throws URISyntaxException;1472223211;Creates the URI to invoke.__@param exchange the exchange_@param url      the url to invoke_@param endpoint the endpoint_@return the URI to invoke;public static URI createURI(Exchange exchange, String url, NettyHttpEndpoint endpoint) throws URISyntaxException {_        URI uri = new URI(url)___        _        String queryString = (String) exchange.getIn().removeHeader(Exchange.REST_HTTP_QUERY)__        _        _        if (queryString == null) {_            queryString = exchange.getIn().getHeader(Exchange.HTTP_RAW_QUERY, String.class)__        }_        if (queryString == null) {_            queryString = exchange.getIn().getHeader(Exchange.HTTP_QUERY, String.class)__        }_        if (queryString == null) {_            _            queryString = uri.getRawQuery()__        }_        if (queryString != null) {_            _            queryString = UnsafeUriCharactersEncoder.encodeHttpURI(queryString)__            uri = URISupport.createURIWithQuery(uri, queryString)__        }_        return uri__    };creates,the,uri,to,invoke,param,exchange,the,exchange,param,url,the,url,to,invoke,param,endpoint,the,endpoint,return,the,uri,to,invoke;public,static,uri,create,uri,exchange,exchange,string,url,netty,http,endpoint,endpoint,throws,urisyntax,exception,uri,uri,new,uri,url,string,query,string,string,exchange,get,in,remove,header,exchange,if,query,string,null,query,string,exchange,get,in,get,header,exchange,string,class,if,query,string,null,query,string,exchange,get,in,get,header,exchange,string,class,if,query,string,null,query,string,uri,get,raw,query,if,query,string,null,query,string,unsafe,uri,characters,encoder,encode,http,uri,query,string,uri,urisupport,create,uriwith,query,uri,query,string,return,uri
NettyHttpHelper -> public static URI createURI(Exchange exchange, String url, NettyHttpEndpoint endpoint) throws URISyntaxException;1495541549;Creates the URI to invoke.__@param exchange the exchange_@param url      the url to invoke_@param endpoint the endpoint_@return the URI to invoke;public static URI createURI(Exchange exchange, String url, NettyHttpEndpoint endpoint) throws URISyntaxException {_        URI uri = new URI(url)___        _        String queryString = (String) exchange.getIn().removeHeader(Exchange.REST_HTTP_QUERY)__        _        _        if (queryString == null) {_            queryString = exchange.getIn().getHeader(Exchange.HTTP_RAW_QUERY, String.class)__        }_        if (queryString == null) {_            queryString = exchange.getIn().getHeader(Exchange.HTTP_QUERY, String.class)__        }_        if (queryString == null) {_            _            queryString = uri.getRawQuery()__        }_        if (queryString != null) {_            _            queryString = UnsafeUriCharactersEncoder.encodeHttpURI(queryString)__            uri = URISupport.createURIWithQuery(uri, queryString)__        }_        return uri__    };creates,the,uri,to,invoke,param,exchange,the,exchange,param,url,the,url,to,invoke,param,endpoint,the,endpoint,return,the,uri,to,invoke;public,static,uri,create,uri,exchange,exchange,string,url,netty,http,endpoint,endpoint,throws,urisyntax,exception,uri,uri,new,uri,url,string,query,string,string,exchange,get,in,remove,header,exchange,if,query,string,null,query,string,exchange,get,in,get,header,exchange,string,class,if,query,string,null,query,string,exchange,get,in,get,header,exchange,string,class,if,query,string,null,query,string,uri,get,raw,query,if,query,string,null,query,string,unsafe,uri,characters,encoder,encode,http,uri,query,string,uri,urisupport,create,uriwith,query,uri,query,string,return,uri
NettyHttpHelper -> public static URI createURI(Exchange exchange, String url, NettyHttpEndpoint endpoint) throws URISyntaxException;1513617645;Creates the URI to invoke.__@param exchange the exchange_@param url      the url to invoke_@param endpoint the endpoint_@return the URI to invoke;public static URI createURI(Exchange exchange, String url, NettyHttpEndpoint endpoint) throws URISyntaxException {_        URI uri = new URI(url)___        _        String queryString = (String) exchange.getIn().removeHeader(Exchange.REST_HTTP_QUERY)__        _        _        if (queryString == null) {_            queryString = exchange.getIn().getHeader(Exchange.HTTP_RAW_QUERY, String.class)__        }_        if (queryString == null) {_            queryString = exchange.getIn().getHeader(Exchange.HTTP_QUERY, String.class)__        }_        if (queryString == null) {_            _            queryString = uri.getRawQuery()__        }_        if (queryString != null) {_            _            queryString = UnsafeUriCharactersEncoder.encodeHttpURI(queryString)__            uri = URISupport.createURIWithQuery(uri, queryString)__        }_        return uri__    };creates,the,uri,to,invoke,param,exchange,the,exchange,param,url,the,url,to,invoke,param,endpoint,the,endpoint,return,the,uri,to,invoke;public,static,uri,create,uri,exchange,exchange,string,url,netty,http,endpoint,endpoint,throws,urisyntax,exception,uri,uri,new,uri,url,string,query,string,string,exchange,get,in,remove,header,exchange,if,query,string,null,query,string,exchange,get,in,get,header,exchange,string,class,if,query,string,null,query,string,exchange,get,in,get,header,exchange,string,class,if,query,string,null,query,string,uri,get,raw,query,if,query,string,null,query,string,unsafe,uri,characters,encoder,encode,http,uri,query,string,uri,urisupport,create,uriwith,query,uri,query,string,return,uri
NettyHttpHelper -> public static URI createURI(Exchange exchange, String url, NettyHttpEndpoint endpoint) throws URISyntaxException;1524063141;Creates the URI to invoke.__@param exchange the exchange_@param url      the url to invoke_@param endpoint the endpoint_@return the URI to invoke;public static URI createURI(Exchange exchange, String url, NettyHttpEndpoint endpoint) throws URISyntaxException {_        URI uri = new URI(url)___        _        String queryString = (String) exchange.getIn().removeHeader(Exchange.REST_HTTP_QUERY)__        _        _        if (queryString == null) {_            queryString = exchange.getIn().getHeader(Exchange.HTTP_RAW_QUERY, String.class)__        }_        if (queryString == null) {_            queryString = exchange.getIn().getHeader(Exchange.HTTP_QUERY, String.class)__        }_        if (queryString == null) {_            _            queryString = uri.getRawQuery()__        }_        if (queryString != null) {_            _            queryString = UnsafeUriCharactersEncoder.encodeHttpURI(queryString)__            uri = URISupport.createURIWithQuery(uri, queryString)__        }_        return uri__    };creates,the,uri,to,invoke,param,exchange,the,exchange,param,url,the,url,to,invoke,param,endpoint,the,endpoint,return,the,uri,to,invoke;public,static,uri,create,uri,exchange,exchange,string,url,netty,http,endpoint,endpoint,throws,urisyntax,exception,uri,uri,new,uri,url,string,query,string,string,exchange,get,in,remove,header,exchange,if,query,string,null,query,string,exchange,get,in,get,header,exchange,string,class,if,query,string,null,query,string,exchange,get,in,get,header,exchange,string,class,if,query,string,null,query,string,uri,get,raw,query,if,query,string,null,query,string,unsafe,uri,characters,encoder,encode,http,uri,query,string,uri,urisupport,create,uriwith,query,uri,query,string,return,uri
NettyHttpHelper -> public static URI createURI(Exchange exchange, String url, NettyHttpEndpoint endpoint) throws URISyntaxException;1535969486;Creates the URI to invoke.__@param exchange the exchange_@param url      the url to invoke_@param endpoint the endpoint_@return the URI to invoke;public static URI createURI(Exchange exchange, String url, NettyHttpEndpoint endpoint) throws URISyntaxException {_        URI uri = new URI(url)___        _        String queryString = (String) exchange.getIn().removeHeader(Exchange.REST_HTTP_QUERY)__        _        _        if (queryString == null) {_            queryString = exchange.getIn().getHeader(Exchange.HTTP_RAW_QUERY, String.class)__        }_        if (queryString == null) {_            queryString = exchange.getIn().getHeader(Exchange.HTTP_QUERY, String.class)__        }_        if (queryString == null) {_            _            queryString = uri.getRawQuery()__        }_        if (queryString != null) {_            _            queryString = UnsafeUriCharactersEncoder.encodeHttpURI(queryString)__            uri = URISupport.createURIWithQuery(uri, queryString)__        }_        return uri__    };creates,the,uri,to,invoke,param,exchange,the,exchange,param,url,the,url,to,invoke,param,endpoint,the,endpoint,return,the,uri,to,invoke;public,static,uri,create,uri,exchange,exchange,string,url,netty,http,endpoint,endpoint,throws,urisyntax,exception,uri,uri,new,uri,url,string,query,string,string,exchange,get,in,remove,header,exchange,if,query,string,null,query,string,exchange,get,in,get,header,exchange,string,class,if,query,string,null,query,string,exchange,get,in,get,header,exchange,string,class,if,query,string,null,query,string,uri,get,raw,query,if,query,string,null,query,string,unsafe,uri,characters,encoder,encode,http,uri,query,string,uri,urisupport,create,uriwith,query,uri,query,string,return,uri
NettyHttpHelper -> public static URI createURI(Exchange exchange, String url, NettyHttpEndpoint endpoint) throws URISyntaxException;1540108158;Creates the URI to invoke.__@param exchange the exchange_@param url      the url to invoke_@param endpoint the endpoint_@return the URI to invoke;public static URI createURI(Exchange exchange, String url, NettyHttpEndpoint endpoint) throws URISyntaxException {_        URI uri = new URI(url)___        _        String queryString = (String) exchange.getIn().removeHeader(Exchange.REST_HTTP_QUERY)__        _        _        if (queryString == null) {_            queryString = exchange.getIn().getHeader(Exchange.HTTP_RAW_QUERY, String.class)__        }_        if (queryString == null) {_            queryString = exchange.getIn().getHeader(Exchange.HTTP_QUERY, String.class)__        }_        if (queryString == null) {_            _            queryString = uri.getRawQuery()__        }_        if (queryString != null) {_            _            queryString = UnsafeUriCharactersEncoder.encodeHttpURI(queryString)__            uri = URISupport.createURIWithQuery(uri, queryString)__        }_        return uri__    };creates,the,uri,to,invoke,param,exchange,the,exchange,param,url,the,url,to,invoke,param,endpoint,the,endpoint,return,the,uri,to,invoke;public,static,uri,create,uri,exchange,exchange,string,url,netty,http,endpoint,endpoint,throws,urisyntax,exception,uri,uri,new,uri,url,string,query,string,string,exchange,get,in,remove,header,exchange,if,query,string,null,query,string,exchange,get,in,get,header,exchange,string,class,if,query,string,null,query,string,exchange,get,in,get,header,exchange,string,class,if,query,string,null,query,string,uri,get,raw,query,if,query,string,null,query,string,unsafe,uri,characters,encoder,encode,http,uri,query,string,uri,urisupport,create,uriwith,query,uri,query,string,return,uri
NettyHttpHelper -> public static URI createURI(Exchange exchange, String url, NettyHttpEndpoint endpoint) throws URISyntaxException;1540108163;Creates the URI to invoke.__@param exchange the exchange_@param url      the url to invoke_@param endpoint the endpoint_@return the URI to invoke;public static URI createURI(Exchange exchange, String url, NettyHttpEndpoint endpoint) throws URISyntaxException {_        URI uri = new URI(url)___        _        String queryString = (String) exchange.getIn().removeHeader(Exchange.REST_HTTP_QUERY)__        _        _        if (queryString == null) {_            queryString = exchange.getIn().getHeader(Exchange.HTTP_RAW_QUERY, String.class)__        }_        if (queryString == null) {_            queryString = exchange.getIn().getHeader(Exchange.HTTP_QUERY, String.class)__        }_        if (queryString == null) {_            _            queryString = uri.getRawQuery()__        }_        if (queryString != null) {_            _            queryString = UnsafeUriCharactersEncoder.encodeHttpURI(queryString)__            uri = URISupport.createURIWithQuery(uri, queryString)__        }_        return uri__    };creates,the,uri,to,invoke,param,exchange,the,exchange,param,url,the,url,to,invoke,param,endpoint,the,endpoint,return,the,uri,to,invoke;public,static,uri,create,uri,exchange,exchange,string,url,netty,http,endpoint,endpoint,throws,urisyntax,exception,uri,uri,new,uri,url,string,query,string,string,exchange,get,in,remove,header,exchange,if,query,string,null,query,string,exchange,get,in,get,header,exchange,string,class,if,query,string,null,query,string,exchange,get,in,get,header,exchange,string,class,if,query,string,null,query,string,uri,get,raw,query,if,query,string,null,query,string,unsafe,uri,characters,encoder,encode,http,uri,query,string,uri,urisupport,create,uriwith,query,uri,query,string,return,uri
NettyHttpHelper -> public static URI createURI(Exchange exchange, String url, NettyHttpEndpoint endpoint) throws URISyntaxException;1540108164;Creates the URI to invoke.__@param exchange the exchange_@param url      the url to invoke_@param endpoint the endpoint_@return the URI to invoke;public static URI createURI(Exchange exchange, String url, NettyHttpEndpoint endpoint) throws URISyntaxException {_        URI uri = new URI(url)___        _        String queryString = (String) exchange.getIn().removeHeader(Exchange.REST_HTTP_QUERY)__        _        _        if (queryString == null) {_            queryString = exchange.getIn().getHeader(Exchange.HTTP_RAW_QUERY, String.class)__        }_        if (queryString == null) {_            queryString = exchange.getIn().getHeader(Exchange.HTTP_QUERY, String.class)__        }_        if (queryString == null) {_            _            queryString = uri.getRawQuery()__        }_        if (queryString != null) {_            _            queryString = UnsafeUriCharactersEncoder.encodeHttpURI(queryString)__            uri = URISupport.createURIWithQuery(uri, queryString)__        }_        return uri__    };creates,the,uri,to,invoke,param,exchange,the,exchange,param,url,the,url,to,invoke,param,endpoint,the,endpoint,return,the,uri,to,invoke;public,static,uri,create,uri,exchange,exchange,string,url,netty,http,endpoint,endpoint,throws,urisyntax,exception,uri,uri,new,uri,url,string,query,string,string,exchange,get,in,remove,header,exchange,if,query,string,null,query,string,exchange,get,in,get,header,exchange,string,class,if,query,string,null,query,string,exchange,get,in,get,header,exchange,string,class,if,query,string,null,query,string,uri,get,raw,query,if,query,string,null,query,string,unsafe,uri,characters,encoder,encode,http,uri,query,string,uri,urisupport,create,uriwith,query,uri,query,string,return,uri
