commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected AbstractApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("DNSDig.xml"). }
false;public;1;4;;public boolean matches(Exchange exchange) {     String str = ((Message) exchange.getIn().getBody()).getSectionArray(Section.ANSWER)[0].rdataToString().     return RESPONSE_MONKEY.equals(str). }
false;public;0;16;;@Test @Ignore("Testing behind nat produces timeouts") public void testDigForMonkey() throws Exception {     resultEndpoint.expectedMessageCount(1).     resultEndpoint.expectedMessagesMatches(new Predicate() {          public boolean matches(Exchange exchange) {             String str = ((Message) exchange.getIn().getBody()).getSectionArray(Section.ANSWER)[0].rdataToString().             return RESPONSE_MONKEY.equals(str).         }     }).     Map<String, Object> headers = new HashMap<>().     headers.put("dns.name", "monkey.wp.dg.cx").     headers.put("dns.type", "TXT").     template.sendBodyAndHeaders(null, headers).     resultEndpoint.assertIsSatisfied(). }
