commented;modifiers;parameterAmount;loc;comment;code
true;public,static;1;10;/**  * Find the _Fields constant that matches fieldId, or null if its not found.  */ ;/**  * Find the _Fields constant that matches fieldId, or null if its not found.  */ public static _Fields findByThriftId(int fieldId) {     switch(fieldId) {         case // WHAT_OP         1:             return WHAT_OP.         case // WHY         2:             return WHY.         default:             return null.     } }
true;public,static;1;5;/**  * Find the _Fields constant that matches fieldId, throwing an exception  * if it is not found.  */ ;/**  * Find the _Fields constant that matches fieldId, throwing an exception  * if it is not found.  */ public static _Fields findByThriftIdOrThrow(int fieldId) {     _Fields fields = findByThriftId(fieldId).     if (fields == null)         throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!").     return fields. }
true;public,static;1;3;/**  * Find the _Fields constant that matches name, or null if its not found.  */ ;/**  * Find the _Fields constant that matches name, or null if its not found.  */ public static _Fields findByName(java.lang.String name) {     return byName.get(name). }
false;public;0;3;;public short getThriftFieldId() {     return _thriftId. }
false;public;0;3;;public java.lang.String getFieldName() {     return _fieldName. }
false;public;0;3;;public InvalidOperation deepCopy() {     return new InvalidOperation(this). }
false;public;0;6;;@Override public void clear() {     setWhatOpIsSet(false).     this.whatOp = 0.     this.why = null. }
false;public;0;3;;public int getWhatOp() {     return this.whatOp. }
false;public;1;5;;public InvalidOperation setWhatOp(int whatOp) {     this.whatOp = whatOp.     setWhatOpIsSet(true).     return this. }
false;public;0;3;;public void unsetWhatOp() {     __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __WHATOP_ISSET_ID). }
true;public;0;3;/**  * Returns true if field whatOp is set (has been assigned a value) and false otherwise  */ ;/**  * Returns true if field whatOp is set (has been assigned a value) and false otherwise  */ public boolean isSetWhatOp() {     return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __WHATOP_ISSET_ID). }
false;public;1;3;;public void setWhatOpIsSet(boolean value) {     __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __WHATOP_ISSET_ID, value). }
false;public;0;3;;public java.lang.String getWhy() {     return this.why. }
false;public;1;4;;public InvalidOperation setWhy(java.lang.String why) {     this.why = why.     return this. }
false;public;0;3;;public void unsetWhy() {     this.why = null. }
true;public;0;3;/**  * Returns true if field why is set (has been assigned a value) and false otherwise  */ ;/**  * Returns true if field why is set (has been assigned a value) and false otherwise  */ public boolean isSetWhy() {     return this.why != null. }
false;public;1;5;;public void setWhyIsSet(boolean value) {     if (!value) {         this.why = null.     } }
false;public;2;20;;public void setFieldValue(_Fields field, java.lang.Object value) {     switch(field) {         case WHAT_OP:             if (value == null) {                 unsetWhatOp().             } else {                 setWhatOp((java.lang.Integer) value).             }             break.         case WHY:             if (value == null) {                 unsetWhy().             } else {                 setWhy((java.lang.String) value).             }             break.     } }
false;public;1;11;;public java.lang.Object getFieldValue(_Fields field) {     switch(field) {         case WHAT_OP:             return getWhatOp().         case WHY:             return getWhy().     }     throw new java.lang.IllegalStateException(). }
true;public;1;13;/**  * Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise  */ ;/**  * Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise  */ public boolean isSet(_Fields field) {     if (field == null) {         throw new java.lang.IllegalArgumentException().     }     switch(field) {         case WHAT_OP:             return isSetWhatOp().         case WHY:             return isSetWhy().     }     throw new java.lang.IllegalStateException(). }
false;public;1;8;;@Override public boolean equals(java.lang.Object that) {     if (that == null)         return false.     if (that instanceof InvalidOperation)         return this.equals((InvalidOperation) that).     return false. }
false;public;1;26;;public boolean equals(InvalidOperation that) {     if (that == null)         return false.     if (this == that)         return true.     boolean this_present_whatOp = true.     boolean that_present_whatOp = true.     if (this_present_whatOp || that_present_whatOp) {         if (!(this_present_whatOp && that_present_whatOp))             return false.         if (this.whatOp != that.whatOp)             return false.     }     boolean this_present_why = true && this.isSetWhy().     boolean that_present_why = true && that.isSetWhy().     if (this_present_why || that_present_why) {         if (!(this_present_why && that_present_why))             return false.         if (!this.why.equals(that.why))             return false.     }     return true. }
false;public;0;12;;@Override public int hashCode() {     int hashCode = 1.     hashCode = hashCode * 8191 + whatOp.     hashCode = hashCode * 8191 + ((isSetWhy()) ? 131071 : 524287).     if (isSetWhy())         hashCode = hashCode * 8191 + why.hashCode().     return hashCode. }
false;public;1;30;;@Override public int compareTo(InvalidOperation other) {     if (!getClass().equals(other.getClass())) {         return getClass().getName().compareTo(other.getClass().getName()).     }     int lastComparison = 0.     lastComparison = java.lang.Boolean.valueOf(isSetWhatOp()).compareTo(other.isSetWhatOp()).     if (lastComparison != 0) {         return lastComparison.     }     if (isSetWhatOp()) {         lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.whatOp, other.whatOp).         if (lastComparison != 0) {             return lastComparison.         }     }     lastComparison = java.lang.Boolean.valueOf(isSetWhy()).compareTo(other.isSetWhy()).     if (lastComparison != 0) {         return lastComparison.     }     if (isSetWhy()) {         lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.why, other.why).         if (lastComparison != 0) {             return lastComparison.         }     }     return 0. }
false;public;1;3;;public _Fields fieldForId(int fieldId) {     return _Fields.findByThriftId(fieldId). }
false;public;1;3;;public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {     scheme(iprot).read(iprot, this). }
false;public;1;3;;public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {     scheme(oprot).write(oprot, this). }
false;public;0;19;;@Override public java.lang.String toString() {     java.lang.StringBuilder sb = new java.lang.StringBuilder("InvalidOperation(").     boolean first = true.     sb.append("whatOp:").     sb.append(this.whatOp).     first = false.     if (!first)         sb.append(", ").     sb.append("why:").     if (this.why == null) {         sb.append("null").     } else {         sb.append(this.why).     }     first = false.     sb.append(")").     return sb.toString(). }
false;public;0;4;;public void validate() throws org.apache.thrift.TException { // check for required fields // check for sub-struct validity }
false;private;1;7;;private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {     try {         write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out))).     } catch (org.apache.thrift.TException te) {         throw new java.io.IOException(te).     } }
false;private;1;9;;private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {     try {         // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.         __isset_bitfield = 0.         read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in))).     } catch (org.apache.thrift.TException te) {         throw new java.io.IOException(te).     } }
false;public;0;3;;public InvalidOperationStandardScheme getScheme() {     return new InvalidOperationStandardScheme(). }
false;public;2;36;;public void read(org.apache.thrift.protocol.TProtocol iprot, InvalidOperation struct) throws org.apache.thrift.TException {     org.apache.thrift.protocol.TField schemeField.     iprot.readStructBegin().     while (true) {         schemeField = iprot.readFieldBegin().         if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {             break.         }         switch(schemeField.id) {             case // WHAT_OP             1:                 if (schemeField.type == org.apache.thrift.protocol.TType.I32) {                     struct.whatOp = iprot.readI32().                     struct.setWhatOpIsSet(true).                 } else {                     org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type).                 }                 break.             case // WHY             2:                 if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {                     struct.why = iprot.readString().                     struct.setWhyIsSet(true).                 } else {                     org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type).                 }                 break.             default:                 org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type).         }         iprot.readFieldEnd().     }     iprot.readStructEnd().     // check for required fields of primitive type, which can't be checked in the validate method     struct.validate(). }
false;public;2;15;;public void write(org.apache.thrift.protocol.TProtocol oprot, InvalidOperation struct) throws org.apache.thrift.TException {     struct.validate().     oprot.writeStructBegin(STRUCT_DESC).     oprot.writeFieldBegin(WHAT_OP_FIELD_DESC).     oprot.writeI32(struct.whatOp).     oprot.writeFieldEnd().     if (struct.why != null) {         oprot.writeFieldBegin(WHY_FIELD_DESC).         oprot.writeString(struct.why).         oprot.writeFieldEnd().     }     oprot.writeFieldStop().     oprot.writeStructEnd(). }
false;public;0;3;;public InvalidOperationTupleScheme getScheme() {     return new InvalidOperationTupleScheme(). }
false;public;2;18;;@Override public void write(org.apache.thrift.protocol.TProtocol prot, InvalidOperation struct) throws org.apache.thrift.TException {     org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot.     java.util.BitSet optionals = new java.util.BitSet().     if (struct.isSetWhatOp()) {         optionals.set(0).     }     if (struct.isSetWhy()) {         optionals.set(1).     }     oprot.writeBitSet(optionals, 2).     if (struct.isSetWhatOp()) {         oprot.writeI32(struct.whatOp).     }     if (struct.isSetWhy()) {         oprot.writeString(struct.why).     } }
false;public;2;13;;@Override public void read(org.apache.thrift.protocol.TProtocol prot, InvalidOperation struct) throws org.apache.thrift.TException {     org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot.     java.util.BitSet incoming = iprot.readBitSet(2).     if (incoming.get(0)) {         struct.whatOp = iprot.readI32().         struct.setWhatOpIsSet(true).     }     if (incoming.get(1)) {         struct.why = iprot.readString().         struct.setWhyIsSet(true).     } }
false;private,static;1;3;;private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {     return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme(). }
