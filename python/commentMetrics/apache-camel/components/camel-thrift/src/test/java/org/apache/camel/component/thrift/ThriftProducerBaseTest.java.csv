commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;public void run() {     LOG.info("Thrift server started on port: {}", THRIFT_TEST_PORT).     server.serve(). }
false;public,static;0;14;;@BeforeClass @SuppressWarnings({ "unchecked", "rawtypes" }) public static void startThriftServer() throws Exception {     processor = new Calculator.Processor(new CalculatorSyncServerImpl()).     serverTransport = new TNonblockingServerSocket(THRIFT_TEST_PORT).     server = new THsHaServer(new Args(serverTransport).processor(processor)).     Runnable simple = new Runnable() {          public void run() {             LOG.info("Thrift server started on port: {}", THRIFT_TEST_PORT).             server.serve().         }     }.     new Thread(simple).start(). }
false;public,static;0;8;;@AfterClass public static void stopThriftServer() throws IOException {     if (server != null) {         server.stop().         serverTransport.close().         LOG.info("Thrift server stoped").     } }
