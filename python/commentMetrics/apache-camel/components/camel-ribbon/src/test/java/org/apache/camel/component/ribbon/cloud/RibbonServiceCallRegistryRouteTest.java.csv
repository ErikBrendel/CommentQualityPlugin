commented;modifiers;parameterAmount;loc;comment;code
false;public;0;31;;@Override public void configure() throws Exception {     // setup a static ribbon server list with these 2 servers to start with     StaticServiceDiscovery servers = new StaticServiceDiscovery().     servers.addServer("myService@localhost:9090").     servers.addServer("myService@localhost:9091").     RibbonConfiguration configuration = new RibbonConfiguration().     RibbonServiceLoadBalancer loadBalancer = new RibbonServiceLoadBalancer(configuration).     // configure camel service call     ServiceCallConfigurationDefinition config = new ServiceCallConfigurationDefinition().     config.setLoadBalancer(loadBalancer).     config.setServiceDiscovery(servers).     // register configuration     context.setServiceCallConfiguration(config).     from("direct:start").serviceCall().name("myService").component("jetty").end().to("mock:result").     from("jetty:http://localhost:9090").to("mock:9090").transform().constant("9090").     from("jetty:http://localhost:9091").to("mock:9091").transform().constant("9091"). }
false;protected;0;36;;@Override protected RoutesBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // setup a static ribbon server list with these 2 servers to start with             StaticServiceDiscovery servers = new StaticServiceDiscovery().             servers.addServer("myService@localhost:9090").             servers.addServer("myService@localhost:9091").             RibbonConfiguration configuration = new RibbonConfiguration().             RibbonServiceLoadBalancer loadBalancer = new RibbonServiceLoadBalancer(configuration).             // configure camel service call             ServiceCallConfigurationDefinition config = new ServiceCallConfigurationDefinition().             config.setLoadBalancer(loadBalancer).             config.setServiceDiscovery(servers).             // register configuration             context.setServiceCallConfiguration(config).             from("direct:start").serviceCall().name("myService").component("jetty").end().to("mock:result").             from("jetty:http://localhost:9090").to("mock:9090").transform().constant("9090").             from("jetty:http://localhost:9091").to("mock:9091").transform().constant("9091").         }     }. }
