commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;5;;@Override protected void doStart() throws Exception {     super.doStart().     this.tracker.open(). }
false;protected;0;5;;@Override protected void doStop() throws Exception {     this.tracker.close().     super.doStop(). }
false;public;1;13;;public void process(Exchange exchange) throws Exception {     EventAdmin admin = (EventAdmin) this.tracker.getService().     if (admin != null) {         Event event = getEvent(exchange).         if (endpoint.isSend()) {             admin.sendEvent(event).         } else {             admin.postEvent(event).         }     } else {         throw new CamelExchangeException("EventAdmin service not present", exchange).     } }
false;protected;1;11;;protected String getTopic(Exchange exchange) {     Message in = exchange.getIn().     String topic = in.getHeader(EventAdminConstants.EVENTADMIN_TOPIC, String.class).     if (topic != null) {         in.removeHeader(EventAdminConstants.EVENTADMIN_TOPIC).     }     if (topic == null) {         topic = endpoint.getTopic().     }     return topic. }
false;protected;1;11;;protected Event getEvent(Exchange exchange) {     Message in = exchange.getIn().     CamelContext context = endpoint.getCamelContext().     Event event = context.getTypeConverter().convertTo(Event.class, exchange, in.getBody()).     if (event == null) {         String topic = getTopic(exchange).         Dictionary<String, ?> props = getProperties(exchange).         event = new Event(topic, props).     }     return event. }
false;protected;1;15;;protected Dictionary<String, ?> getProperties(Exchange exchange) {     Message in = exchange.getIn().     CamelContext context = endpoint.getCamelContext().     Map<?, ?> map = context.getTypeConverter().convertTo(Map.class, exchange, in.getBody()).     Dictionary<String, Object> dict = new Hashtable<>().     for (Entry<?, ?> entry : map.entrySet()) {         String keyString = CamelContextHelper.convertTo(context, String.class, entry.getKey()).         if (keyString != null) {             Object val = entry.getValue().             // TODO: convert to acceptable value             dict.put(keyString, val).         }     }     return dict. }
