commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;16;;@Override protected CamelContext createCamelContext() throws Exception {     CamelContext context = super.createCamelContext().     zipkin = new ZipkinTracer().     // we have one route as service     zipkin.addClientServiceMapping("seda:cat", "cat").     zipkin.addServerServiceMapping("seda:cat", "cat").     // should auto configure as we have not setup a span reporter     // NOTE: this won't work unless you have an auto-configuration file in src/test/resources     // attaching ourself to CamelContext     zipkin.init(context).     return context. }
false;public;0;4;;@Test public void testZipkinRoute() throws Exception {     template.requestBody("direct:start", "Hello Cat"). }
false;public;0;8;;@Override public void configure() throws Exception {     from("direct:start").to("seda:cat").     from("seda:cat").routeId("cat").log("routing at ${routeId}").delay(simple("${random(1000,2000)}")). }
false;protected;0;13;;@Override protected RoutesBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("seda:cat").             from("seda:cat").routeId("cat").log("routing at ${routeId}").delay(simple("${random(1000,2000)}")).         }     }. }
