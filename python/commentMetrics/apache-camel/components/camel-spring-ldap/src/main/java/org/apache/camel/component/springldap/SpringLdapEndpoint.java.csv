# id;timestamp;commentText;codeText;commentWords;codeWords
SpringLdapEndpoint -> public void setScope(String scope);1361264210;sets the scope of the LDAP operation. The scope string must be one of "object", "onelevel", or "subtree"_@param scope;public void setScope(String scope) {_        for (Entry<String, Integer> allowedScope : scopeMap.entrySet()) {_            if (allowedScope.getKey().equals(scope)) {_                this.scope = allowedScope.getValue()__                return__            }_        }_        throw new UnsupportedOperationException(_                "Search scope '"_                        + scope_                        + "' is not supported. The supported scopes are 'object', 'onelevel', and 'subtree'.")__    };sets,the,scope,of,the,ldap,operation,the,scope,string,must,be,one,of,object,onelevel,or,subtree,param,scope;public,void,set,scope,string,scope,for,entry,string,integer,allowed,scope,scope,map,entry,set,if,allowed,scope,get,key,equals,scope,this,scope,allowed,scope,get,value,return,throw,new,unsupported,operation,exception,search,scope,scope,is,not,supported,the,supported,scopes,are,object,onelevel,and,subtree
SpringLdapEndpoint -> public void setScope(String scope);1420366014;sets the scope of the LDAP operation. The scope string must be one of "object = 0", "onelevel = 1", or "subtree = 2";public void setScope(String scope) {_        for (Entry<String, Integer> allowedScope : scopeMap.entrySet()) {_            if (allowedScope.getKey().equals(scope)) {_                this.scope = allowedScope.getValue()__                return__            }_        }_        throw new UnsupportedOperationException(_                "Search scope '"_                        + scope_                        + "' is not supported. The supported scopes are 'object', 'onelevel', and 'subtree'.")__    };sets,the,scope,of,the,ldap,operation,the,scope,string,must,be,one,of,object,0,onelevel,1,or,subtree,2;public,void,set,scope,string,scope,for,entry,string,integer,allowed,scope,scope,map,entry,set,if,allowed,scope,get,key,equals,scope,this,scope,allowed,scope,get,value,return,throw,new,unsupported,operation,exception,search,scope,scope,is,not,supported,the,supported,scopes,are,object,onelevel,and,subtree
SpringLdapEndpoint -> public void setScope(String scope);1423750791;sets the scope of the LDAP operation. The scope string must be one of "object = 0", "onelevel = 1", or "subtree = 2";public void setScope(String scope) {_        for (Entry<String, Integer> allowedScope : scopeMap.entrySet()) {_            if (allowedScope.getKey().equals(scope)) {_                this.scope = allowedScope.getValue()__                return__            }_        }_        throw new UnsupportedOperationException(_                "Search scope '"_                        + scope_                        + "' is not supported. The supported scopes are 'object', 'onelevel', and 'subtree'.")__    };sets,the,scope,of,the,ldap,operation,the,scope,string,must,be,one,of,object,0,onelevel,1,or,subtree,2;public,void,set,scope,string,scope,for,entry,string,integer,allowed,scope,scope,map,entry,set,if,allowed,scope,get,key,equals,scope,this,scope,allowed,scope,get,value,return,throw,new,unsupported,operation,exception,search,scope,scope,is,not,supported,the,supported,scopes,are,object,onelevel,and,subtree
SpringLdapEndpoint -> public void setScope(String scope);1425148387;sets the scope of the LDAP operation. The scope string must be one of "object = 0", "onelevel = 1", or "subtree = 2";public void setScope(String scope) {_        for (Entry<String, Integer> allowedScope : scopeMap.entrySet()) {_            if (allowedScope.getKey().equals(scope)) {_                this.scope = allowedScope.getValue()__                return__            }_        }_        throw new UnsupportedOperationException(_                "Search scope '"_                        + scope_                        + "' is not supported. The supported scopes are 'object', 'onelevel', and 'subtree'.")__    };sets,the,scope,of,the,ldap,operation,the,scope,string,must,be,one,of,object,0,onelevel,1,or,subtree,2;public,void,set,scope,string,scope,for,entry,string,integer,allowed,scope,scope,map,entry,set,if,allowed,scope,get,key,equals,scope,this,scope,allowed,scope,get,value,return,throw,new,unsupported,operation,exception,search,scope,scope,is,not,supported,the,supported,scopes,are,object,onelevel,and,subtree
SpringLdapEndpoint -> public void setScope(String scope);1427402378;sets the scope of the LDAP operation. The scope string must be one of "object = 0", "onelevel = 1", or "subtree = 2";public void setScope(String scope) {_        for (Entry<String, Integer> allowedScope : scopeMap.entrySet()) {_            if (allowedScope.getKey().equals(scope)) {_                this.scope = allowedScope.getValue()__                return__            }_        }_        throw new UnsupportedOperationException(_                "Search scope '"_                        + scope_                        + "' is not supported. The supported scopes are 'object', 'onelevel', and 'subtree'.")__    };sets,the,scope,of,the,ldap,operation,the,scope,string,must,be,one,of,object,0,onelevel,1,or,subtree,2;public,void,set,scope,string,scope,for,entry,string,integer,allowed,scope,scope,map,entry,set,if,allowed,scope,get,key,equals,scope,this,scope,allowed,scope,get,value,return,throw,new,unsupported,operation,exception,search,scope,scope,is,not,supported,the,supported,scopes,are,object,onelevel,and,subtree
SpringLdapEndpoint -> public void setScope(String scope);1430199001;The scope of the search operation.;public void setScope(String scope) {_        this.scope = scope__    };the,scope,of,the,search,operation;public,void,set,scope,string,scope,this,scope,scope
SpringLdapEndpoint -> public void setScope(String scope);1451237129;The scope of the search operation.;public void setScope(String scope) {_        this.scope = scope__    };the,scope,of,the,search,operation;public,void,set,scope,string,scope,this,scope,scope
SpringLdapEndpoint -> public void setScope(String scope);1486028039;The scope of the search operation.;public void setScope(String scope) {_        this.scope = scope__    };the,scope,of,the,search,operation;public,void,set,scope,string,scope,this,scope,scope
SpringLdapEndpoint -> public void setScope(String scope);1540108163;The scope of the search operation.;public void setScope(String scope) {_        this.scope = scope__    };the,scope,of,the,search,operation;public,void,set,scope,string,scope,this,scope,scope
SpringLdapEndpoint -> public void setScope(String scope);1547240981;The scope of the search operation.;public void setScope(String scope) {_        this.scope = scope__    };the,scope,of,the,search,operation;public,void,set,scope,string,scope,this,scope,scope
SpringLdapEndpoint -> public void setScope(String scope);1548508056;The scope of the search operation.;public void setScope(String scope) {_        this.scope = scope__    };the,scope,of,the,search,operation;public,void,set,scope,string,scope,this,scope,scope
SpringLdapEndpoint -> @Override     public Consumer createConsumer(Processor processor) throws Exception;1361264210;Consumer endpoints are not supported._@throw UnsupportedOperationException;@Override_    public Consumer createConsumer(Processor processor) throws Exception {_        throw new UnsupportedOperationException(_                "spring-ldap endpoint supports producer enrpoint only.")__    };consumer,endpoints,are,not,supported,throw,unsupported,operation,exception;override,public,consumer,create,consumer,processor,processor,throws,exception,throw,new,unsupported,operation,exception,spring,ldap,endpoint,supports,producer,enrpoint,only
SpringLdapEndpoint -> @Override     public Consumer createConsumer(Processor processor) throws Exception;1420366014;Consumer endpoints are not supported._@throw UnsupportedOperationException;@Override_    public Consumer createConsumer(Processor processor) throws Exception {_        throw new UnsupportedOperationException(_                "spring-ldap endpoint supports producer enrpoint only.")__    };consumer,endpoints,are,not,supported,throw,unsupported,operation,exception;override,public,consumer,create,consumer,processor,processor,throws,exception,throw,new,unsupported,operation,exception,spring,ldap,endpoint,supports,producer,enrpoint,only
SpringLdapEndpoint -> @Override     public Consumer createConsumer(Processor processor) throws Exception;1423750791;Consumer endpoints are not supported._@throw UnsupportedOperationException;@Override_    public Consumer createConsumer(Processor processor) throws Exception {_        throw new UnsupportedOperationException(_                "spring-ldap endpoint supports producer enrpoint only.")__    };consumer,endpoints,are,not,supported,throw,unsupported,operation,exception;override,public,consumer,create,consumer,processor,processor,throws,exception,throw,new,unsupported,operation,exception,spring,ldap,endpoint,supports,producer,enrpoint,only
SpringLdapEndpoint -> @Override     public Consumer createConsumer(Processor processor) throws Exception;1425148387;Consumer endpoints are not supported._@throw UnsupportedOperationException;@Override_    public Consumer createConsumer(Processor processor) throws Exception {_        throw new UnsupportedOperationException(_                "spring-ldap endpoint supports producer enrpoint only.")__    };consumer,endpoints,are,not,supported,throw,unsupported,operation,exception;override,public,consumer,create,consumer,processor,processor,throws,exception,throw,new,unsupported,operation,exception,spring,ldap,endpoint,supports,producer,enrpoint,only
SpringLdapEndpoint -> @Override     public Consumer createConsumer(Processor processor) throws Exception;1427402378;Consumer endpoints are not supported._@throw UnsupportedOperationException;@Override_    public Consumer createConsumer(Processor processor) throws Exception {_        throw new UnsupportedOperationException(_                "spring-ldap endpoint supports producer enrpoint only.")__    };consumer,endpoints,are,not,supported,throw,unsupported,operation,exception;override,public,consumer,create,consumer,processor,processor,throws,exception,throw,new,unsupported,operation,exception,spring,ldap,endpoint,supports,producer,enrpoint,only
SpringLdapEndpoint -> public void setOperation(String operation);1361264210;Sets the LDAP operation to be performed. The supported operations are defined in org.apache.camel.component.springldap.LdapOperation.;public void setOperation(String operation) {_        for (Entry<String, LdapOperation> allowedOperation : operationMap_                .entrySet()) {_            if (allowedOperation.getKey().equalsIgnoreCase(operation)) {_                this.operation = allowedOperation.getValue()__                return__            }_        }_        throw new UnsupportedOperationException(_                "LDAP operation '"_                        + operation_                        + "' is not supported. The supported operations are 'search', 'bind', and 'unbind'.")__    };sets,the,ldap,operation,to,be,performed,the,supported,operations,are,defined,in,org,apache,camel,component,springldap,ldap,operation;public,void,set,operation,string,operation,for,entry,string,ldap,operation,allowed,operation,operation,map,entry,set,if,allowed,operation,get,key,equals,ignore,case,operation,this,operation,allowed,operation,get,value,return,throw,new,unsupported,operation,exception,ldap,operation,operation,is,not,supported,the,supported,operations,are,search,bind,and,unbind
SpringLdapEndpoint -> public void setOperation(String operation);1420366014;Sets the LDAP operation to be performed. The supported operations are defined in org.apache.camel.component.springldap.LdapOperation.;public void setOperation(String operation) {_        for (Entry<String, LdapOperation> allowedOperation : operationMap_                .entrySet()) {_            if (allowedOperation.getKey().equalsIgnoreCase(operation)) {_                this.operation = allowedOperation.getValue()__                return__            }_        }_        throw new UnsupportedOperationException(_                "LDAP operation '"_                        + operation_                        + "' is not supported. The supported operations are 'search', 'bind', and 'unbind'.")__    };sets,the,ldap,operation,to,be,performed,the,supported,operations,are,defined,in,org,apache,camel,component,springldap,ldap,operation;public,void,set,operation,string,operation,for,entry,string,ldap,operation,allowed,operation,operation,map,entry,set,if,allowed,operation,get,key,equals,ignore,case,operation,this,operation,allowed,operation,get,value,return,throw,new,unsupported,operation,exception,ldap,operation,operation,is,not,supported,the,supported,operations,are,search,bind,and,unbind
SpringLdapEndpoint -> public void setOperation(String operation);1423750791;Sets the LDAP operation to be performed. The supported operations are defined in org.apache.camel.component.springldap.LdapOperation.;public void setOperation(String operation) {_        for (Entry<String, LdapOperation> allowedOperation : operationMap_                .entrySet()) {_            if (allowedOperation.getKey().equalsIgnoreCase(operation)) {_                this.operation = allowedOperation.getValue()__                return__            }_        }_        throw new UnsupportedOperationException(_                "LDAP operation '"_                        + operation_                        + "' is not supported. The supported operations are 'search', 'bind', and 'unbind'.")__    };sets,the,ldap,operation,to,be,performed,the,supported,operations,are,defined,in,org,apache,camel,component,springldap,ldap,operation;public,void,set,operation,string,operation,for,entry,string,ldap,operation,allowed,operation,operation,map,entry,set,if,allowed,operation,get,key,equals,ignore,case,operation,this,operation,allowed,operation,get,value,return,throw,new,unsupported,operation,exception,ldap,operation,operation,is,not,supported,the,supported,operations,are,search,bind,and,unbind
SpringLdapEndpoint -> public void setOperation(String operation);1425148387;Sets the LDAP operation to be performed. The supported operations are defined in org.apache.camel.component.springldap.LdapOperation.;public void setOperation(String operation) {_        for (Entry<String, LdapOperation> allowedOperation : operationMap_                .entrySet()) {_            if (allowedOperation.getKey().equalsIgnoreCase(operation)) {_                this.operation = allowedOperation.getValue()__                return__            }_        }_        throw new UnsupportedOperationException(_                "LDAP operation '"_                        + operation_                        + "' is not supported. The supported operations are 'search', 'bind', and 'unbind'.")__    };sets,the,ldap,operation,to,be,performed,the,supported,operations,are,defined,in,org,apache,camel,component,springldap,ldap,operation;public,void,set,operation,string,operation,for,entry,string,ldap,operation,allowed,operation,operation,map,entry,set,if,allowed,operation,get,key,equals,ignore,case,operation,this,operation,allowed,operation,get,value,return,throw,new,unsupported,operation,exception,ldap,operation,operation,is,not,supported,the,supported,operations,are,search,bind,and,unbind
SpringLdapEndpoint -> public void setOperation(String operation);1427402378;Sets the LDAP operation to be performed. The supported operations are defined in org.apache.camel.component.springldap.LdapOperation.;public void setOperation(String operation) {_        for (Entry<String, LdapOperation> allowedOperation : operationMap_                .entrySet()) {_            if (allowedOperation.getKey().equalsIgnoreCase(operation)) {_                this.operation = allowedOperation.getValue()__                return__            }_        }_        throw new UnsupportedOperationException(_                "LDAP operation '"_                        + operation_                        + "' is not supported. The supported operations are 'search', 'bind', and 'unbind'.")__    };sets,the,ldap,operation,to,be,performed,the,supported,operations,are,defined,in,org,apache,camel,component,springldap,ldap,operation;public,void,set,operation,string,operation,for,entry,string,ldap,operation,allowed,operation,operation,map,entry,set,if,allowed,operation,get,key,equals,ignore,case,operation,this,operation,allowed,operation,get,value,return,throw,new,unsupported,operation,exception,ldap,operation,operation,is,not,supported,the,supported,operations,are,search,bind,and,unbind
SpringLdapEndpoint -> public void setTemplateName(String templateName);1430199001;Name of the Spring LDAP Template bean;public void setTemplateName(String templateName) {_        this.templateName = templateName__    };name,of,the,spring,ldap,template,bean;public,void,set,template,name,string,template,name,this,template,name,template,name
SpringLdapEndpoint -> public void setTemplateName(String templateName);1451237129;Name of the Spring LDAP Template bean;public void setTemplateName(String templateName) {_        this.templateName = templateName__    };name,of,the,spring,ldap,template,bean;public,void,set,template,name,string,template,name,this,template,name,template,name
SpringLdapEndpoint -> public void setTemplateName(String templateName);1486028039;Name of the Spring LDAP Template bean;public void setTemplateName(String templateName) {_        this.templateName = templateName__    };name,of,the,spring,ldap,template,bean;public,void,set,template,name,string,template,name,this,template,name,template,name
SpringLdapEndpoint -> public void setTemplateName(String templateName);1540108163;Name of the Spring LDAP Template bean;public void setTemplateName(String templateName) {_        this.templateName = templateName__    };name,of,the,spring,ldap,template,bean;public,void,set,template,name,string,template,name,this,template,name,template,name
SpringLdapEndpoint -> public void setTemplateName(String templateName);1547240981;Name of the Spring LDAP Template bean;public void setTemplateName(String templateName) {_        this.templateName = templateName__    };name,of,the,spring,ldap,template,bean;public,void,set,template,name,string,template,name,this,template,name,template,name
SpringLdapEndpoint -> public void setTemplateName(String templateName);1548508056;Name of the Spring LDAP Template bean;public void setTemplateName(String templateName) {_        this.templateName = templateName__    };name,of,the,spring,ldap,template,bean;public,void,set,template,name,string,template,name,this,template,name,template,name
SpringLdapEndpoint -> @Override     public String createEndpointUri();1361264210;@return URI used to create this endpoint;@Override_    public String createEndpointUri() {_        return "spring-ldap://" + templateName + "?operation=" + operation.name() + "&scope=" + getScopeName()__    };return,uri,used,to,create,this,endpoint;override,public,string,create,endpoint,uri,return,spring,ldap,template,name,operation,operation,name,scope,get,scope,name
SpringLdapEndpoint -> @Override     public String createEndpointUri();1420366014;@return URI used to create this endpoint;@Override_    public String createEndpointUri() {_        return "spring-ldap://" + templateName + "?operation=" + operation.name() + "&scope=" + getScopeName()__    };return,uri,used,to,create,this,endpoint;override,public,string,create,endpoint,uri,return,spring,ldap,template,name,operation,operation,name,scope,get,scope,name
SpringLdapEndpoint -> @Override     public String createEndpointUri();1423750791;@return URI used to create this endpoint;@Override_    public String createEndpointUri() {_        return "spring-ldap://" + templateName + "?operation=" + operation.name() + "&scope=" + getScopeName()__    };return,uri,used,to,create,this,endpoint;override,public,string,create,endpoint,uri,return,spring,ldap,template,name,operation,operation,name,scope,get,scope,name
SpringLdapEndpoint -> @Override     public String createEndpointUri();1425148387;@return URI used to create this endpoint;@Override_    public String createEndpointUri() {_        return "spring-ldap://" + templateName + "?operation=" + operation.name() + "&scope=" + getScopeName()__    };return,uri,used,to,create,this,endpoint;override,public,string,create,endpoint,uri,return,spring,ldap,template,name,operation,operation,name,scope,get,scope,name
SpringLdapEndpoint -> @Override     public String createEndpointUri();1427402378;@return URI used to create this endpoint;@Override_    public String createEndpointUri() {_        return "spring-ldap://" + templateName + "?operation=" + operation.name() + "&scope=" + getScopeName()__    };return,uri,used,to,create,this,endpoint;override,public,string,create,endpoint,uri,return,spring,ldap,template,name,operation,operation,name,scope,get,scope,name
SpringLdapEndpoint -> public SpringLdapEndpoint(String templateName, LdapTemplate ldapTemplate);1361264210;Initializes the SpringLdapEndpoint using the provided template_@param templateName name of the LDAP template_@param ldapTemplate LDAP template, see org.springframework.ldap.core.LdapTemplate;public SpringLdapEndpoint(String templateName, LdapTemplate ldapTemplate) {_        this.templateName = templateName__        this.ldapTemplate = ldapTemplate__        if (null == operationMap) {_            initializeOperationMap()__        }__        if (null == scopeMap) {_            initializeScopeMap()__        }_    };initializes,the,spring,ldap,endpoint,using,the,provided,template,param,template,name,name,of,the,ldap,template,param,ldap,template,ldap,template,see,org,springframework,ldap,core,ldap,template;public,spring,ldap,endpoint,string,template,name,ldap,template,ldap,template,this,template,name,template,name,this,ldap,template,ldap,template,if,null,operation,map,initialize,operation,map,if,null,scope,map,initialize,scope,map
SpringLdapEndpoint -> public SpringLdapEndpoint(String templateName, LdapTemplate ldapTemplate);1420366014;Initializes the SpringLdapEndpoint using the provided template_@param templateName name of the LDAP template_@param ldapTemplate LDAP template, see org.springframework.ldap.core.LdapTemplate;public SpringLdapEndpoint(String templateName, LdapTemplate ldapTemplate) {_        this.templateName = templateName__        this.ldapTemplate = ldapTemplate__        if (null == operationMap) {_            initializeOperationMap()__        }__        if (null == scopeMap) {_            initializeScopeMap()__        }_    };initializes,the,spring,ldap,endpoint,using,the,provided,template,param,template,name,name,of,the,ldap,template,param,ldap,template,ldap,template,see,org,springframework,ldap,core,ldap,template;public,spring,ldap,endpoint,string,template,name,ldap,template,ldap,template,this,template,name,template,name,this,ldap,template,ldap,template,if,null,operation,map,initialize,operation,map,if,null,scope,map,initialize,scope,map
SpringLdapEndpoint -> public SpringLdapEndpoint(String templateName, LdapTemplate ldapTemplate);1423750791;Initializes the SpringLdapEndpoint using the provided template_@param templateName name of the LDAP template_@param ldapTemplate LDAP template, see org.springframework.ldap.core.LdapTemplate;public SpringLdapEndpoint(String templateName, LdapTemplate ldapTemplate) {_        this.templateName = templateName__        this.ldapTemplate = ldapTemplate__        if (null == operationMap) {_            initializeOperationMap()__        }__        if (null == scopeMap) {_            initializeScopeMap()__        }_    };initializes,the,spring,ldap,endpoint,using,the,provided,template,param,template,name,name,of,the,ldap,template,param,ldap,template,ldap,template,see,org,springframework,ldap,core,ldap,template;public,spring,ldap,endpoint,string,template,name,ldap,template,ldap,template,this,template,name,template,name,this,ldap,template,ldap,template,if,null,operation,map,initialize,operation,map,if,null,scope,map,initialize,scope,map
SpringLdapEndpoint -> public SpringLdapEndpoint(String templateName, LdapTemplate ldapTemplate);1425148387;Initializes the SpringLdapEndpoint using the provided template_@param templateName name of the LDAP template_@param ldapTemplate LDAP template, see org.springframework.ldap.core.LdapTemplate;public SpringLdapEndpoint(String templateName, LdapTemplate ldapTemplate) {_        this.templateName = templateName__        this.ldapTemplate = ldapTemplate__        if (null == operationMap) {_            initializeOperationMap()__        }__        if (null == scopeMap) {_            initializeScopeMap()__        }_    };initializes,the,spring,ldap,endpoint,using,the,provided,template,param,template,name,name,of,the,ldap,template,param,ldap,template,ldap,template,see,org,springframework,ldap,core,ldap,template;public,spring,ldap,endpoint,string,template,name,ldap,template,ldap,template,this,template,name,template,name,this,ldap,template,ldap,template,if,null,operation,map,initialize,operation,map,if,null,scope,map,initialize,scope,map
SpringLdapEndpoint -> public SpringLdapEndpoint(String templateName, LdapTemplate ldapTemplate);1427402378;Initializes the SpringLdapEndpoint using the provided template_@param templateName name of the LDAP template_@param ldapTemplate LDAP template, see org.springframework.ldap.core.LdapTemplate;public SpringLdapEndpoint(String templateName, LdapTemplate ldapTemplate) {_        this.templateName = templateName__        this.ldapTemplate = ldapTemplate__        if (null == operationMap) {_            initializeOperationMap()__        }__        if (null == scopeMap) {_            initializeScopeMap()__        }_    };initializes,the,spring,ldap,endpoint,using,the,provided,template,param,template,name,name,of,the,ldap,template,param,ldap,template,ldap,template,see,org,springframework,ldap,core,ldap,template;public,spring,ldap,endpoint,string,template,name,ldap,template,ldap,template,this,template,name,template,name,this,ldap,template,ldap,template,if,null,operation,map,initialize,operation,map,if,null,scope,map,initialize,scope,map
SpringLdapEndpoint -> public SpringLdapEndpoint(String templateName, LdapTemplate ldapTemplate);1430199001;Initializes the SpringLdapEndpoint using the provided template__@param templateName name of the LDAP template_@param ldapTemplate LDAP template, see org.springframework.ldap.core.LdapTemplate;public SpringLdapEndpoint(String templateName, LdapTemplate ldapTemplate) {_        this.templateName = templateName__        this.ldapTemplate = ldapTemplate__    };initializes,the,spring,ldap,endpoint,using,the,provided,template,param,template,name,name,of,the,ldap,template,param,ldap,template,ldap,template,see,org,springframework,ldap,core,ldap,template;public,spring,ldap,endpoint,string,template,name,ldap,template,ldap,template,this,template,name,template,name,this,ldap,template,ldap,template
SpringLdapEndpoint -> public SpringLdapEndpoint(String templateName, LdapTemplate ldapTemplate);1451237129;Initializes the SpringLdapEndpoint using the provided template__@param templateName name of the LDAP template_@param ldapTemplate LDAP template, see org.springframework.ldap.core.LdapTemplate;public SpringLdapEndpoint(String templateName, LdapTemplate ldapTemplate) {_        this.templateName = templateName__        this.ldapTemplate = ldapTemplate__    };initializes,the,spring,ldap,endpoint,using,the,provided,template,param,template,name,name,of,the,ldap,template,param,ldap,template,ldap,template,see,org,springframework,ldap,core,ldap,template;public,spring,ldap,endpoint,string,template,name,ldap,template,ldap,template,this,template,name,template,name,this,ldap,template,ldap,template
SpringLdapEndpoint -> public SpringLdapEndpoint(String templateName, LdapTemplate ldapTemplate);1486028039;Initializes the SpringLdapEndpoint using the provided template__@param templateName name of the LDAP template_@param ldapTemplate LDAP template, see org.springframework.ldap.core.LdapTemplate;public SpringLdapEndpoint(String templateName, LdapTemplate ldapTemplate) {_        this.templateName = templateName__        this.ldapTemplate = ldapTemplate__    };initializes,the,spring,ldap,endpoint,using,the,provided,template,param,template,name,name,of,the,ldap,template,param,ldap,template,ldap,template,see,org,springframework,ldap,core,ldap,template;public,spring,ldap,endpoint,string,template,name,ldap,template,ldap,template,this,template,name,template,name,this,ldap,template,ldap,template
SpringLdapEndpoint -> public SpringLdapEndpoint(String templateName, LdapTemplate ldapTemplate);1540108163;Initializes the SpringLdapEndpoint using the provided template__@param templateName name of the LDAP template_@param ldapTemplate LDAP template, see org.springframework.ldap.core.LdapTemplate;public SpringLdapEndpoint(String templateName, LdapTemplate ldapTemplate) {_        this.templateName = templateName__        this.ldapTemplate = ldapTemplate__    };initializes,the,spring,ldap,endpoint,using,the,provided,template,param,template,name,name,of,the,ldap,template,param,ldap,template,ldap,template,see,org,springframework,ldap,core,ldap,template;public,spring,ldap,endpoint,string,template,name,ldap,template,ldap,template,this,template,name,template,name,this,ldap,template,ldap,template
SpringLdapEndpoint -> public SpringLdapEndpoint(String templateName, LdapTemplate ldapTemplate);1547240981;Initializes the SpringLdapEndpoint using the provided template__@param templateName name of the LDAP template_@param ldapTemplate LDAP template, see org.springframework.ldap.core.LdapTemplate;public SpringLdapEndpoint(String templateName, LdapTemplate ldapTemplate) {_        this.templateName = templateName__        this.ldapTemplate = ldapTemplate__    };initializes,the,spring,ldap,endpoint,using,the,provided,template,param,template,name,name,of,the,ldap,template,param,ldap,template,ldap,template,see,org,springframework,ldap,core,ldap,template;public,spring,ldap,endpoint,string,template,name,ldap,template,ldap,template,this,template,name,template,name,this,ldap,template,ldap,template
SpringLdapEndpoint -> public SpringLdapEndpoint(String templateName, LdapTemplate ldapTemplate);1548508056;Initializes the SpringLdapEndpoint using the provided template__@param templateName name of the LDAP template_@param ldapTemplate LDAP template, see org.springframework.ldap.core.LdapTemplate;public SpringLdapEndpoint(String templateName, LdapTemplate ldapTemplate) {_        this.templateName = templateName__        this.ldapTemplate = ldapTemplate__    };initializes,the,spring,ldap,endpoint,using,the,provided,template,param,template,name,name,of,the,ldap,template,param,ldap,template,ldap,template,see,org,springframework,ldap,core,ldap,template;public,spring,ldap,endpoint,string,template,name,ldap,template,ldap,template,this,template,name,template,name,this,ldap,template,ldap,template
SpringLdapEndpoint -> public void setOperation(LdapOperation operation);1430199001;The LDAP operation to be performed.;public void setOperation(LdapOperation operation) {_        this.operation = operation__    };the,ldap,operation,to,be,performed;public,void,set,operation,ldap,operation,operation,this,operation,operation
SpringLdapEndpoint -> public void setOperation(LdapOperation operation);1451237129;The LDAP operation to be performed.;public void setOperation(LdapOperation operation) {_        this.operation = operation__    };the,ldap,operation,to,be,performed;public,void,set,operation,ldap,operation,operation,this,operation,operation
SpringLdapEndpoint -> public void setOperation(LdapOperation operation);1486028039;The LDAP operation to be performed.;public void setOperation(LdapOperation operation) {_        this.operation = operation__    };the,ldap,operation,to,be,performed;public,void,set,operation,ldap,operation,operation,this,operation,operation
SpringLdapEndpoint -> public void setOperation(LdapOperation operation);1540108163;The LDAP operation to be performed.;public void setOperation(LdapOperation operation) {_        this.operation = operation__    };the,ldap,operation,to,be,performed;public,void,set,operation,ldap,operation,operation,this,operation,operation
SpringLdapEndpoint -> public void setOperation(LdapOperation operation);1547240981;The LDAP operation to be performed.;public void setOperation(LdapOperation operation) {_        this.operation = operation__    };the,ldap,operation,to,be,performed;public,void,set,operation,ldap,operation,operation,this,operation,operation
SpringLdapEndpoint -> public void setOperation(LdapOperation operation);1548508056;The LDAP operation to be performed.;public void setOperation(LdapOperation operation) {_        this.operation = operation__    };the,ldap,operation,to,be,performed;public,void,set,operation,ldap,operation,operation,this,operation,operation
SpringLdapEndpoint -> @Override     public Producer createProducer() throws Exception;1361264210;Creates a Producer using this SpringLdapEndpoint;@Override_    public Producer createProducer() throws Exception {_        return new SpringLdapProducer(this)__    };creates,a,producer,using,this,spring,ldap,endpoint;override,public,producer,create,producer,throws,exception,return,new,spring,ldap,producer,this
SpringLdapEndpoint -> @Override     public Producer createProducer() throws Exception;1420366014;Creates a Producer using this SpringLdapEndpoint;@Override_    public Producer createProducer() throws Exception {_        return new SpringLdapProducer(this)__    };creates,a,producer,using,this,spring,ldap,endpoint;override,public,producer,create,producer,throws,exception,return,new,spring,ldap,producer,this
SpringLdapEndpoint -> @Override     public Producer createProducer() throws Exception;1423750791;Creates a Producer using this SpringLdapEndpoint;@Override_    public Producer createProducer() throws Exception {_        return new SpringLdapProducer(this)__    };creates,a,producer,using,this,spring,ldap,endpoint;override,public,producer,create,producer,throws,exception,return,new,spring,ldap,producer,this
SpringLdapEndpoint -> @Override     public Producer createProducer() throws Exception;1425148387;Creates a Producer using this SpringLdapEndpoint;@Override_    public Producer createProducer() throws Exception {_        return new SpringLdapProducer(this)__    };creates,a,producer,using,this,spring,ldap,endpoint;override,public,producer,create,producer,throws,exception,return,new,spring,ldap,producer,this
SpringLdapEndpoint -> @Override     public Producer createProducer() throws Exception;1427402378;Creates a Producer using this SpringLdapEndpoint;@Override_    public Producer createProducer() throws Exception {_        return new SpringLdapProducer(this)__    };creates,a,producer,using,this,spring,ldap,endpoint;override,public,producer,create,producer,throws,exception,return,new,spring,ldap,producer,this
SpringLdapEndpoint -> @Override     public boolean isSingleton();1361264210;returns false (constant);@Override_    public boolean isSingleton() {_        return false__    };returns,false,constant;override,public,boolean,is,singleton,return,false
SpringLdapEndpoint -> @Override     public boolean isSingleton();1420366014;returns false (constant);@Override_    public boolean isSingleton() {_        return false__    };returns,false,constant;override,public,boolean,is,singleton,return,false
SpringLdapEndpoint -> @Override     public boolean isSingleton();1423750791;returns false (constant);@Override_    public boolean isSingleton() {_        return false__    };returns,false,constant;override,public,boolean,is,singleton,return,false
SpringLdapEndpoint -> @Override     public boolean isSingleton();1425148387;returns false (constant);@Override_    public boolean isSingleton() {_        return false__    };returns,false,constant;override,public,boolean,is,singleton,return,false
SpringLdapEndpoint -> @Override     public boolean isSingleton();1427402378;returns false (constant);@Override_    public boolean isSingleton() {_        return false__    };returns,false,constant;override,public,boolean,is,singleton,return,false
