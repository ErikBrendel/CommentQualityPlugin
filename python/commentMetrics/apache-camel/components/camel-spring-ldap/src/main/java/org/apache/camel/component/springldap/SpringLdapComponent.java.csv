commented;modifiers;parameterAmount;loc;comment;code
true;protected;3;11;/**  * creates a Spring LDAP endpoint  * @param remaining name of the Spring LDAP template bean to be used for the LDAP operation  * @param parameters key-value pairs to be set on @see org.apache.camel.component.springldap.SpringLdapEndpoint.  * Currently supported keys are operation and scope.  * 'operation' is defined in org.apache.camel.component.springldap.LdapOperation.  * 'scope' must be one of "object", "onelevel", or "subtree".  */ ;/**  * creates a Spring LDAP endpoint  * @param remaining name of the Spring LDAP template bean to be used for the LDAP operation  * @param parameters key-value pairs to be set on @see org.apache.camel.component.springldap.SpringLdapEndpoint.  * Currently supported keys are operation and scope.  * 'operation' is defined in org.apache.camel.component.springldap.LdapOperation.  * 'scope' must be one of "object", "onelevel", or "subtree".  */ @Override protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {     CamelContext camelContext = getCamelContext().     Registry registry = camelContext.getRegistry().     LdapTemplate ldapTemplate = registry.lookupByNameAndType(remaining, LdapTemplate.class).     Endpoint endpoint = new SpringLdapEndpoint(remaining, ldapTemplate).     setProperties(endpoint, parameters).     return endpoint. }
