commented;modifiers;parameterAmount;loc;comment;code
true;public,abstract;0;1;/**  * Gets the result of this zookeeper operation, i.e. some data and the  * associated node stats  */ ;/**  * Gets the result of this zookeeper operation, i.e. some data and the  * associated node stats  */ public abstract OperationResult<ResultType> getResult().
false;public;0;5;;public OperationResult<ResultType> get() throws InterruptedException, ExecutionException {     waitingThreads.add(Thread.currentThread()).     result = getResult().     return result. }
false;public;2;4;;public OperationResult<ResultType> get(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException {     // TODO perhaps set a timer here     return get(). }
false;public;1;9;;public boolean cancel(boolean mayInterruptIfRunning) {     if (mayInterruptIfRunning) {         for (Thread waiting : waitingThreads) {             waiting.interrupt().         }         cancelled = true.     }     return mayInterruptIfRunning. }
false;public;0;3;;public boolean isCancelled() {     return cancelled. }
false;public;0;3;;public boolean isDone() {     return result != null. }
false;public;0;3;;public String getNode() {     return node. }
false;public;0;3;;public boolean shouldProduceExchange() {     return producesExchange. }
true;public;0;3;// TODO slightly different to a clone as it uses the constructor ;// TODO slightly different to a clone as it uses the constructor public ZooKeeperOperation<?> createCopy() throws Exception {     return getClass().getConstructor(CONSTRUCTOR_ARGS).newInstance(new Object[] { connection, node }). }
