commented;modifiers;parameterAmount;loc;comment;code
false;public;0;15;;public ZooKeeper getZooKeeper() {     if (zookeeper != null) {         return zookeeper.     }     if (configuration.getConnectString() == null) {         throw new RuntimeCamelException("Cannot create ZooKeeper connection as connection string is null. Have servers been configured?").     }     try {         zookeeper = new ZooKeeper(configuration.getConnectString(), configuration.getTimeout(), this).     } catch (Exception e) {         throw RuntimeCamelException.wrapRuntimeCamelException(e).     }     awaitConnection().     return zookeeper. }
false;public;0;3;;public boolean isConnected() {     return connectionLatch.getCount() == 0. }
false;public;0;10;;public void awaitConnection() {     if (LOG.isDebugEnabled()) {         LOG.debug("Awaiting Connection event from Zookeeper cluster {}", configuration.getConnectString()).     }     try {         connectionLatch.await().     } catch (InterruptedException e) {         throw RuntimeCamelException.wrapRuntimeCamelException(e).     } }
false;public;1;6;;public void process(WatchedEvent event) {     if (event.getState() == KeeperState.SyncConnected) {         connectionLatch.countDown().     }     connectionLatch.countDown(). }
false;public;0;13;;public void closeConnection() {     try {         if (zookeeper != null) {             zookeeper.close().             zookeeper = null.         }         if (LOG.isDebugEnabled()) {             LOG.debug("Shutting down connection to Zookeeper cluster {}", configuration.getConnectString()).         }     } catch (InterruptedException e) {         LOG.warn("Error closing zookeeper connection " + configuration.getConnectString() + ". This exception will be ignored.", e).     } }
