commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;29;;public static CuratorFramework createCurator(ZooKeeperCuratorConfiguration configuration) throws Exception {     CuratorFramework curator = configuration.getCuratorFramework().     if (curator == null) {         // Validate parameters         ObjectHelper.notNull(configuration.getNodes(), "ZooKeeper Nodes").         RetryPolicy retryPolicy = configuration.getRetryPolicy().         if (retryPolicy == null) {             retryPolicy = new ExponentialBackoffRetry((int) configuration.getReconnectBaseSleepTimeUnit().toMillis(configuration.getReconnectBaseSleepTime()), (int) configuration.getReconnectMaxSleepTimeUnit().toMillis(configuration.getReconnectMaxSleepTime()), configuration.getReconnectMaxRetries()).         }         CuratorFrameworkFactory.Builder builder = CuratorFrameworkFactory.builder().connectString(String.join(",", configuration.getNodes())).sessionTimeoutMs((int) configuration.getSessionTimeoutUnit().toMillis(configuration.getSessionTimeout())).connectionTimeoutMs((int) configuration.getConnectionTimeoutUnit().toMillis(configuration.getConnectionTimeout())).maxCloseWaitMs((int) configuration.getMaxCloseWaitUnit().toMillis(configuration.getMaxCloseWait())).retryPolicy(retryPolicy).         Optional.ofNullable(configuration.getNamespace()).ifPresent(builder::namespace).         Optional.ofNullable(configuration.getAuthInfoList()).ifPresent(builder::authorization).         curator = builder.build().     }     return curator. }
false;public,static;3;7;;public static <T> ServiceDiscovery<T> createServiceDiscovery(ZooKeeperCuratorConfiguration configuration, CuratorFramework curator, Class<T> payloadType) {     return ServiceDiscoveryBuilder.builder(payloadType).client(curator).basePath(configuration.getBasePath()).serializer(new JsonInstanceSerializer<>(payloadType)).build(). }
