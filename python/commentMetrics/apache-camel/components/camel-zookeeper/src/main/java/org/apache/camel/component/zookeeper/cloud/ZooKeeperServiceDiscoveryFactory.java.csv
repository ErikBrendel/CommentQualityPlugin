commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;// ********************************************* // Properties // ********************************************* public ZooKeeperCuratorConfiguration getConfiguration() {     return configuration. }
false;public;1;3;;public void setConfiguration(ZooKeeperCuratorConfiguration configuration) {     this.configuration = configuration.copy(). }
false;public;0;3;;public CuratorFramework getCuratorFramework() {     return configuration.getCuratorFramework(). }
false;public;1;3;;public void setCuratorFramework(CuratorFramework curatorFramework) {     configuration.setCuratorFramework(curatorFramework). }
false;public;0;3;;public List<String> getNodes() {     return configuration.getNodes(). }
false;public;1;3;;public void setNodes(String nodes) {     configuration.setNodes(nodes). }
false;public;1;3;;public void setNodes(List<String> nodes) {     configuration.setNodes(nodes). }
false;public;0;3;;public String getNamespace() {     return configuration.getNamespace(). }
false;public;1;3;;public void setNamespace(String namespace) {     configuration.setNamespace(namespace). }
false;public;0;3;;public long getReconnectBaseSleepTime() {     return configuration.getReconnectBaseSleepTime(). }
false;public;1;3;;public void setReconnectBaseSleepTime(long reconnectBaseSleepTime) {     configuration.setReconnectBaseSleepTime(reconnectBaseSleepTime). }
false;public;2;3;;public void setReconnectBaseSleepTime(long reconnectBaseSleepTime, TimeUnit reconnectBaseSleepTimeUnit) {     configuration.setReconnectBaseSleepTime(reconnectBaseSleepTime, reconnectBaseSleepTimeUnit). }
false;public;0;3;;public TimeUnit getReconnectBaseSleepTimeUnit() {     return configuration.getReconnectBaseSleepTimeUnit(). }
false;public;1;3;;public void setReconnectBaseSleepTimeUnit(TimeUnit reconnectBaseSleepTimeUnit) {     configuration.setReconnectBaseSleepTimeUnit(reconnectBaseSleepTimeUnit). }
false;public;0;3;;public long getReconnectMaxSleepTime() {     return configuration.getReconnectMaxSleepTime(). }
false;public;1;3;;public void setReconnectMaxSleepTime(long reconnectMaxSleepTime) {     configuration.setReconnectMaxSleepTime(reconnectMaxSleepTime). }
false;public;2;3;;public void setReconnectMaxSleepTime(long reconnectMaxSleepTime, TimeUnit reconnectBaseSleepTimeUnit) {     configuration.setReconnectMaxSleepTime(reconnectMaxSleepTime, reconnectBaseSleepTimeUnit). }
false;public;0;3;;public TimeUnit getReconnectMaxSleepTimeUnit() {     return configuration.getReconnectMaxSleepTimeUnit(). }
false;public;1;3;;public void setReconnectMaxSleepTimeUnit(TimeUnit reconnectMaxSleepTimeUnit) {     configuration.setReconnectMaxSleepTimeUnit(reconnectMaxSleepTimeUnit). }
false;public;0;3;;public int getReconnectMaxRetries() {     return configuration.getReconnectMaxRetries(). }
false;public;1;3;;public void setReconnectMaxRetries(int reconnectMaxRetries) {     configuration.setReconnectMaxRetries(reconnectMaxRetries). }
false;public;0;3;;public long getSessionTimeout() {     return configuration.getSessionTimeout(). }
false;public;1;3;;public void setSessionTimeout(long sessionTimeout) {     configuration.setSessionTimeout(sessionTimeout). }
false;public;2;3;;public void setSessionTimeout(long sessionTimeout, TimeUnit sessionTimeoutUnit) {     configuration.setSessionTimeout(sessionTimeout, sessionTimeoutUnit). }
false;public;0;3;;public TimeUnit getSessionTimeoutUnit() {     return configuration.getSessionTimeoutUnit(). }
false;public;1;3;;public void setSessionTimeoutUnit(TimeUnit sessionTimeoutUnit) {     configuration.setSessionTimeoutUnit(sessionTimeoutUnit). }
false;public;0;3;;public long getConnectionTimeout() {     return configuration.getConnectionTimeout(). }
false;public;1;3;;public void setConnectionTimeout(long connectionTimeout) {     configuration.setConnectionTimeout(connectionTimeout). }
false;public;2;3;;public void setConnectionTimeout(long connectionTimeout, TimeUnit connectionTimeotUnit) {     configuration.setConnectionTimeout(connectionTimeout, connectionTimeotUnit). }
false;public;0;3;;public TimeUnit getConnectionTimeoutUnit() {     return configuration.getConnectionTimeoutUnit(). }
false;public;1;3;;public void setConnectionTimeoutUnit(TimeUnit connectionTimeoutUnit) {     configuration.setConnectionTimeoutUnit(connectionTimeoutUnit). }
false;public;0;3;;public List<AuthInfo> getAuthInfoList() {     return configuration.getAuthInfoList(). }
false;public;1;3;;public void setAuthInfoList(List<AuthInfo> authInfoList) {     configuration.setAuthInfoList(authInfoList). }
false;public;0;3;;public long getMaxCloseWait() {     return configuration.getMaxCloseWait(). }
false;public;1;3;;public void setMaxCloseWait(long maxCloseWait) {     configuration.setMaxCloseWait(maxCloseWait). }
false;public;0;3;;public TimeUnit getMaxCloseWaitUnit() {     return configuration.getMaxCloseWaitUnit(). }
false;public;1;3;;public void setMaxCloseWaitUnit(TimeUnit maxCloseWaitUnit) {     configuration.setMaxCloseWaitUnit(maxCloseWaitUnit). }
false;public;0;3;;public RetryPolicy getRetryPolicy() {     return configuration.getRetryPolicy(). }
false;public;1;3;;public void setRetryPolicy(RetryPolicy retryPolicy) {     configuration.setRetryPolicy(retryPolicy). }
false;public;0;3;;public String getBasePath() {     return configuration.getBasePath(). }
false;public;1;3;;public void setBasePath(String basePath) {     configuration.setBasePath(basePath). }
false;public;1;7;;// ********************************************* // Factory // ********************************************* @Override public ServiceDiscovery newInstance(CamelContext context) throws Exception {     ZooKeeperServiceDiscovery discovery = new ZooKeeperServiceDiscovery(configuration).     discovery.setCamelContext(context).     return discovery. }
