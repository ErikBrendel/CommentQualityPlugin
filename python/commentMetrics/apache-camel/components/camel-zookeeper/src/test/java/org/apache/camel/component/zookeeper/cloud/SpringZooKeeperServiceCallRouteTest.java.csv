commented;modifiers;parameterAmount;loc;comment;code
false;public;0;45;;// *********************** // Setup / tear down // *********************** @Override public void doPreSetup() throws Exception {     super.doPreSetup().     server = new ZooKeeperTestSupport.TestZookeeperServer(SERVER_PORT, true).     ZooKeeperTestSupport.waitForServerUp("127.0.0.1:" + SERVER_PORT, 1000).     curator = CuratorFrameworkFactory.builder().connectString("127.0.0.1:" + SERVER_PORT).retryPolicy(new ExponentialBackoffRetry(1000, 3)).build().     discovery = ServiceDiscoveryBuilder.builder(ZooKeeperServiceDiscovery.MetaData.class).client(curator).basePath(SERVICE_PATH).serializer(new JsonInstanceSerializer<>(ZooKeeperServiceDiscovery.MetaData.class)).build().     curator.start().     discovery.start().     discovery.registerService(ServiceInstance.<ZooKeeperServiceDiscovery.MetaData>builder().address("127.0.0.1").port(9011).name(SERVICE_NAME).id("service-1").build()).     discovery.registerService(ServiceInstance.<ZooKeeperServiceDiscovery.MetaData>builder().address("127.0.0.1").port(9012).name(SERVICE_NAME).id("service-2").build()).     discovery.registerService(ServiceInstance.<ZooKeeperServiceDiscovery.MetaData>builder().address("127.0.0.1").port(9013).name(SERVICE_NAME).id("service-3").build()). }
false;public;0;12;;@Override @After public void tearDown() throws Exception {     super.tearDown().     CloseableUtils.closeQuietly(discovery).     CloseableUtils.closeQuietly(curator).     if (server != null) {         server.shutdown().     } }
false;public;0;11;;// *********************** // Test // *********************** @Test public void testServiceCall() throws Exception {     getMockEndpoint("mock:result").expectedMessageCount(3).     getMockEndpoint("mock:result").expectedBodiesReceivedInAnyOrder("ping 9011", "ping 9012", "ping 9013").     template.sendBody("direct:start", "ping").     template.sendBody("direct:start", "ping").     template.sendBody("direct:start", "ping").     assertMockEndpointsSatisfied(). }
false;protected;0;4;;// *********************** // Routes // *********************** @Override protected AbstractApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/component/zookeeper/cloud/SpringZooKeeperServiceCallRouteTest.xml"). }
