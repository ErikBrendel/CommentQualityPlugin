commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Before public void setupConnection() {     connection = getConnection(). }
false;public;0;8;;@Test public void setData() throws Exception {     client.create("/one", testPayload).     SetDataOperation operation = new SetDataOperation(connection, "/one", "Updated".getBytes()).     OperationResult<byte[]> result = operation.get().     verifyNodeContainsData("/one", "Updated".getBytes()).     assertEquals(1, result.getStatistics().getVersion()). }
false;public;0;9;;@Test public void setSpecificVersionOfData() throws Exception {     client.create("/two", testPayload).     for (int x = 0. x < 10. x++) {         byte[] payload = ("Updated_" + x).getBytes().         updateDataOnNode("/two", payload, x, x + 1).         verifyNodeContainsData("/two", payload).     } }
false;public;0;5;;@Test public void setWithNull() throws Exception {     client.create("/three", testPayload).     updateDataOnNode("/three", null, -1, 1). }
false;private;4;8;;private void updateDataOnNode(String node, byte[] payload, int version, int expectedVersion) throws Exception {     SetDataOperation operation = new SetDataOperation(connection, node, payload).     operation.setVersion(version).     OperationResult<byte[]> result = operation.get().     assertEquals(null, result.getException()).     verifyNodeContainsData(node, payload).     assertEquals(expectedVersion, result.getStatistics().getVersion()). }
