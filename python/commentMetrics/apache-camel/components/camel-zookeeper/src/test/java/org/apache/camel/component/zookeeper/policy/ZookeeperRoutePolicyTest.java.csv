commented;modifiers;parameterAmount;loc;comment;code
false;public;0;13;;@Test public void routeCanBeControlledByPolicy() throws Exception {     // set up the parent used to control the election     client.createPersistent("/someapp", "App node to contain policy election nodes...").     client.createPersistent("/someapp/somepolicy", "Policy node used by route policy to control routes...").     context.addRoutes(new ZooKeeperPolicyEnforcedRoute()).     MockEndpoint mock = getMockEndpoint("mock:controlled").     mock.setExpectedMessageCount(1).     sendBody("direct:policy-controlled", "This is a test").     mock.await(5, TimeUnit.SECONDS).     mock.assertIsSatisfied(). }
false;public;0;4;;public void configure() throws Exception {     ZooKeeperRoutePolicy policy = new ZooKeeperRoutePolicy("zookeeper:localhost:" + getServerPort() + "/someapp/somepolicy", 1).     from("direct:policy-controlled").routePolicy(policy).to("mock:controlled"). }
