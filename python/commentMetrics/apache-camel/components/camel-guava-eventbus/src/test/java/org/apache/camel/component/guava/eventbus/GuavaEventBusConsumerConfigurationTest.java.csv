commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isUseRouteBuilder() {     return false. }
false;public;0;5;;@Override public void configure() throws Exception {     from("guava-eventbus:eventBus?listenerInterface=org.apache.camel.component.guava.eventbus.CustomListener&eventClass=org.apache.camel.component.guava.eventbus.MessageWrapper").to("mock:customListenerEvents"). }
false;public;0;22;;@Test public void invalidConfiguration() throws Exception {     // Given     SimpleRegistry registry = new SimpleRegistry().     registry.put("eventBus", new EventBus()).     CamelContext context = new DefaultCamelContext(registry).     context.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("guava-eventbus:eventBus?listenerInterface=org.apache.camel.component.guava.eventbus.CustomListener&eventClass=org.apache.camel.component.guava.eventbus.MessageWrapper").to("mock:customListenerEvents").         }     }).     try {         context.start().         fail("Should throw exception").     } catch (FailedToCreateRouteException e) {         IllegalStateException ise = assertIsInstanceOf(IllegalStateException.class, e.getCause()).         assertEquals("You cannot set both 'eventClass' and 'listenerInterface' parameters.", ise.getMessage()).     } }
