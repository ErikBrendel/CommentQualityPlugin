# id;timestamp;commentText;codeText;commentWords;codeWords
GuavaEventBusEndpoint -> public void setEventClass(Class<?> eventClass);1430987887;If used on the consumer side of the route, will filter events received from the EventBus to the instances of_the class and superclasses of eventClass. Null value of this option is equal to setting it to the java.lang.Object_i.e. the consumer will capture all messages incoming to the event bus. This option cannot be used together_with listenerInterface option.;public void setEventClass(Class<?> eventClass) {_        this.eventClass = eventClass__    };if,used,on,the,consumer,side,of,the,route,will,filter,events,received,from,the,event,bus,to,the,instances,of,the,class,and,superclasses,of,event,class,null,value,of,this,option,is,equal,to,setting,it,to,the,java,lang,object,i,e,the,consumer,will,capture,all,messages,incoming,to,the,event,bus,this,option,cannot,be,used,together,with,listener,interface,option;public,void,set,event,class,class,event,class,this,event,class,event,class
GuavaEventBusEndpoint -> public void setEventClass(Class<?> eventClass);1451237126;If used on the consumer side of the route, will filter events received from the EventBus to the instances of_the class and superclasses of eventClass. Null value of this option is equal to setting it to the java.lang.Object_i.e. the consumer will capture all messages incoming to the event bus. This option cannot be used together_with listenerInterface option.;public void setEventClass(Class<?> eventClass) {_        this.eventClass = eventClass__    };if,used,on,the,consumer,side,of,the,route,will,filter,events,received,from,the,event,bus,to,the,instances,of,the,class,and,superclasses,of,event,class,null,value,of,this,option,is,equal,to,setting,it,to,the,java,lang,object,i,e,the,consumer,will,capture,all,messages,incoming,to,the,event,bus,this,option,cannot,be,used,together,with,listener,interface,option;public,void,set,event,class,class,event,class,this,event,class,event,class
GuavaEventBusEndpoint -> public void setEventClass(Class<?> eventClass);1485947385;If used on the consumer side of the route, will filter events received from the EventBus to the instances of_the class and superclasses of eventClass. Null value of this option is equal to setting it to the java.lang.Object_i.e. the consumer will capture all messages incoming to the event bus. This option cannot be used together_with listenerInterface option.;public void setEventClass(Class<?> eventClass) {_        this.eventClass = eventClass__    };if,used,on,the,consumer,side,of,the,route,will,filter,events,received,from,the,event,bus,to,the,instances,of,the,class,and,superclasses,of,event,class,null,value,of,this,option,is,equal,to,setting,it,to,the,java,lang,object,i,e,the,consumer,will,capture,all,messages,incoming,to,the,event,bus,this,option,cannot,be,used,together,with,listener,interface,option;public,void,set,event,class,class,event,class,this,event,class,event,class
GuavaEventBusEndpoint -> public void setEventClass(Class<?> eventClass);1540108163;If used on the consumer side of the route, will filter events received from the EventBus to the instances of_the class and superclasses of eventClass. Null value of this option is equal to setting it to the java.lang.Object_i.e. the consumer will capture all messages incoming to the event bus. This option cannot be used together_with listenerInterface option.;public void setEventClass(Class<?> eventClass) {_        this.eventClass = eventClass__    };if,used,on,the,consumer,side,of,the,route,will,filter,events,received,from,the,event,bus,to,the,instances,of,the,class,and,superclasses,of,event,class,null,value,of,this,option,is,equal,to,setting,it,to,the,java,lang,object,i,e,the,consumer,will,capture,all,messages,incoming,to,the,event,bus,this,option,cannot,be,used,together,with,listener,interface,option;public,void,set,event,class,class,event,class,this,event,class,event,class
GuavaEventBusEndpoint -> public void setEventClass(Class<?> eventClass);1547480087;If used on the consumer side of the route, will filter events received from the EventBus to the instances of_the class and superclasses of eventClass. Null value of this option is equal to setting it to the java.lang.Object_i.e. the consumer will capture all messages incoming to the event bus. This option cannot be used together_with listenerInterface option.;public void setEventClass(Class<?> eventClass) {_        this.eventClass = eventClass__    };if,used,on,the,consumer,side,of,the,route,will,filter,events,received,from,the,event,bus,to,the,instances,of,the,class,and,superclasses,of,event,class,null,value,of,this,option,is,equal,to,setting,it,to,the,java,lang,object,i,e,the,consumer,will,capture,all,messages,incoming,to,the,event,bus,this,option,cannot,be,used,together,with,listener,interface,option;public,void,set,event,class,class,event,class,this,event,class,event,class
GuavaEventBusEndpoint -> public void setEventClass(Class<?> eventClass);1547805088;If used on the consumer side of the route, will filter events received from the EventBus to the instances of_the class and superclasses of eventClass. Null value of this option is equal to setting it to the java.lang.Object_i.e. the consumer will capture all messages incoming to the event bus. This option cannot be used together_with listenerInterface option.;public void setEventClass(Class<?> eventClass) {_        this.eventClass = eventClass__    };if,used,on,the,consumer,side,of,the,route,will,filter,events,received,from,the,event,bus,to,the,instances,of,the,class,and,superclasses,of,event,class,null,value,of,this,option,is,equal,to,setting,it,to,the,java,lang,object,i,e,the,consumer,will,capture,all,messages,incoming,to,the,event,bus,this,option,cannot,be,used,together,with,listener,interface,option;public,void,set,event,class,class,event,class,this,event,class,event,class
GuavaEventBusEndpoint -> public void setEventBus(EventBus eventBus);1430987887;To use the given Guava EventBus instance;public void setEventBus(EventBus eventBus) {_        this.eventBus = eventBus__    };to,use,the,given,guava,event,bus,instance;public,void,set,event,bus,event,bus,event,bus,this,event,bus,event,bus
GuavaEventBusEndpoint -> public void setEventBus(EventBus eventBus);1451237126;To use the given Guava EventBus instance;public void setEventBus(EventBus eventBus) {_        this.eventBus = eventBus__    };to,use,the,given,guava,event,bus,instance;public,void,set,event,bus,event,bus,event,bus,this,event,bus,event,bus
GuavaEventBusEndpoint -> public void setEventBus(EventBus eventBus);1485947385;To use the given Guava EventBus instance;public void setEventBus(EventBus eventBus) {_        this.eventBus = eventBus__    };to,use,the,given,guava,event,bus,instance;public,void,set,event,bus,event,bus,event,bus,this,event,bus,event,bus
GuavaEventBusEndpoint -> public void setEventBus(EventBus eventBus);1540108163;To use the given Guava EventBus instance;public void setEventBus(EventBus eventBus) {_        this.eventBus = eventBus__    };to,use,the,given,guava,event,bus,instance;public,void,set,event,bus,event,bus,event,bus,this,event,bus,event,bus
GuavaEventBusEndpoint -> public void setEventBus(EventBus eventBus);1547480087;To use the given Guava EventBus instance;public void setEventBus(EventBus eventBus) {_        this.eventBus = eventBus__    };to,use,the,given,guava,event,bus,instance;public,void,set,event,bus,event,bus,event,bus,this,event,bus,event,bus
GuavaEventBusEndpoint -> public void setEventBus(EventBus eventBus);1547805088;To use the given Guava EventBus instance;public void setEventBus(EventBus eventBus) {_        this.eventBus = eventBus__    };to,use,the,given,guava,event,bus,instance;public,void,set,event,bus,event,bus,event,bus,this,event,bus,event,bus
GuavaEventBusEndpoint -> public void setListenerInterface(Class<?> listenerInterface);1430987887;The interface with method(s) marked with the @Subscribe annotation._Dynamic proxy will be created over the interface so it could be registered as the EventBus listener._Particularly useful when creating multi-event listeners and for handling DeadEvent properly. This option cannot be used together with eventClass option.;public void setListenerInterface(Class<?> listenerInterface) {_        this.listenerInterface = listenerInterface__    };the,interface,with,method,s,marked,with,the,subscribe,annotation,dynamic,proxy,will,be,created,over,the,interface,so,it,could,be,registered,as,the,event,bus,listener,particularly,useful,when,creating,multi,event,listeners,and,for,handling,dead,event,properly,this,option,cannot,be,used,together,with,event,class,option;public,void,set,listener,interface,class,listener,interface,this,listener,interface,listener,interface
GuavaEventBusEndpoint -> public void setListenerInterface(Class<?> listenerInterface);1451237126;The interface with method(s) marked with the @Subscribe annotation._Dynamic proxy will be created over the interface so it could be registered as the EventBus listener._Particularly useful when creating multi-event listeners and for handling DeadEvent properly. This option cannot be used together with eventClass option.;public void setListenerInterface(Class<?> listenerInterface) {_        this.listenerInterface = listenerInterface__    };the,interface,with,method,s,marked,with,the,subscribe,annotation,dynamic,proxy,will,be,created,over,the,interface,so,it,could,be,registered,as,the,event,bus,listener,particularly,useful,when,creating,multi,event,listeners,and,for,handling,dead,event,properly,this,option,cannot,be,used,together,with,event,class,option;public,void,set,listener,interface,class,listener,interface,this,listener,interface,listener,interface
GuavaEventBusEndpoint -> public void setListenerInterface(Class<?> listenerInterface);1485947385;The interface with method(s) marked with the @Subscribe annotation._Dynamic proxy will be created over the interface so it could be registered as the EventBus listener._Particularly useful when creating multi-event listeners and for handling DeadEvent properly. This option cannot be used together with eventClass option.;public void setListenerInterface(Class<?> listenerInterface) {_        this.listenerInterface = listenerInterface__    };the,interface,with,method,s,marked,with,the,subscribe,annotation,dynamic,proxy,will,be,created,over,the,interface,so,it,could,be,registered,as,the,event,bus,listener,particularly,useful,when,creating,multi,event,listeners,and,for,handling,dead,event,properly,this,option,cannot,be,used,together,with,event,class,option;public,void,set,listener,interface,class,listener,interface,this,listener,interface,listener,interface
GuavaEventBusEndpoint -> public void setListenerInterface(Class<?> listenerInterface);1540108163;The interface with method(s) marked with the @Subscribe annotation._Dynamic proxy will be created over the interface so it could be registered as the EventBus listener._Particularly useful when creating multi-event listeners and for handling DeadEvent properly. This option cannot be used together with eventClass option.;public void setListenerInterface(Class<?> listenerInterface) {_        this.listenerInterface = listenerInterface__    };the,interface,with,method,s,marked,with,the,subscribe,annotation,dynamic,proxy,will,be,created,over,the,interface,so,it,could,be,registered,as,the,event,bus,listener,particularly,useful,when,creating,multi,event,listeners,and,for,handling,dead,event,properly,this,option,cannot,be,used,together,with,event,class,option;public,void,set,listener,interface,class,listener,interface,this,listener,interface,listener,interface
GuavaEventBusEndpoint -> public void setListenerInterface(Class<?> listenerInterface);1547480087;The interface with method(s) marked with the @Subscribe annotation._Dynamic proxy will be created over the interface so it could be registered as the EventBus listener._Particularly useful when creating multi-event listeners and for handling DeadEvent properly. This option cannot be used together with eventClass option.;public void setListenerInterface(Class<?> listenerInterface) {_        this.listenerInterface = listenerInterface__    };the,interface,with,method,s,marked,with,the,subscribe,annotation,dynamic,proxy,will,be,created,over,the,interface,so,it,could,be,registered,as,the,event,bus,listener,particularly,useful,when,creating,multi,event,listeners,and,for,handling,dead,event,properly,this,option,cannot,be,used,together,with,event,class,option;public,void,set,listener,interface,class,listener,interface,this,listener,interface,listener,interface
GuavaEventBusEndpoint -> public void setListenerInterface(Class<?> listenerInterface);1547805088;The interface with method(s) marked with the @Subscribe annotation._Dynamic proxy will be created over the interface so it could be registered as the EventBus listener._Particularly useful when creating multi-event listeners and for handling DeadEvent properly. This option cannot be used together with eventClass option.;public void setListenerInterface(Class<?> listenerInterface) {_        this.listenerInterface = listenerInterface__    };the,interface,with,method,s,marked,with,the,subscribe,annotation,dynamic,proxy,will,be,created,over,the,interface,so,it,could,be,registered,as,the,event,bus,listener,particularly,useful,when,creating,multi,event,listeners,and,for,handling,dead,event,properly,this,option,cannot,be,used,together,with,event,class,option;public,void,set,listener,interface,class,listener,interface,this,listener,interface,listener,interface
GuavaEventBusEndpoint -> public void setEventBusRef(String eventBusRef);1430987887;To lookup the Guava EventBus from the registry with the given name;public void setEventBusRef(String eventBusRef) {_        this.eventBusRef = eventBusRef__    };to,lookup,the,guava,event,bus,from,the,registry,with,the,given,name;public,void,set,event,bus,ref,string,event,bus,ref,this,event,bus,ref,event,bus,ref
GuavaEventBusEndpoint -> public void setEventBusRef(String eventBusRef);1451237126;To lookup the Guava EventBus from the registry with the given name;public void setEventBusRef(String eventBusRef) {_        this.eventBusRef = eventBusRef__    };to,lookup,the,guava,event,bus,from,the,registry,with,the,given,name;public,void,set,event,bus,ref,string,event,bus,ref,this,event,bus,ref,event,bus,ref
GuavaEventBusEndpoint -> public void setEventBusRef(String eventBusRef);1485947385;To lookup the Guava EventBus from the registry with the given name;public void setEventBusRef(String eventBusRef) {_        this.eventBusRef = eventBusRef__    };to,lookup,the,guava,event,bus,from,the,registry,with,the,given,name;public,void,set,event,bus,ref,string,event,bus,ref,this,event,bus,ref,event,bus,ref
GuavaEventBusEndpoint -> public void setEventBusRef(String eventBusRef);1540108163;To lookup the Guava EventBus from the registry with the given name;public void setEventBusRef(String eventBusRef) {_        this.eventBusRef = eventBusRef__    };to,lookup,the,guava,event,bus,from,the,registry,with,the,given,name;public,void,set,event,bus,ref,string,event,bus,ref,this,event,bus,ref,event,bus,ref
GuavaEventBusEndpoint -> public void setEventBusRef(String eventBusRef);1547480087;To lookup the Guava EventBus from the registry with the given name;public void setEventBusRef(String eventBusRef) {_        this.eventBusRef = eventBusRef__    };to,lookup,the,guava,event,bus,from,the,registry,with,the,given,name;public,void,set,event,bus,ref,string,event,bus,ref,this,event,bus,ref,event,bus,ref
GuavaEventBusEndpoint -> public void setEventBusRef(String eventBusRef);1547805088;To lookup the Guava EventBus from the registry with the given name;public void setEventBusRef(String eventBusRef) {_        this.eventBusRef = eventBusRef__    };to,lookup,the,guava,event,bus,from,the,registry,with,the,given,name;public,void,set,event,bus,ref,string,event,bus,ref,this,event,bus,ref,event,bus,ref
