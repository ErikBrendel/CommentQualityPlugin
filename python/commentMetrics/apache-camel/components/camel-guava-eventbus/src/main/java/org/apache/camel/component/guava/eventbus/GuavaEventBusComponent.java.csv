commented;modifiers;parameterAmount;loc;comment;code
false;protected;3;7;;@Override protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {     GuavaEventBusEndpoint answer = new GuavaEventBusEndpoint(uri, this, eventBus, listenerInterface).     answer.setEventBusRef(remaining).     setProperties(answer, parameters).     return answer. }
false;public;0;3;;public EventBus getEventBus() {     return eventBus. }
true;public;1;3;/**  * To use the given Guava EventBus instance  */ ;/**  * To use the given Guava EventBus instance  */ public void setEventBus(EventBus eventBus) {     this.eventBus = eventBus. }
false;public;0;3;;public Class<?> getListenerInterface() {     return listenerInterface. }
true;public;1;3;/**  * The interface with method(s) marked with the @Subscribe annotation.  * Dynamic proxy will be created over the interface so it could be registered as the EventBus listener.  * Particularly useful when creating multi-event listeners and for handling DeadEvent properly. This option cannot be used together with eventClass option.  */ ;/**  * The interface with method(s) marked with the @Subscribe annotation.  * Dynamic proxy will be created over the interface so it could be registered as the EventBus listener.  * Particularly useful when creating multi-event listeners and for handling DeadEvent properly. This option cannot be used together with eventClass option.  */ public void setListenerInterface(Class<?> listenerInterface) {     this.listenerInterface = listenerInterface. }
