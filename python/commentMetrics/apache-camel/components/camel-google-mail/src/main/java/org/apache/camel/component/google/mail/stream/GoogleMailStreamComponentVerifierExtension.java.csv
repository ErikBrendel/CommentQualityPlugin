commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;8;;// ********************************* // Parameters validation // ********************************* @Override protected Result verifyParameters(Map<String, Object> parameters) {     ResultBuilder builder = ResultBuilder.withStatusAndScope(Result.Status.OK, Scope.PARAMETERS).error(ResultErrorHelper.requiresOption("applicationName", parameters)).error(ResultErrorHelper.requiresOption("clientId", parameters)).error(ResultErrorHelper.requiresOption("clientSecret", parameters)).     return builder.build(). }
false;protected;1;22;;// ********************************* // Connectivity validation // ********************************* @Override @SuppressWarnings("PMD.AvoidCatchingGenericException") protected Result verifyConnectivity(Map<String, Object> parameters) {     ResultBuilder builder = ResultBuilder.withStatusAndScope(Result.Status.OK, Scope.CONNECTIVITY).     try {         GoogleMailConfiguration configuration = setProperties(new GoogleMailConfiguration(), parameters).         GoogleMailClientFactory clientFactory = new BatchGoogleMailClientFactory().         Gmail client = clientFactory.makeClient(configuration.getClientId(), configuration.getClientSecret(), configuration.getApplicationName(), configuration.getRefreshToken(), configuration.getAccessToken()).         client.users().getProfile((String) parameters.get("userId")).execute().     } catch (Exception e) {         ResultErrorBuilder errorBuilder = ResultErrorBuilder.withCodeAndDescription(VerificationError.StandardCode.AUTHENTICATION, e.getMessage()).detail("gmail_exception_message", e.getMessage()).detail(VerificationError.ExceptionAttribute.EXCEPTION_CLASS, e.getClass().getName()).detail(VerificationError.ExceptionAttribute.EXCEPTION_INSTANCE, e).         builder.error(errorBuilder.build()).     }     return builder.build(). }
