commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public Producer createProducer() throws Exception {     return new GoogleMailProducer(this). }
false;public;1;11;;@Override public Consumer createConsumer(Processor processor) throws Exception {     // make sure inBody is not set for consumers     if (inBody != null) {         throw new IllegalArgumentException("Option inBody is not supported for consumer endpoint").     }     final GoogleMailConsumer consumer = new GoogleMailConsumer(this, processor).     // also set consumer.* properties     configureConsumer(consumer).     return consumer. }
false;protected;0;4;;@Override protected ApiMethodPropertiesHelper<GoogleMailConfiguration> getPropertiesHelper() {     return GoogleMailPropertiesHelper.getHelper(). }
false;protected;0;4;;@Override protected String getThreadProfileName() {     return GoogleMailConstants.THREAD_PROFILE_NAME. }
false;protected;0;28;;@Override protected void afterConfigureProperties() {     switch(apiName) {         case ATTACHMENTS:             apiProxy = getClient().users().messages().attachments().             break.         case DRAFTS:             apiProxy = getClient().users().drafts().             break.         case HISTORY:             apiProxy = getClient().users().history().             break.         case LABELS:             apiProxy = getClient().users().labels().             break.         case MESSAGES:             apiProxy = getClient().users().messages().             break.         case THREADS:             apiProxy = getClient().users().threads().             break.         case USERS:             apiProxy = getClient().users().             break.         default:             throw new IllegalArgumentException("Invalid API name " + apiName).     } }
false;public;0;3;;public Gmail getClient() {     return ((GoogleMailComponent) getComponent()).getClient(configuration). }
false;public;2;4;;@Override public Object getApiProxy(ApiMethod method, Map<String, Object> args) {     return apiProxy. }
false;public;0;3;;public GoogleMailClientFactory getClientFactory() {     return ((GoogleMailComponent) getComponent()).getClientFactory(). }
false;public;1;3;;public void setClientFactory(GoogleMailClientFactory clientFactory) {     ((GoogleMailComponent) getComponent()).setClientFactory(clientFactory). }
