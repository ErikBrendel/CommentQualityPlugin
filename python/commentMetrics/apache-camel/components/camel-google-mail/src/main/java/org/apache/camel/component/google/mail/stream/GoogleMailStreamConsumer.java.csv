# id;timestamp;commentText;codeText;commentWords;codeWords
GoogleMailStreamConsumer -> protected void processRollback(Exchange exchange, String unreadLabelId);1528295342;Strategy when processing the exchange failed.__@param exchange the exchange_@throws IOException;protected void processRollback(Exchange exchange, String unreadLabelId) {_        try {_            LOG.warn("Exchange failed, so rolling back mail {} to un " + exchange)___            List<String> add = new ArrayList<String>()__            add.add(unreadLabelId)__            ModifyMessageRequest mods = new ModifyMessageRequest().setAddLabelIds(add)__            getClient().users().messages().modify("me", exchange.getIn().getHeader(GoogleMailStreamConstants.MAIL_ID, String.class), mods).execute()__        } catch (Exception e) {_            getExceptionHandler().handleException("Error occurred mark as read mail. This exception is ignored.", exchange, e)__        }_    };strategy,when,processing,the,exchange,failed,param,exchange,the,exchange,throws,ioexception;protected,void,process,rollback,exchange,exchange,string,unread,label,id,try,log,warn,exchange,failed,so,rolling,back,mail,to,un,exchange,list,string,add,new,array,list,string,add,add,unread,label,id,modify,message,request,mods,new,modify,message,request,set,add,label,ids,add,get,client,users,messages,modify,me,exchange,get,in,get,header,google,mail,stream,constants,string,class,mods,execute,catch,exception,e,get,exception,handler,handle,exception,error,occurred,mark,as,read,mail,this,exception,is,ignored,exchange,e
GoogleMailStreamConsumer -> protected void processRollback(Exchange exchange, String unreadLabelId);1528353383;Strategy when processing the exchange failed.__@param exchange the exchange_@throws IOException;protected void processRollback(Exchange exchange, String unreadLabelId) {_        try {_            LOG.warn("Exchange failed, so rolling back mail {} to un " + exchange)___            List<String> add = new ArrayList<String>()__            add.add(unreadLabelId)__            ModifyMessageRequest mods = new ModifyMessageRequest().setAddLabelIds(add)__            getClient().users().messages().modify("me", exchange.getIn().getHeader(GoogleMailStreamConstants.MAIL_ID, String.class), mods).execute()__        } catch (Exception e) {_            getExceptionHandler().handleException("Error occurred mark as read mail. This exception is ignored.", exchange, e)__        }_    };strategy,when,processing,the,exchange,failed,param,exchange,the,exchange,throws,ioexception;protected,void,process,rollback,exchange,exchange,string,unread,label,id,try,log,warn,exchange,failed,so,rolling,back,mail,to,un,exchange,list,string,add,new,array,list,string,add,add,unread,label,id,modify,message,request,mods,new,modify,message,request,set,add,label,ids,add,get,client,users,messages,modify,me,exchange,get,in,get,header,google,mail,stream,constants,string,class,mods,execute,catch,exception,e,get,exception,handler,handle,exception,error,occurred,mark,as,read,mail,this,exception,is,ignored,exchange,e
GoogleMailStreamConsumer -> protected void processRollback(Exchange exchange, String unreadLabelId);1528437836;Strategy when processing the exchange failed.__@param exchange the exchange_@throws IOException;protected void processRollback(Exchange exchange, String unreadLabelId) {_        try {_            LOG.warn("Exchange failed, so rolling back mail {} to un " + exchange)___            List<String> add = new ArrayList<String>()__            add.add(unreadLabelId)__            ModifyMessageRequest mods = new ModifyMessageRequest().setAddLabelIds(add)__            getClient().users().messages().modify("me", exchange.getIn().getHeader(GoogleMailStreamConstants.MAIL_ID, String.class), mods).execute()__        } catch (Exception e) {_            getExceptionHandler().handleException("Error occurred mark as read mail. This exception is ignored.", exchange, e)__        }_    };strategy,when,processing,the,exchange,failed,param,exchange,the,exchange,throws,ioexception;protected,void,process,rollback,exchange,exchange,string,unread,label,id,try,log,warn,exchange,failed,so,rolling,back,mail,to,un,exchange,list,string,add,new,array,list,string,add,add,unread,label,id,modify,message,request,mods,new,modify,message,request,set,add,label,ids,add,get,client,users,messages,modify,me,exchange,get,in,get,header,google,mail,stream,constants,string,class,mods,execute,catch,exception,e,get,exception,handler,handle,exception,error,occurred,mark,as,read,mail,this,exception,is,ignored,exchange,e
GoogleMailStreamConsumer -> protected void processRollback(Exchange exchange, String unreadLabelId);1528440148;Strategy when processing the exchange failed.__@param exchange the exchange_@throws IOException;protected void processRollback(Exchange exchange, String unreadLabelId) {_        try {_            LOG.warn("Exchange failed, so rolling back mail {} to un " + exchange)___            List<String> add = new ArrayList<String>()__            add.add(unreadLabelId)__            ModifyMessageRequest mods = new ModifyMessageRequest().setAddLabelIds(add)__            getClient().users().messages().modify("me", exchange.getIn().getHeader(GoogleMailStreamConstants.MAIL_ID, String.class), mods).execute()__        } catch (Exception e) {_            getExceptionHandler().handleException("Error occurred mark as read mail. This exception is ignored.", exchange, e)__        }_    };strategy,when,processing,the,exchange,failed,param,exchange,the,exchange,throws,ioexception;protected,void,process,rollback,exchange,exchange,string,unread,label,id,try,log,warn,exchange,failed,so,rolling,back,mail,to,un,exchange,list,string,add,new,array,list,string,add,add,unread,label,id,modify,message,request,mods,new,modify,message,request,set,add,label,ids,add,get,client,users,messages,modify,me,exchange,get,in,get,header,google,mail,stream,constants,string,class,mods,execute,catch,exception,e,get,exception,handler,handle,exception,error,occurred,mark,as,read,mail,this,exception,is,ignored,exchange,e
GoogleMailStreamConsumer -> protected void processRollback(Exchange exchange, String unreadLabelId);1528633215;Strategy when processing the exchange failed.__@param exchange the exchange_@throws IOException;protected void processRollback(Exchange exchange, String unreadLabelId) {_        try {_            LOG.warn("Exchange failed, so rolling back mail {} to un " + exchange)___            List<String> add = new ArrayList<>()__            add.add(unreadLabelId)__            ModifyMessageRequest mods = new ModifyMessageRequest().setAddLabelIds(add)__            getClient().users().messages().modify("me", exchange.getIn().getHeader(GoogleMailStreamConstants.MAIL_ID, String.class), mods).execute()__        } catch (Exception e) {_            getExceptionHandler().handleException("Error occurred mark as read mail. This exception is ignored.", exchange, e)__        }_    };strategy,when,processing,the,exchange,failed,param,exchange,the,exchange,throws,ioexception;protected,void,process,rollback,exchange,exchange,string,unread,label,id,try,log,warn,exchange,failed,so,rolling,back,mail,to,un,exchange,list,string,add,new,array,list,add,add,unread,label,id,modify,message,request,mods,new,modify,message,request,set,add,label,ids,add,get,client,users,messages,modify,me,exchange,get,in,get,header,google,mail,stream,constants,string,class,mods,execute,catch,exception,e,get,exception,handler,handle,exception,error,occurred,mark,as,read,mail,this,exception,is,ignored,exchange,e
GoogleMailStreamConsumer -> protected void processRollback(Exchange exchange, String unreadLabelId);1528633668;Strategy when processing the exchange failed.__@param exchange the exchange_@throws IOException;protected void processRollback(Exchange exchange, String unreadLabelId) {_        try {_            LOG.warn("Exchange failed, so rolling back mail {} to un " + exchange)___            List<String> add = new ArrayList<>()__            add.add(unreadLabelId)__            ModifyMessageRequest mods = new ModifyMessageRequest().setAddLabelIds(add)__            getClient().users().messages().modify("me", exchange.getIn().getHeader(GoogleMailStreamConstants.MAIL_ID, String.class), mods).execute()__        } catch (Exception e) {_            getExceptionHandler().handleException("Error occurred mark as read mail. This exception is ignored.", exchange, e)__        }_    };strategy,when,processing,the,exchange,failed,param,exchange,the,exchange,throws,ioexception;protected,void,process,rollback,exchange,exchange,string,unread,label,id,try,log,warn,exchange,failed,so,rolling,back,mail,to,un,exchange,list,string,add,new,array,list,add,add,unread,label,id,modify,message,request,mods,new,modify,message,request,set,add,label,ids,add,get,client,users,messages,modify,me,exchange,get,in,get,header,google,mail,stream,constants,string,class,mods,execute,catch,exception,e,get,exception,handler,handle,exception,error,occurred,mark,as,read,mail,this,exception,is,ignored,exchange,e
GoogleMailStreamConsumer -> protected void processRollback(Exchange exchange, String unreadLabelId);1536687142;Strategy when processing the exchange failed.__@param exchange the exchange_@throws IOException;protected void processRollback(Exchange exchange, String unreadLabelId) {_        try {_            LOG.warn("Exchange failed, so rolling back mail {} to un {}", exchange)___            List<String> add = new ArrayList<>()__            add.add(unreadLabelId)__            ModifyMessageRequest mods = new ModifyMessageRequest().setAddLabelIds(add)__            getClient().users().messages().modify("me", exchange.getIn().getHeader(GoogleMailStreamConstants.MAIL_ID, String.class), mods).execute()__        } catch (Exception e) {_            getExceptionHandler().handleException("Error occurred mark as read mail. This exception is ignored.", exchange, e)__        }_    };strategy,when,processing,the,exchange,failed,param,exchange,the,exchange,throws,ioexception;protected,void,process,rollback,exchange,exchange,string,unread,label,id,try,log,warn,exchange,failed,so,rolling,back,mail,to,un,exchange,list,string,add,new,array,list,add,add,unread,label,id,modify,message,request,mods,new,modify,message,request,set,add,label,ids,add,get,client,users,messages,modify,me,exchange,get,in,get,header,google,mail,stream,constants,string,class,mods,execute,catch,exception,e,get,exception,handler,handle,exception,error,occurred,mark,as,read,mail,this,exception,is,ignored,exchange,e
GoogleMailStreamConsumer -> protected void processRollback(Exchange exchange, String unreadLabelId);1540108163;Strategy when processing the exchange failed.__@param exchange the exchange_@throws IOException;protected void processRollback(Exchange exchange, String unreadLabelId) {_        try {_            LOG.warn("Exchange failed, so rolling back mail {} to un {}", exchange)___            List<String> add = new ArrayList<>()__            add.add(unreadLabelId)__            ModifyMessageRequest mods = new ModifyMessageRequest().setAddLabelIds(add)__            getClient().users().messages().modify("me", exchange.getIn().getHeader(GoogleMailStreamConstants.MAIL_ID, String.class), mods).execute()__        } catch (Exception e) {_            getExceptionHandler().handleException("Error occurred mark as read mail. This exception is ignored.", exchange, e)__        }_    };strategy,when,processing,the,exchange,failed,param,exchange,the,exchange,throws,ioexception;protected,void,process,rollback,exchange,exchange,string,unread,label,id,try,log,warn,exchange,failed,so,rolling,back,mail,to,un,exchange,list,string,add,new,array,list,add,add,unread,label,id,modify,message,request,mods,new,modify,message,request,set,add,label,ids,add,get,client,users,messages,modify,me,exchange,get,in,get,header,google,mail,stream,constants,string,class,mods,execute,catch,exception,e,get,exception,handler,handle,exception,error,occurred,mark,as,read,mail,this,exception,is,ignored,exchange,e
GoogleMailStreamConsumer -> protected void processRollback(Exchange exchange, String unreadLabelId);1547802590;Strategy when processing the exchange failed.__@param exchange the exchange_@throws IOException;protected void processRollback(Exchange exchange, String unreadLabelId) {_        try {_            LOG.warn("Exchange failed, so rolling back mail {} to un {}", exchange)___            List<String> add = new ArrayList<>()__            add.add(unreadLabelId)__            ModifyMessageRequest mods = new ModifyMessageRequest().setAddLabelIds(add)__            getClient().users().messages().modify("me", exchange.getIn().getHeader(GoogleMailStreamConstants.MAIL_ID, String.class), mods).execute()__        } catch (Exception e) {_            getExceptionHandler().handleException("Error occurred mark as read mail. This exception is ignored.", exchange, e)__        }_    };strategy,when,processing,the,exchange,failed,param,exchange,the,exchange,throws,ioexception;protected,void,process,rollback,exchange,exchange,string,unread,label,id,try,log,warn,exchange,failed,so,rolling,back,mail,to,un,exchange,list,string,add,new,array,list,add,add,unread,label,id,modify,message,request,mods,new,modify,message,request,set,add,label,ids,add,get,client,users,messages,modify,me,exchange,get,in,get,header,google,mail,stream,constants,string,class,mods,execute,catch,exception,e,get,exception,handler,handle,exception,error,occurred,mark,as,read,mail,this,exception,is,ignored,exchange,e
GoogleMailStreamConsumer -> protected void processCommit(Exchange exchange, String unreadLabelId);1528295342;Strategy to delete the message after being processed.__@param exchange the exchange_@throws IOException;protected void processCommit(Exchange exchange, String unreadLabelId) {_        try {_            if (getConfiguration().isMarkAsRead()) {_                String id = exchange.getIn().getHeader(GoogleMailStreamConstants.MAIL_ID, String.class)___                LOG.trace("Marking email {} as read", id)___                List<String> remove = new ArrayList<String>()__                remove.add(unreadLabelId)__                ModifyMessageRequest mods = new ModifyMessageRequest().setRemoveLabelIds(remove)__                getClient().users().messages().modify("me", exchange.getIn().getHeader(GoogleMailStreamConstants.MAIL_ID, String.class), mods).execute()___                LOG.trace("Marked email {} as read", id)__            }_        } catch (Exception e) {_            getExceptionHandler().handleException("Error occurred mark as read mail. This exception is ignored.", exchange, e)__        }__    };strategy,to,delete,the,message,after,being,processed,param,exchange,the,exchange,throws,ioexception;protected,void,process,commit,exchange,exchange,string,unread,label,id,try,if,get,configuration,is,mark,as,read,string,id,exchange,get,in,get,header,google,mail,stream,constants,string,class,log,trace,marking,email,as,read,id,list,string,remove,new,array,list,string,remove,add,unread,label,id,modify,message,request,mods,new,modify,message,request,set,remove,label,ids,remove,get,client,users,messages,modify,me,exchange,get,in,get,header,google,mail,stream,constants,string,class,mods,execute,log,trace,marked,email,as,read,id,catch,exception,e,get,exception,handler,handle,exception,error,occurred,mark,as,read,mail,this,exception,is,ignored,exchange,e
GoogleMailStreamConsumer -> protected void processCommit(Exchange exchange, String unreadLabelId);1528353383;Strategy to delete the message after being processed.__@param exchange the exchange_@throws IOException;protected void processCommit(Exchange exchange, String unreadLabelId) {_        try {_            if (getConfiguration().isMarkAsRead()) {_                String id = exchange.getIn().getHeader(GoogleMailStreamConstants.MAIL_ID, String.class)___                LOG.trace("Marking email {} as read", id)___                List<String> remove = new ArrayList<String>()__                remove.add(unreadLabelId)__                ModifyMessageRequest mods = new ModifyMessageRequest().setRemoveLabelIds(remove)__                getClient().users().messages().modify("me", exchange.getIn().getHeader(GoogleMailStreamConstants.MAIL_ID, String.class), mods).execute()___                LOG.trace("Marked email {} as read", id)__            }_        } catch (Exception e) {_            getExceptionHandler().handleException("Error occurred mark as read mail. This exception is ignored.", exchange, e)__        }__    };strategy,to,delete,the,message,after,being,processed,param,exchange,the,exchange,throws,ioexception;protected,void,process,commit,exchange,exchange,string,unread,label,id,try,if,get,configuration,is,mark,as,read,string,id,exchange,get,in,get,header,google,mail,stream,constants,string,class,log,trace,marking,email,as,read,id,list,string,remove,new,array,list,string,remove,add,unread,label,id,modify,message,request,mods,new,modify,message,request,set,remove,label,ids,remove,get,client,users,messages,modify,me,exchange,get,in,get,header,google,mail,stream,constants,string,class,mods,execute,log,trace,marked,email,as,read,id,catch,exception,e,get,exception,handler,handle,exception,error,occurred,mark,as,read,mail,this,exception,is,ignored,exchange,e
GoogleMailStreamConsumer -> protected void processCommit(Exchange exchange, String unreadLabelId);1528437836;Strategy to delete the message after being processed.__@param exchange the exchange_@throws IOException;protected void processCommit(Exchange exchange, String unreadLabelId) {_        try {_            System.err.println("mark as read!" + getConfiguration().isMarkAsRead())__            if (getConfiguration().isMarkAsRead()) {_                String id = exchange.getIn().getHeader(GoogleMailStreamConstants.MAIL_ID, String.class)___                LOG.trace("Marking email {} as read", id)___                List<String> remove = new ArrayList<String>()__                remove.add(unreadLabelId)__                ModifyMessageRequest mods = new ModifyMessageRequest().setRemoveLabelIds(remove)__                getClient().users().messages().modify("me", exchange.getIn().getHeader(GoogleMailStreamConstants.MAIL_ID, String.class), mods).execute()___                LOG.trace("Marked email {} as read", id)__            }_        } catch (Exception e) {_            getExceptionHandler().handleException("Error occurred mark as read mail. This exception is ignored.", exchange, e)__        }__    };strategy,to,delete,the,message,after,being,processed,param,exchange,the,exchange,throws,ioexception;protected,void,process,commit,exchange,exchange,string,unread,label,id,try,system,err,println,mark,as,read,get,configuration,is,mark,as,read,if,get,configuration,is,mark,as,read,string,id,exchange,get,in,get,header,google,mail,stream,constants,string,class,log,trace,marking,email,as,read,id,list,string,remove,new,array,list,string,remove,add,unread,label,id,modify,message,request,mods,new,modify,message,request,set,remove,label,ids,remove,get,client,users,messages,modify,me,exchange,get,in,get,header,google,mail,stream,constants,string,class,mods,execute,log,trace,marked,email,as,read,id,catch,exception,e,get,exception,handler,handle,exception,error,occurred,mark,as,read,mail,this,exception,is,ignored,exchange,e
GoogleMailStreamConsumer -> protected void processCommit(Exchange exchange, String unreadLabelId);1528440148;Strategy to delete the message after being processed.__@param exchange the exchange_@throws IOException;protected void processCommit(Exchange exchange, String unreadLabelId) {_        try {_            if (getConfiguration().isMarkAsRead()) {_                String id = exchange.getIn().getHeader(GoogleMailStreamConstants.MAIL_ID, String.class)___                LOG.trace("Marking email {} as read", id)___                List<String> remove = new ArrayList<String>()__                remove.add(unreadLabelId)__                ModifyMessageRequest mods = new ModifyMessageRequest().setRemoveLabelIds(remove)__                getClient().users().messages().modify("me", exchange.getIn().getHeader(GoogleMailStreamConstants.MAIL_ID, String.class), mods).execute()___                LOG.trace("Marked email {} as read", id)__            }_        } catch (Exception e) {_            getExceptionHandler().handleException("Error occurred mark as read mail. This exception is ignored.", exchange, e)__        }__    };strategy,to,delete,the,message,after,being,processed,param,exchange,the,exchange,throws,ioexception;protected,void,process,commit,exchange,exchange,string,unread,label,id,try,if,get,configuration,is,mark,as,read,string,id,exchange,get,in,get,header,google,mail,stream,constants,string,class,log,trace,marking,email,as,read,id,list,string,remove,new,array,list,string,remove,add,unread,label,id,modify,message,request,mods,new,modify,message,request,set,remove,label,ids,remove,get,client,users,messages,modify,me,exchange,get,in,get,header,google,mail,stream,constants,string,class,mods,execute,log,trace,marked,email,as,read,id,catch,exception,e,get,exception,handler,handle,exception,error,occurred,mark,as,read,mail,this,exception,is,ignored,exchange,e
GoogleMailStreamConsumer -> protected void processCommit(Exchange exchange, String unreadLabelId);1528633215;Strategy to delete the message after being processed.__@param exchange the exchange_@throws IOException;protected void processCommit(Exchange exchange, String unreadLabelId) {_        try {_            if (getConfiguration().isMarkAsRead()) {_                String id = exchange.getIn().getHeader(GoogleMailStreamConstants.MAIL_ID, String.class)___                LOG.trace("Marking email {} as read", id)___                List<String> remove = new ArrayList<>()__                remove.add(unreadLabelId)__                ModifyMessageRequest mods = new ModifyMessageRequest().setRemoveLabelIds(remove)__                getClient().users().messages().modify("me", exchange.getIn().getHeader(GoogleMailStreamConstants.MAIL_ID, String.class), mods).execute()___                LOG.trace("Marked email {} as read", id)__            }_        } catch (Exception e) {_            getExceptionHandler().handleException("Error occurred mark as read mail. This exception is ignored.", exchange, e)__        }__    };strategy,to,delete,the,message,after,being,processed,param,exchange,the,exchange,throws,ioexception;protected,void,process,commit,exchange,exchange,string,unread,label,id,try,if,get,configuration,is,mark,as,read,string,id,exchange,get,in,get,header,google,mail,stream,constants,string,class,log,trace,marking,email,as,read,id,list,string,remove,new,array,list,remove,add,unread,label,id,modify,message,request,mods,new,modify,message,request,set,remove,label,ids,remove,get,client,users,messages,modify,me,exchange,get,in,get,header,google,mail,stream,constants,string,class,mods,execute,log,trace,marked,email,as,read,id,catch,exception,e,get,exception,handler,handle,exception,error,occurred,mark,as,read,mail,this,exception,is,ignored,exchange,e
GoogleMailStreamConsumer -> protected void processCommit(Exchange exchange, String unreadLabelId);1528633668;Strategy to delete the message after being processed.__@param exchange the exchange_@throws IOException;protected void processCommit(Exchange exchange, String unreadLabelId) {_        try {_            if (getConfiguration().isMarkAsRead()) {_                String id = exchange.getIn().getHeader(GoogleMailStreamConstants.MAIL_ID, String.class)___                LOG.trace("Marking email {} as read", id)___                List<String> remove = new ArrayList<>()__                remove.add(unreadLabelId)__                ModifyMessageRequest mods = new ModifyMessageRequest().setRemoveLabelIds(remove)__                getClient().users().messages().modify("me", exchange.getIn().getHeader(GoogleMailStreamConstants.MAIL_ID, String.class), mods).execute()___                LOG.trace("Marked email {} as read", id)__            }_        } catch (Exception e) {_            getExceptionHandler().handleException("Error occurred mark as read mail. This exception is ignored.", exchange, e)__        }__    };strategy,to,delete,the,message,after,being,processed,param,exchange,the,exchange,throws,ioexception;protected,void,process,commit,exchange,exchange,string,unread,label,id,try,if,get,configuration,is,mark,as,read,string,id,exchange,get,in,get,header,google,mail,stream,constants,string,class,log,trace,marking,email,as,read,id,list,string,remove,new,array,list,remove,add,unread,label,id,modify,message,request,mods,new,modify,message,request,set,remove,label,ids,remove,get,client,users,messages,modify,me,exchange,get,in,get,header,google,mail,stream,constants,string,class,mods,execute,log,trace,marked,email,as,read,id,catch,exception,e,get,exception,handler,handle,exception,error,occurred,mark,as,read,mail,this,exception,is,ignored,exchange,e
GoogleMailStreamConsumer -> protected void processCommit(Exchange exchange, String unreadLabelId);1536687142;Strategy to delete the message after being processed.__@param exchange the exchange_@throws IOException;protected void processCommit(Exchange exchange, String unreadLabelId) {_        try {_            if (getConfiguration().isMarkAsRead()) {_                String id = exchange.getIn().getHeader(GoogleMailStreamConstants.MAIL_ID, String.class)___                LOG.trace("Marking email {} as read", id)___                List<String> remove = new ArrayList<>()__                remove.add(unreadLabelId)__                ModifyMessageRequest mods = new ModifyMessageRequest().setRemoveLabelIds(remove)__                getClient().users().messages().modify("me", exchange.getIn().getHeader(GoogleMailStreamConstants.MAIL_ID, String.class), mods).execute()___                LOG.trace("Marked email {} as read", id)__            }_        } catch (Exception e) {_            getExceptionHandler().handleException("Error occurred mark as read mail. This exception is ignored.", exchange, e)__        }__    };strategy,to,delete,the,message,after,being,processed,param,exchange,the,exchange,throws,ioexception;protected,void,process,commit,exchange,exchange,string,unread,label,id,try,if,get,configuration,is,mark,as,read,string,id,exchange,get,in,get,header,google,mail,stream,constants,string,class,log,trace,marking,email,as,read,id,list,string,remove,new,array,list,remove,add,unread,label,id,modify,message,request,mods,new,modify,message,request,set,remove,label,ids,remove,get,client,users,messages,modify,me,exchange,get,in,get,header,google,mail,stream,constants,string,class,mods,execute,log,trace,marked,email,as,read,id,catch,exception,e,get,exception,handler,handle,exception,error,occurred,mark,as,read,mail,this,exception,is,ignored,exchange,e
GoogleMailStreamConsumer -> protected void processCommit(Exchange exchange, String unreadLabelId);1540108163;Strategy to delete the message after being processed.__@param exchange the exchange_@throws IOException;protected void processCommit(Exchange exchange, String unreadLabelId) {_        try {_            if (getConfiguration().isMarkAsRead()) {_                String id = exchange.getIn().getHeader(GoogleMailStreamConstants.MAIL_ID, String.class)___                LOG.trace("Marking email {} as read", id)___                List<String> remove = new ArrayList<>()__                remove.add(unreadLabelId)__                ModifyMessageRequest mods = new ModifyMessageRequest().setRemoveLabelIds(remove)__                getClient().users().messages().modify("me", exchange.getIn().getHeader(GoogleMailStreamConstants.MAIL_ID, String.class), mods).execute()___                LOG.trace("Marked email {} as read", id)__            }_        } catch (Exception e) {_            getExceptionHandler().handleException("Error occurred mark as read mail. This exception is ignored.", exchange, e)__        }__    };strategy,to,delete,the,message,after,being,processed,param,exchange,the,exchange,throws,ioexception;protected,void,process,commit,exchange,exchange,string,unread,label,id,try,if,get,configuration,is,mark,as,read,string,id,exchange,get,in,get,header,google,mail,stream,constants,string,class,log,trace,marking,email,as,read,id,list,string,remove,new,array,list,remove,add,unread,label,id,modify,message,request,mods,new,modify,message,request,set,remove,label,ids,remove,get,client,users,messages,modify,me,exchange,get,in,get,header,google,mail,stream,constants,string,class,mods,execute,log,trace,marked,email,as,read,id,catch,exception,e,get,exception,handler,handle,exception,error,occurred,mark,as,read,mail,this,exception,is,ignored,exchange,e
GoogleMailStreamConsumer -> protected void processCommit(Exchange exchange, String unreadLabelId);1547802590;Strategy to delete the message after being processed.__@param exchange the exchange_@throws IOException;protected void processCommit(Exchange exchange, String unreadLabelId) {_        try {_            if (getConfiguration().isMarkAsRead()) {_                String id = exchange.getIn().getHeader(GoogleMailStreamConstants.MAIL_ID, String.class)___                LOG.trace("Marking email {} as read", id)___                List<String> remove = new ArrayList<>()__                remove.add(unreadLabelId)__                ModifyMessageRequest mods = new ModifyMessageRequest().setRemoveLabelIds(remove)__                getClient().users().messages().modify("me", exchange.getIn().getHeader(GoogleMailStreamConstants.MAIL_ID, String.class), mods).execute()___                LOG.trace("Marked email {} as read", id)__            }_        } catch (Exception e) {_            getExceptionHandler().handleException("Error occurred mark as read mail. This exception is ignored.", exchange, e)__        }__    };strategy,to,delete,the,message,after,being,processed,param,exchange,the,exchange,throws,ioexception;protected,void,process,commit,exchange,exchange,string,unread,label,id,try,if,get,configuration,is,mark,as,read,string,id,exchange,get,in,get,header,google,mail,stream,constants,string,class,log,trace,marking,email,as,read,id,list,string,remove,new,array,list,remove,add,unread,label,id,modify,message,request,mods,new,modify,message,request,set,remove,label,ids,remove,get,client,users,messages,modify,me,exchange,get,in,get,header,google,mail,stream,constants,string,class,mods,execute,log,trace,marked,email,as,read,id,catch,exception,e,get,exception,handler,handle,exception,error,occurred,mark,as,read,mail,this,exception,is,ignored,exchange,e
