commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public String getClientId() {     return clientId. }
true;public;1;3;/**  * Client ID of the mail application  */ ;/**  * Client ID of the mail application  */ public void setClientId(String clientId) {     this.clientId = clientId. }
false;public;0;3;;public String getClientSecret() {     return clientSecret. }
true;public;1;3;/**  * Client secret of the mail application  */ ;/**  * Client secret of the mail application  */ public void setClientSecret(String clientSecret) {     this.clientSecret = clientSecret. }
false;public;0;3;;public String getAccessToken() {     return accessToken. }
true;public;1;3;/**  * OAuth 2 access token. This typically expires after an hour so  * refreshToken is recommended for long term usage.  */ ;/**  * OAuth 2 access token. This typically expires after an hour so  * refreshToken is recommended for long term usage.  */ public void setAccessToken(String accessToken) {     this.accessToken = accessToken. }
false;public;0;3;;public String getRefreshToken() {     return refreshToken. }
true;public;1;3;/**  * OAuth 2 refresh token. Using this, the Google Calendar component can  * obtain a new accessToken whenever the current one expires - a necessity  * if the application is long-lived.  */ ;/**  * OAuth 2 refresh token. Using this, the Google Calendar component can  * obtain a new accessToken whenever the current one expires - a necessity  * if the application is long-lived.  */ public void setRefreshToken(String refreshToken) {     this.refreshToken = refreshToken. }
false;public;0;3;;public String getApplicationName() {     return applicationName. }
true;public;1;3;/**  * Google mail application name. Example would be "camel-google-mail/1.0"  */ ;/**  * Google mail application name. Example would be "camel-google-mail/1.0"  */ public void setApplicationName(String applicationName) {     this.applicationName = applicationName. }
false;public;0;3;;public String getIndex() {     return index. }
true;public;1;3;/**  * Specifies an index for the endpoint  */ ;/**  * Specifies an index for the endpoint  */ public void setIndex(String index) {     this.index = index. }
false;public;0;3;;public String getQuery() {     return query. }
true;public;1;3;/**  * The query to execute on gmail box  */ ;/**  * The query to execute on gmail box  */ public void setQuery(String query) {     this.query = query. }
false;public;0;3;;public long getMaxResults() {     return maxResults. }
true;public;1;3;/**  * Max results to be returned  */ ;/**  * Max results to be returned  */ public void setMaxResults(long maxResults) {     this.maxResults = maxResults. }
false;public;0;3;;public String getLabels() {     return labels. }
true;public;1;3;/**  * Comma separated list of labels to take into account  */ ;/**  * Comma separated list of labels to take into account  */ public void setLabels(String labels) {     this.labels = labels. }
false;public;0;3;;public boolean isMarkAsRead() {     return markAsRead. }
true;public;1;3;/**  * Mark the message as read once it has been consumed  */ ;/**  * Mark the message as read once it has been consumed  */ public void setMarkAsRead(boolean markAsRead) {     this.markAsRead = markAsRead. }
false;public;0;7;;// ************************************************* //  // ************************************************* public GoogleMailStreamConfiguration copy() {     try {         return (GoogleMailStreamConfiguration) super.clone().     } catch (CloneNotSupportedException e) {         throw new RuntimeCamelException(e).     } }
