commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testConsumer() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMinimumMessageCount(1).     assertMockEndpointsSatisfied().     assertTrue(mock.getExchanges().get(0).getIn().getBody() instanceof ListMessagesResponse). }
false;public;0;6;;@Override public void configure() {     from("google-mail://" + PATH_PREFIX + "/list?userId=me").to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() {             from("google-mail://" + PATH_PREFIX + "/list?userId=me").to("mock:result").         }     }. }
