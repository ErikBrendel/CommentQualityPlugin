commented;modifiers;parameterAmount;loc;comment;code
false;public;2;3;;public void beforeWrap(RouteContext routeContext, NamedNode definition) { // noop }
false;public;2;6;;public Processor wrap(RouteContext routeContext, final Processor processor) {     if (LOG.isDebugEnabled()) {         LOG.debug("Securing route {} using Shiro policy {}", routeContext.getRoute().getId(), this).     }     return new ShiroSecurityProcessor(processor, this). }
false;public;0;3;;public CipherService getCipherService() {     return cipherService. }
false;public;1;3;;public void setCipherService(CipherService cipherService) {     this.cipherService = cipherService. }
false;public;0;3;;public SecurityManager getSecurityManager() {     return securityManager. }
false;public;1;3;;public void setSecurityManager(SecurityManager securityManager) {     this.securityManager = securityManager. }
false;public;0;3;;public byte[] getPassPhrase() {     return passPhrase. }
false;public;1;3;;public void setPassPhrase(byte[] passPhrase) {     this.passPhrase = passPhrase. }
false;public;0;3;;public List<Permission> getPermissionsList() {     return permissionsList. }
false;public;1;3;;public void setPermissionsList(List<Permission> permissionsList) {     this.permissionsList = permissionsList. }
false;public;0;3;;public boolean isAlwaysReauthenticate() {     return alwaysReauthenticate. }
false;public;1;3;;public void setAlwaysReauthenticate(boolean alwaysReauthenticate) {     this.alwaysReauthenticate = alwaysReauthenticate. }
false;public;0;3;;public boolean isBase64() {     return base64. }
false;public;1;3;;public void setBase64(boolean base64) {     this.base64 = base64. }
false;public;0;3;;public boolean isAllPermissionsRequired() {     return allPermissionsRequired. }
false;public;1;3;;public void setAllPermissionsRequired(boolean allPermissionsRequired) {     this.allPermissionsRequired = allPermissionsRequired. }
false;public;0;3;;public List<String> getRolesList() {     return rolesList. }
false;public;1;3;;public void setRolesList(List<String> rolesList) {     this.rolesList = rolesList. }
false;public;0;3;;public boolean isAllRolesRequired() {     return allRolesRequired. }
false;public;1;3;;public void setAllRolesRequired(boolean allRolesRequired) {     this.allRolesRequired = allRolesRequired. }
