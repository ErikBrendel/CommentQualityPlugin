commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void testJasyptProperties() throws Exception {     getMockEndpoint("mock:tiger").expectedBodiesReceived("Hello World").     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;protected;0;22;;@Override protected CamelContext createCamelContext() throws Exception {     CamelContext context = super.createCamelContext().     // START SNIPPET: e1     // create the jasypt properties parser     JasyptPropertiesParser jasypt = new JasyptPropertiesParser().     // and set the master password     jasypt.setPassword("secret").     // create the properties component     PropertiesComponent pc = new PropertiesComponent().     pc.setLocation("classpath:org/apache/camel/component/jasypt/myproperties.properties").     // and use the jasypt properties parser so we can decrypt values     pc.setPropertiesParser(jasypt).     // add properties component to camel context     context.addComponent("properties", pc).     return context. }
false;public;0;4;;@Override public void configure() throws Exception {     from("direct:start").to("{{cool.result}}"). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("{{cool.result}}").         }     }. }
