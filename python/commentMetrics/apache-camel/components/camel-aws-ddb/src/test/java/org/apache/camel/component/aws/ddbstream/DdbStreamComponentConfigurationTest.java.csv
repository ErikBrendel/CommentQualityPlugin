commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void createEndpointWithAccessAndSecretKey() throws Exception {     DdbStreamComponent component = new DdbStreamComponent(context).     DdbStreamEndpoint endpoint = (DdbStreamEndpoint) component.createEndpoint("aws-ddb://myTable?accessKey=xxxxx&secretKey=yyyyy").     assertEquals("myTable", endpoint.getConfiguration().getTableName()).     assertEquals("xxxxx", endpoint.getConfiguration().getAccessKey()).     assertEquals("yyyyy", endpoint.getConfiguration().getSecretKey()). }
false;public;0;11;;@Test public void createEndpointWithComponentElements() throws Exception {     DdbStreamComponent component = new DdbStreamComponent(context).     component.setAccessKey("XXX").     component.setSecretKey("YYY").     DdbStreamEndpoint endpoint = (DdbStreamEndpoint) component.createEndpoint("aws-ddb://myTable").     assertEquals("myTable", endpoint.getConfiguration().getTableName()).     assertEquals("XXX", endpoint.getConfiguration().getAccessKey()).     assertEquals("YYY", endpoint.getConfiguration().getSecretKey()). }
false;public;0;13;;@Test public void createEndpointWithComponentAndEndpointElements() throws Exception {     DdbStreamComponent component = new DdbStreamComponent(context).     component.setAccessKey("XXX").     component.setSecretKey("YYY").     component.setRegion(Regions.US_WEST_1.toString()).     DdbStreamEndpoint endpoint = (DdbStreamEndpoint) component.createEndpoint("aws-ddb://myTable?accessKey=xxxxxx&secretKey=yyyyy&region=US_EAST_1").     assertEquals("myTable", endpoint.getConfiguration().getTableName()).     assertEquals("xxxxxx", endpoint.getConfiguration().getAccessKey()).     assertEquals("yyyyy", endpoint.getConfiguration().getSecretKey()).     assertEquals("US_EAST_1", endpoint.getConfiguration().getRegion()). }
