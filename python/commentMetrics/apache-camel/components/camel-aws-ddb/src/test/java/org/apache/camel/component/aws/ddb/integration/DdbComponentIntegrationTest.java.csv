commented;modifiers;parameterAmount;loc;comment;code
false;public;1;5;;public void process(Exchange exchange) throws Exception {     exchange.getIn().setHeader(DdbConstants.OPERATION, DdbOperations.PutItem).     exchange.getIn().setHeader(DdbConstants.RETURN_VALUES, "ALL_OLD").     exchange.getIn().setHeader(DdbConstants.ITEM, attributeMap). }
false;public;0;16;;@Test public void select() {     final Map<String, AttributeValue> attributeMap = new HashMap<>().     AttributeValue attributeValue = new AttributeValue("test value").     attributeMap.put("name", attributeValue).     Exchange exchange = template.send("direct:start", new Processor() {          public void process(Exchange exchange) throws Exception {             exchange.getIn().setHeader(DdbConstants.OPERATION, DdbOperations.PutItem).             exchange.getIn().setHeader(DdbConstants.RETURN_VALUES, "ALL_OLD").             exchange.getIn().setHeader(DdbConstants.ITEM, attributeMap).         }     }).     assertNotNull(exchange.getIn().getHeader(DdbConstants.ITEMS, List.class)). }
false;public;0;5;;@Override public void configure() throws Exception {     from("direct:start").to("aws-ddb://TestTable?accessKey=xxx&secretKey=yyy"). }
false;protected;0;9;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("aws-ddb://TestTable?accessKey=xxx&secretKey=yyy").         }     }. }
