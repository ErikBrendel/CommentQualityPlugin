commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Before public void setUp() {     ddbClient = new AmazonDDBClientMock().     configuration = new DdbConfiguration().     configuration.setTableName("DOMAIN1").     exchange = new DefaultExchange(new DefaultCamelContext()).     command = new DeleteTableCommand(ddbClient, configuration, exchange). }
false;public;0;14;;@Test public void testExecute() {     command.execute().     assertEquals("DOMAIN1", ddbClient.deleteTableRequest.getTableName()).     assertEquals(new ProvisionedThroughputDescription(), exchange.getIn().getHeader(DdbConstants.PROVISIONED_THROUGHPUT)).     assertEquals(new Date(AmazonDDBClientMock.NOW), exchange.getIn().getHeader(DdbConstants.CREATION_DATE, Date.class)).     assertEquals(Long.valueOf(10L), exchange.getIn().getHeader(DdbConstants.ITEM_COUNT, Long.class)).     assertEquals(new ArrayList<KeySchemaElement>(), exchange.getIn().getHeader(DdbConstants.KEY_SCHEMA, ArrayList.class)).     assertEquals(Long.valueOf(20L), exchange.getIn().getHeader(DdbConstants.TABLE_SIZE, Long.class)).     assertEquals(TableStatus.ACTIVE, exchange.getIn().getHeader(DdbConstants.TABLE_STATUS, TableStatus.class)). }
