commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;6;;@BeforeClass public static void initPort() {     serverPort = AvailablePortFinder.getNextAvailable().     uri = "netty4:tcp://localhost:" + serverPort + "?sync=false&allowDefaultCodec=false&decoders=#decoder&encoder=#encoder".     uriClient = uri + "&useByteBuf=true". }
false;protected;0;7;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry jndi = super.createRegistry().     jndi.bind("decoder", new Rfc5425FrameDecoder()).     jndi.bind("encoder", new Rfc5425Encoder()).     return jndi. }
false;public;0;14;;@Test public void testSendingCamel() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:syslogReceiver").     MockEndpoint mock2 = getMockEndpoint("mock:syslogReceiver2").     mock.expectedMessageCount(2).     mock2.expectedMessageCount(2).     mock2.expectedBodiesReceived(rfc3164Message, rfc5424Message).     template.sendBody(uriClient, rfc3164Message.getBytes("UTF8")).     template.sendBody(uriClient, rfc5424Message.getBytes("UTF8")).     assertMockEndpointsSatisfied(). }
false;public;0;7;;@Test public void testStructuredData() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:syslogReceiver").     mock.expectedMessageCount(1).     template.sendBody("direct:checkStructuredData", rfc5424WithStructuredData). }
false;public;1;4;;@Override public void process(Exchange ex) {     assertTrue(ex.getIn().getBody() instanceof SyslogMessage). }
false;public;1;6;;@Override public void process(Exchange ex) {     Object body = ex.getIn().getBody().     assertTrue(body instanceof Rfc5424SyslogMessage).     assertEquals("[exampleSDID@32473 iut=\"3\" eventSource=\"Application\" eventID=\"1011\"]", ((Rfc5424SyslogMessage) body).getStructuredData()). }
false;public;0;23;;@Override public void configure() throws Exception {     context.setTracing(true).     DataFormat syslogDataFormat = new SyslogDataFormat().     // we setup a Syslog listener on a random port.     from(uri).unmarshal(syslogDataFormat).process(new Processor() {          @Override         public void process(Exchange ex) {             assertTrue(ex.getIn().getBody() instanceof SyslogMessage).         }     }).to("mock:syslogReceiver").marshal(syslogDataFormat).to("mock:syslogReceiver2").     from("direct:checkStructuredData").unmarshal(syslogDataFormat).process(new Processor() {          @Override         public void process(Exchange ex) {             Object body = ex.getIn().getBody().             assertTrue(body instanceof Rfc5424SyslogMessage).             assertEquals("[exampleSDID@32473 iut=\"3\" eventSource=\"Application\" eventID=\"1011\"]", ((Rfc5424SyslogMessage) body).getStructuredData()).         }     }).to("mock:syslogReceiver"). }
false;protected;0;30;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     context().getRegistry(JndiRegistry.class).bind("rfc5426FrameDecoder", new Rfc5425FrameDecoder()).     return new RouteBuilder() {          @Override         public void configure() throws Exception {             context.setTracing(true).             DataFormat syslogDataFormat = new SyslogDataFormat().             // we setup a Syslog listener on a random port.             from(uri).unmarshal(syslogDataFormat).process(new Processor() {                  @Override                 public void process(Exchange ex) {                     assertTrue(ex.getIn().getBody() instanceof SyslogMessage).                 }             }).to("mock:syslogReceiver").marshal(syslogDataFormat).to("mock:syslogReceiver2").             from("direct:checkStructuredData").unmarshal(syslogDataFormat).process(new Processor() {                  @Override                 public void process(Exchange ex) {                     Object body = ex.getIn().getBody().                     assertTrue(body instanceof Rfc5424SyslogMessage).                     assertEquals("[exampleSDID@32473 iut=\"3\" eventSource=\"Application\" eventID=\"1011\"]", ((Rfc5424SyslogMessage) body).getStructuredData()).                 }             }).to("mock:syslogReceiver").         }     }. }
