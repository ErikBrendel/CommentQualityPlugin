commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;5;;@BeforeClass public static void initPort() {     serverPort = AvailablePortFinder.getNextAvailable(4000).     System.setProperty("server-port", new Integer(serverPort).toString()). }
false;protected;0;4;;@Override protected AbstractXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/component/syslog/applicationContext-Netty.xml"). }
false;public;0;26;;@Test public void testSendingRawUDP() throws IOException, InterruptedException {     MockEndpoint mock = getMockEndpoint("mock:stop1").     MockEndpoint mock2 = getMockEndpoint("mock:stop2").     mock.expectedMessageCount(1).     mock2.expectedMessageCount(1).     mock2.expectedBodiesReceived(message).     DatagramSocket socket = new DatagramSocket().     try {         InetAddress address = InetAddress.getByName("localhost").         for (int i = 0. i < messageCount. i++) {             byte[] data = message.getBytes().             DatagramPacket packet = new DatagramPacket(data, data.length, address, serverPort).             socket.send(packet).             Thread.sleep(100).         }     } finally {         socket.close().     }     assertMockEndpointsSatisfied(). }
