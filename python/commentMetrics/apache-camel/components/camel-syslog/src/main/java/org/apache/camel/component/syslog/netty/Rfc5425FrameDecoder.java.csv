# id;timestamp;commentText;codeText;commentWords;codeWords
Rfc5425FrameDecoder -> private static int indexOf(ByteBuf haystack, ByteBuf needle);1472651370;Borrowed from the DelimiterBasedFrameDecoder Returns the number of bytes_between the readerIndex of the haystack and the first needle found in the_haystack. -1 is returned if no needle is found in the haystack.;private static int indexOf(ByteBuf haystack, ByteBuf needle) {_        for (int i = haystack.readerIndex()_ i < haystack.writerIndex()_ i++) {_            int haystackIndex = i__            int needleIndex__            for (needleIndex = 0_ needleIndex < needle.capacity()_ needleIndex++) {_                if (haystack.getByte(haystackIndex) != needle.getByte(needleIndex)) {_                    break__                } else {_                    haystackIndex++__                    if (haystackIndex == haystack.writerIndex() && needleIndex != needle.capacity() - 1) {_                        return -1__                    }_                }_            }__            if (needleIndex == needle.capacity()) {_                _                return i - haystack.readerIndex()__            }_        }_        return -1__    };borrowed,from,the,delimiter,based,frame,decoder,returns,the,number,of,bytes,between,the,reader,index,of,the,haystack,and,the,first,needle,found,in,the,haystack,1,is,returned,if,no,needle,is,found,in,the,haystack;private,static,int,index,of,byte,buf,haystack,byte,buf,needle,for,int,i,haystack,reader,index,i,haystack,writer,index,i,int,haystack,index,i,int,needle,index,for,needle,index,0,needle,index,needle,capacity,needle,index,if,haystack,get,byte,haystack,index,needle,get,byte,needle,index,break,else,haystack,index,if,haystack,index,haystack,writer,index,needle,index,needle,capacity,1,return,1,if,needle,index,needle,capacity,return,i,haystack,reader,index,return,1
Rfc5425FrameDecoder -> private static int indexOf(ByteBuf haystack, ByteBuf needle);1537204343;Borrowed from the DelimiterBasedFrameDecoder Returns the number of bytes_between the readerIndex of the haystack and the first needle found in the_haystack. -1 is returned if no needle is found in the haystack.;private static int indexOf(ByteBuf haystack, ByteBuf needle) {_        for (int i = haystack.readerIndex()_ i < haystack.writerIndex()_ i++) {_            int haystackIndex = i__            int needleIndex__            for (needleIndex = 0_ needleIndex < needle.capacity()_ needleIndex++) {_                if (haystack.getByte(haystackIndex) != needle.getByte(needleIndex)) {_                    break__                } else {_                    haystackIndex++__                    if (haystackIndex == haystack.writerIndex() && needleIndex != needle.capacity() - 1) {_                        return -1__                    }_                }_            }__            if (needleIndex == needle.capacity()) {_                _                return i - haystack.readerIndex()__            }_        }_        return -1__    };borrowed,from,the,delimiter,based,frame,decoder,returns,the,number,of,bytes,between,the,reader,index,of,the,haystack,and,the,first,needle,found,in,the,haystack,1,is,returned,if,no,needle,is,found,in,the,haystack;private,static,int,index,of,byte,buf,haystack,byte,buf,needle,for,int,i,haystack,reader,index,i,haystack,writer,index,i,int,haystack,index,i,int,needle,index,for,needle,index,0,needle,index,needle,capacity,needle,index,if,haystack,get,byte,haystack,index,needle,get,byte,needle,index,break,else,haystack,index,if,haystack,index,haystack,writer,index,needle,index,needle,capacity,1,return,1,if,needle,index,needle,capacity,return,i,haystack,reader,index,return,1
