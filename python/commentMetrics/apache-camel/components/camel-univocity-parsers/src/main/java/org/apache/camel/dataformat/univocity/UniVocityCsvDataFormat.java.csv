commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * Gets whether or not all fields must be quoted.  * If {@code null} then the default settings value is used.  *  * @return whether or not all fields must be quoted  * @see com.univocity.parsers.csv.CsvWriterSettings#getQuoteAllFields()  */ ;/**  * Gets whether or not all fields must be quoted.  * If {@code null} then the default settings value is used.  *  * @return whether or not all fields must be quoted  * @see com.univocity.parsers.csv.CsvWriterSettings#getQuoteAllFields()  */ public Boolean getQuoteAllFields() {     return quoteAllFields. }
true;public;1;4;/**  * Gets whether or not all fields must be quoted.  * If {@code null} then the default settings value is used.  *  * @param quoteAllFields whether or not all fields must be quoted  * @return current data format instance, fluent API  * @see com.univocity.parsers.csv.CsvWriterSettings#setQuoteAllFields(boolean)  */ ;/**  * Gets whether or not all fields must be quoted.  * If {@code null} then the default settings value is used.  *  * @param quoteAllFields whether or not all fields must be quoted  * @return current data format instance, fluent API  * @see com.univocity.parsers.csv.CsvWriterSettings#setQuoteAllFields(boolean)  */ public UniVocityCsvDataFormat setQuoteAllFields(Boolean quoteAllFields) {     this.quoteAllFields = quoteAllFields.     return this. }
true;public;0;3;/**  * Gets the quote symbol.  * If {@code null} then the default format value is used.  *  * @return the quote symbol  * @see com.univocity.parsers.csv.CsvFormat#getQuote()  */ ;/**  * Gets the quote symbol.  * If {@code null} then the default format value is used.  *  * @return the quote symbol  * @see com.univocity.parsers.csv.CsvFormat#getQuote()  */ public Character getQuote() {     return quote. }
true;public;1;4;/**  * Sets the quote symbol.  * If {@code null} then the default format value is used.  *  * @param quote the quote symbol  * @return current data format instance, fluent API  * @see com.univocity.parsers.csv.CsvFormat#setQuote(char)  */ ;/**  * Sets the quote symbol.  * If {@code null} then the default format value is used.  *  * @param quote the quote symbol  * @return current data format instance, fluent API  * @see com.univocity.parsers.csv.CsvFormat#setQuote(char)  */ public UniVocityCsvDataFormat setQuote(Character quote) {     this.quote = quote.     return this. }
true;public;0;3;/**  * Gets the quote escape symbol.  * If {@code null} then the default format value is used.  *  * @return the quote escape symbol  * @see com.univocity.parsers.csv.CsvFormat#getQuoteEscape()  */ ;/**  * Gets the quote escape symbol.  * If {@code null} then the default format value is used.  *  * @return the quote escape symbol  * @see com.univocity.parsers.csv.CsvFormat#getQuoteEscape()  */ public Character getQuoteEscape() {     return quoteEscape. }
true;public;1;4;/**  * Sets the quote escape symbol.  * If {@code null} then the default format value is used.  *  * @param quoteEscape the quote escape symbol  * @return current data format instance, fluent API  * @see com.univocity.parsers.csv.CsvFormat#setQuoteEscape(char)  */ ;/**  * Sets the quote escape symbol.  * If {@code null} then the default format value is used.  *  * @param quoteEscape the quote escape symbol  * @return current data format instance, fluent API  * @see com.univocity.parsers.csv.CsvFormat#setQuoteEscape(char)  */ public UniVocityCsvDataFormat setQuoteEscape(Character quoteEscape) {     this.quoteEscape = quoteEscape.     return this. }
true;public;0;3;/**  * Gets the delimiter symbol.  * If {@code null} then the default format value is used.  *  * @return the delimiter symbol  * @see com.univocity.parsers.csv.CsvFormat#getDelimiter()  */ ;/**  * Gets the delimiter symbol.  * If {@code null} then the default format value is used.  *  * @return the delimiter symbol  * @see com.univocity.parsers.csv.CsvFormat#getDelimiter()  */ public Character getDelimiter() {     return delimiter. }
true;public;1;4;/**  * Sets the delimiter symbol.  * If {@code null} then the default format value is used.  *  * @param delimiter the delimiter symbol  * @return current data format instance, fluent API  * @see com.univocity.parsers.csv.CsvFormat#setDelimiter(char)  */ ;/**  * Sets the delimiter symbol.  * If {@code null} then the default format value is used.  *  * @param delimiter the delimiter symbol  * @return current data format instance, fluent API  * @see com.univocity.parsers.csv.CsvFormat#setDelimiter(char)  */ public UniVocityCsvDataFormat setDelimiter(Character delimiter) {     this.delimiter = delimiter.     return this. }
true;protected;0;4;/**  * {@inheritDoc}  */ ;/**  * {@inheritDoc}  */ @Override protected CsvWriterSettings createWriterSettings() {     return new CsvWriterSettings(). }
true;protected;1;8;/**  * {@inheritDoc}  */ ;/**  * {@inheritDoc}  */ @Override protected void configureWriterSettings(CsvWriterSettings settings) {     super.configureWriterSettings(settings).     if (quoteAllFields != null) {         settings.setQuoteAllFields(quoteAllFields).     } }
true;protected;2;4;/**  * {@inheritDoc}  */ ;/**  * {@inheritDoc}  */ @Override protected CsvWriter createWriter(Writer writer, CsvWriterSettings settings) {     return new CsvWriter(writer, settings). }
true;protected;0;4;/**  * {@inheritDoc}  */ ;/**  * {@inheritDoc}  */ @Override protected CsvParserSettings createParserSettings() {     return new CsvParserSettings(). }
true;protected;1;8;/**  * {@inheritDoc}  */ ;/**  * {@inheritDoc}  */ @Override protected void configureParserSettings(CsvParserSettings settings) {     super.configureParserSettings(settings).     if (emptyValue != null) {         settings.setEmptyValue(emptyValue).     } }
true;protected;1;4;/**  * {@inheritDoc}  */ ;/**  * {@inheritDoc}  */ @Override protected CsvParser createParser(CsvParserSettings settings) {     return new CsvParser(settings). }
true;protected;1;14;/**  * {@inheritDoc}  */ ;/**  * {@inheritDoc}  */ @Override protected void configureFormat(CsvFormat format) {     super.configureFormat(format).     if (quote != null) {         format.setQuote(quote).     }     if (quoteEscape != null) {         format.setQuoteEscape(quoteEscape).     }     if (delimiter != null) {         format.setDelimiter(delimiter).     } }
false;public;0;4;;@Override public String getDataFormatName() {     return "univocity-csv". }
