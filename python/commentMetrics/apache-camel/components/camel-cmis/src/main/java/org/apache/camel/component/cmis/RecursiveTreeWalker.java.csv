commented;modifiers;parameterAmount;loc;comment;code
false;;1;36;;int processFolderRecursively(Folder folder) throws Exception {     processFolderNode(folder).     OperationContext operationContext = cmisConsumer.createOperationContext().     operationContext.setMaxItemsPerPage(pageSize).     int count = 0.     int pageNumber = 0.     boolean finished = false.     ItemIterable<CmisObject> itemIterable = folder.getChildren(operationContext).     while (!finished) {         ItemIterable<CmisObject> currentPage = itemIterable.skipTo(count).getPage().         LOG.debug("Processing page {}", pageNumber).         for (CmisObject child : currentPage) {             if (CMISHelper.isFolder(child)) {                 Folder childFolder = (Folder) child.                 processFolderRecursively(childFolder).             } else {                 processNonFolderNode(child, folder).             }             count++.             if (totalPolled == readCount) {                 finished = true.                 break.             }         }         pageNumber++.         if (!currentPage.getHasMoreItems()) {             finished = true.         }     }     return totalPolled. }
false;private;2;12;;private void processNonFolderNode(CmisObject cmisObject, Folder parentFolder) throws Exception {     InputStream inputStream = null.     Map<String, Object> properties = CMISHelper.objectProperties(cmisObject).     properties.put(CamelCMISConstants.CMIS_FOLDER_PATH, parentFolder.getPath()).     if (CMISHelper.isDocument(cmisObject) && readContent) {         ContentStream contentStream = ((Document) cmisObject).getContentStream().         if (contentStream != null) {             inputStream = contentStream.getStream().         }     }     sendNode(properties, inputStream). }
false;private;1;3;;private void processFolderNode(Folder folder) throws Exception {     sendNode(CMISHelper.objectProperties(folder), null). }
false;private;2;3;;private void sendNode(Map<String, Object> properties, InputStream inputStream) throws Exception {     totalPolled += cmisConsumer.sendExchangeWithPropsAndBody(properties, inputStream). }
