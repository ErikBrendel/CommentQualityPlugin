commented;modifiers;parameterAmount;loc;comment;code
false;public;0;22;;@Test public void testForwardingAMessageAcrossJMSKeepingCustomJMSHeaders() throws Exception {     MockEndpoint resultEndpoint = resolveMandatoryEndpoint("mock:result", MockEndpoint.class).     resultEndpoint.expectedBodiesReceived(expectedBody).     AssertionClause firstMessageExpectations = resultEndpoint.message(0).     firstMessageExpectations.header("cheese").isEqualTo(123).     firstMessageExpectations.header("JMSReplyTo").isEqualTo(replyQueue).     firstMessageExpectations.header("JMSCorrelationID").isEqualTo(correlationID).     firstMessageExpectations.header("JMSType").isEqualTo(messageType).     template.sendBodyAndHeader("activemq:test.a", expectedBody, "cheese", 123).     resultEndpoint.assertIsSatisfied().     List<Exchange> list = resultEndpoint.getReceivedExchanges().     Exchange exchange = list.get(0).     Object replyTo = exchange.getIn().getHeader("JMSReplyTo").     LOG.info("Reply to is: " + replyTo).     Destination destination = assertIsInstanceOf(Destination.class, replyTo).     assertEquals("ReplyTo", replyQueue.toString(), destination.toString()). }
false;protected;0;10;;protected CamelContext createCamelContext() throws Exception {     CamelContext camelContext = super.createCamelContext().     camelContext.setTracing(true).     // START SNIPPET: example     camelContext.addComponent("activemq", activeMQComponent("vm://localhost?broker.persistent=false")).     return camelContext. }
false;public;1;6;;public void process(Exchange exchange) throws Exception {     // lets set the custom JMS headers using the Camel API     exchange.getIn().setHeader("JMSReplyTo", replyQueue).     exchange.getIn().setHeader("JMSCorrelationID", correlationID).     exchange.getIn().setHeader("JMSType", messageType). }
false;public;0;13;;public void configure() throws Exception {     from("activemq:test.a").process(new Processor() {          public void process(Exchange exchange) throws Exception {             // lets set the custom JMS headers using the Camel API             exchange.getIn().setHeader("JMSReplyTo", replyQueue).             exchange.getIn().setHeader("JMSCorrelationID", correlationID).             exchange.getIn().setHeader("JMSType", messageType).         }     }).to("activemq:test.b?preserveMessageQos=true").     from("activemq:test.b").to("mock:result"). }
false;protected;0;17;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from("activemq:test.a").process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     // lets set the custom JMS headers using the Camel API                     exchange.getIn().setHeader("JMSReplyTo", replyQueue).                     exchange.getIn().setHeader("JMSCorrelationID", correlationID).                     exchange.getIn().setHeader("JMSType", messageType).                 }             }).to("activemq:test.b?preserveMessageQos=true").             from("activemq:test.b").to("mock:result").         }     }. }
