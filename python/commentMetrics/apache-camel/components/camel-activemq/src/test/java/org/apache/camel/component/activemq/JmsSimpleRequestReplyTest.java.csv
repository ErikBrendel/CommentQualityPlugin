commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testRequestReply() throws Exception {     MockEndpoint result = getMockEndpoint("mock:result").     result.expectedMessageCount(1).     template.requestBody("activemq:queue:hello", "Hello World").     result.assertIsSatisfied(). }
false;protected;0;8;;protected CamelContext createCamelContext() throws Exception {     CamelContext camelContext = super.createCamelContext().     ConnectionFactory connectionFactory = createConnectionFactory(null).     camelContext.addComponent("activemq", jmsComponentAutoAcknowledge(connectionFactory)).     return camelContext. }
false;public,static;1;11;;public static ConnectionFactory createConnectionFactory(String options) {     String url = "vm://test-broker?broker.persistent=false&broker.useJmx=false".     if (options != null) {         url = url + "&" + options.     }     ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(url).     // use a pooled connection factory     PooledConnectionFactory pooled = new PooledConnectionFactory(connectionFactory).     pooled.setMaxConnections(8).     return pooled. }
false;public;1;4;;public void process(Exchange exchange) throws Exception {     exchange.getIn().setBody("Bye World").     assertNotNull(exchange.getIn().getHeader("JMSReplyTo")). }
false;public;0;8;;public void configure() throws Exception {     from("activemq:queue:hello").process(new Processor() {          public void process(Exchange exchange) throws Exception {             exchange.getIn().setBody("Bye World").             assertNotNull(exchange.getIn().getHeader("JMSReplyTo")).         }     }).to("mock:result"). }
false;protected;0;12;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from("activemq:queue:hello").process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     exchange.getIn().setBody("Bye World").                     assertNotNull(exchange.getIn().getHeader("JMSReplyTo")).                 }             }).to("mock:result").         }     }. }
