commented;modifiers;parameterAmount;loc;comment;code
false;public;0;34;;@Test public void testUntrusted() throws Exception {     ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory("vm://localhost").     Connection conn = factory.createConnection().     conn.start().     Session sess = conn.createSession(false, Session.AUTO_ACKNOWLEDGE).     MessageProducer producer = sess.createProducer(sess.createTopic("foo")).     ObjectMessage msg = sess.createObjectMessage().     ObjectPayload payload = new ObjectPayload().     payload.payload = "test".     msg.setObject(payload).     producer.send(msg).     Thread.sleep(1000).     MockEndpoint resultActiveMQ = resolveMandatoryEndpoint("mock:result-activemq", MockEndpoint.class).     resultActiveMQ.expectedMessageCount(1).     resultActiveMQ.assertIsNotSatisfied().     MockEndpoint resultTrusted = resolveMandatoryEndpoint("mock:result-trusted", MockEndpoint.class).     resultTrusted.expectedMessageCount(1).     resultTrusted.assertIsSatisfied().     assertCorrectObjectReceived(resultTrusted).     MockEndpoint resultCamel = resolveMandatoryEndpoint("mock:result-camel", MockEndpoint.class).     resultCamel.expectedMessageCount(1).     resultCamel.assertIsSatisfied().     assertCorrectObjectReceived(resultCamel).     MockEndpoint resultEmpty = resolveMandatoryEndpoint("mock:result-empty", MockEndpoint.class).     resultEmpty.expectedMessageCount(1).     resultEmpty.assertIsNotSatisfied(). }
false;protected;1;11;;protected void assertCorrectObjectReceived(MockEndpoint result) {     Exchange exchange = result.getReceivedExchanges().get(0).     // This should be a JMS Exchange     assertNotNull(ExchangeHelper.getBinding(exchange, JmsBinding.class)).     JmsMessage in = (JmsMessage) exchange.getIn().     assertNotNull(in).     assertIsInstanceOf(ObjectMessage.class, in.getJmsMessage()).     ObjectPayload received = exchange.getIn().getBody(ObjectPayload.class).     assertEquals("test", received.payload). }
false;protected;0;5;;@Override protected AbstractApplicationContext createApplicationContext() {     AbstractApplicationContext context = new ClassPathXmlApplicationContext("org/apache/camel/component/activemq/jms-object-message.xml").     return context. }
