commented;modifiers;parameterAmount;loc;comment;code
false;public;1;8;;public void process(Exchange exchange) throws Exception {     // lets set the custom JMS headers using the JMS API     JmsMessage jmsMessage = assertIsInstanceOf(JmsMessage.class, exchange.getIn()).     jmsMessage.getJmsMessage().setJMSReplyTo(replyQueue).     jmsMessage.getJmsMessage().setJMSCorrelationID(correlationID).     jmsMessage.getJmsMessage().setJMSType(messageType). }
false;public;0;19;;public void configure() throws Exception {     // do not map jms message as we want to tamper with the JMS     // message directly, and not use the Camel API for that     from("activemq:test.a?mapJmsMessage=false").process(new Processor() {          public void process(Exchange exchange) throws Exception {             // lets set the custom JMS headers using the JMS API             JmsMessage jmsMessage = assertIsInstanceOf(JmsMessage.class, exchange.getIn()).             jmsMessage.getJmsMessage().setJMSReplyTo(replyQueue).             jmsMessage.getJmsMessage().setJMSCorrelationID(correlationID).             jmsMessage.getJmsMessage().setJMSType(messageType).         }     }).to("activemq:test.b?preserveMessageQos=true&forceSendOriginalMessage=true").     from("activemq:test.b").to("mock:result"). }
false;protected;0;23;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             // do not map jms message as we want to tamper with the JMS             // message directly, and not use the Camel API for that             from("activemq:test.a?mapJmsMessage=false").process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     // lets set the custom JMS headers using the JMS API                     JmsMessage jmsMessage = assertIsInstanceOf(JmsMessage.class, exchange.getIn()).                     jmsMessage.getJmsMessage().setJMSReplyTo(replyQueue).                     jmsMessage.getJmsMessage().setJMSCorrelationID(correlationID).                     jmsMessage.getJmsMessage().setJMSType(messageType).                 }             }).to("activemq:test.b?preserveMessageQos=true&forceSendOriginalMessage=true").             from("activemq:test.b").to("mock:result").         }     }. }
