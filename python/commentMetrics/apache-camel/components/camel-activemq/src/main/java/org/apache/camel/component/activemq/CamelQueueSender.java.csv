commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;/**  * Gets the queue associated with this <CODE>QueueSender</CODE>.  *  * @return this sender's queue  * @throws JMSException if the JMS provider fails to get the queue for this  *             <CODE>QueueSender</CODE> due to some internal error.  */ public Queue getQueue() throws JMSException {     return (Queue) super.getDestination(). }
false;public;2;3;;/**  * Sends a message to a queue for an unidentified message producer. Uses the  * <CODE>QueueSender</CODE>'s default delivery mode, priority, and time to  * live.  * <p/>  * <p/>  * Typically, a message producer is assigned a queue at creation time.  * however, the JMS API also supports unidentified message producers, which  * require that the queue be supplied every time a message is sent.  *  * @param queue the queue to send this message to  * @param message the message to send  * @throws JMSException if the JMS provider fails to send the message due to  *             some internal error.  * @see javax.jms.MessageProducer#getDeliveryMode()  * @see javax.jms.MessageProducer#getTimeToLive()  * @see javax.jms.MessageProducer#getPriority()  */ public void send(Queue queue, Message message) throws JMSException {     super.send(queue, message). }
false;public;5;3;;/**  * Sends a message to a queue for an unidentified message producer,  * specifying delivery mode, priority and time to live.  * <p/>  * <p/>  * Typically, a message producer is assigned a queue at creation time.  * however, the JMS API also supports unidentified message producers, which  * require that the queue be supplied every time a message is sent.  *  * @param queue the queue to send this message to  * @param message the message to send  * @param deliveryMode the delivery mode to use  * @param priority the priority for this message  * @param timeToLive the message's lifetime (in milliseconds)  * @throws JMSException if the JMS provider fails to send the message due to  *             some internal error.  */ public void send(Queue queue, Message message, int deliveryMode, int priority, long timeToLive) throws JMSException {     super.send(queue, message, deliveryMode, priority, timeToLive). }
