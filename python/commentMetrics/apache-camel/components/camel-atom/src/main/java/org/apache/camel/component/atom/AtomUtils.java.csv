# id;timestamp;commentText;codeText;commentWords;codeWords
AtomUtils -> public static Parser getAtomParser();1210742442;Gets the Atom parser.;public static Parser getAtomParser() {_        return Abdera.getInstance().getParser()__    };gets,the,atom,parser;public,static,parser,get,atom,parser,return,abdera,get,instance,get,parser
AtomUtils -> public static Parser getAtomParser();1210858417;Gets the Atom parser.;public static Parser getAtomParser() {_        return Abdera.getInstance().getParser()__    };gets,the,atom,parser;public,static,parser,get,atom,parser,return,abdera,get,instance,get,parser
AtomUtils -> public static Parser getAtomParser();1319792177;Gets the Atom parser.;public static Parser getAtomParser() {_        return Abdera.getInstance().getParser()__    };gets,the,atom,parser;public,static,parser,get,atom,parser,return,abdera,get,instance,get,parser
AtomUtils -> public static Parser getAtomParser();1438166242;Gets the Atom parser.;public static Parser getAtomParser() {_        return Abdera.getInstance().getParser()__    };gets,the,atom,parser;public,static,parser,get,atom,parser,return,abdera,get,instance,get,parser
AtomUtils -> public static Parser getAtomParser();1539528770;Gets the Atom parser.;public static Parser getAtomParser() {_        return Abdera.getInstance().getParser()__    };gets,the,atom,parser;public,static,parser,get,atom,parser,return,abdera,get,instance,get,parser
AtomUtils -> public static Parser getAtomParser();1539531743;Gets the Atom parser.;public static Parser getAtomParser() {_        return Abdera.getInstance().getParser()__    };gets,the,atom,parser;public,static,parser,get,atom,parser,return,abdera,get,instance,get,parser
AtomUtils -> public static Document<Feed> parseDocument(String uri) throws IOException, ParseException;1210742442;Parses the given uri and returns the response as a atom feed document.__@param uri the uri for the atom feed._@return  the document_@throws IOException is thrown if error reading from the uri_@throws ParseException is thrown if the parsing failed;public static Document<Feed> parseDocument(String uri) throws IOException, ParseException {_        InputStream in = new URL(uri).openStream()__        return getAtomParser().parse(in)__    };parses,the,given,uri,and,returns,the,response,as,a,atom,feed,document,param,uri,the,uri,for,the,atom,feed,return,the,document,throws,ioexception,is,thrown,if,error,reading,from,the,uri,throws,parse,exception,is,thrown,if,the,parsing,failed;public,static,document,feed,parse,document,string,uri,throws,ioexception,parse,exception,input,stream,in,new,url,uri,open,stream,return,get,atom,parser,parse,in
AtomUtils -> public static Document<Feed> parseDocument(String uri) throws IOException, ParseException;1210858417;Parses the given uri and returns the response as a atom feed document.__@param uri the uri for the atom feed._@return  the document_@throws IOException is thrown if error reading from the uri_@throws ParseException is thrown if the parsing failed;public static Document<Feed> parseDocument(String uri) throws IOException, ParseException {_        InputStream in = new URL(uri).openStream()__        return getAtomParser().parse(in)__    };parses,the,given,uri,and,returns,the,response,as,a,atom,feed,document,param,uri,the,uri,for,the,atom,feed,return,the,document,throws,ioexception,is,thrown,if,error,reading,from,the,uri,throws,parse,exception,is,thrown,if,the,parsing,failed;public,static,document,feed,parse,document,string,uri,throws,ioexception,parse,exception,input,stream,in,new,url,uri,open,stream,return,get,atom,parser,parse,in
AtomUtils -> public static Document<Feed> parseDocument(String uri) throws IOException, ParseException;1319792177;Parses the given uri and returns the response as a atom feed document.__@param uri the uri for the atom feed._@return  the document_@throws IOException is thrown if error reading from the uri_@throws ParseException is thrown if the parsing failed;public static Document<Feed> parseDocument(String uri) throws IOException, ParseException {_        InputStream in = new URL(uri).openStream()__        Parser parser = getAtomParser()__        _        ClassLoader old = Thread.currentThread().getContextClassLoader()__        try {_            Thread.currentThread().setContextClassLoader(parser.getClass().getClassLoader())__            return parser.parse(in)__        } finally {_            Thread.currentThread().setContextClassLoader(old)__        }_            _    };parses,the,given,uri,and,returns,the,response,as,a,atom,feed,document,param,uri,the,uri,for,the,atom,feed,return,the,document,throws,ioexception,is,thrown,if,error,reading,from,the,uri,throws,parse,exception,is,thrown,if,the,parsing,failed;public,static,document,feed,parse,document,string,uri,throws,ioexception,parse,exception,input,stream,in,new,url,uri,open,stream,parser,parser,get,atom,parser,class,loader,old,thread,current,thread,get,context,class,loader,try,thread,current,thread,set,context,class,loader,parser,get,class,get,class,loader,return,parser,parse,in,finally,thread,current,thread,set,context,class,loader,old
AtomUtils -> public static Document<Feed> parseDocument(String uri) throws IOException, ParseException;1438166242;Parses the given uri and returns the response as a atom feed document.__@param uri the uri for the atom feed._@return the document_@throws IOException    is thrown if error reading from the uri_@throws ParseException is thrown if the parsing failed;public static Document<Feed> parseDocument(String uri) throws IOException, ParseException {_        InputStream in = new URL(uri).openStream()__        return parseInputStream(in)__    };parses,the,given,uri,and,returns,the,response,as,a,atom,feed,document,param,uri,the,uri,for,the,atom,feed,return,the,document,throws,ioexception,is,thrown,if,error,reading,from,the,uri,throws,parse,exception,is,thrown,if,the,parsing,failed;public,static,document,feed,parse,document,string,uri,throws,ioexception,parse,exception,input,stream,in,new,url,uri,open,stream,return,parse,input,stream,in
AtomUtils -> public static Document<Feed> parseDocument(String uri) throws IOException, ParseException;1539528770;Parses the given uri and returns the response as a atom feed document.__@param uri the uri for the atom feed._@return the document_@throws IOException    is thrown if error reading from the uri_@throws ParseException is thrown if the parsing failed;public static Document<Feed> parseDocument(String uri) throws IOException, ParseException {_        InputStream in = new URL(uri).openStream()__        return parseInputStream(in)__    };parses,the,given,uri,and,returns,the,response,as,a,atom,feed,document,param,uri,the,uri,for,the,atom,feed,return,the,document,throws,ioexception,is,thrown,if,error,reading,from,the,uri,throws,parse,exception,is,thrown,if,the,parsing,failed;public,static,document,feed,parse,document,string,uri,throws,ioexception,parse,exception,input,stream,in,new,url,uri,open,stream,return,parse,input,stream,in
AtomUtils -> public static Document<Feed> parseDocument(String uri) throws IOException, ParseException;1539531743;Parses the given uri and returns the response as a atom feed document.__@param uri the uri for the atom feed._@return the document_@throws IOException    is thrown if error reading from the uri_@throws ParseException is thrown if the parsing failed;public static Document<Feed> parseDocument(String uri) throws IOException, ParseException {_        URL feedUrl = new URL(uri)__        URLConnection urlConn = feedUrl.openConnection()__        urlConn.setConnectTimeout(60000)__        urlConn.setReadTimeout(60000)__        InputStream in = urlConn.getInputStream()__        return parseInputStream(in)__    };parses,the,given,uri,and,returns,the,response,as,a,atom,feed,document,param,uri,the,uri,for,the,atom,feed,return,the,document,throws,ioexception,is,thrown,if,error,reading,from,the,uri,throws,parse,exception,is,thrown,if,the,parsing,failed;public,static,document,feed,parse,document,string,uri,throws,ioexception,parse,exception,url,feed,url,new,url,uri,urlconnection,url,conn,feed,url,open,connection,url,conn,set,connect,timeout,60000,url,conn,set,read,timeout,60000,input,stream,in,url,conn,get,input,stream,return,parse,input,stream,in
