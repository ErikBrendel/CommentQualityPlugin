# id;timestamp;commentText;codeText;commentWords;codeWords
AtomEndpoint -> protected void validate();1210605532;Validates the endpoint is configured properly;protected void validate() {_        ObjectHelper.notNull(getAtomUri(), "atomUri property")__    };validates,the,endpoint,is,configured,properly;protected,void,validate,object,helper,not,null,get,atom,uri,atom,uri,property
AtomEndpoint -> protected void validate();1210666892;Validates the endpoint is configured properly;protected void validate() {_        ObjectHelper.notNull(getAtomUri(), "atomUri property")__    };validates,the,endpoint,is,configured,properly;protected,void,validate,object,helper,not,null,get,atom,uri,atom,uri,property
AtomEndpoint -> public void setLastUpdate(Date lastUpdate);1210742442;Sets the timestamp to be used for filtering entries from the atom feeds._This options is only in conjunction with the splitEntries.;public void setLastUpdate(Date lastUpdate) {_        this.lastUpdate = lastUpdate__    };sets,the,timestamp,to,be,used,for,filtering,entries,from,the,atom,feeds,this,options,is,only,in,conjunction,with,the,split,entries;public,void,set,last,update,date,last,update,this,last,update,last,update
AtomEndpoint -> public void setLastUpdate(Date lastUpdate);1210913540;Sets the timestamp to be used for filtering entries from the atom feeds._This options is only in conjunction with the splitEntries.;public void setLastUpdate(Date lastUpdate) {_        this.lastUpdate = lastUpdate__    };sets,the,timestamp,to,be,used,for,filtering,entries,from,the,atom,feeds,this,options,is,only,in,conjunction,with,the,split,entries;public,void,set,last,update,date,last,update,this,last,update,last,update
AtomEndpoint -> public void setLastUpdate(Date lastUpdate);1226284843;Sets the timestamp to be used for filtering entries from the atom feeds._This options is only in conjunction with the splitEntries.;public void setLastUpdate(Date lastUpdate) {_        this.lastUpdate = lastUpdate__    };sets,the,timestamp,to,be,used,for,filtering,entries,from,the,atom,feeds,this,options,is,only,in,conjunction,with,the,split,entries;public,void,set,last,update,date,last,update,this,last,update,last,update
AtomEndpoint -> public void setLastUpdate(Date lastUpdate);1226296872;Sets the timestamp to be used for filtering entries from the atom feeds._This options is only in conjunction with the splitEntries.;public void setLastUpdate(Date lastUpdate) {_        this.lastUpdate = lastUpdate__    };sets,the,timestamp,to,be,used,for,filtering,entries,from,the,atom,feeds,this,options,is,only,in,conjunction,with,the,split,entries;public,void,set,last,update,date,last,update,this,last,update,last,update
AtomEndpoint -> public void setLastUpdate(Date lastUpdate);1226378057;Sets the timestamp to be used for filtering entries from the atom feeds._This options is only in conjunction with the splitEntries.;public void setLastUpdate(Date lastUpdate) {_        this.lastUpdate = lastUpdate__    };sets,the,timestamp,to,be,used,for,filtering,entries,from,the,atom,feeds,this,options,is,only,in,conjunction,with,the,split,entries;public,void,set,last,update,date,last,update,this,last,update,last,update
AtomEndpoint -> public void setFilter(boolean filter);1210742442;Sets wether to use filtering or not of the entries.;public void setFilter(boolean filter) {_        this.filter = filter__    };sets,wether,to,use,filtering,or,not,of,the,entries;public,void,set,filter,boolean,filter,this,filter,filter
AtomEndpoint -> public void setFilter(boolean filter);1210913540;Sets wether to use filtering or not of the entries.;public void setFilter(boolean filter) {_        this.filter = filter__    };sets,wether,to,use,filtering,or,not,of,the,entries;public,void,set,filter,boolean,filter,this,filter,filter
AtomEndpoint -> public void setFilter(boolean filter);1226284843;Sets wether to use filtering or not of the entries.;public void setFilter(boolean filter) {_        this.filter = filter__    };sets,wether,to,use,filtering,or,not,of,the,entries;public,void,set,filter,boolean,filter,this,filter,filter
AtomEndpoint -> public void setFilter(boolean filter);1226296872;Sets wether to use filtering or not of the entries.;public void setFilter(boolean filter) {_        this.filter = filter__    };sets,wether,to,use,filtering,or,not,of,the,entries;public,void,set,filter,boolean,filter,this,filter,filter
AtomEndpoint -> public void setFilter(boolean filter);1226378057;Sets wether to use filtering or not of the entries.;public void setFilter(boolean filter) {_        this.filter = filter__    };sets,wether,to,use,filtering,or,not,of,the,entries;public,void,set,filter,boolean,filter,this,filter,filter
AtomEndpoint -> public Exchange createExchange(Feed feed, Entry entry);1210742442;Creates an Exchange with the given entry as the in body.__@param feed   the atom feed_@param entry  the entry as the in body_@return the created exchange;public Exchange createExchange(Feed feed, Entry entry) {_        Exchange exchange = createExchange()__        exchange.getIn().setBody(entry)__        exchange.getIn().setHeader(HEADER_ATOM_FEED, feed)__        return exchange__    };creates,an,exchange,with,the,given,entry,as,the,in,body,param,feed,the,atom,feed,param,entry,the,entry,as,the,in,body,return,the,created,exchange;public,exchange,create,exchange,feed,feed,entry,entry,exchange,exchange,create,exchange,exchange,get,in,set,body,entry,exchange,get,in,set,header,feed,return,exchange
AtomEndpoint -> public Exchange createExchange(Feed feed, Entry entry);1210913540;Creates an Exchange with the given entry as the in body.__@param feed   the atom feed_@param entry  the entry as the in body_@return the created exchange;public Exchange createExchange(Feed feed, Entry entry) {_        Exchange exchange = createExchange()__        exchange.getIn().setBody(entry)__        exchange.getIn().setHeader(HEADER_ATOM_FEED, feed)__        return exchange__    };creates,an,exchange,with,the,given,entry,as,the,in,body,param,feed,the,atom,feed,param,entry,the,entry,as,the,in,body,return,the,created,exchange;public,exchange,create,exchange,feed,feed,entry,entry,exchange,exchange,create,exchange,exchange,get,in,set,body,entry,exchange,get,in,set,header,feed,return,exchange
AtomEndpoint -> public Exchange createExchange(Feed feed, Entry entry);1226284843;Creates an Exchange with the given entry as the in body.__@param feed   the atom feed_@param entry  the entry as the in body_@return the created exchange;public Exchange createExchange(Feed feed, Entry entry) {_        Exchange exchange = createExchange()__        exchange.getIn().setBody(entry)__        exchange.getIn().setHeader(HEADER_ATOM_FEED, feed)__        return exchange__    };creates,an,exchange,with,the,given,entry,as,the,in,body,param,feed,the,atom,feed,param,entry,the,entry,as,the,in,body,return,the,created,exchange;public,exchange,create,exchange,feed,feed,entry,entry,exchange,exchange,create,exchange,exchange,get,in,set,body,entry,exchange,get,in,set,header,feed,return,exchange
AtomEndpoint -> public Exchange createExchange(Feed feed, Entry entry);1226296872;Creates an Exchange with the given entry as the in body.__@param feed   the atom feed_@param entry  the entry as the in body_@return the created exchange;public Exchange createExchange(Feed feed, Entry entry) {_        Exchange exchange = createExchange()__        exchange.getIn().setBody(entry)__        exchange.getIn().setHeader(HEADER_ATOM_FEED, feed)__        return exchange__    };creates,an,exchange,with,the,given,entry,as,the,in,body,param,feed,the,atom,feed,param,entry,the,entry,as,the,in,body,return,the,created,exchange;public,exchange,create,exchange,feed,feed,entry,entry,exchange,exchange,create,exchange,exchange,get,in,set,body,entry,exchange,get,in,set,header,feed,return,exchange
AtomEndpoint -> public Exchange createExchange(Feed feed, Entry entry);1226378057;Creates an Exchange with the given entry as the in body.__@param feed   the atom feed_@param entry  the entry as the in body_@return the created exchange;public Exchange createExchange(Feed feed, Entry entry) {_        Exchange exchange = createExchange()__        exchange.getIn().setBody(entry)__        exchange.getIn().setHeader(HEADER_ATOM_FEED, feed)__        return exchange__    };creates,an,exchange,with,the,given,entry,as,the,in,body,param,feed,the,atom,feed,param,entry,the,entry,as,the,in,body,return,the,created,exchange;public,exchange,create,exchange,feed,feed,entry,entry,exchange,exchange,create,exchange,exchange,get,in,set,body,entry,exchange,get,in,set,header,feed,return,exchange
AtomEndpoint -> public Exchange createExchange(Feed feed);1210742442;Creates an Exchange with the entries as the in body.__@param feed   the atom feed_@return the created exchange;public Exchange createExchange(Feed feed) {_        Exchange exchange = createExchange()__        exchange.getIn().setBody(feed.getEntries())__        exchange.getIn().setHeader(HEADER_ATOM_FEED, feed)__        return exchange__    };creates,an,exchange,with,the,entries,as,the,in,body,param,feed,the,atom,feed,return,the,created,exchange;public,exchange,create,exchange,feed,feed,exchange,exchange,create,exchange,exchange,get,in,set,body,feed,get,entries,exchange,get,in,set,header,feed,return,exchange
AtomEndpoint -> public Exchange createExchange(Feed feed);1210913540;Creates an Exchange with the entries as the in body.__@param feed   the atom feed_@return the created exchange;public Exchange createExchange(Feed feed) {_        Exchange exchange = createExchange()__        exchange.getIn().setBody(feed.getEntries())__        exchange.getIn().setHeader(HEADER_ATOM_FEED, feed)__        return exchange__    };creates,an,exchange,with,the,entries,as,the,in,body,param,feed,the,atom,feed,return,the,created,exchange;public,exchange,create,exchange,feed,feed,exchange,exchange,create,exchange,exchange,get,in,set,body,feed,get,entries,exchange,get,in,set,header,feed,return,exchange
AtomEndpoint -> public Exchange createExchange(Feed feed);1226284843;Creates an Exchange with the entries as the in body.__@param feed   the atom feed_@return the created exchange;public Exchange createExchange(Feed feed) {_        Exchange exchange = createExchange()__        exchange.getIn().setBody(feed.getEntries())__        exchange.getIn().setHeader(HEADER_ATOM_FEED, feed)__        return exchange__    };creates,an,exchange,with,the,entries,as,the,in,body,param,feed,the,atom,feed,return,the,created,exchange;public,exchange,create,exchange,feed,feed,exchange,exchange,create,exchange,exchange,get,in,set,body,feed,get,entries,exchange,get,in,set,header,feed,return,exchange
AtomEndpoint -> public Exchange createExchange(Feed feed);1226296872;Creates an Exchange with the entries as the in body.__@param feed   the atom feed_@return the created exchange;public Exchange createExchange(Feed feed) {_        Exchange exchange = createExchange()__        exchange.getIn().setBody(feed.getEntries())__        exchange.getIn().setHeader(HEADER_ATOM_FEED, feed)__        return exchange__    };creates,an,exchange,with,the,entries,as,the,in,body,param,feed,the,atom,feed,return,the,created,exchange;public,exchange,create,exchange,feed,feed,exchange,exchange,create,exchange,exchange,get,in,set,body,feed,get,entries,exchange,get,in,set,header,feed,return,exchange
AtomEndpoint -> public Exchange createExchange(Feed feed);1226378057;Creates an Exchange with the entries as the in body.__@param feed   the atom feed_@return the created exchange;public Exchange createExchange(Feed feed) {_        Exchange exchange = createExchange()__        exchange.getIn().setBody(feed.getEntries())__        exchange.getIn().setHeader(HEADER_ATOM_FEED, feed)__        return exchange__    };creates,an,exchange,with,the,entries,as,the,in,body,param,feed,the,atom,feed,return,the,created,exchange;public,exchange,create,exchange,feed,feed,exchange,exchange,create,exchange,exchange,get,in,set,body,feed,get,entries,exchange,get,in,set,header,feed,return,exchange
AtomEndpoint -> public void setSplitEntries(boolean splitEntries);1196684206;Sets whether or not entries should be sent individually or whether the entire_feed should be sent as a single message;public void setSplitEntries(boolean splitEntries) {_        this.splitEntries = splitEntries__    };sets,whether,or,not,entries,should,be,sent,individually,or,whether,the,entire,feed,should,be,sent,as,a,single,message;public,void,set,split,entries,boolean,split,entries,this,split,entries,split,entries
AtomEndpoint -> public void setSplitEntries(boolean splitEntries);1196686811;Sets whether or not entries should be sent individually or whether the entire_feed should be sent as a single message;public void setSplitEntries(boolean splitEntries) {_        this.splitEntries = splitEntries__    };sets,whether,or,not,entries,should,be,sent,individually,or,whether,the,entire,feed,should,be,sent,as,a,single,message;public,void,set,split,entries,boolean,split,entries,this,split,entries,split,entries
AtomEndpoint -> public void setSplitEntries(boolean splitEntries);1203821224;Sets whether or not entries should be sent individually or whether the entire_feed should be sent as a single message;public void setSplitEntries(boolean splitEntries) {_        this.splitEntries = splitEntries__    };sets,whether,or,not,entries,should,be,sent,individually,or,whether,the,entire,feed,should,be,sent,as,a,single,message;public,void,set,split,entries,boolean,split,entries,this,split,entries,split,entries
AtomEndpoint -> public void setSplitEntries(boolean splitEntries);1206371304;Sets whether or not entries should be sent individually or whether the entire_feed should be sent as a single message;public void setSplitEntries(boolean splitEntries) {_        this.splitEntries = splitEntries__    };sets,whether,or,not,entries,should,be,sent,individually,or,whether,the,entire,feed,should,be,sent,as,a,single,message;public,void,set,split,entries,boolean,split,entries,this,split,entries,split,entries
AtomEndpoint -> public void setSplitEntries(boolean splitEntries);1210605532;Sets whether or not entries should be sent individually or whether the entire_feed should be sent as a single message;public void setSplitEntries(boolean splitEntries) {_        this.splitEntries = splitEntries__    };sets,whether,or,not,entries,should,be,sent,individually,or,whether,the,entire,feed,should,be,sent,as,a,single,message;public,void,set,split,entries,boolean,split,entries,this,split,entries,split,entries
AtomEndpoint -> public void setSplitEntries(boolean splitEntries);1210666892;Sets whether or not entries should be sent individually or whether the entire_feed should be sent as a single message;public void setSplitEntries(boolean splitEntries) {_        this.splitEntries = splitEntries__    };sets,whether,or,not,entries,should,be,sent,individually,or,whether,the,entire,feed,should,be,sent,as,a,single,message;public,void,set,split,entries,boolean,split,entries,this,split,entries,split,entries
AtomEndpoint -> public void setSplitEntries(boolean splitEntries);1210742442;Sets whether or not entries should be sent individually or whether the entire_feed should be sent as a single message;public void setSplitEntries(boolean splitEntries) {_        this.splitEntries = splitEntries__    };sets,whether,or,not,entries,should,be,sent,individually,or,whether,the,entire,feed,should,be,sent,as,a,single,message;public,void,set,split,entries,boolean,split,entries,this,split,entries,split,entries
AtomEndpoint -> public void setSplitEntries(boolean splitEntries);1210913540;Sets whether or not entries should be sent individually or whether the entire_feed should be sent as a single message;public void setSplitEntries(boolean splitEntries) {_        this.splitEntries = splitEntries__    };sets,whether,or,not,entries,should,be,sent,individually,or,whether,the,entire,feed,should,be,sent,as,a,single,message;public,void,set,split,entries,boolean,split,entries,this,split,entries,split,entries
AtomEndpoint -> public void setSplitEntries(boolean splitEntries);1226284843;Sets whether or not entries should be sent individually or whether the entire_feed should be sent as a single message;public void setSplitEntries(boolean splitEntries) {_        this.splitEntries = splitEntries__    };sets,whether,or,not,entries,should,be,sent,individually,or,whether,the,entire,feed,should,be,sent,as,a,single,message;public,void,set,split,entries,boolean,split,entries,this,split,entries,split,entries
AtomEndpoint -> public void setSplitEntries(boolean splitEntries);1226296872;Sets whether or not entries should be sent individually or whether the entire_feed should be sent as a single message;public void setSplitEntries(boolean splitEntries) {_        this.splitEntries = splitEntries__    };sets,whether,or,not,entries,should,be,sent,individually,or,whether,the,entire,feed,should,be,sent,as,a,single,message;public,void,set,split,entries,boolean,split,entries,this,split,entries,split,entries
AtomEndpoint -> public void setSplitEntries(boolean splitEntries);1226378057;Sets whether or not entries should be sent individually or whether the entire_feed should be sent as a single message;public void setSplitEntries(boolean splitEntries) {_        this.splitEntries = splitEntries__    };sets,whether,or,not,entries,should,be,sent,individually,or,whether,the,entire,feed,should,be,sent,as,a,single,message;public,void,set,split,entries,boolean,split,entries,this,split,entries,split,entries
