commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testConsumeIdleMessages() throws Exception {     Thread.sleep(110).     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMinimumMessageCount(2).     assertMockEndpointsSatisfied().     assertTrue(mock.getExchanges().get(0).getIn().getBody() == null).     assertTrue(mock.getExchanges().get(1).getIn().getBody() == null). }
false;public;0;5;;public void configure() throws Exception {     from("atom:file:src/test/data/empty-feed.atom?splitEntries=true&consumer.delay=50&consumer.initialDelay=0" + "&feedHeader=false&sendEmptyMessageWhenIdle=true").to("mock:result"). }
false;protected;0;9;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from("atom:file:src/test/data/empty-feed.atom?splitEntries=true&consumer.delay=50&consumer.initialDelay=0" + "&feedHeader=false&sendEmptyMessageWhenIdle=true").to("mock:result").         }     }. }
