commented;modifiers;parameterAmount;loc;comment;code
false;public;1;20;;public void execute(JobExecutionContext jobExecutionContext) throws JobExecutionException {     LOG.debug("Running ScheduledJob: jobExecutionContext={}", jobExecutionContext).     SchedulerContext schedulerContext = getSchedulerContext(jobExecutionContext).     ScheduledJobState state = (ScheduledJobState) schedulerContext.get(jobExecutionContext.getJobDetail().getKey().toString()).     Action storedAction = state.getAction().     Route storedRoute = state.getRoute().     List<RoutePolicy> policyList = storedRoute.getRouteContext().getRoutePolicyList().     for (RoutePolicy policy : policyList) {         try {             if (policy instanceof ScheduledRoutePolicy) {                 ((ScheduledRoutePolicy) policy).onJobExecute(storedAction, storedRoute).             }         } catch (Exception e) {             throw new JobExecutionException("Failed to execute Scheduled Job for route " + storedRoute.getId() + " with trigger name: " + jobExecutionContext.getTrigger().getKey(), e).         }     } }
false;private;1;7;;private SchedulerContext getSchedulerContext(JobExecutionContext jobExecutionContext) throws JobExecutionException {     try {         return jobExecutionContext.getScheduler().getContext().     } catch (SchedulerException e) {         throw new JobExecutionException("Failed to obtain scheduler context for job " + jobExecutionContext.getJobDetail().getKey()).     } }
