commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;9;;public static String getQuartzContextName(CamelContext camelContext) {     // favour using the actual management name which was registered in JMX (if JMX is enabled)     if (camelContext.getManagementName() != null) {         return camelContext.getManagementName().     } else {         // fallback as name         return camelContext.getName().     } }
true;public,static;3;3;/**  * Adds the current CamelContext name and endpoint URI to the Job's jobData  * map.  *  * @param camelContext The currently active camelContext  * @param jobDetail The job for which the jobData map shall be updated  * @param endpointUri URI of the endpoint name, if any. May be {@code null}  */ ;/**  * Adds the current CamelContext name and endpoint URI to the Job's jobData  * map.  *  * @param camelContext The currently active camelContext  * @param jobDetail The job for which the jobData map shall be updated  * @param endpointUri URI of the endpoint name, if any. May be {@code null}  */ public static void updateJobDataMap(CamelContext camelContext, JobDetail jobDetail, String endpointUri) {     updateJobDataMap(camelContext, jobDetail, endpointUri, false). }
true;public,static;4;11;/**  * Adds the current CamelContext name and endpoint URI to the Job's jobData  * map.  *  * @param camelContext The currently active camelContext  * @param jobDetail The job for which the jobData map shall be updated  * @param endpointUri URI of the endpoint name, if any. May be {@code null}  * @param usingFixedCamelContextName If it is true, jobDataMap uses the CamelContext name.  *  if it is false, jobDataMap uses the CamelContext management name which could be changed during the deploy time  */ ;/**  * Adds the current CamelContext name and endpoint URI to the Job's jobData  * map.  *  * @param camelContext The currently active camelContext  * @param jobDetail The job for which the jobData map shall be updated  * @param endpointUri URI of the endpoint name, if any. May be {@code null}  * @param usingFixedCamelContextName If it is true, jobDataMap uses the CamelContext name.  *  if it is false, jobDataMap uses the CamelContext management name which could be changed during the deploy time  */ public static void updateJobDataMap(CamelContext camelContext, JobDetail jobDetail, String endpointUri, boolean usingFixedCamelContextName) {     // Store this camelContext name into the job data     JobDataMap jobDataMap = jobDetail.getJobDataMap().     String camelContextName = camelContext.getName().     if (!usingFixedCamelContextName) {         camelContextName = QuartzHelper.getQuartzContextName(camelContext).     }     LOG.debug("Adding camelContextName={}, endpointUri={} into job data map.", camelContextName, endpointUri).     jobDataMap.put(QuartzConstants.QUARTZ_CAMEL_CONTEXT_NAME, camelContextName).     jobDataMap.put(QuartzConstants.QUARTZ_ENDPOINT_URI, endpointUri). }
