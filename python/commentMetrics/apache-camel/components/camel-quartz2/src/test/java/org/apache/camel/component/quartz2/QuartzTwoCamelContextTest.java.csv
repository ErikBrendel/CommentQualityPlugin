commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public void configure() throws Exception {     from("quartz2://myGroup/myTimerName?cron=0/1+*+*+*+*+?").to("mock:one"). }
false;public;0;4;;@Override public void configure() throws Exception {     from("quartz2://myOtherGroup/myOtherTimerName?cron=0/1+*+*+*+*+?").to("mock:two"). }
false;public;0;22;;@Before public void setUp() throws Exception {     camel1 = new DefaultCamelContext().     camel1.setName("camel-1").     camel1.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("quartz2://myGroup/myTimerName?cron=0/1+*+*+*+*+?").to("mock:one").         }     }).     camel1.start().     camel2 = new DefaultCamelContext().     camel2.setName("camel-2").     camel2.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("quartz2://myOtherGroup/myOtherTimerName?cron=0/1+*+*+*+*+?").to("mock:two").         }     }).     camel2.start(). }
false;public;0;5;;@After public void tearDown() throws Exception {     camel1.stop().     camel2.stop(). }
false;public;0;15;;@Test public void testTwoCamelContext() throws Exception {     MockEndpoint mock1 = camel1.getEndpoint("mock:one", MockEndpoint.class).     mock1.expectedMinimumMessageCount(2).     MockEndpoint mock2 = camel2.getEndpoint("mock:two", MockEndpoint.class).     mock2.expectedMinimumMessageCount(6).     mock1.assertIsSatisfied().     camel1.stop().     mock2.assertIsSatisfied().     camel2.stop(). }
false;public;0;4;;@Override public void configure() throws Exception {     from("quartz2://myThirdGroup/myThirdTimerName?cron=0/1+*+*+*+*+?").to("mock:three"). }
false;public;0;22;;@Test public void testThirdCamelContext() throws Exception {     camel1.stop().     camel2.stop().     DefaultCamelContext camel3 = new DefaultCamelContext().     camel3.setName("camel-3").     camel3.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("quartz2://myThirdGroup/myThirdTimerName?cron=0/1+*+*+*+*+?").to("mock:three").         }     }).     camel3.start().     MockEndpoint mock3 = camel3.getEndpoint("mock:three", MockEndpoint.class).     mock3.expectedMinimumMessageCount(2).     mock3.assertIsSatisfied().     camel3.stop(). }
