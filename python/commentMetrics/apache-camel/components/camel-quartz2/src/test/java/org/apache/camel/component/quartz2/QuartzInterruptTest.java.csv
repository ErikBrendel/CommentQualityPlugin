commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void testShutdown() throws Exception {     resultEndpoint = getMockEndpoint("mock:result").     resultEndpoint.expectedMinimumMessageCount(10).     // lets test the receive worked     resultEndpoint.assertIsSatisfied().     QuartzComponent quartz = context.getComponent("quartz2", QuartzComponent.class).     quartz.stop(). }
false;public;0;6;;public void configure() {     QuartzComponent quartz = context.getComponent("quartz2", QuartzComponent.class).     quartz.setInterruptJobsOnShutdown(true).     from("quartz2://myGroup/myTimerName?trigger.repeatInterval=2&trigger.repeatCount=100").routeId("myRoute").to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          public void configure() {             QuartzComponent quartz = context.getComponent("quartz2", QuartzComponent.class).             quartz.setInterruptJobsOnShutdown(true).             from("quartz2://myGroup/myTimerName?trigger.repeatInterval=2&trigger.repeatCount=100").routeId("myRoute").to("mock:result").         }     }. }
