commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected AbstractXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/component/quartz2/SpringQuartzPersistentStoreTest.xml"). }
false;public;0;30;;@Test public void testQuartzPersistentStore() throws Exception {     // skip testing on aix     if (isPlatform("aix")) {         return.     }     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMinimumMessageCount(2).     assertMockEndpointsSatisfied().     // restart route     context().getRouteController().stopRoute("myRoute").     mock.reset().     mock.expectedMessageCount(0).     // wait a bit     Thread.sleep(2000).     assertMockEndpointsSatisfied().     // start route, and we got messages again     mock.reset().     mock.expectedMinimumMessageCount(2).     context().getRouteController().startRoute("myRoute").     assertMockEndpointsSatisfied(). }
