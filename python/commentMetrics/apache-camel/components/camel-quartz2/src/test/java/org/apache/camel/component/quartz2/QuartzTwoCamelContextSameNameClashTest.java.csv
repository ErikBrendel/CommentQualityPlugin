commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Override public void configure() throws Exception {     from("quartz2://myGroup/myTimerName?cron=0/1+*+*+*+*+?").log("Fired one").to("mock:one"). }
false;public;0;6;;@Override public void configure() throws Exception {     from("quartz2://myOtherGroup/myOtherTimerName?cron=0/1+*+*+*+*+?").log("Fired two").to("mock:two"). }
false;public;0;26;;@Before public void setUp() throws Exception {     camel1 = new DefaultCamelContext().     camel1.setName("myCamel").     camel1.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("quartz2://myGroup/myTimerName?cron=0/1+*+*+*+*+?").log("Fired one").to("mock:one").         }     }).     camel1.start().     camel2 = new DefaultCamelContext().     camel2.setName("myCamel").     camel2.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("quartz2://myOtherGroup/myOtherTimerName?cron=0/1+*+*+*+*+?").log("Fired two").to("mock:two").         }     }).     camel2.start(). }
false;public;0;5;;@After public void tearDown() throws Exception {     camel1.stop().     camel2.stop(). }
false;public;0;17;;@Test public void testTwoCamelContext() throws Exception {     assertNotSame(camel1.getManagementName(), camel2.getManagementName()).     MockEndpoint mock1 = camel1.getEndpoint("mock:one", MockEndpoint.class).     mock1.expectedMinimumMessageCount(2).     MockEndpoint mock2 = camel2.getEndpoint("mock:two", MockEndpoint.class).     mock2.expectedMinimumMessageCount(6).     mock1.assertIsSatisfied().     camel1.stop().     mock2.assertIsSatisfied().     camel2.stop(). }
