# id;timestamp;commentText;codeText;commentWords;codeWords
QuartzNameCollisionTest -> @Test     public void testNoStatefulCollisionError() throws Exception;1375520225;Don't check for a name collision if the job is stateful.;@Test_    public void testNoStatefulCollisionError() throws Exception {_        camel1 = new DefaultCamelContext()__        camel1.setName("camel-1")__        camel1.addRoutes(new RouteBuilder() {_            @Override_            public void configure() throws Exception {_                from("quartz2://myGroup/myTimerName?stateful=true&cron=0/1+*+*+*+*+?").to("log:one", "mock:one")__            }_        })__        camel1.start()___        camel2 = new DefaultCamelContext()__        camel2.setName("camel-2")__        camel2.addRoutes(new RouteBuilder() {_            @Override_            public void configure() throws Exception {_                from("quartz2://myGroup/myTimerName?stateful=true").to("log:two", "mock:two")__            }_        })__        camel2.start()__        _    };don,t,check,for,a,name,collision,if,the,job,is,stateful;test,public,void,test,no,stateful,collision,error,throws,exception,camel1,new,default,camel,context,camel1,set,name,camel,1,camel1,add,routes,new,route,builder,override,public,void,configure,throws,exception,from,quartz2,my,group,my,timer,name,stateful,true,cron,0,1,to,log,one,mock,one,camel1,start,camel2,new,default,camel,context,camel2,set,name,camel,2,camel2,add,routes,new,route,builder,override,public,void,configure,throws,exception,from,quartz2,my,group,my,timer,name,stateful,true,to,log,two,mock,two,camel2,start
QuartzNameCollisionTest -> @Test     public void testNoStatefulCollisionError() throws Exception;1375520225;Don't check for a name collision if the job is stateful.;@Test_    public void testNoStatefulCollisionError() throws Exception {_        camel1 = new DefaultCamelContext()__        camel1.setName("camel-1")__        camel1.addRoutes(new RouteBuilder() {_            @Override_            public void configure() throws Exception {_                from("quartz2://myGroup/myTimerName?stateful=true&cron=0/1+*+*+*+*+?").to("log:one", "mock:one")__            }_        })__        camel1.start()___        camel2 = new DefaultCamelContext()__        camel2.setName("camel-2")__        camel2.addRoutes(new RouteBuilder() {_            @Override_            public void configure() throws Exception {_                from("quartz2://myGroup/myTimerName?stateful=true").to("log:two", "mock:two")__            }_        })__        camel2.start()__        _    };don,t,check,for,a,name,collision,if,the,job,is,stateful;test,public,void,test,no,stateful,collision,error,throws,exception,camel1,new,default,camel,context,camel1,set,name,camel,1,camel1,add,routes,new,route,builder,override,public,void,configure,throws,exception,from,quartz2,my,group,my,timer,name,stateful,true,cron,0,1,to,log,one,mock,one,camel1,start,camel2,new,default,camel,context,camel2,set,name,camel,2,camel2,add,routes,new,route,builder,override,public,void,configure,throws,exception,from,quartz2,my,group,my,timer,name,stateful,true,to,log,two,mock,two,camel2,start
QuartzNameCollisionTest -> @Test     public void testNoStatefulCollisionError() throws Exception;1415367795;Don't check for a name collision if the job is stateful.;@Test_    public void testNoStatefulCollisionError() throws Exception {_        camel1 = new DefaultCamelContext()__        camel1.setName("camel-1")__        camel1.addRoutes(new RouteBuilder() {_            @Override_            public void configure() throws Exception {_                from("quartz2://myGroup/myTimerName?stateful=true&cron=0/1+*+*+*+*+?").to("log:one", "mock:one")__            }_        })__        camel1.start()___        camel2 = new DefaultCamelContext()__        camel2.setName("camel-2")__        camel2.addRoutes(new RouteBuilder() {_            @Override_            public void configure() throws Exception {_                from("quartz2://myGroup/myTimerName?stateful=true").to("log:two", "mock:two")__            }_        })__        camel2.start()__        _    };don,t,check,for,a,name,collision,if,the,job,is,stateful;test,public,void,test,no,stateful,collision,error,throws,exception,camel1,new,default,camel,context,camel1,set,name,camel,1,camel1,add,routes,new,route,builder,override,public,void,configure,throws,exception,from,quartz2,my,group,my,timer,name,stateful,true,cron,0,1,to,log,one,mock,one,camel1,start,camel2,new,default,camel,context,camel2,set,name,camel,2,camel2,add,routes,new,route,builder,override,public,void,configure,throws,exception,from,quartz2,my,group,my,timer,name,stateful,true,to,log,two,mock,two,camel2,start
QuartzNameCollisionTest -> @Test     public void testNoStatefulCollisionError() throws Exception;1540108159;Don't check for a name collision if the job is stateful.;@Test_    public void testNoStatefulCollisionError() throws Exception {_        camel1 = new DefaultCamelContext()__        camel1.setName("camel-1")__        camel1.addRoutes(new RouteBuilder() {_            @Override_            public void configure() throws Exception {_                from("quartz2://myGroup/myTimerName?stateful=true&cron=0/1+*+*+*+*+?").to("log:one", "mock:one")__            }_        })__        camel1.start()___        camel2 = new DefaultCamelContext()__        camel2.setName("camel-2")__        camel2.addRoutes(new RouteBuilder() {_            @Override_            public void configure() throws Exception {_                from("quartz2://myGroup/myTimerName?stateful=true").to("log:two", "mock:two")__            }_        })__        camel2.start()__        _    };don,t,check,for,a,name,collision,if,the,job,is,stateful;test,public,void,test,no,stateful,collision,error,throws,exception,camel1,new,default,camel,context,camel1,set,name,camel,1,camel1,add,routes,new,route,builder,override,public,void,configure,throws,exception,from,quartz2,my,group,my,timer,name,stateful,true,cron,0,1,to,log,one,mock,one,camel1,start,camel2,new,default,camel,context,camel2,set,name,camel,2,camel2,add,routes,new,route,builder,override,public,void,configure,throws,exception,from,quartz2,my,group,my,timer,name,stateful,true,to,log,two,mock,two,camel2,start
QuartzNameCollisionTest -> @Test     public void testRemoveJob() throws Exception;1375520225;Confirm the quartz trigger is removed on route stop.;@Test_    public void testRemoveJob() throws Exception {_        camel1 = new DefaultCamelContext()__        camel1.setName("camel-1")__        camel1.addRoutes(new RouteBuilder() {_            @Override_            public void configure() throws Exception {_                from("quartz2://myGroup/myTimerName?cron=0/1+*+*+*+*+?").id("route-1").to("log:one", "mock:one")__            }_        })___        camel1.addRoutes(new RouteBuilder() {_            @Override_            public void configure() throws Exception {_                from("quartz2://myGroup2/myTimerName?cron=0/1+*+*+*+*+?").id("route-2").to("log:one", "mock:one")__            }_        })___        camel1.start()___        QuartzComponent component = (QuartzComponent) camel1.getComponent("quartz2")__        Scheduler scheduler = component.getScheduler()__        TriggerKey triggerKey = TriggerKey.triggerKey("myTimerName", "myGroup")__        Trigger trigger = scheduler.getTrigger(triggerKey)__        Assert.assertNotNull(trigger)___        camel1.stopRoute("route-1")___        Trigger.TriggerState triggerState = component.getScheduler().getTriggerState(triggerKey)__        Assert.assertNotNull(trigger)__        Assert.assertEquals(Trigger.TriggerState.PAUSED, triggerState)__    };confirm,the,quartz,trigger,is,removed,on,route,stop;test,public,void,test,remove,job,throws,exception,camel1,new,default,camel,context,camel1,set,name,camel,1,camel1,add,routes,new,route,builder,override,public,void,configure,throws,exception,from,quartz2,my,group,my,timer,name,cron,0,1,id,route,1,to,log,one,mock,one,camel1,add,routes,new,route,builder,override,public,void,configure,throws,exception,from,quartz2,my,group2,my,timer,name,cron,0,1,id,route,2,to,log,one,mock,one,camel1,start,quartz,component,component,quartz,component,camel1,get,component,quartz2,scheduler,scheduler,component,get,scheduler,trigger,key,trigger,key,trigger,key,trigger,key,my,timer,name,my,group,trigger,trigger,scheduler,get,trigger,trigger,key,assert,assert,not,null,trigger,camel1,stop,route,route,1,trigger,trigger,state,trigger,state,component,get,scheduler,get,trigger,state,trigger,key,assert,assert,not,null,trigger,assert,assert,equals,trigger,trigger,state,paused,trigger,state
QuartzNameCollisionTest -> @Test     public void testRemoveJob() throws Exception;1375520225;Confirm the quartz trigger is removed on route stop.;@Test_    public void testRemoveJob() throws Exception {_        camel1 = new DefaultCamelContext()__        camel1.setName("camel-1")__        camel1.addRoutes(new RouteBuilder() {_            @Override_            public void configure() throws Exception {_                from("quartz2://myGroup/myTimerName?cron=0/1+*+*+*+*+?").id("route-1").to("log:one", "mock:one")__            }_        })___        camel1.addRoutes(new RouteBuilder() {_            @Override_            public void configure() throws Exception {_                from("quartz2://myGroup2/myTimerName?cron=0/1+*+*+*+*+?").id("route-2").to("log:one", "mock:one")__            }_        })___        camel1.start()___        QuartzComponent component = (QuartzComponent) camel1.getComponent("quartz2")__        Scheduler scheduler = component.getScheduler()__        TriggerKey triggerKey = TriggerKey.triggerKey("myTimerName", "myGroup")__        Trigger trigger = scheduler.getTrigger(triggerKey)__        Assert.assertNotNull(trigger)___        camel1.stopRoute("route-1")___        Trigger.TriggerState triggerState = component.getScheduler().getTriggerState(triggerKey)__        Assert.assertNotNull(trigger)__        Assert.assertEquals(Trigger.TriggerState.PAUSED, triggerState)__    };confirm,the,quartz,trigger,is,removed,on,route,stop;test,public,void,test,remove,job,throws,exception,camel1,new,default,camel,context,camel1,set,name,camel,1,camel1,add,routes,new,route,builder,override,public,void,configure,throws,exception,from,quartz2,my,group,my,timer,name,cron,0,1,id,route,1,to,log,one,mock,one,camel1,add,routes,new,route,builder,override,public,void,configure,throws,exception,from,quartz2,my,group2,my,timer,name,cron,0,1,id,route,2,to,log,one,mock,one,camel1,start,quartz,component,component,quartz,component,camel1,get,component,quartz2,scheduler,scheduler,component,get,scheduler,trigger,key,trigger,key,trigger,key,trigger,key,my,timer,name,my,group,trigger,trigger,scheduler,get,trigger,trigger,key,assert,assert,not,null,trigger,camel1,stop,route,route,1,trigger,trigger,state,trigger,state,component,get,scheduler,get,trigger,state,trigger,key,assert,assert,not,null,trigger,assert,assert,equals,trigger,trigger,state,paused,trigger,state
QuartzNameCollisionTest -> @Test     public void testRemoveJob() throws Exception;1415367795;Confirm the quartz trigger is removed on route stop.;@Test_    public void testRemoveJob() throws Exception {_        camel1 = new DefaultCamelContext()__        camel1.setName("camel-1")__        camel1.addRoutes(new RouteBuilder() {_            @Override_            public void configure() throws Exception {_                from("quartz2://myGroup/myTimerName?cron=0/1+*+*+*+*+?").id("route-1").to("log:one", "mock:one")__            }_        })___        camel1.addRoutes(new RouteBuilder() {_            @Override_            public void configure() throws Exception {_                from("quartz2://myGroup2/myTimerName?cron=0/1+*+*+*+*+?").id("route-2").to("log:one", "mock:one")__            }_        })___        camel1.start()___        QuartzComponent component = (QuartzComponent) camel1.getComponent("quartz2")__        Scheduler scheduler = component.getScheduler()__        TriggerKey triggerKey = TriggerKey.triggerKey("myTimerName", "myGroup")__        Trigger trigger = scheduler.getTrigger(triggerKey)__        Assert.assertNotNull(trigger)___        camel1.stopRoute("route-1")___        Trigger.TriggerState triggerState = component.getScheduler().getTriggerState(triggerKey)__        Assert.assertNotNull(trigger)__        Assert.assertEquals(Trigger.TriggerState.PAUSED, triggerState)__    };confirm,the,quartz,trigger,is,removed,on,route,stop;test,public,void,test,remove,job,throws,exception,camel1,new,default,camel,context,camel1,set,name,camel,1,camel1,add,routes,new,route,builder,override,public,void,configure,throws,exception,from,quartz2,my,group,my,timer,name,cron,0,1,id,route,1,to,log,one,mock,one,camel1,add,routes,new,route,builder,override,public,void,configure,throws,exception,from,quartz2,my,group2,my,timer,name,cron,0,1,id,route,2,to,log,one,mock,one,camel1,start,quartz,component,component,quartz,component,camel1,get,component,quartz2,scheduler,scheduler,component,get,scheduler,trigger,key,trigger,key,trigger,key,trigger,key,my,timer,name,my,group,trigger,trigger,scheduler,get,trigger,trigger,key,assert,assert,not,null,trigger,camel1,stop,route,route,1,trigger,trigger,state,trigger,state,component,get,scheduler,get,trigger,state,trigger,key,assert,assert,not,null,trigger,assert,assert,equals,trigger,trigger,state,paused,trigger,state
QuartzNameCollisionTest -> @Test     public void testRemoveJob() throws Exception;1540108159;Confirm the quartz trigger is removed on route stop.;@Test_    public void testRemoveJob() throws Exception {_        camel1 = new DefaultCamelContext()__        camel1.setName("camel-1")__        camel1.addRoutes(new RouteBuilder() {_            @Override_            public void configure() throws Exception {_                from("quartz2://myGroup/myTimerName?cron=0/1+*+*+*+*+?").id("route-1").to("log:one", "mock:one")__            }_        })___        camel1.addRoutes(new RouteBuilder() {_            @Override_            public void configure() throws Exception {_                from("quartz2://myGroup2/myTimerName?cron=0/1+*+*+*+*+?").id("route-2").to("log:one", "mock:one")__            }_        })___        camel1.start()___        QuartzComponent component = (QuartzComponent) camel1.getComponent("quartz2")__        Scheduler scheduler = component.getScheduler()__        TriggerKey triggerKey = TriggerKey.triggerKey("myTimerName", "myGroup")__        Trigger trigger = scheduler.getTrigger(triggerKey)__        Assert.assertNotNull(trigger)___        camel1.getRouteController().stopRoute("route-1")___        Trigger.TriggerState triggerState = component.getScheduler().getTriggerState(triggerKey)__        Assert.assertNotNull(trigger)__        Assert.assertEquals(Trigger.TriggerState.PAUSED, triggerState)__    };confirm,the,quartz,trigger,is,removed,on,route,stop;test,public,void,test,remove,job,throws,exception,camel1,new,default,camel,context,camel1,set,name,camel,1,camel1,add,routes,new,route,builder,override,public,void,configure,throws,exception,from,quartz2,my,group,my,timer,name,cron,0,1,id,route,1,to,log,one,mock,one,camel1,add,routes,new,route,builder,override,public,void,configure,throws,exception,from,quartz2,my,group2,my,timer,name,cron,0,1,id,route,2,to,log,one,mock,one,camel1,start,quartz,component,component,quartz,component,camel1,get,component,quartz2,scheduler,scheduler,component,get,scheduler,trigger,key,trigger,key,trigger,key,trigger,key,my,timer,name,my,group,trigger,trigger,scheduler,get,trigger,trigger,key,assert,assert,not,null,trigger,camel1,get,route,controller,stop,route,route,1,trigger,trigger,state,trigger,state,component,get,scheduler,get,trigger,state,trigger,key,assert,assert,not,null,trigger,assert,assert,equals,trigger,trigger,state,paused,trigger,state
QuartzNameCollisionTest -> @Test     public void testRestart() throws Exception;1375520225;Make sure a resume doesn't trigger a dupe name error.;@Test_    public void testRestart() throws Exception {_        DefaultCamelContext camel = new DefaultCamelContext()___        camel.addRoutes(new RouteBuilder() {_            @Override_            public void configure() throws Exception {_                from("quartz2://myGroup/myTimerName?cron=0/1+*+*+*+*+?").to("log:one", "mock:one")__            }_        })___        _        camel.start()__        Thread.sleep(100)__        camel.suspend()__        Thread.sleep(100)__        camel.resume()__        Thread.sleep(100)__        camel.stop()__        Thread.sleep(100)__        camel.start()__        Thread.sleep(100)__        camel.stop()__    };make,sure,a,resume,doesn,t,trigger,a,dupe,name,error;test,public,void,test,restart,throws,exception,default,camel,context,camel,new,default,camel,context,camel,add,routes,new,route,builder,override,public,void,configure,throws,exception,from,quartz2,my,group,my,timer,name,cron,0,1,to,log,one,mock,one,camel,start,thread,sleep,100,camel,suspend,thread,sleep,100,camel,resume,thread,sleep,100,camel,stop,thread,sleep,100,camel,start,thread,sleep,100,camel,stop
QuartzNameCollisionTest -> @Test     public void testRestart() throws Exception;1375520225;Make sure a resume doesn't trigger a dupe name error.;@Test_    public void testRestart() throws Exception {_        DefaultCamelContext camel = new DefaultCamelContext()___        camel.addRoutes(new RouteBuilder() {_            @Override_            public void configure() throws Exception {_                from("quartz2://myGroup/myTimerName?cron=0/1+*+*+*+*+?").to("log:one", "mock:one")__            }_        })___        _        camel.start()__        Thread.sleep(100)__        camel.suspend()__        Thread.sleep(100)__        camel.resume()__        Thread.sleep(100)__        camel.stop()__        Thread.sleep(100)__        camel.start()__        Thread.sleep(100)__        camel.stop()__    };make,sure,a,resume,doesn,t,trigger,a,dupe,name,error;test,public,void,test,restart,throws,exception,default,camel,context,camel,new,default,camel,context,camel,add,routes,new,route,builder,override,public,void,configure,throws,exception,from,quartz2,my,group,my,timer,name,cron,0,1,to,log,one,mock,one,camel,start,thread,sleep,100,camel,suspend,thread,sleep,100,camel,resume,thread,sleep,100,camel,stop,thread,sleep,100,camel,start,thread,sleep,100,camel,stop
QuartzNameCollisionTest -> @Test     public void testRestart() throws Exception;1415367795;Make sure a resume doesn't trigger a dupe name error.;@Test_    public void testRestart() throws Exception {_        DefaultCamelContext camel = new DefaultCamelContext()___        camel.addRoutes(new RouteBuilder() {_            @Override_            public void configure() throws Exception {_                from("quartz2://myGroup/myTimerName?cron=0/1+*+*+*+*+?").to("log:one", "mock:one")__            }_        })___        _        camel.start()__        Thread.sleep(100)__        camel.suspend()__        Thread.sleep(100)__        camel.resume()__        Thread.sleep(100)__        camel.stop()__        Thread.sleep(100)__        camel.start()__        Thread.sleep(100)__        camel.stop()__    };make,sure,a,resume,doesn,t,trigger,a,dupe,name,error;test,public,void,test,restart,throws,exception,default,camel,context,camel,new,default,camel,context,camel,add,routes,new,route,builder,override,public,void,configure,throws,exception,from,quartz2,my,group,my,timer,name,cron,0,1,to,log,one,mock,one,camel,start,thread,sleep,100,camel,suspend,thread,sleep,100,camel,resume,thread,sleep,100,camel,stop,thread,sleep,100,camel,start,thread,sleep,100,camel,stop
QuartzNameCollisionTest -> @Test     public void testRestart() throws Exception;1540108159;Make sure a resume doesn't trigger a dupe name error.;@Test_    public void testRestart() throws Exception {_        DefaultCamelContext camel = new DefaultCamelContext()___        camel.addRoutes(new RouteBuilder() {_            @Override_            public void configure() throws Exception {_                from("quartz2://myGroup/myTimerName?cron=0/1+*+*+*+*+?").to("log:one", "mock:one")__            }_        })___        _        camel.start()__        Thread.sleep(100)__        camel.suspend()__        Thread.sleep(100)__        camel.resume()__        Thread.sleep(100)__        camel.stop()__        Thread.sleep(100)__        camel.start()__        Thread.sleep(100)__        camel.stop()__    };make,sure,a,resume,doesn,t,trigger,a,dupe,name,error;test,public,void,test,restart,throws,exception,default,camel,context,camel,new,default,camel,context,camel,add,routes,new,route,builder,override,public,void,configure,throws,exception,from,quartz2,my,group,my,timer,name,cron,0,1,to,log,one,mock,one,camel,start,thread,sleep,100,camel,suspend,thread,sleep,100,camel,resume,thread,sleep,100,camel,stop,thread,sleep,100,camel,start,thread,sleep,100,camel,stop
