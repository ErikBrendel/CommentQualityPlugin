commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;3;;protected MBeanServer getMBeanServer() {     return context.getManagementStrategy().getManagementAgent().getMBeanServer(). }
false;public;0;21;;@Test public void testQuartzRoute() throws Exception {     // JMX tests dont work well on AIX CI servers (hangs them)     if (isPlatform("aix")) {         return.     }     getMockEndpoint("mock:result").expectedMessageCount(2).     assertMockEndpointsSatisfied().     MBeanServer mbeanServer = getMBeanServer().     String name = String.format("quartz:type=QuartzScheduler,name=DefaultQuartzScheduler-%s,instance=NON_CLUSTERED", context.getManagementName()).     ObjectName on = ObjectName.getInstance(name).     assertTrue(mbeanServer.isRegistered(on)).     Boolean started = (Boolean) mbeanServer.getAttribute(on, "Started").     assertEquals(true, started). }
false;public;0;4;;@Override public void configure() throws Exception {     from("quartz2://myGroup/myTimerName?trigger.repeatInterval=2&trigger.repeatCount=1").routeId("myRoute").to("mock:result"). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("quartz2://myGroup/myTimerName?trigger.repeatInterval=2&trigger.repeatCount=1").routeId("myRoute").to("mock:result").         }     }. }
