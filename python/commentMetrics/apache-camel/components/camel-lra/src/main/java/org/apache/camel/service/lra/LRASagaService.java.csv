commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Override public CompletableFuture<CamelSagaCoordinator> newSaga() {     return client.newLRA().thenApply(url -> new LRASagaCoordinator(LRASagaService.this, url)). }
false;public;1;10;;@Override public CompletableFuture<CamelSagaCoordinator> getSaga(String id) {     CompletableFuture<CamelSagaCoordinator> coordinator = new CompletableFuture<>().     try {         coordinator.complete(new LRASagaCoordinator(this, new URL(id))).     } catch (Exception ex) {         coordinator.completeExceptionally(ex).     }     return coordinator. }
false;public;1;6;;@Override public void registerStep(CamelSagaStep step) {     // Register which uris should be exposed     step.getCompensation().map(Endpoint::getEndpointUri).map(this.sagaURIs::add).     step.getCompletion().map(Endpoint::getEndpointUri).map(this.sagaURIs::add). }
false;protected;0;10;;@Override protected void doStart() throws Exception {     if (this.executorService == null) {         this.executorService = camelContext.getExecutorServiceManager().newDefaultScheduledThreadPool(this, "saga-lra").     }     if (this.client == null) {         this.client = new LRAClient(this).     } }
false;protected;0;10;;@Override protected void doStop() throws Exception {     if (this.executorService != null) {         camelContext.getExecutorServiceManager().shutdownGraceful(this.executorService).         this.executorService = null.     }     if (this.client != null) {         this.client = null.     } }
false;public;1;12;;@Override public void setCamelContext(CamelContext camelContext) {     this.camelContext = camelContext.     if (this.routes == null) {         this.routes = new LRASagaRoutes(this).         try {             this.camelContext.addRoutes(this.routes).         } catch (Exception ex) {             throw new RuntimeCamelException(ex).         }     } }
false;public;0;4;;@Override public CamelContext getCamelContext() {     return this.camelContext. }
false;public;0;3;;public ScheduledExecutorService getExecutorService() {     return executorService. }
false;public;0;3;;public LRAClient getClient() {     return client. }
false;public;0;3;;public String getCoordinatorUrl() {     return coordinatorUrl. }
false;public;1;3;;public void setCoordinatorUrl(String coordinatorUrl) {     this.coordinatorUrl = coordinatorUrl. }
false;public;0;3;;public String getCoordinatorContextPath() {     return coordinatorContextPath. }
false;public;1;3;;public void setCoordinatorContextPath(String coordinatorContextPath) {     this.coordinatorContextPath = coordinatorContextPath. }
false;public;0;3;;public String getLocalParticipantUrl() {     return localParticipantUrl. }
false;public;1;3;;public void setLocalParticipantUrl(String localParticipantUrl) {     this.localParticipantUrl = localParticipantUrl. }
false;public;0;3;;public String getLocalParticipantContextPath() {     return localParticipantContextPath. }
false;public;1;3;;public void setLocalParticipantContextPath(String localParticipantContextPath) {     this.localParticipantContextPath = localParticipantContextPath. }
false;public;0;3;;public Set<String> getRegisteredURIs() {     return sagaURIs. }
