commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isSingleton() {     return false. }
false;protected;0;5;;@Override protected void doStart() throws Exception {     super.doStart().     client = KubernetesHelper.getKubernetesClient(configuration). }
false;protected;0;7;;@Override protected void doStop() throws Exception {     super.doStop().     if (client != null) {         client.close().     } }
false;public;0;3;;public ExecutorService createExecutor() {     return getCamelContext().getExecutorServiceManager().newFixedThreadPool(this, "KubernetesConsumer", configuration.getPoolSize()). }
false;public;0;3;;public KubernetesClient getKubernetesClient() {     return client. }
true;public;0;3;/**  * The kubernetes Configuration  */ ;/**  * The kubernetes Configuration  */ public KubernetesConfiguration getKubernetesConfiguration() {     return configuration. }
