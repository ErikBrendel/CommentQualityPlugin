commented;modifiers;parameterAmount;loc;comment;code
false;public;2;5;;@Override public void leadershipChanged(CamelClusterView view, Optional<CamelClusterMember> leader) {     LOG.info("Cluster view {} - leader changed to: {}", view.getLocalMember(), leader).     this.leaderships.add(new LeadershipInfo(leader.map(CamelClusterMember::getId).orElse(null), System.currentTimeMillis())). }
false;public;0;3;;public List<LeadershipInfo> getLeadershipInfo() {     return leaderships. }
false;public;2;3;;public void waitForAnyLeader(long time, TimeUnit unit) {     waitForLeader(leader -> leader != null, time, unit). }
false;public;2;4;;public void waitForALeaderChange(long time, TimeUnit unit) {     String current = getCurrentLeader().     waitForLeader(leader -> !Objects.equals(current, leader), time, unit). }
false;public;3;3;;public void waitForANewLeader(String current, long time, TimeUnit unit) {     waitForLeader(leader -> leader != null && !Objects.equals(current, leader), time, unit). }
false;public;3;9;;public void waitForLeader(Predicate<String> as, long time, TimeUnit unit) {     long start = System.currentTimeMillis().     while (!as.test(getCurrentLeader())) {         if (System.currentTimeMillis() - start > TimeUnit.MILLISECONDS.convert(time, unit)) {             Assert.fail("Timeout while waiting for condition").         }         doWait(50).     } }
false;private;1;7;;private void doWait(long millis) {     try {         Thread.sleep(millis).     } catch (InterruptedException e) {         throw new RuntimeException(e).     } }
false;public;0;6;;public String getCurrentLeader() {     if (leaderships.size() > 0) {         return leaderships.get(leaderships.size() - 1).getLeader().     }     return null. }
false;public;1;10;;public Long getLastTimeOf(Predicate<String> p) {     List<LeadershipInfo> lst = new ArrayList<>(leaderships).     Collections.reverse(lst).     for (LeadershipInfo info : lst) {         if (p.test(info.getLeader())) {             return info.getChangeTimestamp().         }     }     return null. }
false;public;0;3;;public String getLeader() {     return leader. }
false;public;0;3;;public long getChangeTimestamp() {     return changeTimestamp. }
