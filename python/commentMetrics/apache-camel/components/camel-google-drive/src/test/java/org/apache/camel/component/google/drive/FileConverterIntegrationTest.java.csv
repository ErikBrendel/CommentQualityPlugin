commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Override @Before public void setUp() throws Exception {     deleteDirectory("target/convertertest").     super.setUp(). }
false;public;0;14;;@Test public void testFileConverter() throws Exception {     template.sendBodyAndHeader("file://target/convertertest", "Hello!", "CamelFileName", "greeting.txt").     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(1).     assertMockEndpointsSatisfied().     File file = mock.getReceivedExchanges().get(0).getIn().getBody(com.google.api.services.drive.model.File.class).     assertEquals("Hello!", context.getTypeConverter().convertTo(String.class, mock.getReceivedExchanges().get(0), file)). }
false;public;0;6;;public void configure() {     from("file://target/convertertest?noop=true").convertBodyTo(File.class).to("google-drive://drive-files/insert?inBody=content").to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() {             from("file://target/convertertest?noop=true").convertBodyTo(File.class).to("google-drive://drive-files/insert?inBody=content").to("mock:result").         }     }. }
