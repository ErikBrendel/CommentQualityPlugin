commented;modifiers;parameterAmount;loc;comment;code
false;public;0;14;;@Test public void testListConsumer() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(1).     File testFile = uploadTestFile().     String fileId = testFile.getId().     assertMockEndpointsSatisfied().     FileList fileList = mock.getReceivedExchanges().get(0).getIn().getBody(com.google.api.services.drive.model.FileList.class).     assertTrue(fileInList(fileId, fileList)). }
false;private;2;8;;private boolean fileInList(String fileId, FileList fileList) {     for (File f : fileList.getItems()) {         if (f.getId().equals(fileId)) {             return true.         }     }     return false. }
false;public;0;3;;public void configure() {     from("google-drive://drive-files/list").to("mock:result"). }
false;protected;0;8;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() {             from("google-drive://drive-files/list").to("mock:result").         }     }. }
