commented;modifiers;parameterAmount;loc;comment;code
false;public,static;2;30;;@Converter public static com.google.api.services.drive.model.File genericFileToGoogleDriveFile(GenericFile<?> file, Exchange exchange) throws Exception {     if (file.getFile() instanceof File) {         File f = (File) file.getFile().         com.google.api.services.drive.model.File fileMetadata = new com.google.api.services.drive.model.File().         fileMetadata.setTitle(f.getName()).         FileContent mediaContent = new FileContent(null, f).         if (exchange != null) {             exchange.getIn().setHeader("CamelGoogleDrive.content", fileMetadata).             exchange.getIn().setHeader("CamelGoogleDrive.mediaContent", mediaContent).         }         return fileMetadata.     }     if (exchange != null) {         // body wasn't a java.io.File so let's try to convert it         file.getBinding().loadContent(exchange, file).         InputStream is = exchange.getContext().getTypeConverter().convertTo(InputStream.class, exchange, file.getBody()).         com.google.api.services.drive.model.File fileMetadata = new com.google.api.services.drive.model.File().         fileMetadata.setTitle(file.getFileName()).         InputStreamContent mediaContent = new InputStreamContent(null, is).         if (exchange != null) {             exchange.getIn().setHeader("CamelGoogleDrive.content", fileMetadata).             exchange.getIn().setHeader("CamelGoogleDrive.mediaContent", mediaContent).         }         return fileMetadata.     }     return null. }
true;public,static;2;16;// convenience method that takes google file metadata and converts that to an inputstream ;// convenience method that takes google file metadata and converts that to an inputstream @Converter public static InputStream download(com.google.api.services.drive.model.File fileMetadata, Exchange exchange) throws Exception {     if (fileMetadata.getDownloadUrl() != null && fileMetadata.getDownloadUrl().length() > 0) {         try {             // TODO maybe separate this out as custom drive API ex. google-drive://download...             HttpResponse resp = getClient(exchange).getRequestFactory().buildGetRequest(new GenericUrl(fileMetadata.getDownloadUrl())).execute().             return resp.getContent().         } catch (IOException e) {             LOG.debug("Could not download file.", e).             return null.         }     } else {         // The file doesn't have any content stored on Drive.         return null.     } }
false;public,static;2;8;;@Converter public static String downloadContentAsString(com.google.api.services.drive.model.File fileMetadata, Exchange exchange) throws Exception {     InputStream is = download(fileMetadata, exchange).     if (is != null) {         return exchange.getContext().getTypeConverter().convertTo(String.class, exchange, is).     }     return null. }
false;public,static;2;9;;@Converter public static com.google.api.services.drive.model.ChildReference genericStringToChildReference(String payload, Exchange exchange) throws Exception {     if (payload != null) {         com.google.api.services.drive.model.ChildReference childReference = new com.google.api.services.drive.model.ChildReference().         childReference.setId(payload).         return childReference.     }     return null. }
false;private,static;1;4;;private static Drive getClient(Exchange exchange) {     GoogleDriveComponent component = exchange.getContext().getComponent("google-drive", GoogleDriveComponent.class).     return component.getClient(component.getConfiguration()). }
