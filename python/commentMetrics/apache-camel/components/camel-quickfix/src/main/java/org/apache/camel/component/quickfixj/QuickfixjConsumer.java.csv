commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;5;;@Override protected void doStart() throws Exception {     ((QuickfixjEndpoint) getEndpoint()).ensureInitialized().     super.doStart(). }
false;public;1;12;;public void onExchange(Exchange exchange) throws Exception {     if (isStarted()) {         try {             getProcessor().process(exchange).             if (exchange.getPattern().isOutCapable() && exchange.hasOut()) {                 sendOutMessage(exchange).             }         } catch (Exception e) {             exchange.setException(e).         }     } }
false;private;1;17;;private void sendOutMessage(Exchange exchange) throws QFJException {     Message camelMessage = exchange.getOut().     quickfix.Message quickfixjMessage = camelMessage.getBody(quickfix.Message.class).     log.debug("Sending FIX message reply: {}", quickfixjMessage).     SessionID messageSessionID = exchange.getIn().getHeader("SessionID", SessionID.class).     Session session = getSession(messageSessionID).     if (session == null) {         throw new IllegalStateException("Unknown session: " + messageSessionID).     }     if (!session.send(quickfixjMessage)) {         throw new CannotSendException("Could not send FIX message reply: " + quickfixjMessage.toString()).     } }
false;;1;3;;Session getSession(SessionID messageSessionID) {     return Session.lookupSession(messageSessionID). }
