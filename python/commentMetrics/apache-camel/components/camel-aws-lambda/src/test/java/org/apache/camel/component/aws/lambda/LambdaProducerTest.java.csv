commented;modifiers;parameterAmount;loc;comment;code
false;public;1;12;;@Override public void process(Exchange exchange) throws Exception {     exchange.getIn().setHeader(LambdaConstants.RUNTIME, "nodejs6.10").     exchange.getIn().setHeader(LambdaConstants.HANDLER, "GetHelloWithName.handler").     exchange.getIn().setHeader(LambdaConstants.DESCRIPTION, "Hello with node.js on Lambda").     exchange.getIn().setHeader(LambdaConstants.ROLE, "arn:aws:iam::643534317684:role/lambda-execution-role").     ClassLoader classLoader = getClass().getClassLoader().     File file = new File(classLoader.getResource("org/apache/camel/component/aws/lambda/function/node/GetHelloWithName.zip").getFile()).     FileInputStream inputStream = new FileInputStream(file).     exchange.getIn().setBody(IOUtils.toByteArray(inputStream)). }
false;public;0;26;;@Test public void lambdaCreateFunctionTest() throws Exception {     Exchange exchange = template.send("direct:createFunction", ExchangePattern.InOut, new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             exchange.getIn().setHeader(LambdaConstants.RUNTIME, "nodejs6.10").             exchange.getIn().setHeader(LambdaConstants.HANDLER, "GetHelloWithName.handler").             exchange.getIn().setHeader(LambdaConstants.DESCRIPTION, "Hello with node.js on Lambda").             exchange.getIn().setHeader(LambdaConstants.ROLE, "arn:aws:iam::643534317684:role/lambda-execution-role").             ClassLoader classLoader = getClass().getClassLoader().             File file = new File(classLoader.getResource("org/apache/camel/component/aws/lambda/function/node/GetHelloWithName.zip").getFile()).             FileInputStream inputStream = new FileInputStream(file).             exchange.getIn().setBody(IOUtils.toByteArray(inputStream)).         }     }).     assertMockEndpointsSatisfied().     CreateFunctionResult result = (CreateFunctionResult) exchange.getIn().getBody().     assertEquals(result.getFunctionName(), "GetHelloWithName").     assertEquals(result.getDescription(), "Hello with node.js on Lambda").     assertNotNull(result.getFunctionArn()).     assertNotNull(result.getCodeSha256()). }
false;public;1;12;;@Override public void process(Exchange exchange) throws Exception {     exchange.getIn().setHeader(LambdaConstants.RUNTIME, "nodejs6.10").     exchange.getIn().setHeader(LambdaConstants.HANDLER, "GetHelloWithName.handler").     exchange.getIn().setHeader(LambdaConstants.DESCRIPTION, "Hello with node.js on Lambda").     exchange.getIn().setHeader(LambdaConstants.ROLE, "arn:aws:iam::643534317684:role/lambda-execution-role").     ClassLoader classLoader = getClass().getClassLoader().     File file = new File(classLoader.getResource("org/apache/camel/component/aws/lambda/function/node/GetHelloWithName.zip").getFile()).     FileInputStream inputStream = new FileInputStream(file).     exchange.getIn().setBody(IOUtils.toByteArray(inputStream)). }
false;public;0;25;;@Test public void lambdaUpdateFunctionTest() throws Exception {     Exchange exchange = template.send("direct:updateFunction", ExchangePattern.InOut, new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             exchange.getIn().setHeader(LambdaConstants.RUNTIME, "nodejs6.10").             exchange.getIn().setHeader(LambdaConstants.HANDLER, "GetHelloWithName.handler").             exchange.getIn().setHeader(LambdaConstants.DESCRIPTION, "Hello with node.js on Lambda").             exchange.getIn().setHeader(LambdaConstants.ROLE, "arn:aws:iam::643534317684:role/lambda-execution-role").             ClassLoader classLoader = getClass().getClassLoader().             File file = new File(classLoader.getResource("org/apache/camel/component/aws/lambda/function/node/GetHelloWithName.zip").getFile()).             FileInputStream inputStream = new FileInputStream(file).             exchange.getIn().setBody(IOUtils.toByteArray(inputStream)).         }     }).     assertMockEndpointsSatisfied().     UpdateFunctionCodeResult result = (UpdateFunctionCodeResult) exchange.getIn().getBody().     assertEquals(result.getFunctionName(), "GetHelloWithName").     assertNotNull(result.getFunctionArn()).     assertNotNull(result.getCodeSha256()). }
false;public;1;4;;@Override public void process(Exchange exchange) throws Exception { }
false;public;0;13;;@Test public void lambdaDeleteFunctionTest() throws Exception {     Exchange exchange = template.send("direct:deleteFunction", ExchangePattern.InOut, new Processor() {          @Override         public void process(Exchange exchange) throws Exception {         }     }).     assertMockEndpointsSatisfied().     assertNotNull(exchange.getOut().getBody(DeleteFunctionResult.class)). }
false;public;1;4;;@Override public void process(Exchange exchange) throws Exception { }
false;public;0;14;;@Test public void lambdaGetFunctionTest() throws Exception {     Exchange exchange = template.send("direct:getFunction", ExchangePattern.InOut, new Processor() {          @Override         public void process(Exchange exchange) throws Exception {         }     }).     assertMockEndpointsSatisfied().     GetFunctionResult result = (GetFunctionResult) exchange.getOut().getBody().     assertEquals(result.getConfiguration().getFunctionName(), "GetHelloWithName"). }
false;public;1;4;;@Override public void process(Exchange exchange) throws Exception { }
false;public;0;15;;@Test public void lambdaListFunctionsTest() throws Exception {     Exchange exchange = template.send("direct:listFunctions", ExchangePattern.InOut, new Processor() {          @Override         public void process(Exchange exchange) throws Exception {         }     }).     assertMockEndpointsSatisfied().     ListFunctionsResult result = (ListFunctionsResult) exchange.getOut().getBody().     assertEquals(result.getFunctions().size(), 1).     assertEquals(result.getFunctions().get(0).getFunctionName(), "GetHelloWithName"). }
false;public;1;4;;@Override public void process(Exchange exchange) throws Exception {     exchange.getIn().setBody("{\"name\":\"Camel\"}"). }
false;public;0;13;;@Test public void lambdaInvokeFunctionTest() throws Exception {     Exchange exchange = template.send("direct:invokeFunction", ExchangePattern.InOut, new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             exchange.getIn().setBody("{\"name\":\"Camel\"}").         }     }).     assertMockEndpointsSatisfied().     assertNotNull(exchange.getOut().getBody(String.class)).     assertEquals(exchange.getOut().getBody(String.class), "{\"Hello\":\"Camel\"}"). }
false;public;1;5;;@Override public void process(Exchange exchange) throws Exception {     exchange.getIn().setHeader(LambdaConstants.EVENT_SOURCE_ARN, "arn:aws:sqs:eu-central-1:643534317684:testqueue").     exchange.getIn().setHeader(LambdaConstants.EVENT_SOURCE_BATCH_SIZE, 100). }
false;public;0;14;;@Test public void lambdaCreateEventSourceMappingTest() throws Exception {     Exchange exchange = template.send("direct:createEventSourceMapping", ExchangePattern.InOut, new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             exchange.getIn().setHeader(LambdaConstants.EVENT_SOURCE_ARN, "arn:aws:sqs:eu-central-1:643534317684:testqueue").             exchange.getIn().setHeader(LambdaConstants.EVENT_SOURCE_BATCH_SIZE, 100).         }     }).     assertMockEndpointsSatisfied().     CreateEventSourceMappingResult result = exchange.getOut().getBody(CreateEventSourceMappingResult.class).     assertEquals(result.getFunctionArn(), "arn:aws:lambda:eu-central-1:643534317684:function:GetHelloWithName"). }
false;public;1;4;;@Override public void process(Exchange exchange) throws Exception {     exchange.getIn().setHeader(LambdaConstants.EVENT_SOURCE_UUID, "a1239494949382882383"). }
false;public;0;13;;@Test public void lambdaDeleteEventSourceMappingTest() throws Exception {     Exchange exchange = template.send("direct:deleteEventSourceMapping", ExchangePattern.InOut, new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             exchange.getIn().setHeader(LambdaConstants.EVENT_SOURCE_UUID, "a1239494949382882383").         }     }).     assertMockEndpointsSatisfied().     DeleteEventSourceMappingResult result = exchange.getOut().getBody(DeleteEventSourceMappingResult.class).     assertTrue(result.getState().equalsIgnoreCase("Deleting")). }
false;public;1;3;;@Override public void process(Exchange exchange) throws Exception { }
false;public;0;12;;@Test public void lambdaListEventSourceMappingTest() throws Exception {     Exchange exchange = template.send("direct:listEventSourceMapping", ExchangePattern.InOut, new Processor() {          @Override         public void process(Exchange exchange) throws Exception {         }     }).     assertMockEndpointsSatisfied().     ListEventSourceMappingsResult result = exchange.getOut().getBody(ListEventSourceMappingsResult.class).     assertEquals(result.getEventSourceMappings().get(0).getFunctionArn(), "arn:aws:lambda:eu-central-1:643534317684:function:GetHelloWithName"). }
false;public;1;4;;@Override public void process(Exchange exchange) throws Exception {     exchange.getIn().setHeader(LambdaConstants.RESOURCE_ARN, "arn:aws:lambda:eu-central-1:643534317684:function:GetHelloWithName"). }
false;public;0;14;;@Test public void lambdaListTagsTest() throws Exception {     Exchange exchange = template.send("direct:listTags", ExchangePattern.InOut, new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             exchange.getIn().setHeader(LambdaConstants.RESOURCE_ARN, "arn:aws:lambda:eu-central-1:643534317684:function:GetHelloWithName").         }     }).     assertMockEndpointsSatisfied().     ListTagsResult result = (ListTagsResult) exchange.getOut().getBody().     assertEquals("lambda-tag", result.getTags().get("test")). }
false;public;1;7;;@Override public void process(Exchange exchange) throws Exception {     Map<String, String> tags = new HashMap<String, String>().     tags.put("test", "added-tag").     exchange.getIn().setHeader(LambdaConstants.RESOURCE_ARN, "arn:aws:lambda:eu-central-1:643534317684:function:GetHelloWithName").     exchange.getIn().setHeader(LambdaConstants.RESOURCE_TAGS, tags). }
false;public;0;17;;@Test public void tagResourceTest() throws Exception {     Exchange exchange = template.send("direct:tagResource", ExchangePattern.InOut, new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             Map<String, String> tags = new HashMap<String, String>().             tags.put("test", "added-tag").             exchange.getIn().setHeader(LambdaConstants.RESOURCE_ARN, "arn:aws:lambda:eu-central-1:643534317684:function:GetHelloWithName").             exchange.getIn().setHeader(LambdaConstants.RESOURCE_TAGS, tags).         }     }).     assertMockEndpointsSatisfied().     TagResourceResult result = (TagResourceResult) exchange.getOut().getBody().     assertNotNull(result). }
false;public;1;7;;@Override public void process(Exchange exchange) throws Exception {     List<String> tagKeys = new ArrayList<String>().     tagKeys.add("test").     exchange.getIn().setHeader(LambdaConstants.RESOURCE_ARN, "arn:aws:lambda:eu-central-1:643534317684:function:GetHelloWithName").     exchange.getIn().setHeader(LambdaConstants.RESOURCE_TAG_KEYS, tagKeys). }
false;public;0;17;;@Test public void untagResourceTest() throws Exception {     Exchange exchange = template.send("direct:untagResource", ExchangePattern.InOut, new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             List<String> tagKeys = new ArrayList<String>().             tagKeys.add("test").             exchange.getIn().setHeader(LambdaConstants.RESOURCE_ARN, "arn:aws:lambda:eu-central-1:643534317684:function:GetHelloWithName").             exchange.getIn().setHeader(LambdaConstants.RESOURCE_TAG_KEYS, tagKeys).         }     }).     assertMockEndpointsSatisfied().     UntagResourceResult result = (UntagResourceResult) exchange.getOut().getBody().     assertNotNull(result). }
false;public;1;4;;@Override public void process(Exchange exchange) throws Exception {     exchange.getIn().setHeader(LambdaConstants.VERSION_DESCRIPTION, "This is my description"). }
false;public;0;16;;@Test public void publishVersionTest() throws Exception {     Exchange exchange = template.send("direct:publishVersion", ExchangePattern.InOut, new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             exchange.getIn().setHeader(LambdaConstants.VERSION_DESCRIPTION, "This is my description").         }     }).     assertMockEndpointsSatisfied().     PublishVersionResult result = (PublishVersionResult) exchange.getOut().getBody().     assertNotNull(result).     assertEquals("GetHelloWithName", result.getFunctionName()).     assertEquals("This is my description", result.getDescription()). }
false;public;1;4;;@Override public void process(Exchange exchange) throws Exception {     exchange.getIn().setHeader(LambdaConstants.VERSION_DESCRIPTION, "This is my description"). }
false;public;0;16;;@Test public void listVersionsTest() throws Exception {     Exchange exchange = template.send("direct:listVersions", ExchangePattern.InOut, new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             exchange.getIn().setHeader(LambdaConstants.VERSION_DESCRIPTION, "This is my description").         }     }).     assertMockEndpointsSatisfied().     ListVersionsByFunctionResult result = (ListVersionsByFunctionResult) exchange.getOut().getBody().     assertNotNull(result).     assertEquals("GetHelloWithName", result.getVersions().get(0).getFunctionName()).     assertEquals("1", result.getVersions().get(0).getVersion()). }
false;protected;0;10;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry registry = super.createRegistry().     AmazonLambdaClientMock clientMock = new AmazonLambdaClientMock().     registry.bind("awsLambdaClient", clientMock).     return registry. }
false;public;0;30;;@Override public void configure() throws Exception {     from("direct:createFunction").to("aws-lambda://GetHelloWithName?awsLambdaClient=#awsLambdaClient&operation=createFunction").to("mock:result").     from("direct:getFunction").to("aws-lambda://GetHelloWithName?awsLambdaClient=#awsLambdaClient&operation=getFunction").to("mock:result").     from("direct:listFunctions").to("aws-lambda://myFunction?awsLambdaClient=#awsLambdaClient&operation=listFunctions").to("mock:result").     from("direct:invokeFunction").to("aws-lambda://GetHelloWithName?awsLambdaClient=#awsLambdaClient&operation=invokeFunction").to("mock:result").     from("direct:deleteFunction").to("aws-lambda://GetHelloWithName?awsLambdaClient=#awsLambdaClient&operation=deleteFunction").to("mock:result").     from("direct:updateFunction").to("aws-lambda://GetHelloWithName?awsLambdaClient=#awsLambdaClient&operation=updateFunction").to("mock:result").     from("direct:listTags").to("aws-lambda://GetHelloWithName?awsLambdaClient=#awsLambdaClient&operation=listTags").to("mock:result").     from("direct:tagResource").to("aws-lambda://GetHelloWithName?awsLambdaClient=#awsLambdaClient&operation=tagResource").to("mock:result").     from("direct:untagResource").to("aws-lambda://GetHelloWithName?awsLambdaClient=#awsLambdaClient&operation=untagResource").to("mock:result").     from("direct:publishVersion").to("aws-lambda://GetHelloWithName?awsLambdaClient=#awsLambdaClient&operation=publishVersion").to("mock:result").     from("direct:listVersions").to("aws-lambda://GetHelloWithName?awsLambdaClient=#awsLambdaClient&operation=listVersions").to("mock:result").     from("direct:createEventSourceMapping").to("aws-lambda://GetHelloWithName?awsLambdaClient=#awsLambdaClient&operation=createEventSourceMapping").to("mock:result").     from("direct:deleteEventSourceMapping").to("aws-lambda://GetHelloWithName?awsLambdaClient=#awsLambdaClient&operation=deleteEventSourceMapping").to("mock:result").     from("direct:listEventSourceMapping").to("aws-lambda://GetHelloWithName?awsLambdaClient=#awsLambdaClient&operation=listEventSourceMapping").to("mock:result"). }
false;protected;0;35;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:createFunction").to("aws-lambda://GetHelloWithName?awsLambdaClient=#awsLambdaClient&operation=createFunction").to("mock:result").             from("direct:getFunction").to("aws-lambda://GetHelloWithName?awsLambdaClient=#awsLambdaClient&operation=getFunction").to("mock:result").             from("direct:listFunctions").to("aws-lambda://myFunction?awsLambdaClient=#awsLambdaClient&operation=listFunctions").to("mock:result").             from("direct:invokeFunction").to("aws-lambda://GetHelloWithName?awsLambdaClient=#awsLambdaClient&operation=invokeFunction").to("mock:result").             from("direct:deleteFunction").to("aws-lambda://GetHelloWithName?awsLambdaClient=#awsLambdaClient&operation=deleteFunction").to("mock:result").             from("direct:updateFunction").to("aws-lambda://GetHelloWithName?awsLambdaClient=#awsLambdaClient&operation=updateFunction").to("mock:result").             from("direct:listTags").to("aws-lambda://GetHelloWithName?awsLambdaClient=#awsLambdaClient&operation=listTags").to("mock:result").             from("direct:tagResource").to("aws-lambda://GetHelloWithName?awsLambdaClient=#awsLambdaClient&operation=tagResource").to("mock:result").             from("direct:untagResource").to("aws-lambda://GetHelloWithName?awsLambdaClient=#awsLambdaClient&operation=untagResource").to("mock:result").             from("direct:publishVersion").to("aws-lambda://GetHelloWithName?awsLambdaClient=#awsLambdaClient&operation=publishVersion").to("mock:result").             from("direct:listVersions").to("aws-lambda://GetHelloWithName?awsLambdaClient=#awsLambdaClient&operation=listVersions").to("mock:result").             from("direct:createEventSourceMapping").to("aws-lambda://GetHelloWithName?awsLambdaClient=#awsLambdaClient&operation=createEventSourceMapping").to("mock:result").             from("direct:deleteEventSourceMapping").to("aws-lambda://GetHelloWithName?awsLambdaClient=#awsLambdaClient&operation=deleteEventSourceMapping").to("mock:result").             from("direct:listEventSourceMapping").to("aws-lambda://GetHelloWithName?awsLambdaClient=#awsLambdaClient&operation=listEventSourceMapping").to("mock:result").         }     }. }
