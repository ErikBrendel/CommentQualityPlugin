commented;modifiers;parameterAmount;loc;comment;code
false;public;0;19;;@Override @Before public void setUp() throws Exception {     deleteDirectory("target/stream").     createDirectory("target/stream").     file = new File("target/stream/scanstreamdelayfile.txt").     file.createNewFile().     FileOutputStream fos = new FileOutputStream(file).     fos.write("Hello\n".getBytes()).     fos.write("World\n".getBytes()).     fos.write("Hello\n".getBytes()).     fos.write("World\n".getBytes()).     fos.write("Hello\n".getBytes()).     fos.write("World\n".getBytes()).     fos.close().     super.setUp(). }
false;public;0;6;;@Test public void testScanFile() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(6).     assertMockEndpointsSatisfied(1, TimeUnit.SECONDS). }
false;public;0;4;;public void configure() {     from("stream:file?fileName=target/stream/scanstreamdelayfile.txt&scanStream=true&scanStreamDelay=1000").to("mock:result"). }
false;protected;0;8;;protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          public void configure() {             from("stream:file?fileName=target/stream/scanstreamdelayfile.txt&scanStream=true&scanStreamDelay=1000").to("mock:result").         }     }. }
