# id;timestamp;commentText;codeText;commentWords;codeWords
ElasticsearchBaseTest -> Map<String, String> createIndexedData(String... additionalPrefixes);1517826209;As we don't delete the {@code target/data} folder for <b>each</b> test_below (otherwise they would run much slower), we need to make sure_there's no side effect of the same used data through creating unique_indexes.;Map<String, String> createIndexedData(String... additionalPrefixes) {_        String prefix = createPrefix()___        _        if (additionalPrefixes.length > 0) {_            StringBuilder sb = new StringBuilder(prefix)__            for (String additionalPrefix : additionalPrefixes) {_                sb.append(additionalPrefix).append("-")__            }_            prefix = sb.toString()__        }__        String key = prefix + "key"__        String value = prefix + "value"__        log.info("Creating indexed data using the key/value pair {} => {}", key, value)___        Map<String, String> map = new HashMap<String, String>()__        map.put(key, value)__        return map__    };as,we,don,t,delete,the,code,target,data,folder,for,b,each,b,test,below,otherwise,they,would,run,much,slower,we,need,to,make,sure,there,s,no,side,effect,of,the,same,used,data,through,creating,unique,indexes;map,string,string,create,indexed,data,string,additional,prefixes,string,prefix,create,prefix,if,additional,prefixes,length,0,string,builder,sb,new,string,builder,prefix,for,string,additional,prefix,additional,prefixes,sb,append,additional,prefix,append,prefix,sb,to,string,string,key,prefix,key,string,value,prefix,value,log,info,creating,indexed,data,using,the,key,value,pair,key,value,map,string,string,map,new,hash,map,string,string,map,put,key,value,return,map
ElasticsearchBaseTest -> Map<String, String> createIndexedData(String... additionalPrefixes);1517826689;As we don't delete the {@code target/data} folder for <b>each</b> test_below (otherwise they would run much slower), we need to make sure_there's no side effect of the same used data through creating unique_indexes.;Map<String, String> createIndexedData(String... additionalPrefixes) {_        String prefix = createPrefix()___        _        if (additionalPrefixes.length > 0) {_            StringBuilder sb = new StringBuilder(prefix)__            for (String additionalPrefix : additionalPrefixes) {_                sb.append(additionalPrefix).append("-")__            }_            prefix = sb.toString()__        }__        String key = prefix + "key"__        String value = prefix + "value"__        log.info("Creating indexed data using the key/value pair {} => {}", key, value)___        Map<String, String> map = new HashMap<String, String>()__        map.put(key, value)__        return map__    };as,we,don,t,delete,the,code,target,data,folder,for,b,each,b,test,below,otherwise,they,would,run,much,slower,we,need,to,make,sure,there,s,no,side,effect,of,the,same,used,data,through,creating,unique,indexes;map,string,string,create,indexed,data,string,additional,prefixes,string,prefix,create,prefix,if,additional,prefixes,length,0,string,builder,sb,new,string,builder,prefix,for,string,additional,prefix,additional,prefixes,sb,append,additional,prefix,append,prefix,sb,to,string,string,key,prefix,key,string,value,prefix,value,log,info,creating,indexed,data,using,the,key,value,pair,key,value,map,string,string,map,new,hash,map,string,string,map,put,key,value,return,map
ElasticsearchBaseTest -> Map<String, String> createIndexedData(String... additionalPrefixes);1523994310;As we don't delete the {@code target/data} folder for <b>each</b> test_below (otherwise they would run much slower), we need to make sure_there's no side effect of the same used data through creating unique_indexes.;Map<String, String> createIndexedData(String... additionalPrefixes) {_        String prefix = createPrefix()___        _        if (additionalPrefixes.length > 0) {_            StringBuilder sb = new StringBuilder(prefix)__            for (String additionalPrefix : additionalPrefixes) {_                sb.append(additionalPrefix).append("-")__            }_            prefix = sb.toString()__        }__        String key = prefix + "key"__        String value = prefix + "value"__        log.info("Creating indexed data using the key/value pair {} => {}", key, value)___        Map<String, String> map = new HashMap<>()__        map.put(key, value)__        return map__    };as,we,don,t,delete,the,code,target,data,folder,for,b,each,b,test,below,otherwise,they,would,run,much,slower,we,need,to,make,sure,there,s,no,side,effect,of,the,same,used,data,through,creating,unique,indexes;map,string,string,create,indexed,data,string,additional,prefixes,string,prefix,create,prefix,if,additional,prefixes,length,0,string,builder,sb,new,string,builder,prefix,for,string,additional,prefix,additional,prefixes,sb,append,additional,prefix,append,prefix,sb,to,string,string,key,prefix,key,string,value,prefix,value,log,info,creating,indexed,data,using,the,key,value,pair,key,value,map,string,string,map,new,hash,map,map,put,key,value,return,map
ElasticsearchBaseTest -> Map<String, String> createIndexedData(String... additionalPrefixes);1535627650;As we don't delete the {@code target/data} folder for <b>each</b> test_below (otherwise they would run much slower), we need to make sure_there's no side effect of the same used data through creating unique_indexes.;Map<String, String> createIndexedData(String... additionalPrefixes) {_        String prefix = createPrefix()___        _        if (additionalPrefixes.length > 0) {_            StringBuilder sb = new StringBuilder(prefix)__            for (String additionalPrefix : additionalPrefixes) {_                sb.append(additionalPrefix).append("-")__            }_            prefix = sb.toString()__        }__        String key = prefix + "key"__        String value = prefix + "value"__        log.info("Creating indexed data using the key/value pair {} => {}", key, value)___        Map<String, String> map = new HashMap<>()__        map.put(key, value)__        return map__    };as,we,don,t,delete,the,code,target,data,folder,for,b,each,b,test,below,otherwise,they,would,run,much,slower,we,need,to,make,sure,there,s,no,side,effect,of,the,same,used,data,through,creating,unique,indexes;map,string,string,create,indexed,data,string,additional,prefixes,string,prefix,create,prefix,if,additional,prefixes,length,0,string,builder,sb,new,string,builder,prefix,for,string,additional,prefix,additional,prefixes,sb,append,additional,prefix,append,prefix,sb,to,string,string,key,prefix,key,string,value,prefix,value,log,info,creating,indexed,data,using,the,key,value,pair,key,value,map,string,string,map,new,hash,map,map,put,key,value,return,map
ElasticsearchBaseTest -> Map<String, String> createIndexedData(String... additionalPrefixes);1536127776;As we don't delete the {@code target/data} folder for <b>each</b> test_below (otherwise they would run much slower), we need to make sure_there's no side effect of the same used data through creating unique_indexes.;Map<String, String> createIndexedData(String... additionalPrefixes) {_        String prefix = createPrefix()___        _        if (additionalPrefixes.length > 0) {_            StringBuilder sb = new StringBuilder(prefix)__            for (String additionalPrefix : additionalPrefixes) {_                sb.append(additionalPrefix).append("-")__            }_            prefix = sb.toString()__        }__        String key = prefix + "key"__        String value = prefix + "value"__        log.info("Creating indexed data using the key/value pair {} => {}", key, value)___        Map<String, String> map = new HashMap<>()__        map.put(key, value)__        return map__    };as,we,don,t,delete,the,code,target,data,folder,for,b,each,b,test,below,otherwise,they,would,run,much,slower,we,need,to,make,sure,there,s,no,side,effect,of,the,same,used,data,through,creating,unique,indexes;map,string,string,create,indexed,data,string,additional,prefixes,string,prefix,create,prefix,if,additional,prefixes,length,0,string,builder,sb,new,string,builder,prefix,for,string,additional,prefix,additional,prefixes,sb,append,additional,prefix,append,prefix,sb,to,string,string,key,prefix,key,string,value,prefix,value,log,info,creating,indexed,data,using,the,key,value,pair,key,value,map,string,string,map,new,hash,map,map,put,key,value,return,map
