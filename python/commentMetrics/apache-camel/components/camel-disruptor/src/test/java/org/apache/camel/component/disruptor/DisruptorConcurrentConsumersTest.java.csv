commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testSendToDisruptor() throws Exception {     final MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived("Hello World").     template.sendBody("disruptor:foo?concurrentConsumers=5", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;4;;@Override public void configure() throws Exception {     from("disruptor:foo?concurrentConsumers=5").to("mock:result"). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("disruptor:foo?concurrentConsumers=5").to("mock:result").         }     }. }
