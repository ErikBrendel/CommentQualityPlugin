commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testInOut() throws Exception {     getMockEndpoint("mock:result").expectedBodiesReceived("Bye World").     final String out = template.requestBody("direct:start", "Hello World", String.class).     assertEquals("Bye World", out).     assertMockEndpointsSatisfied(). }
false;public;0;11;;@Override public void configure() throws Exception {     getContext().setTracing(true).     from("direct:start").to("disruptor:a").     from("disruptor:a").to("log:bar", "disruptor:b").     from("disruptor:b").delay(10).to("direct:c").     from("direct:c").transform(constant("Bye World")).to("mock:result"). }
false;protected;0;16;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             getContext().setTracing(true).             from("direct:start").to("disruptor:a").             from("disruptor:a").to("log:bar", "disruptor:b").             from("disruptor:b").delay(10).to("direct:c").             from("direct:c").transform(constant("Bye World")).to("mock:result").         }     }. }
