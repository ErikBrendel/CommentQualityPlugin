commented;modifiers;parameterAmount;loc;comment;code
true;protected;0;18;/**  * Poll from an atmos remote path and put the result in the message exchange  * @return number of messages polled  * @throws Exception  */ ;/**  * Poll from an atmos remote path and put the result in the message exchange  * @return number of messages polled  * @throws Exception  */ @Override protected int poll() throws Exception {     Exchange exchange = endpoint.createExchange().     AtmosResult result = AtmosAPIFacade.getInstance(configuration.getClient()).get(configuration.getRemotePath()).     result.populateExchange(exchange).     try {         // send message to next processor in the route         getProcessor().process(exchange).         // number of messages polled         return 1.     } finally {         // log exception if an exception occurred and was not handled         if (exchange.getException() != null) {             getExceptionHandler().handleException("Error processing exchange", exchange, exchange.getException()).         }     } }
