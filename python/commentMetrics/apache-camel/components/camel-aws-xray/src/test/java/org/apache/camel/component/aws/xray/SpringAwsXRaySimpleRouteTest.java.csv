commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected AbstractApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/aws/xray/AwsXRaySimpleRouteTest.xml"). }
false;public;0;33;;@Test public void testRoute() throws Exception {     NotifyBuilder notify = new NotifyBuilder(context).whenDone(5).create().     for (int i = 0. i < 5. i++) {         template.sendBody("seda:dude", "Hello World").     }     assertThat("Not all exchanges were fully processed", notify.matches(30, TimeUnit.SECONDS), is(equalTo(true))).     List<TestTrace> testData = Arrays.asList(TestDataBuilder.createTrace().withSegment(TestDataBuilder.createSegment("dude")).withSegment(TestDataBuilder.createSegment("car")), TestDataBuilder.createTrace().withSegment(TestDataBuilder.createSegment("dude")).withSegment(TestDataBuilder.createSegment("car")), TestDataBuilder.createTrace().withSegment(TestDataBuilder.createSegment("dude")).withSegment(TestDataBuilder.createSegment("car")), TestDataBuilder.createTrace().withSegment(TestDataBuilder.createSegment("dude")).withSegment(TestDataBuilder.createSegment("car")), TestDataBuilder.createTrace().withSegment(TestDataBuilder.createSegment("dude")).withSegment(TestDataBuilder.createSegment("car"))).     Thread.sleep(2000).     TestUtils.checkData(socketListener.getReceivedData(), testData). }
