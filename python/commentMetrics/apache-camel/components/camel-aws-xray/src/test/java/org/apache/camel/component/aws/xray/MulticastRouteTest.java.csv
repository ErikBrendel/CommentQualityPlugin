commented;modifiers;parameterAmount;loc;comment;code
false;public;0;15;;@Test public void testRoute() throws Exception {     NotifyBuilder notify = new NotifyBuilder(context).from("seda:b").whenDone(1).and().from("seda:c").whenDone(1).create().     template.requestBody("direct:start", "Hello").     assertThat("Not all exchanges were fully processed", notify.matches(5, TimeUnit.SECONDS), is(equalTo(true))).     verify(). }
false;public;0;21;;@Override public void configure() throws Exception {     from("direct:start").routeId("start").to("seda:a").     from("seda:a").routeId("a").log("routing at ${routeId}").multicast().to("seda:b").to("seda:c").end().log("End of routing").     from("seda:b").routeId("b").log("routing at ${routeId}").delay(simple("${random(1000,2000)}")).     from("seda:c").routeId("c").to("log:routing at ${routeId}").delay(simple("${random(0,100)}")). }
false;protected;0;26;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").routeId("start").to("seda:a").             from("seda:a").routeId("a").log("routing at ${routeId}").multicast().to("seda:b").to("seda:c").end().log("End of routing").             from("seda:b").routeId("b").log("routing at ${routeId}").delay(simple("${random(1000,2000)}")).             from("seda:c").routeId("c").to("log:routing at ${routeId}").delay(simple("${random(0,100)}")).         }     }. }
