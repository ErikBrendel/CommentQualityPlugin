commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void testRoute() throws Exception {     NotifyBuilder notify = new NotifyBuilder(context).whenDone(7).create().     template.requestBody("direct:start", "Hello").     assertThat("Not all exchanges were fully processed", notify.matches(5, TimeUnit.SECONDS), is(equalTo(true))).     verify(). }
false;public;0;16;;@Override public void configure() throws Exception {     from("direct:start").routeId("start").recipientList(constant("seda:a,seda:b,seda:c")).     from("seda:a").routeId("a").log("routing at ${routeId}").     from("seda:b").routeId("b").log("routing at ${routeId}").delay(simple("${random(1000,2000)}")).     from("seda:c").routeId("c").log("routing at ${routeId}").delay(simple("${random(0,100)}")). }
false;protected;0;21;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").routeId("start").recipientList(constant("seda:a,seda:b,seda:c")).             from("seda:a").routeId("a").log("routing at ${routeId}").             from("seda:b").routeId("b").log("routing at ${routeId}").delay(simple("${random(1000,2000)}")).             from("seda:c").routeId("c").log("routing at ${routeId}").delay(simple("${random(0,100)}")).         }     }. }
