commented;modifiers;parameterAmount;loc;comment;code
false;;2;3;;void addElement(String key, Object value) {     data.put(key, value). }
false;public;1;3;;public Object get(String key) {     return data.get(key). }
false;public;0;3;;public Set<String> getKeys() {     return data.keySet(). }
false;public;1;3;;public boolean has(String key) {     return data.containsKey(key). }
false;public;1;6;;public String getString(String key) {     if (data.containsKey(key) && null != data.get(key)) {         return data.get(key).toString().     }     return null. }
false;public;1;10;;public Double getDouble(String key) {     if (data.containsKey(key) && null != data.get(key)) {         Object value = data.get(key).         if (value instanceof String) {             return Double.valueOf((String) value).         }         return (Double) value.     }     return 0D. }
false;public;1;10;;public Long getLong(String key) {     if (data.containsKey(key) && null != data.get(key)) {         Object value = data.get(key).         if (value instanceof String) {             return Long.valueOf((String) value).         }         return (Long) value.     }     return 0L. }
false;public;1;10;;public Integer getInteger(String key) {     if (data.containsKey(key) && null != data.get(key)) {         Object value = data.get(key).         if (value instanceof String) {             return Integer.valueOf((String) value).         }         return (Integer) value.     }     return 0. }
false;public;1;10;;public Boolean getBoolean(String key) {     if (data.containsKey(key) && null != data.get(key)) {         Object value = data.get(key).         if (value instanceof String) {             return Boolean.valueOf((String) value).         }         return (Boolean) value.     }     return null. }
