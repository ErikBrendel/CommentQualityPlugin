commented;modifiers;parameterAmount;loc;comment;code
false;public;2;4;;@Override public String getOperationName(Exchange exchange, Endpoint endpoint) {     return getHttpMethod(exchange, endpoint). }
false;public;3;10;;@Override public void pre(Entity segment, Exchange exchange, Endpoint endpoint) {     super.pre(segment, exchange, endpoint).     String httpUrl = getHttpUrl(exchange, endpoint).     if (httpUrl != null) {         segment.putMetadata("http.url", httpUrl).     }     segment.putMetadata("http.method", getHttpMethod(exchange, endpoint)). }
false;public;3;11;;@Override public void post(Entity segment, Exchange exchange, Endpoint endpoint) {     super.post(segment, exchange, endpoint).     if (exchange.hasOut()) {         Object responseCode = exchange.getOut().getHeader(Exchange.HTTP_RESPONSE_CODE).         if (responseCode instanceof Integer) {             segment.putMetadata("htt.response.code", responseCode).         }     } }
false;protected;2;25;;protected String getHttpMethod(Exchange exchange, Endpoint endpoint) {     // 1. Use method provided in header.     Object method = exchange.getIn().getHeader(Exchange.HTTP_METHOD).     if (method instanceof String) {         return (String) method.     }     // 2. GET if query string is provided in header.     if (exchange.getIn().getHeader(Exchange.HTTP_QUERY) != null) {         return GET_METHOD.     }     // 3. GET if endpoint is configured with a query string.     if (endpoint.getEndpointUri().indexOf('?') != -1) {         return GET_METHOD.     }     // 4. POST if there is data to send (body is not null).     if (exchange.getIn().getBody() != null) {         return POST_METHOD.     }     // 5. GET otherwise.     return GET_METHOD. }
false;protected;2;18;;protected String getHttpUrl(Exchange exchange, Endpoint endpoint) {     Object url = exchange.getIn().getHeader(Exchange.HTTP_URL).     if (url instanceof String) {         return (String) url.     } else {         Object uri = exchange.getIn().getHeader(Exchange.HTTP_URI).         if (uri instanceof String) {             return (String) uri.         } else {             // Try to obtain from endpoint             int index = endpoint.getEndpointUri().lastIndexOf("http:").             if (index != -1) {                 return endpoint.getEndpointUri().substring(index).             }         }     }     return null. }
