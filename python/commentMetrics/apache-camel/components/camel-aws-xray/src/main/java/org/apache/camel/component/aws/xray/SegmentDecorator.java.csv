commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public String getComponent() {     return null. }
true;;0;1;/**  * This method indicates whether the component associated with the SegmentDecorator should result in a new segment  * being created.  *  * @return Whether a new segment should be created  */ ;/**  * This method indicates whether the component associated with the SegmentDecorator should result in a new segment  * being created.  *  * @return Whether a new segment should be created  */ boolean newSegment().
true;;0;1;/**  * The camel component associated with the decorator.  *  * @return The camel component name  */ ;/**  * The camel component associated with the decorator.  *  * @return The camel component name  */ String getComponent().
true;;2;1;/**  * This method returns the operation name to use with the segment representing this exchange and endpoint.  *  * @param exchange The exchange  * @param endpoint The endpoint  * @return The operation name  */ ;/**  * This method returns the operation name to use with the segment representing this exchange and endpoint.  *  * @param exchange The exchange  * @param endpoint The endpoint  * @return The operation name  */ String getOperationName(Exchange exchange, Endpoint endpoint).
true;;3;1;/**  * This method adds appropriate details (tags/logs) to the supplied segment based on the pre processing of the  * exchange.  *  * @param segment The segment  * @param exchange The exchange  * @param endpoint The endpoint  */ ;/**  * This method adds appropriate details (tags/logs) to the supplied segment based on the pre processing of the  * exchange.  *  * @param segment The segment  * @param exchange The exchange  * @param endpoint The endpoint  */ void pre(Entity segment, Exchange exchange, Endpoint endpoint).
true;;3;1;/**  * This method adds appropriate details (tags/logs) to the supplied segment based on the post processing of the  * exchange.  *  * @param segment The segment  * @param exchange The exchange  * @param endpoint The endpoint  */ ;/**  * This method adds appropriate details (tags/logs) to the supplied segment based on the post processing of the  * exchange.  *  * @param segment The segment  * @param exchange The exchange  * @param endpoint The endpoint  */ void post(Entity segment, Exchange exchange, Endpoint endpoint).
