commented;modifiers;parameterAmount;loc;comment;code
false;public;4;23;;@Override public Processor wrapProcessorInInterceptors(CamelContext camelContext, NamedNode processorDefinition, Processor target, Processor nextTarget) throws Exception {     String defName = processorDefinition.getShortName().     return new DelegateAsyncProcessor((Exchange exchange) -> {         LOG.trace("Creating new subsegment for {} - EIP {}", defName, target).         Subsegment subsegment = AWSXRay.beginSubsegment(sanitizeName(defName)).         try {             LOG.trace("Processing EIP {}", target).             target.process(exchange).         } catch (Exception ex) {             LOG.trace("Handling exception thrown by invoked EIP {}", target).             subsegment.addException(ex).             throw ex.         } finally {             LOG.trace("Closing down subsegment for {}", defName).             subsegment.close().         }     }). }
