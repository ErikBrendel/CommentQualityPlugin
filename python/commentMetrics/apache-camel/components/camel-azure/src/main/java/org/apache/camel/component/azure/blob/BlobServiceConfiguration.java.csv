commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public BlobServiceOperations getOperation() {     return operation. }
true;public;1;3;/**  * Blob service operation hint to the producer  */ ;/**  * Blob service operation hint to the producer  */ public void setOperation(BlobServiceOperations operation) {     this.operation = operation. }
false;public;0;3;;public String getContainerName() {     return containerName. }
true;public;1;3;/**  * Set the blob service container name  */ ;/**  * Set the blob service container name  */ public void setContainerName(String containerName) {     this.containerName = containerName. }
false;public;0;3;;public String getBlobName() {     return blobName. }
true;public;1;3;/**  * Blob name, required for most operations  */ ;/**  * Blob name, required for most operations  */ public void setBlobName(String blobName) {     this.blobName = blobName. }
false;public;0;3;;public BlobType getBlobType() {     return blobType. }
true;public;1;3;/**  * Set a blob type, 'blockblob' is default  */ ;/**  * Set a blob type, 'blockblob' is default  */ public void setBlobType(BlobType blobType) {     this.blobType = blobType. }
false;public;0;3;;public int getStreamWriteSize() {     return streamWriteSize. }
true;public;1;3;/**  * Set the size of the buffer for writing block and page blocks  */ ;/**  * Set the size of the buffer for writing block and page blocks  */ public void setStreamWriteSize(int streamWriteSize) {     this.streamWriteSize = streamWriteSize. }
false;public;0;3;;public int getStreamReadSize() {     return streamReadSize. }
true;public;1;3;/**  * Set the minimum read size in bytes when reading the blob content  */ ;/**  * Set the minimum read size in bytes when reading the blob content  */ public void setStreamReadSize(int streamReadSize) {     this.streamReadSize = streamReadSize. }
false;public;0;3;;public Map<String, String> getBlobMetadata() {     return blobMetadata. }
true;public;1;3;/**  * Set the blob meta-data  */ ;/**  * Set the blob meta-data  */ public void setBlobMetadata(Map<String, String> blobMetadata) {     this.blobMetadata = blobMetadata. }
false;public;0;3;;public CloudBlob getAzureBlobClient() {     return azureBlobClient. }
true;public;1;3;/**  * The blob service client  */ ;/**  * The blob service client  */ public void setAzureBlobClient(CloudBlob azureBlobClient) {     this.azureBlobClient = azureBlobClient. }
false;public;0;3;;public boolean isCloseStreamAfterWrite() {     return closeStreamAfterWrite. }
true;public;1;3;/**  * Close the stream after write or keep it open, default is true  */ ;/**  * Close the stream after write or keep it open, default is true  */ public void setCloseStreamAfterWrite(boolean closeStreamAfterWrite) {     this.closeStreamAfterWrite = closeStreamAfterWrite. }
false;public;0;3;;public boolean isCloseStreamAfterRead() {     return closeStreamAfterRead. }
true;public;1;3;/**  * Close the stream after read or keep it open, default is true  */ ;/**  * Close the stream after read or keep it open, default is true  */ public void setCloseStreamAfterRead(boolean closeStreamAfterRead) {     this.closeStreamAfterRead = closeStreamAfterRead. }
false;public;0;3;;public String getFileDir() {     return fileDir. }
true;public;1;3;/**  * Set the file directory where the downloaded blobs will be saved to  */ ;/**  * Set the file directory where the downloaded blobs will be saved to  */ public void setFileDir(String fileDir) {     this.fileDir = fileDir. }
false;public;0;3;;public Long getBlobOffset() {     return blobOffset. }
true;public;1;3;/**  *  Set the blob offset for the upload or download operations, default is 0  */ ;/**  *  Set the blob offset for the upload or download operations, default is 0  */ public void setBlobOffset(Long dataOffset) {     this.blobOffset = dataOffset. }
false;public;0;3;;public Long getDataLength() {     return dataLength. }
true;public;1;3;/**  * Set the data length for the download or page blob upload operations  */ ;/**  * Set the data length for the download or page blob upload operations  */ public void setDataLength(Long dataLength) {     this.dataLength = dataLength. }
false;public;0;3;;public String getBlobPrefix() {     return blobPrefix. }
true;public;1;3;/**  * Set a prefix which can be used for listing the blobs  */ ;/**  * Set a prefix which can be used for listing the blobs  */ public void setBlobPrefix(String blobPrefix) {     this.blobPrefix = blobPrefix. }
false;public;0;3;;public boolean isPublicForRead() {     return publicForRead. }
true;public;1;3;/**  * Storage resources can be public for reading their content, if this property is enabled  * then the credentials do not have to be set  */ ;/**  * Storage resources can be public for reading their content, if this property is enabled  * then the credentials do not have to be set  */ public void setPublicForRead(boolean publicForRead) {     this.publicForRead = publicForRead. }
false;public;0;3;;public boolean isUseFlatListing() {     return useFlatListing. }
true;public;1;3;/**  * Specify if the flat or hierarchical blob listing should be used  */ ;/**  * Specify if the flat or hierarchical blob listing should be used  */ public void setUseFlatListing(boolean useFlatListing) {     this.useFlatListing = useFlatListing. }
