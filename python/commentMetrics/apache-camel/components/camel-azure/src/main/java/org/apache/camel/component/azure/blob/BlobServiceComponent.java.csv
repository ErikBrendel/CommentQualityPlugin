commented;modifiers;parameterAmount;loc;comment;code
false;protected;3;33;;protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {     BlobServiceConfiguration configuration = new BlobServiceConfiguration().     setProperties(configuration, parameters).     String[] parts = null.     if (remaining != null) {         parts = remaining.split("/").     }     if (parts == null || parts.length < 2) {         throw new IllegalArgumentException("At least the account and container names must be specified.").     }     configuration.setAccountName(parts[0]).     configuration.setContainerName(parts[1]).     if (parts.length > 2) {         // Blob names can contain forward slashes         StringBuilder sb = new StringBuilder().         for (int i = 2. i < parts.length. i++) {             sb.append(parts[i]).             if (i + 1 < parts.length) {                 sb.append('/').             }         }         configuration.setBlobName(sb.toString()).     }     checkCredentials(configuration).     BlobServiceEndpoint endpoint = new BlobServiceEndpoint(uri, this, configuration).     setProperties(endpoint, parameters).     return endpoint. }
false;private;1;9;;private void checkCredentials(BlobServiceConfiguration cfg) {     CloudBlob client = cfg.getAzureBlobClient().     StorageCredentials creds = client == null ? cfg.getCredentials() : client.getServiceClient().getCredentials().     if ((creds == null || creds instanceof StorageCredentialsAnonymous) && !cfg.isPublicForRead()) {         throw new IllegalArgumentException("Credentials must be specified.").     } }
