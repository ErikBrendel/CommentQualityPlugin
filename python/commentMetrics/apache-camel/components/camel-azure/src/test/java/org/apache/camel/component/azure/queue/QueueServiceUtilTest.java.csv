commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testPrepareUri() throws Exception {     registerCredentials().     QueueServiceComponent component = new QueueServiceComponent(context).     QueueServiceEndpoint endpoint = (QueueServiceEndpoint) component.createEndpoint("azure-queue://camelazure/testqueue?credentials=#creds").     URI uri = QueueServiceUtil.prepareStorageQueueUri(endpoint.getConfiguration()).     assertEquals("https://camelazure.queue.core.windows.net/testqueue", uri.toString()). }
false;public;0;9;;@Test public void testGetConfiguredClient() throws Exception {     CloudQueue client = new CloudQueue(URI.create("https://camelazure.queue.core.windows.net/testqueue"), newAccountKeyCredentials()).     context.getRegistry().bind("azureQueueClient", client).     QueueServiceComponent component = new QueueServiceComponent(context).     QueueServiceEndpoint endpoint = (QueueServiceEndpoint) component.createEndpoint("azure-queue://camelazure/testqueue?azureQueueClient=#azureQueueClient").     assertSame(client, QueueServiceUtil.getConfiguredClient(endpoint.getConfiguration())). }
false;public;0;16;;@Test public void testGetConfiguredClientUriMismatch() throws Exception {     CloudQueue client = new CloudQueue(URI.create("https://camelazure.queue.core.windows.net/testqueue"), newAccountKeyCredentials()).     context.getRegistry().bind("azureQueueClient", client).     QueueServiceComponent component = new QueueServiceComponent(context).     QueueServiceEndpoint endpoint = (QueueServiceEndpoint) component.createEndpoint("azure-queue://camelazure/testqueue2?azureQueueClient=#azureQueueClient").     try {         QueueServiceUtil.getConfiguredClient(endpoint.getConfiguration()).         fail().     } catch (IllegalArgumentException ex) {         assertEquals("Invalid Client URI", ex.getMessage()).     } }
false;private;0;3;;private void registerCredentials() {     context.getRegistry().bind("creds", newAccountKeyCredentials()). }
false;private;0;3;;private StorageCredentials newAccountKeyCredentials() {     return new StorageCredentialsAccountAndKey("camelazure", Base64.encode("key".getBytes())). }
