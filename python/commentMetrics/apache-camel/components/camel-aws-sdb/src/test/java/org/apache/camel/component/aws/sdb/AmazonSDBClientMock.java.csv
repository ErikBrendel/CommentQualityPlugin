commented;modifiers;parameterAmount;loc;comment;code
false;public;1;5;;@Override public BatchDeleteAttributesResult batchDeleteAttributes(BatchDeleteAttributesRequest batchDeleteAttributesRequest) throws AmazonServiceException, AmazonClientException {     this.batchDeleteAttributesRequest = batchDeleteAttributesRequest.     return new BatchDeleteAttributesResult(). }
false;public;1;5;;@Override public BatchPutAttributesResult batchPutAttributes(BatchPutAttributesRequest batchPutAttributesRequest) throws AmazonServiceException, AmazonClientException {     this.batchPutAttributesRequest = batchPutAttributesRequest.     return new BatchPutAttributesResult(). }
false;public;1;5;;@Override public CreateDomainResult createDomain(CreateDomainRequest createDomainRequest) throws AmazonServiceException, AmazonClientException {     this.createDomainRequest = createDomainRequest.     return new CreateDomainResult(). }
false;public;1;10;;@Override public DeleteAttributesResult deleteAttributes(DeleteAttributesRequest deleteAttributesRequest) throws AmazonServiceException, AmazonClientException {     this.deleteAttributesRequest = deleteAttributesRequest.     String domainName = deleteAttributesRequest.getDomainName().     if ("MissingDomain".equals(domainName)) {         throw new NoSuchDomainException(domainName).     }     return new DeleteAttributesResult(). }
false;public;1;5;;@Override public DeleteDomainResult deleteDomain(DeleteDomainRequest deleteDomainRequest) throws AmazonServiceException, AmazonClientException {     this.deleteDomainRequest = deleteDomainRequest.     return new DeleteDomainResult(). }
false;public;1;18;;@Override public DomainMetadataResult domainMetadata(DomainMetadataRequest domainMetadataRequest) throws AmazonServiceException, AmazonClientException {     this.domainMetadataRequest = domainMetadataRequest.     if ("NonExistingDomain".equals(domainMetadataRequest.getDomainName())) {         throw new NoSuchDomainException("Domain 'NonExistingDomain' doesn't exist.").     }     DomainMetadataResult result = new DomainMetadataResult().     result.setTimestamp(new Integer(10)).     result.setItemCount(new Integer(11)).     result.setAttributeNameCount(new Integer(12)).     result.setAttributeValueCount(new Integer(13)).     result.setAttributeNamesSizeBytes(new Long(1000000)).     result.setAttributeValuesSizeBytes(new Long(2000000)).     result.setItemNamesSizeBytes(new Long(3000000)).     return result. }
false;public;1;8;;@Override public GetAttributesResult getAttributes(GetAttributesRequest getAttributesRequest) throws AmazonServiceException, AmazonClientException {     this.getAttributesRequest = getAttributesRequest.     return new GetAttributesResult().withAttributes(new Attribute("AttributeOne", "Value One")).withAttributes(new Attribute("AttributeTwo", "Value Two")). }
false;public;1;10;;@Override public ListDomainsResult listDomains(ListDomainsRequest listDomainsRequest) throws AmazonServiceException, AmazonClientException {     this.listDomainsRequest = listDomainsRequest.     ListDomainsResult result = new ListDomainsResult().     result.getDomainNames().add("DOMAIN1").     result.getDomainNames().add("DOMAIN2").     result.setNextToken("TOKEN2").     return result. }
false;public;1;5;;@Override public PutAttributesResult putAttributes(PutAttributesRequest putAttributesRequest) throws AmazonServiceException, AmazonClientException {     this.putAttributesRequest = putAttributesRequest.     return new PutAttributesResult(). }
false;public;1;10;;@Override public SelectResult select(SelectRequest selectRequest) throws AmazonServiceException, AmazonClientException {     this.selectRequest = selectRequest.     SelectResult result = new SelectResult().     result.setNextToken("TOKEN2").     result.getItems().add(new Item("ITEM1", null)).     result.getItems().add(new Item("ITEM2", null)).     return result. }
