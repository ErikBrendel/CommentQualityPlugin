commented;modifiers;parameterAmount;loc;comment;code
false;public;1;33;;public void process(Exchange exchange) throws Exception {     switch(determineOperation(exchange)) {         case BatchDeleteAttributes:             new BatchDeleteAttributesCommand(getEndpoint().getSdbClient(), getConfiguration(), exchange).execute().             break.         case BatchPutAttributes:             new BatchPutAttributesCommand(getEndpoint().getSdbClient(), getConfiguration(), exchange).execute().             break.         case DeleteAttributes:             new DeleteAttributesCommand(getEndpoint().getSdbClient(), getConfiguration(), exchange).execute().             break.         case DeleteDomain:             new DeleteDomainCommand(getEndpoint().getSdbClient(), getConfiguration(), exchange).execute().             break.         case DomainMetadata:             new DomainMetadataCommand(getEndpoint().getSdbClient(), getConfiguration(), exchange).execute().             break.         case GetAttributes:             new GetAttributesCommand(getEndpoint().getSdbClient(), getConfiguration(), exchange).execute().             break.         case ListDomains:             new ListDomainsCommand(getEndpoint().getSdbClient(), getConfiguration(), exchange).execute().             break.         case PutAttributes:             new PutAttributesCommand(getEndpoint().getSdbClient(), getConfiguration(), exchange).execute().             break.         case Select:             new SelectCommand(getEndpoint().getSdbClient(), getConfiguration(), exchange).execute().             break.         default:             throw new IllegalArgumentException("Unsupported operation").     } }
false;private;1;7;;private SdbOperations determineOperation(Exchange exchange) {     SdbOperations operation = exchange.getIn().getHeader(SdbConstants.OPERATION, SdbOperations.class).     if (operation == null) {         operation = getConfiguration().getOperation().     }     return operation. }
false;protected;0;3;;protected SdbConfiguration getConfiguration() {     return getEndpoint().getConfiguration(). }
false;public;0;7;;@Override public String toString() {     if (sdbProducerToString == null) {         sdbProducerToString = "SdbProducer[" + URISupport.sanitizeUri(getEndpoint().getEndpointUri()) + "]".     }     return sdbProducerToString. }
false;public;0;4;;@Override public SdbEndpoint getEndpoint() {     return (SdbEndpoint) super.getEndpoint(). }
