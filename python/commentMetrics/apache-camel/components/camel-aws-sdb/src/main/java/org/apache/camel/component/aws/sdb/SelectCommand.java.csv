commented;modifiers;parameterAmount;loc;comment;code
false;public;0;15;;public void execute() {     SelectRequest request = new SelectRequest().withSelectExpression(determineSelectExpression()).withConsistentRead(determineConsistentRead()).withNextToken(determineNextToken()).     log.trace("Sending request [{}] for exchange [{}]...", request, exchange).     SelectResult result = this.sdbClient.select(request).     log.trace("Received result [{}]", result).     Message msg = getMessageForResponse(exchange).     msg.setHeader(SdbConstants.ITEMS, result.getItems()).     msg.setHeader(SdbConstants.NEXT_TOKEN, result.getNextToken()). }
false;protected;0;3;;protected String determineSelectExpression() {     return exchange.getIn().getHeader(SdbConstants.SELECT_EXPRESSION, String.class). }
false;public,static;1;8;;public static Message getMessageForResponse(final Exchange exchange) {     if (exchange.getPattern().isOutCapable()) {         Message out = exchange.getOut().         out.copyFrom(exchange.getIn()).         return out.     }     return exchange.getIn(). }
