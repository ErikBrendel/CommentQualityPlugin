commented;modifiers;parameterAmount;loc;comment;code
true;;2;1;/**  * Called when record is being queried.  *  * @param consumer the consumer  * @param endpoint the endpoint  * @return Results of the query as a {@link List}  * @throws Exception can be thrown in case of error  */ ;/**  * Called when record is being queried.  *  * @param consumer the consumer  * @param endpoint the endpoint  * @return Results of the query as a {@link List}  * @throws Exception can be thrown in case of error  */ List<?> poll(MyBatisConsumer consumer, MyBatisEndpoint endpoint) throws Exception.
true;;4;1;/**  * Commit callback if there are a statements to be run after processing.  *  * @param endpoint          the endpoint  * @param exchange          The exchange after it has been processed  * @param data              The original data delivered to the route  * @param consumeStatements Name of the statement(s) to run, will use SQL update. Use comma to provide multiple statements to run.  * @throws Exception can be thrown in case of error  */ ;/**  * Commit callback if there are a statements to be run after processing.  *  * @param endpoint          the endpoint  * @param exchange          The exchange after it has been processed  * @param data              The original data delivered to the route  * @param consumeStatements Name of the statement(s) to run, will use SQL update. Use comma to provide multiple statements to run.  * @throws Exception can be thrown in case of error  */ void commit(MyBatisEndpoint endpoint, Exchange exchange, Object data, String consumeStatements) throws Exception.
