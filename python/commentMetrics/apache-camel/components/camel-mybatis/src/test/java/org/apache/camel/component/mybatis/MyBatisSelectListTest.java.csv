commented;modifiers;parameterAmount;loc;comment;code
false;public;0;15;;@Test public void testSelectList() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(1).     template.sendBody("direct:start", null).     assertMockEndpointsSatisfied().     List<?> list = mock.getReceivedExchanges().get(0).getIn().getBody(List.class).     Account james = (Account) list.get(0).     Account claus = (Account) list.get(1).     assertEquals("James", james.getFirstName()).     assertEquals("Claus", claus.getFirstName()). }
false;public;0;8;;@Override public void configure() throws Exception {     // START SNIPPET: e1     from("direct:start").to("mybatis:selectAllAccounts?statementType=SelectList").to("mock:result"). // END SNIPPET: e1 }
false;protected;0;13;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // START SNIPPET: e1             from("direct:start").to("mybatis:selectAllAccounts?statementType=SelectList").to("mock:result").         // END SNIPPET: e1         }     }. }
