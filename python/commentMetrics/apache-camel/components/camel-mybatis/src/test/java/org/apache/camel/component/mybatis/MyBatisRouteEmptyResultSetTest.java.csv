commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testRouteEmptyResultSet() throws Exception {     MockEndpoint endpoint = getMockEndpoint("mock:results").     endpoint.expectedMinimumMessageCount(1).     assertMockEndpointsSatisfied().     // should be an empty list     assertEquals("Should be an empty list", 0, endpoint.getReceivedExchanges().get(0).getIn().getBody(ArrayList.class).size()). }
false;public;0;3;;public void configure() throws Exception {     from("mybatis:selectAllAccounts?consumer.useIterator=false&consumer.routeEmptyResultSet=true").to("mock:results"). }
false;protected;0;8;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from("mybatis:selectAllAccounts?consumer.useIterator=false&consumer.routeEmptyResultSet=true").to("mock:results").         }     }. }
false;protected;0;5;;@Override protected boolean createTestData() {     // no test data so an empty resultset     return false. }
