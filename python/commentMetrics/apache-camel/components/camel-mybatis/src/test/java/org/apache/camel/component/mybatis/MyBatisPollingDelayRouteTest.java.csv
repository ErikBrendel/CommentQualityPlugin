commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void testSendAccountBean() throws Exception {     long start = System.currentTimeMillis().     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMinimumMessageCount(2).     assertMockEndpointsSatisfied().     long delta = System.currentTimeMillis() - start.     assertTrue("Should not take that long: " + delta, delta < 7000). }
false;public;0;6;;public void configure() throws Exception {     // START SNIPPET: e1     // run this timer every 2nd second, that will select data from the database and send it to the mock endpoint     from("timer://pollTheDatabase?delay=2000").to("mybatis:selectAllAccounts?statementType=SelectList").to("mock:result"). // END SNIPPET: e1 }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             // START SNIPPET: e1             // run this timer every 2nd second, that will select data from the database and send it to the mock endpoint             from("timer://pollTheDatabase?delay=2000").to("mybatis:selectAllAccounts?statementType=SelectList").to("mock:result").         // END SNIPPET: e1         }     }. }
