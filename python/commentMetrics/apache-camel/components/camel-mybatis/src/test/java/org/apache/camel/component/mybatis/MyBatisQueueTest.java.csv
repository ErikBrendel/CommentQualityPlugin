commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;3;;protected boolean createTestData() {     return false. }
false;protected;0;3;;protected String getCreateStatement() {     return "create table ACCOUNT (ACC_ID INTEGER, ACC_FIRST_NAME VARCHAR(255), ACC_LAST_NAME VARCHAR(255), ACC_EMAIL VARCHAR(255), PROCESSED BOOLEAN DEFAULT false)". }
false;public;0;36;;@Test public void testConsume() throws Exception {     MockEndpoint endpoint = getMockEndpoint("mock:results").     endpoint.expectedMinimumMessageCount(2).     Account account1 = new Account().     account1.setId(1).     account1.setFirstName("Bob").     account1.setLastName("Denver").     account1.setEmailAddress("TryGuessingGilligan@gmail.com").     Account account2 = new Account().     account2.setId(2).     account2.setFirstName("Alan").     account2.setLastName("Hale").     account2.setEmailAddress("TryGuessingSkipper@gmail.com").     template.sendBody("direct:start", new Account[] { account1, account2 }).     assertMockEndpointsSatisfied().     // need a delay here on slower machines     Thread.sleep(1000).     // now lets poll that the account has been inserted     List<?> body = template.requestBody("mybatis:selectProcessedAccounts?statementType=SelectList", null, List.class).     assertEquals("Wrong size: " + body, 2, body.size()).     Account actual = assertIsInstanceOf(Account.class, body.get(0)).     assertEquals("Account.getFirstName()", "Bob", actual.getFirstName()).     assertEquals("Account.getLastName()", "Denver", actual.getLastName()).     body = template.requestBody("mybatis:selectUnprocessedAccounts?statementType=SelectList", null, List.class).     assertEquals("Wrong size: " + body, 0, body.size()). }
false;public;0;7;;public void configure() throws Exception {     // START SNIPPET: e1     from("mybatis:selectUnprocessedAccounts?consumer.onConsume=consumeAccount").to("mock:results").     // END SNIPPET: e1     from("direct:start").to("mybatis:insertAccount?statementType=Insert"). }
false;protected;0;12;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             // START SNIPPET: e1             from("mybatis:selectUnprocessedAccounts?consumer.onConsume=consumeAccount").to("mock:results").             // END SNIPPET: e1             from("direct:start").to("mybatis:insertAccount?statementType=Insert").         }     }. }
