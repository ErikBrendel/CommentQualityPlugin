commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;33;;@Override protected int poll() throws Exception {     List<PullRequest> openPullRequests = pullRequestService.getPullRequests(getRepository(), "open").     // In the end, we want PRs oldest to newest.     Stack<PullRequest> newPullRequests = new Stack<>().     for (PullRequest pullRequest : openPullRequests) {         if (pullRequest.getNumber() > lastOpenPullRequest) {             newPullRequests.push(pullRequest).         } else {             break.         }     }     if (newPullRequests.size() > 0) {         lastOpenPullRequest = openPullRequests.get(0).getNumber().     }     while (!newPullRequests.empty()) {         PullRequest newPullRequest = newPullRequests.pop().         Exchange e = getEndpoint().createExchange().         e.getIn().setBody(newPullRequest).         // Required by the producers.  Set it here for convenience.         e.getIn().setHeader(GitHubConstants.GITHUB_PULLREQUEST, newPullRequest.getNumber()).         if (newPullRequest.getHead() != null) {             e.getIn().setHeader(GitHubConstants.GITHUB_PULLREQUEST_HEAD_COMMIT_SHA, newPullRequest.getHead().getSha()).         }         getProcessor().process(e).     }     return newPullRequests.size(). }
