commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Override public void configure() throws Exception {     context.addComponent("github", new GitHubComponent()).     from(PULL_REQUEST_PRODUCER_ENDPOINT).process(new ClosePullRequestProducerProcessor()).to("github://closePullRequest?username=someguy&password=apassword&repoOwner=anotherguy&repoName=somerepo"). }
false;protected;0;15;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             context.addComponent("github", new GitHubComponent()).             from(PULL_REQUEST_PRODUCER_ENDPOINT).process(new ClosePullRequestProducerProcessor()).to("github://closePullRequest?username=someguy&password=apassword&repoOwner=anotherguy&repoName=somerepo").         }     }. }
false;public;0;28;;@Test public void testPullRequestCommentProducer() throws Exception {     // Create a pull request     PullRequest pullRequest = pullRequestService.addPullRequest("testPullRequestCommentProducer").     latestPullRequestId = pullRequest.getId().     // Close it     Endpoint closePullRequestEndpoint = getMandatoryEndpoint(PULL_REQUEST_PRODUCER_ENDPOINT).     Exchange exchange = closePullRequestEndpoint.createExchange().     template.send(closePullRequestEndpoint, exchange).     Thread.sleep(1 * 1000).     // Verify that it was closed     List<PullRequest> closedPullRequests = pullRequestService.getPullRequests(null, "closed").     assertNotNull(closedPullRequests).     boolean found = false.     for (PullRequest pr : closedPullRequests) {         if (pr.getId() == latestPullRequestId) {             found = true.             break.         }     }     assertTrue("Didn't find pull request " + latestPullRequestId, found). }
false;public;1;6;;@Override public void process(Exchange exchange) throws Exception {     Message in = exchange.getIn().     Map<String, Object> headers = in.getHeaders().     headers.put(GitHubConstants.GITHUB_PULLREQUEST, latestPullRequestId). }
