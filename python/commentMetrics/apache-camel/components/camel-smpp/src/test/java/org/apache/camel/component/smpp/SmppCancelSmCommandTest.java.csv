commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Before public void setUp() {     session = mock(SMPPSession.class).     config = new SmppConfiguration().     command = new SmppCancelSmCommand(session, config). }
false;public;0;12;;@Test public void executeWithConfigurationData() throws Exception {     Exchange exchange = new DefaultExchange(new DefaultCamelContext(), ExchangePattern.InOut).     exchange.getIn().setHeader(SmppConstants.COMMAND, "CancelSm").     exchange.getIn().setHeader(SmppConstants.ID, "1").     command.execute(exchange).     verify(session).cancelShortMessage("", "1", TypeOfNumber.UNKNOWN, NumberingPlanIndicator.UNKNOWN, "1616", TypeOfNumber.UNKNOWN, NumberingPlanIndicator.UNKNOWN, "1717").     assertEquals("1", exchange.getOut().getHeader(SmppConstants.ID)). }
false;public;0;19;;@Test public void execute() throws Exception {     Exchange exchange = new DefaultExchange(new DefaultCamelContext(), ExchangePattern.InOut).     exchange.getIn().setHeader(SmppConstants.COMMAND, "CancelSm").     exchange.getIn().setHeader(SmppConstants.ID, "1").     exchange.getIn().setHeader(SmppConstants.SERVICE_TYPE, "XXX").     exchange.getIn().setHeader(SmppConstants.SOURCE_ADDR_TON, TypeOfNumber.NATIONAL.value()).     exchange.getIn().setHeader(SmppConstants.SOURCE_ADDR_NPI, NumberingPlanIndicator.NATIONAL.value()).     exchange.getIn().setHeader(SmppConstants.SOURCE_ADDR, "1818").     exchange.getIn().setHeader(SmppConstants.DEST_ADDR_TON, TypeOfNumber.INTERNATIONAL.value()).     exchange.getIn().setHeader(SmppConstants.DEST_ADDR_NPI, NumberingPlanIndicator.INTERNET.value()).     exchange.getIn().setHeader(SmppConstants.DEST_ADDR, "1919").     command.execute(exchange).     verify(session).cancelShortMessage("XXX", "1", TypeOfNumber.NATIONAL, NumberingPlanIndicator.NATIONAL, "1818", TypeOfNumber.INTERNATIONAL, NumberingPlanIndicator.INTERNET, "1919").     assertEquals("1", exchange.getOut().getHeader(SmppConstants.ID)). }
