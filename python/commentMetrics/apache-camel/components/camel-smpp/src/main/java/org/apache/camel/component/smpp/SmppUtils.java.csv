# id;timestamp;commentText;codeText;commentWords;codeWords
SmppUtils -> public static Date string2Date(String date);1317851746;YYMMDDhhmmSS where:_<ul>_<li>YY = last two digits of the year (00-99)</li>_<li>MM = month (01-12)</li>_<li>DD = day (01-31)</li>_<li>hh = hour (00-23)</li>_<li>mm = minute (00-59)</li>_<li>SS = second (00-59)</li>_</ul>__Java format is (yyMMddHHmmSS).__@param date in <tt>String</tt> format._@return_@throws NumberFormatException if there is contains non number on_<code>date</code> parameter._@throws IndexOutOfBoundsException if the date length in <tt>String</tt>_format is less than 10.;public static Date string2Date(String date) {_        if (date == null) {_            return null__        }__        int year = Integer.parseInt(date.substring(0, 2))__        int month = Integer.parseInt(date.substring(2, 4))__        int day = Integer.parseInt(date.substring(4, 6))__        int hour = Integer.parseInt(date.substring(6, 8))__        int minute = Integer.parseInt(date.substring(8, 10))__        int second = Integer.parseInt(date.substring(10, 12))__        Calendar cal = Calendar.getInstance()__        cal.set(convertTwoDigitYear(year), month - 1, day, hour, minute, second)__        cal.set(Calendar.MILLISECOND, 0)__        return cal.getTime()__    };yymmddhhmm,ss,where,ul,li,yy,last,two,digits,of,the,year,00,99,li,li,mm,month,01,12,li,li,dd,day,01,31,li,li,hh,hour,00,23,li,li,mm,minute,00,59,li,li,ss,second,00,59,li,ul,java,format,is,yy,mmdd,hhmm,ss,param,date,in,tt,string,tt,format,return,throws,number,format,exception,if,there,is,contains,non,number,on,code,date,code,parameter,throws,index,out,of,bounds,exception,if,the,date,length,in,tt,string,tt,format,is,less,than,10;public,static,date,string2date,string,date,if,date,null,return,null,int,year,integer,parse,int,date,substring,0,2,int,month,integer,parse,int,date,substring,2,4,int,day,integer,parse,int,date,substring,4,6,int,hour,integer,parse,int,date,substring,6,8,int,minute,integer,parse,int,date,substring,8,10,int,second,integer,parse,int,date,substring,10,12,calendar,cal,calendar,get,instance,cal,set,convert,two,digit,year,year,month,1,day,hour,minute,second,cal,set,calendar,millisecond,0,return,cal,get,time
SmppUtils -> public static Date string2Date(String date);1349714461;YYMMDDhhmmSS where:_<ul>_<li>YY = last two digits of the year (00-99)</li>_<li>MM = month (01-12)</li>_<li>DD = day (01-31)</li>_<li>hh = hour (00-23)</li>_<li>mm = minute (00-59)</li>_<li>SS = second (00-59)</li>_</ul>__Java format is (yyMMddHHmmSS).__@param date in <tt>String</tt> format._@return the date_@throws NumberFormatException if there is contains non number on_<code>date</code> parameter._@throws IndexOutOfBoundsException if the date length in <tt>String</tt>_format is less than 10.;public static Date string2Date(String date) {_        if (date == null) {_            return null__        }__        int year = Integer.parseInt(date.substring(0, 2))__        int month = Integer.parseInt(date.substring(2, 4))__        int day = Integer.parseInt(date.substring(4, 6))__        int hour = Integer.parseInt(date.substring(6, 8))__        int minute = Integer.parseInt(date.substring(8, 10))__        int second = Integer.parseInt(date.substring(10, 12))__        Calendar cal = Calendar.getInstance()__        cal.set(convertTwoDigitYear(year), month - 1, day, hour, minute, second)__        cal.set(Calendar.MILLISECOND, 0)__        return cal.getTime()__    };yymmddhhmm,ss,where,ul,li,yy,last,two,digits,of,the,year,00,99,li,li,mm,month,01,12,li,li,dd,day,01,31,li,li,hh,hour,00,23,li,li,mm,minute,00,59,li,li,ss,second,00,59,li,ul,java,format,is,yy,mmdd,hhmm,ss,param,date,in,tt,string,tt,format,return,the,date,throws,number,format,exception,if,there,is,contains,non,number,on,code,date,code,parameter,throws,index,out,of,bounds,exception,if,the,date,length,in,tt,string,tt,format,is,less,than,10;public,static,date,string2date,string,date,if,date,null,return,null,int,year,integer,parse,int,date,substring,0,2,int,month,integer,parse,int,date,substring,2,4,int,day,integer,parse,int,date,substring,4,6,int,hour,integer,parse,int,date,substring,6,8,int,minute,integer,parse,int,date,substring,8,10,int,second,integer,parse,int,date,substring,10,12,calendar,cal,calendar,get,instance,cal,set,convert,two,digit,year,year,month,1,day,hour,minute,second,cal,set,calendar,millisecond,0,return,cal,get,time
SmppUtils -> public static Date string2Date(String date);1351025608;YYMMDDhhmmSS where:_<ul>_<li>YY = last two digits of the year (00-99)</li>_<li>MM = month (01-12)</li>_<li>DD = day (01-31)</li>_<li>hh = hour (00-23)</li>_<li>mm = minute (00-59)</li>_<li>SS = second (00-59)</li>_</ul>__Java format is (yyMMddHHmmSS).__@param date in <tt>String</tt> format._@return the date_@throws NumberFormatException if there is contains non number on_<code>date</code> parameter._@throws IndexOutOfBoundsException if the date length in <tt>String</tt>_format is less than 10.;public static Date string2Date(String date) {_        if (date == null) {_            return null__        }__        int year = Integer.parseInt(date.substring(0, 2))__        int month = Integer.parseInt(date.substring(2, 4))__        int day = Integer.parseInt(date.substring(4, 6))__        int hour = Integer.parseInt(date.substring(6, 8))__        int minute = Integer.parseInt(date.substring(8, 10))__        int second = Integer.parseInt(date.substring(10, 12))__        Calendar cal = Calendar.getInstance()__        cal.set(convertTwoDigitYear(year), month - 1, day, hour, minute, second)__        cal.set(Calendar.MILLISECOND, 0)__        return cal.getTime()__    };yymmddhhmm,ss,where,ul,li,yy,last,two,digits,of,the,year,00,99,li,li,mm,month,01,12,li,li,dd,day,01,31,li,li,hh,hour,00,23,li,li,mm,minute,00,59,li,li,ss,second,00,59,li,ul,java,format,is,yy,mmdd,hhmm,ss,param,date,in,tt,string,tt,format,return,the,date,throws,number,format,exception,if,there,is,contains,non,number,on,code,date,code,parameter,throws,index,out,of,bounds,exception,if,the,date,length,in,tt,string,tt,format,is,less,than,10;public,static,date,string2date,string,date,if,date,null,return,null,int,year,integer,parse,int,date,substring,0,2,int,month,integer,parse,int,date,substring,2,4,int,day,integer,parse,int,date,substring,4,6,int,hour,integer,parse,int,date,substring,6,8,int,minute,integer,parse,int,date,substring,8,10,int,second,integer,parse,int,date,substring,10,12,calendar,cal,calendar,get,instance,cal,set,convert,two,digit,year,year,month,1,day,hour,minute,second,cal,set,calendar,millisecond,0,return,cal,get,time
SmppUtils -> public static Date string2Date(String date);1417488815;YYMMDDhhmmSS where:_<ul>_<li>YY = last two digits of the year (00-99)</li>_<li>MM = month (01-12)</li>_<li>DD = day (01-31)</li>_<li>hh = hour (00-23)</li>_<li>mm = minute (00-59)</li>_<li>SS = second (00-59)</li>_</ul>__Java format is (yyMMddHHmmSS).__@param date in <tt>String</tt> format._@return the date_@throws NumberFormatException if there is contains non number on_<code>date</code> parameter._@throws IndexOutOfBoundsException if the date length in <tt>String</tt>_format is less than 10.;public static Date string2Date(String date) {_        if (date == null) {_            return null__        }__        int year = Integer.parseInt(date.substring(0, 2))__        int month = Integer.parseInt(date.substring(2, 4))__        int day = Integer.parseInt(date.substring(4, 6))__        int hour = Integer.parseInt(date.substring(6, 8))__        int minute = Integer.parseInt(date.substring(8, 10))__        int second = Integer.parseInt(date.substring(10, 12))__        Calendar cal = Calendar.getInstance()__        cal.set(convertTwoDigitYear(year), month - 1, day, hour, minute, second)__        cal.set(Calendar.MILLISECOND, 0)__        return cal.getTime()__    };yymmddhhmm,ss,where,ul,li,yy,last,two,digits,of,the,year,00,99,li,li,mm,month,01,12,li,li,dd,day,01,31,li,li,hh,hour,00,23,li,li,mm,minute,00,59,li,li,ss,second,00,59,li,ul,java,format,is,yy,mmdd,hhmm,ss,param,date,in,tt,string,tt,format,return,the,date,throws,number,format,exception,if,there,is,contains,non,number,on,code,date,code,parameter,throws,index,out,of,bounds,exception,if,the,date,length,in,tt,string,tt,format,is,less,than,10;public,static,date,string2date,string,date,if,date,null,return,null,int,year,integer,parse,int,date,substring,0,2,int,month,integer,parse,int,date,substring,2,4,int,day,integer,parse,int,date,substring,4,6,int,hour,integer,parse,int,date,substring,6,8,int,minute,integer,parse,int,date,substring,8,10,int,second,integer,parse,int,date,substring,10,12,calendar,cal,calendar,get,instance,cal,set,convert,two,digit,year,year,month,1,day,hour,minute,second,cal,set,calendar,millisecond,0,return,cal,get,time
SmppUtils -> public static Date string2Date(String date);1464422027;YYMMDDhhmmSS where:_<ul>_<li>YY = last two digits of the year (00-99)</li>_<li>MM = month (01-12)</li>_<li>DD = day (01-31)</li>_<li>hh = hour (00-23)</li>_<li>mm = minute (00-59)</li>_<li>SS = second (00-59)</li>_</ul>__Java format is (yyMMddHHmmSS).__@param date in <tt>String</tt> format._@return the date_@throws NumberFormatException if there is contains non number on_<code>date</code> parameter._@throws IndexOutOfBoundsException if the date length in <tt>String</tt>_format is less than 10.;public static Date string2Date(String date) {_        if (date == null) {_            return null__        }__        int year = Integer.parseInt(date.substring(0, 2))__        int month = Integer.parseInt(date.substring(2, 4))__        int day = Integer.parseInt(date.substring(4, 6))__        int hour = Integer.parseInt(date.substring(6, 8))__        int minute = Integer.parseInt(date.substring(8, 10))__        int second = Integer.parseInt(date.substring(10, 12))__        Calendar cal = Calendar.getInstance()__        cal.set(convertTwoDigitYear(year), month - 1, day, hour, minute, second)__        cal.set(Calendar.MILLISECOND, 0)__        return cal.getTime()__    };yymmddhhmm,ss,where,ul,li,yy,last,two,digits,of,the,year,00,99,li,li,mm,month,01,12,li,li,dd,day,01,31,li,li,hh,hour,00,23,li,li,mm,minute,00,59,li,li,ss,second,00,59,li,ul,java,format,is,yy,mmdd,hhmm,ss,param,date,in,tt,string,tt,format,return,the,date,throws,number,format,exception,if,there,is,contains,non,number,on,code,date,code,parameter,throws,index,out,of,bounds,exception,if,the,date,length,in,tt,string,tt,format,is,less,than,10;public,static,date,string2date,string,date,if,date,null,return,null,int,year,integer,parse,int,date,substring,0,2,int,month,integer,parse,int,date,substring,2,4,int,day,integer,parse,int,date,substring,4,6,int,hour,integer,parse,int,date,substring,6,8,int,minute,integer,parse,int,date,substring,8,10,int,second,integer,parse,int,date,substring,10,12,calendar,cal,calendar,get,instance,cal,set,convert,two,digit,year,year,month,1,day,hour,minute,second,cal,set,calendar,millisecond,0,return,cal,get,time
SmppUtils -> public static boolean isGsm0338Encodeable(byte[] aMessage);1417488815;Decides if the characters in the argument are GSM 3.38 encodeable._@param aMessage must be a set of characters encoded in ISO-8859-1_or a compatible character set.  In particular,_UTF-8 encoded text should not be passed to this method._@return true if the characters can be represented in GSM 3.38;public static boolean isGsm0338Encodeable(byte[] aMessage) {_    outer:_        for (int i = 0_ i < aMessage.length_ i++) {_            for (int j = 0_ j < ISO_GSM_0338.length_ j++) {_                if (ISO_GSM_0338[j] == aMessage[i]) {_                    continue outer__                }_            }_            for (int j = 0_ j < ISO_GSM_0338_EXT.length_ j++) {_                if (ISO_GSM_0338_EXT[j][1] == aMessage[i]) {_                    continue outer__                }_            }_            return false__        }_        return true__    };decides,if,the,characters,in,the,argument,are,gsm,3,38,encodeable,param,a,message,must,be,a,set,of,characters,encoded,in,iso,8859,1,or,a,compatible,character,set,in,particular,utf,8,encoded,text,should,not,be,passed,to,this,method,return,true,if,the,characters,can,be,represented,in,gsm,3,38;public,static,boolean,is,gsm0338encodeable,byte,a,message,outer,for,int,i,0,i,a,message,length,i,for,int,j,0,j,length,j,if,j,a,message,i,continue,outer,for,int,j,0,j,length,j,if,j,1,a,message,i,continue,outer,return,false,return,true
SmppUtils -> public static boolean isGsm0338Encodeable(byte[] aMessage);1464422027;Decides if the characters in the argument are GSM 3.38 encodeable._@param aMessage must be a set of characters encoded in ISO-8859-1_or a compatible character set.  In particular,_UTF-8 encoded text should not be passed to this method._@return true if the characters can be represented in GSM 3.38;public static boolean isGsm0338Encodeable(byte[] aMessage) {_    outer:_        for (int i = 0_ i < aMessage.length_ i++) {_            for (int j = 0_ j < ISO_GSM_0338.length_ j++) {_                if (ISO_GSM_0338[j] == aMessage[i]) {_                    continue outer__                }_            }_            for (int j = 0_ j < ISO_GSM_0338_EXT.length_ j++) {_                if (ISO_GSM_0338_EXT[j][1] == aMessage[i]) {_                    continue outer__                }_            }_            return false__        }_        return true__    };decides,if,the,characters,in,the,argument,are,gsm,3,38,encodeable,param,a,message,must,be,a,set,of,characters,encoded,in,iso,8859,1,or,a,compatible,character,set,in,particular,utf,8,encoded,text,should,not,be,passed,to,this,method,return,true,if,the,characters,can,be,represented,in,gsm,3,38;public,static,boolean,is,gsm0338encodeable,byte,a,message,outer,for,int,i,0,i,a,message,length,i,for,int,j,0,j,length,j,if,j,a,message,i,continue,outer,for,int,j,0,j,length,j,if,j,1,a,message,i,continue,outer,return,false,return,true
