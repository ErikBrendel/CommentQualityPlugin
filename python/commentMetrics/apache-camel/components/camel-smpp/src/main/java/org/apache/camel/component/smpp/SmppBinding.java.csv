# id;timestamp;commentText;codeText;commentWords;codeWords
SmppBinding -> public SmppConfiguration getConfiguration();1260263234;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppConfiguration getConfiguration();1260430217;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppConfiguration getConfiguration();1272589442;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppConfiguration getConfiguration();1274230707;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppConfiguration getConfiguration();1276431904;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppConfiguration getConfiguration();1283289848;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppConfiguration getConfiguration();1283800169;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppConfiguration getConfiguration();1289258847;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppConfiguration getConfiguration();1293907120;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppConfiguration getConfiguration();1297975937;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppConfiguration getConfiguration();1302206494;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppConfiguration getConfiguration();1305183367;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppConfiguration getConfiguration();1309727185;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppConfiguration getConfiguration();1315366055;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppConfiguration getConfiguration();1317851746;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppConfiguration getConfiguration();1349714461;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppConfiguration getConfiguration();1352120089;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppConfiguration getConfiguration();1352841234;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppConfiguration getConfiguration();1353612986;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppConfiguration getConfiguration();1362716422;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppConfiguration getConfiguration();1369947956;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppConfiguration getConfiguration();1377438136;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppConfiguration getConfiguration();1432971535;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppConfiguration getConfiguration();1441961757;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppConfiguration getConfiguration();1448458564;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppConfiguration getConfiguration();1464422027;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppConfiguration getConfiguration();1495703393;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppConfiguration getConfiguration();1524063178;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppConfiguration getConfiguration();1533918456;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppConfiguration getConfiguration();1540108158;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppConfiguration getConfiguration();1540108161;Returns the smpp configuration__@return the configuration;public SmppConfiguration getConfiguration() {_        return configuration__    };returns,the,smpp,configuration,return,the,configuration;public,smpp,configuration,get,configuration,return,configuration
SmppBinding -> public SmppMessage createSmppMessage(CamelContext camelContext, AlertNotification alertNotification);1495703393;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(CamelContext camelContext, AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(alertNotification, configuration)__        smppMessage.setCamelContext(camelContext)___        smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.AlertNotification.toString())__        smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(SmppConstants.COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(SmppConstants.COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON, alertNotification.getSourceAddrTon())__        smppMessage.setHeader(SmppConstants.ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_TON, alertNotification.getEsmeAddrTon())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,camel,context,camel,context,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,alert,notification,configuration,smpp,message,set,camel,context,camel,context,smpp,message,set,header,smpp,constants,smpp,message,type,alert,notification,to,string,smpp,message,set,header,smpp,constants,alert,notification,get,sequence,number,smpp,message,set,header,smpp,constants,alert,notification,get,command,id,smpp,message,set,header,smpp,constants,alert,notification,get,command,status,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,ton,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,ton,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(CamelContext camelContext, AlertNotification alertNotification);1524063178;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(CamelContext camelContext, AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(alertNotification, configuration)__        smppMessage.setCamelContext(camelContext)___        smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.AlertNotification.toString())__        smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(SmppConstants.COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(SmppConstants.COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON, alertNotification.getSourceAddrTon())__        smppMessage.setHeader(SmppConstants.ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_TON, alertNotification.getEsmeAddrTon())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,camel,context,camel,context,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,alert,notification,configuration,smpp,message,set,camel,context,camel,context,smpp,message,set,header,smpp,constants,smpp,message,type,alert,notification,to,string,smpp,message,set,header,smpp,constants,alert,notification,get,sequence,number,smpp,message,set,header,smpp,constants,alert,notification,get,command,id,smpp,message,set,header,smpp,constants,alert,notification,get,command,status,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,ton,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,ton,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(CamelContext camelContext, AlertNotification alertNotification);1533918456;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(CamelContext camelContext, AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(alertNotification, configuration)__        smppMessage.setCamelContext(camelContext)___        smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.AlertNotification.toString())__        smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(SmppConstants.COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(SmppConstants.COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON, alertNotification.getSourceAddrTon())__        smppMessage.setHeader(SmppConstants.ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_TON, alertNotification.getEsmeAddrTon())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,camel,context,camel,context,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,alert,notification,configuration,smpp,message,set,camel,context,camel,context,smpp,message,set,header,smpp,constants,smpp,message,type,alert,notification,to,string,smpp,message,set,header,smpp,constants,alert,notification,get,sequence,number,smpp,message,set,header,smpp,constants,alert,notification,get,command,id,smpp,message,set,header,smpp,constants,alert,notification,get,command,status,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,ton,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,ton,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(CamelContext camelContext, AlertNotification alertNotification);1540108158;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(CamelContext camelContext, AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(camelContext, alertNotification, configuration)___        smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.AlertNotification.toString())__        smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(SmppConstants.COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(SmppConstants.COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON, alertNotification.getSourceAddrTon())__        smppMessage.setHeader(SmppConstants.ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_TON, alertNotification.getEsmeAddrTon())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,camel,context,camel,context,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,camel,context,alert,notification,configuration,smpp,message,set,header,smpp,constants,smpp,message,type,alert,notification,to,string,smpp,message,set,header,smpp,constants,alert,notification,get,sequence,number,smpp,message,set,header,smpp,constants,alert,notification,get,command,id,smpp,message,set,header,smpp,constants,alert,notification,get,command,status,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,ton,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,ton,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(CamelContext camelContext, AlertNotification alertNotification);1540108161;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(CamelContext camelContext, AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(camelContext, alertNotification, configuration)___        smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.AlertNotification.toString())__        smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(SmppConstants.COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(SmppConstants.COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON, alertNotification.getSourceAddrTon())__        smppMessage.setHeader(SmppConstants.ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_TON, alertNotification.getEsmeAddrTon())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,camel,context,camel,context,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,camel,context,alert,notification,configuration,smpp,message,set,header,smpp,constants,smpp,message,type,alert,notification,to,string,smpp,message,set,header,smpp,constants,alert,notification,get,sequence,number,smpp,message,set,header,smpp,constants,alert,notification,get,command,id,smpp,message,set,header,smpp,constants,alert,notification,get,command,status,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,ton,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,ton,return,smpp,message
SmppBinding -> public SubmitSm createSubmitSm(Exchange exchange) throws UnsupportedEncodingException;1260263234;Create the SubmitSm object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SubmitSm createSubmitSm(Exchange exchange) throws UnsupportedEncodingException {_        Message in = exchange.getIn()___        SubmitSm submitSm = new SubmitSm()__        submitSm.setShortMessage(exchange.getIn().getBody(String.class).getBytes("ISO-8859-1"))___        if (in.getHeaders().containsKey(DEST_ADDR)) {_            submitSm.setDestAddress((String) in.getHeader(DEST_ADDR))__        } else {_            submitSm.setDestAddress(configuration.getDestAddr())__        }__        if (in.getHeaders().containsKey(DEST_ADDR_TON)) {_            submitSm.setDestAddrTon((Byte) in.getHeader(DEST_ADDR_TON))__        } else {_            submitSm.setDestAddrTon(configuration.getDestAddrTon())__        }__        if (in.getHeaders().containsKey(DEST_ADDR_NPI)) {_            submitSm.setDestAddrNpi((Byte) in.getHeader(DEST_ADDR_NPI))__        } else {_            submitSm.setDestAddrNpi(configuration.getDestAddrNpi())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR)) {_            submitSm.setSourceAddr((String) in.getHeader(SOURCE_ADDR))__        } else {_            submitSm.setSourceAddr(configuration.getSourceAddr())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR_TON)) {_            submitSm.setSourceAddrTon((Byte) in.getHeader(SOURCE_ADDR_TON))__        } else {_            submitSm.setSourceAddrTon(configuration.getSourceAddrTon())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR_NPI)) {_            submitSm.setSourceAddrNpi((Byte) in.getHeader(SOURCE_ADDR_NPI))__        } else {_            submitSm.setSourceAddrNpi(configuration.getDestAddrNpi())__        }__        if (in.getHeaders().containsKey(SERVICE_TYPE)) {_            submitSm.setServiceType((String) in.getHeader(SERVICE_TYPE))__        } else {_            submitSm.setServiceType(configuration.getServiceType())__        }__        if (in.getHeaders().containsKey(REGISTERED_DELIVERY)) {_            submitSm.setRegisteredDelivery((Byte) in.getHeader(REGISTERED_DELIVERY))__        } else {_            submitSm.setRegisteredDelivery(configuration.getRegisteredDelivery())__        }__        if (in.getHeaders().containsKey(PROTOCOL_ID)) {_            submitSm.setProtocolId((Byte) in.getHeader(PROTOCOL_ID))__        } else {_            submitSm.setProtocolId(configuration.getProtocolId())__        }__        if (in.getHeaders().containsKey(PRIORITY_FLAG)) {_            submitSm.setPriorityFlag((Byte) in.getHeader(PRIORITY_FLAG))__        } else {_            submitSm.setPriorityFlag(configuration.getPriorityFlag())__        }__        if (in.getHeaders().containsKey(SCHEDULE_DELIVERY_TIME)) {_            submitSm.setScheduleDeliveryTime(timeFormatter.format((Date) in.getHeader(SCHEDULE_DELIVERY_TIME)))__        } else {_            submitSm.setScheduleDeliveryTime(timeFormatter.format(getCurrentDate()))__        }__        if (in.getHeaders().containsKey(VALIDITY_PERIOD)) {_            submitSm.setValidityPeriod(timeFormatter.format((Date) in.getHeader(VALIDITY_PERIOD)))__        }__        if (in.getHeaders().containsKey(REPLACE_IF_PRESENT_FLAG)) {_            submitSm.setReplaceIfPresent((Byte) in.getHeader(REPLACE_IF_PRESENT_FLAG))__        } else {_            submitSm.setReplaceIfPresent(configuration.getReplaceIfPresentFlag())__        }__        return submitSm__    };create,the,submit,sm,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,submit,sm,create,submit,sm,exchange,exchange,throws,unsupported,encoding,exception,message,in,exchange,get,in,submit,sm,submit,sm,new,submit,sm,submit,sm,set,short,message,exchange,get,in,get,body,string,class,get,bytes,iso,8859,1,if,in,get,headers,contains,key,submit,sm,set,dest,address,string,in,get,header,else,submit,sm,set,dest,address,configuration,get,dest,addr,if,in,get,headers,contains,key,submit,sm,set,dest,addr,ton,byte,in,get,header,else,submit,sm,set,dest,addr,ton,configuration,get,dest,addr,ton,if,in,get,headers,contains,key,submit,sm,set,dest,addr,npi,byte,in,get,header,else,submit,sm,set,dest,addr,npi,configuration,get,dest,addr,npi,if,in,get,headers,contains,key,submit,sm,set,source,addr,string,in,get,header,else,submit,sm,set,source,addr,configuration,get,source,addr,if,in,get,headers,contains,key,submit,sm,set,source,addr,ton,byte,in,get,header,else,submit,sm,set,source,addr,ton,configuration,get,source,addr,ton,if,in,get,headers,contains,key,submit,sm,set,source,addr,npi,byte,in,get,header,else,submit,sm,set,source,addr,npi,configuration,get,dest,addr,npi,if,in,get,headers,contains,key,submit,sm,set,service,type,string,in,get,header,else,submit,sm,set,service,type,configuration,get,service,type,if,in,get,headers,contains,key,submit,sm,set,registered,delivery,byte,in,get,header,else,submit,sm,set,registered,delivery,configuration,get,registered,delivery,if,in,get,headers,contains,key,submit,sm,set,protocol,id,byte,in,get,header,else,submit,sm,set,protocol,id,configuration,get,protocol,id,if,in,get,headers,contains,key,submit,sm,set,priority,flag,byte,in,get,header,else,submit,sm,set,priority,flag,configuration,get,priority,flag,if,in,get,headers,contains,key,submit,sm,set,schedule,delivery,time,time,formatter,format,date,in,get,header,else,submit,sm,set,schedule,delivery,time,time,formatter,format,get,current,date,if,in,get,headers,contains,key,submit,sm,set,validity,period,time,formatter,format,date,in,get,header,if,in,get,headers,contains,key,submit,sm,set,replace,if,present,byte,in,get,header,else,submit,sm,set,replace,if,present,configuration,get,replace,if,present,flag,return,submit,sm
SmppBinding -> public SubmitSm createSubmitSm(Exchange exchange) throws UnsupportedEncodingException;1260430217;Create the SubmitSm object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SubmitSm createSubmitSm(Exchange exchange) throws UnsupportedEncodingException {_        Message in = exchange.getIn()___        SubmitSm submitSm = new SubmitSm()__        submitSm.setShortMessage(exchange.getIn().getBody(String.class).getBytes(configuration.getEncoding()))___        if (in.getHeaders().containsKey(DEST_ADDR)) {_            submitSm.setDestAddress((String) in.getHeader(DEST_ADDR))__        } else {_            submitSm.setDestAddress(configuration.getDestAddr())__        }__        if (in.getHeaders().containsKey(DEST_ADDR_TON)) {_            submitSm.setDestAddrTon((Byte) in.getHeader(DEST_ADDR_TON))__        } else {_            submitSm.setDestAddrTon(configuration.getDestAddrTon())__        }__        if (in.getHeaders().containsKey(DEST_ADDR_NPI)) {_            submitSm.setDestAddrNpi((Byte) in.getHeader(DEST_ADDR_NPI))__        } else {_            submitSm.setDestAddrNpi(configuration.getDestAddrNpi())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR)) {_            submitSm.setSourceAddr((String) in.getHeader(SOURCE_ADDR))__        } else {_            submitSm.setSourceAddr(configuration.getSourceAddr())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR_TON)) {_            submitSm.setSourceAddrTon((Byte) in.getHeader(SOURCE_ADDR_TON))__        } else {_            submitSm.setSourceAddrTon(configuration.getSourceAddrTon())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR_NPI)) {_            submitSm.setSourceAddrNpi((Byte) in.getHeader(SOURCE_ADDR_NPI))__        } else {_            submitSm.setSourceAddrNpi(configuration.getDestAddrNpi())__        }__        if (in.getHeaders().containsKey(SERVICE_TYPE)) {_            submitSm.setServiceType((String) in.getHeader(SERVICE_TYPE))__        } else {_            submitSm.setServiceType(configuration.getServiceType())__        }__        if (in.getHeaders().containsKey(REGISTERED_DELIVERY)) {_            submitSm.setRegisteredDelivery((Byte) in.getHeader(REGISTERED_DELIVERY))__        } else {_            submitSm.setRegisteredDelivery(configuration.getRegisteredDelivery())__        }__        if (in.getHeaders().containsKey(PROTOCOL_ID)) {_            submitSm.setProtocolId((Byte) in.getHeader(PROTOCOL_ID))__        } else {_            submitSm.setProtocolId(configuration.getProtocolId())__        }__        if (in.getHeaders().containsKey(PRIORITY_FLAG)) {_            submitSm.setPriorityFlag((Byte) in.getHeader(PRIORITY_FLAG))__        } else {_            submitSm.setPriorityFlag(configuration.getPriorityFlag())__        }__        if (in.getHeaders().containsKey(SCHEDULE_DELIVERY_TIME)) {_            submitSm.setScheduleDeliveryTime(timeFormatter.format((Date) in.getHeader(SCHEDULE_DELIVERY_TIME)))__        } else {_            submitSm.setScheduleDeliveryTime(timeFormatter.format(getCurrentDate()))__        }__        if (in.getHeaders().containsKey(VALIDITY_PERIOD)) {_            submitSm.setValidityPeriod(timeFormatter.format((Date) in.getHeader(VALIDITY_PERIOD)))__        }__        if (in.getHeaders().containsKey(REPLACE_IF_PRESENT_FLAG)) {_            submitSm.setReplaceIfPresent((Byte) in.getHeader(REPLACE_IF_PRESENT_FLAG))__        } else {_            submitSm.setReplaceIfPresent(configuration.getReplaceIfPresentFlag())__        }__        return submitSm__    };create,the,submit,sm,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,submit,sm,create,submit,sm,exchange,exchange,throws,unsupported,encoding,exception,message,in,exchange,get,in,submit,sm,submit,sm,new,submit,sm,submit,sm,set,short,message,exchange,get,in,get,body,string,class,get,bytes,configuration,get,encoding,if,in,get,headers,contains,key,submit,sm,set,dest,address,string,in,get,header,else,submit,sm,set,dest,address,configuration,get,dest,addr,if,in,get,headers,contains,key,submit,sm,set,dest,addr,ton,byte,in,get,header,else,submit,sm,set,dest,addr,ton,configuration,get,dest,addr,ton,if,in,get,headers,contains,key,submit,sm,set,dest,addr,npi,byte,in,get,header,else,submit,sm,set,dest,addr,npi,configuration,get,dest,addr,npi,if,in,get,headers,contains,key,submit,sm,set,source,addr,string,in,get,header,else,submit,sm,set,source,addr,configuration,get,source,addr,if,in,get,headers,contains,key,submit,sm,set,source,addr,ton,byte,in,get,header,else,submit,sm,set,source,addr,ton,configuration,get,source,addr,ton,if,in,get,headers,contains,key,submit,sm,set,source,addr,npi,byte,in,get,header,else,submit,sm,set,source,addr,npi,configuration,get,dest,addr,npi,if,in,get,headers,contains,key,submit,sm,set,service,type,string,in,get,header,else,submit,sm,set,service,type,configuration,get,service,type,if,in,get,headers,contains,key,submit,sm,set,registered,delivery,byte,in,get,header,else,submit,sm,set,registered,delivery,configuration,get,registered,delivery,if,in,get,headers,contains,key,submit,sm,set,protocol,id,byte,in,get,header,else,submit,sm,set,protocol,id,configuration,get,protocol,id,if,in,get,headers,contains,key,submit,sm,set,priority,flag,byte,in,get,header,else,submit,sm,set,priority,flag,configuration,get,priority,flag,if,in,get,headers,contains,key,submit,sm,set,schedule,delivery,time,time,formatter,format,date,in,get,header,else,submit,sm,set,schedule,delivery,time,time,formatter,format,get,current,date,if,in,get,headers,contains,key,submit,sm,set,validity,period,time,formatter,format,date,in,get,header,if,in,get,headers,contains,key,submit,sm,set,replace,if,present,byte,in,get,header,else,submit,sm,set,replace,if,present,configuration,get,replace,if,present,flag,return,submit,sm
SmppBinding -> public SubmitSm createSubmitSm(Exchange exchange) throws UnsupportedEncodingException;1272589442;Create the SubmitSm object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SubmitSm createSubmitSm(Exchange exchange) throws UnsupportedEncodingException {_        Message in = exchange.getIn()___        SubmitSm submitSm = new SubmitSm()__        submitSm.setShortMessage(exchange.getIn().getBody(String.class).getBytes(configuration.getEncoding()))___        if (in.getHeaders().containsKey(DEST_ADDR)) {_            submitSm.setDestAddress((String) in.getHeader(DEST_ADDR))__        } else {_            submitSm.setDestAddress(configuration.getDestAddr())__        }__        if (in.getHeaders().containsKey(DEST_ADDR_TON)) {_            submitSm.setDestAddrTon((Byte) in.getHeader(DEST_ADDR_TON))__        } else {_            submitSm.setDestAddrTon(configuration.getDestAddrTon())__        }__        if (in.getHeaders().containsKey(DEST_ADDR_NPI)) {_            submitSm.setDestAddrNpi((Byte) in.getHeader(DEST_ADDR_NPI))__        } else {_            submitSm.setDestAddrNpi(configuration.getDestAddrNpi())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR)) {_            submitSm.setSourceAddr((String) in.getHeader(SOURCE_ADDR))__        } else {_            submitSm.setSourceAddr(configuration.getSourceAddr())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR_TON)) {_            submitSm.setSourceAddrTon((Byte) in.getHeader(SOURCE_ADDR_TON))__        } else {_            submitSm.setSourceAddrTon(configuration.getSourceAddrTon())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR_NPI)) {_            submitSm.setSourceAddrNpi((Byte) in.getHeader(SOURCE_ADDR_NPI))__        } else {_            submitSm.setSourceAddrNpi(configuration.getDestAddrNpi())__        }__        if (in.getHeaders().containsKey(SERVICE_TYPE)) {_            submitSm.setServiceType((String) in.getHeader(SERVICE_TYPE))__        } else {_            submitSm.setServiceType(configuration.getServiceType())__        }__        if (in.getHeaders().containsKey(REGISTERED_DELIVERY)) {_            submitSm.setRegisteredDelivery((Byte) in.getHeader(REGISTERED_DELIVERY))__        } else {_            submitSm.setRegisteredDelivery(configuration.getRegisteredDelivery())__        }__        if (in.getHeaders().containsKey(PROTOCOL_ID)) {_            submitSm.setProtocolId((Byte) in.getHeader(PROTOCOL_ID))__        } else {_            submitSm.setProtocolId(configuration.getProtocolId())__        }__        if (in.getHeaders().containsKey(PRIORITY_FLAG)) {_            submitSm.setPriorityFlag((Byte) in.getHeader(PRIORITY_FLAG))__        } else {_            submitSm.setPriorityFlag(configuration.getPriorityFlag())__        }__        if (in.getHeaders().containsKey(SCHEDULE_DELIVERY_TIME)) {_            submitSm.setScheduleDeliveryTime(timeFormatter.format((Date) in.getHeader(SCHEDULE_DELIVERY_TIME)))__        } __        if (in.getHeaders().containsKey(VALIDITY_PERIOD)) {_            submitSm.setValidityPeriod(timeFormatter.format((Date) in.getHeader(VALIDITY_PERIOD)))__        }__        if (in.getHeaders().containsKey(REPLACE_IF_PRESENT_FLAG)) {_            submitSm.setReplaceIfPresent((Byte) in.getHeader(REPLACE_IF_PRESENT_FLAG))__        } else {_            submitSm.setReplaceIfPresent(configuration.getReplaceIfPresentFlag())__        }__        return submitSm__    };create,the,submit,sm,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,submit,sm,create,submit,sm,exchange,exchange,throws,unsupported,encoding,exception,message,in,exchange,get,in,submit,sm,submit,sm,new,submit,sm,submit,sm,set,short,message,exchange,get,in,get,body,string,class,get,bytes,configuration,get,encoding,if,in,get,headers,contains,key,submit,sm,set,dest,address,string,in,get,header,else,submit,sm,set,dest,address,configuration,get,dest,addr,if,in,get,headers,contains,key,submit,sm,set,dest,addr,ton,byte,in,get,header,else,submit,sm,set,dest,addr,ton,configuration,get,dest,addr,ton,if,in,get,headers,contains,key,submit,sm,set,dest,addr,npi,byte,in,get,header,else,submit,sm,set,dest,addr,npi,configuration,get,dest,addr,npi,if,in,get,headers,contains,key,submit,sm,set,source,addr,string,in,get,header,else,submit,sm,set,source,addr,configuration,get,source,addr,if,in,get,headers,contains,key,submit,sm,set,source,addr,ton,byte,in,get,header,else,submit,sm,set,source,addr,ton,configuration,get,source,addr,ton,if,in,get,headers,contains,key,submit,sm,set,source,addr,npi,byte,in,get,header,else,submit,sm,set,source,addr,npi,configuration,get,dest,addr,npi,if,in,get,headers,contains,key,submit,sm,set,service,type,string,in,get,header,else,submit,sm,set,service,type,configuration,get,service,type,if,in,get,headers,contains,key,submit,sm,set,registered,delivery,byte,in,get,header,else,submit,sm,set,registered,delivery,configuration,get,registered,delivery,if,in,get,headers,contains,key,submit,sm,set,protocol,id,byte,in,get,header,else,submit,sm,set,protocol,id,configuration,get,protocol,id,if,in,get,headers,contains,key,submit,sm,set,priority,flag,byte,in,get,header,else,submit,sm,set,priority,flag,configuration,get,priority,flag,if,in,get,headers,contains,key,submit,sm,set,schedule,delivery,time,time,formatter,format,date,in,get,header,if,in,get,headers,contains,key,submit,sm,set,validity,period,time,formatter,format,date,in,get,header,if,in,get,headers,contains,key,submit,sm,set,replace,if,present,byte,in,get,header,else,submit,sm,set,replace,if,present,configuration,get,replace,if,present,flag,return,submit,sm
SmppBinding -> public SubmitSm createSubmitSm(Exchange exchange) throws UnsupportedEncodingException;1274230707;Create the SubmitSm object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SubmitSm createSubmitSm(Exchange exchange) throws UnsupportedEncodingException {_        Message in = exchange.getIn()___        SubmitSm submitSm = new SubmitSm()__        submitSm.setShortMessage(exchange.getIn().getBody(String.class).getBytes(configuration.getEncoding()))___        if (in.getHeaders().containsKey(DEST_ADDR)) {_            submitSm.setDestAddress((String) in.getHeader(DEST_ADDR))__        } else {_            submitSm.setDestAddress(configuration.getDestAddr())__        }__        if (in.getHeaders().containsKey(DEST_ADDR_TON)) {_            submitSm.setDestAddrTon((Byte) in.getHeader(DEST_ADDR_TON))__        } else {_            submitSm.setDestAddrTon(configuration.getDestAddrTon())__        }__        if (in.getHeaders().containsKey(DEST_ADDR_NPI)) {_            submitSm.setDestAddrNpi((Byte) in.getHeader(DEST_ADDR_NPI))__        } else {_            submitSm.setDestAddrNpi(configuration.getDestAddrNpi())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR)) {_            submitSm.setSourceAddr((String) in.getHeader(SOURCE_ADDR))__        } else {_            submitSm.setSourceAddr(configuration.getSourceAddr())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR_TON)) {_            submitSm.setSourceAddrTon((Byte) in.getHeader(SOURCE_ADDR_TON))__        } else {_            submitSm.setSourceAddrTon(configuration.getSourceAddrTon())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR_NPI)) {_            submitSm.setSourceAddrNpi((Byte) in.getHeader(SOURCE_ADDR_NPI))__        } else {_            submitSm.setSourceAddrNpi(configuration.getDestAddrNpi())__        }__        if (in.getHeaders().containsKey(SERVICE_TYPE)) {_            submitSm.setServiceType((String) in.getHeader(SERVICE_TYPE))__        } else {_            submitSm.setServiceType(configuration.getServiceType())__        }__        if (in.getHeaders().containsKey(REGISTERED_DELIVERY)) {_            submitSm.setRegisteredDelivery((Byte) in.getHeader(REGISTERED_DELIVERY))__        } else {_            submitSm.setRegisteredDelivery(configuration.getRegisteredDelivery())__        }__        if (in.getHeaders().containsKey(PROTOCOL_ID)) {_            submitSm.setProtocolId((Byte) in.getHeader(PROTOCOL_ID))__        } else {_            submitSm.setProtocolId(configuration.getProtocolId())__        }__        if (in.getHeaders().containsKey(PRIORITY_FLAG)) {_            submitSm.setPriorityFlag((Byte) in.getHeader(PRIORITY_FLAG))__        } else {_            submitSm.setPriorityFlag(configuration.getPriorityFlag())__        }__        if (in.getHeaders().containsKey(SCHEDULE_DELIVERY_TIME)) {_            submitSm.setScheduleDeliveryTime(timeFormatter.format((Date) in.getHeader(SCHEDULE_DELIVERY_TIME)))__        } __        if (in.getHeaders().containsKey(VALIDITY_PERIOD)) {_            submitSm.setValidityPeriod(timeFormatter.format((Date) in.getHeader(VALIDITY_PERIOD)))__        }__        if (in.getHeaders().containsKey(REPLACE_IF_PRESENT_FLAG)) {_            submitSm.setReplaceIfPresent((Byte) in.getHeader(REPLACE_IF_PRESENT_FLAG))__        } else {_            submitSm.setReplaceIfPresent(configuration.getReplaceIfPresentFlag())__        }__        return submitSm__    };create,the,submit,sm,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,submit,sm,create,submit,sm,exchange,exchange,throws,unsupported,encoding,exception,message,in,exchange,get,in,submit,sm,submit,sm,new,submit,sm,submit,sm,set,short,message,exchange,get,in,get,body,string,class,get,bytes,configuration,get,encoding,if,in,get,headers,contains,key,submit,sm,set,dest,address,string,in,get,header,else,submit,sm,set,dest,address,configuration,get,dest,addr,if,in,get,headers,contains,key,submit,sm,set,dest,addr,ton,byte,in,get,header,else,submit,sm,set,dest,addr,ton,configuration,get,dest,addr,ton,if,in,get,headers,contains,key,submit,sm,set,dest,addr,npi,byte,in,get,header,else,submit,sm,set,dest,addr,npi,configuration,get,dest,addr,npi,if,in,get,headers,contains,key,submit,sm,set,source,addr,string,in,get,header,else,submit,sm,set,source,addr,configuration,get,source,addr,if,in,get,headers,contains,key,submit,sm,set,source,addr,ton,byte,in,get,header,else,submit,sm,set,source,addr,ton,configuration,get,source,addr,ton,if,in,get,headers,contains,key,submit,sm,set,source,addr,npi,byte,in,get,header,else,submit,sm,set,source,addr,npi,configuration,get,dest,addr,npi,if,in,get,headers,contains,key,submit,sm,set,service,type,string,in,get,header,else,submit,sm,set,service,type,configuration,get,service,type,if,in,get,headers,contains,key,submit,sm,set,registered,delivery,byte,in,get,header,else,submit,sm,set,registered,delivery,configuration,get,registered,delivery,if,in,get,headers,contains,key,submit,sm,set,protocol,id,byte,in,get,header,else,submit,sm,set,protocol,id,configuration,get,protocol,id,if,in,get,headers,contains,key,submit,sm,set,priority,flag,byte,in,get,header,else,submit,sm,set,priority,flag,configuration,get,priority,flag,if,in,get,headers,contains,key,submit,sm,set,schedule,delivery,time,time,formatter,format,date,in,get,header,if,in,get,headers,contains,key,submit,sm,set,validity,period,time,formatter,format,date,in,get,header,if,in,get,headers,contains,key,submit,sm,set,replace,if,present,byte,in,get,header,else,submit,sm,set,replace,if,present,configuration,get,replace,if,present,flag,return,submit,sm
SmppBinding -> public SubmitSm createSubmitSm(Exchange exchange) throws UnsupportedEncodingException;1276431904;Create the SubmitSm object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SubmitSm createSubmitSm(Exchange exchange) throws UnsupportedEncodingException {_        Message in = exchange.getIn()___        SubmitSm submitSm = new SubmitSm()__        submitSm.setShortMessage(exchange.getIn().getBody(String.class).getBytes(configuration.getEncoding()))___        if (in.getHeaders().containsKey(DEST_ADDR)) {_            submitSm.setDestAddress((String) in.getHeader(DEST_ADDR))__        } else {_            submitSm.setDestAddress(configuration.getDestAddr())__        }__        if (in.getHeaders().containsKey(DEST_ADDR_TON)) {_            submitSm.setDestAddrTon((Byte) in.getHeader(DEST_ADDR_TON))__        } else {_            submitSm.setDestAddrTon(configuration.getDestAddrTon())__        }__        if (in.getHeaders().containsKey(DEST_ADDR_NPI)) {_            submitSm.setDestAddrNpi((Byte) in.getHeader(DEST_ADDR_NPI))__        } else {_            submitSm.setDestAddrNpi(configuration.getDestAddrNpi())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR)) {_            submitSm.setSourceAddr((String) in.getHeader(SOURCE_ADDR))__        } else {_            submitSm.setSourceAddr(configuration.getSourceAddr())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR_TON)) {_            submitSm.setSourceAddrTon((Byte) in.getHeader(SOURCE_ADDR_TON))__        } else {_            submitSm.setSourceAddrTon(configuration.getSourceAddrTon())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR_NPI)) {_            submitSm.setSourceAddrNpi((Byte) in.getHeader(SOURCE_ADDR_NPI))__        } else {_            submitSm.setSourceAddrNpi(configuration.getDestAddrNpi())__        }__        if (in.getHeaders().containsKey(SERVICE_TYPE)) {_            submitSm.setServiceType((String) in.getHeader(SERVICE_TYPE))__        } else {_            submitSm.setServiceType(configuration.getServiceType())__        }__        if (in.getHeaders().containsKey(REGISTERED_DELIVERY)) {_            submitSm.setRegisteredDelivery((Byte) in.getHeader(REGISTERED_DELIVERY))__        } else {_            submitSm.setRegisteredDelivery(configuration.getRegisteredDelivery())__        }__        if (in.getHeaders().containsKey(PROTOCOL_ID)) {_            submitSm.setProtocolId((Byte) in.getHeader(PROTOCOL_ID))__        } else {_            submitSm.setProtocolId(configuration.getProtocolId())__        }__        if (in.getHeaders().containsKey(PRIORITY_FLAG)) {_            submitSm.setPriorityFlag((Byte) in.getHeader(PRIORITY_FLAG))__        } else {_            submitSm.setPriorityFlag(configuration.getPriorityFlag())__        }__        if (in.getHeaders().containsKey(SCHEDULE_DELIVERY_TIME)) {_            submitSm.setScheduleDeliveryTime(timeFormatter.format((Date) in.getHeader(SCHEDULE_DELIVERY_TIME)))__        } __        if (in.getHeaders().containsKey(VALIDITY_PERIOD)) {_            submitSm.setValidityPeriod(timeFormatter.format((Date) in.getHeader(VALIDITY_PERIOD)))__        }__        if (in.getHeaders().containsKey(REPLACE_IF_PRESENT_FLAG)) {_            submitSm.setReplaceIfPresent((Byte) in.getHeader(REPLACE_IF_PRESENT_FLAG))__        } else {_            submitSm.setReplaceIfPresent(configuration.getReplaceIfPresentFlag())__        }__        return submitSm__    };create,the,submit,sm,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,submit,sm,create,submit,sm,exchange,exchange,throws,unsupported,encoding,exception,message,in,exchange,get,in,submit,sm,submit,sm,new,submit,sm,submit,sm,set,short,message,exchange,get,in,get,body,string,class,get,bytes,configuration,get,encoding,if,in,get,headers,contains,key,submit,sm,set,dest,address,string,in,get,header,else,submit,sm,set,dest,address,configuration,get,dest,addr,if,in,get,headers,contains,key,submit,sm,set,dest,addr,ton,byte,in,get,header,else,submit,sm,set,dest,addr,ton,configuration,get,dest,addr,ton,if,in,get,headers,contains,key,submit,sm,set,dest,addr,npi,byte,in,get,header,else,submit,sm,set,dest,addr,npi,configuration,get,dest,addr,npi,if,in,get,headers,contains,key,submit,sm,set,source,addr,string,in,get,header,else,submit,sm,set,source,addr,configuration,get,source,addr,if,in,get,headers,contains,key,submit,sm,set,source,addr,ton,byte,in,get,header,else,submit,sm,set,source,addr,ton,configuration,get,source,addr,ton,if,in,get,headers,contains,key,submit,sm,set,source,addr,npi,byte,in,get,header,else,submit,sm,set,source,addr,npi,configuration,get,dest,addr,npi,if,in,get,headers,contains,key,submit,sm,set,service,type,string,in,get,header,else,submit,sm,set,service,type,configuration,get,service,type,if,in,get,headers,contains,key,submit,sm,set,registered,delivery,byte,in,get,header,else,submit,sm,set,registered,delivery,configuration,get,registered,delivery,if,in,get,headers,contains,key,submit,sm,set,protocol,id,byte,in,get,header,else,submit,sm,set,protocol,id,configuration,get,protocol,id,if,in,get,headers,contains,key,submit,sm,set,priority,flag,byte,in,get,header,else,submit,sm,set,priority,flag,configuration,get,priority,flag,if,in,get,headers,contains,key,submit,sm,set,schedule,delivery,time,time,formatter,format,date,in,get,header,if,in,get,headers,contains,key,submit,sm,set,validity,period,time,formatter,format,date,in,get,header,if,in,get,headers,contains,key,submit,sm,set,replace,if,present,byte,in,get,header,else,submit,sm,set,replace,if,present,configuration,get,replace,if,present,flag,return,submit,sm
SmppBinding -> public SubmitSm createSubmitSm(Exchange exchange) throws UnsupportedEncodingException;1283289848;Create the SubmitSm object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SubmitSm createSubmitSm(Exchange exchange) throws UnsupportedEncodingException {_        Message in = exchange.getIn()___        SubmitSm submitSm = new SubmitSm()__        submitSm.setShortMessage(exchange.getIn().getBody(String.class).getBytes(configuration.getEncoding()))___        if (in.getHeaders().containsKey(DEST_ADDR)) {_            submitSm.setDestAddress((String) in.getHeader(DEST_ADDR))__        } else {_            submitSm.setDestAddress(configuration.getDestAddr())__        }__        if (in.getHeaders().containsKey(DEST_ADDR_TON)) {_            submitSm.setDestAddrTon((Byte) in.getHeader(DEST_ADDR_TON))__        } else {_            submitSm.setDestAddrTon(configuration.getDestAddrTon())__        }__        if (in.getHeaders().containsKey(DEST_ADDR_NPI)) {_            submitSm.setDestAddrNpi((Byte) in.getHeader(DEST_ADDR_NPI))__        } else {_            submitSm.setDestAddrNpi(configuration.getDestAddrNpi())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR)) {_            submitSm.setSourceAddr((String) in.getHeader(SOURCE_ADDR))__        } else {_            submitSm.setSourceAddr(configuration.getSourceAddr())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR_TON)) {_            submitSm.setSourceAddrTon((Byte) in.getHeader(SOURCE_ADDR_TON))__        } else {_            submitSm.setSourceAddrTon(configuration.getSourceAddrTon())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR_NPI)) {_            submitSm.setSourceAddrNpi((Byte) in.getHeader(SOURCE_ADDR_NPI))__        } else {_            submitSm.setSourceAddrNpi(configuration.getDestAddrNpi())__        }__        if (in.getHeaders().containsKey(SERVICE_TYPE)) {_            submitSm.setServiceType((String) in.getHeader(SERVICE_TYPE))__        } else {_            submitSm.setServiceType(configuration.getServiceType())__        }__        if (in.getHeaders().containsKey(REGISTERED_DELIVERY)) {_            submitSm.setRegisteredDelivery((Byte) in.getHeader(REGISTERED_DELIVERY))__        } else {_            submitSm.setRegisteredDelivery(configuration.getRegisteredDelivery())__        }__        if (in.getHeaders().containsKey(PROTOCOL_ID)) {_            submitSm.setProtocolId((Byte) in.getHeader(PROTOCOL_ID))__        } else {_            submitSm.setProtocolId(configuration.getProtocolId())__        }__        if (in.getHeaders().containsKey(PRIORITY_FLAG)) {_            submitSm.setPriorityFlag((Byte) in.getHeader(PRIORITY_FLAG))__        } else {_            submitSm.setPriorityFlag(configuration.getPriorityFlag())__        }__        if (in.getHeaders().containsKey(SCHEDULE_DELIVERY_TIME)) {_            submitSm.setScheduleDeliveryTime(timeFormatter.format((Date) in.getHeader(SCHEDULE_DELIVERY_TIME)))__        } __        if (in.getHeaders().containsKey(VALIDITY_PERIOD)) {_            submitSm.setValidityPeriod(timeFormatter.format((Date) in.getHeader(VALIDITY_PERIOD)))__        }__        if (in.getHeaders().containsKey(REPLACE_IF_PRESENT_FLAG)) {_            submitSm.setReplaceIfPresent((Byte) in.getHeader(REPLACE_IF_PRESENT_FLAG))__        } else {_            submitSm.setReplaceIfPresent(configuration.getReplaceIfPresentFlag())__        }_        _        if (in.getHeaders().containsKey(DATA_CODING)) {_            System.out.println("1")__            submitSm.setDataCoding((Byte) in.getHeader(DATA_CODING))__        } else {_            System.out.println("2")__            submitSm.setDataCoding(configuration.getDataCoding())__        }__        return submitSm__    };create,the,submit,sm,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,submit,sm,create,submit,sm,exchange,exchange,throws,unsupported,encoding,exception,message,in,exchange,get,in,submit,sm,submit,sm,new,submit,sm,submit,sm,set,short,message,exchange,get,in,get,body,string,class,get,bytes,configuration,get,encoding,if,in,get,headers,contains,key,submit,sm,set,dest,address,string,in,get,header,else,submit,sm,set,dest,address,configuration,get,dest,addr,if,in,get,headers,contains,key,submit,sm,set,dest,addr,ton,byte,in,get,header,else,submit,sm,set,dest,addr,ton,configuration,get,dest,addr,ton,if,in,get,headers,contains,key,submit,sm,set,dest,addr,npi,byte,in,get,header,else,submit,sm,set,dest,addr,npi,configuration,get,dest,addr,npi,if,in,get,headers,contains,key,submit,sm,set,source,addr,string,in,get,header,else,submit,sm,set,source,addr,configuration,get,source,addr,if,in,get,headers,contains,key,submit,sm,set,source,addr,ton,byte,in,get,header,else,submit,sm,set,source,addr,ton,configuration,get,source,addr,ton,if,in,get,headers,contains,key,submit,sm,set,source,addr,npi,byte,in,get,header,else,submit,sm,set,source,addr,npi,configuration,get,dest,addr,npi,if,in,get,headers,contains,key,submit,sm,set,service,type,string,in,get,header,else,submit,sm,set,service,type,configuration,get,service,type,if,in,get,headers,contains,key,submit,sm,set,registered,delivery,byte,in,get,header,else,submit,sm,set,registered,delivery,configuration,get,registered,delivery,if,in,get,headers,contains,key,submit,sm,set,protocol,id,byte,in,get,header,else,submit,sm,set,protocol,id,configuration,get,protocol,id,if,in,get,headers,contains,key,submit,sm,set,priority,flag,byte,in,get,header,else,submit,sm,set,priority,flag,configuration,get,priority,flag,if,in,get,headers,contains,key,submit,sm,set,schedule,delivery,time,time,formatter,format,date,in,get,header,if,in,get,headers,contains,key,submit,sm,set,validity,period,time,formatter,format,date,in,get,header,if,in,get,headers,contains,key,submit,sm,set,replace,if,present,byte,in,get,header,else,submit,sm,set,replace,if,present,configuration,get,replace,if,present,flag,if,in,get,headers,contains,key,system,out,println,1,submit,sm,set,data,coding,byte,in,get,header,else,system,out,println,2,submit,sm,set,data,coding,configuration,get,data,coding,return,submit,sm
SmppBinding -> public SubmitSm createSubmitSm(Exchange exchange) throws UnsupportedEncodingException;1283800169;Create the SubmitSm object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SubmitSm createSubmitSm(Exchange exchange) throws UnsupportedEncodingException {_        Message in = exchange.getIn()___        SubmitSm submitSm = new SubmitSm()__        submitSm.setShortMessage(exchange.getIn().getBody(String.class).getBytes(configuration.getEncoding()))___        if (in.getHeaders().containsKey(DEST_ADDR)) {_            submitSm.setDestAddress((String) in.getHeader(DEST_ADDR))__        } else {_            submitSm.setDestAddress(configuration.getDestAddr())__        }__        if (in.getHeaders().containsKey(DEST_ADDR_TON)) {_            submitSm.setDestAddrTon((Byte) in.getHeader(DEST_ADDR_TON))__        } else {_            submitSm.setDestAddrTon(configuration.getDestAddrTon())__        }__        if (in.getHeaders().containsKey(DEST_ADDR_NPI)) {_            submitSm.setDestAddrNpi((Byte) in.getHeader(DEST_ADDR_NPI))__        } else {_            submitSm.setDestAddrNpi(configuration.getDestAddrNpi())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR)) {_            submitSm.setSourceAddr((String) in.getHeader(SOURCE_ADDR))__        } else {_            submitSm.setSourceAddr(configuration.getSourceAddr())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR_TON)) {_            submitSm.setSourceAddrTon((Byte) in.getHeader(SOURCE_ADDR_TON))__        } else {_            submitSm.setSourceAddrTon(configuration.getSourceAddrTon())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR_NPI)) {_            submitSm.setSourceAddrNpi((Byte) in.getHeader(SOURCE_ADDR_NPI))__        } else {_            submitSm.setSourceAddrNpi(configuration.getSourceAddrNpi())__        }__        if (in.getHeaders().containsKey(SERVICE_TYPE)) {_            submitSm.setServiceType((String) in.getHeader(SERVICE_TYPE))__        } else {_            submitSm.setServiceType(configuration.getServiceType())__        }__        if (in.getHeaders().containsKey(REGISTERED_DELIVERY)) {_            submitSm.setRegisteredDelivery((Byte) in.getHeader(REGISTERED_DELIVERY))__        } else {_            submitSm.setRegisteredDelivery(configuration.getRegisteredDelivery())__        }__        if (in.getHeaders().containsKey(PROTOCOL_ID)) {_            submitSm.setProtocolId((Byte) in.getHeader(PROTOCOL_ID))__        } else {_            submitSm.setProtocolId(configuration.getProtocolId())__        }__        if (in.getHeaders().containsKey(PRIORITY_FLAG)) {_            submitSm.setPriorityFlag((Byte) in.getHeader(PRIORITY_FLAG))__        } else {_            submitSm.setPriorityFlag(configuration.getPriorityFlag())__        }__        if (in.getHeaders().containsKey(SCHEDULE_DELIVERY_TIME)) {_            submitSm.setScheduleDeliveryTime(timeFormatter.format((Date) in.getHeader(SCHEDULE_DELIVERY_TIME)))__        } __        if (in.getHeaders().containsKey(VALIDITY_PERIOD)) {_            submitSm.setValidityPeriod(timeFormatter.format((Date) in.getHeader(VALIDITY_PERIOD)))__        }__        if (in.getHeaders().containsKey(REPLACE_IF_PRESENT_FLAG)) {_            submitSm.setReplaceIfPresent((Byte) in.getHeader(REPLACE_IF_PRESENT_FLAG))__        } else {_            submitSm.setReplaceIfPresent(configuration.getReplaceIfPresentFlag())__        }_        _        if (in.getHeaders().containsKey(DATA_CODING)) {_            System.out.println("1")__            submitSm.setDataCoding((Byte) in.getHeader(DATA_CODING))__        } else {_            System.out.println("2")__            submitSm.setDataCoding(configuration.getDataCoding())__        }__        return submitSm__    };create,the,submit,sm,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,submit,sm,create,submit,sm,exchange,exchange,throws,unsupported,encoding,exception,message,in,exchange,get,in,submit,sm,submit,sm,new,submit,sm,submit,sm,set,short,message,exchange,get,in,get,body,string,class,get,bytes,configuration,get,encoding,if,in,get,headers,contains,key,submit,sm,set,dest,address,string,in,get,header,else,submit,sm,set,dest,address,configuration,get,dest,addr,if,in,get,headers,contains,key,submit,sm,set,dest,addr,ton,byte,in,get,header,else,submit,sm,set,dest,addr,ton,configuration,get,dest,addr,ton,if,in,get,headers,contains,key,submit,sm,set,dest,addr,npi,byte,in,get,header,else,submit,sm,set,dest,addr,npi,configuration,get,dest,addr,npi,if,in,get,headers,contains,key,submit,sm,set,source,addr,string,in,get,header,else,submit,sm,set,source,addr,configuration,get,source,addr,if,in,get,headers,contains,key,submit,sm,set,source,addr,ton,byte,in,get,header,else,submit,sm,set,source,addr,ton,configuration,get,source,addr,ton,if,in,get,headers,contains,key,submit,sm,set,source,addr,npi,byte,in,get,header,else,submit,sm,set,source,addr,npi,configuration,get,source,addr,npi,if,in,get,headers,contains,key,submit,sm,set,service,type,string,in,get,header,else,submit,sm,set,service,type,configuration,get,service,type,if,in,get,headers,contains,key,submit,sm,set,registered,delivery,byte,in,get,header,else,submit,sm,set,registered,delivery,configuration,get,registered,delivery,if,in,get,headers,contains,key,submit,sm,set,protocol,id,byte,in,get,header,else,submit,sm,set,protocol,id,configuration,get,protocol,id,if,in,get,headers,contains,key,submit,sm,set,priority,flag,byte,in,get,header,else,submit,sm,set,priority,flag,configuration,get,priority,flag,if,in,get,headers,contains,key,submit,sm,set,schedule,delivery,time,time,formatter,format,date,in,get,header,if,in,get,headers,contains,key,submit,sm,set,validity,period,time,formatter,format,date,in,get,header,if,in,get,headers,contains,key,submit,sm,set,replace,if,present,byte,in,get,header,else,submit,sm,set,replace,if,present,configuration,get,replace,if,present,flag,if,in,get,headers,contains,key,system,out,println,1,submit,sm,set,data,coding,byte,in,get,header,else,system,out,println,2,submit,sm,set,data,coding,configuration,get,data,coding,return,submit,sm
SmppBinding -> public SubmitSm createSubmitSm(Exchange exchange) throws UnsupportedEncodingException;1289258847;Create the SubmitSm object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SubmitSm createSubmitSm(Exchange exchange) throws UnsupportedEncodingException {_        Message in = exchange.getIn()___        SubmitSm submitSm = new SubmitSm()__        submitSm.setShortMessage(exchange.getIn().getBody(String.class).getBytes(configuration.getEncoding()))___        if (in.getHeaders().containsKey(DEST_ADDR)) {_            submitSm.setDestAddress((String) in.getHeader(DEST_ADDR))__        } else {_            submitSm.setDestAddress(configuration.getDestAddr())__        }__        if (in.getHeaders().containsKey(DEST_ADDR_TON)) {_            submitSm.setDestAddrTon((Byte) in.getHeader(DEST_ADDR_TON))__        } else {_            submitSm.setDestAddrTon(configuration.getDestAddrTon())__        }__        if (in.getHeaders().containsKey(DEST_ADDR_NPI)) {_            submitSm.setDestAddrNpi((Byte) in.getHeader(DEST_ADDR_NPI))__        } else {_            submitSm.setDestAddrNpi(configuration.getDestAddrNpi())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR)) {_            submitSm.setSourceAddr((String) in.getHeader(SOURCE_ADDR))__        } else {_            submitSm.setSourceAddr(configuration.getSourceAddr())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR_TON)) {_            submitSm.setSourceAddrTon((Byte) in.getHeader(SOURCE_ADDR_TON))__        } else {_            submitSm.setSourceAddrTon(configuration.getSourceAddrTon())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR_NPI)) {_            submitSm.setSourceAddrNpi((Byte) in.getHeader(SOURCE_ADDR_NPI))__        } else {_            submitSm.setSourceAddrNpi(configuration.getSourceAddrNpi())__        }__        if (in.getHeaders().containsKey(SERVICE_TYPE)) {_            submitSm.setServiceType((String) in.getHeader(SERVICE_TYPE))__        } else {_            submitSm.setServiceType(configuration.getServiceType())__        }__        if (in.getHeaders().containsKey(REGISTERED_DELIVERY)) {_            submitSm.setRegisteredDelivery((Byte) in.getHeader(REGISTERED_DELIVERY))__        } else {_            submitSm.setRegisteredDelivery(configuration.getRegisteredDelivery())__        }__        if (in.getHeaders().containsKey(PROTOCOL_ID)) {_            submitSm.setProtocolId((Byte) in.getHeader(PROTOCOL_ID))__        } else {_            submitSm.setProtocolId(configuration.getProtocolId())__        }__        if (in.getHeaders().containsKey(PRIORITY_FLAG)) {_            submitSm.setPriorityFlag((Byte) in.getHeader(PRIORITY_FLAG))__        } else {_            submitSm.setPriorityFlag(configuration.getPriorityFlag())__        }__        if (in.getHeaders().containsKey(SCHEDULE_DELIVERY_TIME)) {_            submitSm.setScheduleDeliveryTime(timeFormatter.format((Date) in.getHeader(SCHEDULE_DELIVERY_TIME)))__        } __        if (in.getHeaders().containsKey(VALIDITY_PERIOD)) {_            submitSm.setValidityPeriod(timeFormatter.format((Date) in.getHeader(VALIDITY_PERIOD)))__        }__        if (in.getHeaders().containsKey(REPLACE_IF_PRESENT_FLAG)) {_            submitSm.setReplaceIfPresent((Byte) in.getHeader(REPLACE_IF_PRESENT_FLAG))__        } else {_            submitSm.setReplaceIfPresent(configuration.getReplaceIfPresentFlag())__        }_        _        if (in.getHeaders().containsKey(DATA_CODING)) {_            System.out.println("1")__            submitSm.setDataCoding((Byte) in.getHeader(DATA_CODING))__        } else {_            System.out.println("2")__            submitSm.setDataCoding(configuration.getDataCoding())__        }__        return submitSm__    };create,the,submit,sm,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,submit,sm,create,submit,sm,exchange,exchange,throws,unsupported,encoding,exception,message,in,exchange,get,in,submit,sm,submit,sm,new,submit,sm,submit,sm,set,short,message,exchange,get,in,get,body,string,class,get,bytes,configuration,get,encoding,if,in,get,headers,contains,key,submit,sm,set,dest,address,string,in,get,header,else,submit,sm,set,dest,address,configuration,get,dest,addr,if,in,get,headers,contains,key,submit,sm,set,dest,addr,ton,byte,in,get,header,else,submit,sm,set,dest,addr,ton,configuration,get,dest,addr,ton,if,in,get,headers,contains,key,submit,sm,set,dest,addr,npi,byte,in,get,header,else,submit,sm,set,dest,addr,npi,configuration,get,dest,addr,npi,if,in,get,headers,contains,key,submit,sm,set,source,addr,string,in,get,header,else,submit,sm,set,source,addr,configuration,get,source,addr,if,in,get,headers,contains,key,submit,sm,set,source,addr,ton,byte,in,get,header,else,submit,sm,set,source,addr,ton,configuration,get,source,addr,ton,if,in,get,headers,contains,key,submit,sm,set,source,addr,npi,byte,in,get,header,else,submit,sm,set,source,addr,npi,configuration,get,source,addr,npi,if,in,get,headers,contains,key,submit,sm,set,service,type,string,in,get,header,else,submit,sm,set,service,type,configuration,get,service,type,if,in,get,headers,contains,key,submit,sm,set,registered,delivery,byte,in,get,header,else,submit,sm,set,registered,delivery,configuration,get,registered,delivery,if,in,get,headers,contains,key,submit,sm,set,protocol,id,byte,in,get,header,else,submit,sm,set,protocol,id,configuration,get,protocol,id,if,in,get,headers,contains,key,submit,sm,set,priority,flag,byte,in,get,header,else,submit,sm,set,priority,flag,configuration,get,priority,flag,if,in,get,headers,contains,key,submit,sm,set,schedule,delivery,time,time,formatter,format,date,in,get,header,if,in,get,headers,contains,key,submit,sm,set,validity,period,time,formatter,format,date,in,get,header,if,in,get,headers,contains,key,submit,sm,set,replace,if,present,byte,in,get,header,else,submit,sm,set,replace,if,present,configuration,get,replace,if,present,flag,if,in,get,headers,contains,key,system,out,println,1,submit,sm,set,data,coding,byte,in,get,header,else,system,out,println,2,submit,sm,set,data,coding,configuration,get,data,coding,return,submit,sm
SmppBinding -> public SubmitSm createSubmitSm(Exchange exchange) throws UnsupportedEncodingException;1293907120;Create the SubmitSm object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SubmitSm createSubmitSm(Exchange exchange) throws UnsupportedEncodingException {_        Message in = exchange.getIn()___        SubmitSm submitSm = new SubmitSm()__        submitSm.setShortMessage(exchange.getIn().getBody(String.class).getBytes(configuration.getEncoding()))___        if (in.getHeaders().containsKey(DEST_ADDR)) {_            submitSm.setDestAddress((String) in.getHeader(DEST_ADDR))__        } else {_            submitSm.setDestAddress(configuration.getDestAddr())__        }__        if (in.getHeaders().containsKey(DEST_ADDR_TON)) {_            submitSm.setDestAddrTon((Byte) in.getHeader(DEST_ADDR_TON))__        } else {_            submitSm.setDestAddrTon(configuration.getDestAddrTon())__        }__        if (in.getHeaders().containsKey(DEST_ADDR_NPI)) {_            submitSm.setDestAddrNpi((Byte) in.getHeader(DEST_ADDR_NPI))__        } else {_            submitSm.setDestAddrNpi(configuration.getDestAddrNpi())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR)) {_            submitSm.setSourceAddr((String) in.getHeader(SOURCE_ADDR))__        } else {_            submitSm.setSourceAddr(configuration.getSourceAddr())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR_TON)) {_            submitSm.setSourceAddrTon((Byte) in.getHeader(SOURCE_ADDR_TON))__        } else {_            submitSm.setSourceAddrTon(configuration.getSourceAddrTon())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR_NPI)) {_            submitSm.setSourceAddrNpi((Byte) in.getHeader(SOURCE_ADDR_NPI))__        } else {_            submitSm.setSourceAddrNpi(configuration.getSourceAddrNpi())__        }__        if (in.getHeaders().containsKey(SERVICE_TYPE)) {_            submitSm.setServiceType((String) in.getHeader(SERVICE_TYPE))__        } else {_            submitSm.setServiceType(configuration.getServiceType())__        }__        if (in.getHeaders().containsKey(REGISTERED_DELIVERY)) {_            submitSm.setRegisteredDelivery((Byte) in.getHeader(REGISTERED_DELIVERY))__        } else {_            submitSm.setRegisteredDelivery(configuration.getRegisteredDelivery())__        }__        if (in.getHeaders().containsKey(PROTOCOL_ID)) {_            submitSm.setProtocolId((Byte) in.getHeader(PROTOCOL_ID))__        } else {_            submitSm.setProtocolId(configuration.getProtocolId())__        }__        if (in.getHeaders().containsKey(PRIORITY_FLAG)) {_            submitSm.setPriorityFlag((Byte) in.getHeader(PRIORITY_FLAG))__        } else {_            submitSm.setPriorityFlag(configuration.getPriorityFlag())__        }__        if (in.getHeaders().containsKey(SCHEDULE_DELIVERY_TIME)) {_            submitSm.setScheduleDeliveryTime(timeFormatter.format((Date) in.getHeader(SCHEDULE_DELIVERY_TIME)))__        } __        if (in.getHeaders().containsKey(VALIDITY_PERIOD)) {_            submitSm.setValidityPeriod(timeFormatter.format((Date) in.getHeader(VALIDITY_PERIOD)))__        }__        if (in.getHeaders().containsKey(REPLACE_IF_PRESENT_FLAG)) {_            submitSm.setReplaceIfPresent((Byte) in.getHeader(REPLACE_IF_PRESENT_FLAG))__        } else {_            submitSm.setReplaceIfPresent(configuration.getReplaceIfPresentFlag())__        }_        _        if (in.getHeaders().containsKey(DATA_CODING)) {_            System.out.println("1")__            submitSm.setDataCoding((Byte) in.getHeader(DATA_CODING))__        } else {_            System.out.println("2")__            submitSm.setDataCoding(configuration.getDataCoding())__        }__        return submitSm__    };create,the,submit,sm,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,submit,sm,create,submit,sm,exchange,exchange,throws,unsupported,encoding,exception,message,in,exchange,get,in,submit,sm,submit,sm,new,submit,sm,submit,sm,set,short,message,exchange,get,in,get,body,string,class,get,bytes,configuration,get,encoding,if,in,get,headers,contains,key,submit,sm,set,dest,address,string,in,get,header,else,submit,sm,set,dest,address,configuration,get,dest,addr,if,in,get,headers,contains,key,submit,sm,set,dest,addr,ton,byte,in,get,header,else,submit,sm,set,dest,addr,ton,configuration,get,dest,addr,ton,if,in,get,headers,contains,key,submit,sm,set,dest,addr,npi,byte,in,get,header,else,submit,sm,set,dest,addr,npi,configuration,get,dest,addr,npi,if,in,get,headers,contains,key,submit,sm,set,source,addr,string,in,get,header,else,submit,sm,set,source,addr,configuration,get,source,addr,if,in,get,headers,contains,key,submit,sm,set,source,addr,ton,byte,in,get,header,else,submit,sm,set,source,addr,ton,configuration,get,source,addr,ton,if,in,get,headers,contains,key,submit,sm,set,source,addr,npi,byte,in,get,header,else,submit,sm,set,source,addr,npi,configuration,get,source,addr,npi,if,in,get,headers,contains,key,submit,sm,set,service,type,string,in,get,header,else,submit,sm,set,service,type,configuration,get,service,type,if,in,get,headers,contains,key,submit,sm,set,registered,delivery,byte,in,get,header,else,submit,sm,set,registered,delivery,configuration,get,registered,delivery,if,in,get,headers,contains,key,submit,sm,set,protocol,id,byte,in,get,header,else,submit,sm,set,protocol,id,configuration,get,protocol,id,if,in,get,headers,contains,key,submit,sm,set,priority,flag,byte,in,get,header,else,submit,sm,set,priority,flag,configuration,get,priority,flag,if,in,get,headers,contains,key,submit,sm,set,schedule,delivery,time,time,formatter,format,date,in,get,header,if,in,get,headers,contains,key,submit,sm,set,validity,period,time,formatter,format,date,in,get,header,if,in,get,headers,contains,key,submit,sm,set,replace,if,present,byte,in,get,header,else,submit,sm,set,replace,if,present,configuration,get,replace,if,present,flag,if,in,get,headers,contains,key,system,out,println,1,submit,sm,set,data,coding,byte,in,get,header,else,system,out,println,2,submit,sm,set,data,coding,configuration,get,data,coding,return,submit,sm
SmppBinding -> public SubmitSm createSubmitSm(Exchange exchange) throws UnsupportedEncodingException;1297975937;Create the SubmitSm object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SubmitSm createSubmitSm(Exchange exchange) throws UnsupportedEncodingException {_        Message in = exchange.getIn()___        SubmitSm submitSm = new SubmitSm()__        submitSm.setShortMessage(exchange.getIn().getBody(String.class).getBytes(configuration.getEncoding()))___        if (in.getHeaders().containsKey(DEST_ADDR)) {_            submitSm.setDestAddress((String) in.getHeader(DEST_ADDR))__        } else {_            submitSm.setDestAddress(configuration.getDestAddr())__        }__        if (in.getHeaders().containsKey(DEST_ADDR_TON)) {_            submitSm.setDestAddrTon((Byte) in.getHeader(DEST_ADDR_TON))__        } else {_            submitSm.setDestAddrTon(configuration.getDestAddrTon())__        }__        if (in.getHeaders().containsKey(DEST_ADDR_NPI)) {_            submitSm.setDestAddrNpi((Byte) in.getHeader(DEST_ADDR_NPI))__        } else {_            submitSm.setDestAddrNpi(configuration.getDestAddrNpi())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR)) {_            submitSm.setSourceAddr((String) in.getHeader(SOURCE_ADDR))__        } else {_            submitSm.setSourceAddr(configuration.getSourceAddr())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR_TON)) {_            submitSm.setSourceAddrTon((Byte) in.getHeader(SOURCE_ADDR_TON))__        } else {_            submitSm.setSourceAddrTon(configuration.getSourceAddrTon())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR_NPI)) {_            submitSm.setSourceAddrNpi((Byte) in.getHeader(SOURCE_ADDR_NPI))__        } else {_            submitSm.setSourceAddrNpi(configuration.getSourceAddrNpi())__        }__        if (in.getHeaders().containsKey(SERVICE_TYPE)) {_            submitSm.setServiceType((String) in.getHeader(SERVICE_TYPE))__        } else {_            submitSm.setServiceType(configuration.getServiceType())__        }__        if (in.getHeaders().containsKey(REGISTERED_DELIVERY)) {_            submitSm.setRegisteredDelivery((Byte) in.getHeader(REGISTERED_DELIVERY))__        } else {_            submitSm.setRegisteredDelivery(configuration.getRegisteredDelivery())__        }__        if (in.getHeaders().containsKey(PROTOCOL_ID)) {_            submitSm.setProtocolId((Byte) in.getHeader(PROTOCOL_ID))__        } else {_            submitSm.setProtocolId(configuration.getProtocolId())__        }__        if (in.getHeaders().containsKey(PRIORITY_FLAG)) {_            submitSm.setPriorityFlag((Byte) in.getHeader(PRIORITY_FLAG))__        } else {_            submitSm.setPriorityFlag(configuration.getPriorityFlag())__        }__        if (in.getHeaders().containsKey(SCHEDULE_DELIVERY_TIME)) {_            submitSm.setScheduleDeliveryTime(timeFormatter.format((Date) in.getHeader(SCHEDULE_DELIVERY_TIME)))__        } __        if (in.getHeaders().containsKey(VALIDITY_PERIOD)) {_            submitSm.setValidityPeriod(timeFormatter.format((Date) in.getHeader(VALIDITY_PERIOD)))__        }__        if (in.getHeaders().containsKey(REPLACE_IF_PRESENT_FLAG)) {_            submitSm.setReplaceIfPresent((Byte) in.getHeader(REPLACE_IF_PRESENT_FLAG))__        } else {_            submitSm.setReplaceIfPresent(configuration.getReplaceIfPresentFlag())__        }_        _        if (in.getHeaders().containsKey(DATA_CODING)) {_            System.out.println("1")__            submitSm.setDataCoding((Byte) in.getHeader(DATA_CODING))__        } else {_            System.out.println("2")__            submitSm.setDataCoding(configuration.getDataCoding())__        }__        return submitSm__    };create,the,submit,sm,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,submit,sm,create,submit,sm,exchange,exchange,throws,unsupported,encoding,exception,message,in,exchange,get,in,submit,sm,submit,sm,new,submit,sm,submit,sm,set,short,message,exchange,get,in,get,body,string,class,get,bytes,configuration,get,encoding,if,in,get,headers,contains,key,submit,sm,set,dest,address,string,in,get,header,else,submit,sm,set,dest,address,configuration,get,dest,addr,if,in,get,headers,contains,key,submit,sm,set,dest,addr,ton,byte,in,get,header,else,submit,sm,set,dest,addr,ton,configuration,get,dest,addr,ton,if,in,get,headers,contains,key,submit,sm,set,dest,addr,npi,byte,in,get,header,else,submit,sm,set,dest,addr,npi,configuration,get,dest,addr,npi,if,in,get,headers,contains,key,submit,sm,set,source,addr,string,in,get,header,else,submit,sm,set,source,addr,configuration,get,source,addr,if,in,get,headers,contains,key,submit,sm,set,source,addr,ton,byte,in,get,header,else,submit,sm,set,source,addr,ton,configuration,get,source,addr,ton,if,in,get,headers,contains,key,submit,sm,set,source,addr,npi,byte,in,get,header,else,submit,sm,set,source,addr,npi,configuration,get,source,addr,npi,if,in,get,headers,contains,key,submit,sm,set,service,type,string,in,get,header,else,submit,sm,set,service,type,configuration,get,service,type,if,in,get,headers,contains,key,submit,sm,set,registered,delivery,byte,in,get,header,else,submit,sm,set,registered,delivery,configuration,get,registered,delivery,if,in,get,headers,contains,key,submit,sm,set,protocol,id,byte,in,get,header,else,submit,sm,set,protocol,id,configuration,get,protocol,id,if,in,get,headers,contains,key,submit,sm,set,priority,flag,byte,in,get,header,else,submit,sm,set,priority,flag,configuration,get,priority,flag,if,in,get,headers,contains,key,submit,sm,set,schedule,delivery,time,time,formatter,format,date,in,get,header,if,in,get,headers,contains,key,submit,sm,set,validity,period,time,formatter,format,date,in,get,header,if,in,get,headers,contains,key,submit,sm,set,replace,if,present,byte,in,get,header,else,submit,sm,set,replace,if,present,configuration,get,replace,if,present,flag,if,in,get,headers,contains,key,system,out,println,1,submit,sm,set,data,coding,byte,in,get,header,else,system,out,println,2,submit,sm,set,data,coding,configuration,get,data,coding,return,submit,sm
SmppBinding -> public SubmitSm createSubmitSm(Exchange exchange) throws UnsupportedEncodingException;1302206494;Create the SubmitSm object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SubmitSm createSubmitSm(Exchange exchange) throws UnsupportedEncodingException {_        Message in = exchange.getIn()___        SubmitSm submitSm = new SubmitSm()__        submitSm.setShortMessage(exchange.getIn().getBody(String.class).getBytes(configuration.getEncoding()))___        if (in.getHeaders().containsKey(DEST_ADDR)) {_            submitSm.setDestAddress((String) in.getHeader(DEST_ADDR))__        } else {_            submitSm.setDestAddress(configuration.getDestAddr())__        }__        if (in.getHeaders().containsKey(DEST_ADDR_TON)) {_            submitSm.setDestAddrTon((Byte) in.getHeader(DEST_ADDR_TON))__        } else {_            submitSm.setDestAddrTon(configuration.getDestAddrTon())__        }__        if (in.getHeaders().containsKey(DEST_ADDR_NPI)) {_            submitSm.setDestAddrNpi((Byte) in.getHeader(DEST_ADDR_NPI))__        } else {_            submitSm.setDestAddrNpi(configuration.getDestAddrNpi())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR)) {_            submitSm.setSourceAddr((String) in.getHeader(SOURCE_ADDR))__        } else {_            submitSm.setSourceAddr(configuration.getSourceAddr())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR_TON)) {_            submitSm.setSourceAddrTon((Byte) in.getHeader(SOURCE_ADDR_TON))__        } else {_            submitSm.setSourceAddrTon(configuration.getSourceAddrTon())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR_NPI)) {_            submitSm.setSourceAddrNpi((Byte) in.getHeader(SOURCE_ADDR_NPI))__        } else {_            submitSm.setSourceAddrNpi(configuration.getSourceAddrNpi())__        }__        if (in.getHeaders().containsKey(SERVICE_TYPE)) {_            submitSm.setServiceType((String) in.getHeader(SERVICE_TYPE))__        } else {_            submitSm.setServiceType(configuration.getServiceType())__        }__        if (in.getHeaders().containsKey(REGISTERED_DELIVERY)) {_            submitSm.setRegisteredDelivery((Byte) in.getHeader(REGISTERED_DELIVERY))__        } else {_            submitSm.setRegisteredDelivery(configuration.getRegisteredDelivery())__        }__        if (in.getHeaders().containsKey(PROTOCOL_ID)) {_            submitSm.setProtocolId((Byte) in.getHeader(PROTOCOL_ID))__        } else {_            submitSm.setProtocolId(configuration.getProtocolId())__        }__        if (in.getHeaders().containsKey(PRIORITY_FLAG)) {_            submitSm.setPriorityFlag((Byte) in.getHeader(PRIORITY_FLAG))__        } else {_            submitSm.setPriorityFlag(configuration.getPriorityFlag())__        }__        if (in.getHeaders().containsKey(SCHEDULE_DELIVERY_TIME)) {_            submitSm.setScheduleDeliveryTime(timeFormatter.format((Date) in.getHeader(SCHEDULE_DELIVERY_TIME)))__        } __        if (in.getHeaders().containsKey(VALIDITY_PERIOD)) {_            submitSm.setValidityPeriod(timeFormatter.format((Date) in.getHeader(VALIDITY_PERIOD)))__        }__        if (in.getHeaders().containsKey(REPLACE_IF_PRESENT_FLAG)) {_            submitSm.setReplaceIfPresent((Byte) in.getHeader(REPLACE_IF_PRESENT_FLAG))__        } else {_            submitSm.setReplaceIfPresent(configuration.getReplaceIfPresentFlag())__        }_        _        if (in.getHeaders().containsKey(DATA_CODING)) {_            submitSm.setDataCoding((Byte) in.getHeader(DATA_CODING))__        } else {_            submitSm.setDataCoding(configuration.getDataCoding())__        }__        return submitSm__    };create,the,submit,sm,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,submit,sm,create,submit,sm,exchange,exchange,throws,unsupported,encoding,exception,message,in,exchange,get,in,submit,sm,submit,sm,new,submit,sm,submit,sm,set,short,message,exchange,get,in,get,body,string,class,get,bytes,configuration,get,encoding,if,in,get,headers,contains,key,submit,sm,set,dest,address,string,in,get,header,else,submit,sm,set,dest,address,configuration,get,dest,addr,if,in,get,headers,contains,key,submit,sm,set,dest,addr,ton,byte,in,get,header,else,submit,sm,set,dest,addr,ton,configuration,get,dest,addr,ton,if,in,get,headers,contains,key,submit,sm,set,dest,addr,npi,byte,in,get,header,else,submit,sm,set,dest,addr,npi,configuration,get,dest,addr,npi,if,in,get,headers,contains,key,submit,sm,set,source,addr,string,in,get,header,else,submit,sm,set,source,addr,configuration,get,source,addr,if,in,get,headers,contains,key,submit,sm,set,source,addr,ton,byte,in,get,header,else,submit,sm,set,source,addr,ton,configuration,get,source,addr,ton,if,in,get,headers,contains,key,submit,sm,set,source,addr,npi,byte,in,get,header,else,submit,sm,set,source,addr,npi,configuration,get,source,addr,npi,if,in,get,headers,contains,key,submit,sm,set,service,type,string,in,get,header,else,submit,sm,set,service,type,configuration,get,service,type,if,in,get,headers,contains,key,submit,sm,set,registered,delivery,byte,in,get,header,else,submit,sm,set,registered,delivery,configuration,get,registered,delivery,if,in,get,headers,contains,key,submit,sm,set,protocol,id,byte,in,get,header,else,submit,sm,set,protocol,id,configuration,get,protocol,id,if,in,get,headers,contains,key,submit,sm,set,priority,flag,byte,in,get,header,else,submit,sm,set,priority,flag,configuration,get,priority,flag,if,in,get,headers,contains,key,submit,sm,set,schedule,delivery,time,time,formatter,format,date,in,get,header,if,in,get,headers,contains,key,submit,sm,set,validity,period,time,formatter,format,date,in,get,header,if,in,get,headers,contains,key,submit,sm,set,replace,if,present,byte,in,get,header,else,submit,sm,set,replace,if,present,configuration,get,replace,if,present,flag,if,in,get,headers,contains,key,submit,sm,set,data,coding,byte,in,get,header,else,submit,sm,set,data,coding,configuration,get,data,coding,return,submit,sm
SmppBinding -> public SubmitSm createSubmitSm(Exchange exchange) throws UnsupportedEncodingException;1305183367;Create the SubmitSm object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SubmitSm createSubmitSm(Exchange exchange) throws UnsupportedEncodingException {_        Message in = exchange.getIn()___        SubmitSm submitSm = new SubmitSm()__        submitSm.setShortMessage(exchange.getIn().getBody(String.class).getBytes(configuration.getEncoding()))___        if (in.getHeaders().containsKey(DEST_ADDR)) {_            submitSm.setDestAddress(in.getHeader(DEST_ADDR, String.class))__        } else {_            submitSm.setDestAddress(configuration.getDestAddr())__        }__        if (in.getHeaders().containsKey(DEST_ADDR_TON)) {_            submitSm.setDestAddrTon(in.getHeader(DEST_ADDR_TON, Byte.class))__        } else {_            submitSm.setDestAddrTon(configuration.getDestAddrTon())__        }__        if (in.getHeaders().containsKey(DEST_ADDR_NPI)) {_            submitSm.setDestAddrNpi(in.getHeader(DEST_ADDR_NPI, Byte.class))__        } else {_            submitSm.setDestAddrNpi(configuration.getDestAddrNpi())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR)) {_            submitSm.setSourceAddr(in.getHeader(SOURCE_ADDR, String.class))__        } else {_            submitSm.setSourceAddr(configuration.getSourceAddr())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR_TON)) {_            submitSm.setSourceAddrTon(in.getHeader(SOURCE_ADDR_TON, Byte.class))__        } else {_            submitSm.setSourceAddrTon(configuration.getSourceAddrTon())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR_NPI)) {_            submitSm.setSourceAddrNpi(in.getHeader(SOURCE_ADDR_NPI, Byte.class))__        } else {_            submitSm.setSourceAddrNpi(configuration.getSourceAddrNpi())__        }__        if (in.getHeaders().containsKey(SERVICE_TYPE)) {_            submitSm.setServiceType(in.getHeader(SERVICE_TYPE, String.class))__        } else {_            submitSm.setServiceType(configuration.getServiceType())__        }__        if (in.getHeaders().containsKey(REGISTERED_DELIVERY)) {_            submitSm.setRegisteredDelivery(in.getHeader(REGISTERED_DELIVERY, Byte.class))__        } else {_            submitSm.setRegisteredDelivery(configuration.getRegisteredDelivery())__        }__        if (in.getHeaders().containsKey(PROTOCOL_ID)) {_            submitSm.setProtocolId(in.getHeader(PROTOCOL_ID, Byte.class))__        } else {_            submitSm.setProtocolId(configuration.getProtocolId())__        }__        if (in.getHeaders().containsKey(PRIORITY_FLAG)) {_            submitSm.setPriorityFlag(in.getHeader(PRIORITY_FLAG, Byte.class))__        } else {_            submitSm.setPriorityFlag(configuration.getPriorityFlag())__        }__        if (in.getHeaders().containsKey(SCHEDULE_DELIVERY_TIME)) {_            submitSm.setScheduleDeliveryTime(timeFormatter.format(in.getHeader(SCHEDULE_DELIVERY_TIME, Date.class)))__        } __        if (in.getHeaders().containsKey(VALIDITY_PERIOD)) {_            submitSm.setValidityPeriod(timeFormatter.format(in.getHeader(VALIDITY_PERIOD, Date.class)))__        }__        if (in.getHeaders().containsKey(REPLACE_IF_PRESENT_FLAG)) {_            submitSm.setReplaceIfPresent(in.getHeader(REPLACE_IF_PRESENT_FLAG, Byte.class))__        } else {_            submitSm.setReplaceIfPresent(configuration.getReplaceIfPresentFlag())__        }_        _        if (in.getHeaders().containsKey(DATA_CODING)) {_            submitSm.setDataCoding(in.getHeader(DATA_CODING, Byte.class))__        } else {_            submitSm.setDataCoding(configuration.getDataCoding())__        }__        return submitSm__    };create,the,submit,sm,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,submit,sm,create,submit,sm,exchange,exchange,throws,unsupported,encoding,exception,message,in,exchange,get,in,submit,sm,submit,sm,new,submit,sm,submit,sm,set,short,message,exchange,get,in,get,body,string,class,get,bytes,configuration,get,encoding,if,in,get,headers,contains,key,submit,sm,set,dest,address,in,get,header,string,class,else,submit,sm,set,dest,address,configuration,get,dest,addr,if,in,get,headers,contains,key,submit,sm,set,dest,addr,ton,in,get,header,byte,class,else,submit,sm,set,dest,addr,ton,configuration,get,dest,addr,ton,if,in,get,headers,contains,key,submit,sm,set,dest,addr,npi,in,get,header,byte,class,else,submit,sm,set,dest,addr,npi,configuration,get,dest,addr,npi,if,in,get,headers,contains,key,submit,sm,set,source,addr,in,get,header,string,class,else,submit,sm,set,source,addr,configuration,get,source,addr,if,in,get,headers,contains,key,submit,sm,set,source,addr,ton,in,get,header,byte,class,else,submit,sm,set,source,addr,ton,configuration,get,source,addr,ton,if,in,get,headers,contains,key,submit,sm,set,source,addr,npi,in,get,header,byte,class,else,submit,sm,set,source,addr,npi,configuration,get,source,addr,npi,if,in,get,headers,contains,key,submit,sm,set,service,type,in,get,header,string,class,else,submit,sm,set,service,type,configuration,get,service,type,if,in,get,headers,contains,key,submit,sm,set,registered,delivery,in,get,header,byte,class,else,submit,sm,set,registered,delivery,configuration,get,registered,delivery,if,in,get,headers,contains,key,submit,sm,set,protocol,id,in,get,header,byte,class,else,submit,sm,set,protocol,id,configuration,get,protocol,id,if,in,get,headers,contains,key,submit,sm,set,priority,flag,in,get,header,byte,class,else,submit,sm,set,priority,flag,configuration,get,priority,flag,if,in,get,headers,contains,key,submit,sm,set,schedule,delivery,time,time,formatter,format,in,get,header,date,class,if,in,get,headers,contains,key,submit,sm,set,validity,period,time,formatter,format,in,get,header,date,class,if,in,get,headers,contains,key,submit,sm,set,replace,if,present,in,get,header,byte,class,else,submit,sm,set,replace,if,present,configuration,get,replace,if,present,flag,if,in,get,headers,contains,key,submit,sm,set,data,coding,in,get,header,byte,class,else,submit,sm,set,data,coding,configuration,get,data,coding,return,submit,sm
SmppBinding -> public SubmitSm createSubmitSm(Exchange exchange) throws UnsupportedEncodingException;1309727185;Create the SubmitSm object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SubmitSm createSubmitSm(Exchange exchange) throws UnsupportedEncodingException {_        Message in = exchange.getIn()__        String body = exchange.getIn().getBody(String.class)__        _        SubmitSm submitSm = new SubmitSm()__        _        if (body != null) {_            byte[] shortMessage = body.getBytes(configuration.getEncoding())__            _            if (shortMessage.length < 255) {_                submitSm.setShortMessage(shortMessage)__            } else {_                submitSm.setShortMessage(new byte[0])__                OptionalParameter messagePayloadTLV = OptionalParameters.deserialize(OptionalParameter.Tag.MESSAGE_PAYLOAD.code(), shortMessage)___                submitSm.setOptionalParametes(messagePayloadTLV)__            }_        }__        if (in.getHeaders().containsKey(DEST_ADDR)) {_            submitSm.setDestAddress(in.getHeader(DEST_ADDR, String.class))__        } else {_            submitSm.setDestAddress(configuration.getDestAddr())__        }__        if (in.getHeaders().containsKey(DEST_ADDR_TON)) {_            submitSm.setDestAddrTon(in.getHeader(DEST_ADDR_TON, Byte.class))__        } else {_            submitSm.setDestAddrTon(configuration.getDestAddrTon())__        }__        if (in.getHeaders().containsKey(DEST_ADDR_NPI)) {_            submitSm.setDestAddrNpi(in.getHeader(DEST_ADDR_NPI, Byte.class))__        } else {_            submitSm.setDestAddrNpi(configuration.getDestAddrNpi())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR)) {_            submitSm.setSourceAddr(in.getHeader(SOURCE_ADDR, String.class))__        } else {_            submitSm.setSourceAddr(configuration.getSourceAddr())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR_TON)) {_            submitSm.setSourceAddrTon(in.getHeader(SOURCE_ADDR_TON, Byte.class))__        } else {_            submitSm.setSourceAddrTon(configuration.getSourceAddrTon())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR_NPI)) {_            submitSm.setSourceAddrNpi(in.getHeader(SOURCE_ADDR_NPI, Byte.class))__        } else {_            submitSm.setSourceAddrNpi(configuration.getSourceAddrNpi())__        }__        if (in.getHeaders().containsKey(SERVICE_TYPE)) {_            submitSm.setServiceType(in.getHeader(SERVICE_TYPE, String.class))__        } else {_            submitSm.setServiceType(configuration.getServiceType())__        }__        if (in.getHeaders().containsKey(REGISTERED_DELIVERY)) {_            submitSm.setRegisteredDelivery(in.getHeader(REGISTERED_DELIVERY, Byte.class))__        } else {_            submitSm.setRegisteredDelivery(configuration.getRegisteredDelivery())__        }__        if (in.getHeaders().containsKey(PROTOCOL_ID)) {_            submitSm.setProtocolId(in.getHeader(PROTOCOL_ID, Byte.class))__        } else {_            submitSm.setProtocolId(configuration.getProtocolId())__        }__        if (in.getHeaders().containsKey(PRIORITY_FLAG)) {_            submitSm.setPriorityFlag(in.getHeader(PRIORITY_FLAG, Byte.class))__        } else {_            submitSm.setPriorityFlag(configuration.getPriorityFlag())__        }__        if (in.getHeaders().containsKey(SCHEDULE_DELIVERY_TIME)) {_            submitSm.setScheduleDeliveryTime(timeFormatter.format(in.getHeader(SCHEDULE_DELIVERY_TIME, Date.class)))__        } __        if (in.getHeaders().containsKey(VALIDITY_PERIOD)) {_            submitSm.setValidityPeriod(timeFormatter.format(in.getHeader(VALIDITY_PERIOD, Date.class)))__        }__        if (in.getHeaders().containsKey(REPLACE_IF_PRESENT_FLAG)) {_            submitSm.setReplaceIfPresent(in.getHeader(REPLACE_IF_PRESENT_FLAG, Byte.class))__        } else {_            submitSm.setReplaceIfPresent(configuration.getReplaceIfPresentFlag())__        }_        _        if (in.getHeaders().containsKey(DATA_CODING)) {_            submitSm.setDataCoding(in.getHeader(DATA_CODING, Byte.class))__        } else {_            submitSm.setDataCoding(configuration.getDataCoding())__        }__        return submitSm__    };create,the,submit,sm,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,submit,sm,create,submit,sm,exchange,exchange,throws,unsupported,encoding,exception,message,in,exchange,get,in,string,body,exchange,get,in,get,body,string,class,submit,sm,submit,sm,new,submit,sm,if,body,null,byte,short,message,body,get,bytes,configuration,get,encoding,if,short,message,length,255,submit,sm,set,short,message,short,message,else,submit,sm,set,short,message,new,byte,0,optional,parameter,message,payload,tlv,optional,parameters,deserialize,optional,parameter,tag,code,short,message,submit,sm,set,optional,parametes,message,payload,tlv,if,in,get,headers,contains,key,submit,sm,set,dest,address,in,get,header,string,class,else,submit,sm,set,dest,address,configuration,get,dest,addr,if,in,get,headers,contains,key,submit,sm,set,dest,addr,ton,in,get,header,byte,class,else,submit,sm,set,dest,addr,ton,configuration,get,dest,addr,ton,if,in,get,headers,contains,key,submit,sm,set,dest,addr,npi,in,get,header,byte,class,else,submit,sm,set,dest,addr,npi,configuration,get,dest,addr,npi,if,in,get,headers,contains,key,submit,sm,set,source,addr,in,get,header,string,class,else,submit,sm,set,source,addr,configuration,get,source,addr,if,in,get,headers,contains,key,submit,sm,set,source,addr,ton,in,get,header,byte,class,else,submit,sm,set,source,addr,ton,configuration,get,source,addr,ton,if,in,get,headers,contains,key,submit,sm,set,source,addr,npi,in,get,header,byte,class,else,submit,sm,set,source,addr,npi,configuration,get,source,addr,npi,if,in,get,headers,contains,key,submit,sm,set,service,type,in,get,header,string,class,else,submit,sm,set,service,type,configuration,get,service,type,if,in,get,headers,contains,key,submit,sm,set,registered,delivery,in,get,header,byte,class,else,submit,sm,set,registered,delivery,configuration,get,registered,delivery,if,in,get,headers,contains,key,submit,sm,set,protocol,id,in,get,header,byte,class,else,submit,sm,set,protocol,id,configuration,get,protocol,id,if,in,get,headers,contains,key,submit,sm,set,priority,flag,in,get,header,byte,class,else,submit,sm,set,priority,flag,configuration,get,priority,flag,if,in,get,headers,contains,key,submit,sm,set,schedule,delivery,time,time,formatter,format,in,get,header,date,class,if,in,get,headers,contains,key,submit,sm,set,validity,period,time,formatter,format,in,get,header,date,class,if,in,get,headers,contains,key,submit,sm,set,replace,if,present,in,get,header,byte,class,else,submit,sm,set,replace,if,present,configuration,get,replace,if,present,flag,if,in,get,headers,contains,key,submit,sm,set,data,coding,in,get,header,byte,class,else,submit,sm,set,data,coding,configuration,get,data,coding,return,submit,sm
SmppBinding -> public SubmitSm createSubmitSm(Exchange exchange) throws UnsupportedEncodingException;1315366055;Create the SubmitSm object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SubmitSm createSubmitSm(Exchange exchange) throws UnsupportedEncodingException {_        Message in = exchange.getIn()__        String body = exchange.getIn().getBody(String.class)__        _        SubmitSm submitSm = new SubmitSm()__        _        if (body != null) {_            byte[] shortMessage = body.getBytes(configuration.getEncoding())__            _            if (shortMessage.length < 255) {_                submitSm.setShortMessage(shortMessage)__                _                submitSm.setOptionalParametes(new OptionalParameter[]{})__            } else {_                submitSm.setShortMessage(new byte[0])__                OptionalParameter messagePayloadTLV = OptionalParameters.deserialize(OptionalParameter.Tag.MESSAGE_PAYLOAD.code(), shortMessage)___                submitSm.setOptionalParametes(messagePayloadTLV)__            }_        }__        if (in.getHeaders().containsKey(DEST_ADDR)) {_            submitSm.setDestAddress(in.getHeader(DEST_ADDR, String.class))__        } else {_            submitSm.setDestAddress(configuration.getDestAddr())__        }__        if (in.getHeaders().containsKey(DEST_ADDR_TON)) {_            submitSm.setDestAddrTon(in.getHeader(DEST_ADDR_TON, Byte.class))__        } else {_            submitSm.setDestAddrTon(configuration.getDestAddrTon())__        }__        if (in.getHeaders().containsKey(DEST_ADDR_NPI)) {_            submitSm.setDestAddrNpi(in.getHeader(DEST_ADDR_NPI, Byte.class))__        } else {_            submitSm.setDestAddrNpi(configuration.getDestAddrNpi())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR)) {_            submitSm.setSourceAddr(in.getHeader(SOURCE_ADDR, String.class))__        } else {_            submitSm.setSourceAddr(configuration.getSourceAddr())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR_TON)) {_            submitSm.setSourceAddrTon(in.getHeader(SOURCE_ADDR_TON, Byte.class))__        } else {_            submitSm.setSourceAddrTon(configuration.getSourceAddrTon())__        }__        if (in.getHeaders().containsKey(SOURCE_ADDR_NPI)) {_            submitSm.setSourceAddrNpi(in.getHeader(SOURCE_ADDR_NPI, Byte.class))__        } else {_            submitSm.setSourceAddrNpi(configuration.getSourceAddrNpi())__        }__        if (in.getHeaders().containsKey(SERVICE_TYPE)) {_            submitSm.setServiceType(in.getHeader(SERVICE_TYPE, String.class))__        } else {_            submitSm.setServiceType(configuration.getServiceType())__        }__        if (in.getHeaders().containsKey(REGISTERED_DELIVERY)) {_            submitSm.setRegisteredDelivery(in.getHeader(REGISTERED_DELIVERY, Byte.class))__        } else {_            submitSm.setRegisteredDelivery(configuration.getRegisteredDelivery())__        }__        if (in.getHeaders().containsKey(PROTOCOL_ID)) {_            submitSm.setProtocolId(in.getHeader(PROTOCOL_ID, Byte.class))__        } else {_            submitSm.setProtocolId(configuration.getProtocolId())__        }__        if (in.getHeaders().containsKey(PRIORITY_FLAG)) {_            submitSm.setPriorityFlag(in.getHeader(PRIORITY_FLAG, Byte.class))__        } else {_            submitSm.setPriorityFlag(configuration.getPriorityFlag())__        }__        if (in.getHeaders().containsKey(SCHEDULE_DELIVERY_TIME)) {_            submitSm.setScheduleDeliveryTime(timeFormatter.format(in.getHeader(SCHEDULE_DELIVERY_TIME, Date.class)))__        } __        if (in.getHeaders().containsKey(VALIDITY_PERIOD)) {_            submitSm.setValidityPeriod(timeFormatter.format(in.getHeader(VALIDITY_PERIOD, Date.class)))__        }__        if (in.getHeaders().containsKey(REPLACE_IF_PRESENT_FLAG)) {_            submitSm.setReplaceIfPresent(in.getHeader(REPLACE_IF_PRESENT_FLAG, Byte.class))__        } else {_            submitSm.setReplaceIfPresent(configuration.getReplaceIfPresentFlag())__        }_        _        if (in.getHeaders().containsKey(DATA_CODING)) {_            submitSm.setDataCoding(in.getHeader(DATA_CODING, Byte.class))__        } else {_            submitSm.setDataCoding(configuration.getDataCoding())__        }__        return submitSm__    };create,the,submit,sm,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,submit,sm,create,submit,sm,exchange,exchange,throws,unsupported,encoding,exception,message,in,exchange,get,in,string,body,exchange,get,in,get,body,string,class,submit,sm,submit,sm,new,submit,sm,if,body,null,byte,short,message,body,get,bytes,configuration,get,encoding,if,short,message,length,255,submit,sm,set,short,message,short,message,submit,sm,set,optional,parametes,new,optional,parameter,else,submit,sm,set,short,message,new,byte,0,optional,parameter,message,payload,tlv,optional,parameters,deserialize,optional,parameter,tag,code,short,message,submit,sm,set,optional,parametes,message,payload,tlv,if,in,get,headers,contains,key,submit,sm,set,dest,address,in,get,header,string,class,else,submit,sm,set,dest,address,configuration,get,dest,addr,if,in,get,headers,contains,key,submit,sm,set,dest,addr,ton,in,get,header,byte,class,else,submit,sm,set,dest,addr,ton,configuration,get,dest,addr,ton,if,in,get,headers,contains,key,submit,sm,set,dest,addr,npi,in,get,header,byte,class,else,submit,sm,set,dest,addr,npi,configuration,get,dest,addr,npi,if,in,get,headers,contains,key,submit,sm,set,source,addr,in,get,header,string,class,else,submit,sm,set,source,addr,configuration,get,source,addr,if,in,get,headers,contains,key,submit,sm,set,source,addr,ton,in,get,header,byte,class,else,submit,sm,set,source,addr,ton,configuration,get,source,addr,ton,if,in,get,headers,contains,key,submit,sm,set,source,addr,npi,in,get,header,byte,class,else,submit,sm,set,source,addr,npi,configuration,get,source,addr,npi,if,in,get,headers,contains,key,submit,sm,set,service,type,in,get,header,string,class,else,submit,sm,set,service,type,configuration,get,service,type,if,in,get,headers,contains,key,submit,sm,set,registered,delivery,in,get,header,byte,class,else,submit,sm,set,registered,delivery,configuration,get,registered,delivery,if,in,get,headers,contains,key,submit,sm,set,protocol,id,in,get,header,byte,class,else,submit,sm,set,protocol,id,configuration,get,protocol,id,if,in,get,headers,contains,key,submit,sm,set,priority,flag,in,get,header,byte,class,else,submit,sm,set,priority,flag,configuration,get,priority,flag,if,in,get,headers,contains,key,submit,sm,set,schedule,delivery,time,time,formatter,format,in,get,header,date,class,if,in,get,headers,contains,key,submit,sm,set,validity,period,time,formatter,format,in,get,header,date,class,if,in,get,headers,contains,key,submit,sm,set,replace,if,present,in,get,header,byte,class,else,submit,sm,set,replace,if,present,configuration,get,replace,if,present,flag,if,in,get,headers,contains,key,submit,sm,set,data,coding,in,get,header,byte,class,else,submit,sm,set,data,coding,configuration,get,data,coding,return,submit,sm
SmppBinding -> public SmppMessage createSmppMessage(AlertNotification alertNotification);1260263234;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(alertNotification)___        smppMessage.setHeader(SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SOURCE_ADDR_TON, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(ESME_ADDR_TON, alertNotification.getEsmeAddrNpi())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,alert,notification,smpp,message,set,header,alert,notification,get,sequence,number,smpp,message,set,header,alert,notification,get,command,id,smpp,message,set,header,alert,notification,get,command,status,smpp,message,set,header,alert,notification,get,source,addr,smpp,message,set,header,alert,notification,get,source,addr,npi,smpp,message,set,header,alert,notification,get,source,addr,npi,smpp,message,set,header,alert,notification,get,esme,addr,smpp,message,set,header,alert,notification,get,esme,addr,npi,smpp,message,set,header,alert,notification,get,esme,addr,npi,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(AlertNotification alertNotification);1260430217;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(alertNotification, configuration)___        smppMessage.setHeader(SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SOURCE_ADDR_TON, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(ESME_ADDR_TON, alertNotification.getEsmeAddrNpi())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,alert,notification,configuration,smpp,message,set,header,alert,notification,get,sequence,number,smpp,message,set,header,alert,notification,get,command,id,smpp,message,set,header,alert,notification,get,command,status,smpp,message,set,header,alert,notification,get,source,addr,smpp,message,set,header,alert,notification,get,source,addr,npi,smpp,message,set,header,alert,notification,get,source,addr,npi,smpp,message,set,header,alert,notification,get,esme,addr,smpp,message,set,header,alert,notification,get,esme,addr,npi,smpp,message,set,header,alert,notification,get,esme,addr,npi,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(AlertNotification alertNotification);1272589442;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(alertNotification, configuration)___        smppMessage.setHeader(SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SOURCE_ADDR_TON, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(ESME_ADDR_TON, alertNotification.getEsmeAddrNpi())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,alert,notification,configuration,smpp,message,set,header,alert,notification,get,sequence,number,smpp,message,set,header,alert,notification,get,command,id,smpp,message,set,header,alert,notification,get,command,status,smpp,message,set,header,alert,notification,get,source,addr,smpp,message,set,header,alert,notification,get,source,addr,npi,smpp,message,set,header,alert,notification,get,source,addr,npi,smpp,message,set,header,alert,notification,get,esme,addr,smpp,message,set,header,alert,notification,get,esme,addr,npi,smpp,message,set,header,alert,notification,get,esme,addr,npi,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(AlertNotification alertNotification);1274230707;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(alertNotification, configuration)___        smppMessage.setHeader(SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SOURCE_ADDR_TON, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(ESME_ADDR_TON, alertNotification.getEsmeAddrNpi())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,alert,notification,configuration,smpp,message,set,header,alert,notification,get,sequence,number,smpp,message,set,header,alert,notification,get,command,id,smpp,message,set,header,alert,notification,get,command,status,smpp,message,set,header,alert,notification,get,source,addr,smpp,message,set,header,alert,notification,get,source,addr,npi,smpp,message,set,header,alert,notification,get,source,addr,npi,smpp,message,set,header,alert,notification,get,esme,addr,smpp,message,set,header,alert,notification,get,esme,addr,npi,smpp,message,set,header,alert,notification,get,esme,addr,npi,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(AlertNotification alertNotification);1276431904;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(alertNotification, configuration)___        smppMessage.setHeader(SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SOURCE_ADDR_TON, alertNotification.getSourceAddrTon())__        smppMessage.setHeader(ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(ESME_ADDR_TON, alertNotification.getEsmeAddrTon())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,alert,notification,configuration,smpp,message,set,header,alert,notification,get,sequence,number,smpp,message,set,header,alert,notification,get,command,id,smpp,message,set,header,alert,notification,get,command,status,smpp,message,set,header,alert,notification,get,source,addr,smpp,message,set,header,alert,notification,get,source,addr,npi,smpp,message,set,header,alert,notification,get,source,addr,ton,smpp,message,set,header,alert,notification,get,esme,addr,smpp,message,set,header,alert,notification,get,esme,addr,npi,smpp,message,set,header,alert,notification,get,esme,addr,ton,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(AlertNotification alertNotification);1283289848;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(alertNotification, configuration)___        smppMessage.setHeader(SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SOURCE_ADDR_TON, alertNotification.getSourceAddrTon())__        smppMessage.setHeader(ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(ESME_ADDR_TON, alertNotification.getEsmeAddrTon())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,alert,notification,configuration,smpp,message,set,header,alert,notification,get,sequence,number,smpp,message,set,header,alert,notification,get,command,id,smpp,message,set,header,alert,notification,get,command,status,smpp,message,set,header,alert,notification,get,source,addr,smpp,message,set,header,alert,notification,get,source,addr,npi,smpp,message,set,header,alert,notification,get,source,addr,ton,smpp,message,set,header,alert,notification,get,esme,addr,smpp,message,set,header,alert,notification,get,esme,addr,npi,smpp,message,set,header,alert,notification,get,esme,addr,ton,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(AlertNotification alertNotification);1283800169;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(alertNotification, configuration)___        smppMessage.setHeader(SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SOURCE_ADDR_TON, alertNotification.getSourceAddrTon())__        smppMessage.setHeader(ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(ESME_ADDR_TON, alertNotification.getEsmeAddrTon())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,alert,notification,configuration,smpp,message,set,header,alert,notification,get,sequence,number,smpp,message,set,header,alert,notification,get,command,id,smpp,message,set,header,alert,notification,get,command,status,smpp,message,set,header,alert,notification,get,source,addr,smpp,message,set,header,alert,notification,get,source,addr,npi,smpp,message,set,header,alert,notification,get,source,addr,ton,smpp,message,set,header,alert,notification,get,esme,addr,smpp,message,set,header,alert,notification,get,esme,addr,npi,smpp,message,set,header,alert,notification,get,esme,addr,ton,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(AlertNotification alertNotification);1289258847;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(alertNotification, configuration)___        smppMessage.setHeader(SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SOURCE_ADDR_TON, alertNotification.getSourceAddrTon())__        smppMessage.setHeader(ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(ESME_ADDR_TON, alertNotification.getEsmeAddrTon())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,alert,notification,configuration,smpp,message,set,header,alert,notification,get,sequence,number,smpp,message,set,header,alert,notification,get,command,id,smpp,message,set,header,alert,notification,get,command,status,smpp,message,set,header,alert,notification,get,source,addr,smpp,message,set,header,alert,notification,get,source,addr,npi,smpp,message,set,header,alert,notification,get,source,addr,ton,smpp,message,set,header,alert,notification,get,esme,addr,smpp,message,set,header,alert,notification,get,esme,addr,npi,smpp,message,set,header,alert,notification,get,esme,addr,ton,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(AlertNotification alertNotification);1293907120;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(alertNotification, configuration)___        smppMessage.setHeader(MESSAGE_TYPE, SmppMessageType.AlertNotification.toString())__        smppMessage.setHeader(SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SOURCE_ADDR_TON, alertNotification.getSourceAddrTon())__        smppMessage.setHeader(ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(ESME_ADDR_TON, alertNotification.getEsmeAddrTon())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,alert,notification,configuration,smpp,message,set,header,smpp,message,type,alert,notification,to,string,smpp,message,set,header,alert,notification,get,sequence,number,smpp,message,set,header,alert,notification,get,command,id,smpp,message,set,header,alert,notification,get,command,status,smpp,message,set,header,alert,notification,get,source,addr,smpp,message,set,header,alert,notification,get,source,addr,npi,smpp,message,set,header,alert,notification,get,source,addr,ton,smpp,message,set,header,alert,notification,get,esme,addr,smpp,message,set,header,alert,notification,get,esme,addr,npi,smpp,message,set,header,alert,notification,get,esme,addr,ton,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(AlertNotification alertNotification);1297975937;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(alertNotification, configuration)___        smppMessage.setHeader(MESSAGE_TYPE, SmppMessageType.AlertNotification.toString())__        smppMessage.setHeader(SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SOURCE_ADDR_TON, alertNotification.getSourceAddrTon())__        smppMessage.setHeader(ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(ESME_ADDR_TON, alertNotification.getEsmeAddrTon())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,alert,notification,configuration,smpp,message,set,header,smpp,message,type,alert,notification,to,string,smpp,message,set,header,alert,notification,get,sequence,number,smpp,message,set,header,alert,notification,get,command,id,smpp,message,set,header,alert,notification,get,command,status,smpp,message,set,header,alert,notification,get,source,addr,smpp,message,set,header,alert,notification,get,source,addr,npi,smpp,message,set,header,alert,notification,get,source,addr,ton,smpp,message,set,header,alert,notification,get,esme,addr,smpp,message,set,header,alert,notification,get,esme,addr,npi,smpp,message,set,header,alert,notification,get,esme,addr,ton,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(AlertNotification alertNotification);1302206494;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(alertNotification, configuration)___        smppMessage.setHeader(MESSAGE_TYPE, SmppMessageType.AlertNotification.toString())__        smppMessage.setHeader(SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SOURCE_ADDR_TON, alertNotification.getSourceAddrTon())__        smppMessage.setHeader(ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(ESME_ADDR_TON, alertNotification.getEsmeAddrTon())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,alert,notification,configuration,smpp,message,set,header,smpp,message,type,alert,notification,to,string,smpp,message,set,header,alert,notification,get,sequence,number,smpp,message,set,header,alert,notification,get,command,id,smpp,message,set,header,alert,notification,get,command,status,smpp,message,set,header,alert,notification,get,source,addr,smpp,message,set,header,alert,notification,get,source,addr,npi,smpp,message,set,header,alert,notification,get,source,addr,ton,smpp,message,set,header,alert,notification,get,esme,addr,smpp,message,set,header,alert,notification,get,esme,addr,npi,smpp,message,set,header,alert,notification,get,esme,addr,ton,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(AlertNotification alertNotification);1305183367;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(alertNotification, configuration)___        smppMessage.setHeader(MESSAGE_TYPE, SmppMessageType.AlertNotification.toString())__        smppMessage.setHeader(SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SOURCE_ADDR_TON, alertNotification.getSourceAddrTon())__        smppMessage.setHeader(ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(ESME_ADDR_TON, alertNotification.getEsmeAddrTon())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,alert,notification,configuration,smpp,message,set,header,smpp,message,type,alert,notification,to,string,smpp,message,set,header,alert,notification,get,sequence,number,smpp,message,set,header,alert,notification,get,command,id,smpp,message,set,header,alert,notification,get,command,status,smpp,message,set,header,alert,notification,get,source,addr,smpp,message,set,header,alert,notification,get,source,addr,npi,smpp,message,set,header,alert,notification,get,source,addr,ton,smpp,message,set,header,alert,notification,get,esme,addr,smpp,message,set,header,alert,notification,get,esme,addr,npi,smpp,message,set,header,alert,notification,get,esme,addr,ton,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(AlertNotification alertNotification);1309727185;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(alertNotification, configuration)___        smppMessage.setHeader(MESSAGE_TYPE, SmppMessageType.AlertNotification.toString())__        smppMessage.setHeader(SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SOURCE_ADDR_TON, alertNotification.getSourceAddrTon())__        smppMessage.setHeader(ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(ESME_ADDR_TON, alertNotification.getEsmeAddrTon())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,alert,notification,configuration,smpp,message,set,header,smpp,message,type,alert,notification,to,string,smpp,message,set,header,alert,notification,get,sequence,number,smpp,message,set,header,alert,notification,get,command,id,smpp,message,set,header,alert,notification,get,command,status,smpp,message,set,header,alert,notification,get,source,addr,smpp,message,set,header,alert,notification,get,source,addr,npi,smpp,message,set,header,alert,notification,get,source,addr,ton,smpp,message,set,header,alert,notification,get,esme,addr,smpp,message,set,header,alert,notification,get,esme,addr,npi,smpp,message,set,header,alert,notification,get,esme,addr,ton,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(AlertNotification alertNotification);1315366055;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(alertNotification, configuration)___        smppMessage.setHeader(MESSAGE_TYPE, SmppMessageType.AlertNotification.toString())__        smppMessage.setHeader(SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SOURCE_ADDR_TON, alertNotification.getSourceAddrTon())__        smppMessage.setHeader(ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(ESME_ADDR_TON, alertNotification.getEsmeAddrTon())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,alert,notification,configuration,smpp,message,set,header,smpp,message,type,alert,notification,to,string,smpp,message,set,header,alert,notification,get,sequence,number,smpp,message,set,header,alert,notification,get,command,id,smpp,message,set,header,alert,notification,get,command,status,smpp,message,set,header,alert,notification,get,source,addr,smpp,message,set,header,alert,notification,get,source,addr,npi,smpp,message,set,header,alert,notification,get,source,addr,ton,smpp,message,set,header,alert,notification,get,esme,addr,smpp,message,set,header,alert,notification,get,esme,addr,npi,smpp,message,set,header,alert,notification,get,esme,addr,ton,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(AlertNotification alertNotification);1317851746;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(alertNotification, configuration)___        smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.AlertNotification.toString())__        smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(SmppConstants.COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(SmppConstants.COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON, alertNotification.getSourceAddrTon())__        smppMessage.setHeader(SmppConstants.ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_TON, alertNotification.getEsmeAddrTon())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,alert,notification,configuration,smpp,message,set,header,smpp,constants,smpp,message,type,alert,notification,to,string,smpp,message,set,header,smpp,constants,alert,notification,get,sequence,number,smpp,message,set,header,smpp,constants,alert,notification,get,command,id,smpp,message,set,header,smpp,constants,alert,notification,get,command,status,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,ton,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,ton,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(AlertNotification alertNotification);1349714461;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(alertNotification, configuration)___        smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.AlertNotification.toString())__        smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(SmppConstants.COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(SmppConstants.COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON, alertNotification.getSourceAddrTon())__        smppMessage.setHeader(SmppConstants.ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_TON, alertNotification.getEsmeAddrTon())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,alert,notification,configuration,smpp,message,set,header,smpp,constants,smpp,message,type,alert,notification,to,string,smpp,message,set,header,smpp,constants,alert,notification,get,sequence,number,smpp,message,set,header,smpp,constants,alert,notification,get,command,id,smpp,message,set,header,smpp,constants,alert,notification,get,command,status,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,ton,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,ton,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(AlertNotification alertNotification);1352120089;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(alertNotification, configuration)___        smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.AlertNotification.toString())__        smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(SmppConstants.COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(SmppConstants.COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON, alertNotification.getSourceAddrTon())__        smppMessage.setHeader(SmppConstants.ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_TON, alertNotification.getEsmeAddrTon())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,alert,notification,configuration,smpp,message,set,header,smpp,constants,smpp,message,type,alert,notification,to,string,smpp,message,set,header,smpp,constants,alert,notification,get,sequence,number,smpp,message,set,header,smpp,constants,alert,notification,get,command,id,smpp,message,set,header,smpp,constants,alert,notification,get,command,status,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,ton,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,ton,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(AlertNotification alertNotification);1352841234;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(alertNotification, configuration)___        smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.AlertNotification.toString())__        smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(SmppConstants.COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(SmppConstants.COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON, alertNotification.getSourceAddrTon())__        smppMessage.setHeader(SmppConstants.ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_TON, alertNotification.getEsmeAddrTon())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,alert,notification,configuration,smpp,message,set,header,smpp,constants,smpp,message,type,alert,notification,to,string,smpp,message,set,header,smpp,constants,alert,notification,get,sequence,number,smpp,message,set,header,smpp,constants,alert,notification,get,command,id,smpp,message,set,header,smpp,constants,alert,notification,get,command,status,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,ton,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,ton,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(AlertNotification alertNotification);1353612986;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(alertNotification, configuration)___        smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.AlertNotification.toString())__        smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(SmppConstants.COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(SmppConstants.COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON, alertNotification.getSourceAddrTon())__        smppMessage.setHeader(SmppConstants.ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_TON, alertNotification.getEsmeAddrTon())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,alert,notification,configuration,smpp,message,set,header,smpp,constants,smpp,message,type,alert,notification,to,string,smpp,message,set,header,smpp,constants,alert,notification,get,sequence,number,smpp,message,set,header,smpp,constants,alert,notification,get,command,id,smpp,message,set,header,smpp,constants,alert,notification,get,command,status,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,ton,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,ton,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(AlertNotification alertNotification);1362716422;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(alertNotification, configuration)___        smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.AlertNotification.toString())__        smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(SmppConstants.COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(SmppConstants.COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON, alertNotification.getSourceAddrTon())__        smppMessage.setHeader(SmppConstants.ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_TON, alertNotification.getEsmeAddrTon())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,alert,notification,configuration,smpp,message,set,header,smpp,constants,smpp,message,type,alert,notification,to,string,smpp,message,set,header,smpp,constants,alert,notification,get,sequence,number,smpp,message,set,header,smpp,constants,alert,notification,get,command,id,smpp,message,set,header,smpp,constants,alert,notification,get,command,status,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,ton,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,ton,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(AlertNotification alertNotification);1369947956;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(alertNotification, configuration)___        smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.AlertNotification.toString())__        smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(SmppConstants.COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(SmppConstants.COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON, alertNotification.getSourceAddrTon())__        smppMessage.setHeader(SmppConstants.ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_TON, alertNotification.getEsmeAddrTon())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,alert,notification,configuration,smpp,message,set,header,smpp,constants,smpp,message,type,alert,notification,to,string,smpp,message,set,header,smpp,constants,alert,notification,get,sequence,number,smpp,message,set,header,smpp,constants,alert,notification,get,command,id,smpp,message,set,header,smpp,constants,alert,notification,get,command,status,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,ton,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,ton,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(AlertNotification alertNotification);1377438136;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(alertNotification, configuration)___        smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.AlertNotification.toString())__        smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(SmppConstants.COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(SmppConstants.COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON, alertNotification.getSourceAddrTon())__        smppMessage.setHeader(SmppConstants.ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_TON, alertNotification.getEsmeAddrTon())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,alert,notification,configuration,smpp,message,set,header,smpp,constants,smpp,message,type,alert,notification,to,string,smpp,message,set,header,smpp,constants,alert,notification,get,sequence,number,smpp,message,set,header,smpp,constants,alert,notification,get,command,id,smpp,message,set,header,smpp,constants,alert,notification,get,command,status,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,ton,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,ton,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(AlertNotification alertNotification);1432971535;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(alertNotification, configuration)___        smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.AlertNotification.toString())__        smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(SmppConstants.COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(SmppConstants.COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON, alertNotification.getSourceAddrTon())__        smppMessage.setHeader(SmppConstants.ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_TON, alertNotification.getEsmeAddrTon())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,alert,notification,configuration,smpp,message,set,header,smpp,constants,smpp,message,type,alert,notification,to,string,smpp,message,set,header,smpp,constants,alert,notification,get,sequence,number,smpp,message,set,header,smpp,constants,alert,notification,get,command,id,smpp,message,set,header,smpp,constants,alert,notification,get,command,status,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,ton,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,ton,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(AlertNotification alertNotification);1441961757;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(alertNotification, configuration)___        smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.AlertNotification.toString())__        smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(SmppConstants.COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(SmppConstants.COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON, alertNotification.getSourceAddrTon())__        smppMessage.setHeader(SmppConstants.ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_TON, alertNotification.getEsmeAddrTon())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,alert,notification,configuration,smpp,message,set,header,smpp,constants,smpp,message,type,alert,notification,to,string,smpp,message,set,header,smpp,constants,alert,notification,get,sequence,number,smpp,message,set,header,smpp,constants,alert,notification,get,command,id,smpp,message,set,header,smpp,constants,alert,notification,get,command,status,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,ton,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,ton,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(AlertNotification alertNotification);1448458564;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(alertNotification, configuration)___        smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.AlertNotification.toString())__        smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(SmppConstants.COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(SmppConstants.COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON, alertNotification.getSourceAddrTon())__        smppMessage.setHeader(SmppConstants.ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_TON, alertNotification.getEsmeAddrTon())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,alert,notification,configuration,smpp,message,set,header,smpp,constants,smpp,message,type,alert,notification,to,string,smpp,message,set,header,smpp,constants,alert,notification,get,sequence,number,smpp,message,set,header,smpp,constants,alert,notification,get,command,id,smpp,message,set,header,smpp,constants,alert,notification,get,command,status,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,ton,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,ton,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(AlertNotification alertNotification);1464422027;Create a new SmppMessage from the inbound alert notification;public SmppMessage createSmppMessage(AlertNotification alertNotification) {_        SmppMessage smppMessage = new SmppMessage(alertNotification, configuration)___        smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.AlertNotification.toString())__        smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, alertNotification.getSequenceNumber())__        smppMessage.setHeader(SmppConstants.COMMAND_ID, alertNotification.getCommandId())__        smppMessage.setHeader(SmppConstants.COMMAND_STATUS, alertNotification.getCommandStatus())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR, alertNotification.getSourceAddr())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI, alertNotification.getSourceAddrNpi())__        smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON, alertNotification.getSourceAddrTon())__        smppMessage.setHeader(SmppConstants.ESME_ADDR, alertNotification.getEsmeAddr())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_NPI, alertNotification.getEsmeAddrNpi())__        smppMessage.setHeader(SmppConstants.ESME_ADDR_TON, alertNotification.getEsmeAddrTon())___        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,alert,notification;public,smpp,message,create,smpp,message,alert,notification,alert,notification,smpp,message,smpp,message,new,smpp,message,alert,notification,configuration,smpp,message,set,header,smpp,constants,smpp,message,type,alert,notification,to,string,smpp,message,set,header,smpp,constants,alert,notification,get,sequence,number,smpp,message,set,header,smpp,constants,alert,notification,get,command,id,smpp,message,set,header,smpp,constants,alert,notification,get,command,status,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,source,addr,ton,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,npi,smpp,message,set,header,smpp,constants,alert,notification,get,esme,addr,ton,return,smpp,message
SmppBinding -> Date getCurrentDate();1260263234;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> Date getCurrentDate();1260430217;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> Date getCurrentDate();1272589442;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> Date getCurrentDate();1274230707;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> Date getCurrentDate();1276431904;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> Date getCurrentDate();1283289848;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> Date getCurrentDate();1283800169;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> Date getCurrentDate();1289258847;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> Date getCurrentDate();1293907120;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> Date getCurrentDate();1297975937;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> Date getCurrentDate();1302206494;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> Date getCurrentDate();1305183367;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> Date getCurrentDate();1309727185;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> Date getCurrentDate();1315366055;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> Date getCurrentDate();1317851746;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> Date getCurrentDate();1349714461;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> Date getCurrentDate();1352120089;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> Date getCurrentDate();1352841234;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> Date getCurrentDate();1353612986;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> Date getCurrentDate();1362716422;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> Date getCurrentDate();1369947956;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> Date getCurrentDate();1377438136;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> Date getCurrentDate();1432971535;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> Date getCurrentDate();1441961757;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> Date getCurrentDate();1448458564;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> Date getCurrentDate();1464422027;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> Date getCurrentDate();1495703393;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> Date getCurrentDate();1524063178;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> Date getCurrentDate();1533918456;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> Date getCurrentDate();1540108158;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> Date getCurrentDate();1540108161;Returns the current date. Externalized for better test support.__@return the current date;Date getCurrentDate() {_        return new Date()__    };returns,the,current,date,externalized,for,better,test,support,return,the,current,date;date,get,current,date,return,new,date
SmppBinding -> public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception;1260263234;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(deliverSm)___        if (deliverSm.isSmscDeliveryReceipt()) {_            DeliveryReceipt smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            smppMessage.setBody(smscDeliveryReceipt.getText())___            smppMessage.setHeader(ID, smscDeliveryReceipt.getId())__            smppMessage.setHeader(DELIVERED, smscDeliveryReceipt.getDelivered())__            smppMessage.setHeader(DONE_DATE, smscDeliveryReceipt.getDoneDate())__            if (!"000".equals(smscDeliveryReceipt.getError())) {_                smppMessage.setHeader(ERROR, smscDeliveryReceipt.getError())__            }_            smppMessage.setHeader(SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__            smppMessage.setHeader(SUBMITTED, smscDeliveryReceipt.getSubmitted())__        } else {_            smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(),_                    configuration.getEncoding())))___            smppMessage.setHeader(SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(VALIDITY_PERIOD, deliverSm.getValidityPeriod())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,deliver,sm,if,deliver,sm,is,smsc,delivery,receipt,delivery,receipt,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,id,smsc,delivery,receipt,get,id,smpp,message,set,header,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,submitted,smsc,delivery,receipt,get,submitted,else,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,smpp,message,set,header,deliver,sm,get,sequence,number,smpp,message,set,header,deliver,sm,get,command,id,smpp,message,set,header,deliver,sm,get,source,addr,smpp,message,set,header,deliver,sm,get,dest,address,smpp,message,set,header,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,deliver,sm,get,validity,period,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception;1260430217;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(deliverSm, configuration)___        if (deliverSm.isSmscDeliveryReceipt()) {_            DeliveryReceipt smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            smppMessage.setBody(smscDeliveryReceipt.getText())___            smppMessage.setHeader(ID, smscDeliveryReceipt.getId())__            smppMessage.setHeader(DELIVERED, smscDeliveryReceipt.getDelivered())__            smppMessage.setHeader(DONE_DATE, smscDeliveryReceipt.getDoneDate())__            if (!"000".equals(smscDeliveryReceipt.getError())) {_                smppMessage.setHeader(ERROR, smscDeliveryReceipt.getError())__            }_            smppMessage.setHeader(SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__            smppMessage.setHeader(SUBMITTED, smscDeliveryReceipt.getSubmitted())__        } else {_            smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(),_                    configuration.getEncoding())))___            smppMessage.setHeader(SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(VALIDITY_PERIOD, deliverSm.getValidityPeriod())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,deliver,sm,configuration,if,deliver,sm,is,smsc,delivery,receipt,delivery,receipt,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,id,smsc,delivery,receipt,get,id,smpp,message,set,header,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,submitted,smsc,delivery,receipt,get,submitted,else,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,smpp,message,set,header,deliver,sm,get,sequence,number,smpp,message,set,header,deliver,sm,get,command,id,smpp,message,set,header,deliver,sm,get,source,addr,smpp,message,set,header,deliver,sm,get,dest,address,smpp,message,set,header,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,deliver,sm,get,validity,period,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception;1272589442;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(deliverSm, configuration)___        if (deliverSm.isSmscDeliveryReceipt()) {_            DeliveryReceipt smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            smppMessage.setBody(smscDeliveryReceipt.getText())___            smppMessage.setHeader(ID, smscDeliveryReceipt.getId())__            smppMessage.setHeader(DELIVERED, smscDeliveryReceipt.getDelivered())__            smppMessage.setHeader(DONE_DATE, smscDeliveryReceipt.getDoneDate())__            if (!"000".equals(smscDeliveryReceipt.getError())) {_                smppMessage.setHeader(ERROR, smscDeliveryReceipt.getError())__            }_            smppMessage.setHeader(SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__            smppMessage.setHeader(SUBMITTED, smscDeliveryReceipt.getSubmitted())__        } else {_            smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(),_                    configuration.getEncoding())))___            smppMessage.setHeader(SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(VALIDITY_PERIOD, deliverSm.getValidityPeriod())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,deliver,sm,configuration,if,deliver,sm,is,smsc,delivery,receipt,delivery,receipt,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,id,smsc,delivery,receipt,get,id,smpp,message,set,header,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,submitted,smsc,delivery,receipt,get,submitted,else,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,smpp,message,set,header,deliver,sm,get,sequence,number,smpp,message,set,header,deliver,sm,get,command,id,smpp,message,set,header,deliver,sm,get,source,addr,smpp,message,set,header,deliver,sm,get,dest,address,smpp,message,set,header,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,deliver,sm,get,validity,period,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception;1274230707;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(deliverSm, configuration)___        if (deliverSm.isSmscDeliveryReceipt()) {_            DeliveryReceipt smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            smppMessage.setBody(smscDeliveryReceipt.getText())___            smppMessage.setHeader(ID, smscDeliveryReceipt.getId())__            smppMessage.setHeader(DELIVERED, smscDeliveryReceipt.getDelivered())__            smppMessage.setHeader(DONE_DATE, smscDeliveryReceipt.getDoneDate())__            if (!"000".equals(smscDeliveryReceipt.getError())) {_                smppMessage.setHeader(ERROR, smscDeliveryReceipt.getError())__            }_            smppMessage.setHeader(SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__            smppMessage.setHeader(SUBMITTED, smscDeliveryReceipt.getSubmitted())__            smppMessage.setHeader(FINAL_STATUS, smscDeliveryReceipt.getFinalStatus())__        } else {_            smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(),_                    configuration.getEncoding())))___            smppMessage.setHeader(SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(VALIDITY_PERIOD, deliverSm.getValidityPeriod())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,deliver,sm,configuration,if,deliver,sm,is,smsc,delivery,receipt,delivery,receipt,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,id,smsc,delivery,receipt,get,id,smpp,message,set,header,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,submitted,smsc,delivery,receipt,get,submitted,smpp,message,set,header,smsc,delivery,receipt,get,final,status,else,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,smpp,message,set,header,deliver,sm,get,sequence,number,smpp,message,set,header,deliver,sm,get,command,id,smpp,message,set,header,deliver,sm,get,source,addr,smpp,message,set,header,deliver,sm,get,dest,address,smpp,message,set,header,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,deliver,sm,get,validity,period,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception;1276431904;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(deliverSm, configuration)___        if (deliverSm.isSmscDeliveryReceipt()) {_            DeliveryReceipt smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            smppMessage.setBody(smscDeliveryReceipt.getText())___            smppMessage.setHeader(ID, smscDeliveryReceipt.getId())__            smppMessage.setHeader(DELIVERED, smscDeliveryReceipt.getDelivered())__            smppMessage.setHeader(DONE_DATE, smscDeliveryReceipt.getDoneDate())__            if (!"000".equals(smscDeliveryReceipt.getError())) {_                smppMessage.setHeader(ERROR, smscDeliveryReceipt.getError())__            }_            smppMessage.setHeader(SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__            smppMessage.setHeader(SUBMITTED, smscDeliveryReceipt.getSubmitted())__            smppMessage.setHeader(FINAL_STATUS, smscDeliveryReceipt.getFinalStatus())__        } else {_            smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(),_                    configuration.getEncoding())))___            smppMessage.setHeader(SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(VALIDITY_PERIOD, deliverSm.getValidityPeriod())__            smppMessage.setHeader(SERVICE_TYPE, deliverSm.getServiceType())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,deliver,sm,configuration,if,deliver,sm,is,smsc,delivery,receipt,delivery,receipt,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,id,smsc,delivery,receipt,get,id,smpp,message,set,header,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,submitted,smsc,delivery,receipt,get,submitted,smpp,message,set,header,smsc,delivery,receipt,get,final,status,else,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,smpp,message,set,header,deliver,sm,get,sequence,number,smpp,message,set,header,deliver,sm,get,command,id,smpp,message,set,header,deliver,sm,get,source,addr,smpp,message,set,header,deliver,sm,get,dest,address,smpp,message,set,header,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,deliver,sm,get,validity,period,smpp,message,set,header,deliver,sm,get,service,type,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception;1283289848;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(deliverSm, configuration)___        if (deliverSm.isSmscDeliveryReceipt()) {_            DeliveryReceipt smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            smppMessage.setBody(smscDeliveryReceipt.getText())___            smppMessage.setHeader(ID, smscDeliveryReceipt.getId())__            smppMessage.setHeader(DELIVERED, smscDeliveryReceipt.getDelivered())__            smppMessage.setHeader(DONE_DATE, smscDeliveryReceipt.getDoneDate())__            if (!"000".equals(smscDeliveryReceipt.getError())) {_                smppMessage.setHeader(ERROR, smscDeliveryReceipt.getError())__            }_            smppMessage.setHeader(SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__            smppMessage.setHeader(SUBMITTED, smscDeliveryReceipt.getSubmitted())__            smppMessage.setHeader(FINAL_STATUS, smscDeliveryReceipt.getFinalStatus())__        } else {_            smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(),_                    configuration.getEncoding())))___            smppMessage.setHeader(SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(VALIDITY_PERIOD, deliverSm.getValidityPeriod())__            smppMessage.setHeader(SERVICE_TYPE, deliverSm.getServiceType())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,deliver,sm,configuration,if,deliver,sm,is,smsc,delivery,receipt,delivery,receipt,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,id,smsc,delivery,receipt,get,id,smpp,message,set,header,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,submitted,smsc,delivery,receipt,get,submitted,smpp,message,set,header,smsc,delivery,receipt,get,final,status,else,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,smpp,message,set,header,deliver,sm,get,sequence,number,smpp,message,set,header,deliver,sm,get,command,id,smpp,message,set,header,deliver,sm,get,source,addr,smpp,message,set,header,deliver,sm,get,dest,address,smpp,message,set,header,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,deliver,sm,get,validity,period,smpp,message,set,header,deliver,sm,get,service,type,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception;1283800169;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(deliverSm, configuration)___        if (deliverSm.isSmscDeliveryReceipt()) {_            DeliveryReceipt smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            smppMessage.setBody(smscDeliveryReceipt.getText())___            smppMessage.setHeader(ID, smscDeliveryReceipt.getId())__            smppMessage.setHeader(DELIVERED, smscDeliveryReceipt.getDelivered())__            smppMessage.setHeader(DONE_DATE, smscDeliveryReceipt.getDoneDate())__            if (!"000".equals(smscDeliveryReceipt.getError())) {_                smppMessage.setHeader(ERROR, smscDeliveryReceipt.getError())__            }_            smppMessage.setHeader(SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__            smppMessage.setHeader(SUBMITTED, smscDeliveryReceipt.getSubmitted())__            smppMessage.setHeader(FINAL_STATUS, smscDeliveryReceipt.getFinalStatus())__        } else {_            smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(),_                    configuration.getEncoding())))___            smppMessage.setHeader(SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(VALIDITY_PERIOD, deliverSm.getValidityPeriod())__            smppMessage.setHeader(SERVICE_TYPE, deliverSm.getServiceType())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,deliver,sm,configuration,if,deliver,sm,is,smsc,delivery,receipt,delivery,receipt,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,id,smsc,delivery,receipt,get,id,smpp,message,set,header,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,submitted,smsc,delivery,receipt,get,submitted,smpp,message,set,header,smsc,delivery,receipt,get,final,status,else,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,smpp,message,set,header,deliver,sm,get,sequence,number,smpp,message,set,header,deliver,sm,get,command,id,smpp,message,set,header,deliver,sm,get,source,addr,smpp,message,set,header,deliver,sm,get,dest,address,smpp,message,set,header,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,deliver,sm,get,validity,period,smpp,message,set,header,deliver,sm,get,service,type,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception;1289258847;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(deliverSm, configuration)___        if (deliverSm.isSmscDeliveryReceipt()) {_            DeliveryReceipt smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            smppMessage.setBody(smscDeliveryReceipt.getText())___            smppMessage.setHeader(ID, smscDeliveryReceipt.getId())__            smppMessage.setHeader(DELIVERED, smscDeliveryReceipt.getDelivered())__            smppMessage.setHeader(DONE_DATE, smscDeliveryReceipt.getDoneDate())__            if (!"000".equals(smscDeliveryReceipt.getError())) {_                smppMessage.setHeader(ERROR, smscDeliveryReceipt.getError())__            }_            smppMessage.setHeader(SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__            smppMessage.setHeader(SUBMITTED, smscDeliveryReceipt.getSubmitted())__            smppMessage.setHeader(FINAL_STATUS, smscDeliveryReceipt.getFinalStatus())__        } else {_            if (deliverSm.getShortMessage() != null) {_                smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(),_                        configuration.getEncoding())))__            } else if (deliverSm.getOptionalParametes() != null && deliverSm.getOptionalParametes().length > 0) {_                List<OptionalParameter> oplist = Arrays.asList(deliverSm.getOptionalParametes())___                for (OptionalParameter optPara : oplist) {_                    if (OptionalParameter.Tag.MESSAGE_PAYLOAD.code() == optPara.tag && OctetString.class.isInstance(optPara)) {_                        smppMessage.setBody(((OctetString) optPara).getValueAsString())__                        break__                    }_                }_            }__            smppMessage.setHeader(SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(VALIDITY_PERIOD, deliverSm.getValidityPeriod())__            smppMessage.setHeader(SERVICE_TYPE, deliverSm.getServiceType())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,deliver,sm,configuration,if,deliver,sm,is,smsc,delivery,receipt,delivery,receipt,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,id,smsc,delivery,receipt,get,id,smpp,message,set,header,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,submitted,smsc,delivery,receipt,get,submitted,smpp,message,set,header,smsc,delivery,receipt,get,final,status,else,if,deliver,sm,get,short,message,null,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,else,if,deliver,sm,get,optional,parametes,null,deliver,sm,get,optional,parametes,length,0,list,optional,parameter,oplist,arrays,as,list,deliver,sm,get,optional,parametes,for,optional,parameter,opt,para,oplist,if,optional,parameter,tag,code,opt,para,tag,octet,string,class,is,instance,opt,para,smpp,message,set,body,octet,string,opt,para,get,value,as,string,break,smpp,message,set,header,deliver,sm,get,sequence,number,smpp,message,set,header,deliver,sm,get,command,id,smpp,message,set,header,deliver,sm,get,source,addr,smpp,message,set,header,deliver,sm,get,dest,address,smpp,message,set,header,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,deliver,sm,get,validity,period,smpp,message,set,header,deliver,sm,get,service,type,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception;1293907120;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(deliverSm, configuration)___        if (deliverSm.isSmscDeliveryReceipt()) {_            smppMessage.setHeader(MESSAGE_TYPE, SmppMessageType.DeliveryReceipt.toString())__            DeliveryReceipt smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            smppMessage.setBody(smscDeliveryReceipt.getText())___            smppMessage.setHeader(ID, smscDeliveryReceipt.getId())__            smppMessage.setHeader(DELIVERED, smscDeliveryReceipt.getDelivered())__            smppMessage.setHeader(DONE_DATE, smscDeliveryReceipt.getDoneDate())__            if (!"000".equals(smscDeliveryReceipt.getError())) {_                smppMessage.setHeader(ERROR, smscDeliveryReceipt.getError())__            }_            smppMessage.setHeader(SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__            smppMessage.setHeader(SUBMITTED, smscDeliveryReceipt.getSubmitted())__            smppMessage.setHeader(FINAL_STATUS, smscDeliveryReceipt.getFinalStatus())__        } else {_            smppMessage.setHeader(MESSAGE_TYPE, SmppMessageType.DeliverSm.toString())__            if (deliverSm.getShortMessage() != null) {_                smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(),_                        configuration.getEncoding())))__            } else if (deliverSm.getOptionalParametes() != null && deliverSm.getOptionalParametes().length > 0) {_                List<OptionalParameter> oplist = Arrays.asList(deliverSm.getOptionalParametes())___                for (OptionalParameter optPara : oplist) {_                    if (OptionalParameter.Tag.MESSAGE_PAYLOAD.code() == optPara.tag && OctetString.class.isInstance(optPara)) {_                        smppMessage.setBody(((OctetString) optPara).getValueAsString())__                        break__                    }_                }_            }__            smppMessage.setHeader(SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(VALIDITY_PERIOD, deliverSm.getValidityPeriod())__            smppMessage.setHeader(SERVICE_TYPE, deliverSm.getServiceType())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,deliver,sm,configuration,if,deliver,sm,is,smsc,delivery,receipt,smpp,message,set,header,smpp,message,type,delivery,receipt,to,string,delivery,receipt,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,id,smsc,delivery,receipt,get,id,smpp,message,set,header,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,submitted,smsc,delivery,receipt,get,submitted,smpp,message,set,header,smsc,delivery,receipt,get,final,status,else,smpp,message,set,header,smpp,message,type,deliver,sm,to,string,if,deliver,sm,get,short,message,null,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,else,if,deliver,sm,get,optional,parametes,null,deliver,sm,get,optional,parametes,length,0,list,optional,parameter,oplist,arrays,as,list,deliver,sm,get,optional,parametes,for,optional,parameter,opt,para,oplist,if,optional,parameter,tag,code,opt,para,tag,octet,string,class,is,instance,opt,para,smpp,message,set,body,octet,string,opt,para,get,value,as,string,break,smpp,message,set,header,deliver,sm,get,sequence,number,smpp,message,set,header,deliver,sm,get,command,id,smpp,message,set,header,deliver,sm,get,source,addr,smpp,message,set,header,deliver,sm,get,dest,address,smpp,message,set,header,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,deliver,sm,get,validity,period,smpp,message,set,header,deliver,sm,get,service,type,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception;1297975937;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(deliverSm, configuration)___        if (deliverSm.isSmscDeliveryReceipt()) {_            smppMessage.setHeader(MESSAGE_TYPE, SmppMessageType.DeliveryReceipt.toString())__            DeliveryReceipt smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            smppMessage.setBody(smscDeliveryReceipt.getText())___            smppMessage.setHeader(ID, smscDeliveryReceipt.getId())__            smppMessage.setHeader(DELIVERED, smscDeliveryReceipt.getDelivered())__            smppMessage.setHeader(DONE_DATE, smscDeliveryReceipt.getDoneDate())__            if (!"000".equals(smscDeliveryReceipt.getError())) {_                smppMessage.setHeader(ERROR, smscDeliveryReceipt.getError())__            }_            smppMessage.setHeader(SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__            smppMessage.setHeader(SUBMITTED, smscDeliveryReceipt.getSubmitted())__            smppMessage.setHeader(FINAL_STATUS, smscDeliveryReceipt.getFinalStatus())__        } else {_            smppMessage.setHeader(MESSAGE_TYPE, SmppMessageType.DeliverSm.toString())__            if (deliverSm.getShortMessage() != null) {_                smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(),_                        configuration.getEncoding())))__            } else if (deliverSm.getOptionalParametes() != null && deliverSm.getOptionalParametes().length > 0) {_                List<OptionalParameter> oplist = Arrays.asList(deliverSm.getOptionalParametes())___                for (OptionalParameter optPara : oplist) {_                    if (OptionalParameter.Tag.MESSAGE_PAYLOAD.code() == optPara.tag && OctetString.class.isInstance(optPara)) {_                        smppMessage.setBody(((OctetString) optPara).getValueAsString())__                        break__                    }_                }_            }__            smppMessage.setHeader(SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(VALIDITY_PERIOD, deliverSm.getValidityPeriod())__            smppMessage.setHeader(SERVICE_TYPE, deliverSm.getServiceType())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,deliver,sm,configuration,if,deliver,sm,is,smsc,delivery,receipt,smpp,message,set,header,smpp,message,type,delivery,receipt,to,string,delivery,receipt,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,id,smsc,delivery,receipt,get,id,smpp,message,set,header,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,submitted,smsc,delivery,receipt,get,submitted,smpp,message,set,header,smsc,delivery,receipt,get,final,status,else,smpp,message,set,header,smpp,message,type,deliver,sm,to,string,if,deliver,sm,get,short,message,null,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,else,if,deliver,sm,get,optional,parametes,null,deliver,sm,get,optional,parametes,length,0,list,optional,parameter,oplist,arrays,as,list,deliver,sm,get,optional,parametes,for,optional,parameter,opt,para,oplist,if,optional,parameter,tag,code,opt,para,tag,octet,string,class,is,instance,opt,para,smpp,message,set,body,octet,string,opt,para,get,value,as,string,break,smpp,message,set,header,deliver,sm,get,sequence,number,smpp,message,set,header,deliver,sm,get,command,id,smpp,message,set,header,deliver,sm,get,source,addr,smpp,message,set,header,deliver,sm,get,dest,address,smpp,message,set,header,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,deliver,sm,get,validity,period,smpp,message,set,header,deliver,sm,get,service,type,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception;1302206494;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(deliverSm, configuration)___        if (deliverSm.isSmscDeliveryReceipt()) {_            smppMessage.setHeader(MESSAGE_TYPE, SmppMessageType.DeliveryReceipt.toString())__            DeliveryReceipt smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            smppMessage.setBody(smscDeliveryReceipt.getText())___            smppMessage.setHeader(ID, smscDeliveryReceipt.getId())__            smppMessage.setHeader(DELIVERED, smscDeliveryReceipt.getDelivered())__            smppMessage.setHeader(DONE_DATE, smscDeliveryReceipt.getDoneDate())__            if (!"000".equals(smscDeliveryReceipt.getError())) {_                smppMessage.setHeader(ERROR, smscDeliveryReceipt.getError())__            }_            smppMessage.setHeader(SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__            smppMessage.setHeader(SUBMITTED, smscDeliveryReceipt.getSubmitted())__            smppMessage.setHeader(FINAL_STATUS, smscDeliveryReceipt.getFinalStatus())__        } else {_            smppMessage.setHeader(MESSAGE_TYPE, SmppMessageType.DeliverSm.toString())__            if (deliverSm.getShortMessage() != null) {_                smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(),_                        configuration.getEncoding())))__            } else if (deliverSm.getOptionalParametes() != null && deliverSm.getOptionalParametes().length > 0) {_                List<OptionalParameter> oplist = Arrays.asList(deliverSm.getOptionalParametes())___                for (OptionalParameter optPara : oplist) {_                    if (OptionalParameter.Tag.MESSAGE_PAYLOAD.code() == optPara.tag && OctetString.class.isInstance(optPara)) {_                        smppMessage.setBody(((OctetString) optPara).getValueAsString())__                        break__                    }_                }_            }__            smppMessage.setHeader(SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(VALIDITY_PERIOD, deliverSm.getValidityPeriod())__            smppMessage.setHeader(SERVICE_TYPE, deliverSm.getServiceType())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,deliver,sm,configuration,if,deliver,sm,is,smsc,delivery,receipt,smpp,message,set,header,smpp,message,type,delivery,receipt,to,string,delivery,receipt,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,id,smsc,delivery,receipt,get,id,smpp,message,set,header,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,submitted,smsc,delivery,receipt,get,submitted,smpp,message,set,header,smsc,delivery,receipt,get,final,status,else,smpp,message,set,header,smpp,message,type,deliver,sm,to,string,if,deliver,sm,get,short,message,null,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,else,if,deliver,sm,get,optional,parametes,null,deliver,sm,get,optional,parametes,length,0,list,optional,parameter,oplist,arrays,as,list,deliver,sm,get,optional,parametes,for,optional,parameter,opt,para,oplist,if,optional,parameter,tag,code,opt,para,tag,octet,string,class,is,instance,opt,para,smpp,message,set,body,octet,string,opt,para,get,value,as,string,break,smpp,message,set,header,deliver,sm,get,sequence,number,smpp,message,set,header,deliver,sm,get,command,id,smpp,message,set,header,deliver,sm,get,source,addr,smpp,message,set,header,deliver,sm,get,dest,address,smpp,message,set,header,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,deliver,sm,get,validity,period,smpp,message,set,header,deliver,sm,get,service,type,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception;1305183367;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(deliverSm, configuration)___        if (deliverSm.isSmscDeliveryReceipt()) {_            smppMessage.setHeader(MESSAGE_TYPE, SmppMessageType.DeliveryReceipt.toString())__            DeliveryReceipt smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            smppMessage.setBody(smscDeliveryReceipt.getText())___            smppMessage.setHeader(ID, smscDeliveryReceipt.getId())__            smppMessage.setHeader(DELIVERED, smscDeliveryReceipt.getDelivered())__            smppMessage.setHeader(DONE_DATE, smscDeliveryReceipt.getDoneDate())__            if (!"000".equals(smscDeliveryReceipt.getError())) {_                smppMessage.setHeader(ERROR, smscDeliveryReceipt.getError())__            }_            smppMessage.setHeader(SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__            smppMessage.setHeader(SUBMITTED, smscDeliveryReceipt.getSubmitted())__            smppMessage.setHeader(FINAL_STATUS, smscDeliveryReceipt.getFinalStatus())__        } else {_            smppMessage.setHeader(MESSAGE_TYPE, SmppMessageType.DeliverSm.toString())__            if (deliverSm.getShortMessage() != null) {_                smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(),_                        configuration.getEncoding())))__            } else if (deliverSm.getOptionalParametes() != null && deliverSm.getOptionalParametes().length > 0) {_                List<OptionalParameter> oplist = Arrays.asList(deliverSm.getOptionalParametes())___                for (OptionalParameter optPara : oplist) {_                    if (OptionalParameter.Tag.MESSAGE_PAYLOAD.code() == optPara.tag && OctetString.class.isInstance(optPara)) {_                        smppMessage.setBody(((OctetString) optPara).getValueAsString())__                        break__                    }_                }_            }__            smppMessage.setHeader(SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(VALIDITY_PERIOD, deliverSm.getValidityPeriod())__            smppMessage.setHeader(SERVICE_TYPE, deliverSm.getServiceType())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,deliver,sm,configuration,if,deliver,sm,is,smsc,delivery,receipt,smpp,message,set,header,smpp,message,type,delivery,receipt,to,string,delivery,receipt,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,id,smsc,delivery,receipt,get,id,smpp,message,set,header,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,submitted,smsc,delivery,receipt,get,submitted,smpp,message,set,header,smsc,delivery,receipt,get,final,status,else,smpp,message,set,header,smpp,message,type,deliver,sm,to,string,if,deliver,sm,get,short,message,null,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,else,if,deliver,sm,get,optional,parametes,null,deliver,sm,get,optional,parametes,length,0,list,optional,parameter,oplist,arrays,as,list,deliver,sm,get,optional,parametes,for,optional,parameter,opt,para,oplist,if,optional,parameter,tag,code,opt,para,tag,octet,string,class,is,instance,opt,para,smpp,message,set,body,octet,string,opt,para,get,value,as,string,break,smpp,message,set,header,deliver,sm,get,sequence,number,smpp,message,set,header,deliver,sm,get,command,id,smpp,message,set,header,deliver,sm,get,source,addr,smpp,message,set,header,deliver,sm,get,dest,address,smpp,message,set,header,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,deliver,sm,get,validity,period,smpp,message,set,header,deliver,sm,get,service,type,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception;1309727185;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(deliverSm, configuration)___        if (deliverSm.isSmscDeliveryReceipt()) {_            smppMessage.setHeader(MESSAGE_TYPE, SmppMessageType.DeliveryReceipt.toString())__            DeliveryReceipt smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            smppMessage.setBody(smscDeliveryReceipt.getText())___            smppMessage.setHeader(ID, smscDeliveryReceipt.getId())__            smppMessage.setHeader(DELIVERED, smscDeliveryReceipt.getDelivered())__            smppMessage.setHeader(DONE_DATE, smscDeliveryReceipt.getDoneDate())__            if (!"000".equals(smscDeliveryReceipt.getError())) {_                smppMessage.setHeader(ERROR, smscDeliveryReceipt.getError())__            }_            smppMessage.setHeader(SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__            smppMessage.setHeader(SUBMITTED, smscDeliveryReceipt.getSubmitted())__            smppMessage.setHeader(FINAL_STATUS, smscDeliveryReceipt.getFinalStatus())__        } else {_            smppMessage.setHeader(MESSAGE_TYPE, SmppMessageType.DeliverSm.toString())__            if (deliverSm.getShortMessage() != null) {_                smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(),_                        configuration.getEncoding())))__            } else if (deliverSm.getOptionalParametes() != null && deliverSm.getOptionalParametes().length > 0) {_                List<OptionalParameter> oplist = Arrays.asList(deliverSm.getOptionalParametes())___                for (OptionalParameter optPara : oplist) {_                    if (OptionalParameter.Tag.MESSAGE_PAYLOAD.code() == optPara.tag && OctetString.class.isInstance(optPara)) {_                        smppMessage.setBody(((OctetString) optPara).getValueAsString())__                        break__                    }_                }_            }__            smppMessage.setHeader(SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(VALIDITY_PERIOD, deliverSm.getValidityPeriod())__            smppMessage.setHeader(SERVICE_TYPE, deliverSm.getServiceType())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,deliver,sm,configuration,if,deliver,sm,is,smsc,delivery,receipt,smpp,message,set,header,smpp,message,type,delivery,receipt,to,string,delivery,receipt,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,id,smsc,delivery,receipt,get,id,smpp,message,set,header,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,submitted,smsc,delivery,receipt,get,submitted,smpp,message,set,header,smsc,delivery,receipt,get,final,status,else,smpp,message,set,header,smpp,message,type,deliver,sm,to,string,if,deliver,sm,get,short,message,null,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,else,if,deliver,sm,get,optional,parametes,null,deliver,sm,get,optional,parametes,length,0,list,optional,parameter,oplist,arrays,as,list,deliver,sm,get,optional,parametes,for,optional,parameter,opt,para,oplist,if,optional,parameter,tag,code,opt,para,tag,octet,string,class,is,instance,opt,para,smpp,message,set,body,octet,string,opt,para,get,value,as,string,break,smpp,message,set,header,deliver,sm,get,sequence,number,smpp,message,set,header,deliver,sm,get,command,id,smpp,message,set,header,deliver,sm,get,source,addr,smpp,message,set,header,deliver,sm,get,dest,address,smpp,message,set,header,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,deliver,sm,get,validity,period,smpp,message,set,header,deliver,sm,get,service,type,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception;1315366055;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(deliverSm, configuration)___        if (deliverSm.isSmscDeliveryReceipt()) {_            smppMessage.setHeader(MESSAGE_TYPE, SmppMessageType.DeliveryReceipt.toString())__            DeliveryReceipt smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            smppMessage.setBody(smscDeliveryReceipt.getText())___            smppMessage.setHeader(ID, smscDeliveryReceipt.getId())__            smppMessage.setHeader(DELIVERED, smscDeliveryReceipt.getDelivered())__            smppMessage.setHeader(DONE_DATE, smscDeliveryReceipt.getDoneDate())__            if (!"000".equals(smscDeliveryReceipt.getError())) {_                smppMessage.setHeader(ERROR, smscDeliveryReceipt.getError())__            }_            smppMessage.setHeader(SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__            smppMessage.setHeader(SUBMITTED, smscDeliveryReceipt.getSubmitted())__            smppMessage.setHeader(FINAL_STATUS, smscDeliveryReceipt.getFinalStatus())__        } else {_            smppMessage.setHeader(MESSAGE_TYPE, SmppMessageType.DeliverSm.toString())__            if (deliverSm.getShortMessage() != null) {_                smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(),_                        configuration.getEncoding())))__            } else if (deliverSm.getOptionalParametes() != null && deliverSm.getOptionalParametes().length > 0) {_                List<OptionalParameter> oplist = Arrays.asList(deliverSm.getOptionalParametes())___                for (OptionalParameter optPara : oplist) {_                    if (OptionalParameter.Tag.MESSAGE_PAYLOAD.code() == optPara.tag && OctetString.class.isInstance(optPara)) {_                        smppMessage.setBody(((OctetString) optPara).getValueAsString())__                        break__                    }_                }_            }__            smppMessage.setHeader(SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(VALIDITY_PERIOD, deliverSm.getValidityPeriod())__            smppMessage.setHeader(SERVICE_TYPE, deliverSm.getServiceType())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,deliver,sm,configuration,if,deliver,sm,is,smsc,delivery,receipt,smpp,message,set,header,smpp,message,type,delivery,receipt,to,string,delivery,receipt,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,id,smsc,delivery,receipt,get,id,smpp,message,set,header,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,submitted,smsc,delivery,receipt,get,submitted,smpp,message,set,header,smsc,delivery,receipt,get,final,status,else,smpp,message,set,header,smpp,message,type,deliver,sm,to,string,if,deliver,sm,get,short,message,null,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,else,if,deliver,sm,get,optional,parametes,null,deliver,sm,get,optional,parametes,length,0,list,optional,parameter,oplist,arrays,as,list,deliver,sm,get,optional,parametes,for,optional,parameter,opt,para,oplist,if,optional,parameter,tag,code,opt,para,tag,octet,string,class,is,instance,opt,para,smpp,message,set,body,octet,string,opt,para,get,value,as,string,break,smpp,message,set,header,deliver,sm,get,sequence,number,smpp,message,set,header,deliver,sm,get,command,id,smpp,message,set,header,deliver,sm,get,source,addr,smpp,message,set,header,deliver,sm,get,dest,address,smpp,message,set,header,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,deliver,sm,get,validity,period,smpp,message,set,header,deliver,sm,get,service,type,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception;1317851746;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(deliverSm, configuration)___        if (deliverSm.isSmscDeliveryReceipt()) {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliveryReceipt.toString())__            DeliveryReceipt smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            smppMessage.setBody(smscDeliveryReceipt.getText())___            smppMessage.setHeader(SmppConstants.ID, smscDeliveryReceipt.getId())__            smppMessage.setHeader(SmppConstants.DELIVERED, smscDeliveryReceipt.getDelivered())__            smppMessage.setHeader(SmppConstants.DONE_DATE, smscDeliveryReceipt.getDoneDate())__            if (!"000".equals(smscDeliveryReceipt.getError())) {_                smppMessage.setHeader(SmppConstants.ERROR, smscDeliveryReceipt.getError())__            }_            smppMessage.setHeader(SmppConstants.SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__            smppMessage.setHeader(SmppConstants.SUBMITTED, smscDeliveryReceipt.getSubmitted())__            smppMessage.setHeader(SmppConstants.FINAL_STATUS, smscDeliveryReceipt.getFinalStatus())__        } else {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliverSm.toString())__            if (deliverSm.getShortMessage() != null) {_                smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(),_                        configuration.getEncoding())))__            } else if (deliverSm.getOptionalParametes() != null && deliverSm.getOptionalParametes().length > 0) {_                List<OptionalParameter> oplist = Arrays.asList(deliverSm.getOptionalParametes())___                for (OptionalParameter optPara : oplist) {_                    if (OptionalParameter.Tag.MESSAGE_PAYLOAD.code() == optPara.tag && OctetString.class.isInstance(optPara)) {_                        smppMessage.setBody(((OctetString) optPara).getValueAsString())__                        break__                    }_                }_            }__            smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(SmppConstants.COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(SmppConstants.DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SmppConstants.SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(SmppConstants.VALIDITY_PERIOD, deliverSm.getValidityPeriod())__            smppMessage.setHeader(SmppConstants.SERVICE_TYPE, deliverSm.getServiceType())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,deliver,sm,configuration,if,deliver,sm,is,smsc,delivery,receipt,smpp,message,set,header,smpp,constants,smpp,message,type,delivery,receipt,to,string,delivery,receipt,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,smpp,constants,id,smsc,delivery,receipt,get,id,smpp,message,set,header,smpp,constants,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,smpp,constants,submitted,smsc,delivery,receipt,get,submitted,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,final,status,else,smpp,message,set,header,smpp,constants,smpp,message,type,deliver,sm,to,string,if,deliver,sm,get,short,message,null,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,else,if,deliver,sm,get,optional,parametes,null,deliver,sm,get,optional,parametes,length,0,list,optional,parameter,oplist,arrays,as,list,deliver,sm,get,optional,parametes,for,optional,parameter,opt,para,oplist,if,optional,parameter,tag,code,opt,para,tag,octet,string,class,is,instance,opt,para,smpp,message,set,body,octet,string,opt,para,get,value,as,string,break,smpp,message,set,header,smpp,constants,deliver,sm,get,sequence,number,smpp,message,set,header,smpp,constants,deliver,sm,get,command,id,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,address,smpp,message,set,header,smpp,constants,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,smpp,constants,deliver,sm,get,validity,period,smpp,message,set,header,smpp,constants,deliver,sm,get,service,type,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception;1349714461;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(deliverSm, configuration)___        if (deliverSm.isSmscDeliveryReceipt()) {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliveryReceipt.toString())__            DeliveryReceipt smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            smppMessage.setBody(smscDeliveryReceipt.getText())___            smppMessage.setHeader(SmppConstants.ID, smscDeliveryReceipt.getId())__            smppMessage.setHeader(SmppConstants.DELIVERED, smscDeliveryReceipt.getDelivered())__            smppMessage.setHeader(SmppConstants.DONE_DATE, smscDeliveryReceipt.getDoneDate())__            if (!"000".equals(smscDeliveryReceipt.getError())) {_                smppMessage.setHeader(SmppConstants.ERROR, smscDeliveryReceipt.getError())__            }_            smppMessage.setHeader(SmppConstants.SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__            smppMessage.setHeader(SmppConstants.SUBMITTED, smscDeliveryReceipt.getSubmitted())__            smppMessage.setHeader(SmppConstants.FINAL_STATUS, smscDeliveryReceipt.getFinalStatus())__        } else {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliverSm.toString())__            if (deliverSm.getShortMessage() != null) {_                smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(),_                        configuration.getEncoding())))__            } else if (deliverSm.getOptionalParametes() != null && deliverSm.getOptionalParametes().length > 0) {_                List<OptionalParameter> oplist = Arrays.asList(deliverSm.getOptionalParametes())___                for (OptionalParameter optPara : oplist) {_                    if (OptionalParameter.Tag.MESSAGE_PAYLOAD.code() == optPara.tag && OctetString.class.isInstance(optPara)) {_                        smppMessage.setBody(((OctetString) optPara).getValueAsString())__                        break__                    }_                }_            }__            smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(SmppConstants.COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(SmppConstants.DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SmppConstants.SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(SmppConstants.VALIDITY_PERIOD, deliverSm.getValidityPeriod())__            smppMessage.setHeader(SmppConstants.SERVICE_TYPE, deliverSm.getServiceType())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,deliver,sm,configuration,if,deliver,sm,is,smsc,delivery,receipt,smpp,message,set,header,smpp,constants,smpp,message,type,delivery,receipt,to,string,delivery,receipt,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,smpp,constants,id,smsc,delivery,receipt,get,id,smpp,message,set,header,smpp,constants,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,smpp,constants,submitted,smsc,delivery,receipt,get,submitted,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,final,status,else,smpp,message,set,header,smpp,constants,smpp,message,type,deliver,sm,to,string,if,deliver,sm,get,short,message,null,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,else,if,deliver,sm,get,optional,parametes,null,deliver,sm,get,optional,parametes,length,0,list,optional,parameter,oplist,arrays,as,list,deliver,sm,get,optional,parametes,for,optional,parameter,opt,para,oplist,if,optional,parameter,tag,code,opt,para,tag,octet,string,class,is,instance,opt,para,smpp,message,set,body,octet,string,opt,para,get,value,as,string,break,smpp,message,set,header,smpp,constants,deliver,sm,get,sequence,number,smpp,message,set,header,smpp,constants,deliver,sm,get,command,id,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,address,smpp,message,set,header,smpp,constants,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,smpp,constants,deliver,sm,get,validity,period,smpp,message,set,header,smpp,constants,deliver,sm,get,service,type,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception;1352120089;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(deliverSm, configuration)___        if (deliverSm.isSmscDeliveryReceipt()) {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliveryReceipt.toString())__            DeliveryReceipt smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            smppMessage.setBody(smscDeliveryReceipt.getText())___            smppMessage.setHeader(SmppConstants.ID, smscDeliveryReceipt.getId())__            smppMessage.setHeader(SmppConstants.DELIVERED, smscDeliveryReceipt.getDelivered())__            smppMessage.setHeader(SmppConstants.DONE_DATE, smscDeliveryReceipt.getDoneDate())__            if (!"000".equals(smscDeliveryReceipt.getError())) {_                smppMessage.setHeader(SmppConstants.ERROR, smscDeliveryReceipt.getError())__            }_            smppMessage.setHeader(SmppConstants.SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__            smppMessage.setHeader(SmppConstants.SUBMITTED, smscDeliveryReceipt.getSubmitted())__            smppMessage.setHeader(SmppConstants.FINAL_STATUS, smscDeliveryReceipt.getFinalStatus())__        } else {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliverSm.toString())__            if (deliverSm.getShortMessage() != null) {_                if (SmppUtils.parseAlphabetFromDataCoding(deliverSm.getDataCoding()) == Alphabet.ALPHA_8_BIT) {_                    smppMessage.setBody(new String(deliverSm.getShortMessage()))__                } else {_                    smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(),_                                                                  configuration.getEncoding())))__                }_            } else if (deliverSm.getOptionalParametes() != null && deliverSm.getOptionalParametes().length > 0) {_                List<OptionalParameter> oplist = Arrays.asList(deliverSm.getOptionalParametes())___                for (OptionalParameter optPara : oplist) {_                    if (OptionalParameter.Tag.MESSAGE_PAYLOAD.code() == optPara.tag && OctetString.class.isInstance(optPara)) {_                        smppMessage.setBody(((OctetString) optPara).getValueAsString())__                        break__                    }_                }_            }__            smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(SmppConstants.COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(SmppConstants.DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SmppConstants.SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(SmppConstants.VALIDITY_PERIOD, deliverSm.getValidityPeriod())__            smppMessage.setHeader(SmppConstants.SERVICE_TYPE, deliverSm.getServiceType())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,deliver,sm,configuration,if,deliver,sm,is,smsc,delivery,receipt,smpp,message,set,header,smpp,constants,smpp,message,type,delivery,receipt,to,string,delivery,receipt,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,smpp,constants,id,smsc,delivery,receipt,get,id,smpp,message,set,header,smpp,constants,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,smpp,constants,submitted,smsc,delivery,receipt,get,submitted,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,final,status,else,smpp,message,set,header,smpp,constants,smpp,message,type,deliver,sm,to,string,if,deliver,sm,get,short,message,null,if,smpp,utils,parse,alphabet,from,data,coding,deliver,sm,get,data,coding,alphabet,smpp,message,set,body,new,string,deliver,sm,get,short,message,else,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,else,if,deliver,sm,get,optional,parametes,null,deliver,sm,get,optional,parametes,length,0,list,optional,parameter,oplist,arrays,as,list,deliver,sm,get,optional,parametes,for,optional,parameter,opt,para,oplist,if,optional,parameter,tag,code,opt,para,tag,octet,string,class,is,instance,opt,para,smpp,message,set,body,octet,string,opt,para,get,value,as,string,break,smpp,message,set,header,smpp,constants,deliver,sm,get,sequence,number,smpp,message,set,header,smpp,constants,deliver,sm,get,command,id,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,address,smpp,message,set,header,smpp,constants,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,smpp,constants,deliver,sm,get,validity,period,smpp,message,set,header,smpp,constants,deliver,sm,get,service,type,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception;1352841234;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(deliverSm, configuration)___        if (deliverSm.isSmscDeliveryReceipt()) {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliveryReceipt.toString())__            DeliveryReceipt smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            smppMessage.setBody(smscDeliveryReceipt.getText())___            smppMessage.setHeader(SmppConstants.ID, smscDeliveryReceipt.getId())__            smppMessage.setHeader(SmppConstants.DELIVERED, smscDeliveryReceipt.getDelivered())__            smppMessage.setHeader(SmppConstants.DONE_DATE, smscDeliveryReceipt.getDoneDate())__            if (!"000".equals(smscDeliveryReceipt.getError())) {_                smppMessage.setHeader(SmppConstants.ERROR, smscDeliveryReceipt.getError())__            }_            smppMessage.setHeader(SmppConstants.SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__            smppMessage.setHeader(SmppConstants.SUBMITTED, smscDeliveryReceipt.getSubmitted())__            smppMessage.setHeader(SmppConstants.FINAL_STATUS, smscDeliveryReceipt.getFinalStatus())__        } else {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliverSm.toString())__            if (deliverSm.getShortMessage() != null) {_                if (SmppUtils.parseAlphabetFromDataCoding(deliverSm.getDataCoding()) == Alphabet.ALPHA_8_BIT) {_                    smppMessage.setBody(deliverSm.getShortMessage())__                } else {_                    smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(),_                                                                  configuration.getEncoding())))__                }_            } else if (deliverSm.getOptionalParametes() != null && deliverSm.getOptionalParametes().length > 0) {_                List<OptionalParameter> oplist = Arrays.asList(deliverSm.getOptionalParametes())___                for (OptionalParameter optPara : oplist) {_                    if (OptionalParameter.Tag.MESSAGE_PAYLOAD.code() == optPara.tag && OctetString.class.isInstance(optPara)) {_                        smppMessage.setBody(((OctetString) optPara).getValueAsString())__                        break__                    }_                }_            }__            smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(SmppConstants.COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(SmppConstants.DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SmppConstants.SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(SmppConstants.VALIDITY_PERIOD, deliverSm.getValidityPeriod())__            smppMessage.setHeader(SmppConstants.SERVICE_TYPE, deliverSm.getServiceType())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,deliver,sm,configuration,if,deliver,sm,is,smsc,delivery,receipt,smpp,message,set,header,smpp,constants,smpp,message,type,delivery,receipt,to,string,delivery,receipt,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,smpp,constants,id,smsc,delivery,receipt,get,id,smpp,message,set,header,smpp,constants,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,smpp,constants,submitted,smsc,delivery,receipt,get,submitted,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,final,status,else,smpp,message,set,header,smpp,constants,smpp,message,type,deliver,sm,to,string,if,deliver,sm,get,short,message,null,if,smpp,utils,parse,alphabet,from,data,coding,deliver,sm,get,data,coding,alphabet,smpp,message,set,body,deliver,sm,get,short,message,else,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,else,if,deliver,sm,get,optional,parametes,null,deliver,sm,get,optional,parametes,length,0,list,optional,parameter,oplist,arrays,as,list,deliver,sm,get,optional,parametes,for,optional,parameter,opt,para,oplist,if,optional,parameter,tag,code,opt,para,tag,octet,string,class,is,instance,opt,para,smpp,message,set,body,octet,string,opt,para,get,value,as,string,break,smpp,message,set,header,smpp,constants,deliver,sm,get,sequence,number,smpp,message,set,header,smpp,constants,deliver,sm,get,command,id,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,address,smpp,message,set,header,smpp,constants,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,smpp,constants,deliver,sm,get,validity,period,smpp,message,set,header,smpp,constants,deliver,sm,get,service,type,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception;1353612986;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(deliverSm, configuration)___        if (deliverSm.isSmscDeliveryReceipt()) {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliveryReceipt.toString())__            DeliveryReceipt smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            smppMessage.setBody(smscDeliveryReceipt.getText())___            smppMessage.setHeader(SmppConstants.ID, smscDeliveryReceipt.getId())__            smppMessage.setHeader(SmppConstants.DELIVERED, smscDeliveryReceipt.getDelivered())__            smppMessage.setHeader(SmppConstants.DONE_DATE, smscDeliveryReceipt.getDoneDate())__            if (!"000".equals(smscDeliveryReceipt.getError())) {_                smppMessage.setHeader(SmppConstants.ERROR, smscDeliveryReceipt.getError())__            }_            smppMessage.setHeader(SmppConstants.SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__            smppMessage.setHeader(SmppConstants.SUBMITTED, smscDeliveryReceipt.getSubmitted())__            smppMessage.setHeader(SmppConstants.FINAL_STATUS, smscDeliveryReceipt.getFinalStatus())__        } else {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliverSm.toString())___            if (deliverSm.getShortMessage() != null) {_                if (SmppUtils.parseAlphabetFromDataCoding(deliverSm.getDataCoding()) == Alphabet.ALPHA_8_BIT) {_                    smppMessage.setBody(deliverSm.getShortMessage())__                } else {_                    smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(),_                                                                  configuration.getEncoding())))__                }_            } else if (deliverSm.getOptionalParametes() != null && deliverSm.getOptionalParametes().length > 0) {_                List<OptionalParameter> oplist = Arrays.asList(deliverSm.getOptionalParametes())___                for (OptionalParameter optPara : oplist) {_                    if (OptionalParameter.Tag.MESSAGE_PAYLOAD.code() == optPara.tag && OctetString.class.isInstance(optPara)) {_                        smppMessage.setBody(((OctetString) optPara).getValueAsString())__                        break__                    }_                }_            }__            smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(SmppConstants.COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI, deliverSm.getSourceAddrNpi())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON, deliverSm.getSourceAddrTon())__            smppMessage.setHeader(SmppConstants.DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SmppConstants.DEST_ADDR_NPI, deliverSm.getDestAddrNpi())__            smppMessage.setHeader(SmppConstants.DEST_ADDR_TON, deliverSm.getDestAddrTon())__            smppMessage.setHeader(SmppConstants.SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(SmppConstants.VALIDITY_PERIOD, deliverSm.getValidityPeriod())__            smppMessage.setHeader(SmppConstants.SERVICE_TYPE, deliverSm.getServiceType())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,deliver,sm,configuration,if,deliver,sm,is,smsc,delivery,receipt,smpp,message,set,header,smpp,constants,smpp,message,type,delivery,receipt,to,string,delivery,receipt,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,smpp,constants,id,smsc,delivery,receipt,get,id,smpp,message,set,header,smpp,constants,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,smpp,constants,submitted,smsc,delivery,receipt,get,submitted,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,final,status,else,smpp,message,set,header,smpp,constants,smpp,message,type,deliver,sm,to,string,if,deliver,sm,get,short,message,null,if,smpp,utils,parse,alphabet,from,data,coding,deliver,sm,get,data,coding,alphabet,smpp,message,set,body,deliver,sm,get,short,message,else,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,else,if,deliver,sm,get,optional,parametes,null,deliver,sm,get,optional,parametes,length,0,list,optional,parameter,oplist,arrays,as,list,deliver,sm,get,optional,parametes,for,optional,parameter,opt,para,oplist,if,optional,parameter,tag,code,opt,para,tag,octet,string,class,is,instance,opt,para,smpp,message,set,body,octet,string,opt,para,get,value,as,string,break,smpp,message,set,header,smpp,constants,deliver,sm,get,sequence,number,smpp,message,set,header,smpp,constants,deliver,sm,get,command,id,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,npi,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,ton,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,address,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,addr,npi,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,addr,ton,smpp,message,set,header,smpp,constants,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,smpp,constants,deliver,sm,get,validity,period,smpp,message,set,header,smpp,constants,deliver,sm,get,service,type,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception;1362716422;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(deliverSm, configuration)___        if (deliverSm.isSmscDeliveryReceipt()) {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliveryReceipt.toString())__            DeliveryReceipt smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            smppMessage.setBody(smscDeliveryReceipt.getText())___            smppMessage.setHeader(SmppConstants.ID, smscDeliveryReceipt.getId())__            smppMessage.setHeader(SmppConstants.DELIVERED, smscDeliveryReceipt.getDelivered())__            smppMessage.setHeader(SmppConstants.DONE_DATE, smscDeliveryReceipt.getDoneDate())__            if (!"000".equals(smscDeliveryReceipt.getError())) {_                smppMessage.setHeader(SmppConstants.ERROR, smscDeliveryReceipt.getError())__            }_            smppMessage.setHeader(SmppConstants.SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__            smppMessage.setHeader(SmppConstants.SUBMITTED, smscDeliveryReceipt.getSubmitted())__            smppMessage.setHeader(SmppConstants.FINAL_STATUS, smscDeliveryReceipt.getFinalStatus())__            if (deliverSm.getOptionalParametes() != null && deliverSm.getOptionalParametes().length > 0) {_                List<OptionalParameter> oplist = Arrays.asList(deliverSm.getOptionalParametes())___                Map<String, Object> optParams = new HashMap<String, Object>()__                for (OptionalParameter optPara : oplist) {_                    if (OctetString.class.isInstance(optPara)) {_                        optParams.put(OptionalParameter.Tag.valueOf(optPara.tag).toString(), ((OctetString) optPara).getValueAsString())__                    } else if (org.jsmpp.bean.OptionalParameter.COctetString.class.isInstance(optPara)) {_                        optParams.put(OptionalParameter.Tag.valueOf(optPara.tag).toString(), ((COctetString) optPara).getValueAsString())__                    } else if (org.jsmpp.bean.OptionalParameter.Byte.class.isInstance(optPara)) {_                        optParams.put(OptionalParameter.Tag.valueOf(optPara.tag).toString(), Byte.valueOf(((org.jsmpp.bean.OptionalParameter.Byte) optPara).getValue()))__                    } else if (org.jsmpp.bean.OptionalParameter.Short.class.isInstance(optPara)) {_                        optParams.put(OptionalParameter.Tag.valueOf(optPara.tag).toString(), Short.valueOf(((org.jsmpp.bean.OptionalParameter.Short) optPara).getValue()))__                    } else if (org.jsmpp.bean.OptionalParameter.Int.class.isInstance(optPara)) {_                        optParams.put(OptionalParameter.Tag.valueOf(optPara.tag).toString(), Integer.valueOf(((org.jsmpp.bean.OptionalParameter.Int) optPara).getValue()))__                    } else if (Null.class.isInstance(optPara)) {_                        optParams.put(OptionalParameter.Tag.valueOf(optPara.tag).toString(), null)__                    }_                }_                smppMessage.setHeader(SmppConstants.OPTIONAL_PARAMETERS, optParams)__            }_        } else {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliverSm.toString())___            if (deliverSm.getShortMessage() != null) {_                if (SmppUtils.parseAlphabetFromDataCoding(deliverSm.getDataCoding()) == Alphabet.ALPHA_8_BIT) {_                    smppMessage.setBody(deliverSm.getShortMessage())__                } else {_                    smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(),_                                                                  configuration.getEncoding())))__                }_            } else if (deliverSm.getOptionalParametes() != null && deliverSm.getOptionalParametes().length > 0) {_                List<OptionalParameter> oplist = Arrays.asList(deliverSm.getOptionalParametes())___                for (OptionalParameter optPara : oplist) {_                    if (OptionalParameter.Tag.MESSAGE_PAYLOAD.code() == optPara.tag && OctetString.class.isInstance(optPara)) {_                        smppMessage.setBody(((OctetString) optPara).getValueAsString())__                        break__                    }_                }_            }__            smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(SmppConstants.COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI, deliverSm.getSourceAddrNpi())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON, deliverSm.getSourceAddrTon())__            smppMessage.setHeader(SmppConstants.DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SmppConstants.DEST_ADDR_NPI, deliverSm.getDestAddrNpi())__            smppMessage.setHeader(SmppConstants.DEST_ADDR_TON, deliverSm.getDestAddrTon())__            smppMessage.setHeader(SmppConstants.SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(SmppConstants.VALIDITY_PERIOD, deliverSm.getValidityPeriod())__            smppMessage.setHeader(SmppConstants.SERVICE_TYPE, deliverSm.getServiceType())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,deliver,sm,configuration,if,deliver,sm,is,smsc,delivery,receipt,smpp,message,set,header,smpp,constants,smpp,message,type,delivery,receipt,to,string,delivery,receipt,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,smpp,constants,id,smsc,delivery,receipt,get,id,smpp,message,set,header,smpp,constants,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,smpp,constants,submitted,smsc,delivery,receipt,get,submitted,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,final,status,if,deliver,sm,get,optional,parametes,null,deliver,sm,get,optional,parametes,length,0,list,optional,parameter,oplist,arrays,as,list,deliver,sm,get,optional,parametes,map,string,object,opt,params,new,hash,map,string,object,for,optional,parameter,opt,para,oplist,if,octet,string,class,is,instance,opt,para,opt,params,put,optional,parameter,tag,value,of,opt,para,tag,to,string,octet,string,opt,para,get,value,as,string,else,if,org,jsmpp,bean,optional,parameter,coctet,string,class,is,instance,opt,para,opt,params,put,optional,parameter,tag,value,of,opt,para,tag,to,string,coctet,string,opt,para,get,value,as,string,else,if,org,jsmpp,bean,optional,parameter,byte,class,is,instance,opt,para,opt,params,put,optional,parameter,tag,value,of,opt,para,tag,to,string,byte,value,of,org,jsmpp,bean,optional,parameter,byte,opt,para,get,value,else,if,org,jsmpp,bean,optional,parameter,short,class,is,instance,opt,para,opt,params,put,optional,parameter,tag,value,of,opt,para,tag,to,string,short,value,of,org,jsmpp,bean,optional,parameter,short,opt,para,get,value,else,if,org,jsmpp,bean,optional,parameter,int,class,is,instance,opt,para,opt,params,put,optional,parameter,tag,value,of,opt,para,tag,to,string,integer,value,of,org,jsmpp,bean,optional,parameter,int,opt,para,get,value,else,if,null,class,is,instance,opt,para,opt,params,put,optional,parameter,tag,value,of,opt,para,tag,to,string,null,smpp,message,set,header,smpp,constants,opt,params,else,smpp,message,set,header,smpp,constants,smpp,message,type,deliver,sm,to,string,if,deliver,sm,get,short,message,null,if,smpp,utils,parse,alphabet,from,data,coding,deliver,sm,get,data,coding,alphabet,smpp,message,set,body,deliver,sm,get,short,message,else,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,else,if,deliver,sm,get,optional,parametes,null,deliver,sm,get,optional,parametes,length,0,list,optional,parameter,oplist,arrays,as,list,deliver,sm,get,optional,parametes,for,optional,parameter,opt,para,oplist,if,optional,parameter,tag,code,opt,para,tag,octet,string,class,is,instance,opt,para,smpp,message,set,body,octet,string,opt,para,get,value,as,string,break,smpp,message,set,header,smpp,constants,deliver,sm,get,sequence,number,smpp,message,set,header,smpp,constants,deliver,sm,get,command,id,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,npi,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,ton,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,address,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,addr,npi,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,addr,ton,smpp,message,set,header,smpp,constants,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,smpp,constants,deliver,sm,get,validity,period,smpp,message,set,header,smpp,constants,deliver,sm,get,service,type,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception;1369947956;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(deliverSm, configuration)___        if (deliverSm.isSmscDeliveryReceipt()) {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliveryReceipt.toString())__            DeliveryReceipt smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            smppMessage.setBody(smscDeliveryReceipt.getText())___            smppMessage.setHeader(SmppConstants.ID, smscDeliveryReceipt.getId())__            smppMessage.setHeader(SmppConstants.DELIVERED, smscDeliveryReceipt.getDelivered())__            smppMessage.setHeader(SmppConstants.DONE_DATE, smscDeliveryReceipt.getDoneDate())__            if (!"000".equals(smscDeliveryReceipt.getError())) {_                smppMessage.setHeader(SmppConstants.ERROR, smscDeliveryReceipt.getError())__            }_            smppMessage.setHeader(SmppConstants.SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__            smppMessage.setHeader(SmppConstants.SUBMITTED, smscDeliveryReceipt.getSubmitted())__            smppMessage.setHeader(SmppConstants.FINAL_STATUS, smscDeliveryReceipt.getFinalStatus())__            if (deliverSm.getOptionalParametes() != null && deliverSm.getOptionalParametes().length > 0) {_                List<OptionalParameter> oplist = Arrays.asList(deliverSm.getOptionalParametes())___                Map<String, Object> optParams = new HashMap<String, Object>()__                for (OptionalParameter optPara : oplist) {_                    if (OctetString.class.isInstance(optPara)) {_                        optParams.put(OptionalParameter.Tag.valueOf(optPara.tag).toString(), ((OctetString) optPara).getValueAsString())__                    } else if (org.jsmpp.bean.OptionalParameter.COctetString.class.isInstance(optPara)) {_                        optParams.put(OptionalParameter.Tag.valueOf(optPara.tag).toString(), ((COctetString) optPara).getValueAsString())__                    } else if (org.jsmpp.bean.OptionalParameter.Byte.class.isInstance(optPara)) {_                        optParams.put(OptionalParameter.Tag.valueOf(optPara.tag).toString(), Byte.valueOf(((org.jsmpp.bean.OptionalParameter.Byte) optPara).getValue()))__                    } else if (org.jsmpp.bean.OptionalParameter.Short.class.isInstance(optPara)) {_                        optParams.put(OptionalParameter.Tag.valueOf(optPara.tag).toString(), Short.valueOf(((org.jsmpp.bean.OptionalParameter.Short) optPara).getValue()))__                    } else if (org.jsmpp.bean.OptionalParameter.Int.class.isInstance(optPara)) {_                        optParams.put(OptionalParameter.Tag.valueOf(optPara.tag).toString(), Integer.valueOf(((org.jsmpp.bean.OptionalParameter.Int) optPara).getValue()))__                    } else if (Null.class.isInstance(optPara)) {_                        optParams.put(OptionalParameter.Tag.valueOf(optPara.tag).toString(), null)__                    }_                }_                smppMessage.setHeader(SmppConstants.OPTIONAL_PARAMETERS, optParams)__            }_        } else {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliverSm.toString())___            if (deliverSm.getShortMessage() != null) {_                if (SmppUtils.parseAlphabetFromDataCoding(deliverSm.getDataCoding()) == Alphabet.ALPHA_8_BIT) {_                    smppMessage.setBody(deliverSm.getShortMessage())__                } else {_                    smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(), configuration.getEncoding())))__                }_            } else if (deliverSm.getOptionalParametes() != null && deliverSm.getOptionalParametes().length > 0) {_                List<OptionalParameter> oplist = Arrays.asList(deliverSm.getOptionalParametes())___                for (OptionalParameter optPara : oplist) {_                    if (OptionalParameter.Tag.MESSAGE_PAYLOAD.code() == optPara.tag && OctetString.class.isInstance(optPara)) {_                        smppMessage.setBody(((OctetString) optPara).getValueAsString())__                        break__                    }_                }_            }__            smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(SmppConstants.COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI, deliverSm.getSourceAddrNpi())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON, deliverSm.getSourceAddrTon())__            smppMessage.setHeader(SmppConstants.DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SmppConstants.DEST_ADDR_NPI, deliverSm.getDestAddrNpi())__            smppMessage.setHeader(SmppConstants.DEST_ADDR_TON, deliverSm.getDestAddrTon())__            smppMessage.setHeader(SmppConstants.SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(SmppConstants.VALIDITY_PERIOD, deliverSm.getValidityPeriod())__            smppMessage.setHeader(SmppConstants.SERVICE_TYPE, deliverSm.getServiceType())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,deliver,sm,configuration,if,deliver,sm,is,smsc,delivery,receipt,smpp,message,set,header,smpp,constants,smpp,message,type,delivery,receipt,to,string,delivery,receipt,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,smpp,constants,id,smsc,delivery,receipt,get,id,smpp,message,set,header,smpp,constants,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,smpp,constants,submitted,smsc,delivery,receipt,get,submitted,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,final,status,if,deliver,sm,get,optional,parametes,null,deliver,sm,get,optional,parametes,length,0,list,optional,parameter,oplist,arrays,as,list,deliver,sm,get,optional,parametes,map,string,object,opt,params,new,hash,map,string,object,for,optional,parameter,opt,para,oplist,if,octet,string,class,is,instance,opt,para,opt,params,put,optional,parameter,tag,value,of,opt,para,tag,to,string,octet,string,opt,para,get,value,as,string,else,if,org,jsmpp,bean,optional,parameter,coctet,string,class,is,instance,opt,para,opt,params,put,optional,parameter,tag,value,of,opt,para,tag,to,string,coctet,string,opt,para,get,value,as,string,else,if,org,jsmpp,bean,optional,parameter,byte,class,is,instance,opt,para,opt,params,put,optional,parameter,tag,value,of,opt,para,tag,to,string,byte,value,of,org,jsmpp,bean,optional,parameter,byte,opt,para,get,value,else,if,org,jsmpp,bean,optional,parameter,short,class,is,instance,opt,para,opt,params,put,optional,parameter,tag,value,of,opt,para,tag,to,string,short,value,of,org,jsmpp,bean,optional,parameter,short,opt,para,get,value,else,if,org,jsmpp,bean,optional,parameter,int,class,is,instance,opt,para,opt,params,put,optional,parameter,tag,value,of,opt,para,tag,to,string,integer,value,of,org,jsmpp,bean,optional,parameter,int,opt,para,get,value,else,if,null,class,is,instance,opt,para,opt,params,put,optional,parameter,tag,value,of,opt,para,tag,to,string,null,smpp,message,set,header,smpp,constants,opt,params,else,smpp,message,set,header,smpp,constants,smpp,message,type,deliver,sm,to,string,if,deliver,sm,get,short,message,null,if,smpp,utils,parse,alphabet,from,data,coding,deliver,sm,get,data,coding,alphabet,smpp,message,set,body,deliver,sm,get,short,message,else,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,else,if,deliver,sm,get,optional,parametes,null,deliver,sm,get,optional,parametes,length,0,list,optional,parameter,oplist,arrays,as,list,deliver,sm,get,optional,parametes,for,optional,parameter,opt,para,oplist,if,optional,parameter,tag,code,opt,para,tag,octet,string,class,is,instance,opt,para,smpp,message,set,body,octet,string,opt,para,get,value,as,string,break,smpp,message,set,header,smpp,constants,deliver,sm,get,sequence,number,smpp,message,set,header,smpp,constants,deliver,sm,get,command,id,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,npi,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,ton,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,address,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,addr,npi,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,addr,ton,smpp,message,set,header,smpp,constants,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,smpp,constants,deliver,sm,get,validity,period,smpp,message,set,header,smpp,constants,deliver,sm,get,service,type,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception;1377438136;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(deliverSm, configuration)___        if (deliverSm.isSmscDeliveryReceipt()) {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliveryReceipt.toString())__            DeliveryReceipt smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            smppMessage.setBody(smscDeliveryReceipt.getText())___            smppMessage.setHeader(SmppConstants.ID, smscDeliveryReceipt.getId())__            smppMessage.setHeader(SmppConstants.DELIVERED, smscDeliveryReceipt.getDelivered())__            smppMessage.setHeader(SmppConstants.DONE_DATE, smscDeliveryReceipt.getDoneDate())__            if (!"000".equals(smscDeliveryReceipt.getError())) {_                smppMessage.setHeader(SmppConstants.ERROR, smscDeliveryReceipt.getError())__            }_            smppMessage.setHeader(SmppConstants.SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__            smppMessage.setHeader(SmppConstants.SUBMITTED, smscDeliveryReceipt.getSubmitted())__            smppMessage.setHeader(SmppConstants.FINAL_STATUS, smscDeliveryReceipt.getFinalStatus())___            if (deliverSm.getOptionalParametes() != null && deliverSm.getOptionalParametes().length > 0) {_                _                Map<String, Object> optionalParameters = createOptionalParameterByName(deliverSm)__                smppMessage.setHeader(SmppConstants.OPTIONAL_PARAMETERS, optionalParameters)___                _                Map<Short, Object> optionalParameter = createOptionalParameterByCode(deliverSm)__                smppMessage.setHeader(SmppConstants.OPTIONAL_PARAMETER, optionalParameter)__            }_        } else {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliverSm.toString())___            if (deliverSm.getShortMessage() != null) {_                if (SmppUtils.parseAlphabetFromDataCoding(deliverSm.getDataCoding()) == Alphabet.ALPHA_8_BIT) {_                    smppMessage.setBody(deliverSm.getShortMessage())__                } else {_                    smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(), configuration.getEncoding())))__                }_            } else if (deliverSm.getOptionalParametes() != null && deliverSm.getOptionalParametes().length > 0) {_                List<OptionalParameter> oplist = Arrays.asList(deliverSm.getOptionalParametes())___                for (OptionalParameter optPara : oplist) {_                    if (OptionalParameter.Tag.MESSAGE_PAYLOAD.code() == optPara.tag && OctetString.class.isInstance(optPara)) {_                        smppMessage.setBody(((OctetString) optPara).getValueAsString())__                        break__                    }_                }_            }__            smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(SmppConstants.COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI, deliverSm.getSourceAddrNpi())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON, deliverSm.getSourceAddrTon())__            smppMessage.setHeader(SmppConstants.DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SmppConstants.DEST_ADDR_NPI, deliverSm.getDestAddrNpi())__            smppMessage.setHeader(SmppConstants.DEST_ADDR_TON, deliverSm.getDestAddrTon())__            smppMessage.setHeader(SmppConstants.SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(SmppConstants.VALIDITY_PERIOD, deliverSm.getValidityPeriod())__            smppMessage.setHeader(SmppConstants.SERVICE_TYPE, deliverSm.getServiceType())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,deliver,sm,configuration,if,deliver,sm,is,smsc,delivery,receipt,smpp,message,set,header,smpp,constants,smpp,message,type,delivery,receipt,to,string,delivery,receipt,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,smpp,constants,id,smsc,delivery,receipt,get,id,smpp,message,set,header,smpp,constants,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,smpp,constants,submitted,smsc,delivery,receipt,get,submitted,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,final,status,if,deliver,sm,get,optional,parametes,null,deliver,sm,get,optional,parametes,length,0,map,string,object,optional,parameters,create,optional,parameter,by,name,deliver,sm,smpp,message,set,header,smpp,constants,optional,parameters,map,short,object,optional,parameter,create,optional,parameter,by,code,deliver,sm,smpp,message,set,header,smpp,constants,optional,parameter,else,smpp,message,set,header,smpp,constants,smpp,message,type,deliver,sm,to,string,if,deliver,sm,get,short,message,null,if,smpp,utils,parse,alphabet,from,data,coding,deliver,sm,get,data,coding,alphabet,smpp,message,set,body,deliver,sm,get,short,message,else,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,else,if,deliver,sm,get,optional,parametes,null,deliver,sm,get,optional,parametes,length,0,list,optional,parameter,oplist,arrays,as,list,deliver,sm,get,optional,parametes,for,optional,parameter,opt,para,oplist,if,optional,parameter,tag,code,opt,para,tag,octet,string,class,is,instance,opt,para,smpp,message,set,body,octet,string,opt,para,get,value,as,string,break,smpp,message,set,header,smpp,constants,deliver,sm,get,sequence,number,smpp,message,set,header,smpp,constants,deliver,sm,get,command,id,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,npi,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,ton,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,address,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,addr,npi,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,addr,ton,smpp,message,set,header,smpp,constants,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,smpp,constants,deliver,sm,get,validity,period,smpp,message,set,header,smpp,constants,deliver,sm,get,service,type,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception;1432971535;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(deliverSm, configuration)___        if (deliverSm.isSmscDeliveryReceipt()) {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliveryReceipt.toString())__            DeliveryReceipt smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            smppMessage.setBody(smscDeliveryReceipt.getText())___            smppMessage.setHeader(SmppConstants.ID, smscDeliveryReceipt.getId())__            smppMessage.setHeader(SmppConstants.DELIVERED, smscDeliveryReceipt.getDelivered())__            smppMessage.setHeader(SmppConstants.DONE_DATE, smscDeliveryReceipt.getDoneDate())__            if (!"000".equals(smscDeliveryReceipt.getError())) {_                smppMessage.setHeader(SmppConstants.ERROR, smscDeliveryReceipt.getError())__            }_            smppMessage.setHeader(SmppConstants.SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__            smppMessage.setHeader(SmppConstants.SUBMITTED, smscDeliveryReceipt.getSubmitted())__            smppMessage.setHeader(SmppConstants.FINAL_STATUS, smscDeliveryReceipt.getFinalStatus())___            if (deliverSm.getOptionalParametes() != null && deliverSm.getOptionalParametes().length > 0) {_                _                Map<String, Object> optionalParameters = createOptionalParameterByName(deliverSm)__                smppMessage.setHeader(SmppConstants.OPTIONAL_PARAMETERS, optionalParameters)___                _                Map<Short, Object> optionalParameter = createOptionalParameterByCode(deliverSm)__                smppMessage.setHeader(SmppConstants.OPTIONAL_PARAMETER, optionalParameter)__            }_        } else {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliverSm.toString())___            if (deliverSm.getShortMessage() != null) {_                if (SmppUtils.parseAlphabetFromDataCoding(deliverSm.getDataCoding()) == Alphabet.ALPHA_8_BIT) {_                    smppMessage.setBody(deliverSm.getShortMessage())__                } else {_                    smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(), configuration.getEncoding())))__                }_            } else if (deliverSm.getOptionalParametes() != null && deliverSm.getOptionalParametes().length > 0) {_                List<OptionalParameter> oplist = Arrays.asList(deliverSm.getOptionalParametes())___                for (OptionalParameter optPara : oplist) {_                    if (OptionalParameter.Tag.MESSAGE_PAYLOAD.code() == optPara.tag && OctetString.class.isInstance(optPara)) {_                        smppMessage.setBody(((OctetString) optPara).getValueAsString())__                        break__                    }_                }_            }__            smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(SmppConstants.COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI, deliverSm.getSourceAddrNpi())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON, deliverSm.getSourceAddrTon())__            smppMessage.setHeader(SmppConstants.DATA_CODING, deliverSm.getDataCoding())__            smppMessage.setHeader(SmppConstants.DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SmppConstants.DEST_ADDR_NPI, deliverSm.getDestAddrNpi())__            smppMessage.setHeader(SmppConstants.DEST_ADDR_TON, deliverSm.getDestAddrTon())__            smppMessage.setHeader(SmppConstants.SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(SmppConstants.VALIDITY_PERIOD, deliverSm.getValidityPeriod())__            smppMessage.setHeader(SmppConstants.SERVICE_TYPE, deliverSm.getServiceType())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,deliver,sm,configuration,if,deliver,sm,is,smsc,delivery,receipt,smpp,message,set,header,smpp,constants,smpp,message,type,delivery,receipt,to,string,delivery,receipt,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,smpp,constants,id,smsc,delivery,receipt,get,id,smpp,message,set,header,smpp,constants,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,smpp,constants,submitted,smsc,delivery,receipt,get,submitted,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,final,status,if,deliver,sm,get,optional,parametes,null,deliver,sm,get,optional,parametes,length,0,map,string,object,optional,parameters,create,optional,parameter,by,name,deliver,sm,smpp,message,set,header,smpp,constants,optional,parameters,map,short,object,optional,parameter,create,optional,parameter,by,code,deliver,sm,smpp,message,set,header,smpp,constants,optional,parameter,else,smpp,message,set,header,smpp,constants,smpp,message,type,deliver,sm,to,string,if,deliver,sm,get,short,message,null,if,smpp,utils,parse,alphabet,from,data,coding,deliver,sm,get,data,coding,alphabet,smpp,message,set,body,deliver,sm,get,short,message,else,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,else,if,deliver,sm,get,optional,parametes,null,deliver,sm,get,optional,parametes,length,0,list,optional,parameter,oplist,arrays,as,list,deliver,sm,get,optional,parametes,for,optional,parameter,opt,para,oplist,if,optional,parameter,tag,code,opt,para,tag,octet,string,class,is,instance,opt,para,smpp,message,set,body,octet,string,opt,para,get,value,as,string,break,smpp,message,set,header,smpp,constants,deliver,sm,get,sequence,number,smpp,message,set,header,smpp,constants,deliver,sm,get,command,id,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,npi,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,ton,smpp,message,set,header,smpp,constants,deliver,sm,get,data,coding,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,address,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,addr,npi,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,addr,ton,smpp,message,set,header,smpp,constants,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,smpp,constants,deliver,sm,get,validity,period,smpp,message,set,header,smpp,constants,deliver,sm,get,service,type,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception;1441961757;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(deliverSm, configuration)___        if (deliverSm.isSmscDeliveryReceipt()) {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliveryReceipt.toString())__            DeliveryReceipt smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            smppMessage.setBody(smscDeliveryReceipt.getText())___            smppMessage.setHeader(SmppConstants.ID, smscDeliveryReceipt.getId())__            smppMessage.setHeader(SmppConstants.DELIVERED, smscDeliveryReceipt.getDelivered())__            smppMessage.setHeader(SmppConstants.DONE_DATE, smscDeliveryReceipt.getDoneDate())__            if (!"000".equals(smscDeliveryReceipt.getError())) {_                smppMessage.setHeader(SmppConstants.ERROR, smscDeliveryReceipt.getError())__            }_            smppMessage.setHeader(SmppConstants.SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__            smppMessage.setHeader(SmppConstants.SUBMITTED, smscDeliveryReceipt.getSubmitted())__            smppMessage.setHeader(SmppConstants.FINAL_STATUS, smscDeliveryReceipt.getFinalStatus())___            if (deliverSm.getOptionalParametes() != null && deliverSm.getOptionalParametes().length > 0) {_                _                Map<String, Object> optionalParameters = createOptionalParameterByName(deliverSm)__                smppMessage.setHeader(SmppConstants.OPTIONAL_PARAMETERS, optionalParameters)___                _                Map<Short, Object> optionalParameter = createOptionalParameterByCode(deliverSm)__                smppMessage.setHeader(SmppConstants.OPTIONAL_PARAMETER, optionalParameter)__            }_        } else {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliverSm.toString())___            if (deliverSm.getShortMessage() != null) {_                if (SmppUtils.parseAlphabetFromDataCoding(deliverSm.getDataCoding()) == Alphabet.ALPHA_8_BIT) {_                    smppMessage.setBody(deliverSm.getShortMessage())__                } else {_                    smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(), configuration.getEncoding())))__                }_            } else if (deliverSm.getOptionalParametes() != null && deliverSm.getOptionalParametes().length > 0) {_                List<OptionalParameter> oplist = Arrays.asList(deliverSm.getOptionalParametes())___                for (OptionalParameter optPara : oplist) {_                    if (OptionalParameter.Tag.MESSAGE_PAYLOAD.code() == optPara.tag && OctetString.class.isInstance(optPara)) {_                        smppMessage.setBody(((OctetString) optPara).getValueAsString())__                        break__                    }_                }_            }__            smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(SmppConstants.COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI, deliverSm.getSourceAddrNpi())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON, deliverSm.getSourceAddrTon())__            smppMessage.setHeader(SmppConstants.DATA_CODING, deliverSm.getDataCoding())__            smppMessage.setHeader(SmppConstants.DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SmppConstants.DEST_ADDR_NPI, deliverSm.getDestAddrNpi())__            smppMessage.setHeader(SmppConstants.DEST_ADDR_TON, deliverSm.getDestAddrTon())__            smppMessage.setHeader(SmppConstants.SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(SmppConstants.VALIDITY_PERIOD, deliverSm.getValidityPeriod())__            smppMessage.setHeader(SmppConstants.SERVICE_TYPE, deliverSm.getServiceType())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,deliver,sm,configuration,if,deliver,sm,is,smsc,delivery,receipt,smpp,message,set,header,smpp,constants,smpp,message,type,delivery,receipt,to,string,delivery,receipt,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,smpp,constants,id,smsc,delivery,receipt,get,id,smpp,message,set,header,smpp,constants,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,smpp,constants,submitted,smsc,delivery,receipt,get,submitted,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,final,status,if,deliver,sm,get,optional,parametes,null,deliver,sm,get,optional,parametes,length,0,map,string,object,optional,parameters,create,optional,parameter,by,name,deliver,sm,smpp,message,set,header,smpp,constants,optional,parameters,map,short,object,optional,parameter,create,optional,parameter,by,code,deliver,sm,smpp,message,set,header,smpp,constants,optional,parameter,else,smpp,message,set,header,smpp,constants,smpp,message,type,deliver,sm,to,string,if,deliver,sm,get,short,message,null,if,smpp,utils,parse,alphabet,from,data,coding,deliver,sm,get,data,coding,alphabet,smpp,message,set,body,deliver,sm,get,short,message,else,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,else,if,deliver,sm,get,optional,parametes,null,deliver,sm,get,optional,parametes,length,0,list,optional,parameter,oplist,arrays,as,list,deliver,sm,get,optional,parametes,for,optional,parameter,opt,para,oplist,if,optional,parameter,tag,code,opt,para,tag,octet,string,class,is,instance,opt,para,smpp,message,set,body,octet,string,opt,para,get,value,as,string,break,smpp,message,set,header,smpp,constants,deliver,sm,get,sequence,number,smpp,message,set,header,smpp,constants,deliver,sm,get,command,id,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,npi,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,ton,smpp,message,set,header,smpp,constants,deliver,sm,get,data,coding,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,address,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,addr,npi,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,addr,ton,smpp,message,set,header,smpp,constants,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,smpp,constants,deliver,sm,get,validity,period,smpp,message,set,header,smpp,constants,deliver,sm,get,service,type,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception;1448458564;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(deliverSm, configuration)___        String messagePayload = null___        if (deliverSm.getShortMessage() == null && deliverSm.getOptionalParametes() != null) {_            List<OptionalParameter> oplist = Arrays.asList(deliverSm.getOptionalParametes())___            for (OptionalParameter optPara : oplist) {_                if (OptionalParameter.Tag.MESSAGE_PAYLOAD.code() == optPara.tag && OctetString.class_                    .isInstance(optPara)) {_                    messagePayload = ((OctetString) optPara).getValueAsString()__                    break__                }_            }_        }__        if (deliverSm.isSmscDeliveryReceipt()) {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliveryReceipt.toString())___            DeliveryReceipt smscDeliveryReceipt = null___            if (deliverSm.getShortMessage() != null) {_                smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            } else if (messagePayload != null) {_                smscDeliveryReceipt = DefaultDecomposer.getInstance().deliveryReceipt(messagePayload)__            }__            if (smscDeliveryReceipt != null) {_                smppMessage.setBody(smscDeliveryReceipt.getText())___                smppMessage.setHeader(SmppConstants.ID, smscDeliveryReceipt.getId())__                smppMessage.setHeader(SmppConstants.DELIVERED, smscDeliveryReceipt.getDelivered())__                smppMessage.setHeader(SmppConstants.DONE_DATE, smscDeliveryReceipt.getDoneDate())__                if (!"000".equals(smscDeliveryReceipt.getError())) {_                    smppMessage.setHeader(SmppConstants.ERROR, smscDeliveryReceipt.getError())__                }_                smppMessage.setHeader(SmppConstants.SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__                smppMessage.setHeader(SmppConstants.SUBMITTED, smscDeliveryReceipt.getSubmitted())__                smppMessage.setHeader(SmppConstants.FINAL_STATUS, smscDeliveryReceipt.getFinalStatus())__            }__            if (deliverSm.getOptionalParametes() != null && deliverSm.getOptionalParametes().length > 0) {_                _                Map<String, Object> optionalParameters = createOptionalParameterByName(deliverSm)__                smppMessage.setHeader(SmppConstants.OPTIONAL_PARAMETERS, optionalParameters)___                _                Map<Short, Object> optionalParameter = createOptionalParameterByCode(deliverSm)__                smppMessage.setHeader(SmppConstants.OPTIONAL_PARAMETER, optionalParameter)__            }_        } else {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliverSm.toString())___            if (deliverSm.getShortMessage() != null) {_                if (SmppUtils.parseAlphabetFromDataCoding(deliverSm.getDataCoding()) == Alphabet.ALPHA_8_BIT) {_                    smppMessage.setBody(deliverSm.getShortMessage())__                } else {_                    smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(), configuration.getEncoding())))__                }_            } else if (messagePayload != null) {_                smppMessage.setBody(messagePayload)__            }__            smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(SmppConstants.COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI, deliverSm.getSourceAddrNpi())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON, deliverSm.getSourceAddrTon())__            smppMessage.setHeader(SmppConstants.DATA_CODING, deliverSm.getDataCoding())__            smppMessage.setHeader(SmppConstants.DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SmppConstants.DEST_ADDR_NPI, deliverSm.getDestAddrNpi())__            smppMessage.setHeader(SmppConstants.DEST_ADDR_TON, deliverSm.getDestAddrTon())__            smppMessage.setHeader(SmppConstants.SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(SmppConstants.VALIDITY_PERIOD, deliverSm.getValidityPeriod())__            smppMessage.setHeader(SmppConstants.SERVICE_TYPE, deliverSm.getServiceType())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,deliver,sm,configuration,string,message,payload,null,if,deliver,sm,get,short,message,null,deliver,sm,get,optional,parametes,null,list,optional,parameter,oplist,arrays,as,list,deliver,sm,get,optional,parametes,for,optional,parameter,opt,para,oplist,if,optional,parameter,tag,code,opt,para,tag,octet,string,class,is,instance,opt,para,message,payload,octet,string,opt,para,get,value,as,string,break,if,deliver,sm,is,smsc,delivery,receipt,smpp,message,set,header,smpp,constants,smpp,message,type,delivery,receipt,to,string,delivery,receipt,smsc,delivery,receipt,null,if,deliver,sm,get,short,message,null,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,else,if,message,payload,null,smsc,delivery,receipt,default,decomposer,get,instance,delivery,receipt,message,payload,if,smsc,delivery,receipt,null,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,smpp,constants,id,smsc,delivery,receipt,get,id,smpp,message,set,header,smpp,constants,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,smpp,constants,submitted,smsc,delivery,receipt,get,submitted,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,final,status,if,deliver,sm,get,optional,parametes,null,deliver,sm,get,optional,parametes,length,0,map,string,object,optional,parameters,create,optional,parameter,by,name,deliver,sm,smpp,message,set,header,smpp,constants,optional,parameters,map,short,object,optional,parameter,create,optional,parameter,by,code,deliver,sm,smpp,message,set,header,smpp,constants,optional,parameter,else,smpp,message,set,header,smpp,constants,smpp,message,type,deliver,sm,to,string,if,deliver,sm,get,short,message,null,if,smpp,utils,parse,alphabet,from,data,coding,deliver,sm,get,data,coding,alphabet,smpp,message,set,body,deliver,sm,get,short,message,else,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,else,if,message,payload,null,smpp,message,set,body,message,payload,smpp,message,set,header,smpp,constants,deliver,sm,get,sequence,number,smpp,message,set,header,smpp,constants,deliver,sm,get,command,id,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,npi,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,ton,smpp,message,set,header,smpp,constants,deliver,sm,get,data,coding,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,address,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,addr,npi,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,addr,ton,smpp,message,set,header,smpp,constants,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,smpp,constants,deliver,sm,get,validity,period,smpp,message,set,header,smpp,constants,deliver,sm,get,service,type,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception;1464422027;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(deliverSm, configuration)___        String messagePayload = null___        if (deliverSm.getShortMessage() == null && deliverSm.getOptionalParameters() != null) {_            List<OptionalParameter> oplist = Arrays.asList(deliverSm.getOptionalParameters())___            for (OptionalParameter optPara : oplist) {_                if (OptionalParameter.Tag.MESSAGE_PAYLOAD.code() == optPara.tag && OctetString.class_                    .isInstance(optPara)) {_                    messagePayload = ((OctetString) optPara).getValueAsString()__                    break__                }_            }_        }__        if (deliverSm.isSmscDeliveryReceipt()) {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliveryReceipt.toString())___            DeliveryReceipt smscDeliveryReceipt = null___            if (deliverSm.getShortMessage() != null) {_                smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            } else if (messagePayload != null) {_                smscDeliveryReceipt = DefaultDecomposer.getInstance().deliveryReceipt(messagePayload)__            }__            if (smscDeliveryReceipt != null) {_                smppMessage.setBody(smscDeliveryReceipt.getText())___                smppMessage.setHeader(SmppConstants.ID, smscDeliveryReceipt.getId())__                smppMessage.setHeader(SmppConstants.DELIVERED, smscDeliveryReceipt.getDelivered())__                smppMessage.setHeader(SmppConstants.DONE_DATE, smscDeliveryReceipt.getDoneDate())__                if (!"000".equals(smscDeliveryReceipt.getError())) {_                    smppMessage.setHeader(SmppConstants.ERROR, smscDeliveryReceipt.getError())__                }_                smppMessage.setHeader(SmppConstants.SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__                smppMessage.setHeader(SmppConstants.SUBMITTED, smscDeliveryReceipt.getSubmitted())__                smppMessage.setHeader(SmppConstants.FINAL_STATUS, smscDeliveryReceipt.getFinalStatus())__            }__            if (deliverSm.getOptionalParameters() != null && deliverSm.getOptionalParameters().length > 0) {_                _                Map<String, Object> optionalParameters = createOptionalParameterByName(deliverSm)__                smppMessage.setHeader(SmppConstants.OPTIONAL_PARAMETERS, optionalParameters)___                _                Map<Short, Object> optionalParameter = createOptionalParameterByCode(deliverSm)__                smppMessage.setHeader(SmppConstants.OPTIONAL_PARAMETER, optionalParameter)__            }_        } else {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliverSm.toString())___            if (deliverSm.getShortMessage() != null) {_                Alphabet alphabet = Alphabet.parseDataCoding(deliverSm.getDataCoding())__                if (SmppUtils.is8Bit(alphabet)) {_                    smppMessage.setBody(deliverSm.getShortMessage())__                } else {_                    smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(), configuration.getEncoding())))__                }_            } else if (messagePayload != null) {_                smppMessage.setBody(messagePayload)__            }__            smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(SmppConstants.COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI, deliverSm.getSourceAddrNpi())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON, deliverSm.getSourceAddrTon())__            smppMessage.setHeader(SmppConstants.DATA_CODING, deliverSm.getDataCoding())__            smppMessage.setHeader(SmppConstants.DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SmppConstants.DEST_ADDR_NPI, deliverSm.getDestAddrNpi())__            smppMessage.setHeader(SmppConstants.DEST_ADDR_TON, deliverSm.getDestAddrTon())__            smppMessage.setHeader(SmppConstants.SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(SmppConstants.VALIDITY_PERIOD, deliverSm.getValidityPeriod())__            smppMessage.setHeader(SmppConstants.SERVICE_TYPE, deliverSm.getServiceType())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,deliver,sm,configuration,string,message,payload,null,if,deliver,sm,get,short,message,null,deliver,sm,get,optional,parameters,null,list,optional,parameter,oplist,arrays,as,list,deliver,sm,get,optional,parameters,for,optional,parameter,opt,para,oplist,if,optional,parameter,tag,code,opt,para,tag,octet,string,class,is,instance,opt,para,message,payload,octet,string,opt,para,get,value,as,string,break,if,deliver,sm,is,smsc,delivery,receipt,smpp,message,set,header,smpp,constants,smpp,message,type,delivery,receipt,to,string,delivery,receipt,smsc,delivery,receipt,null,if,deliver,sm,get,short,message,null,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,else,if,message,payload,null,smsc,delivery,receipt,default,decomposer,get,instance,delivery,receipt,message,payload,if,smsc,delivery,receipt,null,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,smpp,constants,id,smsc,delivery,receipt,get,id,smpp,message,set,header,smpp,constants,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,smpp,constants,submitted,smsc,delivery,receipt,get,submitted,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,final,status,if,deliver,sm,get,optional,parameters,null,deliver,sm,get,optional,parameters,length,0,map,string,object,optional,parameters,create,optional,parameter,by,name,deliver,sm,smpp,message,set,header,smpp,constants,optional,parameters,map,short,object,optional,parameter,create,optional,parameter,by,code,deliver,sm,smpp,message,set,header,smpp,constants,optional,parameter,else,smpp,message,set,header,smpp,constants,smpp,message,type,deliver,sm,to,string,if,deliver,sm,get,short,message,null,alphabet,alphabet,alphabet,parse,data,coding,deliver,sm,get,data,coding,if,smpp,utils,is8bit,alphabet,smpp,message,set,body,deliver,sm,get,short,message,else,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,else,if,message,payload,null,smpp,message,set,body,message,payload,smpp,message,set,header,smpp,constants,deliver,sm,get,sequence,number,smpp,message,set,header,smpp,constants,deliver,sm,get,command,id,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,npi,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,ton,smpp,message,set,header,smpp,constants,deliver,sm,get,data,coding,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,address,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,addr,npi,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,addr,ton,smpp,message,set,header,smpp,constants,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,smpp,constants,deliver,sm,get,validity,period,smpp,message,set,header,smpp,constants,deliver,sm,get,service,type,return,smpp,message
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1260263234;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1260430217;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1272589442;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1274230707;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1276431904;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1283289848;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1283800169;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1289258847;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1293907120;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1297975937;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1302206494;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1305183367;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1309727185;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1315366055;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1317851746;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1349714461;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1352120089;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1352841234;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1353612986;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1362716422;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1369947956;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1377438136;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1432971535;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1441961757;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1448458564;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1464422027;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1495703393;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1524063178;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1533918456;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1540108158;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public void setConfiguration(SmppConfiguration configuration);1540108161;Set the smpp configuration.__@param configuration smppConfiguration;public void setConfiguration(SmppConfiguration configuration) {_        this.configuration = configuration__    };set,the,smpp,configuration,param,configuration,smpp,configuration;public,void,set,configuration,smpp,configuration,configuration,this,configuration,configuration
SmppBinding -> public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange);1317851746;Create the SmppCommand object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange) {_        SmppCommandType commandType = SmppCommandType.fromExchange(exchange)__        SmppCommand command = commandType.createCommand(session, configuration)__        _        return command__    };create,the,smpp,command,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,smpp,command,create,smpp,command,smppsession,session,exchange,exchange,smpp,command,type,command,type,smpp,command,type,from,exchange,exchange,smpp,command,command,command,type,create,command,session,configuration,return,command
SmppBinding -> public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange);1349714461;Create the SmppCommand object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange) {_        SmppCommandType commandType = SmppCommandType.fromExchange(exchange)__        SmppCommand command = commandType.createCommand(session, configuration)__        _        return command__    };create,the,smpp,command,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,smpp,command,create,smpp,command,smppsession,session,exchange,exchange,smpp,command,type,command,type,smpp,command,type,from,exchange,exchange,smpp,command,command,command,type,create,command,session,configuration,return,command
SmppBinding -> public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange);1352120089;Create the SmppCommand object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange) {_        SmppCommandType commandType = SmppCommandType.fromExchange(exchange)__        SmppCommand command = commandType.createCommand(session, configuration)__        _        return command__    };create,the,smpp,command,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,smpp,command,create,smpp,command,smppsession,session,exchange,exchange,smpp,command,type,command,type,smpp,command,type,from,exchange,exchange,smpp,command,command,command,type,create,command,session,configuration,return,command
SmppBinding -> public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange);1352841234;Create the SmppCommand object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange) {_        SmppCommandType commandType = SmppCommandType.fromExchange(exchange)__        SmppCommand command = commandType.createCommand(session, configuration)__        _        return command__    };create,the,smpp,command,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,smpp,command,create,smpp,command,smppsession,session,exchange,exchange,smpp,command,type,command,type,smpp,command,type,from,exchange,exchange,smpp,command,command,command,type,create,command,session,configuration,return,command
SmppBinding -> public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange);1353612986;Create the SmppCommand object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange) {_        SmppCommandType commandType = SmppCommandType.fromExchange(exchange)__        SmppCommand command = commandType.createCommand(session, configuration)__        _        return command__    };create,the,smpp,command,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,smpp,command,create,smpp,command,smppsession,session,exchange,exchange,smpp,command,type,command,type,smpp,command,type,from,exchange,exchange,smpp,command,command,command,type,create,command,session,configuration,return,command
SmppBinding -> public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange);1362716422;Create the SmppCommand object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange) {_        SmppCommandType commandType = SmppCommandType.fromExchange(exchange)__        SmppCommand command = commandType.createCommand(session, configuration)__        _        return command__    };create,the,smpp,command,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,smpp,command,create,smpp,command,smppsession,session,exchange,exchange,smpp,command,type,command,type,smpp,command,type,from,exchange,exchange,smpp,command,command,command,type,create,command,session,configuration,return,command
SmppBinding -> public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange);1369947956;Create the SmppCommand object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange) {_        SmppCommandType commandType = SmppCommandType.fromExchange(exchange)__        SmppCommand command = commandType.createCommand(session, configuration)__        _        return command__    };create,the,smpp,command,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,smpp,command,create,smpp,command,smppsession,session,exchange,exchange,smpp,command,type,command,type,smpp,command,type,from,exchange,exchange,smpp,command,command,command,type,create,command,session,configuration,return,command
SmppBinding -> public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange);1377438136;Create the SmppCommand object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange) {_        SmppCommandType commandType = SmppCommandType.fromExchange(exchange)__        SmppCommand command = commandType.createCommand(session, configuration)__        _        return command__    };create,the,smpp,command,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,smpp,command,create,smpp,command,smppsession,session,exchange,exchange,smpp,command,type,command,type,smpp,command,type,from,exchange,exchange,smpp,command,command,command,type,create,command,session,configuration,return,command
SmppBinding -> public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange);1432971535;Create the SmppCommand object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange) {_        SmppCommandType commandType = SmppCommandType.fromExchange(exchange)__        SmppCommand command = commandType.createCommand(session, configuration)__        _        return command__    };create,the,smpp,command,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,smpp,command,create,smpp,command,smppsession,session,exchange,exchange,smpp,command,type,command,type,smpp,command,type,from,exchange,exchange,smpp,command,command,command,type,create,command,session,configuration,return,command
SmppBinding -> public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange);1441961757;Create the SmppCommand object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange) {_        SmppCommandType commandType = SmppCommandType.fromExchange(exchange)__        SmppCommand command = commandType.createCommand(session, configuration)__        _        return command__    };create,the,smpp,command,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,smpp,command,create,smpp,command,smppsession,session,exchange,exchange,smpp,command,type,command,type,smpp,command,type,from,exchange,exchange,smpp,command,command,command,type,create,command,session,configuration,return,command
SmppBinding -> public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange);1448458564;Create the SmppCommand object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange) {_        SmppCommandType commandType = SmppCommandType.fromExchange(exchange)__        SmppCommand command = commandType.createCommand(session, configuration)__        _        return command__    };create,the,smpp,command,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,smpp,command,create,smpp,command,smppsession,session,exchange,exchange,smpp,command,type,command,type,smpp,command,type,from,exchange,exchange,smpp,command,command,command,type,create,command,session,configuration,return,command
SmppBinding -> public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange);1464422027;Create the SmppCommand object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange) {_        SmppCommandType commandType = SmppCommandType.fromExchange(exchange)__        SmppCommand command = commandType.createCommand(session, configuration)__        _        return command__    };create,the,smpp,command,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,smpp,command,create,smpp,command,smppsession,session,exchange,exchange,smpp,command,type,command,type,smpp,command,type,from,exchange,exchange,smpp,command,command,command,type,create,command,session,configuration,return,command
SmppBinding -> public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange);1495703393;Create the SmppCommand object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange) {_        SmppCommandType commandType = SmppCommandType.fromExchange(exchange)__        SmppCommand command = commandType.createCommand(session, configuration)__        _        return command__    };create,the,smpp,command,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,smpp,command,create,smpp,command,smppsession,session,exchange,exchange,smpp,command,type,command,type,smpp,command,type,from,exchange,exchange,smpp,command,command,command,type,create,command,session,configuration,return,command
SmppBinding -> public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange);1524063178;Create the SmppCommand object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange) {_        SmppCommandType commandType = SmppCommandType.fromExchange(exchange)__        SmppCommand command = commandType.createCommand(session, configuration)__        _        return command__    };create,the,smpp,command,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,smpp,command,create,smpp,command,smppsession,session,exchange,exchange,smpp,command,type,command,type,smpp,command,type,from,exchange,exchange,smpp,command,command,command,type,create,command,session,configuration,return,command
SmppBinding -> public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange);1533918456;Create the SmppCommand object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange) {_        SmppCommandType commandType = SmppCommandType.fromExchange(exchange)__        SmppCommand command = commandType.createCommand(session, configuration)__        _        return command__    };create,the,smpp,command,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,smpp,command,create,smpp,command,smppsession,session,exchange,exchange,smpp,command,type,command,type,smpp,command,type,from,exchange,exchange,smpp,command,command,command,type,create,command,session,configuration,return,command
SmppBinding -> public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange);1540108158;Create the SmppCommand object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange) {_        SmppCommandType commandType = SmppCommandType.fromExchange(exchange)__        SmppCommand command = commandType.createCommand(session, configuration)__        _        return command__    };create,the,smpp,command,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,smpp,command,create,smpp,command,smppsession,session,exchange,exchange,smpp,command,type,command,type,smpp,command,type,from,exchange,exchange,smpp,command,command,command,type,create,command,session,configuration,return,command
SmppBinding -> public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange);1540108161;Create the SmppCommand object from the inbound exchange__@throws UnsupportedEncodingException if the encoding is not supported;public SmppCommand createSmppCommand(SMPPSession session, Exchange exchange) {_        SmppCommandType commandType = SmppCommandType.fromExchange(exchange)__        SmppCommand command = commandType.createCommand(session, configuration)__        _        return command__    };create,the,smpp,command,object,from,the,inbound,exchange,throws,unsupported,encoding,exception,if,the,encoding,is,not,supported;public,smpp,command,create,smpp,command,smppsession,session,exchange,exchange,smpp,command,type,command,type,smpp,command,type,from,exchange,exchange,smpp,command,command,command,type,create,command,session,configuration,return,command
SmppBinding -> public SmppMessage createSmppMessage(CamelContext camelContext, DeliverSm deliverSm) throws Exception;1495703393;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(CamelContext camelContext, DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(deliverSm, configuration)__        smppMessage.setCamelContext(camelContext)___        String messagePayload = null___        if (deliverSm.getShortMessage() == null && deliverSm.getOptionalParameters() != null) {_            List<OptionalParameter> oplist = Arrays.asList(deliverSm.getOptionalParameters())___            for (OptionalParameter optPara : oplist) {_                if (OptionalParameter.Tag.MESSAGE_PAYLOAD.code() == optPara.tag && OctetString.class_                    .isInstance(optPara)) {_                    messagePayload = ((OctetString) optPara).getValueAsString()__                    break__                }_            }_        }__        if (deliverSm.isSmscDeliveryReceipt()) {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliveryReceipt.toString())___            DeliveryReceipt smscDeliveryReceipt = null___            if (deliverSm.getShortMessage() != null) {_                smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            } else if (messagePayload != null) {_                smscDeliveryReceipt = DefaultDecomposer.getInstance().deliveryReceipt(messagePayload)__            }__            if (smscDeliveryReceipt != null) {_                smppMessage.setBody(smscDeliveryReceipt.getText())___                smppMessage.setHeader(SmppConstants.ID, smscDeliveryReceipt.getId())__                smppMessage.setHeader(SmppConstants.DELIVERED, smscDeliveryReceipt.getDelivered())__                smppMessage.setHeader(SmppConstants.DONE_DATE, smscDeliveryReceipt.getDoneDate())__                if (!"000".equals(smscDeliveryReceipt.getError())) {_                    smppMessage.setHeader(SmppConstants.ERROR, smscDeliveryReceipt.getError())__                }_                smppMessage.setHeader(SmppConstants.SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__                smppMessage.setHeader(SmppConstants.SUBMITTED, smscDeliveryReceipt.getSubmitted())__                smppMessage.setHeader(SmppConstants.FINAL_STATUS, smscDeliveryReceipt.getFinalStatus())__            }__            if (deliverSm.getOptionalParameters() != null && deliverSm.getOptionalParameters().length > 0) {_                _                Map<String, Object> optionalParameters = createOptionalParameterByName(deliverSm)__                smppMessage.setHeader(SmppConstants.OPTIONAL_PARAMETERS, optionalParameters)___                _                Map<Short, Object> optionalParameter = createOptionalParameterByCode(deliverSm)__                smppMessage.setHeader(SmppConstants.OPTIONAL_PARAMETER, optionalParameter)__            }_        } else {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliverSm.toString())___            if (deliverSm.getShortMessage() != null) {_                Alphabet alphabet = Alphabet.parseDataCoding(deliverSm.getDataCoding())__                if (SmppUtils.is8Bit(alphabet)) {_                    smppMessage.setBody(deliverSm.getShortMessage())__                } else {_                    smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(), configuration.getEncoding())))__                }_            } else if (messagePayload != null) {_                smppMessage.setBody(messagePayload)__            }__            smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(SmppConstants.COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI, deliverSm.getSourceAddrNpi())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON, deliverSm.getSourceAddrTon())__            smppMessage.setHeader(SmppConstants.DATA_CODING, deliverSm.getDataCoding())__            smppMessage.setHeader(SmppConstants.DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SmppConstants.DEST_ADDR_NPI, deliverSm.getDestAddrNpi())__            smppMessage.setHeader(SmppConstants.DEST_ADDR_TON, deliverSm.getDestAddrTon())__            smppMessage.setHeader(SmppConstants.SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(SmppConstants.VALIDITY_PERIOD, deliverSm.getValidityPeriod())__            smppMessage.setHeader(SmppConstants.SERVICE_TYPE, deliverSm.getServiceType())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,camel,context,camel,context,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,deliver,sm,configuration,smpp,message,set,camel,context,camel,context,string,message,payload,null,if,deliver,sm,get,short,message,null,deliver,sm,get,optional,parameters,null,list,optional,parameter,oplist,arrays,as,list,deliver,sm,get,optional,parameters,for,optional,parameter,opt,para,oplist,if,optional,parameter,tag,code,opt,para,tag,octet,string,class,is,instance,opt,para,message,payload,octet,string,opt,para,get,value,as,string,break,if,deliver,sm,is,smsc,delivery,receipt,smpp,message,set,header,smpp,constants,smpp,message,type,delivery,receipt,to,string,delivery,receipt,smsc,delivery,receipt,null,if,deliver,sm,get,short,message,null,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,else,if,message,payload,null,smsc,delivery,receipt,default,decomposer,get,instance,delivery,receipt,message,payload,if,smsc,delivery,receipt,null,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,smpp,constants,id,smsc,delivery,receipt,get,id,smpp,message,set,header,smpp,constants,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,smpp,constants,submitted,smsc,delivery,receipt,get,submitted,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,final,status,if,deliver,sm,get,optional,parameters,null,deliver,sm,get,optional,parameters,length,0,map,string,object,optional,parameters,create,optional,parameter,by,name,deliver,sm,smpp,message,set,header,smpp,constants,optional,parameters,map,short,object,optional,parameter,create,optional,parameter,by,code,deliver,sm,smpp,message,set,header,smpp,constants,optional,parameter,else,smpp,message,set,header,smpp,constants,smpp,message,type,deliver,sm,to,string,if,deliver,sm,get,short,message,null,alphabet,alphabet,alphabet,parse,data,coding,deliver,sm,get,data,coding,if,smpp,utils,is8bit,alphabet,smpp,message,set,body,deliver,sm,get,short,message,else,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,else,if,message,payload,null,smpp,message,set,body,message,payload,smpp,message,set,header,smpp,constants,deliver,sm,get,sequence,number,smpp,message,set,header,smpp,constants,deliver,sm,get,command,id,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,npi,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,ton,smpp,message,set,header,smpp,constants,deliver,sm,get,data,coding,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,address,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,addr,npi,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,addr,ton,smpp,message,set,header,smpp,constants,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,smpp,constants,deliver,sm,get,validity,period,smpp,message,set,header,smpp,constants,deliver,sm,get,service,type,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(CamelContext camelContext, DeliverSm deliverSm) throws Exception;1524063178;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(CamelContext camelContext, DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(deliverSm, configuration)__        smppMessage.setCamelContext(camelContext)___        String messagePayload = null___        if (deliverSm.getShortMessage() == null && deliverSm.getOptionalParameters() != null) {_            List<OptionalParameter> oplist = Arrays.asList(deliverSm.getOptionalParameters())___            for (OptionalParameter optPara : oplist) {_                if (OptionalParameter.Tag.MESSAGE_PAYLOAD.code() == optPara.tag && OctetString.class_                    .isInstance(optPara)) {_                    messagePayload = ((OctetString) optPara).getValueAsString()__                    break__                }_            }_        }__        if (deliverSm.isSmscDeliveryReceipt()) {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliveryReceipt.toString())___            DeliveryReceipt smscDeliveryReceipt = null___            if (deliverSm.getShortMessage() != null) {_                smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            } else if (messagePayload != null) {_                smscDeliveryReceipt = DefaultDecomposer.getInstance().deliveryReceipt(messagePayload)__            }__            if (smscDeliveryReceipt != null) {_                smppMessage.setBody(smscDeliveryReceipt.getText())___                smppMessage.setHeader(SmppConstants.ID, smscDeliveryReceipt.getId())__                smppMessage.setHeader(SmppConstants.DELIVERED, smscDeliveryReceipt.getDelivered())__                smppMessage.setHeader(SmppConstants.DONE_DATE, smscDeliveryReceipt.getDoneDate())__                if (!"000".equals(smscDeliveryReceipt.getError())) {_                    smppMessage.setHeader(SmppConstants.ERROR, smscDeliveryReceipt.getError())__                }_                smppMessage.setHeader(SmppConstants.SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__                smppMessage.setHeader(SmppConstants.SUBMITTED, smscDeliveryReceipt.getSubmitted())__                smppMessage.setHeader(SmppConstants.FINAL_STATUS, smscDeliveryReceipt.getFinalStatus())__            }__            if (deliverSm.getOptionalParameters() != null && deliverSm.getOptionalParameters().length > 0) {_                _                Map<String, Object> optionalParameters = createOptionalParameterByName(deliverSm)__                smppMessage.setHeader(SmppConstants.OPTIONAL_PARAMETERS, optionalParameters)___                _                Map<Short, Object> optionalParameter = createOptionalParameterByCode(deliverSm)__                smppMessage.setHeader(SmppConstants.OPTIONAL_PARAMETER, optionalParameter)__            }_        } else {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliverSm.toString())___            if (deliverSm.getShortMessage() != null) {_                Alphabet alphabet = Alphabet.parseDataCoding(deliverSm.getDataCoding())__                if (SmppUtils.is8Bit(alphabet)) {_                    smppMessage.setBody(deliverSm.getShortMessage())__                } else {_                    smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(), configuration.getEncoding())))__                }_            } else if (messagePayload != null) {_                smppMessage.setBody(messagePayload)__            }__            smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(SmppConstants.COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI, deliverSm.getSourceAddrNpi())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON, deliverSm.getSourceAddrTon())__            smppMessage.setHeader(SmppConstants.DATA_CODING, deliverSm.getDataCoding())__            smppMessage.setHeader(SmppConstants.DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SmppConstants.DEST_ADDR_NPI, deliverSm.getDestAddrNpi())__            smppMessage.setHeader(SmppConstants.DEST_ADDR_TON, deliverSm.getDestAddrTon())__            smppMessage.setHeader(SmppConstants.SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(SmppConstants.VALIDITY_PERIOD, deliverSm.getValidityPeriod())__            smppMessage.setHeader(SmppConstants.SERVICE_TYPE, deliverSm.getServiceType())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,camel,context,camel,context,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,deliver,sm,configuration,smpp,message,set,camel,context,camel,context,string,message,payload,null,if,deliver,sm,get,short,message,null,deliver,sm,get,optional,parameters,null,list,optional,parameter,oplist,arrays,as,list,deliver,sm,get,optional,parameters,for,optional,parameter,opt,para,oplist,if,optional,parameter,tag,code,opt,para,tag,octet,string,class,is,instance,opt,para,message,payload,octet,string,opt,para,get,value,as,string,break,if,deliver,sm,is,smsc,delivery,receipt,smpp,message,set,header,smpp,constants,smpp,message,type,delivery,receipt,to,string,delivery,receipt,smsc,delivery,receipt,null,if,deliver,sm,get,short,message,null,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,else,if,message,payload,null,smsc,delivery,receipt,default,decomposer,get,instance,delivery,receipt,message,payload,if,smsc,delivery,receipt,null,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,smpp,constants,id,smsc,delivery,receipt,get,id,smpp,message,set,header,smpp,constants,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,smpp,constants,submitted,smsc,delivery,receipt,get,submitted,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,final,status,if,deliver,sm,get,optional,parameters,null,deliver,sm,get,optional,parameters,length,0,map,string,object,optional,parameters,create,optional,parameter,by,name,deliver,sm,smpp,message,set,header,smpp,constants,optional,parameters,map,short,object,optional,parameter,create,optional,parameter,by,code,deliver,sm,smpp,message,set,header,smpp,constants,optional,parameter,else,smpp,message,set,header,smpp,constants,smpp,message,type,deliver,sm,to,string,if,deliver,sm,get,short,message,null,alphabet,alphabet,alphabet,parse,data,coding,deliver,sm,get,data,coding,if,smpp,utils,is8bit,alphabet,smpp,message,set,body,deliver,sm,get,short,message,else,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,else,if,message,payload,null,smpp,message,set,body,message,payload,smpp,message,set,header,smpp,constants,deliver,sm,get,sequence,number,smpp,message,set,header,smpp,constants,deliver,sm,get,command,id,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,npi,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,ton,smpp,message,set,header,smpp,constants,deliver,sm,get,data,coding,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,address,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,addr,npi,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,addr,ton,smpp,message,set,header,smpp,constants,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,smpp,constants,deliver,sm,get,validity,period,smpp,message,set,header,smpp,constants,deliver,sm,get,service,type,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(CamelContext camelContext, DeliverSm deliverSm) throws Exception;1533918456;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(CamelContext camelContext, DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(deliverSm, configuration)__        smppMessage.setCamelContext(camelContext)___        String messagePayload = null___        if (deliverSm.getShortMessage() == null && deliverSm.getOptionalParameters() != null) {_            List<OptionalParameter> oplist = Arrays.asList(deliverSm.getOptionalParameters())___            for (OptionalParameter optPara : oplist) {_                if (OptionalParameter.Tag.MESSAGE_PAYLOAD.code() == optPara.tag && OctetString.class_                    .isInstance(optPara)) {_                    messagePayload = ((OctetString) optPara).getValueAsString()__                    break__                }_            }_        }__        if (deliverSm.isSmscDeliveryReceipt()) {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliveryReceipt.toString())___            DeliveryReceipt smscDeliveryReceipt = null___            if (deliverSm.getShortMessage() != null) {_                smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            } else if (messagePayload != null) {_                smscDeliveryReceipt = DefaultDecomposer.getInstance().deliveryReceipt(messagePayload)__            }__            if (smscDeliveryReceipt != null) {_                smppMessage.setBody(smscDeliveryReceipt.getText())___                smppMessage.setHeader(SmppConstants.ID, smscDeliveryReceipt.getId())__                smppMessage.setHeader(SmppConstants.DELIVERED, smscDeliveryReceipt.getDelivered())__                smppMessage.setHeader(SmppConstants.DONE_DATE, smscDeliveryReceipt.getDoneDate())__                if (!"000".equals(smscDeliveryReceipt.getError())) {_                    smppMessage.setHeader(SmppConstants.ERROR, smscDeliveryReceipt.getError())__                }_                smppMessage.setHeader(SmppConstants.SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__                smppMessage.setHeader(SmppConstants.SUBMITTED, smscDeliveryReceipt.getSubmitted())__                smppMessage.setHeader(SmppConstants.FINAL_STATUS, smscDeliveryReceipt.getFinalStatus())__            }__            if (deliverSm.getOptionalParameters() != null && deliverSm.getOptionalParameters().length > 0) {_                _                Map<String, Object> optionalParameters = createOptionalParameterByName(deliverSm)__                smppMessage.setHeader(SmppConstants.OPTIONAL_PARAMETERS, optionalParameters)___                _                Map<Short, Object> optionalParameter = createOptionalParameterByCode(deliverSm)__                smppMessage.setHeader(SmppConstants.OPTIONAL_PARAMETER, optionalParameter)__            }_        } else {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliverSm.toString())___            if (deliverSm.getShortMessage() != null) {_                Alphabet alphabet = Alphabet.parseDataCoding(deliverSm.getDataCoding())__                if (SmppUtils.is8Bit(alphabet)) {_                    smppMessage.setBody(deliverSm.getShortMessage())__                } else {_                    smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(), configuration.getEncoding())))__                }_            } else if (messagePayload != null) {_                smppMessage.setBody(messagePayload)__            }__            smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(SmppConstants.COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI, deliverSm.getSourceAddrNpi())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON, deliverSm.getSourceAddrTon())__            smppMessage.setHeader(SmppConstants.DATA_CODING, deliverSm.getDataCoding())__            smppMessage.setHeader(SmppConstants.DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SmppConstants.DEST_ADDR_NPI, deliverSm.getDestAddrNpi())__            smppMessage.setHeader(SmppConstants.DEST_ADDR_TON, deliverSm.getDestAddrTon())__            smppMessage.setHeader(SmppConstants.SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(SmppConstants.VALIDITY_PERIOD, deliverSm.getValidityPeriod())__            smppMessage.setHeader(SmppConstants.SERVICE_TYPE, deliverSm.getServiceType())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,camel,context,camel,context,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,deliver,sm,configuration,smpp,message,set,camel,context,camel,context,string,message,payload,null,if,deliver,sm,get,short,message,null,deliver,sm,get,optional,parameters,null,list,optional,parameter,oplist,arrays,as,list,deliver,sm,get,optional,parameters,for,optional,parameter,opt,para,oplist,if,optional,parameter,tag,code,opt,para,tag,octet,string,class,is,instance,opt,para,message,payload,octet,string,opt,para,get,value,as,string,break,if,deliver,sm,is,smsc,delivery,receipt,smpp,message,set,header,smpp,constants,smpp,message,type,delivery,receipt,to,string,delivery,receipt,smsc,delivery,receipt,null,if,deliver,sm,get,short,message,null,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,else,if,message,payload,null,smsc,delivery,receipt,default,decomposer,get,instance,delivery,receipt,message,payload,if,smsc,delivery,receipt,null,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,smpp,constants,id,smsc,delivery,receipt,get,id,smpp,message,set,header,smpp,constants,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,smpp,constants,submitted,smsc,delivery,receipt,get,submitted,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,final,status,if,deliver,sm,get,optional,parameters,null,deliver,sm,get,optional,parameters,length,0,map,string,object,optional,parameters,create,optional,parameter,by,name,deliver,sm,smpp,message,set,header,smpp,constants,optional,parameters,map,short,object,optional,parameter,create,optional,parameter,by,code,deliver,sm,smpp,message,set,header,smpp,constants,optional,parameter,else,smpp,message,set,header,smpp,constants,smpp,message,type,deliver,sm,to,string,if,deliver,sm,get,short,message,null,alphabet,alphabet,alphabet,parse,data,coding,deliver,sm,get,data,coding,if,smpp,utils,is8bit,alphabet,smpp,message,set,body,deliver,sm,get,short,message,else,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,else,if,message,payload,null,smpp,message,set,body,message,payload,smpp,message,set,header,smpp,constants,deliver,sm,get,sequence,number,smpp,message,set,header,smpp,constants,deliver,sm,get,command,id,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,npi,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,ton,smpp,message,set,header,smpp,constants,deliver,sm,get,data,coding,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,address,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,addr,npi,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,addr,ton,smpp,message,set,header,smpp,constants,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,smpp,constants,deliver,sm,get,validity,period,smpp,message,set,header,smpp,constants,deliver,sm,get,service,type,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(CamelContext camelContext, DeliverSm deliverSm) throws Exception;1540108158;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(CamelContext camelContext, DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(camelContext, deliverSm, configuration)___        String messagePayload = null___        if (deliverSm.getShortMessage() == null && deliverSm.getOptionalParameters() != null) {_            List<OptionalParameter> oplist = Arrays.asList(deliverSm.getOptionalParameters())___            for (OptionalParameter optPara : oplist) {_                if (OptionalParameter.Tag.MESSAGE_PAYLOAD.code() == optPara.tag && OctetString.class_                    .isInstance(optPara)) {_                    messagePayload = ((OctetString) optPara).getValueAsString()__                    break__                }_            }_        }__        if (deliverSm.isSmscDeliveryReceipt()) {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliveryReceipt.toString())___            DeliveryReceipt smscDeliveryReceipt = null___            if (deliverSm.getShortMessage() != null) {_                smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            } else if (messagePayload != null) {_                smscDeliveryReceipt = DefaultDecomposer.getInstance().deliveryReceipt(messagePayload)__            }__            if (smscDeliveryReceipt != null) {_                smppMessage.setBody(smscDeliveryReceipt.getText())___                smppMessage.setHeader(SmppConstants.ID, smscDeliveryReceipt.getId())__                smppMessage.setHeader(SmppConstants.DELIVERED, smscDeliveryReceipt.getDelivered())__                smppMessage.setHeader(SmppConstants.DONE_DATE, smscDeliveryReceipt.getDoneDate())__                if (!"000".equals(smscDeliveryReceipt.getError())) {_                    smppMessage.setHeader(SmppConstants.ERROR, smscDeliveryReceipt.getError())__                }_                smppMessage.setHeader(SmppConstants.SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__                smppMessage.setHeader(SmppConstants.SUBMITTED, smscDeliveryReceipt.getSubmitted())__                smppMessage.setHeader(SmppConstants.FINAL_STATUS, smscDeliveryReceipt.getFinalStatus())__            }__            if (deliverSm.getOptionalParameters() != null && deliverSm.getOptionalParameters().length > 0) {_                _                Map<String, Object> optionalParameters = createOptionalParameterByName(deliverSm)__                smppMessage.setHeader(SmppConstants.OPTIONAL_PARAMETERS, optionalParameters)___                _                Map<Short, Object> optionalParameter = createOptionalParameterByCode(deliverSm)__                smppMessage.setHeader(SmppConstants.OPTIONAL_PARAMETER, optionalParameter)__            }_        } else {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliverSm.toString())___            if (deliverSm.getShortMessage() != null) {_                Alphabet alphabet = Alphabet.parseDataCoding(deliverSm.getDataCoding())__                if (SmppUtils.is8Bit(alphabet)) {_                    smppMessage.setBody(deliverSm.getShortMessage())__                } else {_                    smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(), configuration.getEncoding())))__                }_            } else if (messagePayload != null) {_                smppMessage.setBody(messagePayload)__            }__            smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(SmppConstants.COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI, deliverSm.getSourceAddrNpi())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON, deliverSm.getSourceAddrTon())__            smppMessage.setHeader(SmppConstants.DATA_CODING, deliverSm.getDataCoding())__            smppMessage.setHeader(SmppConstants.DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SmppConstants.DEST_ADDR_NPI, deliverSm.getDestAddrNpi())__            smppMessage.setHeader(SmppConstants.DEST_ADDR_TON, deliverSm.getDestAddrTon())__            smppMessage.setHeader(SmppConstants.SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(SmppConstants.VALIDITY_PERIOD, deliverSm.getValidityPeriod())__            smppMessage.setHeader(SmppConstants.SERVICE_TYPE, deliverSm.getServiceType())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,camel,context,camel,context,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,camel,context,deliver,sm,configuration,string,message,payload,null,if,deliver,sm,get,short,message,null,deliver,sm,get,optional,parameters,null,list,optional,parameter,oplist,arrays,as,list,deliver,sm,get,optional,parameters,for,optional,parameter,opt,para,oplist,if,optional,parameter,tag,code,opt,para,tag,octet,string,class,is,instance,opt,para,message,payload,octet,string,opt,para,get,value,as,string,break,if,deliver,sm,is,smsc,delivery,receipt,smpp,message,set,header,smpp,constants,smpp,message,type,delivery,receipt,to,string,delivery,receipt,smsc,delivery,receipt,null,if,deliver,sm,get,short,message,null,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,else,if,message,payload,null,smsc,delivery,receipt,default,decomposer,get,instance,delivery,receipt,message,payload,if,smsc,delivery,receipt,null,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,smpp,constants,id,smsc,delivery,receipt,get,id,smpp,message,set,header,smpp,constants,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,smpp,constants,submitted,smsc,delivery,receipt,get,submitted,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,final,status,if,deliver,sm,get,optional,parameters,null,deliver,sm,get,optional,parameters,length,0,map,string,object,optional,parameters,create,optional,parameter,by,name,deliver,sm,smpp,message,set,header,smpp,constants,optional,parameters,map,short,object,optional,parameter,create,optional,parameter,by,code,deliver,sm,smpp,message,set,header,smpp,constants,optional,parameter,else,smpp,message,set,header,smpp,constants,smpp,message,type,deliver,sm,to,string,if,deliver,sm,get,short,message,null,alphabet,alphabet,alphabet,parse,data,coding,deliver,sm,get,data,coding,if,smpp,utils,is8bit,alphabet,smpp,message,set,body,deliver,sm,get,short,message,else,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,else,if,message,payload,null,smpp,message,set,body,message,payload,smpp,message,set,header,smpp,constants,deliver,sm,get,sequence,number,smpp,message,set,header,smpp,constants,deliver,sm,get,command,id,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,npi,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,ton,smpp,message,set,header,smpp,constants,deliver,sm,get,data,coding,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,address,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,addr,npi,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,addr,ton,smpp,message,set,header,smpp,constants,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,smpp,constants,deliver,sm,get,validity,period,smpp,message,set,header,smpp,constants,deliver,sm,get,service,type,return,smpp,message
SmppBinding -> public SmppMessage createSmppMessage(CamelContext camelContext, DeliverSm deliverSm) throws Exception;1540108161;Create a new SmppMessage from the inbound deliver sm or deliver receipt;public SmppMessage createSmppMessage(CamelContext camelContext, DeliverSm deliverSm) throws Exception {_        SmppMessage smppMessage = new SmppMessage(camelContext, deliverSm, configuration)___        String messagePayload = null___        if (deliverSm.getShortMessage() == null && deliverSm.getOptionalParameters() != null) {_            List<OptionalParameter> oplist = Arrays.asList(deliverSm.getOptionalParameters())___            for (OptionalParameter optPara : oplist) {_                if (OptionalParameter.Tag.MESSAGE_PAYLOAD.code() == optPara.tag && OctetString.class_                    .isInstance(optPara)) {_                    messagePayload = ((OctetString) optPara).getValueAsString()__                    break__                }_            }_        }__        if (deliverSm.isSmscDeliveryReceipt()) {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliveryReceipt.toString())___            DeliveryReceipt smscDeliveryReceipt = null___            if (deliverSm.getShortMessage() != null) {_                smscDeliveryReceipt = deliverSm.getShortMessageAsDeliveryReceipt()__            } else if (messagePayload != null) {_                smscDeliveryReceipt = DefaultDecomposer.getInstance().deliveryReceipt(messagePayload)__            }__            if (smscDeliveryReceipt != null) {_                smppMessage.setBody(smscDeliveryReceipt.getText())___                smppMessage.setHeader(SmppConstants.ID, smscDeliveryReceipt.getId())__                smppMessage.setHeader(SmppConstants.DELIVERED, smscDeliveryReceipt.getDelivered())__                smppMessage.setHeader(SmppConstants.DONE_DATE, smscDeliveryReceipt.getDoneDate())__                if (!"000".equals(smscDeliveryReceipt.getError())) {_                    smppMessage.setHeader(SmppConstants.ERROR, smscDeliveryReceipt.getError())__                }_                smppMessage.setHeader(SmppConstants.SUBMIT_DATE, smscDeliveryReceipt.getSubmitDate())__                smppMessage.setHeader(SmppConstants.SUBMITTED, smscDeliveryReceipt.getSubmitted())__                smppMessage.setHeader(SmppConstants.FINAL_STATUS, smscDeliveryReceipt.getFinalStatus())__            }__            if (deliverSm.getOptionalParameters() != null && deliverSm.getOptionalParameters().length > 0) {_                _                Map<String, Object> optionalParameters = createOptionalParameterByName(deliverSm)__                smppMessage.setHeader(SmppConstants.OPTIONAL_PARAMETERS, optionalParameters)___                _                Map<Short, Object> optionalParameter = createOptionalParameterByCode(deliverSm)__                smppMessage.setHeader(SmppConstants.OPTIONAL_PARAMETER, optionalParameter)__            }_        } else {_            smppMessage.setHeader(SmppConstants.MESSAGE_TYPE, SmppMessageType.DeliverSm.toString())___            if (deliverSm.getShortMessage() != null) {_                Alphabet alphabet = Alphabet.parseDataCoding(deliverSm.getDataCoding())__                if (SmppUtils.is8Bit(alphabet)) {_                    smppMessage.setBody(deliverSm.getShortMessage())__                } else {_                    smppMessage.setBody(String.valueOf(new String(deliverSm.getShortMessage(), configuration.getEncoding())))__                }_            } else if (messagePayload != null) {_                smppMessage.setBody(messagePayload)__            }__            smppMessage.setHeader(SmppConstants.SEQUENCE_NUMBER, deliverSm.getSequenceNumber())__            smppMessage.setHeader(SmppConstants.COMMAND_ID, deliverSm.getCommandId())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR, deliverSm.getSourceAddr())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR_NPI, deliverSm.getSourceAddrNpi())__            smppMessage.setHeader(SmppConstants.SOURCE_ADDR_TON, deliverSm.getSourceAddrTon())__            smppMessage.setHeader(SmppConstants.DATA_CODING, deliverSm.getDataCoding())__            smppMessage.setHeader(SmppConstants.DEST_ADDR, deliverSm.getDestAddress())__            smppMessage.setHeader(SmppConstants.DEST_ADDR_NPI, deliverSm.getDestAddrNpi())__            smppMessage.setHeader(SmppConstants.DEST_ADDR_TON, deliverSm.getDestAddrTon())__            smppMessage.setHeader(SmppConstants.SCHEDULE_DELIVERY_TIME, deliverSm.getScheduleDeliveryTime())__            smppMessage.setHeader(SmppConstants.VALIDITY_PERIOD, deliverSm.getValidityPeriod())__            smppMessage.setHeader(SmppConstants.SERVICE_TYPE, deliverSm.getServiceType())__        }__        return smppMessage__    };create,a,new,smpp,message,from,the,inbound,deliver,sm,or,deliver,receipt;public,smpp,message,create,smpp,message,camel,context,camel,context,deliver,sm,deliver,sm,throws,exception,smpp,message,smpp,message,new,smpp,message,camel,context,deliver,sm,configuration,string,message,payload,null,if,deliver,sm,get,short,message,null,deliver,sm,get,optional,parameters,null,list,optional,parameter,oplist,arrays,as,list,deliver,sm,get,optional,parameters,for,optional,parameter,opt,para,oplist,if,optional,parameter,tag,code,opt,para,tag,octet,string,class,is,instance,opt,para,message,payload,octet,string,opt,para,get,value,as,string,break,if,deliver,sm,is,smsc,delivery,receipt,smpp,message,set,header,smpp,constants,smpp,message,type,delivery,receipt,to,string,delivery,receipt,smsc,delivery,receipt,null,if,deliver,sm,get,short,message,null,smsc,delivery,receipt,deliver,sm,get,short,message,as,delivery,receipt,else,if,message,payload,null,smsc,delivery,receipt,default,decomposer,get,instance,delivery,receipt,message,payload,if,smsc,delivery,receipt,null,smpp,message,set,body,smsc,delivery,receipt,get,text,smpp,message,set,header,smpp,constants,id,smsc,delivery,receipt,get,id,smpp,message,set,header,smpp,constants,delivered,smsc,delivery,receipt,get,delivered,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,done,date,if,000,equals,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,error,smsc,delivery,receipt,get,error,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,submit,date,smpp,message,set,header,smpp,constants,submitted,smsc,delivery,receipt,get,submitted,smpp,message,set,header,smpp,constants,smsc,delivery,receipt,get,final,status,if,deliver,sm,get,optional,parameters,null,deliver,sm,get,optional,parameters,length,0,map,string,object,optional,parameters,create,optional,parameter,by,name,deliver,sm,smpp,message,set,header,smpp,constants,optional,parameters,map,short,object,optional,parameter,create,optional,parameter,by,code,deliver,sm,smpp,message,set,header,smpp,constants,optional,parameter,else,smpp,message,set,header,smpp,constants,smpp,message,type,deliver,sm,to,string,if,deliver,sm,get,short,message,null,alphabet,alphabet,alphabet,parse,data,coding,deliver,sm,get,data,coding,if,smpp,utils,is8bit,alphabet,smpp,message,set,body,deliver,sm,get,short,message,else,smpp,message,set,body,string,value,of,new,string,deliver,sm,get,short,message,configuration,get,encoding,else,if,message,payload,null,smpp,message,set,body,message,payload,smpp,message,set,header,smpp,constants,deliver,sm,get,sequence,number,smpp,message,set,header,smpp,constants,deliver,sm,get,command,id,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,npi,smpp,message,set,header,smpp,constants,deliver,sm,get,source,addr,ton,smpp,message,set,header,smpp,constants,deliver,sm,get,data,coding,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,address,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,addr,npi,smpp,message,set,header,smpp,constants,deliver,sm,get,dest,addr,ton,smpp,message,set,header,smpp,constants,deliver,sm,get,schedule,delivery,time,smpp,message,set,header,smpp,constants,deliver,sm,get,validity,period,smpp,message,set,header,smpp,constants,deliver,sm,get,service,type,return,smpp,message
