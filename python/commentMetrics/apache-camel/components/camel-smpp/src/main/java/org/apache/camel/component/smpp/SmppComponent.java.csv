commented;modifiers;parameterAmount;loc;comment;code
false;protected;3;15;;@SuppressWarnings({ "unchecked", "rawtypes" }) @Override protected Endpoint createEndpoint(String uri, String remaining, Map parameters) throws Exception {     if (this.configuration == null) {         this.configuration = new SmppConfiguration().     }     // create a copy of the configuration as other endpoints can adjust their copy as well     SmppConfiguration config = this.configuration.copy().     config.configureFromURI(new URI(uri)).     setProperties(config, parameters).     return createEndpoint(uri, config). }
true;protected;1;3;/**  * Create a new smpp endpoint with the provided smpp configuration  */ ;/**  * Create a new smpp endpoint with the provided smpp configuration  */ protected Endpoint createEndpoint(SmppConfiguration config) throws Exception {     return createEndpoint(null, config). }
true;protected;2;3;/**  * Create a new smpp endpoint with the provided uri and smpp configuration  */ ;/**  * Create a new smpp endpoint with the provided uri and smpp configuration  */ protected Endpoint createEndpoint(String uri, SmppConfiguration config) throws Exception {     return new SmppEndpoint(uri, this, config). }
false;public;0;3;;public SmppConfiguration getConfiguration() {     return configuration. }
true;public;1;3;/**  * To use the shared SmppConfiguration as configuration.  */ ;/**  * To use the shared SmppConfiguration as configuration.  */ public void setConfiguration(SmppConfiguration configuration) {     this.configuration = configuration. }
