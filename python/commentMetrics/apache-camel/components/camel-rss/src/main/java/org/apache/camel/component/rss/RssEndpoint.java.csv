commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public Producer createProducer() throws Exception {     throw new UnsupportedOperationException("RssProducer is not implemented"). }
false;public;1;6;;@Override public Exchange createExchange(Object feed) {     Exchange exchange = createExchangeWithFeedHeader(feed, RssConstants.RSS_FEED).     exchange.getIn().setBody(feed).     return exchange. }
false;public;2;14;;@Override public Exchange createExchange(Object feed, Object entry) {     Exchange exchange = createExchangeWithFeedHeader(feed, RssConstants.RSS_FEED).     SyndFeed newFeed.     try {         newFeed = (SyndFeed) ((SyndFeed) feed).clone().         newFeed.setEntries(Arrays.asList(entry)).     } catch (CloneNotSupportedException e) {         LOG.debug("Could not create a new feed. This exception will be ignored.", e).         newFeed = null.     }     exchange.getIn().setBody(newFeed).     return exchange. }
false;protected;5;7;;@Override protected FeedPollingConsumer createEntryPollingConsumer(FeedEndpoint feedEndpoint, Processor processor, boolean filter, Date lastUpdate, boolean throttleEntries) throws Exception {     RssEntryPollingConsumer answer = new RssEntryPollingConsumer(this, processor, filter, lastUpdate, throttleEntries).     configureConsumer(answer).     return answer. }
false;protected;2;6;;@Override protected FeedPollingConsumer createPollingConsumer(FeedEndpoint feedEndpoint, Processor processor) throws Exception {     RssPollingConsumer answer = new RssPollingConsumer(this, processor).     configureConsumer(answer).     return answer. }
