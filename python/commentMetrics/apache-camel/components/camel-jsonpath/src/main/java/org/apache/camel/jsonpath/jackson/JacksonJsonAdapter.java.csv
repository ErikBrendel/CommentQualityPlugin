commented;modifiers;parameterAmount;loc;comment;code
false;public;1;14;;@Override public void init(CamelContext camelContext) {     this.camelContext = camelContext.     // Attempt to enables JAXB processing so we can easily convert JAXB annotated pojos also     Class<?> clazz = camelContext.getClassResolver().resolveClass(JACKSON_JAXB_MODULE).     if (clazz != null) {         Object obj = camelContext.getInjector().newInstance(clazz).         if (obj instanceof Module) {             Module module = (Module) obj.             defaultMapper.registerModule(module).         }     } }
false;public;2;11;;@Override public Map readValue(Object body, Exchange exchange) {     ObjectMapper mapper = resolveObjectMapper(exchange.getContext().getRegistry()).     try {         return mapper.convertValue(body, Map.class).     } catch (Throwable e) {     // ignore because we are attempting to convert     }     return null. }
false;public;2;11;;@Override public String writeAsString(Object value, Exchange exchange) {     ObjectMapper mapper = resolveObjectMapper(exchange.getContext().getRegistry()).     try {         return mapper.writeValueAsString(value).     } catch (Throwable e) {     // ignore because we are attempting to convert     }     return null. }
false;private;1;7;;private ObjectMapper resolveObjectMapper(Registry registry) {     Set<ObjectMapper> mappers = registry.findByType(ObjectMapper.class).     if (mappers.size() == 1) {         return mappers.iterator().next().     }     return defaultMapper. }
