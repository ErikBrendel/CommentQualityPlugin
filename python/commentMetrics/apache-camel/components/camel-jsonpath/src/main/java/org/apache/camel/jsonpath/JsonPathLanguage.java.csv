commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public Class<?> getResultType() {     return resultType. }
false;public;1;3;;public void setResultType(Class<?> resultType) {     this.resultType = resultType. }
false;public;0;3;;public boolean isSuppressExceptions() {     return suppressExceptions. }
false;public;1;3;;public void setSuppressExceptions(boolean suppressExceptions) {     this.suppressExceptions = suppressExceptions. }
false;public;0;3;;public Option[] getOptions() {     return options. }
false;public;1;3;;public void setOption(Option option) {     this.options = new Option[] { option }. }
false;public;1;3;;public void setOptions(Option[] options) {     this.options = options. }
false;public;1;10;;@Override public Predicate createPredicate(final String predicate) {     JsonPathExpression answer = new JsonPathExpression(predicate).     answer.setPredicate(true).     answer.setResultType(resultType).     answer.setSuppressExceptions(suppressExceptions).     answer.setOptions(options).     answer.afterPropertiesConfigured(getCamelContext()).     return answer. }
false;public;1;10;;@Override public Expression createExpression(final String expression) {     JsonPathExpression answer = new JsonPathExpression(expression).     answer.setPredicate(false).     answer.setResultType(resultType).     answer.setSuppressExceptions(suppressExceptions).     answer.setOptions(options).     answer.afterPropertiesConfigured(getCamelContext()).     return answer. }
false;public;0;5;;@Override public boolean isSingleton() {     // cannot be singleton due options     return false. }
