commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected AbstractApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/jsonpath/SpringJsonPathTransformResultTypeTest.xml"). }
false;public;0;15;;@Test public void testPriceResultType() throws Exception {     getMockEndpoint("mock:price").expectedMessageCount(4).     getMockEndpoint("mock:price").message(0).body().isInstanceOf(Float.class).     getMockEndpoint("mock:price").message(1).body().isInstanceOf(Double.class).     getMockEndpoint("mock:price").message(2).body().isInstanceOf(Float.class).     getMockEndpoint("mock:price").message(3).body().isInstanceOf(Double.class).     template.sendBody("direct:start", new File("src/test/resources/books.json")).     template.sendBody("direct:second", new File("src/test/resources/books.json")).     template.sendBody("direct:start", new File("src/test/resources/books.json")).     template.sendBody("direct:second", new File("src/test/resources/books.json")).     assertMockEndpointsSatisfied(). }
