commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").setHeader("number").jsonpath("$..store.book.length()", false, int.class, "myHeader").to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").setHeader("number").jsonpath("$..store.book.length()", false, int.class, "myHeader").to("mock:result").         }     }. }
false;public;0;10;;@Test public void testAuthors() throws Exception {     getMockEndpoint("mock:result").expectedBodiesReceived("Hello World").     getMockEndpoint("mock:result").expectedHeaderReceived("number", "2").     Object file = new File("src/test/resources/books.json").     template.sendBodyAndHeader("direct:start", "Hello World", "myHeader", file).     assertMockEndpointsSatisfied(). }
