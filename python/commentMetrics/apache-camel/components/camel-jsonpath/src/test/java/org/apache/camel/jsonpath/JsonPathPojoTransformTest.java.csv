commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").transform().jsonpath("$.type").to("mock:type"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").transform().jsonpath("$.type").to("mock:type").         }     }. }
false;public;0;13;;@Test public void testPojo() throws Exception {     getMockEndpoint("mock:type").expectedBodiesReceived("customer").     // this will be read using jackson if its on the classpath     MyPojoType pojo = new MyPojoType().     pojo.setKind("full").     pojo.setType("customer").     template.sendBody("direct:start", pojo).     assertMockEndpointsSatisfied(). }
