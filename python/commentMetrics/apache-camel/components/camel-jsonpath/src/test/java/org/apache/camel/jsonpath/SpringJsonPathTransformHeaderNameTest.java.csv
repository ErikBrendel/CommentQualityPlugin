commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected AbstractApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/jsonpath/SpringJsonPathTransformHeaderNameTest.xml"). }
false;public;0;12;;@Test public void testAuthors() throws Exception {     getMockEndpoint("mock:authors").expectedMessageCount(1).     template.sendBodyAndHeader("direct:start", "Hello World", "myHeader", new File("src/test/resources/books.json")).     assertMockEndpointsSatisfied().     List<?> authors = getMockEndpoint("mock:authors").getReceivedExchanges().get(0).getIn().getBody(List.class).     assertEquals("Nigel Rees", authors.get(0)).     assertEquals("Evelyn Waugh", authors.get(1)). }
