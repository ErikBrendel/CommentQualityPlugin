commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected AbstractApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/jsonpath/SpringJsonPathCBTTest.xml"). }
false;public;0;10;;@Test public void testCheap() throws Exception {     getMockEndpoint("mock:cheap").expectedMessageCount(1).     getMockEndpoint("mock:average").expectedMessageCount(0).     getMockEndpoint("mock:expensive").expectedMessageCount(0).     template.sendBody("direct:start", new File("src/test/resources/cheap.json")).     assertMockEndpointsSatisfied(). }
false;public;0;10;;@Test public void testAverage() throws Exception {     getMockEndpoint("mock:cheap").expectedMessageCount(0).     getMockEndpoint("mock:average").expectedMessageCount(1).     getMockEndpoint("mock:expensive").expectedMessageCount(0).     template.sendBody("direct:start", new File("src/test/resources/average.json")).     assertMockEndpointsSatisfied(). }
false;public;0;10;;@Test public void testExpensive() throws Exception {     getMockEndpoint("mock:cheap").expectedMessageCount(0).     getMockEndpoint("mock:average").expectedMessageCount(0).     getMockEndpoint("mock:expensive").expectedMessageCount(1).     template.sendBody("direct:start", new File("src/test/resources/expensive.json")).     assertMockEndpointsSatisfied(). }
