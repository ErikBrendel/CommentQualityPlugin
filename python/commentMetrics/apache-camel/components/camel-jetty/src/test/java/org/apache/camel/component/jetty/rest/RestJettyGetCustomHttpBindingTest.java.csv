commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;6;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry jndi = super.createRegistry().     jndi.bind("mybinding", new MyCustomHttpBinding("I was here.")).     return jndi. }
false;public;0;5;;@Test public void testJettyProducerGet() throws Exception {     String out = template.requestBody("http://localhost:" + getPort() + "/users/123/basic", null, String.class).     assertEquals("I was here.123.Donald Duck", out). }
false;public;1;4;;public void process(Exchange exchange) throws Exception {     String id = exchange.getIn().getHeader("id", String.class).     exchange.getOut().setBody(id + ".Donald Duck"). }
false;public;0;17;;@Override public void configure() throws Exception {     // configure to use jetty on localhost with the given port     restConfiguration().component("jetty").host("localhost").port(getPort()).endpointProperty("httpBindingRef", "#mybinding").     // use the rest DSL to define the rest services     rest("/users/").get("{id}/basic").route().to("mock:input").process(new Processor() {          public void process(Exchange exchange) throws Exception {             String id = exchange.getIn().getHeader("id", String.class).             exchange.getOut().setBody(id + ".Donald Duck").         }     }). }
false;protected;0;22;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // configure to use jetty on localhost with the given port             restConfiguration().component("jetty").host("localhost").port(getPort()).endpointProperty("httpBindingRef", "#mybinding").             // use the rest DSL to define the rest services             rest("/users/").get("{id}/basic").route().to("mock:input").process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     String id = exchange.getIn().getHeader("id", String.class).                     exchange.getOut().setBody(id + ".Donald Duck").                 }             }).         }     }. }
