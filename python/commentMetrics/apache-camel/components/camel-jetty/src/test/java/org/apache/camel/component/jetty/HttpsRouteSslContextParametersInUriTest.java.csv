commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;18;;@Override protected JndiRegistry createRegistry() throws Exception {     KeyStoreParameters ksp = new KeyStoreParameters().     ksp.setResource(this.getClass().getClassLoader().getResource("jsse/localhost.ks").toString()).     ksp.setPassword(pwd).     KeyManagersParameters kmp = new KeyManagersParameters().     kmp.setKeyPassword(pwd).     kmp.setKeyStore(ksp).     SSLContextParameters sslContextParameters = new SSLContextParameters().     sslContextParameters.setKeyManagers(kmp).     JndiRegistry registry = super.createRegistry().     registry.bind("sslContextParameters", sslContextParameters).     return registry. }
false;public;1;3;;public void process(Exchange exchange) throws Exception {     exchange.getOut().setBody("<b>Hello World</b>"). }
false;public;0;16;;public void configure() throws URISyntaxException {     JettyHttpComponent jetty = getContext().getComponent("jetty", JettyHttpComponent.class).     // NOTE: These are here to check that they are properly ignored.     setSSLProps(jetty, "", "asdfasdfasdfdasfs", "sadfasdfasdfas").     from("jetty:https://localhost:" + port1 + "/test?sslContextParameters=#sslContextParameters").to("mock:a").     Processor proc = new Processor() {          public void process(Exchange exchange) throws Exception {             exchange.getOut().setBody("<b>Hello World</b>").         }     }.     from("jetty:https://localhost:" + port1 + "/hello?sslContextParameters=#sslContextParameters").process(proc).     from("jetty:https://localhost:" + port2 + "/test?sslContextParameters=#sslContextParameters").to("mock:b"). }
false;protected;0;21;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws URISyntaxException {             JettyHttpComponent jetty = getContext().getComponent("jetty", JettyHttpComponent.class).             // NOTE: These are here to check that they are properly ignored.             setSSLProps(jetty, "", "asdfasdfasdfdasfs", "sadfasdfasdfas").             from("jetty:https://localhost:" + port1 + "/test?sslContextParameters=#sslContextParameters").to("mock:a").             Processor proc = new Processor() {                  public void process(Exchange exchange) throws Exception {                     exchange.getOut().setBody("<b>Hello World</b>").                 }             }.             from("jetty:https://localhost:" + port1 + "/hello?sslContextParameters=#sslContextParameters").process(proc).             from("jetty:https://localhost:" + port2 + "/test?sslContextParameters=#sslContextParameters").to("mock:b").         }     }. }
