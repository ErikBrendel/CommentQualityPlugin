commented;modifiers;parameterAmount;loc;comment;code
false;public;0;22;;@Test public void testJettySuspend() throws Exception {     context.getShutdownStrategy().setTimeout(50).     String reply = template.requestBody(serverUri, "World", String.class).     assertEquals("Bye World", reply).     // now suspend jetty     HttpConsumer consumer = (HttpConsumer) context.getRoute("route1").getConsumer().     assertNotNull(consumer).     // suspend     consumer.suspend().     try {         template.requestBody(serverUri, "Moon", String.class).         fail("Should throw exception").     } catch (Exception e) {         HttpOperationFailedException cause = assertIsInstanceOf(HttpOperationFailedException.class, e.getCause()).         assertEquals(503, cause.getStatusCode()).     } }
false;public;0;5;;@Override public void configure() throws Exception {     from("jetty://" + serverUri).id("route1").transform(body().prepend("Bye ")). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("jetty://" + serverUri).id("route1").transform(body().prepend("Bye ")).         }     }. }
