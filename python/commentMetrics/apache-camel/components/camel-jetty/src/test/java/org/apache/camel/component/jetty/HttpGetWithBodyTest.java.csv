commented;modifiers;parameterAmount;loc;comment;code
false;public;1;5;;@Override public void process(Exchange exchange) throws Exception {     exchange.getIn().setHeader(Exchange.HTTP_METHOD, "GET").     exchange.getIn().setBody("Camel"). }
false;public;0;14;;@Test public void testGetWithBody() throws Exception {     // use jetty http producer as it support GET with body (regular camel-http producer does not)     Exchange result = template.request("jetty:http://localhost:{{port}}/myapp", new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             exchange.getIn().setHeader(Exchange.HTTP_METHOD, "GET").             exchange.getIn().setBody("Camel").         }     }).     assertNotNull(result).     assertEquals("Hello Camel", result.getOut().getBody(String.class)). }
false;public;0;6;;public void configure() throws Exception {     from("jetty:http://localhost:{{port}}/myapp?disableStreamCache=false").convertBodyTo(String.class).to("log:foo").transform(body().prepend("Hello ")). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from("jetty:http://localhost:{{port}}/myapp?disableStreamCache=false").convertBodyTo(String.class).to("log:foo").transform(body().prepend("Hello ")).         }     }. }
