commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testJettyContinuationDisabled() throws Exception {     getMockEndpoint("mock:result").expectedBodiesReceived("Bye World").     String out = template.requestBody("http://localhost:{{port}}/myservice", null, String.class).     assertEquals("Bye World", out).     assertMockEndpointsSatisfied(). }
false;public;1;4;;public void process(Exchange exchange) throws Exception {     Thread.sleep(1000).     exchange.getOut().setBody("Bye World"). }
false;public;0;11;;@Override public void configure() throws Exception {     from("jetty:http://localhost:{{port}}/myservice?useContinuation=false").process(new Processor() {          public void process(Exchange exchange) throws Exception {             Thread.sleep(1000).             exchange.getOut().setBody("Bye World").         }     }).to("mock:result"). }
false;protected;0;16;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("jetty:http://localhost:{{port}}/myservice?useContinuation=false").process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     Thread.sleep(1000).                     exchange.getOut().setBody("Bye World").                 }             }).to("mock:result").         }     }. }
