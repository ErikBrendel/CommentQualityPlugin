commented;modifiers;parameterAmount;loc;comment;code
false;public;1;3;;@Override public void process(Exchange exchange) throws Exception { }
false;public;0;11;;@Test public void testBlob() throws Exception {     Exchange out = template.request("http://localhost:" + getPort() + "/users/blob", new Processor() {          @Override         public void process(Exchange exchange) throws Exception {         }     }).     assertEquals("application/foobar", out.getOut().getHeader(Exchange.CONTENT_TYPE)).     assertEquals("Some foobar stuff goes here", out.getOut().getBody(String.class)). }
false;public;1;3;;@Override public void process(Exchange exchange) throws Exception { }
false;public;0;11;;@Test public void testJSon() throws Exception {     Exchange out = template.request("http://localhost:" + getPort() + "/users/lives", new Processor() {          @Override         public void process(Exchange exchange) throws Exception {         }     }).     assertEquals("application/json", out.getOut().getHeader(Exchange.CONTENT_TYPE)).     assertEquals("{\"iso\":\"EN\",\"country\":\"England\"}", out.getOut().getBody(String.class)). }
false;public;0;19;;@Override public void configure() throws Exception {     // enable json binding     restConfiguration().component("jetty").host("localhost").port(getPort()).bindingMode(RestBindingMode.json).     rest("/users/").consumes("application/json").produces("application/json").get("blob").to("direct:blob").get("lives").to("direct:lives").     from("direct:blob").setHeader(Exchange.CONTENT_TYPE, constant("application/foobar")).transform().constant("Some foobar stuff goes here").     CountryPojo country = new CountryPojo().     country.setIso("EN").     country.setCountry("England").     from("direct:lives").transform().constant(country). }
false;protected;0;24;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // enable json binding             restConfiguration().component("jetty").host("localhost").port(getPort()).bindingMode(RestBindingMode.json).             rest("/users/").consumes("application/json").produces("application/json").get("blob").to("direct:blob").get("lives").to("direct:lives").             from("direct:blob").setHeader(Exchange.CONTENT_TYPE, constant("application/foobar")).transform().constant("Some foobar stuff goes here").             CountryPojo country = new CountryPojo().             country.setIso("EN").             country.setCountry("England").             from("direct:lives").transform().constant(country).         }     }. }
