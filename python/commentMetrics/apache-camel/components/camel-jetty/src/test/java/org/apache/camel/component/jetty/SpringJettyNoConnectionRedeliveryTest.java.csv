commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected AbstractXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/component/jetty/jetty-noconnection-redelivery.xml"). }
false;public;0;5;;@Test public void testConnectionOk() throws Exception {     String reply = template.requestBody("direct:start", "World", String.class).     assertEquals("Bye World", reply). }
false;public;1;3;;public void process(Exchange exchange) throws Exception {     exchange.getIn().setBody("Moon"). }
false;public;0;20;;@Test public void testConnectionNotOk() throws Exception {     // stop Jetty route so there should not be a connection     context.getRouteController().stopRoute("jetty").     Exchange exchange = template.request("direct:start", new Processor() {          public void process(Exchange exchange) throws Exception {             exchange.getIn().setBody("Moon").         }     }).     assertTrue(exchange.isFailed()).     // there should be a connect exception as cause     ConnectException ce = exchange.getException(ConnectException.class).     assertNotNull(ce).     assertEquals(true, exchange.getIn().getHeader(Exchange.REDELIVERED)).     assertEquals(4, exchange.getIn().getHeader(Exchange.REDELIVERY_COUNTER)). }
