commented;modifiers;parameterAmount;loc;comment;code
false;public;1;3;;public void process(Exchange exchange) throws Exception {     exchange.getIn().setBody("World"). }
false;public;0;18;;@Test public void testJettyCallHttpThenException() throws Exception {     getMockEndpoint("mock:foo").expectedBodiesReceived("World").     getMockEndpoint("mock:bar").expectedBodiesReceived("Bye World").     Exchange reply = template.request("http://localhost:{{port}}/myserver?throwExceptionOnFailure=false", new Processor() {          public void process(Exchange exchange) throws Exception {             exchange.getIn().setBody("World").         }     }).     assertMockEndpointsSatisfied().     assertNotNull(reply).     assertTrue(reply.getOut().getBody(String.class).startsWith("java.lang.IllegalArgumentException: I cannot do this")).     assertEquals(500, reply.getOut().getHeader(Exchange.HTTP_RESPONSE_CODE)).     assertEquals("Server Error", reply.getOut().getHeader(Exchange.HTTP_RESPONSE_TEXT)). }
false;public;0;18;;@Override public void configure() throws Exception {     from("jetty://http://localhost:{{port}}/myserver").to("log:A").removeHeaders("CamelHttp*").to("http://localhost:{{port}}/other").removeHeaders("CamelHttp*").to("mock:bar").throwException(new IllegalArgumentException("I cannot do this")).     from("jetty://http://localhost:{{port}}/other").convertBodyTo(String.class).to("log:C").to("mock:foo").transform().simple("Bye ${body}"). }
false;protected;0;23;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("jetty://http://localhost:{{port}}/myserver").to("log:A").removeHeaders("CamelHttp*").to("http://localhost:{{port}}/other").removeHeaders("CamelHttp*").to("mock:bar").throwException(new IllegalArgumentException("I cannot do this")).             from("jetty://http://localhost:{{port}}/other").convertBodyTo(String.class).to("log:C").to("mock:foo").transform().simple("Bye ${body}").         }     }. }
