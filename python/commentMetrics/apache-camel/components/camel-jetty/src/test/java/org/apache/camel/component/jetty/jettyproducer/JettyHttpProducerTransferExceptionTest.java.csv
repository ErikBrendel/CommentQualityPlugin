commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testTransferException() throws Exception {     try {         template.requestBody("jetty:http://localhost:{{port}}/myapp/myservice?transferException=true", "").         fail("Should have thrown exception").     } catch (CamelExecutionException e) {         IllegalArgumentException cause = assertIsInstanceOf(IllegalArgumentException.class, e.getCause()).         assertEquals("Damn", cause.getMessage()).     } }
false;public;0;5;;@Override public void configure() throws Exception {     from("jetty:http://localhost:{{port}}/myapp/myservice?transferException=true").throwException(new IllegalArgumentException("Damn")). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("jetty:http://localhost:{{port}}/myapp/myservice?transferException=true").throwException(new IllegalArgumentException("Damn")).         }     }. }
