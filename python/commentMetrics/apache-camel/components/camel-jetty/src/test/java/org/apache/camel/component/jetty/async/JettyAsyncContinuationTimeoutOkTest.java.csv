commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testJettyAsyncTimeoutOk() throws Exception {     getMockEndpoint("mock:result").expectedBodiesReceived("Bye World").     String reply = template.requestBody("http://localhost:{{port}}/myservice", null, String.class).     assertEquals("Bye World", reply).     assertMockEndpointsSatisfied(). }
false;public;0;8;;@Override public void configure() throws Exception {     context.addComponent("async", new MyAsyncComponent()).     from("jetty:http://localhost:{{port}}/myservice?continuationTimeout=3000").to("async:bye:world").to("mock:result"). }
false;protected;0;13;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             context.addComponent("async", new MyAsyncComponent()).             from("jetty:http://localhost:{{port}}/myservice?continuationTimeout=3000").to("async:bye:world").to("mock:result").         }     }. }
