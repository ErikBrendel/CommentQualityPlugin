commented;modifiers;parameterAmount;loc;comment;code
false;public;0;14;;@Test public void testTimeout() throws Exception {     // give Jetty time to startup properly     Thread.sleep(1000).     getMockEndpoint("mock:result").expectedMessageCount(0).     getMockEndpoint("mock:error").expectedMessageCount(0).     getMockEndpoint("mock:timeout").expectedMessageCount(1).     template.sendBody("direct:start", null).     assertMockEndpointsSatisfied(). }
false;public;0;9;;@Override public void configure() throws Exception {     onException(Exception.class).handled(true).to("mock:error").     onException(ExchangeTimedOutException.class).handled(true).to("mock:timeout").     from("direct:start").to(url).to("mock:result").     from(url).delay(5000).transform(constant("Bye World")). }
false;protected;0;14;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             onException(Exception.class).handled(true).to("mock:error").             onException(ExchangeTimedOutException.class).handled(true).to("mock:timeout").             from("direct:start").to(url).to("mock:result").             from(url).delay(5000).transform(constant("Bye World")).         }     }. }
