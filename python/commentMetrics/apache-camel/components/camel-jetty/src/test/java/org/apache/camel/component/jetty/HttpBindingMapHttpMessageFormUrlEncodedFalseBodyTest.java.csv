commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Test public void testSendToJetty() throws Exception {     Map<String, Object> map = new HashMap<>().     map.put("content-type", "application/x-www-form-urlencoded").     map.put(Exchange.HTTP_METHOD, HttpMethods.POST).     template.requestBodyAndHeaders("http://localhost:{{port}}/myapp/myservice?query1=a&query2=b", "b1=x&b2=y", map). }
false;public;1;13;;public void process(Exchange exchange) throws Exception {     String body = exchange.getIn().getBody(String.class).     // for unit testing make sure we got right message     assertEquals("The body message is wrong", "b1=x&b2=y", body).     assertEquals("Get a wrong query parameter from the message header", "a", exchange.getIn().getHeader("query1")).     assertEquals("Get a wrong query parameter from the message header", "b", exchange.getIn().getHeader("query2")).     assertNotEquals("Get a wrong form parameter from the message header", "x", exchange.getIn().getHeader("b1")).     assertNotEquals("Get a wrong form parameter from the message header", "y", exchange.getIn().getHeader("b2")).     // send a response     exchange.getOut().setBody("Request message is OK"). }
false;public;0;17;;public void configure() throws Exception {     from("jetty:http://localhost:{{port}}/myapp/myservice?mapHttpMessageFormUrlEncodedBody=false").process(new Processor() {          public void process(Exchange exchange) throws Exception {             String body = exchange.getIn().getBody(String.class).             // for unit testing make sure we got right message             assertEquals("The body message is wrong", "b1=x&b2=y", body).             assertEquals("Get a wrong query parameter from the message header", "a", exchange.getIn().getHeader("query1")).             assertEquals("Get a wrong query parameter from the message header", "b", exchange.getIn().getHeader("query2")).             assertNotEquals("Get a wrong form parameter from the message header", "x", exchange.getIn().getHeader("b1")).             assertNotEquals("Get a wrong form parameter from the message header", "y", exchange.getIn().getHeader("b2")).             // send a response             exchange.getOut().setBody("Request message is OK").         }     }). }
false;protected;0;22;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from("jetty:http://localhost:{{port}}/myapp/myservice?mapHttpMessageFormUrlEncodedBody=false").process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     String body = exchange.getIn().getBody(String.class).                     // for unit testing make sure we got right message                     assertEquals("The body message is wrong", "b1=x&b2=y", body).                     assertEquals("Get a wrong query parameter from the message header", "a", exchange.getIn().getHeader("query1")).                     assertEquals("Get a wrong query parameter from the message header", "b", exchange.getIn().getHeader("query2")).                     assertNotEquals("Get a wrong form parameter from the message header", "x", exchange.getIn().getHeader("b1")).                     assertNotEquals("Get a wrong form parameter from the message header", "y", exchange.getIn().getHeader("b2")).                     // send a response                     exchange.getOut().setBody("Request message is OK").                 }             }).         }     }. }
