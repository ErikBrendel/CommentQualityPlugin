commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Test public void testHttpProxyWithContentType() throws Exception {     String out = template.requestBodyAndHeader("http://localhost:{{port}}/hello", "test", "Content-Type", "application/xml", String.class).     assertEquals("Get a wrong response ", "application/xml", out). }
false;public;1;4;;public void process(Exchange exchange) throws Exception {     exchange.getOut().setBody(ExchangeHelper.getContentType(exchange)). }
false;public;0;12;;public void configure() {     from("jetty://http://localhost:{{port}}/hello").to("http://localhost:{{port}}/bye?throwExceptionOnFailure=false&bridgeEndpoint=true").     from("jetty://http://localhost:{{port}}/bye").process(new Processor() {          public void process(Exchange exchange) throws Exception {             exchange.getOut().setBody(ExchangeHelper.getContentType(exchange)).         }     }). }
false;protected;0;16;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() {             from("jetty://http://localhost:{{port}}/hello").to("http://localhost:{{port}}/bye?throwExceptionOnFailure=false&bridgeEndpoint=true").             from("jetty://http://localhost:{{port}}/bye").process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     exchange.getOut().setBody(ExchangeHelper.getContentType(exchange)).                 }             }).         }     }. }
