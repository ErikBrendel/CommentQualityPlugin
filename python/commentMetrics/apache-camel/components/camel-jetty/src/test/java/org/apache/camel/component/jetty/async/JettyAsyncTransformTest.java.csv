commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testJettyAsync() throws Exception {     getMockEndpoint("mock:result").expectedBodiesReceived("Bye World").     String reply = template.requestBody("http://localhost:{{port}}/myservice", null, String.class).     assertEquals("Bye World", reply).     assertMockEndpointsSatisfied(). }
false;public;0;12;;@Override public void configure() throws Exception {     context.addComponent("async", new MyAsyncComponent()).     from("jetty:http://localhost:{{port}}/myservice").to("log:foo").convertBodyTo(String.class).transform(constant("Hello World")).to("async:hi:world").transform(constant("Bye World")).to("mock:result"). }
false;protected;0;17;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             context.addComponent("async", new MyAsyncComponent()).             from("jetty:http://localhost:{{port}}/myservice").to("log:foo").convertBodyTo(String.class).transform(constant("Hello World")).to("async:hi:world").transform(constant("Bye World")).to("mock:result").         }     }. }
