commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Test public void testHttpServletRequestResponse() throws Exception {     Object response = template.requestBody("http://localhost:{{port}}/myapp/myservice", "bookid=123").     // convert the response to a String     String body = context.getTypeConverter().convertTo(String.class, response).     assertEquals("Written by servlet response<html><body>Book 123 is Camel in Action</body></html>", body). }
false;public;0;5;;public void configure() throws Exception {     // START SNIPPET: e1     from("jetty:http://localhost:{{port}}/myapp/myservice").process(new MyBookService()). // END SNIPPET: e1 }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             // START SNIPPET: e1             from("jetty:http://localhost:{{port}}/myapp/myservice").process(new MyBookService()).         // END SNIPPET: e1         }     }. }
false;public;1;26;;public void process(Exchange exchange) throws Exception {     // just get the body as a string     String body = exchange.getIn().getBody(String.class).     // we have access to the HttpServletRequest here and we can grab it if we need it     HttpServletRequest req = exchange.getIn().getBody(HttpServletRequest.class).     assertNotNull(req).     // we have access to the HttpServletResponse here and we can grab it if we need it     HttpServletResponse res = exchange.getIn().getBody(HttpServletResponse.class).     assertNotNull(res).     // and they should also be on HttpMessage     HttpMessage msg = (HttpMessage) exchange.getIn().     assertNotNull(msg.getRequest()).     assertNotNull(msg.getResponse()).     // and we can use servlet response to write to output stream also     res.getOutputStream().print("Written by servlet response").     // for unit testing     assertEquals("bookid=123", body).     // send a html response     exchange.getOut().setBody("<html><body>Book 123 is Camel in Action</body></html>"). }
