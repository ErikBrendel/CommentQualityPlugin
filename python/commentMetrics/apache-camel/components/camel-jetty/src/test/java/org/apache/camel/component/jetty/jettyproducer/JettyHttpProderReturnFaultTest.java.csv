commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public void process(Exchange exchange) throws Exception {     exchange.getIn().setBody("Hello World!"). }
false;public;0;23;;@Test public void testHttpFault() throws Exception {     // these tests does not run well on Windows     if (isPlatform("windows")) {         return.     }     // give Jetty time to startup properly     Thread.sleep(1000).     Exchange exchange = template.request("jetty://http://localhost:{{port}}/test", new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             exchange.getIn().setBody("Hello World!").         }     }).     assertTrue(exchange.isFailed()).     HttpOperationFailedException exception = exchange.getException(HttpOperationFailedException.class).     assertNotNull(exception).     assertEquals("This is a fault", exception.getResponseBody()).     assertEquals(500, exception.getStatusCode()). }
false;public;1;4;;public void process(Exchange exchange) throws Exception {     exchange.getOut().setFault(true).     exchange.getOut().setBody("This is a fault"). }
false;public;0;10;;@Override public void configure() throws Exception {     from("jetty://http://localhost:{{port}}/test").process(new Processor() {          public void process(Exchange exchange) throws Exception {             exchange.getOut().setFault(true).             exchange.getOut().setBody("This is a fault").         }     }). }
false;protected;0;15;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("jetty://http://localhost:{{port}}/test").process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     exchange.getOut().setFault(true).                     exchange.getOut().setBody("This is a fault").                 }             }).         }     }. }
