commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isUseRouteBuilder() {     return false. }
false;public;0;6;;@Override public void configure() throws Exception {     from("jetty:http://localhost:{{port}}/hello").to("mock:foo").     from("jetty:http://localhost:{{port}}/bye?sessionSupport=true").to("mock:bar"). }
false;public;0;19;;@Test public void testJettySessionSupportInvalid() throws Exception {     context.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("jetty:http://localhost:{{port}}/hello").to("mock:foo").             from("jetty:http://localhost:{{port}}/bye?sessionSupport=true").to("mock:bar").         }     }).     try {         context.start().         fail("Should have thrown an exception").     } catch (IllegalStateException e) {         assertEquals("Server has already been started. Cannot enabled sessionSupport on http:localhost:" + getPort(), e.getMessage()).     } finally {         context.stop().     } }
false;public;0;4;;@Override public void configure() throws Exception {     from("jetty:http://localhost:{{port}}/hello?sessionSupport=true").transform(simple("Bye ${body}")). }
false;public;0;20;;@Test public void testJettySessionSupportOk() throws Exception {     context.addRoutes(new RouteBuilder() {          @Override         public void configure() throws Exception {             from("jetty:http://localhost:{{port}}/hello?sessionSupport=true").transform(simple("Bye ${body}")).         }     }).     context.start().     try {         String reply = template.requestBody("http://localhost:{{port}}/hello", "World", String.class).         assertEquals("Bye World", reply).         reply = template.requestBody("http://localhost:{{port}}/hello", "Moon", String.class).         assertEquals("Bye Moon", reply).     } finally {         context.stop().     } }
