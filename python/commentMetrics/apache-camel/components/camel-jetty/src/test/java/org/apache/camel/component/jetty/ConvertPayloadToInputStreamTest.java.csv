commented;modifiers;parameterAmount;loc;comment;code
false;public;0;19;;@Test public void testConvertPayloadToInputStream() throws Exception {     MockEndpoint mockEndpoint = getMockEndpoint("mock:result").     mockEndpoint.expectedMessageCount(1).     template.requestBodyAndHeader("http://localhost:{{port}}/test", expectedBody, "Content-Type", "application/xml").     mockEndpoint.assertIsSatisfied().     List<Exchange> list = mockEndpoint.getReceivedExchanges().     Exchange exchange = list.get(0).     assertNotNull("exchange", exchange).     Message in = exchange.getIn().     assertNotNull("in", in).     Object actual = in.getBody().     InputStream value = assertIsInstanceOf(InputStream.class, actual).     assertNotNull("InputStream", value). }
false;public;0;5;;public void configure() {     from("jetty:http://localhost:{{port}}/test").convertBodyTo(InputStream.class).to("mock:result"). }
false;protected;0;10;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() {             from("jetty:http://localhost:{{port}}/test").convertBodyTo(InputStream.class).to("mock:result").         }     }. }
