commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Test public void testSendToJetty() throws Exception {     Object response = template.requestBody("http://localhost:{{port}}/myapp/myservice", "bookid=123").     // convert the response to a String     String body = context.getTypeConverter().convertTo(String.class, response).     assertEquals("<html><body>Book 123 is Camel in Action</body></html>", body). }
false;public;0;14;;public void configure() throws Exception {     // START SNIPPET: e1     // define socket connector properties     Map<String, Object> properties = new HashMap<>().     properties.put("acceptors", 4).     properties.put("statsOn", "false").     properties.put("soLingerTime", "5000").     JettyHttpComponent jetty = getContext().getComponent("jetty", JettyHttpComponent.class).     jetty.setSocketConnectorProperties(properties).     // END SNIPPET: e1     from("jetty:http://localhost:{{port}}/myapp/myservice").process(new MyBookService()). }
false;protected;0;19;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             // START SNIPPET: e1             // define socket connector properties             Map<String, Object> properties = new HashMap<>().             properties.put("acceptors", 4).             properties.put("statsOn", "false").             properties.put("soLingerTime", "5000").             JettyHttpComponent jetty = getContext().getComponent("jetty", JettyHttpComponent.class).             jetty.setSocketConnectorProperties(properties).             // END SNIPPET: e1             from("jetty:http://localhost:{{port}}/myapp/myservice").process(new MyBookService()).         }     }. }
false;public;1;14;;public void process(Exchange exchange) throws Exception {     // just get the body as a string     String body = exchange.getIn().getBody(String.class).     // we have access to the HttpServletRequest here and we can grab it if we need it     HttpServletRequest req = exchange.getIn().getBody(HttpServletRequest.class).     assertNotNull(req).     // for unit testing     assertEquals("bookid=123", body).     // send a html response     exchange.getOut().setBody("<html><body>Book 123 is Camel in Action</body></html>"). }
