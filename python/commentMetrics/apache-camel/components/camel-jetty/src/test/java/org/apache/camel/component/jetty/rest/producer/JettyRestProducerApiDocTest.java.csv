commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Test public void testJettyProducerGet() throws Exception {     String out = fluentTemplate.withHeader("name", "Donald Duck").to("direct:start").request(String.class).     assertEquals("Hello Donald Duck", out). }
false;public;0;14;;@Override public void configure() throws Exception {     // configure to use localhost with the given port     restConfiguration().component("jetty").host("localhost").port(getPort()).producerApiDoc("hello-api.json").     from("direct:start").to("rest:get:api:hello/hi/{name}").     // use the rest DSL to define the rest services     rest("/api/").get("hello/hi/{name}").route().transform().simple("Hello ${header.name}"). }
false;protected;0;19;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // configure to use localhost with the given port             restConfiguration().component("jetty").host("localhost").port(getPort()).producerApiDoc("hello-api.json").             from("direct:start").to("rest:get:api:hello/hi/{name}").             // use the rest DSL to define the rest services             rest("/api/").get("hello/hi/{name}").route().transform().simple("Hello ${header.name}").         }     }. }
