commented;modifiers;parameterAmount;loc;comment;code
false;public;1;3;;public void process(Exchange exchange) throws Exception {     exchange.getIn().setHeader(Exchange.HTTP_QUERY, "quote=Camel rocks"). }
false;public;0;13;;@Test public void testConnectionCloseHeader() throws Exception {     Exchange exchange = template.request(url + "?connectionClose=true", new Processor() {          public void process(Exchange exchange) throws Exception {             exchange.getIn().setHeader(Exchange.HTTP_QUERY, "quote=Camel rocks").         }     }).     assertNotNull(exchange).     Map<?, ?> headers = exchange.getOut().getHeaders().     assertEquals("close", headers.get("Connection")). }
false;public;1;4;;public void process(Exchange exchange) throws Exception {     String quote = exchange.getIn().getHeader("quote", String.class).     assertEquals("Camel rocks", quote). }
false;public;0;9;;@Override public void configure() throws Exception {     from("jetty:" + url).process(new Processor() {          public void process(Exchange exchange) throws Exception {             String quote = exchange.getIn().getHeader("quote", String.class).             assertEquals("Camel rocks", quote).         }     }). }
false;protected;0;14;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("jetty:" + url).process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     String quote = exchange.getIn().getHeader("quote", String.class).                     assertEquals("Camel rocks", quote).                 }             }).         }     }. }
