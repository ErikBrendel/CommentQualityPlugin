commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testSetHeader() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived("Hello World").     mock.expectedHeaderReceived("beer", "Carlsberg").     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied(). }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").setHeader("beer", groovy("'Carlsberg'")).to("mock:result"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").setHeader("beer", groovy("'Carlsberg'")).to("mock:result").         }     }. }
