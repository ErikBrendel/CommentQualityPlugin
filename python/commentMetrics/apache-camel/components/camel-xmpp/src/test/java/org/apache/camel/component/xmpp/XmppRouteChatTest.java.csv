commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;8;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry registry = super.createRegistry().     embeddedXmppTestServer.bindSSLContextTo(registry).     return registry. }
false;public;0;21;;@Test public void testXmppChat() throws Exception {     consumerEndpoint = context.getEndpoint("mock:out1", MockEndpoint.class).     producerEndpoint = context.getEndpoint("mock:out2", MockEndpoint.class).     consumerEndpoint.expectedBodiesReceived(body1, body2).     producerEndpoint.expectedBodiesReceived(body1, body2).     // will send chat messages to the consumer     template.sendBody("direct:toConsumer", body1).     Thread.sleep(50).     template.sendBody("direct:toConsumer", body2).     template.sendBody("direct:toProducer", body1).     Thread.sleep(50).     template.sendBody("direct:toProducer", body2).     consumerEndpoint.assertIsSatisfied().     producerEndpoint.assertIsSatisfied(). }
false;public;0;14;;public void configure() throws Exception {     from("direct:toConsumer").to(getConsumerUri()).     from("direct:toProducer").to(getProducerUri()).     from(getConsumerUri()).to("mock:out1").     from(getProducerUri()).to("mock:out2"). }
false;protected;0;18;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from("direct:toConsumer").to(getConsumerUri()).             from("direct:toProducer").to(getProducerUri()).             from(getConsumerUri()).to("mock:out1").             from(getProducerUri()).to("mock:out2").         }     }. }
false;protected;0;4;;protected String getProducerUri() {     return "xmpp://localhost:" + embeddedXmppTestServer.getXmppPort() + "/camel_producer@apache.camel?connectionConfig=#customConnectionConfig&room=camel-test-producer@conference.apache.camel&user=camel_producer&password=secret&serviceName=apache.camel". }
false;protected;0;4;;protected String getConsumerUri() {     return "xmpp://localhost:" + embeddedXmppTestServer.getXmppPort() + "/camel_consumer@apache.camel?connectionConfig=#customConnectionConfig&room=camel-test-consumer@conference.apache.camel&user=camel_consumer&password=secret&serviceName=apache.camel". }
false;public;0;4;;@Override public void doPreSetup() throws Exception {     embeddedXmppTestServer = new EmbeddedXmppTestServer(). }
false;public;0;6;;@Override @After public void tearDown() throws Exception {     super.tearDown().     embeddedXmppTestServer.stop(). }
