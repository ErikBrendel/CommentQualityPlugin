commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;8;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry registry = super.createRegistry().     embeddedXmppTestServer.bindSSLContextTo(registry).     return registry. }
false;public;0;12;;@Test public void testXmppChat() throws Exception {     consumerEndpoint = context.getEndpoint("mock:out", MockEndpoint.class).     consumerEndpoint.expectedBodiesReceived(body1, body2).     // will send chat messages to the room     template.sendBody("direct:toProducer", body1).     Thread.sleep(50).     template.sendBody("direct:toProducer", body2).     consumerEndpoint.assertIsSatisfied(). }
false;public;0;8;;public void configure() throws Exception {     from("direct:toProducer").to(getProducerUri()).     from(getConsumerUri()).to("mock:out"). }
false;protected;0;12;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() throws Exception {             from("direct:toProducer").to(getProducerUri()).             from(getConsumerUri()).to("mock:out").         }     }. }
false;protected;0;9;;protected String getProducerUri() {     // will resolve it properly to 'camel-test@conference.apache.camel'     return "xmpp://localhost:" + embeddedXmppTestServer.getXmppPort() + "/?connectionConfig=#customConnectionConfig&room=camel-test&user=camel_producer@apache.camel&password=secret&nickname=camel_producer". }
false;protected;0;6;;protected String getConsumerUri() {     // 'camel-test@conference.apache.camel'     return "xmpp://localhost:" + embeddedXmppTestServer.getXmppPort() + "/?connectionConfig=#customConnectionConfig&room=camel-test@conference.apache.camel&user=camel_consumer@apache.camel&password=secret&nickname=camel_consumer". }
false;public;0;4;;@Override public void doPreSetup() throws Exception {     embeddedXmppTestServer = new EmbeddedXmppTestServer(). }
false;public;0;6;;@Override @After public void tearDown() throws Exception {     super.tearDown().     embeddedXmppTestServer.stop(). }
