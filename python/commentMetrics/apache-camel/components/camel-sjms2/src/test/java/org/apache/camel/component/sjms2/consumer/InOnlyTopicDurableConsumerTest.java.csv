commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected boolean useJmx() {     return false. }
false;public;0;15;;@Test public void testDurableTopic() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedBodiesReceived("Hello World").     MockEndpoint mock2 = getMockEndpoint("mock:result2").     mock2.expectedBodiesReceived("Hello World").     // wait a bit and send the message     Thread.sleep(1000).     template.sendBody("sjms2:topic:foo", "Hello World").     assertMockEndpointsSatisfied(). }
true;protected;0;13;/*      * @see org.apache.camel.test.junit4.CamelTestSupport#createCamelContext()      *      * @return      * @throws Exception      */ ;/*      * @see org.apache.camel.test.junit4.CamelTestSupport#createCamelContext()      *      * @return      * @throws Exception      */ @Override protected CamelContext createCamelContext() throws Exception {     ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(BROKER_URI).     ConnectionFactoryResource connectionResource = new ConnectionFactoryResource().     connectionResource.setConnectionFactory(connectionFactory).     connectionResource.setClientId(CONNECTION_ID).     CamelContext camelContext = super.createCamelContext().     Sjms2Component component = new Sjms2Component().     component.setConnectionResource(connectionResource).     component.setConnectionCount(1).     camelContext.addComponent("sjms2", component).     return camelContext. }
false;public;0;8;;@Override public void configure() throws Exception {     from("sjms2:topic:foo?durableSubscriptionId=bar1").to("mock:result").     from("sjms2:topic:foo?durableSubscriptionId=bar2").to("mock:result2"). }
false;protected;0;13;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("sjms2:topic:foo?durableSubscriptionId=bar1").to("mock:result").             from("sjms2:topic:foo?durableSubscriptionId=bar2").to("mock:result2").         }     }. }
