commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected boolean useJmx() {     return false. }
false;public;0;16;;@Test public void testSynchronous() throws Exception {     final String expectedBody = "Hello World".     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(1).     mock.expectedBodiesReceived("Hello World").     MockEndpoint mock2 = getMockEndpoint("mock:result2").     mock2.expectedMessageCount(1).     mock2.expectedBodiesReceived("Hello World").     template.sendBody("direct:start", expectedBody).     mock.assertIsSatisfied().     mock2.assertIsSatisfied(). }
false;public;0;12;;public void configure() {     from("direct:start").to(TEST_DESTINATION_NAME).     from(TEST_DESTINATION_NAME).to("log:test.log.1?showBody=true", "mock:result").     from(TEST_DESTINATION_NAME + "?subscriptionId=sharedTest&shared=true").to("log:test.log.1?showBody=true", "mock:result2").     from(TEST_DESTINATION_NAME + "?subscriptionId=sharedTest&shared=true").to("log:test.log.1?showBody=true", "mock:result2"). }
true;protected;0;17;/**  * @see org.apache.camel.test.junit4.CamelTestSupport#createRouteBuilder()  *  * @return  * @throws Exception  */ ;/**  * @see org.apache.camel.test.junit4.CamelTestSupport#createRouteBuilder()  *  * @return  * @throws Exception  */ @Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() {             from("direct:start").to(TEST_DESTINATION_NAME).             from(TEST_DESTINATION_NAME).to("log:test.log.1?showBody=true", "mock:result").             from(TEST_DESTINATION_NAME + "?subscriptionId=sharedTest&shared=true").to("log:test.log.1?showBody=true", "mock:result2").             from(TEST_DESTINATION_NAME + "?subscriptionId=sharedTest&shared=true").to("log:test.log.1?showBody=true", "mock:result2").         }     }. }
