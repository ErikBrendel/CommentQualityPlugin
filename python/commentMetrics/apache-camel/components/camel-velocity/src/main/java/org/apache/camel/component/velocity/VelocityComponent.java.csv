commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public VelocityEngine getVelocityEngine() {     return velocityEngine. }
true;public;1;3;/**  * To use the {@link VelocityEngine} otherwise a new engine is created  */ ;/**  * To use the {@link VelocityEngine} otherwise a new engine is created  */ public void setVelocityEngine(VelocityEngine velocityEngine) {     this.velocityEngine = velocityEngine. }
false;protected;3;16;;protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {     boolean cache = getAndRemoveParameter(parameters, "contentCache", Boolean.class, Boolean.TRUE).     VelocityEndpoint answer = new VelocityEndpoint(uri, this, remaining).     setProperties(answer, parameters).     answer.setContentCache(cache).     answer.setVelocityEngine(velocityEngine).     // if its a http resource then append any remaining parameters and update the resource uri     if (ResourceHelper.isHttpUri(remaining)) {         remaining = ResourceHelper.appendParameters(remaining, parameters).         answer.setResourceUri(remaining).     }     return answer. }
