commented;modifiers;parameterAmount;loc;comment;code
false;public;0;16;;@Test public void testWithObject() throws Exception {     String msg = String.format("Hi Claus how are you? Its a nice day.%sGive my regards to the family Ibsen.", "\n").     MockEndpoint mock = getMockEndpoint("mock:result").     mock.expectedMessageCount(1).     mock.expectedBodiesReceived(msg).     MyPerson person = new MyPerson().     person.setFamilyName("Ibsen").     person.setGivenName("Claus").     template.requestBody("direct:in", person).     mock.assertIsSatisfied(). }
false;public;0;5;;public void configure() {     from("direct:in").to("velocity:org/apache/camel/component/velocity/BodyAsDomainObject.vm").to("mock:result"). }
false;protected;0;9;;protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          public void configure() {             from("direct:in").to("velocity:org/apache/camel/component/velocity/BodyAsDomainObject.vm").to("mock:result").         }     }. }
false;public;0;3;;public String getGivenName() {     return givenName. }
false;public;1;3;;public void setGivenName(String givenName) {     this.givenName = givenName. }
false;public;0;3;;public String getFamilyName() {     return familyName. }
false;public;1;3;;public void setFamilyName(String familyName) {     this.familyName = familyName. }
false;public;0;8;;public String toString() {     return "MyPerson{" + "givenName='" + givenName + '\'' + ", familyName='" + familyName + '\'' + '}'. }
