# id;timestamp;commentText;codeText;commentWords;codeWords
MQTTConfiguration -> public void setQualityOfService(String qualityOfService);1434369881;Quality of service level to use for topics.;public void setQualityOfService(String qualityOfService) {_        this.qos = getQoS(qualityOfService)__        this.qualityOfService = qualityOfService__    };quality,of,service,level,to,use,for,topics;public,void,set,quality,of,service,string,quality,of,service,this,qos,get,qo,s,quality,of,service,this,quality,of,service,quality,of,service
MQTTConfiguration -> public void setQualityOfService(String qualityOfService);1434370479;Quality of service level to use for topics.;public void setQualityOfService(String qualityOfService) {_        this.qos = getQoS(qualityOfService)__        this.qualityOfService = qualityOfService__    };quality,of,service,level,to,use,for,topics;public,void,set,quality,of,service,string,quality,of,service,this,qos,get,qo,s,quality,of,service,this,quality,of,service,quality,of,service
MQTTConfiguration -> public void setQualityOfService(String qualityOfService);1451410942;Quality of service level to use for topics.;public void setQualityOfService(String qualityOfService) {_        this.qos = getQoS(qualityOfService)__        this.qualityOfService = qualityOfService__    };quality,of,service,level,to,use,for,topics;public,void,set,quality,of,service,string,quality,of,service,this,qos,get,qo,s,quality,of,service,this,quality,of,service,quality,of,service
MQTTConfiguration -> public void setQualityOfService(String qualityOfService);1452076589;Quality of service level to use for topics.;public void setQualityOfService(String qualityOfService) {_        this.qos = getQoS(qualityOfService)__        this.qualityOfService = qualityOfService__    };quality,of,service,level,to,use,for,topics;public,void,set,quality,of,service,string,quality,of,service,this,qos,get,qo,s,quality,of,service,this,quality,of,service,quality,of,service
MQTTConfiguration -> public void setQualityOfService(String qualityOfService);1475890337;Quality of service level to use for topics.;public void setQualityOfService(String qualityOfService) {_        this.qos = getQoS(qualityOfService)__        this.qualityOfService = qualityOfService__    };quality,of,service,level,to,use,for,topics;public,void,set,quality,of,service,string,quality,of,service,this,qos,get,qo,s,quality,of,service,this,quality,of,service,quality,of,service
MQTTConfiguration -> public void setQualityOfService(String qualityOfService);1537290824;Quality of service level to use for topics.;public void setQualityOfService(String qualityOfService) {_        this.qos = getQoS(qualityOfService)__        this.qualityOfService = qualityOfService__    };quality,of,service,level,to,use,for,topics;public,void,set,quality,of,service,string,quality,of,service,this,qos,get,qo,s,quality,of,service,this,quality,of,service,quality,of,service
MQTTConfiguration -> public void setQualityOfService(String qualityOfService);1537300723;Quality of service level to use for topics.;public void setQualityOfService(String qualityOfService) {_        this.qos = getQoS(qualityOfService)__        this.qualityOfService = qualityOfService__    };quality,of,service,level,to,use,for,topics;public,void,set,quality,of,service,string,quality,of,service,this,qos,get,qo,s,quality,of,service,this,quality,of,service,quality,of,service
MQTTConfiguration -> @Deprecated     public void setSubscribeTopicName(String subscribeTopicName);1434369881;The name of the Topic to subscribe to for messages.;@Deprecated_    public void setSubscribeTopicName(String subscribeTopicName) {_        this.subscribeTopicName = subscribeTopicName__    };the,name,of,the,topic,to,subscribe,to,for,messages;deprecated,public,void,set,subscribe,topic,name,string,subscribe,topic,name,this,subscribe,topic,name,subscribe,topic,name
MQTTConfiguration -> @Deprecated     public void setSubscribeTopicName(String subscribeTopicName);1434370479;The name of the Topic to subscribe to for messages.;@Deprecated_    public void setSubscribeTopicName(String subscribeTopicName) {_        this.subscribeTopicName = subscribeTopicName__    };the,name,of,the,topic,to,subscribe,to,for,messages;deprecated,public,void,set,subscribe,topic,name,string,subscribe,topic,name,this,subscribe,topic,name,subscribe,topic,name
MQTTConfiguration -> @Deprecated     public void setSubscribeTopicName(String subscribeTopicName);1451410942;The name of the Topic to subscribe to for messages.;@Deprecated_    public void setSubscribeTopicName(String subscribeTopicName) {_        this.subscribeTopicName = subscribeTopicName__    };the,name,of,the,topic,to,subscribe,to,for,messages;deprecated,public,void,set,subscribe,topic,name,string,subscribe,topic,name,this,subscribe,topic,name,subscribe,topic,name
MQTTConfiguration -> @Deprecated     public void setSubscribeTopicName(String subscribeTopicName);1452076589;The name of the Topic to subscribe to for messages.;@Deprecated_    public void setSubscribeTopicName(String subscribeTopicName) {_        this.subscribeTopicName = subscribeTopicName__    };the,name,of,the,topic,to,subscribe,to,for,messages;deprecated,public,void,set,subscribe,topic,name,string,subscribe,topic,name,this,subscribe,topic,name,subscribe,topic,name
MQTTConfiguration -> @Deprecated     public void setSubscribeTopicName(String subscribeTopicName);1475890337;The name of the Topic to subscribe to for messages.;@Deprecated_    public void setSubscribeTopicName(String subscribeTopicName) {_        this.subscribeTopicName = subscribeTopicName__    };the,name,of,the,topic,to,subscribe,to,for,messages;deprecated,public,void,set,subscribe,topic,name,string,subscribe,topic,name,this,subscribe,topic,name,subscribe,topic,name
MQTTConfiguration -> @Deprecated     public void setSubscribeTopicName(String subscribeTopicName);1537290824;The name of the Topic to subscribe to for messages.;@Deprecated_    public void setSubscribeTopicName(String subscribeTopicName) {_        this.subscribeTopicName = subscribeTopicName__    };the,name,of,the,topic,to,subscribe,to,for,messages;deprecated,public,void,set,subscribe,topic,name,string,subscribe,topic,name,this,subscribe,topic,name,subscribe,topic,name
MQTTConfiguration -> @Deprecated     public void setSubscribeTopicName(String subscribeTopicName);1537300723;The name of the Topic to subscribe to for messages.;@Deprecated_    public void setSubscribeTopicName(String subscribeTopicName) {_        this.subscribeTopicName = subscribeTopicName__    };the,name,of,the,topic,to,subscribe,to,for,messages;deprecated,public,void,set,subscribe,topic,name,string,subscribe,topic,name,this,subscribe,topic,name,subscribe,topic,name
MQTTConfiguration -> @Override     public void setMaxReadRate(int maxReadRate);1434369881;Sets the maximum bytes per second that this transport will receive data at._This setting throttles reads so that the rate is not exceeded. Defaults to 0 which disables throttling.;@Override_    public void setMaxReadRate(int maxReadRate) {_        super.setMaxReadRate(maxReadRate)__    };sets,the,maximum,bytes,per,second,that,this,transport,will,receive,data,at,this,setting,throttles,reads,so,that,the,rate,is,not,exceeded,defaults,to,0,which,disables,throttling;override,public,void,set,max,read,rate,int,max,read,rate,super,set,max,read,rate,max,read,rate
MQTTConfiguration -> @Override     public void setMaxReadRate(int maxReadRate);1434370479;Sets the maximum bytes per second that this transport will receive data at._This setting throttles reads so that the rate is not exceeded. Defaults to 0 which disables throttling.;@Override_    public void setMaxReadRate(int maxReadRate) {_        super.setMaxReadRate(maxReadRate)__    };sets,the,maximum,bytes,per,second,that,this,transport,will,receive,data,at,this,setting,throttles,reads,so,that,the,rate,is,not,exceeded,defaults,to,0,which,disables,throttling;override,public,void,set,max,read,rate,int,max,read,rate,super,set,max,read,rate,max,read,rate
MQTTConfiguration -> @Override     public void setMaxReadRate(int maxReadRate);1451410942;Sets the maximum bytes per second that this transport will receive data at._This setting throttles reads so that the rate is not exceeded. Defaults to 0 which disables throttling.;@Override_    public void setMaxReadRate(int maxReadRate) {_        super.setMaxReadRate(maxReadRate)__    };sets,the,maximum,bytes,per,second,that,this,transport,will,receive,data,at,this,setting,throttles,reads,so,that,the,rate,is,not,exceeded,defaults,to,0,which,disables,throttling;override,public,void,set,max,read,rate,int,max,read,rate,super,set,max,read,rate,max,read,rate
MQTTConfiguration -> @Override     public void setMaxReadRate(int maxReadRate);1452076589;Sets the maximum bytes per second that this transport will receive data at._This setting throttles reads so that the rate is not exceeded. Defaults to 0 which disables throttling.;@Override_    public void setMaxReadRate(int maxReadRate) {_        super.setMaxReadRate(maxReadRate)__    };sets,the,maximum,bytes,per,second,that,this,transport,will,receive,data,at,this,setting,throttles,reads,so,that,the,rate,is,not,exceeded,defaults,to,0,which,disables,throttling;override,public,void,set,max,read,rate,int,max,read,rate,super,set,max,read,rate,max,read,rate
MQTTConfiguration -> @Override     public void setMaxReadRate(int maxReadRate);1475890337;Sets the maximum bytes per second that this transport will receive data at._This setting throttles reads so that the rate is not exceeded. Defaults to 0 which disables throttling.;@Override_    public void setMaxReadRate(int maxReadRate) {_        super.setMaxReadRate(maxReadRate)__    };sets,the,maximum,bytes,per,second,that,this,transport,will,receive,data,at,this,setting,throttles,reads,so,that,the,rate,is,not,exceeded,defaults,to,0,which,disables,throttling;override,public,void,set,max,read,rate,int,max,read,rate,super,set,max,read,rate,max,read,rate
MQTTConfiguration -> @Override     public void setMaxReadRate(int maxReadRate);1537290824;Sets the maximum bytes per second that this transport will receive data at._This setting throttles reads so that the rate is not exceeded. Defaults to 0 which disables throttling.;@Override_    public void setMaxReadRate(int maxReadRate) {_        super.setMaxReadRate(maxReadRate)__    };sets,the,maximum,bytes,per,second,that,this,transport,will,receive,data,at,this,setting,throttles,reads,so,that,the,rate,is,not,exceeded,defaults,to,0,which,disables,throttling;override,public,void,set,max,read,rate,int,max,read,rate,super,set,max,read,rate,max,read,rate
MQTTConfiguration -> @Override     public void setMaxReadRate(int maxReadRate);1537300723;Sets the maximum bytes per second that this transport will receive data at._This setting throttles reads so that the rate is not exceeded. Defaults to 0 which disables throttling.;@Override_    public void setMaxReadRate(int maxReadRate) {_        super.setMaxReadRate(maxReadRate)__    };sets,the,maximum,bytes,per,second,that,this,transport,will,receive,data,at,this,setting,throttles,reads,so,that,the,rate,is,not,exceeded,defaults,to,0,which,disables,throttling;override,public,void,set,max,read,rate,int,max,read,rate,super,set,max,read,rate,max,read,rate
MQTTConfiguration -> @Override     public void setDispatchQueue(DispatchQueue dispatchQueue);1434370479;A HawtDispatch dispatch queue is used to synchronize access to the connection._If an explicit queue is not configured via the setDispatchQueue method, then a new queue will be created for the connection._Setting an explicit queue might be handy if you want multiple connection to share the same queue for synchronization.;@Override_    public void setDispatchQueue(DispatchQueue dispatchQueue) {_        super.setDispatchQueue(dispatchQueue)__    };a,hawt,dispatch,dispatch,queue,is,used,to,synchronize,access,to,the,connection,if,an,explicit,queue,is,not,configured,via,the,set,dispatch,queue,method,then,a,new,queue,will,be,created,for,the,connection,setting,an,explicit,queue,might,be,handy,if,you,want,multiple,connection,to,share,the,same,queue,for,synchronization;override,public,void,set,dispatch,queue,dispatch,queue,dispatch,queue,super,set,dispatch,queue,dispatch,queue
MQTTConfiguration -> @Override     public void setDispatchQueue(DispatchQueue dispatchQueue);1451410942;A HawtDispatch dispatch queue is used to synchronize access to the connection._If an explicit queue is not configured via the setDispatchQueue method, then a new queue will be created for the connection._Setting an explicit queue might be handy if you want multiple connection to share the same queue for synchronization.;@Override_    public void setDispatchQueue(DispatchQueue dispatchQueue) {_        super.setDispatchQueue(dispatchQueue)__    };a,hawt,dispatch,dispatch,queue,is,used,to,synchronize,access,to,the,connection,if,an,explicit,queue,is,not,configured,via,the,set,dispatch,queue,method,then,a,new,queue,will,be,created,for,the,connection,setting,an,explicit,queue,might,be,handy,if,you,want,multiple,connection,to,share,the,same,queue,for,synchronization;override,public,void,set,dispatch,queue,dispatch,queue,dispatch,queue,super,set,dispatch,queue,dispatch,queue
MQTTConfiguration -> @Override     public void setDispatchQueue(DispatchQueue dispatchQueue);1452076589;A HawtDispatch dispatch queue is used to synchronize access to the connection._If an explicit queue is not configured via the setDispatchQueue method, then a new queue will be created for the connection._Setting an explicit queue might be handy if you want multiple connection to share the same queue for synchronization.;@Override_    public void setDispatchQueue(DispatchQueue dispatchQueue) {_        super.setDispatchQueue(dispatchQueue)__    };a,hawt,dispatch,dispatch,queue,is,used,to,synchronize,access,to,the,connection,if,an,explicit,queue,is,not,configured,via,the,set,dispatch,queue,method,then,a,new,queue,will,be,created,for,the,connection,setting,an,explicit,queue,might,be,handy,if,you,want,multiple,connection,to,share,the,same,queue,for,synchronization;override,public,void,set,dispatch,queue,dispatch,queue,dispatch,queue,super,set,dispatch,queue,dispatch,queue
MQTTConfiguration -> @Override     public void setDispatchQueue(DispatchQueue dispatchQueue);1475890337;A HawtDispatch dispatch queue is used to synchronize access to the connection._If an explicit queue is not configured via the setDispatchQueue method, then a new queue will be created for the connection._Setting an explicit queue might be handy if you want multiple connection to share the same queue for synchronization.;@Override_    public void setDispatchQueue(DispatchQueue dispatchQueue) {_        super.setDispatchQueue(dispatchQueue)__    };a,hawt,dispatch,dispatch,queue,is,used,to,synchronize,access,to,the,connection,if,an,explicit,queue,is,not,configured,via,the,set,dispatch,queue,method,then,a,new,queue,will,be,created,for,the,connection,setting,an,explicit,queue,might,be,handy,if,you,want,multiple,connection,to,share,the,same,queue,for,synchronization;override,public,void,set,dispatch,queue,dispatch,queue,dispatch,queue,super,set,dispatch,queue,dispatch,queue
MQTTConfiguration -> @Override     public void setDispatchQueue(DispatchQueue dispatchQueue);1537290824;A HawtDispatch dispatch queue is used to synchronize access to the connection._If an explicit queue is not configured via the setDispatchQueue method, then a new queue will be created for the connection._Setting an explicit queue might be handy if you want multiple connection to share the same queue for synchronization.;@Override_    public void setDispatchQueue(DispatchQueue dispatchQueue) {_        super.setDispatchQueue(dispatchQueue)__    };a,hawt,dispatch,dispatch,queue,is,used,to,synchronize,access,to,the,connection,if,an,explicit,queue,is,not,configured,via,the,set,dispatch,queue,method,then,a,new,queue,will,be,created,for,the,connection,setting,an,explicit,queue,might,be,handy,if,you,want,multiple,connection,to,share,the,same,queue,for,synchronization;override,public,void,set,dispatch,queue,dispatch,queue,dispatch,queue,super,set,dispatch,queue,dispatch,queue
MQTTConfiguration -> @Override     public void setDispatchQueue(DispatchQueue dispatchQueue);1537300723;A HawtDispatch dispatch queue is used to synchronize access to the connection._If an explicit queue is not configured via the setDispatchQueue method, then a new queue will be created for the connection._Setting an explicit queue might be handy if you want multiple connection to share the same queue for synchronization.;@Override_    public void setDispatchQueue(DispatchQueue dispatchQueue) {_        super.setDispatchQueue(dispatchQueue)__    };a,hawt,dispatch,dispatch,queue,is,used,to,synchronize,access,to,the,connection,if,an,explicit,queue,is,not,configured,via,the,set,dispatch,queue,method,then,a,new,queue,will,be,created,for,the,connection,setting,an,explicit,queue,might,be,handy,if,you,want,multiple,connection,to,share,the,same,queue,for,synchronization;override,public,void,set,dispatch,queue,dispatch,queue,dispatch,queue,super,set,dispatch,queue,dispatch,queue
MQTTConfiguration -> @Override     public void setHost(String host) throws URISyntaxException;1434369881;The URI of the MQTT broker to connect too - this component also supports SSL - e.g. ssl://127.0.0.1:8883;@Override_    public void setHost(String host) throws URISyntaxException {_        super.setHost(host)__    };the,uri,of,the,mqtt,broker,to,connect,too,this,component,also,supports,ssl,e,g,ssl,127,0,0,1,8883;override,public,void,set,host,string,host,throws,urisyntax,exception,super,set,host,host
MQTTConfiguration -> @Override     public void setHost(String host) throws URISyntaxException;1434370479;The URI of the MQTT broker to connect too - this component also supports SSL - e.g. ssl://127.0.0.1:8883;@Override_    public void setHost(String host) throws URISyntaxException {_        super.setHost(host)__    };the,uri,of,the,mqtt,broker,to,connect,too,this,component,also,supports,ssl,e,g,ssl,127,0,0,1,8883;override,public,void,set,host,string,host,throws,urisyntax,exception,super,set,host,host
MQTTConfiguration -> @Override     public void setHost(String host) throws URISyntaxException;1451410942;The URI of the MQTT broker to connect too - this component also supports SSL - e.g. ssl://127.0.0.1:8883;@Override_    public void setHost(String host) throws URISyntaxException {_        super.setHost(host)__    };the,uri,of,the,mqtt,broker,to,connect,too,this,component,also,supports,ssl,e,g,ssl,127,0,0,1,8883;override,public,void,set,host,string,host,throws,urisyntax,exception,super,set,host,host
MQTTConfiguration -> @Override     public void setHost(String host) throws URISyntaxException;1452076589;The URI of the MQTT broker to connect too - this component also supports SSL - e.g. ssl://127.0.0.1:8883;@Override_    public void setHost(String host) throws URISyntaxException {_        super.setHost(host)__    };the,uri,of,the,mqtt,broker,to,connect,too,this,component,also,supports,ssl,e,g,ssl,127,0,0,1,8883;override,public,void,set,host,string,host,throws,urisyntax,exception,super,set,host,host
MQTTConfiguration -> @Override     public void setHost(String host) throws URISyntaxException;1475890337;The URI of the MQTT broker to connect too - this component also supports SSL - e.g. ssl://127.0.0.1:8883;@Override_    public void setHost(String host) throws URISyntaxException {_        super.setHost(host)__    };the,uri,of,the,mqtt,broker,to,connect,too,this,component,also,supports,ssl,e,g,ssl,127,0,0,1,8883;override,public,void,set,host,string,host,throws,urisyntax,exception,super,set,host,host
MQTTConfiguration -> @Override     public void setHost(String host) throws URISyntaxException;1537290824;The URI of the MQTT broker to connect too - this component also supports SSL - e.g. ssl://127.0.0.1:8883;@Override_    public void setHost(String host) throws URISyntaxException {_        super.setHost(host)__    };the,uri,of,the,mqtt,broker,to,connect,too,this,component,also,supports,ssl,e,g,ssl,127,0,0,1,8883;override,public,void,set,host,string,host,throws,urisyntax,exception,super,set,host,host
MQTTConfiguration -> @Override     public void setHost(String host) throws URISyntaxException;1537300723;The URI of the MQTT broker to connect too - this component also supports SSL - e.g. ssl://127.0.0.1:8883;@Override_    public void setHost(String host) throws URISyntaxException {_        super.setHost(host)__    };the,uri,of,the,mqtt,broker,to,connect,too,this,component,also,supports,ssl,e,g,ssl,127,0,0,1,8883;override,public,void,set,host,string,host,throws,urisyntax,exception,super,set,host,host
MQTTConfiguration -> @Override     public void setWillMessage(String willMessage);1434369881;The Will message to send. Defaults to a zero length message.;@Override_    public void setWillMessage(String willMessage) {_        super.setWillMessage(willMessage)__    };the,will,message,to,send,defaults,to,a,zero,length,message;override,public,void,set,will,message,string,will,message,super,set,will,message,will,message
MQTTConfiguration -> @Override     public void setWillMessage(String willMessage);1434370479;The Will message to send. Defaults to a zero length message.;@Override_    public void setWillMessage(String willMessage) {_        super.setWillMessage(willMessage)__    };the,will,message,to,send,defaults,to,a,zero,length,message;override,public,void,set,will,message,string,will,message,super,set,will,message,will,message
MQTTConfiguration -> @Override     public void setWillMessage(String willMessage);1451410942;The Will message to send. Defaults to a zero length message.;@Override_    public void setWillMessage(String willMessage) {_        super.setWillMessage(willMessage)__    };the,will,message,to,send,defaults,to,a,zero,length,message;override,public,void,set,will,message,string,will,message,super,set,will,message,will,message
MQTTConfiguration -> @Override     public void setWillMessage(String willMessage);1452076589;The Will message to send. Defaults to a zero length message.;@Override_    public void setWillMessage(String willMessage) {_        super.setWillMessage(willMessage)__    };the,will,message,to,send,defaults,to,a,zero,length,message;override,public,void,set,will,message,string,will,message,super,set,will,message,will,message
MQTTConfiguration -> @Override     public void setWillMessage(String willMessage);1475890337;The Will message to send. Defaults to a zero length message.;@Override_    public void setWillMessage(String willMessage) {_        super.setWillMessage(willMessage)__    };the,will,message,to,send,defaults,to,a,zero,length,message;override,public,void,set,will,message,string,will,message,super,set,will,message,will,message
MQTTConfiguration -> @Override     public void setWillMessage(String willMessage);1537290824;The Will message to send. Defaults to a zero length message.;@Override_    public void setWillMessage(String willMessage) {_        super.setWillMessage(willMessage)__    };the,will,message,to,send,defaults,to,a,zero,length,message;override,public,void,set,will,message,string,will,message,super,set,will,message,will,message
MQTTConfiguration -> @Override     public void setWillMessage(String willMessage);1537300723;The Will message to send. Defaults to a zero length message.;@Override_    public void setWillMessage(String willMessage) {_        super.setWillMessage(willMessage)__    };the,will,message,to,send,defaults,to,a,zero,length,message;override,public,void,set,will,message,string,will,message,super,set,will,message,will,message
MQTTConfiguration -> @Override     public void setWillRetain(boolean willRetain);1434369881;Set to true if you want the Will to be published with the retain option.;@Override_    public void setWillRetain(boolean willRetain) {_        super.setWillRetain(willRetain)__    };set,to,true,if,you,want,the,will,to,be,published,with,the,retain,option;override,public,void,set,will,retain,boolean,will,retain,super,set,will,retain,will,retain
MQTTConfiguration -> @Override     public void setWillRetain(boolean willRetain);1434370479;Set to true if you want the Will to be published with the retain option.;@Override_    public void setWillRetain(boolean willRetain) {_        super.setWillRetain(willRetain)__    };set,to,true,if,you,want,the,will,to,be,published,with,the,retain,option;override,public,void,set,will,retain,boolean,will,retain,super,set,will,retain,will,retain
MQTTConfiguration -> @Override     public void setWillRetain(boolean willRetain);1451410942;Set to true if you want the Will to be published with the retain option.;@Override_    public void setWillRetain(boolean willRetain) {_        super.setWillRetain(willRetain)__    };set,to,true,if,you,want,the,will,to,be,published,with,the,retain,option;override,public,void,set,will,retain,boolean,will,retain,super,set,will,retain,will,retain
MQTTConfiguration -> @Override     public void setWillRetain(boolean willRetain);1452076589;Set to true if you want the Will to be published with the retain option.;@Override_    public void setWillRetain(boolean willRetain) {_        super.setWillRetain(willRetain)__    };set,to,true,if,you,want,the,will,to,be,published,with,the,retain,option;override,public,void,set,will,retain,boolean,will,retain,super,set,will,retain,will,retain
MQTTConfiguration -> @Override     public void setWillRetain(boolean willRetain);1475890337;Set to true if you want the Will to be published with the retain option.;@Override_    public void setWillRetain(boolean willRetain) {_        super.setWillRetain(willRetain)__    };set,to,true,if,you,want,the,will,to,be,published,with,the,retain,option;override,public,void,set,will,retain,boolean,will,retain,super,set,will,retain,will,retain
MQTTConfiguration -> @Override     public void setWillRetain(boolean willRetain);1537290824;Set to true if you want the Will to be published with the retain option.;@Override_    public void setWillRetain(boolean willRetain) {_        super.setWillRetain(willRetain)__    };set,to,true,if,you,want,the,will,to,be,published,with,the,retain,option;override,public,void,set,will,retain,boolean,will,retain,super,set,will,retain,will,retain
MQTTConfiguration -> @Override     public void setWillRetain(boolean willRetain);1537300723;Set to true if you want the Will to be published with the retain option.;@Override_    public void setWillRetain(boolean willRetain) {_        super.setWillRetain(willRetain)__    };set,to,true,if,you,want,the,will,to,be,published,with,the,retain,option;override,public,void,set,will,retain,boolean,will,retain,super,set,will,retain,will,retain
MQTTConfiguration -> @Override     public void setTrafficClass(int trafficClass);1434369881;Sets traffic class or type-of-service octet in the IP header for packets sent from the transport._Defaults to 8 which means the traffic should be optimized for throughput.;@Override_    public void setTrafficClass(int trafficClass) {_        super.setTrafficClass(trafficClass)__    };sets,traffic,class,or,type,of,service,octet,in,the,ip,header,for,packets,sent,from,the,transport,defaults,to,8,which,means,the,traffic,should,be,optimized,for,throughput;override,public,void,set,traffic,class,int,traffic,class,super,set,traffic,class,traffic,class
MQTTConfiguration -> @Override     public void setTrafficClass(int trafficClass);1434370479;Sets traffic class or type-of-service octet in the IP header for packets sent from the transport._Defaults to 8 which means the traffic should be optimized for throughput.;@Override_    public void setTrafficClass(int trafficClass) {_        super.setTrafficClass(trafficClass)__    };sets,traffic,class,or,type,of,service,octet,in,the,ip,header,for,packets,sent,from,the,transport,defaults,to,8,which,means,the,traffic,should,be,optimized,for,throughput;override,public,void,set,traffic,class,int,traffic,class,super,set,traffic,class,traffic,class
MQTTConfiguration -> @Override     public void setTrafficClass(int trafficClass);1451410942;Sets traffic class or type-of-service octet in the IP header for packets sent from the transport._Defaults to 8 which means the traffic should be optimized for throughput.;@Override_    public void setTrafficClass(int trafficClass) {_        super.setTrafficClass(trafficClass)__    };sets,traffic,class,or,type,of,service,octet,in,the,ip,header,for,packets,sent,from,the,transport,defaults,to,8,which,means,the,traffic,should,be,optimized,for,throughput;override,public,void,set,traffic,class,int,traffic,class,super,set,traffic,class,traffic,class
MQTTConfiguration -> @Override     public void setTrafficClass(int trafficClass);1452076589;Sets traffic class or type-of-service octet in the IP header for packets sent from the transport._Defaults to 8 which means the traffic should be optimized for throughput.;@Override_    public void setTrafficClass(int trafficClass) {_        super.setTrafficClass(trafficClass)__    };sets,traffic,class,or,type,of,service,octet,in,the,ip,header,for,packets,sent,from,the,transport,defaults,to,8,which,means,the,traffic,should,be,optimized,for,throughput;override,public,void,set,traffic,class,int,traffic,class,super,set,traffic,class,traffic,class
MQTTConfiguration -> @Override     public void setTrafficClass(int trafficClass);1475890337;Sets traffic class or type-of-service octet in the IP header for packets sent from the transport._Defaults to 8 which means the traffic should be optimized for throughput.;@Override_    public void setTrafficClass(int trafficClass) {_        super.setTrafficClass(trafficClass)__    };sets,traffic,class,or,type,of,service,octet,in,the,ip,header,for,packets,sent,from,the,transport,defaults,to,8,which,means,the,traffic,should,be,optimized,for,throughput;override,public,void,set,traffic,class,int,traffic,class,super,set,traffic,class,traffic,class
MQTTConfiguration -> @Override     public void setTrafficClass(int trafficClass);1537290824;Sets traffic class or type-of-service octet in the IP header for packets sent from the transport._Defaults to 8 which means the traffic should be optimized for throughput.;@Override_    public void setTrafficClass(int trafficClass) {_        super.setTrafficClass(trafficClass)__    };sets,traffic,class,or,type,of,service,octet,in,the,ip,header,for,packets,sent,from,the,transport,defaults,to,8,which,means,the,traffic,should,be,optimized,for,throughput;override,public,void,set,traffic,class,int,traffic,class,super,set,traffic,class,traffic,class
MQTTConfiguration -> @Override     public void setTrafficClass(int trafficClass);1537300723;Sets traffic class or type-of-service octet in the IP header for packets sent from the transport._Defaults to 8 which means the traffic should be optimized for throughput.;@Override_    public void setTrafficClass(int trafficClass) {_        super.setTrafficClass(trafficClass)__    };sets,traffic,class,or,type,of,service,octet,in,the,ip,header,for,packets,sent,from,the,transport,defaults,to,8,which,means,the,traffic,should,be,optimized,for,throughput;override,public,void,set,traffic,class,int,traffic,class,super,set,traffic,class,traffic,class
MQTTConfiguration -> @Override     public void setReconnectDelayMax(long reconnectDelayMax);1434369881;The maximum amount of time in ms to wait between reconnect attempts. Defaults to 30,000.;@Override_    public void setReconnectDelayMax(long reconnectDelayMax) {_        super.setReconnectDelayMax(reconnectDelayMax)__    };the,maximum,amount,of,time,in,ms,to,wait,between,reconnect,attempts,defaults,to,30,000;override,public,void,set,reconnect,delay,max,long,reconnect,delay,max,super,set,reconnect,delay,max,reconnect,delay,max
MQTTConfiguration -> @Override     public void setReconnectDelayMax(long reconnectDelayMax);1434370479;The maximum amount of time in ms to wait between reconnect attempts. Defaults to 30,000.;@Override_    public void setReconnectDelayMax(long reconnectDelayMax) {_        super.setReconnectDelayMax(reconnectDelayMax)__    };the,maximum,amount,of,time,in,ms,to,wait,between,reconnect,attempts,defaults,to,30,000;override,public,void,set,reconnect,delay,max,long,reconnect,delay,max,super,set,reconnect,delay,max,reconnect,delay,max
MQTTConfiguration -> @Override     public void setReconnectDelayMax(long reconnectDelayMax);1451410942;The maximum amount of time in ms to wait between reconnect attempts. Defaults to 30,000.;@Override_    public void setReconnectDelayMax(long reconnectDelayMax) {_        super.setReconnectDelayMax(reconnectDelayMax)__    };the,maximum,amount,of,time,in,ms,to,wait,between,reconnect,attempts,defaults,to,30,000;override,public,void,set,reconnect,delay,max,long,reconnect,delay,max,super,set,reconnect,delay,max,reconnect,delay,max
MQTTConfiguration -> @Override     public void setReconnectDelayMax(long reconnectDelayMax);1452076589;The maximum amount of time in ms to wait between reconnect attempts. Defaults to 30,000.;@Override_    public void setReconnectDelayMax(long reconnectDelayMax) {_        super.setReconnectDelayMax(reconnectDelayMax)__    };the,maximum,amount,of,time,in,ms,to,wait,between,reconnect,attempts,defaults,to,30,000;override,public,void,set,reconnect,delay,max,long,reconnect,delay,max,super,set,reconnect,delay,max,reconnect,delay,max
MQTTConfiguration -> @Override     public void setReconnectDelayMax(long reconnectDelayMax);1475890337;The maximum amount of time in ms to wait between reconnect attempts. Defaults to 30,000.;@Override_    public void setReconnectDelayMax(long reconnectDelayMax) {_        super.setReconnectDelayMax(reconnectDelayMax)__    };the,maximum,amount,of,time,in,ms,to,wait,between,reconnect,attempts,defaults,to,30,000;override,public,void,set,reconnect,delay,max,long,reconnect,delay,max,super,set,reconnect,delay,max,reconnect,delay,max
MQTTConfiguration -> @Override     public void setReconnectDelayMax(long reconnectDelayMax);1537290824;The maximum amount of time in ms to wait between reconnect attempts. Defaults to 30,000.;@Override_    public void setReconnectDelayMax(long reconnectDelayMax) {_        super.setReconnectDelayMax(reconnectDelayMax)__    };the,maximum,amount,of,time,in,ms,to,wait,between,reconnect,attempts,defaults,to,30,000;override,public,void,set,reconnect,delay,max,long,reconnect,delay,max,super,set,reconnect,delay,max,reconnect,delay,max
MQTTConfiguration -> @Override     public void setReconnectDelayMax(long reconnectDelayMax);1537300723;The maximum amount of time in ms to wait between reconnect attempts. Defaults to 30,000.;@Override_    public void setReconnectDelayMax(long reconnectDelayMax) {_        super.setReconnectDelayMax(reconnectDelayMax)__    };the,maximum,amount,of,time,in,ms,to,wait,between,reconnect,attempts,defaults,to,30,000;override,public,void,set,reconnect,delay,max,long,reconnect,delay,max,super,set,reconnect,delay,max,reconnect,delay,max
MQTTConfiguration -> @Deprecated     public String getMqttTopicPropertyName();1415211488;Please use MQTT_SUBSCRIBE_TOPIC and MQTT_PUBLISH_TOPIC to set or get the topic name;@Deprecated_    public String getMqttTopicPropertyName() {_        return mqttTopicPropertyName__    };please,use,and,to,set,or,get,the,topic,name;deprecated,public,string,get,mqtt,topic,property,name,return,mqtt,topic,property,name
MQTTConfiguration -> @Deprecated     public String getMqttTopicPropertyName();1420380756;Please use MQTT_SUBSCRIBE_TOPIC and MQTT_PUBLISH_TOPIC to set or get the topic name;@Deprecated_    public String getMqttTopicPropertyName() {_        return mqttTopicPropertyName__    };please,use,and,to,set,or,get,the,topic,name;deprecated,public,string,get,mqtt,topic,property,name,return,mqtt,topic,property,name
MQTTConfiguration -> @Deprecated     public String getMqttTopicPropertyName();1420536463;Please use MQTT_SUBSCRIBE_TOPIC and MQTT_PUBLISH_TOPIC to set or get the topic name;@Deprecated_    public String getMqttTopicPropertyName() {_        return mqttTopicPropertyName__    };please,use,and,to,set,or,get,the,topic,name;deprecated,public,string,get,mqtt,topic,property,name,return,mqtt,topic,property,name
MQTTConfiguration -> @Deprecated     public String getMqttTopicPropertyName();1423996335;Please use MQTT_SUBSCRIBE_TOPIC and MQTT_PUBLISH_TOPIC to set or get the topic name;@Deprecated_    public String getMqttTopicPropertyName() {_        return mqttTopicPropertyName__    };please,use,and,to,set,or,get,the,topic,name;deprecated,public,string,get,mqtt,topic,property,name,return,mqtt,topic,property,name
MQTTConfiguration -> @Deprecated     public String getMqttTopicPropertyName();1424950293;Please use MQTT_SUBSCRIBE_TOPIC and MQTT_PUBLISH_TOPIC to set or get the topic name;@Deprecated_    public String getMqttTopicPropertyName() {_        return mqttTopicPropertyName__    };please,use,and,to,set,or,get,the,topic,name;deprecated,public,string,get,mqtt,topic,property,name,return,mqtt,topic,property,name
MQTTConfiguration -> @Deprecated     public String getMqttTopicPropertyName();1427880501;Please use MQTT_SUBSCRIBE_TOPIC and MQTT_PUBLISH_TOPIC to set or get the topic name;@Deprecated_    public String getMqttTopicPropertyName() {_        return mqttTopicPropertyName__    };please,use,and,to,set,or,get,the,topic,name;deprecated,public,string,get,mqtt,topic,property,name,return,mqtt,topic,property,name
MQTTConfiguration -> @Deprecated     public String getMqttTopicPropertyName();1434369881;Please use MQTT_SUBSCRIBE_TOPIC and MQTT_PUBLISH_TOPIC to set or get the topic name;@Deprecated_    public String getMqttTopicPropertyName() {_        return mqttTopicPropertyName__    };please,use,and,to,set,or,get,the,topic,name;deprecated,public,string,get,mqtt,topic,property,name,return,mqtt,topic,property,name
MQTTConfiguration -> @Deprecated     public String getMqttTopicPropertyName();1434370479;Please use MQTT_SUBSCRIBE_TOPIC and MQTT_PUBLISH_TOPIC to set or get the topic name;@Deprecated_    public String getMqttTopicPropertyName() {_        return mqttTopicPropertyName__    };please,use,and,to,set,or,get,the,topic,name;deprecated,public,string,get,mqtt,topic,property,name,return,mqtt,topic,property,name
MQTTConfiguration -> @Deprecated     public String getMqttTopicPropertyName();1451410942;Please use MQTT_SUBSCRIBE_TOPIC and MQTT_PUBLISH_TOPIC to set or get the topic name;@Deprecated_    public String getMqttTopicPropertyName() {_        return mqttTopicPropertyName__    };please,use,and,to,set,or,get,the,topic,name;deprecated,public,string,get,mqtt,topic,property,name,return,mqtt,topic,property,name
MQTTConfiguration -> @Deprecated     public String getMqttTopicPropertyName();1452076589;Please use MQTT_SUBSCRIBE_TOPIC and MQTT_PUBLISH_TOPIC to set or get the topic name;@Deprecated_    public String getMqttTopicPropertyName() {_        return mqttTopicPropertyName__    };please,use,and,to,set,or,get,the,topic,name;deprecated,public,string,get,mqtt,topic,property,name,return,mqtt,topic,property,name
MQTTConfiguration -> @Deprecated     public String getMqttTopicPropertyName();1475890337;Please use MQTT_SUBSCRIBE_TOPIC and MQTT_PUBLISH_TOPIC to set or get the topic name;@Deprecated_    public String getMqttTopicPropertyName() {_        return mqttTopicPropertyName__    };please,use,and,to,set,or,get,the,topic,name;deprecated,public,string,get,mqtt,topic,property,name,return,mqtt,topic,property,name
MQTTConfiguration -> @Deprecated     public String getMqttTopicPropertyName();1537290824;Please use MQTT_SUBSCRIBE_TOPIC and MQTT_PUBLISH_TOPIC to set or get the topic name;@Deprecated_    public String getMqttTopicPropertyName() {_        return mqttTopicPropertyName__    };please,use,and,to,set,or,get,the,topic,name;deprecated,public,string,get,mqtt,topic,property,name,return,mqtt,topic,property,name
MQTTConfiguration -> @Deprecated     public String getMqttTopicPropertyName();1537300723;Please use MQTT_SUBSCRIBE_TOPIC and MQTT_PUBLISH_TOPIC to set or get the topic name;@Deprecated_    public String getMqttTopicPropertyName() {_        return mqttTopicPropertyName__    };please,use,and,to,set,or,get,the,topic,name;deprecated,public,string,get,mqtt,topic,property,name,return,mqtt,topic,property,name
MQTTConfiguration -> @Override     public void setPassword(String password);1434369881;Password to be used for authentication against the MQTT broker;@Override_    public void setPassword(String password) {_        super.setPassword(password)__    };password,to,be,used,for,authentication,against,the,mqtt,broker;override,public,void,set,password,string,password,super,set,password,password
MQTTConfiguration -> @Override     public void setPassword(String password);1434370479;Password to be used for authentication against the MQTT broker;@Override_    public void setPassword(String password) {_        super.setPassword(password)__    };password,to,be,used,for,authentication,against,the,mqtt,broker;override,public,void,set,password,string,password,super,set,password,password
MQTTConfiguration -> @Override     public void setPassword(String password);1451410942;Password to be used for authentication against the MQTT broker;@Override_    public void setPassword(String password) {_        super.setPassword(password)__    };password,to,be,used,for,authentication,against,the,mqtt,broker;override,public,void,set,password,string,password,super,set,password,password
MQTTConfiguration -> @Override     public void setPassword(String password);1452076589;Password to be used for authentication against the MQTT broker;@Override_    public void setPassword(String password) {_        super.setPassword(password)__    };password,to,be,used,for,authentication,against,the,mqtt,broker;override,public,void,set,password,string,password,super,set,password,password
MQTTConfiguration -> @Override     public void setPassword(String password);1475890337;Password to be used for authentication against the MQTT broker;@Override_    public void setPassword(String password) {_        super.setPassword(password)__    };password,to,be,used,for,authentication,against,the,mqtt,broker;override,public,void,set,password,string,password,super,set,password,password
MQTTConfiguration -> @Override     public void setPassword(String password);1537290824;Password to be used for authentication against the MQTT broker;@Override_    public void setPassword(String password) {_        super.setPassword(password)__    };password,to,be,used,for,authentication,against,the,mqtt,broker;override,public,void,set,password,string,password,super,set,password,password
MQTTConfiguration -> @Override     public void setPassword(String password);1537300723;Password to be used for authentication against the MQTT broker;@Override_    public void setPassword(String password) {_        super.setPassword(password)__    };password,to,be,used,for,authentication,against,the,mqtt,broker;override,public,void,set,password,string,password,super,set,password,password
MQTTConfiguration -> public void setSendWaitInSeconds(int sendWaitInSeconds);1434369881;The maximum time the Component will wait for a receipt from the MQTT broker to acknowledge a published message before throwing an exception;public void setSendWaitInSeconds(int sendWaitInSeconds) {_        this.sendWaitInSeconds = sendWaitInSeconds__    };the,maximum,time,the,component,will,wait,for,a,receipt,from,the,mqtt,broker,to,acknowledge,a,published,message,before,throwing,an,exception;public,void,set,send,wait,in,seconds,int,send,wait,in,seconds,this,send,wait,in,seconds,send,wait,in,seconds
MQTTConfiguration -> public void setSendWaitInSeconds(int sendWaitInSeconds);1434370479;The maximum time the Component will wait for a receipt from the MQTT broker to acknowledge a published message before throwing an exception;public void setSendWaitInSeconds(int sendWaitInSeconds) {_        this.sendWaitInSeconds = sendWaitInSeconds__    };the,maximum,time,the,component,will,wait,for,a,receipt,from,the,mqtt,broker,to,acknowledge,a,published,message,before,throwing,an,exception;public,void,set,send,wait,in,seconds,int,send,wait,in,seconds,this,send,wait,in,seconds,send,wait,in,seconds
MQTTConfiguration -> public void setSendWaitInSeconds(int sendWaitInSeconds);1451410942;The maximum time the Component will wait for a receipt from the MQTT broker to acknowledge a published message before throwing an exception;public void setSendWaitInSeconds(int sendWaitInSeconds) {_        this.sendWaitInSeconds = sendWaitInSeconds__    };the,maximum,time,the,component,will,wait,for,a,receipt,from,the,mqtt,broker,to,acknowledge,a,published,message,before,throwing,an,exception;public,void,set,send,wait,in,seconds,int,send,wait,in,seconds,this,send,wait,in,seconds,send,wait,in,seconds
MQTTConfiguration -> public void setSendWaitInSeconds(int sendWaitInSeconds);1452076589;The maximum time the Component will wait for a receipt from the MQTT broker to acknowledge a published message before throwing an exception;public void setSendWaitInSeconds(int sendWaitInSeconds) {_        this.sendWaitInSeconds = sendWaitInSeconds__    };the,maximum,time,the,component,will,wait,for,a,receipt,from,the,mqtt,broker,to,acknowledge,a,published,message,before,throwing,an,exception;public,void,set,send,wait,in,seconds,int,send,wait,in,seconds,this,send,wait,in,seconds,send,wait,in,seconds
MQTTConfiguration -> public void setSendWaitInSeconds(int sendWaitInSeconds);1475890337;The maximum time the Component will wait for a receipt from the MQTT broker to acknowledge a published message before throwing an exception;public void setSendWaitInSeconds(int sendWaitInSeconds) {_        this.sendWaitInSeconds = sendWaitInSeconds__    };the,maximum,time,the,component,will,wait,for,a,receipt,from,the,mqtt,broker,to,acknowledge,a,published,message,before,throwing,an,exception;public,void,set,send,wait,in,seconds,int,send,wait,in,seconds,this,send,wait,in,seconds,send,wait,in,seconds
MQTTConfiguration -> public void setSendWaitInSeconds(int sendWaitInSeconds);1537290824;The maximum time the Component will wait for a receipt from the MQTT broker to acknowledge a published message before throwing an exception;public void setSendWaitInSeconds(int sendWaitInSeconds) {_        this.sendWaitInSeconds = sendWaitInSeconds__    };the,maximum,time,the,component,will,wait,for,a,receipt,from,the,mqtt,broker,to,acknowledge,a,published,message,before,throwing,an,exception;public,void,set,send,wait,in,seconds,int,send,wait,in,seconds,this,send,wait,in,seconds,send,wait,in,seconds
MQTTConfiguration -> public void setSendWaitInSeconds(int sendWaitInSeconds);1537300723;The maximum time the Component will wait for a receipt from the MQTT broker to acknowledge a published message before throwing an exception;public void setSendWaitInSeconds(int sendWaitInSeconds) {_        this.sendWaitInSeconds = sendWaitInSeconds__    };the,maximum,time,the,component,will,wait,for,a,receipt,from,the,mqtt,broker,to,acknowledge,a,published,message,before,throwing,an,exception;public,void,set,send,wait,in,seconds,int,send,wait,in,seconds,this,send,wait,in,seconds,send,wait,in,seconds
MQTTConfiguration -> @Override     public void setCleanSession(boolean cleanSession);1434369881;Set to false if you want the MQTT server to persist topic subscriptions and ack positions across client sessions. Defaults to true.;@Override_    public void setCleanSession(boolean cleanSession) {_        super.setCleanSession(cleanSession)__    };set,to,false,if,you,want,the,mqtt,server,to,persist,topic,subscriptions,and,ack,positions,across,client,sessions,defaults,to,true;override,public,void,set,clean,session,boolean,clean,session,super,set,clean,session,clean,session
MQTTConfiguration -> @Override     public void setCleanSession(boolean cleanSession);1434370479;Set to false if you want the MQTT server to persist topic subscriptions and ack positions across client sessions. Defaults to true.;@Override_    public void setCleanSession(boolean cleanSession) {_        super.setCleanSession(cleanSession)__    };set,to,false,if,you,want,the,mqtt,server,to,persist,topic,subscriptions,and,ack,positions,across,client,sessions,defaults,to,true;override,public,void,set,clean,session,boolean,clean,session,super,set,clean,session,clean,session
MQTTConfiguration -> @Override     public void setCleanSession(boolean cleanSession);1451410942;Set to false if you want the MQTT server to persist topic subscriptions and ack positions across client sessions. Defaults to true.;@Override_    public void setCleanSession(boolean cleanSession) {_        super.setCleanSession(cleanSession)__    };set,to,false,if,you,want,the,mqtt,server,to,persist,topic,subscriptions,and,ack,positions,across,client,sessions,defaults,to,true;override,public,void,set,clean,session,boolean,clean,session,super,set,clean,session,clean,session
MQTTConfiguration -> @Override     public void setCleanSession(boolean cleanSession);1452076589;Set to false if you want the MQTT server to persist topic subscriptions and ack positions across client sessions. Defaults to true.;@Override_    public void setCleanSession(boolean cleanSession) {_        super.setCleanSession(cleanSession)__    };set,to,false,if,you,want,the,mqtt,server,to,persist,topic,subscriptions,and,ack,positions,across,client,sessions,defaults,to,true;override,public,void,set,clean,session,boolean,clean,session,super,set,clean,session,clean,session
MQTTConfiguration -> @Override     public void setCleanSession(boolean cleanSession);1475890337;Set to false if you want the MQTT server to persist topic subscriptions and ack positions across client sessions. Defaults to true.;@Override_    public void setCleanSession(boolean cleanSession) {_        super.setCleanSession(cleanSession)__    };set,to,false,if,you,want,the,mqtt,server,to,persist,topic,subscriptions,and,ack,positions,across,client,sessions,defaults,to,true;override,public,void,set,clean,session,boolean,clean,session,super,set,clean,session,clean,session
MQTTConfiguration -> @Override     public void setCleanSession(boolean cleanSession);1537290824;Set to false if you want the MQTT server to persist topic subscriptions and ack positions across client sessions. Defaults to true.;@Override_    public void setCleanSession(boolean cleanSession) {_        super.setCleanSession(cleanSession)__    };set,to,false,if,you,want,the,mqtt,server,to,persist,topic,subscriptions,and,ack,positions,across,client,sessions,defaults,to,true;override,public,void,set,clean,session,boolean,clean,session,super,set,clean,session,clean,session
MQTTConfiguration -> @Override     public void setCleanSession(boolean cleanSession);1537300723;Set to false if you want the MQTT server to persist topic subscriptions and ack positions across client sessions. Defaults to true.;@Override_    public void setCleanSession(boolean cleanSession) {_        super.setCleanSession(cleanSession)__    };set,to,false,if,you,want,the,mqtt,server,to,persist,topic,subscriptions,and,ack,positions,across,client,sessions,defaults,to,true;override,public,void,set,clean,session,boolean,clean,session,super,set,clean,session,clean,session
MQTTConfiguration -> @Override     public void setMaxWriteRate(int maxWriteRate);1434369881;Sets the maximum bytes per second that this transport will send data at._This setting throttles writes so that the rate is not exceeded. Defaults to 0 which disables throttling.;@Override_    public void setMaxWriteRate(int maxWriteRate) {_        super.setMaxWriteRate(maxWriteRate)__    };sets,the,maximum,bytes,per,second,that,this,transport,will,send,data,at,this,setting,throttles,writes,so,that,the,rate,is,not,exceeded,defaults,to,0,which,disables,throttling;override,public,void,set,max,write,rate,int,max,write,rate,super,set,max,write,rate,max,write,rate
MQTTConfiguration -> @Override     public void setMaxWriteRate(int maxWriteRate);1434370479;Sets the maximum bytes per second that this transport will send data at._This setting throttles writes so that the rate is not exceeded. Defaults to 0 which disables throttling.;@Override_    public void setMaxWriteRate(int maxWriteRate) {_        super.setMaxWriteRate(maxWriteRate)__    };sets,the,maximum,bytes,per,second,that,this,transport,will,send,data,at,this,setting,throttles,writes,so,that,the,rate,is,not,exceeded,defaults,to,0,which,disables,throttling;override,public,void,set,max,write,rate,int,max,write,rate,super,set,max,write,rate,max,write,rate
MQTTConfiguration -> @Override     public void setMaxWriteRate(int maxWriteRate);1451410942;Sets the maximum bytes per second that this transport will send data at._This setting throttles writes so that the rate is not exceeded. Defaults to 0 which disables throttling.;@Override_    public void setMaxWriteRate(int maxWriteRate) {_        super.setMaxWriteRate(maxWriteRate)__    };sets,the,maximum,bytes,per,second,that,this,transport,will,send,data,at,this,setting,throttles,writes,so,that,the,rate,is,not,exceeded,defaults,to,0,which,disables,throttling;override,public,void,set,max,write,rate,int,max,write,rate,super,set,max,write,rate,max,write,rate
MQTTConfiguration -> @Override     public void setMaxWriteRate(int maxWriteRate);1452076589;Sets the maximum bytes per second that this transport will send data at._This setting throttles writes so that the rate is not exceeded. Defaults to 0 which disables throttling.;@Override_    public void setMaxWriteRate(int maxWriteRate) {_        super.setMaxWriteRate(maxWriteRate)__    };sets,the,maximum,bytes,per,second,that,this,transport,will,send,data,at,this,setting,throttles,writes,so,that,the,rate,is,not,exceeded,defaults,to,0,which,disables,throttling;override,public,void,set,max,write,rate,int,max,write,rate,super,set,max,write,rate,max,write,rate
MQTTConfiguration -> @Override     public void setMaxWriteRate(int maxWriteRate);1475890337;Sets the maximum bytes per second that this transport will send data at._This setting throttles writes so that the rate is not exceeded. Defaults to 0 which disables throttling.;@Override_    public void setMaxWriteRate(int maxWriteRate) {_        super.setMaxWriteRate(maxWriteRate)__    };sets,the,maximum,bytes,per,second,that,this,transport,will,send,data,at,this,setting,throttles,writes,so,that,the,rate,is,not,exceeded,defaults,to,0,which,disables,throttling;override,public,void,set,max,write,rate,int,max,write,rate,super,set,max,write,rate,max,write,rate
MQTTConfiguration -> @Override     public void setMaxWriteRate(int maxWriteRate);1537290824;Sets the maximum bytes per second that this transport will send data at._This setting throttles writes so that the rate is not exceeded. Defaults to 0 which disables throttling.;@Override_    public void setMaxWriteRate(int maxWriteRate) {_        super.setMaxWriteRate(maxWriteRate)__    };sets,the,maximum,bytes,per,second,that,this,transport,will,send,data,at,this,setting,throttles,writes,so,that,the,rate,is,not,exceeded,defaults,to,0,which,disables,throttling;override,public,void,set,max,write,rate,int,max,write,rate,super,set,max,write,rate,max,write,rate
MQTTConfiguration -> @Override     public void setMaxWriteRate(int maxWriteRate);1537300723;Sets the maximum bytes per second that this transport will send data at._This setting throttles writes so that the rate is not exceeded. Defaults to 0 which disables throttling.;@Override_    public void setMaxWriteRate(int maxWriteRate) {_        super.setMaxWriteRate(maxWriteRate)__    };sets,the,maximum,bytes,per,second,that,this,transport,will,send,data,at,this,setting,throttles,writes,so,that,the,rate,is,not,exceeded,defaults,to,0,which,disables,throttling;override,public,void,set,max,write,rate,int,max,write,rate,super,set,max,write,rate,max,write,rate
MQTTConfiguration -> @Override     public void setWillTopic(String willTopic);1434369881;If set the server will publish the client's Will message to the specified topics if the client has an unexpected disconnection.;@Override_    public void setWillTopic(String willTopic) {_        super.setWillTopic(willTopic)__    };if,set,the,server,will,publish,the,client,s,will,message,to,the,specified,topics,if,the,client,has,an,unexpected,disconnection;override,public,void,set,will,topic,string,will,topic,super,set,will,topic,will,topic
MQTTConfiguration -> @Override     public void setWillTopic(String willTopic);1434370479;If set the server will publish the client's Will message to the specified topics if the client has an unexpected disconnection.;@Override_    public void setWillTopic(String willTopic) {_        super.setWillTopic(willTopic)__    };if,set,the,server,will,publish,the,client,s,will,message,to,the,specified,topics,if,the,client,has,an,unexpected,disconnection;override,public,void,set,will,topic,string,will,topic,super,set,will,topic,will,topic
MQTTConfiguration -> @Override     public void setWillTopic(String willTopic);1451410942;If set the server will publish the client's Will message to the specified topics if the client has an unexpected disconnection.;@Override_    public void setWillTopic(String willTopic) {_        super.setWillTopic(willTopic)__    };if,set,the,server,will,publish,the,client,s,will,message,to,the,specified,topics,if,the,client,has,an,unexpected,disconnection;override,public,void,set,will,topic,string,will,topic,super,set,will,topic,will,topic
MQTTConfiguration -> @Override     public void setWillTopic(String willTopic);1452076589;If set the server will publish the client's Will message to the specified topics if the client has an unexpected disconnection.;@Override_    public void setWillTopic(String willTopic) {_        super.setWillTopic(willTopic)__    };if,set,the,server,will,publish,the,client,s,will,message,to,the,specified,topics,if,the,client,has,an,unexpected,disconnection;override,public,void,set,will,topic,string,will,topic,super,set,will,topic,will,topic
MQTTConfiguration -> @Override     public void setWillTopic(String willTopic);1475890337;If set the server will publish the client's Will message to the specified topics if the client has an unexpected disconnection.;@Override_    public void setWillTopic(String willTopic) {_        super.setWillTopic(willTopic)__    };if,set,the,server,will,publish,the,client,s,will,message,to,the,specified,topics,if,the,client,has,an,unexpected,disconnection;override,public,void,set,will,topic,string,will,topic,super,set,will,topic,will,topic
MQTTConfiguration -> @Override     public void setWillTopic(String willTopic);1537290824;If set the server will publish the client's Will message to the specified topics if the client has an unexpected disconnection.;@Override_    public void setWillTopic(String willTopic) {_        super.setWillTopic(willTopic)__    };if,set,the,server,will,publish,the,client,s,will,message,to,the,specified,topics,if,the,client,has,an,unexpected,disconnection;override,public,void,set,will,topic,string,will,topic,super,set,will,topic,will,topic
MQTTConfiguration -> @Override     public void setWillTopic(String willTopic);1537300723;If set the server will publish the client's Will message to the specified topics if the client has an unexpected disconnection.;@Override_    public void setWillTopic(String willTopic) {_        super.setWillTopic(willTopic)__    };if,set,the,server,will,publish,the,client,s,will,message,to,the,specified,topics,if,the,client,has,an,unexpected,disconnection;override,public,void,set,will,topic,string,will,topic,super,set,will,topic,will,topic
MQTTConfiguration -> @Override     public void setBlockingExecutor(Executor blockingExecutor);1434370479;SSL connections perform blocking operations against internal thread pool unless you call the setBlockingExecutor method to configure that executor they will use instead.;@Override_    public void setBlockingExecutor(Executor blockingExecutor) {_        super.setBlockingExecutor(blockingExecutor)__    };ssl,connections,perform,blocking,operations,against,internal,thread,pool,unless,you,call,the,set,blocking,executor,method,to,configure,that,executor,they,will,use,instead;override,public,void,set,blocking,executor,executor,blocking,executor,super,set,blocking,executor,blocking,executor
MQTTConfiguration -> @Override     public void setBlockingExecutor(Executor blockingExecutor);1451410942;SSL connections perform blocking operations against internal thread pool unless you call the setBlockingExecutor method to configure that executor they will use instead.;@Override_    public void setBlockingExecutor(Executor blockingExecutor) {_        super.setBlockingExecutor(blockingExecutor)__    };ssl,connections,perform,blocking,operations,against,internal,thread,pool,unless,you,call,the,set,blocking,executor,method,to,configure,that,executor,they,will,use,instead;override,public,void,set,blocking,executor,executor,blocking,executor,super,set,blocking,executor,blocking,executor
MQTTConfiguration -> @Override     public void setBlockingExecutor(Executor blockingExecutor);1452076589;SSL connections perform blocking operations against internal thread pool unless you call the setBlockingExecutor method to configure that executor they will use instead.;@Override_    public void setBlockingExecutor(Executor blockingExecutor) {_        super.setBlockingExecutor(blockingExecutor)__    };ssl,connections,perform,blocking,operations,against,internal,thread,pool,unless,you,call,the,set,blocking,executor,method,to,configure,that,executor,they,will,use,instead;override,public,void,set,blocking,executor,executor,blocking,executor,super,set,blocking,executor,blocking,executor
MQTTConfiguration -> @Override     public void setBlockingExecutor(Executor blockingExecutor);1475890337;SSL connections perform blocking operations against internal thread pool unless you call the setBlockingExecutor method to configure that executor they will use instead.;@Override_    public void setBlockingExecutor(Executor blockingExecutor) {_        super.setBlockingExecutor(blockingExecutor)__    };ssl,connections,perform,blocking,operations,against,internal,thread,pool,unless,you,call,the,set,blocking,executor,method,to,configure,that,executor,they,will,use,instead;override,public,void,set,blocking,executor,executor,blocking,executor,super,set,blocking,executor,blocking,executor
MQTTConfiguration -> @Override     public void setBlockingExecutor(Executor blockingExecutor);1537290824;SSL connections perform blocking operations against internal thread pool unless you call the setBlockingExecutor method to configure that executor they will use instead.;@Override_    public void setBlockingExecutor(Executor blockingExecutor) {_        super.setBlockingExecutor(blockingExecutor)__    };ssl,connections,perform,blocking,operations,against,internal,thread,pool,unless,you,call,the,set,blocking,executor,method,to,configure,that,executor,they,will,use,instead;override,public,void,set,blocking,executor,executor,blocking,executor,super,set,blocking,executor,blocking,executor
MQTTConfiguration -> @Override     public void setBlockingExecutor(Executor blockingExecutor);1537300723;SSL connections perform blocking operations against internal thread pool unless you call the setBlockingExecutor method to configure that executor they will use instead.;@Override_    public void setBlockingExecutor(Executor blockingExecutor) {_        super.setBlockingExecutor(blockingExecutor)__    };ssl,connections,perform,blocking,operations,against,internal,thread,pool,unless,you,call,the,set,blocking,executor,method,to,configure,that,executor,they,will,use,instead;override,public,void,set,blocking,executor,executor,blocking,executor,super,set,blocking,executor,blocking,executor
MQTTConfiguration -> public void setPublishTopicName(String publishTopicName);1434369881;The default Topic to publish messages on;public void setPublishTopicName(String publishTopicName) {_        this.publishTopicName = publishTopicName__    };the,default,topic,to,publish,messages,on;public,void,set,publish,topic,name,string,publish,topic,name,this,publish,topic,name,publish,topic,name
MQTTConfiguration -> public void setPublishTopicName(String publishTopicName);1434370479;The default Topic to publish messages on;public void setPublishTopicName(String publishTopicName) {_        this.publishTopicName = publishTopicName__    };the,default,topic,to,publish,messages,on;public,void,set,publish,topic,name,string,publish,topic,name,this,publish,topic,name,publish,topic,name
MQTTConfiguration -> public void setPublishTopicName(String publishTopicName);1451410942;The default Topic to publish messages on;public void setPublishTopicName(String publishTopicName) {_        this.publishTopicName = publishTopicName__    };the,default,topic,to,publish,messages,on;public,void,set,publish,topic,name,string,publish,topic,name,this,publish,topic,name,publish,topic,name
MQTTConfiguration -> public void setPublishTopicName(String publishTopicName);1452076589;The default Topic to publish messages on;public void setPublishTopicName(String publishTopicName) {_        this.publishTopicName = publishTopicName__    };the,default,topic,to,publish,messages,on;public,void,set,publish,topic,name,string,publish,topic,name,this,publish,topic,name,publish,topic,name
MQTTConfiguration -> public void setPublishTopicName(String publishTopicName);1475890337;The default Topic to publish messages on;public void setPublishTopicName(String publishTopicName) {_        this.publishTopicName = publishTopicName__    };the,default,topic,to,publish,messages,on;public,void,set,publish,topic,name,string,publish,topic,name,this,publish,topic,name,publish,topic,name
MQTTConfiguration -> public void setPublishTopicName(String publishTopicName);1537290824;The default Topic to publish messages on;public void setPublishTopicName(String publishTopicName) {_        this.publishTopicName = publishTopicName__    };the,default,topic,to,publish,messages,on;public,void,set,publish,topic,name,string,publish,topic,name,this,publish,topic,name,publish,topic,name
MQTTConfiguration -> public void setPublishTopicName(String publishTopicName);1537300723;The default Topic to publish messages on;public void setPublishTopicName(String publishTopicName) {_        this.publishTopicName = publishTopicName__    };the,default,topic,to,publish,messages,on;public,void,set,publish,topic,name,string,publish,topic,name,this,publish,topic,name,publish,topic,name
MQTTConfiguration -> @Override     public void setLocalAddress(String localAddress) throws URISyntaxException;1434369881;The local InetAddress and port to use;@Override_    public void setLocalAddress(String localAddress) throws URISyntaxException {_        super.setLocalAddress(localAddress)__    };the,local,inet,address,and,port,to,use;override,public,void,set,local,address,string,local,address,throws,urisyntax,exception,super,set,local,address,local,address
MQTTConfiguration -> @Override     public void setLocalAddress(String localAddress) throws URISyntaxException;1434370479;The local InetAddress and port to use;@Override_    public void setLocalAddress(String localAddress) throws URISyntaxException {_        super.setLocalAddress(localAddress)__    };the,local,inet,address,and,port,to,use;override,public,void,set,local,address,string,local,address,throws,urisyntax,exception,super,set,local,address,local,address
MQTTConfiguration -> @Override     public void setLocalAddress(String localAddress) throws URISyntaxException;1451410942;The local InetAddress and port to use;@Override_    public void setLocalAddress(String localAddress) throws URISyntaxException {_        super.setLocalAddress(localAddress)__    };the,local,inet,address,and,port,to,use;override,public,void,set,local,address,string,local,address,throws,urisyntax,exception,super,set,local,address,local,address
MQTTConfiguration -> @Override     public void setLocalAddress(String localAddress) throws URISyntaxException;1452076589;The local InetAddress and port to use;@Override_    public void setLocalAddress(String localAddress) throws URISyntaxException {_        super.setLocalAddress(localAddress)__    };the,local,inet,address,and,port,to,use;override,public,void,set,local,address,string,local,address,throws,urisyntax,exception,super,set,local,address,local,address
MQTTConfiguration -> @Override     public void setLocalAddress(String localAddress) throws URISyntaxException;1475890337;The local InetAddress and port to use;@Override_    public void setLocalAddress(String localAddress) throws URISyntaxException {_        super.setLocalAddress(localAddress)__    };the,local,inet,address,and,port,to,use;override,public,void,set,local,address,string,local,address,throws,urisyntax,exception,super,set,local,address,local,address
MQTTConfiguration -> @Override     public void setLocalAddress(String localAddress) throws URISyntaxException;1537290824;The local InetAddress and port to use;@Override_    public void setLocalAddress(String localAddress) throws URISyntaxException {_        super.setLocalAddress(localAddress)__    };the,local,inet,address,and,port,to,use;override,public,void,set,local,address,string,local,address,throws,urisyntax,exception,super,set,local,address,local,address
MQTTConfiguration -> @Override     public void setLocalAddress(String localAddress) throws URISyntaxException;1537300723;The local InetAddress and port to use;@Override_    public void setLocalAddress(String localAddress) throws URISyntaxException {_        super.setLocalAddress(localAddress)__    };the,local,inet,address,and,port,to,use;override,public,void,set,local,address,string,local,address,throws,urisyntax,exception,super,set,local,address,local,address
MQTTConfiguration -> @Override     public void setReconnectAttemptsMax(long reconnectAttemptsMax);1434369881;The maximum number of reconnect attempts before an error is reported back to the client after a server_connection had previously been established. Set to -1 to use unlimited attempts. Defaults to -1.;@Override_    public void setReconnectAttemptsMax(long reconnectAttemptsMax) {_        super.setReconnectAttemptsMax(reconnectAttemptsMax)__    };the,maximum,number,of,reconnect,attempts,before,an,error,is,reported,back,to,the,client,after,a,server,connection,had,previously,been,established,set,to,1,to,use,unlimited,attempts,defaults,to,1;override,public,void,set,reconnect,attempts,max,long,reconnect,attempts,max,super,set,reconnect,attempts,max,reconnect,attempts,max
MQTTConfiguration -> @Override     public void setReconnectAttemptsMax(long reconnectAttemptsMax);1434370479;The maximum number of reconnect attempts before an error is reported back to the client after a server_connection had previously been established. Set to -1 to use unlimited attempts. Defaults to -1.;@Override_    public void setReconnectAttemptsMax(long reconnectAttemptsMax) {_        super.setReconnectAttemptsMax(reconnectAttemptsMax)__    };the,maximum,number,of,reconnect,attempts,before,an,error,is,reported,back,to,the,client,after,a,server,connection,had,previously,been,established,set,to,1,to,use,unlimited,attempts,defaults,to,1;override,public,void,set,reconnect,attempts,max,long,reconnect,attempts,max,super,set,reconnect,attempts,max,reconnect,attempts,max
MQTTConfiguration -> @Override     public void setReconnectAttemptsMax(long reconnectAttemptsMax);1451410942;The maximum number of reconnect attempts before an error is reported back to the client after a server_connection had previously been established. Set to -1 to use unlimited attempts. Defaults to -1.;@Override_    public void setReconnectAttemptsMax(long reconnectAttemptsMax) {_        super.setReconnectAttemptsMax(reconnectAttemptsMax)__    };the,maximum,number,of,reconnect,attempts,before,an,error,is,reported,back,to,the,client,after,a,server,connection,had,previously,been,established,set,to,1,to,use,unlimited,attempts,defaults,to,1;override,public,void,set,reconnect,attempts,max,long,reconnect,attempts,max,super,set,reconnect,attempts,max,reconnect,attempts,max
MQTTConfiguration -> @Override     public void setReconnectAttemptsMax(long reconnectAttemptsMax);1452076589;The maximum number of reconnect attempts before an error is reported back to the client after a server_connection had previously been established. Set to -1 to use unlimited attempts. Defaults to -1.;@Override_    public void setReconnectAttemptsMax(long reconnectAttemptsMax) {_        super.setReconnectAttemptsMax(reconnectAttemptsMax)__    };the,maximum,number,of,reconnect,attempts,before,an,error,is,reported,back,to,the,client,after,a,server,connection,had,previously,been,established,set,to,1,to,use,unlimited,attempts,defaults,to,1;override,public,void,set,reconnect,attempts,max,long,reconnect,attempts,max,super,set,reconnect,attempts,max,reconnect,attempts,max
MQTTConfiguration -> @Override     public void setReconnectAttemptsMax(long reconnectAttemptsMax);1475890337;The maximum number of reconnect attempts before an error is reported back to the client after a server_connection had previously been established. Set to -1 to use unlimited attempts. Defaults to -1.;@Override_    public void setReconnectAttemptsMax(long reconnectAttemptsMax) {_        super.setReconnectAttemptsMax(reconnectAttemptsMax)__    };the,maximum,number,of,reconnect,attempts,before,an,error,is,reported,back,to,the,client,after,a,server,connection,had,previously,been,established,set,to,1,to,use,unlimited,attempts,defaults,to,1;override,public,void,set,reconnect,attempts,max,long,reconnect,attempts,max,super,set,reconnect,attempts,max,reconnect,attempts,max
MQTTConfiguration -> @Override     public void setReconnectAttemptsMax(long reconnectAttemptsMax);1537290824;The maximum number of reconnect attempts before an error is reported back to the client after a server_connection had previously been established. Set to -1 to use unlimited attempts. Defaults to -1.;@Override_    public void setReconnectAttemptsMax(long reconnectAttemptsMax) {_        super.setReconnectAttemptsMax(reconnectAttemptsMax)__    };the,maximum,number,of,reconnect,attempts,before,an,error,is,reported,back,to,the,client,after,a,server,connection,had,previously,been,established,set,to,1,to,use,unlimited,attempts,defaults,to,1;override,public,void,set,reconnect,attempts,max,long,reconnect,attempts,max,super,set,reconnect,attempts,max,reconnect,attempts,max
MQTTConfiguration -> @Override     public void setReconnectAttemptsMax(long reconnectAttemptsMax);1537300723;The maximum number of reconnect attempts before an error is reported back to the client after a server_connection had previously been established. Set to -1 to use unlimited attempts. Defaults to -1.;@Override_    public void setReconnectAttemptsMax(long reconnectAttemptsMax) {_        super.setReconnectAttemptsMax(reconnectAttemptsMax)__    };the,maximum,number,of,reconnect,attempts,before,an,error,is,reported,back,to,the,client,after,a,server,connection,had,previously,been,established,set,to,1,to,use,unlimited,attempts,defaults,to,1;override,public,void,set,reconnect,attempts,max,long,reconnect,attempts,max,super,set,reconnect,attempts,max,reconnect,attempts,max
MQTTConfiguration -> public void setLazySessionCreation(boolean lazySessionCreation);1475890337;Sessions can be lazily created to avoid exceptions, if the remote server is not up and running when the Camel producer is started.;public void setLazySessionCreation(boolean lazySessionCreation) {_        this.lazySessionCreation = lazySessionCreation__    };sessions,can,be,lazily,created,to,avoid,exceptions,if,the,remote,server,is,not,up,and,running,when,the,camel,producer,is,started;public,void,set,lazy,session,creation,boolean,lazy,session,creation,this,lazy,session,creation,lazy,session,creation
MQTTConfiguration -> public void setLazySessionCreation(boolean lazySessionCreation);1537290824;Sessions can be lazily created to avoid exceptions, if the remote server is not up and running when the Camel producer is started.;public void setLazySessionCreation(boolean lazySessionCreation) {_        this.lazySessionCreation = lazySessionCreation__    };sessions,can,be,lazily,created,to,avoid,exceptions,if,the,remote,server,is,not,up,and,running,when,the,camel,producer,is,started;public,void,set,lazy,session,creation,boolean,lazy,session,creation,this,lazy,session,creation,lazy,session,creation
MQTTConfiguration -> public void setLazySessionCreation(boolean lazySessionCreation);1537300723;Sessions can be lazily created to avoid exceptions, if the remote server is not up and running when the Camel producer is started.;public void setLazySessionCreation(boolean lazySessionCreation) {_        this.lazySessionCreation = lazySessionCreation__    };sessions,can,be,lazily,created,to,avoid,exceptions,if,the,remote,server,is,not,up,and,running,when,the,camel,producer,is,started;public,void,set,lazy,session,creation,boolean,lazy,session,creation,this,lazy,session,creation,lazy,session,creation
MQTTConfiguration -> @Override     public void setSendBufferSize(int sendBufferSize);1434369881;Sets the size of the internal socket send buffer. Defaults to 65536 (64k);@Override_    public void setSendBufferSize(int sendBufferSize) {_        super.setSendBufferSize(sendBufferSize)__    };sets,the,size,of,the,internal,socket,send,buffer,defaults,to,65536,64k;override,public,void,set,send,buffer,size,int,send,buffer,size,super,set,send,buffer,size,send,buffer,size
MQTTConfiguration -> @Override     public void setSendBufferSize(int sendBufferSize);1434370479;Sets the size of the internal socket send buffer. Defaults to 65536 (64k);@Override_    public void setSendBufferSize(int sendBufferSize) {_        super.setSendBufferSize(sendBufferSize)__    };sets,the,size,of,the,internal,socket,send,buffer,defaults,to,65536,64k;override,public,void,set,send,buffer,size,int,send,buffer,size,super,set,send,buffer,size,send,buffer,size
MQTTConfiguration -> @Override     public void setSendBufferSize(int sendBufferSize);1451410942;Sets the size of the internal socket send buffer. Defaults to 65536 (64k);@Override_    public void setSendBufferSize(int sendBufferSize) {_        super.setSendBufferSize(sendBufferSize)__    };sets,the,size,of,the,internal,socket,send,buffer,defaults,to,65536,64k;override,public,void,set,send,buffer,size,int,send,buffer,size,super,set,send,buffer,size,send,buffer,size
MQTTConfiguration -> @Override     public void setSendBufferSize(int sendBufferSize);1452076589;Sets the size of the internal socket send buffer. Defaults to 65536 (64k);@Override_    public void setSendBufferSize(int sendBufferSize) {_        super.setSendBufferSize(sendBufferSize)__    };sets,the,size,of,the,internal,socket,send,buffer,defaults,to,65536,64k;override,public,void,set,send,buffer,size,int,send,buffer,size,super,set,send,buffer,size,send,buffer,size
MQTTConfiguration -> @Override     public void setSendBufferSize(int sendBufferSize);1475890337;Sets the size of the internal socket send buffer. Defaults to 65536 (64k);@Override_    public void setSendBufferSize(int sendBufferSize) {_        super.setSendBufferSize(sendBufferSize)__    };sets,the,size,of,the,internal,socket,send,buffer,defaults,to,65536,64k;override,public,void,set,send,buffer,size,int,send,buffer,size,super,set,send,buffer,size,send,buffer,size
MQTTConfiguration -> @Override     public void setSendBufferSize(int sendBufferSize);1537290824;Sets the size of the internal socket send buffer. Defaults to 65536 (64k);@Override_    public void setSendBufferSize(int sendBufferSize) {_        super.setSendBufferSize(sendBufferSize)__    };sets,the,size,of,the,internal,socket,send,buffer,defaults,to,65536,64k;override,public,void,set,send,buffer,size,int,send,buffer,size,super,set,send,buffer,size,send,buffer,size
MQTTConfiguration -> @Override     public void setSendBufferSize(int sendBufferSize);1537300723;Sets the size of the internal socket send buffer. Defaults to 65536 (64k);@Override_    public void setSendBufferSize(int sendBufferSize) {_        super.setSendBufferSize(sendBufferSize)__    };sets,the,size,of,the,internal,socket,send,buffer,defaults,to,65536,64k;override,public,void,set,send,buffer,size,int,send,buffer,size,super,set,send,buffer,size,send,buffer,size
MQTTConfiguration -> public void setMqttQosPropertyName(String mqttQosPropertyName);1434369881;The property name to look for on an Exchange for an individual published message._If this is set (one of AtMostOnce, AtLeastOnce or ExactlyOnce ) - then that QoS will be set on the message sent to the MQTT message broker.;public void setMqttQosPropertyName(String mqttQosPropertyName) {_        this.mqttQosPropertyName = mqttQosPropertyName__    };the,property,name,to,look,for,on,an,exchange,for,an,individual,published,message,if,this,is,set,one,of,at,most,once,at,least,once,or,exactly,once,then,that,qo,s,will,be,set,on,the,message,sent,to,the,mqtt,message,broker;public,void,set,mqtt,qos,property,name,string,mqtt,qos,property,name,this,mqtt,qos,property,name,mqtt,qos,property,name
MQTTConfiguration -> public void setMqttQosPropertyName(String mqttQosPropertyName);1434370479;The property name to look for on an Exchange for an individual published message._If this is set (one of AtMostOnce, AtLeastOnce or ExactlyOnce ) - then that QoS will be set on the message sent to the MQTT message broker.;public void setMqttQosPropertyName(String mqttQosPropertyName) {_        this.mqttQosPropertyName = mqttQosPropertyName__    };the,property,name,to,look,for,on,an,exchange,for,an,individual,published,message,if,this,is,set,one,of,at,most,once,at,least,once,or,exactly,once,then,that,qo,s,will,be,set,on,the,message,sent,to,the,mqtt,message,broker;public,void,set,mqtt,qos,property,name,string,mqtt,qos,property,name,this,mqtt,qos,property,name,mqtt,qos,property,name
MQTTConfiguration -> public void setMqttQosPropertyName(String mqttQosPropertyName);1451410942;The property name to look for on an Exchange for an individual published message._If this is set (one of AtMostOnce, AtLeastOnce or ExactlyOnce ) - then that QoS will be set on the message sent to the MQTT message broker.;public void setMqttQosPropertyName(String mqttQosPropertyName) {_        this.mqttQosPropertyName = mqttQosPropertyName__    };the,property,name,to,look,for,on,an,exchange,for,an,individual,published,message,if,this,is,set,one,of,at,most,once,at,least,once,or,exactly,once,then,that,qo,s,will,be,set,on,the,message,sent,to,the,mqtt,message,broker;public,void,set,mqtt,qos,property,name,string,mqtt,qos,property,name,this,mqtt,qos,property,name,mqtt,qos,property,name
MQTTConfiguration -> public void setMqttQosPropertyName(String mqttQosPropertyName);1452076589;The property name to look for on an Exchange for an individual published message._If this is set (one of AtMostOnce, AtLeastOnce or ExactlyOnce ) - then that QoS will be set on the message sent to the MQTT message broker.;public void setMqttQosPropertyName(String mqttQosPropertyName) {_        this.mqttQosPropertyName = mqttQosPropertyName__    };the,property,name,to,look,for,on,an,exchange,for,an,individual,published,message,if,this,is,set,one,of,at,most,once,at,least,once,or,exactly,once,then,that,qo,s,will,be,set,on,the,message,sent,to,the,mqtt,message,broker;public,void,set,mqtt,qos,property,name,string,mqtt,qos,property,name,this,mqtt,qos,property,name,mqtt,qos,property,name
MQTTConfiguration -> public void setMqttQosPropertyName(String mqttQosPropertyName);1475890337;The property name to look for on an Exchange for an individual published message._If this is set (one of AtMostOnce, AtLeastOnce or ExactlyOnce ) - then that QoS will be set on the message sent to the MQTT message broker.;public void setMqttQosPropertyName(String mqttQosPropertyName) {_        this.mqttQosPropertyName = mqttQosPropertyName__    };the,property,name,to,look,for,on,an,exchange,for,an,individual,published,message,if,this,is,set,one,of,at,most,once,at,least,once,or,exactly,once,then,that,qo,s,will,be,set,on,the,message,sent,to,the,mqtt,message,broker;public,void,set,mqtt,qos,property,name,string,mqtt,qos,property,name,this,mqtt,qos,property,name,mqtt,qos,property,name
MQTTConfiguration -> public void setMqttQosPropertyName(String mqttQosPropertyName);1537290824;The property name to look for on an Exchange for an individual published message._If this is set (one of AtMostOnce, AtLeastOnce or ExactlyOnce ) - then that QoS will be set on the message sent to the MQTT message broker.;public void setMqttQosPropertyName(String mqttQosPropertyName) {_        this.mqttQosPropertyName = mqttQosPropertyName__    };the,property,name,to,look,for,on,an,exchange,for,an,individual,published,message,if,this,is,set,one,of,at,most,once,at,least,once,or,exactly,once,then,that,qo,s,will,be,set,on,the,message,sent,to,the,mqtt,message,broker;public,void,set,mqtt,qos,property,name,string,mqtt,qos,property,name,this,mqtt,qos,property,name,mqtt,qos,property,name
MQTTConfiguration -> public void setMqttQosPropertyName(String mqttQosPropertyName);1537300723;The property name to look for on an Exchange for an individual published message._If this is set (one of AtMostOnce, AtLeastOnce or ExactlyOnce ) - then that QoS will be set on the message sent to the MQTT message broker.;public void setMqttQosPropertyName(String mqttQosPropertyName) {_        this.mqttQosPropertyName = mqttQosPropertyName__    };the,property,name,to,look,for,on,an,exchange,for,an,individual,published,message,if,this,is,set,one,of,at,most,once,at,least,once,or,exactly,once,then,that,qo,s,will,be,set,on,the,message,sent,to,the,mqtt,message,broker;public,void,set,mqtt,qos,property,name,string,mqtt,qos,property,name,this,mqtt,qos,property,name,mqtt,qos,property,name
MQTTConfiguration -> @Override     public void setReconnectBackOffMultiplier(double reconnectBackOffMultiplier);1434369881;The Exponential backoff be used between reconnect attempts. Set to 1 to disable exponential backoff. Defaults to 2.;@Override_    public void setReconnectBackOffMultiplier(double reconnectBackOffMultiplier) {_        super.setReconnectBackOffMultiplier(reconnectBackOffMultiplier)__    };the,exponential,backoff,be,used,between,reconnect,attempts,set,to,1,to,disable,exponential,backoff,defaults,to,2;override,public,void,set,reconnect,back,off,multiplier,double,reconnect,back,off,multiplier,super,set,reconnect,back,off,multiplier,reconnect,back,off,multiplier
MQTTConfiguration -> @Override     public void setReconnectBackOffMultiplier(double reconnectBackOffMultiplier);1434370479;The Exponential backoff be used between reconnect attempts. Set to 1 to disable exponential backoff. Defaults to 2.;@Override_    public void setReconnectBackOffMultiplier(double reconnectBackOffMultiplier) {_        super.setReconnectBackOffMultiplier(reconnectBackOffMultiplier)__    };the,exponential,backoff,be,used,between,reconnect,attempts,set,to,1,to,disable,exponential,backoff,defaults,to,2;override,public,void,set,reconnect,back,off,multiplier,double,reconnect,back,off,multiplier,super,set,reconnect,back,off,multiplier,reconnect,back,off,multiplier
MQTTConfiguration -> @Override     public void setReconnectBackOffMultiplier(double reconnectBackOffMultiplier);1451410942;The Exponential backoff be used between reconnect attempts. Set to 1 to disable exponential backoff. Defaults to 2.;@Override_    public void setReconnectBackOffMultiplier(double reconnectBackOffMultiplier) {_        super.setReconnectBackOffMultiplier(reconnectBackOffMultiplier)__    };the,exponential,backoff,be,used,between,reconnect,attempts,set,to,1,to,disable,exponential,backoff,defaults,to,2;override,public,void,set,reconnect,back,off,multiplier,double,reconnect,back,off,multiplier,super,set,reconnect,back,off,multiplier,reconnect,back,off,multiplier
MQTTConfiguration -> @Override     public void setReconnectBackOffMultiplier(double reconnectBackOffMultiplier);1452076589;The Exponential backoff be used between reconnect attempts. Set to 1 to disable exponential backoff. Defaults to 2.;@Override_    public void setReconnectBackOffMultiplier(double reconnectBackOffMultiplier) {_        super.setReconnectBackOffMultiplier(reconnectBackOffMultiplier)__    };the,exponential,backoff,be,used,between,reconnect,attempts,set,to,1,to,disable,exponential,backoff,defaults,to,2;override,public,void,set,reconnect,back,off,multiplier,double,reconnect,back,off,multiplier,super,set,reconnect,back,off,multiplier,reconnect,back,off,multiplier
MQTTConfiguration -> @Override     public void setReconnectBackOffMultiplier(double reconnectBackOffMultiplier);1475890337;The Exponential backoff be used between reconnect attempts. Set to 1 to disable exponential backoff. Defaults to 2.;@Override_    public void setReconnectBackOffMultiplier(double reconnectBackOffMultiplier) {_        super.setReconnectBackOffMultiplier(reconnectBackOffMultiplier)__    };the,exponential,backoff,be,used,between,reconnect,attempts,set,to,1,to,disable,exponential,backoff,defaults,to,2;override,public,void,set,reconnect,back,off,multiplier,double,reconnect,back,off,multiplier,super,set,reconnect,back,off,multiplier,reconnect,back,off,multiplier
MQTTConfiguration -> @Override     public void setReconnectBackOffMultiplier(double reconnectBackOffMultiplier);1537290824;The Exponential backoff be used between reconnect attempts. Set to 1 to disable exponential backoff. Defaults to 2.;@Override_    public void setReconnectBackOffMultiplier(double reconnectBackOffMultiplier) {_        super.setReconnectBackOffMultiplier(reconnectBackOffMultiplier)__    };the,exponential,backoff,be,used,between,reconnect,attempts,set,to,1,to,disable,exponential,backoff,defaults,to,2;override,public,void,set,reconnect,back,off,multiplier,double,reconnect,back,off,multiplier,super,set,reconnect,back,off,multiplier,reconnect,back,off,multiplier
MQTTConfiguration -> @Override     public void setReconnectBackOffMultiplier(double reconnectBackOffMultiplier);1537300723;The Exponential backoff be used between reconnect attempts. Set to 1 to disable exponential backoff. Defaults to 2.;@Override_    public void setReconnectBackOffMultiplier(double reconnectBackOffMultiplier) {_        super.setReconnectBackOffMultiplier(reconnectBackOffMultiplier)__    };the,exponential,backoff,be,used,between,reconnect,attempts,set,to,1,to,disable,exponential,backoff,defaults,to,2;override,public,void,set,reconnect,back,off,multiplier,double,reconnect,back,off,multiplier,super,set,reconnect,back,off,multiplier,reconnect,back,off,multiplier
MQTTConfiguration -> public void setDisconnectWaitInSeconds(int disconnectWaitInSeconds);1434369881;The number of seconds the Component will wait for a valid disconnect on stop() from the MQTT broker;public void setDisconnectWaitInSeconds(int disconnectWaitInSeconds) {_        this.disconnectWaitInSeconds = disconnectWaitInSeconds__    };the,number,of,seconds,the,component,will,wait,for,a,valid,disconnect,on,stop,from,the,mqtt,broker;public,void,set,disconnect,wait,in,seconds,int,disconnect,wait,in,seconds,this,disconnect,wait,in,seconds,disconnect,wait,in,seconds
MQTTConfiguration -> public void setDisconnectWaitInSeconds(int disconnectWaitInSeconds);1434370479;The number of seconds the Component will wait for a valid disconnect on stop() from the MQTT broker;public void setDisconnectWaitInSeconds(int disconnectWaitInSeconds) {_        this.disconnectWaitInSeconds = disconnectWaitInSeconds__    };the,number,of,seconds,the,component,will,wait,for,a,valid,disconnect,on,stop,from,the,mqtt,broker;public,void,set,disconnect,wait,in,seconds,int,disconnect,wait,in,seconds,this,disconnect,wait,in,seconds,disconnect,wait,in,seconds
MQTTConfiguration -> public void setDisconnectWaitInSeconds(int disconnectWaitInSeconds);1451410942;The number of seconds the Component will wait for a valid disconnect on stop() from the MQTT broker;public void setDisconnectWaitInSeconds(int disconnectWaitInSeconds) {_        this.disconnectWaitInSeconds = disconnectWaitInSeconds__    };the,number,of,seconds,the,component,will,wait,for,a,valid,disconnect,on,stop,from,the,mqtt,broker;public,void,set,disconnect,wait,in,seconds,int,disconnect,wait,in,seconds,this,disconnect,wait,in,seconds,disconnect,wait,in,seconds
MQTTConfiguration -> public void setDisconnectWaitInSeconds(int disconnectWaitInSeconds);1452076589;The number of seconds the Component will wait for a valid disconnect on stop() from the MQTT broker;public void setDisconnectWaitInSeconds(int disconnectWaitInSeconds) {_        this.disconnectWaitInSeconds = disconnectWaitInSeconds__    };the,number,of,seconds,the,component,will,wait,for,a,valid,disconnect,on,stop,from,the,mqtt,broker;public,void,set,disconnect,wait,in,seconds,int,disconnect,wait,in,seconds,this,disconnect,wait,in,seconds,disconnect,wait,in,seconds
MQTTConfiguration -> public void setDisconnectWaitInSeconds(int disconnectWaitInSeconds);1475890337;The number of seconds the Component will wait for a valid disconnect on stop() from the MQTT broker;public void setDisconnectWaitInSeconds(int disconnectWaitInSeconds) {_        this.disconnectWaitInSeconds = disconnectWaitInSeconds__    };the,number,of,seconds,the,component,will,wait,for,a,valid,disconnect,on,stop,from,the,mqtt,broker;public,void,set,disconnect,wait,in,seconds,int,disconnect,wait,in,seconds,this,disconnect,wait,in,seconds,disconnect,wait,in,seconds
MQTTConfiguration -> public void setDisconnectWaitInSeconds(int disconnectWaitInSeconds);1537290824;The number of seconds the Component will wait for a valid disconnect on stop() from the MQTT broker;public void setDisconnectWaitInSeconds(int disconnectWaitInSeconds) {_        this.disconnectWaitInSeconds = disconnectWaitInSeconds__    };the,number,of,seconds,the,component,will,wait,for,a,valid,disconnect,on,stop,from,the,mqtt,broker;public,void,set,disconnect,wait,in,seconds,int,disconnect,wait,in,seconds,this,disconnect,wait,in,seconds,disconnect,wait,in,seconds
MQTTConfiguration -> public void setDisconnectWaitInSeconds(int disconnectWaitInSeconds);1537300723;The number of seconds the Component will wait for a valid disconnect on stop() from the MQTT broker;public void setDisconnectWaitInSeconds(int disconnectWaitInSeconds) {_        this.disconnectWaitInSeconds = disconnectWaitInSeconds__    };the,number,of,seconds,the,component,will,wait,for,a,valid,disconnect,on,stop,from,the,mqtt,broker;public,void,set,disconnect,wait,in,seconds,int,disconnect,wait,in,seconds,this,disconnect,wait,in,seconds,disconnect,wait,in,seconds
MQTTConfiguration -> @Override     public void setSslContext(SSLContext sslContext);1434370479;To configure security using SSLContext configuration;@Override_    public void setSslContext(SSLContext sslContext) {_        super.setSslContext(sslContext)__    };to,configure,security,using,sslcontext,configuration;override,public,void,set,ssl,context,sslcontext,ssl,context,super,set,ssl,context,ssl,context
MQTTConfiguration -> @Override     public void setSslContext(SSLContext sslContext);1451410942;To configure security using SSLContext configuration;@Override_    public void setSslContext(SSLContext sslContext) {_        super.setSslContext(sslContext)__    };to,configure,security,using,sslcontext,configuration;override,public,void,set,ssl,context,sslcontext,ssl,context,super,set,ssl,context,ssl,context
MQTTConfiguration -> @Override     public void setSslContext(SSLContext sslContext);1452076589;To configure security using SSLContext configuration;@Override_    public void setSslContext(SSLContext sslContext) {_        super.setSslContext(sslContext)__    };to,configure,security,using,sslcontext,configuration;override,public,void,set,ssl,context,sslcontext,ssl,context,super,set,ssl,context,ssl,context
MQTTConfiguration -> @Override     public void setSslContext(SSLContext sslContext);1475890337;To configure security using SSLContext configuration;@Override_    public void setSslContext(SSLContext sslContext) {_        super.setSslContext(sslContext)__    };to,configure,security,using,sslcontext,configuration;override,public,void,set,ssl,context,sslcontext,ssl,context,super,set,ssl,context,ssl,context
MQTTConfiguration -> @Override     public void setSslContext(SSLContext sslContext);1537290824;To configure security using SSLContext configuration;@Override_    public void setSslContext(SSLContext sslContext) {_        super.setSslContext(sslContext)__    };to,configure,security,using,sslcontext,configuration;override,public,void,set,ssl,context,sslcontext,ssl,context,super,set,ssl,context,ssl,context
MQTTConfiguration -> @Override     public void setSslContext(SSLContext sslContext);1537300723;To configure security using SSLContext configuration;@Override_    public void setSslContext(SSLContext sslContext) {_        super.setSslContext(sslContext)__    };to,configure,security,using,sslcontext,configuration;override,public,void,set,ssl,context,sslcontext,ssl,context,super,set,ssl,context,ssl,context
MQTTConfiguration -> @Override     public void setReconnectDelay(long reconnectDelay);1434369881;How long to wait in ms before the first reconnect attempt. Defaults to 10.;@Override_    public void setReconnectDelay(long reconnectDelay) {_        super.setReconnectDelay(reconnectDelay)__    };how,long,to,wait,in,ms,before,the,first,reconnect,attempt,defaults,to,10;override,public,void,set,reconnect,delay,long,reconnect,delay,super,set,reconnect,delay,reconnect,delay
MQTTConfiguration -> @Override     public void setReconnectDelay(long reconnectDelay);1434370479;How long to wait in ms before the first reconnect attempt. Defaults to 10.;@Override_    public void setReconnectDelay(long reconnectDelay) {_        super.setReconnectDelay(reconnectDelay)__    };how,long,to,wait,in,ms,before,the,first,reconnect,attempt,defaults,to,10;override,public,void,set,reconnect,delay,long,reconnect,delay,super,set,reconnect,delay,reconnect,delay
MQTTConfiguration -> @Override     public void setReconnectDelay(long reconnectDelay);1451410942;How long to wait in ms before the first reconnect attempt. Defaults to 10.;@Override_    public void setReconnectDelay(long reconnectDelay) {_        super.setReconnectDelay(reconnectDelay)__    };how,long,to,wait,in,ms,before,the,first,reconnect,attempt,defaults,to,10;override,public,void,set,reconnect,delay,long,reconnect,delay,super,set,reconnect,delay,reconnect,delay
MQTTConfiguration -> @Override     public void setReconnectDelay(long reconnectDelay);1452076589;How long to wait in ms before the first reconnect attempt. Defaults to 10.;@Override_    public void setReconnectDelay(long reconnectDelay) {_        super.setReconnectDelay(reconnectDelay)__    };how,long,to,wait,in,ms,before,the,first,reconnect,attempt,defaults,to,10;override,public,void,set,reconnect,delay,long,reconnect,delay,super,set,reconnect,delay,reconnect,delay
MQTTConfiguration -> @Override     public void setReconnectDelay(long reconnectDelay);1475890337;How long to wait in ms before the first reconnect attempt. Defaults to 10.;@Override_    public void setReconnectDelay(long reconnectDelay) {_        super.setReconnectDelay(reconnectDelay)__    };how,long,to,wait,in,ms,before,the,first,reconnect,attempt,defaults,to,10;override,public,void,set,reconnect,delay,long,reconnect,delay,super,set,reconnect,delay,reconnect,delay
MQTTConfiguration -> @Override     public void setReconnectDelay(long reconnectDelay);1537290824;How long to wait in ms before the first reconnect attempt. Defaults to 10.;@Override_    public void setReconnectDelay(long reconnectDelay) {_        super.setReconnectDelay(reconnectDelay)__    };how,long,to,wait,in,ms,before,the,first,reconnect,attempt,defaults,to,10;override,public,void,set,reconnect,delay,long,reconnect,delay,super,set,reconnect,delay,reconnect,delay
MQTTConfiguration -> @Override     public void setReconnectDelay(long reconnectDelay);1537300723;How long to wait in ms before the first reconnect attempt. Defaults to 10.;@Override_    public void setReconnectDelay(long reconnectDelay) {_        super.setReconnectDelay(reconnectDelay)__    };how,long,to,wait,in,ms,before,the,first,reconnect,attempt,defaults,to,10;override,public,void,set,reconnect,delay,long,reconnect,delay,super,set,reconnect,delay,reconnect,delay
MQTTConfiguration -> @Deprecated     public void setMqttTopicPropertyName(String mqttTopicPropertyName);1415211488;Please use MQTT_SUBSCRIBE_TOPIC and MQTT_PUBLISH_TOPIC to set or get the topic name;@Deprecated_    public void setMqttTopicPropertyName(String mqttTopicPropertyName) {_        this.mqttTopicPropertyName = mqttTopicPropertyName__    };please,use,and,to,set,or,get,the,topic,name;deprecated,public,void,set,mqtt,topic,property,name,string,mqtt,topic,property,name,this,mqtt,topic,property,name,mqtt,topic,property,name
MQTTConfiguration -> @Deprecated     public void setMqttTopicPropertyName(String mqttTopicPropertyName);1420380756;Please use MQTT_SUBSCRIBE_TOPIC and MQTT_PUBLISH_TOPIC to set or get the topic name;@Deprecated_    public void setMqttTopicPropertyName(String mqttTopicPropertyName) {_        this.mqttTopicPropertyName = mqttTopicPropertyName__    };please,use,and,to,set,or,get,the,topic,name;deprecated,public,void,set,mqtt,topic,property,name,string,mqtt,topic,property,name,this,mqtt,topic,property,name,mqtt,topic,property,name
MQTTConfiguration -> @Deprecated     public void setMqttTopicPropertyName(String mqttTopicPropertyName);1420536463;Please use MQTT_SUBSCRIBE_TOPIC and MQTT_PUBLISH_TOPIC to set or get the topic name;@Deprecated_    public void setMqttTopicPropertyName(String mqttTopicPropertyName) {_        this.mqttTopicPropertyName = mqttTopicPropertyName__    };please,use,and,to,set,or,get,the,topic,name;deprecated,public,void,set,mqtt,topic,property,name,string,mqtt,topic,property,name,this,mqtt,topic,property,name,mqtt,topic,property,name
MQTTConfiguration -> @Deprecated     public void setMqttTopicPropertyName(String mqttTopicPropertyName);1423996335;Please use MQTT_SUBSCRIBE_TOPIC and MQTT_PUBLISH_TOPIC to set or get the topic name;@Deprecated_    public void setMqttTopicPropertyName(String mqttTopicPropertyName) {_        this.mqttTopicPropertyName = mqttTopicPropertyName__    };please,use,and,to,set,or,get,the,topic,name;deprecated,public,void,set,mqtt,topic,property,name,string,mqtt,topic,property,name,this,mqtt,topic,property,name,mqtt,topic,property,name
MQTTConfiguration -> @Deprecated     public void setMqttTopicPropertyName(String mqttTopicPropertyName);1424950293;Please use MQTT_SUBSCRIBE_TOPIC and MQTT_PUBLISH_TOPIC to set or get the topic name;@Deprecated_    public void setMqttTopicPropertyName(String mqttTopicPropertyName) {_        this.mqttTopicPropertyName = mqttTopicPropertyName__    };please,use,and,to,set,or,get,the,topic,name;deprecated,public,void,set,mqtt,topic,property,name,string,mqtt,topic,property,name,this,mqtt,topic,property,name,mqtt,topic,property,name
MQTTConfiguration -> @Deprecated     public void setMqttTopicPropertyName(String mqttTopicPropertyName);1427880501;Please use MQTT_SUBSCRIBE_TOPIC and MQTT_PUBLISH_TOPIC to set or get the topic name;@Deprecated_    public void setMqttTopicPropertyName(String mqttTopicPropertyName) {_        this.mqttTopicPropertyName = mqttTopicPropertyName__    };please,use,and,to,set,or,get,the,topic,name;deprecated,public,void,set,mqtt,topic,property,name,string,mqtt,topic,property,name,this,mqtt,topic,property,name,mqtt,topic,property,name
MQTTConfiguration -> @Deprecated     public void setMqttTopicPropertyName(String mqttTopicPropertyName);1434369881;Please use MQTT_SUBSCRIBE_TOPIC and MQTT_PUBLISH_TOPIC to set or get the topic name;@Deprecated_    public void setMqttTopicPropertyName(String mqttTopicPropertyName) {_        this.mqttTopicPropertyName = mqttTopicPropertyName__    };please,use,and,to,set,or,get,the,topic,name;deprecated,public,void,set,mqtt,topic,property,name,string,mqtt,topic,property,name,this,mqtt,topic,property,name,mqtt,topic,property,name
MQTTConfiguration -> @Deprecated     public void setMqttTopicPropertyName(String mqttTopicPropertyName);1434370479;Please use MQTT_SUBSCRIBE_TOPIC and MQTT_PUBLISH_TOPIC to set or get the topic name;@Deprecated_    public void setMqttTopicPropertyName(String mqttTopicPropertyName) {_        this.mqttTopicPropertyName = mqttTopicPropertyName__    };please,use,and,to,set,or,get,the,topic,name;deprecated,public,void,set,mqtt,topic,property,name,string,mqtt,topic,property,name,this,mqtt,topic,property,name,mqtt,topic,property,name
MQTTConfiguration -> @Deprecated     public void setMqttTopicPropertyName(String mqttTopicPropertyName);1451410942;Please use MQTT_SUBSCRIBE_TOPIC and MQTT_PUBLISH_TOPIC to set or get the topic name;@Deprecated_    public void setMqttTopicPropertyName(String mqttTopicPropertyName) {_        this.mqttTopicPropertyName = mqttTopicPropertyName__    };please,use,and,to,set,or,get,the,topic,name;deprecated,public,void,set,mqtt,topic,property,name,string,mqtt,topic,property,name,this,mqtt,topic,property,name,mqtt,topic,property,name
MQTTConfiguration -> @Deprecated     public void setMqttTopicPropertyName(String mqttTopicPropertyName);1452076589;Please use MQTT_SUBSCRIBE_TOPIC and MQTT_PUBLISH_TOPIC to set or get the topic name;@Deprecated_    public void setMqttTopicPropertyName(String mqttTopicPropertyName) {_        this.mqttTopicPropertyName = mqttTopicPropertyName__    };please,use,and,to,set,or,get,the,topic,name;deprecated,public,void,set,mqtt,topic,property,name,string,mqtt,topic,property,name,this,mqtt,topic,property,name,mqtt,topic,property,name
MQTTConfiguration -> @Deprecated     public void setMqttTopicPropertyName(String mqttTopicPropertyName);1475890337;Please use MQTT_SUBSCRIBE_TOPIC and MQTT_PUBLISH_TOPIC to set or get the topic name;@Deprecated_    public void setMqttTopicPropertyName(String mqttTopicPropertyName) {_        this.mqttTopicPropertyName = mqttTopicPropertyName__    };please,use,and,to,set,or,get,the,topic,name;deprecated,public,void,set,mqtt,topic,property,name,string,mqtt,topic,property,name,this,mqtt,topic,property,name,mqtt,topic,property,name
MQTTConfiguration -> @Deprecated     public void setMqttTopicPropertyName(String mqttTopicPropertyName);1537290824;Please use MQTT_SUBSCRIBE_TOPIC and MQTT_PUBLISH_TOPIC to set or get the topic name;@Deprecated_    public void setMqttTopicPropertyName(String mqttTopicPropertyName) {_        this.mqttTopicPropertyName = mqttTopicPropertyName__    };please,use,and,to,set,or,get,the,topic,name;deprecated,public,void,set,mqtt,topic,property,name,string,mqtt,topic,property,name,this,mqtt,topic,property,name,mqtt,topic,property,name
MQTTConfiguration -> @Deprecated     public void setMqttTopicPropertyName(String mqttTopicPropertyName);1537300723;Please use MQTT_SUBSCRIBE_TOPIC and MQTT_PUBLISH_TOPIC to set or get the topic name;@Deprecated_    public void setMqttTopicPropertyName(String mqttTopicPropertyName) {_        this.mqttTopicPropertyName = mqttTopicPropertyName__    };please,use,and,to,set,or,get,the,topic,name;deprecated,public,void,set,mqtt,topic,property,name,string,mqtt,topic,property,name,this,mqtt,topic,property,name,mqtt,topic,property,name
MQTTConfiguration -> @Override     public void setWillQos(QoS willQos);1434369881;Sets the quality of service to use for the Will message. Defaults to QoS.AT_MOST_ONCE.;@Override_    public void setWillQos(QoS willQos) {_        super.setWillQos(willQos)__    };sets,the,quality,of,service,to,use,for,the,will,message,defaults,to,qo,s;override,public,void,set,will,qos,qo,s,will,qos,super,set,will,qos,will,qos
MQTTConfiguration -> @Override     public void setWillQos(QoS willQos);1434370479;Sets the quality of service to use for the Will message. Defaults to AT_MOST_ONCE.;@Override_    public void setWillQos(QoS willQos) {_        super.setWillQos(willQos)__    };sets,the,quality,of,service,to,use,for,the,will,message,defaults,to;override,public,void,set,will,qos,qo,s,will,qos,super,set,will,qos,will,qos
MQTTConfiguration -> @Override     public void setWillQos(QoS willQos);1451410942;Sets the quality of service to use for the Will message. Defaults to AT_MOST_ONCE.;@Override_    public void setWillQos(QoS willQos) {_        super.setWillQos(willQos)__    };sets,the,quality,of,service,to,use,for,the,will,message,defaults,to;override,public,void,set,will,qos,qo,s,will,qos,super,set,will,qos,will,qos
MQTTConfiguration -> @Override     public void setWillQos(QoS willQos);1452076589;Sets the quality of service to use for the Will message. Defaults to AT_MOST_ONCE.;@Override_    public void setWillQos(QoS willQos) {_        super.setWillQos(willQos)__    };sets,the,quality,of,service,to,use,for,the,will,message,defaults,to;override,public,void,set,will,qos,qo,s,will,qos,super,set,will,qos,will,qos
MQTTConfiguration -> @Override     public void setWillQos(QoS willQos);1475890337;Sets the quality of service to use for the Will message. Defaults to AT_MOST_ONCE.;@Override_    public void setWillQos(QoS willQos) {_        super.setWillQos(willQos)__    };sets,the,quality,of,service,to,use,for,the,will,message,defaults,to;override,public,void,set,will,qos,qo,s,will,qos,super,set,will,qos,will,qos
MQTTConfiguration -> @Override     public void setWillQos(QoS willQos);1537290824;Sets the quality of service to use for the Will message. Defaults to AT_MOST_ONCE.;@Override_    public void setWillQos(QoS willQos) {_        super.setWillQos(willQos)__    };sets,the,quality,of,service,to,use,for,the,will,message,defaults,to;override,public,void,set,will,qos,qo,s,will,qos,super,set,will,qos,will,qos
MQTTConfiguration -> @Override     public void setWillQos(QoS willQos);1537300723;Sets the quality of service to use for the Will message. Defaults to AT_MOST_ONCE.;@Override_    public void setWillQos(QoS willQos) {_        super.setWillQos(willQos)__    };sets,the,quality,of,service,to,use,for,the,will,message,defaults,to;override,public,void,set,will,qos,qo,s,will,qos,super,set,will,qos,will,qos
MQTTConfiguration -> @Override     public void setVersion(String version);1434369881;Set to "3.1.1" to use MQTT version 3.1.1. Otherwise defaults to the 3.1 protocol version.;@Override_    public void setVersion(String version) {_        super.setVersion(version)__    };set,to,3,1,1,to,use,mqtt,version,3,1,1,otherwise,defaults,to,the,3,1,protocol,version;override,public,void,set,version,string,version,super,set,version,version
MQTTConfiguration -> @Override     public void setVersion(String version);1434370479;Set to 3.1.1 to use MQTT version 3.1.1. Otherwise defaults to the 3.1 protocol version.;@Override_    public void setVersion(String version) {_        super.setVersion(version)__    };set,to,3,1,1,to,use,mqtt,version,3,1,1,otherwise,defaults,to,the,3,1,protocol,version;override,public,void,set,version,string,version,super,set,version,version
MQTTConfiguration -> @Override     public void setVersion(String version);1451410942;Set to 3.1.1 to use MQTT version 3.1.1. Otherwise defaults to the 3.1 protocol version.;@Override_    public void setVersion(String version) {_        super.setVersion(version)__    };set,to,3,1,1,to,use,mqtt,version,3,1,1,otherwise,defaults,to,the,3,1,protocol,version;override,public,void,set,version,string,version,super,set,version,version
MQTTConfiguration -> @Override     public void setVersion(String version);1452076589;Set to 3.1.1 to use MQTT version 3.1.1. Otherwise defaults to the 3.1 protocol version.;@Override_    public void setVersion(String version) {_        super.setVersion(version)__    };set,to,3,1,1,to,use,mqtt,version,3,1,1,otherwise,defaults,to,the,3,1,protocol,version;override,public,void,set,version,string,version,super,set,version,version
MQTTConfiguration -> @Override     public void setVersion(String version);1475890337;Set to 3.1.1 to use MQTT version 3.1.1. Otherwise defaults to the 3.1 protocol version.;@Override_    public void setVersion(String version) {_        super.setVersion(version)__    };set,to,3,1,1,to,use,mqtt,version,3,1,1,otherwise,defaults,to,the,3,1,protocol,version;override,public,void,set,version,string,version,super,set,version,version
MQTTConfiguration -> @Override     public void setVersion(String version);1537290824;Set to 3.1.1 to use MQTT version 3.1.1. Otherwise defaults to the 3.1 protocol version.;@Override_    public void setVersion(String version) {_        super.setVersion(version)__    };set,to,3,1,1,to,use,mqtt,version,3,1,1,otherwise,defaults,to,the,3,1,protocol,version;override,public,void,set,version,string,version,super,set,version,version
MQTTConfiguration -> @Override     public void setVersion(String version);1537300723;Set to 3.1.1 to use MQTT version 3.1.1. Otherwise defaults to the 3.1 protocol version.;@Override_    public void setVersion(String version) {_        super.setVersion(version)__    };set,to,3,1,1,to,use,mqtt,version,3,1,1,otherwise,defaults,to,the,3,1,protocol,version;override,public,void,set,version,string,version,super,set,version,version
MQTTConfiguration -> @Override     public void setHost(URI host);1434369881;The URI of the MQTT broker to connect too - this component also supports SSL - e.g. ssl://127.0.0.1:8883;@Override_    public void setHost(URI host) {_        super.setHost(host)__    };the,uri,of,the,mqtt,broker,to,connect,too,this,component,also,supports,ssl,e,g,ssl,127,0,0,1,8883;override,public,void,set,host,uri,host,super,set,host,host
MQTTConfiguration -> @Override     public void setHost(URI host);1434370479;The URI of the MQTT broker to connect too - this component also supports SSL - e.g. ssl://127.0.0.1:8883;@Override_    public void setHost(URI host) {_        super.setHost(host)__    };the,uri,of,the,mqtt,broker,to,connect,too,this,component,also,supports,ssl,e,g,ssl,127,0,0,1,8883;override,public,void,set,host,uri,host,super,set,host,host
MQTTConfiguration -> @Override     public void setHost(URI host);1451410942;The URI of the MQTT broker to connect too - this component also supports SSL - e.g. ssl://127.0.0.1:8883;@Override_    public void setHost(URI host) {_        super.setHost(host)__    };the,uri,of,the,mqtt,broker,to,connect,too,this,component,also,supports,ssl,e,g,ssl,127,0,0,1,8883;override,public,void,set,host,uri,host,super,set,host,host
MQTTConfiguration -> @Override     public void setHost(URI host);1452076589;The URI of the MQTT broker to connect too - this component also supports SSL - e.g. ssl://127.0.0.1:8883;@Override_    public void setHost(URI host) {_        super.setHost(host)__    };the,uri,of,the,mqtt,broker,to,connect,too,this,component,also,supports,ssl,e,g,ssl,127,0,0,1,8883;override,public,void,set,host,uri,host,super,set,host,host
MQTTConfiguration -> @Override     public void setHost(URI host);1475890337;The URI of the MQTT broker to connect too - this component also supports SSL - e.g. ssl://127.0.0.1:8883;@Override_    public void setHost(URI host) {_        super.setHost(host)__    };the,uri,of,the,mqtt,broker,to,connect,too,this,component,also,supports,ssl,e,g,ssl,127,0,0,1,8883;override,public,void,set,host,uri,host,super,set,host,host
MQTTConfiguration -> @Override     public void setHost(URI host);1537290824;The URI of the MQTT broker to connect too - this component also supports SSL - e.g. ssl://127.0.0.1:8883;@Override_    public void setHost(URI host) {_        super.setHost(host)__    };the,uri,of,the,mqtt,broker,to,connect,too,this,component,also,supports,ssl,e,g,ssl,127,0,0,1,8883;override,public,void,set,host,uri,host,super,set,host,host
MQTTConfiguration -> @Override     public void setHost(URI host);1537300723;The URI of the MQTT broker to connect too - this component also supports SSL - e.g. ssl://127.0.0.1:8883;@Override_    public void setHost(URI host) {_        super.setHost(host)__    };the,uri,of,the,mqtt,broker,to,connect,too,this,component,also,supports,ssl,e,g,ssl,127,0,0,1,8883;override,public,void,set,host,uri,host,super,set,host,host
MQTTConfiguration -> public void setByDefaultRetain(boolean byDefaultRetain);1434369881;The default retain policy to be used on messages sent to the MQTT broker;public void setByDefaultRetain(boolean byDefaultRetain) {_        this.byDefaultRetain = byDefaultRetain__    };the,default,retain,policy,to,be,used,on,messages,sent,to,the,mqtt,broker;public,void,set,by,default,retain,boolean,by,default,retain,this,by,default,retain,by,default,retain
MQTTConfiguration -> public void setByDefaultRetain(boolean byDefaultRetain);1434370479;The default retain policy to be used on messages sent to the MQTT broker;public void setByDefaultRetain(boolean byDefaultRetain) {_        this.byDefaultRetain = byDefaultRetain__    };the,default,retain,policy,to,be,used,on,messages,sent,to,the,mqtt,broker;public,void,set,by,default,retain,boolean,by,default,retain,this,by,default,retain,by,default,retain
MQTTConfiguration -> public void setByDefaultRetain(boolean byDefaultRetain);1451410942;The default retain policy to be used on messages sent to the MQTT broker;public void setByDefaultRetain(boolean byDefaultRetain) {_        this.byDefaultRetain = byDefaultRetain__    };the,default,retain,policy,to,be,used,on,messages,sent,to,the,mqtt,broker;public,void,set,by,default,retain,boolean,by,default,retain,this,by,default,retain,by,default,retain
MQTTConfiguration -> public void setByDefaultRetain(boolean byDefaultRetain);1452076589;The default retain policy to be used on messages sent to the MQTT broker;public void setByDefaultRetain(boolean byDefaultRetain) {_        this.byDefaultRetain = byDefaultRetain__    };the,default,retain,policy,to,be,used,on,messages,sent,to,the,mqtt,broker;public,void,set,by,default,retain,boolean,by,default,retain,this,by,default,retain,by,default,retain
MQTTConfiguration -> public void setByDefaultRetain(boolean byDefaultRetain);1475890337;The default retain policy to be used on messages sent to the MQTT broker;public void setByDefaultRetain(boolean byDefaultRetain) {_        this.byDefaultRetain = byDefaultRetain__    };the,default,retain,policy,to,be,used,on,messages,sent,to,the,mqtt,broker;public,void,set,by,default,retain,boolean,by,default,retain,this,by,default,retain,by,default,retain
MQTTConfiguration -> public void setByDefaultRetain(boolean byDefaultRetain);1537290824;The default retain policy to be used on messages sent to the MQTT broker;public void setByDefaultRetain(boolean byDefaultRetain) {_        this.byDefaultRetain = byDefaultRetain__    };the,default,retain,policy,to,be,used,on,messages,sent,to,the,mqtt,broker;public,void,set,by,default,retain,boolean,by,default,retain,this,by,default,retain,by,default,retain
MQTTConfiguration -> public void setByDefaultRetain(boolean byDefaultRetain);1537300723;The default retain policy to be used on messages sent to the MQTT broker;public void setByDefaultRetain(boolean byDefaultRetain) {_        this.byDefaultRetain = byDefaultRetain__    };the,default,retain,policy,to,be,used,on,messages,sent,to,the,mqtt,broker;public,void,set,by,default,retain,boolean,by,default,retain,this,by,default,retain,by,default,retain
MQTTConfiguration -> @Override     public void setKeepAlive(short keepAlive);1434369881;Configures the Keep Alive timer in seconds. Defines the maximum time interval between messages received from a client._It enables the server to detect that the network connection to a client has dropped, without having to wait for the long TCP/IP timeout.;@Override_    public void setKeepAlive(short keepAlive) {_        super.setKeepAlive(keepAlive)__    };configures,the,keep,alive,timer,in,seconds,defines,the,maximum,time,interval,between,messages,received,from,a,client,it,enables,the,server,to,detect,that,the,network,connection,to,a,client,has,dropped,without,having,to,wait,for,the,long,tcp,ip,timeout;override,public,void,set,keep,alive,short,keep,alive,super,set,keep,alive,keep,alive
MQTTConfiguration -> @Override     public void setKeepAlive(short keepAlive);1434370479;Configures the Keep Alive timer in seconds. Defines the maximum time interval between messages received from a client._It enables the server to detect that the network connection to a client has dropped, without having to wait for the long TCP/IP timeout.;@Override_    public void setKeepAlive(short keepAlive) {_        super.setKeepAlive(keepAlive)__    };configures,the,keep,alive,timer,in,seconds,defines,the,maximum,time,interval,between,messages,received,from,a,client,it,enables,the,server,to,detect,that,the,network,connection,to,a,client,has,dropped,without,having,to,wait,for,the,long,tcp,ip,timeout;override,public,void,set,keep,alive,short,keep,alive,super,set,keep,alive,keep,alive
MQTTConfiguration -> @Override     public void setKeepAlive(short keepAlive);1451410942;Configures the Keep Alive timer in seconds. Defines the maximum time interval between messages received from a client._It enables the server to detect that the network connection to a client has dropped, without having to wait for the long TCP/IP timeout.;@Override_    public void setKeepAlive(short keepAlive) {_        super.setKeepAlive(keepAlive)__    };configures,the,keep,alive,timer,in,seconds,defines,the,maximum,time,interval,between,messages,received,from,a,client,it,enables,the,server,to,detect,that,the,network,connection,to,a,client,has,dropped,without,having,to,wait,for,the,long,tcp,ip,timeout;override,public,void,set,keep,alive,short,keep,alive,super,set,keep,alive,keep,alive
MQTTConfiguration -> @Override     public void setKeepAlive(short keepAlive);1452076589;Configures the Keep Alive timer in seconds. Defines the maximum time interval between messages received from a client._It enables the server to detect that the network connection to a client has dropped, without having to wait for the long TCP/IP timeout.;@Override_    public void setKeepAlive(short keepAlive) {_        super.setKeepAlive(keepAlive)__    };configures,the,keep,alive,timer,in,seconds,defines,the,maximum,time,interval,between,messages,received,from,a,client,it,enables,the,server,to,detect,that,the,network,connection,to,a,client,has,dropped,without,having,to,wait,for,the,long,tcp,ip,timeout;override,public,void,set,keep,alive,short,keep,alive,super,set,keep,alive,keep,alive
MQTTConfiguration -> @Override     public void setKeepAlive(short keepAlive);1475890337;Configures the Keep Alive timer in seconds. Defines the maximum time interval between messages received from a client._It enables the server to detect that the network connection to a client has dropped, without having to wait for the long TCP/IP timeout.;@Override_    public void setKeepAlive(short keepAlive) {_        super.setKeepAlive(keepAlive)__    };configures,the,keep,alive,timer,in,seconds,defines,the,maximum,time,interval,between,messages,received,from,a,client,it,enables,the,server,to,detect,that,the,network,connection,to,a,client,has,dropped,without,having,to,wait,for,the,long,tcp,ip,timeout;override,public,void,set,keep,alive,short,keep,alive,super,set,keep,alive,keep,alive
MQTTConfiguration -> @Override     public void setKeepAlive(short keepAlive);1537290824;Configures the Keep Alive timer in seconds. Defines the maximum time interval between messages received from a client._It enables the server to detect that the network connection to a client has dropped, without having to wait for the long TCP/IP timeout.;@Override_    public void setKeepAlive(short keepAlive) {_        super.setKeepAlive(keepAlive)__    };configures,the,keep,alive,timer,in,seconds,defines,the,maximum,time,interval,between,messages,received,from,a,client,it,enables,the,server,to,detect,that,the,network,connection,to,a,client,has,dropped,without,having,to,wait,for,the,long,tcp,ip,timeout;override,public,void,set,keep,alive,short,keep,alive,super,set,keep,alive,keep,alive
MQTTConfiguration -> @Override     public void setKeepAlive(short keepAlive);1537300723;Configures the Keep Alive timer in seconds. Defines the maximum time interval between messages received from a client._It enables the server to detect that the network connection to a client has dropped, without having to wait for the long TCP/IP timeout.;@Override_    public void setKeepAlive(short keepAlive) {_        super.setKeepAlive(keepAlive)__    };configures,the,keep,alive,timer,in,seconds,defines,the,maximum,time,interval,between,messages,received,from,a,client,it,enables,the,server,to,detect,that,the,network,connection,to,a,client,has,dropped,without,having,to,wait,for,the,long,tcp,ip,timeout;override,public,void,set,keep,alive,short,keep,alive,super,set,keep,alive,keep,alive
MQTTConfiguration -> @Override     public void setClientId(String clientId);1434369881;Use to set the client Id of the session._This is what an MQTT server uses to identify a session where setCleanSession(false)_ is being used._The id must be 23 characters or less. Defaults to auto generated id (based on your socket address, port and timestamp).;@Override_    public void setClientId(String clientId) {_        super.setClientId(clientId)__    };use,to,set,the,client,id,of,the,session,this,is,what,an,mqtt,server,uses,to,identify,a,session,where,set,clean,session,false,is,being,used,the,id,must,be,23,characters,or,less,defaults,to,auto,generated,id,based,on,your,socket,address,port,and,timestamp;override,public,void,set,client,id,string,client,id,super,set,client,id,client,id
MQTTConfiguration -> @Override     public void setClientId(String clientId);1434370479;Use to set the client Id of the session._This is what an MQTT server uses to identify a session where setCleanSession(false)_ is being used._The id must be 23 characters or less. Defaults to auto generated id (based on your socket address, port and timestamp).;@Override_    public void setClientId(String clientId) {_        super.setClientId(clientId)__    };use,to,set,the,client,id,of,the,session,this,is,what,an,mqtt,server,uses,to,identify,a,session,where,set,clean,session,false,is,being,used,the,id,must,be,23,characters,or,less,defaults,to,auto,generated,id,based,on,your,socket,address,port,and,timestamp;override,public,void,set,client,id,string,client,id,super,set,client,id,client,id
MQTTConfiguration -> @Override     public void setClientId(String clientId);1451410942;Use to set the client Id of the session._This is what an MQTT server uses to identify a session where setCleanSession(false)_ is being used._The id must be 23 characters or less. Defaults to auto generated id (based on your socket address, port and timestamp).;@Override_    public void setClientId(String clientId) {_        super.setClientId(clientId)__    };use,to,set,the,client,id,of,the,session,this,is,what,an,mqtt,server,uses,to,identify,a,session,where,set,clean,session,false,is,being,used,the,id,must,be,23,characters,or,less,defaults,to,auto,generated,id,based,on,your,socket,address,port,and,timestamp;override,public,void,set,client,id,string,client,id,super,set,client,id,client,id
MQTTConfiguration -> @Override     public void setClientId(String clientId);1452076589;Use to set the client Id of the session._This is what an MQTT server uses to identify a session where setCleanSession(false)_ is being used._The id must be 23 characters or less. Defaults to auto generated id (based on your socket address, port and timestamp).;@Override_    public void setClientId(String clientId) {_        super.setClientId(clientId)__    };use,to,set,the,client,id,of,the,session,this,is,what,an,mqtt,server,uses,to,identify,a,session,where,set,clean,session,false,is,being,used,the,id,must,be,23,characters,or,less,defaults,to,auto,generated,id,based,on,your,socket,address,port,and,timestamp;override,public,void,set,client,id,string,client,id,super,set,client,id,client,id
MQTTConfiguration -> @Override     public void setClientId(String clientId);1475890337;Use to set the client Id of the session._This is what an MQTT server uses to identify a session where setCleanSession(false)_ is being used._The id must be 23 characters or less. Defaults to auto generated id (based on your socket address, port and timestamp).;@Override_    public void setClientId(String clientId) {_        super.setClientId(clientId)__    };use,to,set,the,client,id,of,the,session,this,is,what,an,mqtt,server,uses,to,identify,a,session,where,set,clean,session,false,is,being,used,the,id,must,be,23,characters,or,less,defaults,to,auto,generated,id,based,on,your,socket,address,port,and,timestamp;override,public,void,set,client,id,string,client,id,super,set,client,id,client,id
MQTTConfiguration -> @Override     public void setClientId(String clientId);1537290824;Use to set the client Id of the session._This is what an MQTT server uses to identify a session where setCleanSession(false)_ is being used._The id must be 23 characters or less. Defaults to auto generated id (based on your socket address, port and timestamp).;@Override_    public void setClientId(String clientId) {_        super.setClientId(clientId)__    };use,to,set,the,client,id,of,the,session,this,is,what,an,mqtt,server,uses,to,identify,a,session,where,set,clean,session,false,is,being,used,the,id,must,be,23,characters,or,less,defaults,to,auto,generated,id,based,on,your,socket,address,port,and,timestamp;override,public,void,set,client,id,string,client,id,super,set,client,id,client,id
MQTTConfiguration -> @Override     public void setClientId(String clientId);1537300723;Use to set the client Id of the session._This is what an MQTT server uses to identify a session where setCleanSession(false)_ is being used._The id must be 23 characters or less. Defaults to auto generated id (based on your socket address, port and timestamp).;@Override_    public void setClientId(String clientId) {_        super.setClientId(clientId)__    };use,to,set,the,client,id,of,the,session,this,is,what,an,mqtt,server,uses,to,identify,a,session,where,set,clean,session,false,is,being,used,the,id,must,be,23,characters,or,less,defaults,to,auto,generated,id,based,on,your,socket,address,port,and,timestamp;override,public,void,set,client,id,string,client,id,super,set,client,id,client,id
MQTTConfiguration -> @Override     public void setConnectAttemptsMax(long connectAttemptsMax);1434369881;The maximum number of reconnect attempts before an error is reported back to the client on the first attempt_by the client to connect to a server. Set to -1 to use unlimited attempts. Defaults to -1.;@Override_    public void setConnectAttemptsMax(long connectAttemptsMax) {_        super.setConnectAttemptsMax(connectAttemptsMax)__    };the,maximum,number,of,reconnect,attempts,before,an,error,is,reported,back,to,the,client,on,the,first,attempt,by,the,client,to,connect,to,a,server,set,to,1,to,use,unlimited,attempts,defaults,to,1;override,public,void,set,connect,attempts,max,long,connect,attempts,max,super,set,connect,attempts,max,connect,attempts,max
MQTTConfiguration -> @Override     public void setConnectAttemptsMax(long connectAttemptsMax);1434370479;The maximum number of reconnect attempts before an error is reported back to the client on the first attempt_by the client to connect to a server. Set to -1 to use unlimited attempts. Defaults to -1.;@Override_    public void setConnectAttemptsMax(long connectAttemptsMax) {_        super.setConnectAttemptsMax(connectAttemptsMax)__    };the,maximum,number,of,reconnect,attempts,before,an,error,is,reported,back,to,the,client,on,the,first,attempt,by,the,client,to,connect,to,a,server,set,to,1,to,use,unlimited,attempts,defaults,to,1;override,public,void,set,connect,attempts,max,long,connect,attempts,max,super,set,connect,attempts,max,connect,attempts,max
MQTTConfiguration -> @Override     public void setConnectAttemptsMax(long connectAttemptsMax);1451410942;The maximum number of reconnect attempts before an error is reported back to the client on the first attempt_by the client to connect to a server. Set to -1 to use unlimited attempts. Defaults to -1.;@Override_    public void setConnectAttemptsMax(long connectAttemptsMax) {_        super.setConnectAttemptsMax(connectAttemptsMax)__    };the,maximum,number,of,reconnect,attempts,before,an,error,is,reported,back,to,the,client,on,the,first,attempt,by,the,client,to,connect,to,a,server,set,to,1,to,use,unlimited,attempts,defaults,to,1;override,public,void,set,connect,attempts,max,long,connect,attempts,max,super,set,connect,attempts,max,connect,attempts,max
MQTTConfiguration -> @Override     public void setConnectAttemptsMax(long connectAttemptsMax);1452076589;The maximum number of reconnect attempts before an error is reported back to the client on the first attempt_by the client to connect to a server. Set to -1 to use unlimited attempts. Defaults to -1.;@Override_    public void setConnectAttemptsMax(long connectAttemptsMax) {_        super.setConnectAttemptsMax(connectAttemptsMax)__    };the,maximum,number,of,reconnect,attempts,before,an,error,is,reported,back,to,the,client,on,the,first,attempt,by,the,client,to,connect,to,a,server,set,to,1,to,use,unlimited,attempts,defaults,to,1;override,public,void,set,connect,attempts,max,long,connect,attempts,max,super,set,connect,attempts,max,connect,attempts,max
MQTTConfiguration -> @Override     public void setConnectAttemptsMax(long connectAttemptsMax);1475890337;The maximum number of reconnect attempts before an error is reported back to the client on the first attempt_by the client to connect to a server. Set to -1 to use unlimited attempts. Defaults to -1.;@Override_    public void setConnectAttemptsMax(long connectAttemptsMax) {_        super.setConnectAttemptsMax(connectAttemptsMax)__    };the,maximum,number,of,reconnect,attempts,before,an,error,is,reported,back,to,the,client,on,the,first,attempt,by,the,client,to,connect,to,a,server,set,to,1,to,use,unlimited,attempts,defaults,to,1;override,public,void,set,connect,attempts,max,long,connect,attempts,max,super,set,connect,attempts,max,connect,attempts,max
MQTTConfiguration -> @Override     public void setConnectAttemptsMax(long connectAttemptsMax);1537290824;The maximum number of reconnect attempts before an error is reported back to the client on the first attempt_by the client to connect to a server. Set to -1 to use unlimited attempts. Defaults to -1.;@Override_    public void setConnectAttemptsMax(long connectAttemptsMax) {_        super.setConnectAttemptsMax(connectAttemptsMax)__    };the,maximum,number,of,reconnect,attempts,before,an,error,is,reported,back,to,the,client,on,the,first,attempt,by,the,client,to,connect,to,a,server,set,to,1,to,use,unlimited,attempts,defaults,to,1;override,public,void,set,connect,attempts,max,long,connect,attempts,max,super,set,connect,attempts,max,connect,attempts,max
MQTTConfiguration -> @Override     public void setConnectAttemptsMax(long connectAttemptsMax);1537300723;The maximum number of reconnect attempts before an error is reported back to the client on the first attempt_by the client to connect to a server. Set to -1 to use unlimited attempts. Defaults to -1.;@Override_    public void setConnectAttemptsMax(long connectAttemptsMax) {_        super.setConnectAttemptsMax(connectAttemptsMax)__    };the,maximum,number,of,reconnect,attempts,before,an,error,is,reported,back,to,the,client,on,the,first,attempt,by,the,client,to,connect,to,a,server,set,to,1,to,use,unlimited,attempts,defaults,to,1;override,public,void,set,connect,attempts,max,long,connect,attempts,max,super,set,connect,attempts,max,connect,attempts,max
MQTTConfiguration -> @Override     public void setUserName(String userName);1434369881;Username to be used for authentication against the MQTT broker;@Override_    public void setUserName(String userName) {_        super.setUserName(userName)__    };username,to,be,used,for,authentication,against,the,mqtt,broker;override,public,void,set,user,name,string,user,name,super,set,user,name,user,name
MQTTConfiguration -> @Override     public void setUserName(String userName);1434370479;Username to be used for authentication against the MQTT broker;@Override_    public void setUserName(String userName) {_        super.setUserName(userName)__    };username,to,be,used,for,authentication,against,the,mqtt,broker;override,public,void,set,user,name,string,user,name,super,set,user,name,user,name
MQTTConfiguration -> @Override     public void setUserName(String userName);1451410942;Username to be used for authentication against the MQTT broker;@Override_    public void setUserName(String userName) {_        super.setUserName(userName)__    };username,to,be,used,for,authentication,against,the,mqtt,broker;override,public,void,set,user,name,string,user,name,super,set,user,name,user,name
MQTTConfiguration -> @Override     public void setUserName(String userName);1452076589;Username to be used for authentication against the MQTT broker;@Override_    public void setUserName(String userName) {_        super.setUserName(userName)__    };username,to,be,used,for,authentication,against,the,mqtt,broker;override,public,void,set,user,name,string,user,name,super,set,user,name,user,name
MQTTConfiguration -> @Override     public void setUserName(String userName);1475890337;Username to be used for authentication against the MQTT broker;@Override_    public void setUserName(String userName) {_        super.setUserName(userName)__    };username,to,be,used,for,authentication,against,the,mqtt,broker;override,public,void,set,user,name,string,user,name,super,set,user,name,user,name
MQTTConfiguration -> @Override     public void setUserName(String userName);1537290824;Username to be used for authentication against the MQTT broker;@Override_    public void setUserName(String userName) {_        super.setUserName(userName)__    };username,to,be,used,for,authentication,against,the,mqtt,broker;override,public,void,set,user,name,string,user,name,super,set,user,name,user,name
MQTTConfiguration -> @Override     public void setUserName(String userName);1537300723;Username to be used for authentication against the MQTT broker;@Override_    public void setUserName(String userName) {_        super.setUserName(userName)__    };username,to,be,used,for,authentication,against,the,mqtt,broker;override,public,void,set,user,name,string,user,name,super,set,user,name,user,name
MQTTConfiguration -> public void setMqttRetainPropertyName(String mqttRetainPropertyName);1434369881;The property name to look for on an Exchange for an individual published message._If this is set (expects a Boolean value) - then the retain property will be set on the message sent to the MQTT message broker.;public void setMqttRetainPropertyName(String mqttRetainPropertyName) {_        this.mqttRetainPropertyName = mqttRetainPropertyName__    };the,property,name,to,look,for,on,an,exchange,for,an,individual,published,message,if,this,is,set,expects,a,boolean,value,then,the,retain,property,will,be,set,on,the,message,sent,to,the,mqtt,message,broker;public,void,set,mqtt,retain,property,name,string,mqtt,retain,property,name,this,mqtt,retain,property,name,mqtt,retain,property,name
MQTTConfiguration -> public void setMqttRetainPropertyName(String mqttRetainPropertyName);1434370479;The property name to look for on an Exchange for an individual published message._If this is set (expects a Boolean value) - then the retain property will be set on the message sent to the MQTT message broker.;public void setMqttRetainPropertyName(String mqttRetainPropertyName) {_        this.mqttRetainPropertyName = mqttRetainPropertyName__    };the,property,name,to,look,for,on,an,exchange,for,an,individual,published,message,if,this,is,set,expects,a,boolean,value,then,the,retain,property,will,be,set,on,the,message,sent,to,the,mqtt,message,broker;public,void,set,mqtt,retain,property,name,string,mqtt,retain,property,name,this,mqtt,retain,property,name,mqtt,retain,property,name
MQTTConfiguration -> public void setMqttRetainPropertyName(String mqttRetainPropertyName);1451410942;The property name to look for on an Exchange for an individual published message._If this is set (expects a Boolean value) - then the retain property will be set on the message sent to the MQTT message broker.;public void setMqttRetainPropertyName(String mqttRetainPropertyName) {_        this.mqttRetainPropertyName = mqttRetainPropertyName__    };the,property,name,to,look,for,on,an,exchange,for,an,individual,published,message,if,this,is,set,expects,a,boolean,value,then,the,retain,property,will,be,set,on,the,message,sent,to,the,mqtt,message,broker;public,void,set,mqtt,retain,property,name,string,mqtt,retain,property,name,this,mqtt,retain,property,name,mqtt,retain,property,name
MQTTConfiguration -> public void setMqttRetainPropertyName(String mqttRetainPropertyName);1452076589;The property name to look for on an Exchange for an individual published message._If this is set (expects a Boolean value) - then the retain property will be set on the message sent to the MQTT message broker.;public void setMqttRetainPropertyName(String mqttRetainPropertyName) {_        this.mqttRetainPropertyName = mqttRetainPropertyName__    };the,property,name,to,look,for,on,an,exchange,for,an,individual,published,message,if,this,is,set,expects,a,boolean,value,then,the,retain,property,will,be,set,on,the,message,sent,to,the,mqtt,message,broker;public,void,set,mqtt,retain,property,name,string,mqtt,retain,property,name,this,mqtt,retain,property,name,mqtt,retain,property,name
MQTTConfiguration -> public void setMqttRetainPropertyName(String mqttRetainPropertyName);1475890337;The property name to look for on an Exchange for an individual published message._If this is set (expects a Boolean value) - then the retain property will be set on the message sent to the MQTT message broker.;public void setMqttRetainPropertyName(String mqttRetainPropertyName) {_        this.mqttRetainPropertyName = mqttRetainPropertyName__    };the,property,name,to,look,for,on,an,exchange,for,an,individual,published,message,if,this,is,set,expects,a,boolean,value,then,the,retain,property,will,be,set,on,the,message,sent,to,the,mqtt,message,broker;public,void,set,mqtt,retain,property,name,string,mqtt,retain,property,name,this,mqtt,retain,property,name,mqtt,retain,property,name
MQTTConfiguration -> public void setMqttRetainPropertyName(String mqttRetainPropertyName);1537290824;The property name to look for on an Exchange for an individual published message._If this is set (expects a Boolean value) - then the retain property will be set on the message sent to the MQTT message broker.;public void setMqttRetainPropertyName(String mqttRetainPropertyName) {_        this.mqttRetainPropertyName = mqttRetainPropertyName__    };the,property,name,to,look,for,on,an,exchange,for,an,individual,published,message,if,this,is,set,expects,a,boolean,value,then,the,retain,property,will,be,set,on,the,message,sent,to,the,mqtt,message,broker;public,void,set,mqtt,retain,property,name,string,mqtt,retain,property,name,this,mqtt,retain,property,name,mqtt,retain,property,name
MQTTConfiguration -> public void setMqttRetainPropertyName(String mqttRetainPropertyName);1537300723;The property name to look for on an Exchange for an individual published message._If this is set (expects a Boolean value) - then the retain property will be set on the message sent to the MQTT message broker.;public void setMqttRetainPropertyName(String mqttRetainPropertyName) {_        this.mqttRetainPropertyName = mqttRetainPropertyName__    };the,property,name,to,look,for,on,an,exchange,for,an,individual,published,message,if,this,is,set,expects,a,boolean,value,then,the,retain,property,will,be,set,on,the,message,sent,to,the,mqtt,message,broker;public,void,set,mqtt,retain,property,name,string,mqtt,retain,property,name,this,mqtt,retain,property,name,mqtt,retain,property,name
MQTTConfiguration -> public void setSubscribeTopicNames(String subscribeTopicNames);1434369881;A comma-delimited list of Topics to subscribe to for messages._Note that each item of this list can contain MQTT wildcards ('\+' and/or '#'), in order to subscribe_to topics matching a certain pattern within a hierarchy._For example, '\+' is a wildcard for all topics at a level within the hierarchy,_so if a broker has topics "topics/one" and "topics/two", then "topics/\+" can be used to subscribe to both._A caveat to consider here is that if the broker adds "topics/three", the route would also begin to receive messages from that topic.;public void setSubscribeTopicNames(String subscribeTopicNames) {_        this.subscribeTopicNames = subscribeTopicNames__    };a,comma,delimited,list,of,topics,to,subscribe,to,for,messages,note,that,each,item,of,this,list,can,contain,mqtt,wildcards,and,or,in,order,to,subscribe,to,topics,matching,a,certain,pattern,within,a,hierarchy,for,example,is,a,wildcard,for,all,topics,at,a,level,within,the,hierarchy,so,if,a,broker,has,topics,topics,one,and,topics,two,then,topics,can,be,used,to,subscribe,to,both,a,caveat,to,consider,here,is,that,if,the,broker,adds,topics,three,the,route,would,also,begin,to,receive,messages,from,that,topic;public,void,set,subscribe,topic,names,string,subscribe,topic,names,this,subscribe,topic,names,subscribe,topic,names
MQTTConfiguration -> public void setSubscribeTopicNames(String subscribeTopicNames);1434370479;A comma-delimited list of Topics to subscribe to for messages._Note that each item of this list can contain MQTT wildcards (+ and/or #), in order to subscribe_to topics matching a certain pattern within a hierarchy._For example, + is a wildcard for all topics at a level within the hierarchy,_so if a broker has topics topics/one and topics/two, then topics/+ can be used to subscribe to both._A caveat to consider here is that if the broker adds topics/three, the route would also begin to receive messages from that topic.;public void setSubscribeTopicNames(String subscribeTopicNames) {_        this.subscribeTopicNames = subscribeTopicNames__    };a,comma,delimited,list,of,topics,to,subscribe,to,for,messages,note,that,each,item,of,this,list,can,contain,mqtt,wildcards,and,or,in,order,to,subscribe,to,topics,matching,a,certain,pattern,within,a,hierarchy,for,example,is,a,wildcard,for,all,topics,at,a,level,within,the,hierarchy,so,if,a,broker,has,topics,topics,one,and,topics,two,then,topics,can,be,used,to,subscribe,to,both,a,caveat,to,consider,here,is,that,if,the,broker,adds,topics,three,the,route,would,also,begin,to,receive,messages,from,that,topic;public,void,set,subscribe,topic,names,string,subscribe,topic,names,this,subscribe,topic,names,subscribe,topic,names
MQTTConfiguration -> public void setSubscribeTopicNames(String subscribeTopicNames);1451410942;A comma-delimited list of Topics to subscribe to for messages._Note that each item of this list can contain MQTT wildcards (+ and/or #), in order to subscribe_to topics matching a certain pattern within a hierarchy._For example, + is a wildcard for all topics at a level within the hierarchy,_so if a broker has topics topics/one and topics/two, then topics/+ can be used to subscribe to both._A caveat to consider here is that if the broker adds topics/three, the route would also begin to receive messages from that topic.;public void setSubscribeTopicNames(String subscribeTopicNames) {_        this.subscribeTopicNames = subscribeTopicNames__    };a,comma,delimited,list,of,topics,to,subscribe,to,for,messages,note,that,each,item,of,this,list,can,contain,mqtt,wildcards,and,or,in,order,to,subscribe,to,topics,matching,a,certain,pattern,within,a,hierarchy,for,example,is,a,wildcard,for,all,topics,at,a,level,within,the,hierarchy,so,if,a,broker,has,topics,topics,one,and,topics,two,then,topics,can,be,used,to,subscribe,to,both,a,caveat,to,consider,here,is,that,if,the,broker,adds,topics,three,the,route,would,also,begin,to,receive,messages,from,that,topic;public,void,set,subscribe,topic,names,string,subscribe,topic,names,this,subscribe,topic,names,subscribe,topic,names
MQTTConfiguration -> public void setSubscribeTopicNames(String subscribeTopicNames);1452076589;A comma-delimited list of Topics to subscribe to for messages._Note that each item of this list can contain MQTT wildcards (+ and/or #), in order to subscribe_to topics matching a certain pattern within a hierarchy._For example, + is a wildcard for all topics at a level within the hierarchy,_so if a broker has topics topics/one and topics/two, then topics/+ can be used to subscribe to both._A caveat to consider here is that if the broker adds topics/three, the route would also begin to receive messages from that topic.;public void setSubscribeTopicNames(String subscribeTopicNames) {_        this.subscribeTopicNames = subscribeTopicNames__    };a,comma,delimited,list,of,topics,to,subscribe,to,for,messages,note,that,each,item,of,this,list,can,contain,mqtt,wildcards,and,or,in,order,to,subscribe,to,topics,matching,a,certain,pattern,within,a,hierarchy,for,example,is,a,wildcard,for,all,topics,at,a,level,within,the,hierarchy,so,if,a,broker,has,topics,topics,one,and,topics,two,then,topics,can,be,used,to,subscribe,to,both,a,caveat,to,consider,here,is,that,if,the,broker,adds,topics,three,the,route,would,also,begin,to,receive,messages,from,that,topic;public,void,set,subscribe,topic,names,string,subscribe,topic,names,this,subscribe,topic,names,subscribe,topic,names
MQTTConfiguration -> public void setSubscribeTopicNames(String subscribeTopicNames);1475890337;A comma-delimited list of Topics to subscribe to for messages._Note that each item of this list can contain MQTT wildcards (+ and/or #), in order to subscribe_to topics matching a certain pattern within a hierarchy._For example, + is a wildcard for all topics at a level within the hierarchy,_so if a broker has topics topics/one and topics/two, then topics/+ can be used to subscribe to both._A caveat to consider here is that if the broker adds topics/three, the route would also begin to receive messages from that topic.;public void setSubscribeTopicNames(String subscribeTopicNames) {_        this.subscribeTopicNames = subscribeTopicNames__    };a,comma,delimited,list,of,topics,to,subscribe,to,for,messages,note,that,each,item,of,this,list,can,contain,mqtt,wildcards,and,or,in,order,to,subscribe,to,topics,matching,a,certain,pattern,within,a,hierarchy,for,example,is,a,wildcard,for,all,topics,at,a,level,within,the,hierarchy,so,if,a,broker,has,topics,topics,one,and,topics,two,then,topics,can,be,used,to,subscribe,to,both,a,caveat,to,consider,here,is,that,if,the,broker,adds,topics,three,the,route,would,also,begin,to,receive,messages,from,that,topic;public,void,set,subscribe,topic,names,string,subscribe,topic,names,this,subscribe,topic,names,subscribe,topic,names
MQTTConfiguration -> public void setSubscribeTopicNames(String subscribeTopicNames);1537290824;A comma-delimited list of Topics to subscribe to for messages._Note that each item of this list can contain MQTT wildcards (+ and/or #), in order to subscribe_to topics matching a certain pattern within a hierarchy._For example, + is a wildcard for all topics at a level within the hierarchy,_so if a broker has topics topics/one and topics/two, then topics/+ can be used to subscribe to both._A caveat to consider here is that if the broker adds topics/three, the route would also begin to receive messages from that topic.;public void setSubscribeTopicNames(String subscribeTopicNames) {_        this.subscribeTopicNames = subscribeTopicNames__    };a,comma,delimited,list,of,topics,to,subscribe,to,for,messages,note,that,each,item,of,this,list,can,contain,mqtt,wildcards,and,or,in,order,to,subscribe,to,topics,matching,a,certain,pattern,within,a,hierarchy,for,example,is,a,wildcard,for,all,topics,at,a,level,within,the,hierarchy,so,if,a,broker,has,topics,topics,one,and,topics,two,then,topics,can,be,used,to,subscribe,to,both,a,caveat,to,consider,here,is,that,if,the,broker,adds,topics,three,the,route,would,also,begin,to,receive,messages,from,that,topic;public,void,set,subscribe,topic,names,string,subscribe,topic,names,this,subscribe,topic,names,subscribe,topic,names
MQTTConfiguration -> public void setSubscribeTopicNames(String subscribeTopicNames);1537300723;A comma-delimited list of Topics to subscribe to for messages._Note that each item of this list can contain MQTT wildcards (+ and/or #), in order to subscribe_to topics matching a certain pattern within a hierarchy._For example, + is a wildcard for all topics at a level within the hierarchy,_so if a broker has topics topics/one and topics/two, then topics/+ can be used to subscribe to both._A caveat to consider here is that if the broker adds topics/three, the route would also begin to receive messages from that topic.;public void setSubscribeTopicNames(String subscribeTopicNames) {_        this.subscribeTopicNames = subscribeTopicNames__    };a,comma,delimited,list,of,topics,to,subscribe,to,for,messages,note,that,each,item,of,this,list,can,contain,mqtt,wildcards,and,or,in,order,to,subscribe,to,topics,matching,a,certain,pattern,within,a,hierarchy,for,example,is,a,wildcard,for,all,topics,at,a,level,within,the,hierarchy,so,if,a,broker,has,topics,topics,one,and,topics,two,then,topics,can,be,used,to,subscribe,to,both,a,caveat,to,consider,here,is,that,if,the,broker,adds,topics,three,the,route,would,also,begin,to,receive,messages,from,that,topic;public,void,set,subscribe,topic,names,string,subscribe,topic,names,this,subscribe,topic,names,subscribe,topic,names
MQTTConfiguration -> public void setConnectWaitInSeconds(int connectWaitInSeconds);1434369881;Delay in seconds the Component will wait for a connection to be established to the MQTT broker;public void setConnectWaitInSeconds(int connectWaitInSeconds) {_        this.connectWaitInSeconds = connectWaitInSeconds__    };delay,in,seconds,the,component,will,wait,for,a,connection,to,be,established,to,the,mqtt,broker;public,void,set,connect,wait,in,seconds,int,connect,wait,in,seconds,this,connect,wait,in,seconds,connect,wait,in,seconds
MQTTConfiguration -> public void setConnectWaitInSeconds(int connectWaitInSeconds);1434370479;Delay in seconds the Component will wait for a connection to be established to the MQTT broker;public void setConnectWaitInSeconds(int connectWaitInSeconds) {_        this.connectWaitInSeconds = connectWaitInSeconds__    };delay,in,seconds,the,component,will,wait,for,a,connection,to,be,established,to,the,mqtt,broker;public,void,set,connect,wait,in,seconds,int,connect,wait,in,seconds,this,connect,wait,in,seconds,connect,wait,in,seconds
MQTTConfiguration -> public void setConnectWaitInSeconds(int connectWaitInSeconds);1451410942;Delay in seconds the Component will wait for a connection to be established to the MQTT broker;public void setConnectWaitInSeconds(int connectWaitInSeconds) {_        this.connectWaitInSeconds = connectWaitInSeconds__    };delay,in,seconds,the,component,will,wait,for,a,connection,to,be,established,to,the,mqtt,broker;public,void,set,connect,wait,in,seconds,int,connect,wait,in,seconds,this,connect,wait,in,seconds,connect,wait,in,seconds
MQTTConfiguration -> public void setConnectWaitInSeconds(int connectWaitInSeconds);1452076589;Delay in seconds the Component will wait for a connection to be established to the MQTT broker;public void setConnectWaitInSeconds(int connectWaitInSeconds) {_        this.connectWaitInSeconds = connectWaitInSeconds__    };delay,in,seconds,the,component,will,wait,for,a,connection,to,be,established,to,the,mqtt,broker;public,void,set,connect,wait,in,seconds,int,connect,wait,in,seconds,this,connect,wait,in,seconds,connect,wait,in,seconds
MQTTConfiguration -> public void setConnectWaitInSeconds(int connectWaitInSeconds);1475890337;Delay in seconds the Component will wait for a connection to be established to the MQTT broker;public void setConnectWaitInSeconds(int connectWaitInSeconds) {_        this.connectWaitInSeconds = connectWaitInSeconds__    };delay,in,seconds,the,component,will,wait,for,a,connection,to,be,established,to,the,mqtt,broker;public,void,set,connect,wait,in,seconds,int,connect,wait,in,seconds,this,connect,wait,in,seconds,connect,wait,in,seconds
MQTTConfiguration -> public void setConnectWaitInSeconds(int connectWaitInSeconds);1537290824;Delay in seconds the Component will wait for a connection to be established to the MQTT broker;public void setConnectWaitInSeconds(int connectWaitInSeconds) {_        this.connectWaitInSeconds = connectWaitInSeconds__    };delay,in,seconds,the,component,will,wait,for,a,connection,to,be,established,to,the,mqtt,broker;public,void,set,connect,wait,in,seconds,int,connect,wait,in,seconds,this,connect,wait,in,seconds,connect,wait,in,seconds
MQTTConfiguration -> public void setConnectWaitInSeconds(int connectWaitInSeconds);1537300723;Delay in seconds the Component will wait for a connection to be established to the MQTT broker;public void setConnectWaitInSeconds(int connectWaitInSeconds) {_        this.connectWaitInSeconds = connectWaitInSeconds__    };delay,in,seconds,the,component,will,wait,for,a,connection,to,be,established,to,the,mqtt,broker;public,void,set,connect,wait,in,seconds,int,connect,wait,in,seconds,this,connect,wait,in,seconds,connect,wait,in,seconds
MQTTConfiguration -> @Override     public void setReceiveBufferSize(int receiveBufferSize);1434369881;Sets the size of the internal socket receive buffer. Defaults to 65536 (64k);@Override_    public void setReceiveBufferSize(int receiveBufferSize) {_        super.setReceiveBufferSize(receiveBufferSize)__    };sets,the,size,of,the,internal,socket,receive,buffer,defaults,to,65536,64k;override,public,void,set,receive,buffer,size,int,receive,buffer,size,super,set,receive,buffer,size,receive,buffer,size
MQTTConfiguration -> @Override     public void setReceiveBufferSize(int receiveBufferSize);1434370479;Sets the size of the internal socket receive buffer. Defaults to 65536 (64k);@Override_    public void setReceiveBufferSize(int receiveBufferSize) {_        super.setReceiveBufferSize(receiveBufferSize)__    };sets,the,size,of,the,internal,socket,receive,buffer,defaults,to,65536,64k;override,public,void,set,receive,buffer,size,int,receive,buffer,size,super,set,receive,buffer,size,receive,buffer,size
MQTTConfiguration -> @Override     public void setReceiveBufferSize(int receiveBufferSize);1451410942;Sets the size of the internal socket receive buffer. Defaults to 65536 (64k);@Override_    public void setReceiveBufferSize(int receiveBufferSize) {_        super.setReceiveBufferSize(receiveBufferSize)__    };sets,the,size,of,the,internal,socket,receive,buffer,defaults,to,65536,64k;override,public,void,set,receive,buffer,size,int,receive,buffer,size,super,set,receive,buffer,size,receive,buffer,size
MQTTConfiguration -> @Override     public void setReceiveBufferSize(int receiveBufferSize);1452076589;Sets the size of the internal socket receive buffer. Defaults to 65536 (64k);@Override_    public void setReceiveBufferSize(int receiveBufferSize) {_        super.setReceiveBufferSize(receiveBufferSize)__    };sets,the,size,of,the,internal,socket,receive,buffer,defaults,to,65536,64k;override,public,void,set,receive,buffer,size,int,receive,buffer,size,super,set,receive,buffer,size,receive,buffer,size
MQTTConfiguration -> @Override     public void setReceiveBufferSize(int receiveBufferSize);1475890337;Sets the size of the internal socket receive buffer. Defaults to 65536 (64k);@Override_    public void setReceiveBufferSize(int receiveBufferSize) {_        super.setReceiveBufferSize(receiveBufferSize)__    };sets,the,size,of,the,internal,socket,receive,buffer,defaults,to,65536,64k;override,public,void,set,receive,buffer,size,int,receive,buffer,size,super,set,receive,buffer,size,receive,buffer,size
MQTTConfiguration -> @Override     public void setReceiveBufferSize(int receiveBufferSize);1537290824;Sets the size of the internal socket receive buffer. Defaults to 65536 (64k);@Override_    public void setReceiveBufferSize(int receiveBufferSize) {_        super.setReceiveBufferSize(receiveBufferSize)__    };sets,the,size,of,the,internal,socket,receive,buffer,defaults,to,65536,64k;override,public,void,set,receive,buffer,size,int,receive,buffer,size,super,set,receive,buffer,size,receive,buffer,size
MQTTConfiguration -> @Override     public void setReceiveBufferSize(int receiveBufferSize);1537300723;Sets the size of the internal socket receive buffer. Defaults to 65536 (64k);@Override_    public void setReceiveBufferSize(int receiveBufferSize) {_        super.setReceiveBufferSize(receiveBufferSize)__    };sets,the,size,of,the,internal,socket,receive,buffer,defaults,to,65536,64k;override,public,void,set,receive,buffer,size,int,receive,buffer,size,super,set,receive,buffer,size,receive,buffer,size
