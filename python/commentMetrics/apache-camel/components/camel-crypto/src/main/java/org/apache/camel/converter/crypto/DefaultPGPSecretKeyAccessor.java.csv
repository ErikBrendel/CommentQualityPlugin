commented;modifiers;parameterAmount;loc;comment;code
false;public;2;14;;@Override public List<PGPSecretKeyAndPrivateKeyAndUserId> getSignerKeys(Exchange exchange, List<String> useridParts) throws Exception {     List<PGPSecretKeyAndPrivateKeyAndUserId> result = new ArrayList<>(3).     for (String useridPart : useridParts) {         List<PGPSecretKeyAndPrivateKeyAndUserId> partResult = userIdPart2SecretKeyList.get(useridPart).         if (partResult == null) {             partResult = PGPDataFormatUtil.findSecretKeysWithPrivateKeyAndUserId(Collections.singletonMap(useridPart, password), provider, pgpSecretKeyring).             userIdPart2SecretKeyList.put(useridPart, partResult).         }         result.addAll(partResult).     }     return result. }
false;public;2;12;;@Override public PGPPrivateKey getPrivateKey(Exchange exchange, long keyId) throws Exception {     Long keyIdLong = Long.valueOf(keyId).     PGPPrivateKey result = keyId2PrivateKey.get(keyIdLong).     if (result == null) {         result = PGPDataFormatUtil.findPrivateKeyWithkeyId(keyId, password, null, provider, pgpSecretKeyring).         if (result != null) {             keyId2PrivateKey.put(keyIdLong, result).         }     }     return result. }
