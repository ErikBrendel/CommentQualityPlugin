commented;modifiers;parameterAmount;loc;comment;code
false;protected;3;15;;protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {     ObjectHelper.notNull(getCamelContext(), "CamelContext").     DigitalSignatureConfiguration config = getConfiguration().copy().     setProperties(config, parameters).     config.setCamelContext(getCamelContext()).     try {         config.setCryptoOperation(new URI(remaining).getScheme()).     } catch (Exception e) {         throw new MalformedURLException(String.format("An invalid crypto uri was provided '%s'." + " Check the uri matches the format crypto:sign or crypto:verify", uri)).     }     return new DigitalSignatureEndpoint(uri, this, config). }
false;public;0;6;;public DigitalSignatureConfiguration getConfiguration() {     if (configuration == null) {         configuration = new DigitalSignatureConfiguration().     }     return configuration. }
true;public;1;3;/**  * To use the shared DigitalSignatureConfiguration as configuration  */ ;/**  * To use the shared DigitalSignatureConfiguration as configuration  */ public void setConfiguration(DigitalSignatureConfiguration configuration) {     this.configuration = configuration. }
