# id;timestamp;commentText;codeText;commentWords;codeWords
GoogleBigQuerySQLProducer -> @Override     public void process(Exchange exchange) throws Exception;1544005799;Process the exchange__The incoming exchange can be a grouped exchange in which case all the exchanges will be combined.__The incoming can be_<ul>_<li>A map where all map keys will map to field records. One map object maps to one bigquery row</li>_<li>A list of maps. Each entry in the list will map to one bigquery row</li>_</ul>_The incoming message is expected to be a List of Maps_The assumptions:_- All incoming records go into the same table_- Incoming records sorted by the timestamp;@Override_    public void process(Exchange exchange) throws Exception {_        String translatedQuery = SqlHelper.translateQuery(query, exchange)__        Map<String, Object> queryParameters = extractParameters(exchange)__        exchange.getMessage().setHeader(GoogleBigQueryConstants.TRANSLATED_QUERY, translatedQuery)__        Long affectedRows = executeSQL(translatedQuery, queryParameters)__        log.debug("The query {} affected {} rows", query, affectedRows)__        exchange.getMessage().setBody(affectedRows)__    };process,the,exchange,the,incoming,exchange,can,be,a,grouped,exchange,in,which,case,all,the,exchanges,will,be,combined,the,incoming,can,be,ul,li,a,map,where,all,map,keys,will,map,to,field,records,one,map,object,maps,to,one,bigquery,row,li,li,a,list,of,maps,each,entry,in,the,list,will,map,to,one,bigquery,row,li,ul,the,incoming,message,is,expected,to,be,a,list,of,maps,the,assumptions,all,incoming,records,go,into,the,same,table,incoming,records,sorted,by,the,timestamp;override,public,void,process,exchange,exchange,throws,exception,string,translated,query,sql,helper,translate,query,query,exchange,map,string,object,query,parameters,extract,parameters,exchange,exchange,get,message,set,header,google,big,query,constants,translated,query,long,affected,rows,execute,sql,translated,query,query,parameters,log,debug,the,query,affected,rows,query,affected,rows,exchange,get,message,set,body,affected,rows
GoogleBigQuerySQLProducer -> @Override     public void process(Exchange exchange) throws Exception;1544005986;Process the exchange__The incoming exchange can be a grouped exchange in which case all the exchanges will be combined.__The incoming can be_<ul>_<li>A map where all map keys will map to field records. One map object maps to one bigquery row</li>_<li>A list of maps. Each entry in the list will map to one bigquery row</li>_</ul>_The incoming message is expected to be a List of Maps_The assumptions:_- All incoming records go into the same table_- Incoming records sorted by the timestamp;@Override_    public void process(Exchange exchange) throws Exception {_        String translatedQuery = SqlHelper.translateQuery(query, exchange)__        Map<String, Object> queryParameters = extractParameters(exchange)__        exchange.getMessage().setHeader(GoogleBigQueryConstants.TRANSLATED_QUERY, translatedQuery)__        Long affectedRows = executeSQL(translatedQuery, queryParameters)__        log.debug("The query {} affected {} rows", query, affectedRows)__        exchange.getMessage().setBody(affectedRows)__    };process,the,exchange,the,incoming,exchange,can,be,a,grouped,exchange,in,which,case,all,the,exchanges,will,be,combined,the,incoming,can,be,ul,li,a,map,where,all,map,keys,will,map,to,field,records,one,map,object,maps,to,one,bigquery,row,li,li,a,list,of,maps,each,entry,in,the,list,will,map,to,one,bigquery,row,li,ul,the,incoming,message,is,expected,to,be,a,list,of,maps,the,assumptions,all,incoming,records,go,into,the,same,table,incoming,records,sorted,by,the,timestamp;override,public,void,process,exchange,exchange,throws,exception,string,translated,query,sql,helper,translate,query,query,exchange,map,string,object,query,parameters,extract,parameters,exchange,exchange,get,message,set,header,google,big,query,constants,translated,query,long,affected,rows,execute,sql,translated,query,query,parameters,log,debug,the,query,affected,rows,query,affected,rows,exchange,get,message,set,body,affected,rows
GoogleBigQuerySQLProducer -> @Override     public void process(Exchange exchange) throws Exception;1544006115;Process the exchange The incoming exchange can be a grouped exchange in_which case all the exchanges will be combined. The incoming can be_<ul>_<li>A map where all map keys will map to field records. One map object_maps to one bigquery row</li>_<li>A list of maps. Each entry in the list will map to one bigquery_row</li>_</ul>_The incoming message is expected to be a List of Maps The assumptions: -_All incoming records go into the same table - Incoming records sorted by_the timestamp;@Override_    public void process(Exchange exchange) throws Exception {_        String translatedQuery = SqlHelper.translateQuery(query, exchange)__        Map<String, Object> queryParameters = extractParameters(exchange)__        exchange.getMessage().setHeader(GoogleBigQueryConstants.TRANSLATED_QUERY, translatedQuery)__        Long affectedRows = executeSQL(translatedQuery, queryParameters)__        log.debug("The query {} affected {} rows", query, affectedRows)__        exchange.getMessage().setBody(affectedRows)__    };process,the,exchange,the,incoming,exchange,can,be,a,grouped,exchange,in,which,case,all,the,exchanges,will,be,combined,the,incoming,can,be,ul,li,a,map,where,all,map,keys,will,map,to,field,records,one,map,object,maps,to,one,bigquery,row,li,li,a,list,of,maps,each,entry,in,the,list,will,map,to,one,bigquery,row,li,ul,the,incoming,message,is,expected,to,be,a,list,of,maps,the,assumptions,all,incoming,records,go,into,the,same,table,incoming,records,sorted,by,the,timestamp;override,public,void,process,exchange,exchange,throws,exception,string,translated,query,sql,helper,translate,query,query,exchange,map,string,object,query,parameters,extract,parameters,exchange,exchange,get,message,set,header,google,big,query,constants,translated,query,long,affected,rows,execute,sql,translated,query,query,parameters,log,debug,the,query,affected,rows,query,affected,rows,exchange,get,message,set,body,affected,rows
