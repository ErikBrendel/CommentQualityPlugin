commented;modifiers;parameterAmount;loc;comment;code
false;public;1;14;;public void parseRemaining(String remaining) {     String[] parts = remaining.split(":").     if (parts.length < 2) {         throw new IllegalArgumentException("Google BigQuery Endpoint format \"projectId:datasetId[:tableName]\"").     }     int c = 0.     projectId = parts[c++].     datasetId = parts[c++].     if (parts.length > 2) {         tableId = parts[c++].     } }
true;public;0;3;/**  * ConnectionFactory to obtain connection to Bigquery Service. If non provided the default will be used.  */ ;/**  * ConnectionFactory to obtain connection to Bigquery Service. If non provided the default will be used.  */ public GoogleBigQueryConnectionFactory getConnectionFactory() {     return connectionFactory. }
false;public;1;3;;public void setConnectionFactory(GoogleBigQueryConnectionFactory connectionFactory) {     this.connectionFactory = connectionFactory. }
false;public;0;3;;public String getUseAsInsertId() {     return useAsInsertId. }
false;public;1;4;;public GoogleBigQueryConfiguration setUseAsInsertId(String useAsInsertId) {     this.useAsInsertId = useAsInsertId.     return this. }
false;public;0;3;;public String getProjectId() {     return projectId. }
false;public;1;4;;public GoogleBigQueryConfiguration setProjectId(String projectId) {     this.projectId = projectId.     return this. }
false;public;0;3;;public String getDatasetId() {     return datasetId. }
false;public;1;4;;public GoogleBigQueryConfiguration setDatasetId(String datasetId) {     this.datasetId = datasetId.     return this. }
false;public;0;3;;public String getTableId() {     return tableId. }
false;public;1;4;;public GoogleBigQueryConfiguration setTableId(String tableId) {     this.tableId = tableId.     return this. }
