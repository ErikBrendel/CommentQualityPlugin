# id;timestamp;commentText;codeText;commentWords;codeWords
StaxStreamXMLReader -> public void setProperty(String name, Object value) throws SAXNotRecognizedException, SAXNotSupportedException;1321972216;Throws a <code>SAXNotRecognizedException</code> exception when the given property does not signify a lexical_handler. The property name for a lexical handler is <code>http://xml.org/sax/properties/lexical-handler</code>.;public void setProperty(String name, Object value) throws SAXNotRecognizedException, SAXNotSupportedException {_		if ("http://xml.org/sax/properties/lexical-handler".equals(name)) {_			lexicalHandler = (LexicalHandler) value__		}_		else {_			throw new SAXNotRecognizedException(name)__		}_	};throws,a,code,saxnot,recognized,exception,code,exception,when,the,given,property,does,not,signify,a,lexical,handler,the,property,name,for,a,lexical,handler,is,code,http,xml,org,sax,properties,lexical,handler,code;public,void,set,property,string,name,object,value,throws,saxnot,recognized,exception,saxnot,supported,exception,if,http,xml,org,sax,properties,lexical,handler,equals,name,lexical,handler,lexical,handler,value,else,throw,new,saxnot,recognized,exception,name
StaxStreamXMLReader -> public void setProperty(String name, Object value) throws SAXNotRecognizedException, SAXNotSupportedException;1524063178;Throws a <code>SAXNotRecognizedException</code> exception when the given property does not signify a lexical_handler. The property name for a lexical handler is <code>http://xml.org/sax/properties/lexical-handler</code>.;public void setProperty(String name, Object value) throws SAXNotRecognizedException, SAXNotSupportedException {_		if ("http://xml.org/sax/properties/lexical-handler".equals(name)) {_			lexicalHandler = (LexicalHandler) value__		}_		else {_			throw new SAXNotRecognizedException(name)__		}_	};throws,a,code,saxnot,recognized,exception,code,exception,when,the,given,property,does,not,signify,a,lexical,handler,the,property,name,for,a,lexical,handler,is,code,http,xml,org,sax,properties,lexical,handler,code;public,void,set,property,string,name,object,value,throws,saxnot,recognized,exception,saxnot,supported,exception,if,http,xml,org,sax,properties,lexical,handler,equals,name,lexical,handler,lexical,handler,value,else,throw,new,saxnot,recognized,exception,name
StaxStreamXMLReader -> public void setProperty(String name, Object value) throws SAXNotRecognizedException, SAXNotSupportedException;1537290824;Throws a <code>SAXNotRecognizedException</code> exception when the given property does not signify a lexical_handler. The property name for a lexical handler is <code>http://xml.org/sax/properties/lexical-handler</code>.;public void setProperty(String name, Object value) throws SAXNotRecognizedException, SAXNotSupportedException {_		if ("http://xml.org/sax/properties/lexical-handler".equals(name)) {_			lexicalHandler = (LexicalHandler) value__		}_		else {_			throw new SAXNotRecognizedException(name)__		}_	};throws,a,code,saxnot,recognized,exception,code,exception,when,the,given,property,does,not,signify,a,lexical,handler,the,property,name,for,a,lexical,handler,is,code,http,xml,org,sax,properties,lexical,handler,code;public,void,set,property,string,name,object,value,throws,saxnot,recognized,exception,saxnot,supported,exception,if,http,xml,org,sax,properties,lexical,handler,equals,name,lexical,handler,lexical,handler,value,else,throw,new,saxnot,recognized,exception,name
StaxStreamXMLReader -> protected boolean hasNamespacePrefixesFeature();1321972216;Indicates whether the SAX feature <code>http://xml.org/sax/features/namespaces-prefixes</code> is turned on.;protected boolean hasNamespacePrefixesFeature() {_		return this.namespacePrefixesFeature__	};indicates,whether,the,sax,feature,code,http,xml,org,sax,features,namespaces,prefixes,code,is,turned,on;protected,boolean,has,namespace,prefixes,feature,return,this,namespace,prefixes,feature
StaxStreamXMLReader -> protected boolean hasNamespacePrefixesFeature();1524063178;Indicates whether the SAX feature <code>http://xml.org/sax/features/namespaces-prefixes</code> is turned on.;protected boolean hasNamespacePrefixesFeature() {_		return this.namespacePrefixesFeature__	};indicates,whether,the,sax,feature,code,http,xml,org,sax,features,namespaces,prefixes,code,is,turned,on;protected,boolean,has,namespace,prefixes,feature,return,this,namespace,prefixes,feature
StaxStreamXMLReader -> protected boolean hasNamespacePrefixesFeature();1537290824;Indicates whether the SAX feature <code>http://xml.org/sax/features/namespaces-prefixes</code> is turned on.;protected boolean hasNamespacePrefixesFeature() {_		return this.namespacePrefixesFeature__	};indicates,whether,the,sax,feature,code,http,xml,org,sax,features,namespaces,prefixes,code,is,turned,on;protected,boolean,has,namespace,prefixes,feature,return,this,namespace,prefixes,feature
StaxStreamXMLReader -> public Object getProperty(String name) throws SAXNotRecognizedException, SAXNotSupportedException;1321972216;Throws a <code>SAXNotRecognizedException</code> exception when the given property does not signify a lexical_handler. The property name for a lexical handler is <code>http://xml.org/sax/properties/lexical-handler</code>.;public Object getProperty(String name) throws SAXNotRecognizedException, SAXNotSupportedException {_		if ("http://xml.org/sax/properties/lexical-handler".equals(name)) {_			return lexicalHandler__		}_		else {_			throw new SAXNotRecognizedException(name)__		}_	};throws,a,code,saxnot,recognized,exception,code,exception,when,the,given,property,does,not,signify,a,lexical,handler,the,property,name,for,a,lexical,handler,is,code,http,xml,org,sax,properties,lexical,handler,code;public,object,get,property,string,name,throws,saxnot,recognized,exception,saxnot,supported,exception,if,http,xml,org,sax,properties,lexical,handler,equals,name,return,lexical,handler,else,throw,new,saxnot,recognized,exception,name
StaxStreamXMLReader -> public Object getProperty(String name) throws SAXNotRecognizedException, SAXNotSupportedException;1524063178;Throws a <code>SAXNotRecognizedException</code> exception when the given property does not signify a lexical_handler. The property name for a lexical handler is <code>http://xml.org/sax/properties/lexical-handler</code>.;public Object getProperty(String name) throws SAXNotRecognizedException, SAXNotSupportedException {_		if ("http://xml.org/sax/properties/lexical-handler".equals(name)) {_			return lexicalHandler__		}_		else {_			throw new SAXNotRecognizedException(name)__		}_	};throws,a,code,saxnot,recognized,exception,code,exception,when,the,given,property,does,not,signify,a,lexical,handler,the,property,name,for,a,lexical,handler,is,code,http,xml,org,sax,properties,lexical,handler,code;public,object,get,property,string,name,throws,saxnot,recognized,exception,saxnot,supported,exception,if,http,xml,org,sax,properties,lexical,handler,equals,name,return,lexical,handler,else,throw,new,saxnot,recognized,exception,name
StaxStreamXMLReader -> public Object getProperty(String name) throws SAXNotRecognizedException, SAXNotSupportedException;1537290824;Throws a <code>SAXNotRecognizedException</code> exception when the given property does not signify a lexical_handler. The property name for a lexical handler is <code>http://xml.org/sax/properties/lexical-handler</code>.;public Object getProperty(String name) throws SAXNotRecognizedException, SAXNotSupportedException {_		if ("http://xml.org/sax/properties/lexical-handler".equals(name)) {_			return lexicalHandler__		}_		else {_			throw new SAXNotRecognizedException(name)__		}_	};throws,a,code,saxnot,recognized,exception,code,exception,when,the,given,property,does,not,signify,a,lexical,handler,the,property,name,for,a,lexical,handler,is,code,http,xml,org,sax,properties,lexical,handler,code;public,object,get,property,string,name,throws,saxnot,recognized,exception,saxnot,supported,exception,if,http,xml,org,sax,properties,lexical,handler,equals,name,return,lexical,handler,else,throw,new,saxnot,recognized,exception,name
StaxStreamXMLReader -> public final void parse(InputSource ignored) throws SAXException;1321972216;Parse the StAX XML reader passed at construction-time._<p><b>NOTE:</b>: The given <code>InputSource</code> is not read, but ignored._@param ignored is ignored_@throws SAXException a SAX exception, possibly wrapping a <code>XMLStreamException</code>;public final void parse(InputSource ignored) throws SAXException {_		parse()__	};parse,the,st,ax,xml,reader,passed,at,construction,time,p,b,note,b,the,given,code,input,source,code,is,not,read,but,ignored,param,ignored,is,ignored,throws,saxexception,a,sax,exception,possibly,wrapping,a,code,xmlstream,exception,code;public,final,void,parse,input,source,ignored,throws,saxexception,parse
StaxStreamXMLReader -> public final void parse(InputSource ignored) throws SAXException;1524063178;Parse the StAX XML reader passed at construction-time._<p><b>NOTE:</b>: The given <code>InputSource</code> is not read, but ignored._@param ignored is ignored_@throws SAXException a SAX exception, possibly wrapping a <code>XMLStreamException</code>;public final void parse(InputSource ignored) throws SAXException {_		parse()__	};parse,the,st,ax,xml,reader,passed,at,construction,time,p,b,note,b,the,given,code,input,source,code,is,not,read,but,ignored,param,ignored,is,ignored,throws,saxexception,a,sax,exception,possibly,wrapping,a,code,xmlstream,exception,code;public,final,void,parse,input,source,ignored,throws,saxexception,parse
StaxStreamXMLReader -> public final void parse(InputSource ignored) throws SAXException;1537290824;Parse the StAX XML reader passed at construction-time._<p><b>NOTE:</b>: The given <code>InputSource</code> is not read, but ignored._@param ignored is ignored_@throws SAXException a SAX exception, possibly wrapping a <code>XMLStreamException</code>;public final void parse(InputSource ignored) throws SAXException {_		parse()__	};parse,the,st,ax,xml,reader,passed,at,construction,time,p,b,note,b,the,given,code,input,source,code,is,not,read,but,ignored,param,ignored,is,ignored,throws,saxexception,a,sax,exception,possibly,wrapping,a,code,xmlstream,exception,code;public,final,void,parse,input,source,ignored,throws,saxexception,parse
StaxStreamXMLReader -> public final void parse(String ignored) throws SAXException;1321972216;Parse the StAX XML reader passed at construction-time._<p><b>NOTE:</b>: The given system identifier is not read, but ignored._@param ignored is ignored_@throws SAXException A SAX exception, possibly wrapping a <code>XMLStreamException</code>;public final void parse(String ignored) throws SAXException {_		parse()__	};parse,the,st,ax,xml,reader,passed,at,construction,time,p,b,note,b,the,given,system,identifier,is,not,read,but,ignored,param,ignored,is,ignored,throws,saxexception,a,sax,exception,possibly,wrapping,a,code,xmlstream,exception,code;public,final,void,parse,string,ignored,throws,saxexception,parse
StaxStreamXMLReader -> public final void parse(String ignored) throws SAXException;1524063178;Parse the StAX XML reader passed at construction-time._<p><b>NOTE:</b>: The given system identifier is not read, but ignored._@param ignored is ignored_@throws SAXException A SAX exception, possibly wrapping a <code>XMLStreamException</code>;public final void parse(String ignored) throws SAXException {_		parse()__	};parse,the,st,ax,xml,reader,passed,at,construction,time,p,b,note,b,the,given,system,identifier,is,not,read,but,ignored,param,ignored,is,ignored,throws,saxexception,a,sax,exception,possibly,wrapping,a,code,xmlstream,exception,code;public,final,void,parse,string,ignored,throws,saxexception,parse
StaxStreamXMLReader -> public final void parse(String ignored) throws SAXException;1537290824;Parse the StAX XML reader passed at construction-time._<p><b>NOTE:</b>: The given system identifier is not read, but ignored._@param ignored is ignored_@throws SAXException A SAX exception, possibly wrapping a <code>XMLStreamException</code>;public final void parse(String ignored) throws SAXException {_		parse()__	};parse,the,st,ax,xml,reader,passed,at,construction,time,p,b,note,b,the,given,system,identifier,is,not,read,but,ignored,param,ignored,is,ignored,throws,saxexception,a,sax,exception,possibly,wrapping,a,code,xmlstream,exception,code;public,final,void,parse,string,ignored,throws,saxexception,parse
StaxStreamXMLReader -> protected boolean hasNamespacesFeature();1321972216;Indicates whether the SAX feature <code>http://xml.org/sax/features/namespaces</code> is turned on.;protected boolean hasNamespacesFeature() {_		return this.namespacesFeature__	};indicates,whether,the,sax,feature,code,http,xml,org,sax,features,namespaces,code,is,turned,on;protected,boolean,has,namespaces,feature,return,this,namespaces,feature
StaxStreamXMLReader -> protected boolean hasNamespacesFeature();1524063178;Indicates whether the SAX feature <code>http://xml.org/sax/features/namespaces</code> is turned on.;protected boolean hasNamespacesFeature() {_		return this.namespacesFeature__	};indicates,whether,the,sax,feature,code,http,xml,org,sax,features,namespaces,code,is,turned,on;protected,boolean,has,namespaces,feature,return,this,namespaces,feature
StaxStreamXMLReader -> protected boolean hasNamespacesFeature();1537290824;Indicates whether the SAX feature <code>http://xml.org/sax/features/namespaces</code> is turned on.;protected boolean hasNamespacesFeature() {_		return this.namespacesFeature__	};indicates,whether,the,sax,feature,code,http,xml,org,sax,features,namespaces,code,is,turned,on;protected,boolean,has,namespaces,feature,return,this,namespaces,feature
StaxStreamXMLReader -> protected String toQualifiedName(QName qName);1321972216;Convert a <code>QName</code> to a qualified name, as used by DOM and SAX._The returned string has a format of <code>prefix:localName</code> if the_prefix is set, or just <code>localName</code> if not._@param qName the <code>QName</code>_@return the qualified name;protected String toQualifiedName(QName qName) {_		String prefix = qName.getPrefix()__		if (!ObjectHelper.isNotEmpty(prefix)) {_			return qName.getLocalPart()__		}_		else {_			return prefix + ":" + qName.getLocalPart()__		}_	};convert,a,code,qname,code,to,a,qualified,name,as,used,by,dom,and,sax,the,returned,string,has,a,format,of,code,prefix,local,name,code,if,the,prefix,is,set,or,just,code,local,name,code,if,not,param,q,name,the,code,qname,code,return,the,qualified,name;protected,string,to,qualified,name,qname,q,name,string,prefix,q,name,get,prefix,if,object,helper,is,not,empty,prefix,return,q,name,get,local,part,else,return,prefix,q,name,get,local,part
StaxStreamXMLReader -> protected String toQualifiedName(QName qName);1524063178;Convert a <code>QName</code> to a qualified name, as used by DOM and SAX._The returned string has a format of <code>prefix:localName</code> if the_prefix is set, or just <code>localName</code> if not._@param qName the <code>QName</code>_@return the qualified name;protected String toQualifiedName(QName qName) {_		String prefix = qName.getPrefix()__		if (!ObjectHelper.isNotEmpty(prefix)) {_			return qName.getLocalPart()__		}_		else {_			return prefix + ":" + qName.getLocalPart()__		}_	};convert,a,code,qname,code,to,a,qualified,name,as,used,by,dom,and,sax,the,returned,string,has,a,format,of,code,prefix,local,name,code,if,the,prefix,is,set,or,just,code,local,name,code,if,not,param,q,name,the,code,qname,code,return,the,qualified,name;protected,string,to,qualified,name,qname,q,name,string,prefix,q,name,get,prefix,if,object,helper,is,not,empty,prefix,return,q,name,get,local,part,else,return,prefix,q,name,get,local,part
StaxStreamXMLReader -> protected String toQualifiedName(QName qName);1537290824;Convert a <code>QName</code> to a qualified name, as used by DOM and SAX._The returned string has a format of <code>prefix:localName</code> if the_prefix is set, or just <code>localName</code> if not._@param qName the <code>QName</code>_@return the qualified name;protected String toQualifiedName(QName qName) {_		String prefix = qName.getPrefix()__		if (!ObjectHelper.isNotEmpty(prefix)) {_			return qName.getLocalPart()__		}_		else {_			return prefix + ":" + qName.getLocalPart()__		}_	};convert,a,code,qname,code,to,a,qualified,name,as,used,by,dom,and,sax,the,returned,string,has,a,format,of,code,prefix,local,name,code,if,the,prefix,is,set,or,just,code,local,name,code,if,not,param,q,name,the,code,qname,code,return,the,qualified,name;protected,string,to,qualified,name,qname,q,name,string,prefix,q,name,get,prefix,if,object,helper,is,not,empty,prefix,return,q,name,get,local,part,else,return,prefix,q,name,get,local,part
StaxStreamXMLReader -> protected void endPrefixMapping(String prefix) throws SAXException;1321972216;Ends the prefix mapping for the given prefix._@see org.xml.sax.ContentHandler#endPrefixMapping(String);protected void endPrefixMapping(String prefix) throws SAXException {_		if (getContentHandler() != null) {_			if (namespaces.containsKey(prefix)) {_				getContentHandler().endPrefixMapping(prefix)__				namespaces.remove(prefix)__			}_		}_	};ends,the,prefix,mapping,for,the,given,prefix,see,org,xml,sax,content,handler,end,prefix,mapping,string;protected,void,end,prefix,mapping,string,prefix,throws,saxexception,if,get,content,handler,null,if,namespaces,contains,key,prefix,get,content,handler,end,prefix,mapping,prefix,namespaces,remove,prefix
StaxStreamXMLReader -> protected void endPrefixMapping(String prefix) throws SAXException;1524063178;Ends the prefix mapping for the given prefix._@see org.xml.sax.ContentHandler#endPrefixMapping(String);protected void endPrefixMapping(String prefix) throws SAXException {_		if (getContentHandler() != null) {_			if (namespaces.containsKey(prefix)) {_				getContentHandler().endPrefixMapping(prefix)__				namespaces.remove(prefix)__			}_		}_	};ends,the,prefix,mapping,for,the,given,prefix,see,org,xml,sax,content,handler,end,prefix,mapping,string;protected,void,end,prefix,mapping,string,prefix,throws,saxexception,if,get,content,handler,null,if,namespaces,contains,key,prefix,get,content,handler,end,prefix,mapping,prefix,namespaces,remove,prefix
StaxStreamXMLReader -> protected void endPrefixMapping(String prefix) throws SAXException;1537290824;Ends the prefix mapping for the given prefix._@see org.xml.sax.ContentHandler#endPrefixMapping(String);protected void endPrefixMapping(String prefix) throws SAXException {_		if (getContentHandler() != null) {_			if (namespaces.containsKey(prefix)) {_				getContentHandler().endPrefixMapping(prefix)__				namespaces.remove(prefix)__			}_		}_	};ends,the,prefix,mapping,for,the,given,prefix,see,org,xml,sax,content,handler,end,prefix,mapping,string;protected,void,end,prefix,mapping,string,prefix,throws,saxexception,if,get,content,handler,null,if,namespaces,contains,key,prefix,get,content,handler,end,prefix,mapping,prefix,namespaces,remove,prefix
StaxStreamXMLReader -> StaxStreamXMLReader(XMLStreamReader reader);1321972216;Constructs a new instance of the <code>StaxStreamXmlReader</code> that reads from the given_<code>XMLStreamReader</code>.  The supplied stream reader must be in <code>XMLStreamConstants.START_DOCUMENT</code>_or <code>XMLStreamConstants.START_ELEMENT</code> state.__@param reader the <code>XMLEventReader</code> to read from_@throws IllegalStateException if the reader is not at the start of a document or element;StaxStreamXMLReader(XMLStreamReader reader) {_		if (reader == null) {_            throw new IllegalArgumentException("'reader' must not be null")__        }_		int event = reader.getEventType()__		if (!(event == XMLStreamConstants.START_DOCUMENT || event == XMLStreamConstants.START_ELEMENT)) {_			throw new IllegalStateException("XMLEventReader not at start of document or element")__		}_		this.reader = reader__	};constructs,a,new,instance,of,the,code,stax,stream,xml,reader,code,that,reads,from,the,given,code,xmlstream,reader,code,the,supplied,stream,reader,must,be,in,code,xmlstream,constants,code,or,code,xmlstream,constants,code,state,param,reader,the,code,xmlevent,reader,code,to,read,from,throws,illegal,state,exception,if,the,reader,is,not,at,the,start,of,a,document,or,element;stax,stream,xmlreader,xmlstream,reader,reader,if,reader,null,throw,new,illegal,argument,exception,reader,must,not,be,null,int,event,reader,get,event,type,if,event,xmlstream,constants,event,xmlstream,constants,throw,new,illegal,state,exception,xmlevent,reader,not,at,start,of,document,or,element,this,reader,reader
StaxStreamXMLReader -> StaxStreamXMLReader(XMLStreamReader reader);1524063178;Constructs a new instance of the <code>StaxStreamXmlReader</code> that reads from the given_<code>XMLStreamReader</code>.  The supplied stream reader must be in <code>XMLStreamConstants.START_DOCUMENT</code>_or <code>XMLStreamConstants.START_ELEMENT</code> state.__@param reader the <code>XMLEventReader</code> to read from_@throws IllegalStateException if the reader is not at the start of a document or element;StaxStreamXMLReader(XMLStreamReader reader) {_		if (reader == null) {_            throw new IllegalArgumentException("'reader' must not be null")__        }_		int event = reader.getEventType()__		if (!(event == XMLStreamConstants.START_DOCUMENT || event == XMLStreamConstants.START_ELEMENT)) {_			throw new IllegalStateException("XMLEventReader not at start of document or element")__		}_		this.reader = reader__	};constructs,a,new,instance,of,the,code,stax,stream,xml,reader,code,that,reads,from,the,given,code,xmlstream,reader,code,the,supplied,stream,reader,must,be,in,code,xmlstream,constants,code,or,code,xmlstream,constants,code,state,param,reader,the,code,xmlevent,reader,code,to,read,from,throws,illegal,state,exception,if,the,reader,is,not,at,the,start,of,a,document,or,element;stax,stream,xmlreader,xmlstream,reader,reader,if,reader,null,throw,new,illegal,argument,exception,reader,must,not,be,null,int,event,reader,get,event,type,if,event,xmlstream,constants,event,xmlstream,constants,throw,new,illegal,state,exception,xmlevent,reader,not,at,start,of,document,or,element,this,reader,reader
StaxStreamXMLReader -> StaxStreamXMLReader(XMLStreamReader reader);1537290824;Constructs a new instance of the <code>StaxStreamXmlReader</code> that reads from the given_<code>XMLStreamReader</code>.  The supplied stream reader must be in <code>XMLStreamConstants.START_DOCUMENT</code>_or <code>XMLStreamConstants.START_ELEMENT</code> state.__@param reader the <code>XMLEventReader</code> to read from_@throws IllegalStateException if the reader is not at the start of a document or element;StaxStreamXMLReader(XMLStreamReader reader) {_		if (reader == null) {_            throw new IllegalArgumentException("'reader' must not be null")__        }_		int event = reader.getEventType()__		if (!(event == XMLStreamConstants.START_DOCUMENT || event == XMLStreamConstants.START_ELEMENT)) {_			throw new IllegalStateException("XMLEventReader not at start of document or element")__		}_		this.reader = reader__	};constructs,a,new,instance,of,the,code,stax,stream,xml,reader,code,that,reads,from,the,given,code,xmlstream,reader,code,the,supplied,stream,reader,must,be,in,code,xmlstream,constants,code,or,code,xmlstream,constants,code,state,param,reader,the,code,xmlevent,reader,code,to,read,from,throws,illegal,state,exception,if,the,reader,is,not,at,the,start,of,a,document,or,element;stax,stream,xmlreader,xmlstream,reader,reader,if,reader,null,throw,new,illegal,argument,exception,reader,must,not,be,null,int,event,reader,get,event,type,if,event,xmlstream,constants,event,xmlstream,constants,throw,new,illegal,state,exception,xmlevent,reader,not,at,start,of,document,or,element,this,reader,reader
StaxStreamXMLReader -> protected void startPrefixMapping(String prefix, String namespace) throws SAXException;1321972216;Starts the prefix mapping for the given prefix._@see org.xml.sax.ContentHandler#startPrefixMapping(String, String);protected void startPrefixMapping(String prefix, String namespace) throws SAXException {_		if (getContentHandler() != null) {_			if (prefix == null) {_				prefix = ""__			}_			if (!ObjectHelper.isNotEmpty(namespace)) {_				return__			}_			if (!namespace.equals(namespaces.get(prefix))) {_				getContentHandler().startPrefixMapping(prefix, namespace)__				namespaces.put(prefix, namespace)__			}_		}_	};starts,the,prefix,mapping,for,the,given,prefix,see,org,xml,sax,content,handler,start,prefix,mapping,string,string;protected,void,start,prefix,mapping,string,prefix,string,namespace,throws,saxexception,if,get,content,handler,null,if,prefix,null,prefix,if,object,helper,is,not,empty,namespace,return,if,namespace,equals,namespaces,get,prefix,get,content,handler,start,prefix,mapping,prefix,namespace,namespaces,put,prefix,namespace
StaxStreamXMLReader -> protected void startPrefixMapping(String prefix, String namespace) throws SAXException;1524063178;Starts the prefix mapping for the given prefix._@see org.xml.sax.ContentHandler#startPrefixMapping(String, String);protected void startPrefixMapping(String prefix, String namespace) throws SAXException {_		if (getContentHandler() != null) {_			if (prefix == null) {_				prefix = ""__			}_			if (!ObjectHelper.isNotEmpty(namespace)) {_				return__			}_			if (!namespace.equals(namespaces.get(prefix))) {_				getContentHandler().startPrefixMapping(prefix, namespace)__				namespaces.put(prefix, namespace)__			}_		}_	};starts,the,prefix,mapping,for,the,given,prefix,see,org,xml,sax,content,handler,start,prefix,mapping,string,string;protected,void,start,prefix,mapping,string,prefix,string,namespace,throws,saxexception,if,get,content,handler,null,if,prefix,null,prefix,if,object,helper,is,not,empty,namespace,return,if,namespace,equals,namespaces,get,prefix,get,content,handler,start,prefix,mapping,prefix,namespace,namespaces,put,prefix,namespace
StaxStreamXMLReader -> protected void startPrefixMapping(String prefix, String namespace) throws SAXException;1537290824;Starts the prefix mapping for the given prefix._@see org.xml.sax.ContentHandler#startPrefixMapping(String, String);protected void startPrefixMapping(String prefix, String namespace) throws SAXException {_		if (getContentHandler() != null) {_			if (prefix == null) {_				prefix = ""__			}_			if (!ObjectHelper.isNotEmpty(namespace)) {_				return__			}_			if (!namespace.equals(namespaces.get(prefix))) {_				getContentHandler().startPrefixMapping(prefix, namespace)__				namespaces.put(prefix, namespace)__			}_		}_	};starts,the,prefix,mapping,for,the,given,prefix,see,org,xml,sax,content,handler,start,prefix,mapping,string,string;protected,void,start,prefix,mapping,string,prefix,string,namespace,throws,saxexception,if,get,content,handler,null,if,prefix,null,prefix,if,object,helper,is,not,empty,namespace,return,if,namespace,equals,namespaces,get,prefix,get,content,handler,start,prefix,mapping,prefix,namespace,namespaces,put,prefix,namespace
