commented;modifiers;parameterAmount;loc;comment;code
false;public;1;14;;@ManagedOperation(description = "Adds the key to the store") @Override public boolean add(String key) {     Document document = new Document(MONGO_ID, key).     try {         collection.insertOne(document).     } catch (com.mongodb.MongoWriteException ex) {         if (ex.getError().getCategory() == ErrorCategory.DUPLICATE_KEY) {             return false.         }         throw ex.     }     return true. }
false;public;1;7;;@ManagedOperation(description = "Does the store contain the given key") @Override public boolean contains(String key) {     Bson document = eq(MONGO_ID, key).     long count = collection.count(document).     return count > 0. }
false;public;1;7;;@ManagedOperation(description = "Remove the key from the store") @Override public boolean remove(String key) {     Bson document = eq(MONGO_ID, key).     DeleteResult res = collection.deleteOne(document).     return res.getDeletedCount() > 0. }
false;public;1;4;;@Override public boolean confirm(String key) {     return true. }
false;public;0;5;;@ManagedOperation(description = "Clear the store") @Override public void clear() {     collection.deleteMany(new Document()). }
false;protected;0;10;;@Override protected void doStart() throws Exception {     ObjectHelper.notNull(mongoClient, "cli").     ObjectHelper.notNull(dbName, "dbName").     ObjectHelper.notNull(collectionName, "collectionName").     if (collection == null) {         this.collection = mongoClient.getDatabase(dbName).getCollection(collectionName).     } }
false;protected;0;4;;@Override protected void doStop() throws Exception {     return. }
false;public;0;3;;public MongoClient getMongoClient() {     return mongoClient. }
false;public;1;3;;public void setMongoClient(MongoClient mongoClient) {     this.mongoClient = mongoClient. }
false;public;0;3;;public String getCollectionName() {     return collectionName. }
false;public;1;3;;public void setCollectionName(String collectionName) {     this.collectionName = collectionName. }
false;public;0;3;;public String getDbName() {     return dbName. }
false;public;1;3;;public void setDbName(String dbName) {     this.dbName = dbName. }
