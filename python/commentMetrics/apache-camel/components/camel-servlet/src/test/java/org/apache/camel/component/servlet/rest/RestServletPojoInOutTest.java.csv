commented;modifiers;parameterAmount;loc;comment;code
false;public;0;15;;@Test public void testServletPojoInOut() throws Exception {     String body = "{\"id\": 123, \"name\": \"Donald Duck\"}".     WebRequest req = new PostMethodWebRequest(CONTEXT_URL + "/services/users/lives", new ByteArrayInputStream(body.getBytes()), "application/json").     ServletUnitClient client = newClient().     client.setExceptionsThrownOnErrorStatus(false).     WebResponse response = client.getResponse(req).     assertEquals(200, response.getResponseCode()).     String out = response.getText().     assertNotNull(out).     assertEquals("{\"iso\":\"EN\",\"country\":\"England\"}", out). }
false;public;0;15;;@Test public void testServletPojoGet() throws Exception {     WebRequest req = new GetMethodWebRequest(CONTEXT_URL + "/services/users/lives").     ServletUnitClient client = newClient().     client.setExceptionsThrownOnErrorStatus(false).     WebResponse response = client.getResponse(req).     assertEquals(200, response.getResponseCode()).     String out = response.getText().     assertNotNull(out).     assertEquals("{\"iso\":\"EN\",\"country\":\"England\"}", out). }
false;public;0;18;;@Override public void configure() throws Exception {     // configure to use servlet and enable auto binding mode     restConfiguration().component("servlet").bindingMode(RestBindingMode.auto).     // use the rest DSL to define the rest services     rest("/users/").get("lives").to("direct:start").post("lives").type(UserPojo.class).outType(CountryPojo.class).route().bean(new UserService(), "livesWhere").     CountryPojo country = new CountryPojo().     country.setIso("EN").     country.setCountry("England").     from("direct:start").transform().constant(country). }
false;protected;0;23;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // configure to use servlet and enable auto binding mode             restConfiguration().component("servlet").bindingMode(RestBindingMode.auto).             // use the rest DSL to define the rest services             rest("/users/").get("lives").to("direct:start").post("lives").type(UserPojo.class).outType(CountryPojo.class).route().bean(new UserService(), "livesWhere").             CountryPojo country = new CountryPojo().             country.setIso("EN").             country.setCountry("England").             from("direct:start").transform().constant(country).         }     }. }
