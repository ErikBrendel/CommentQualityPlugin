# id;timestamp;commentText;codeText;commentWords;codeWords
KafkaComponent -> public void setBrokers(String brokers);1487152737;This is for bootstrapping and the producer will only use it for getting metadata (topics, partitions and replicas)._The socket connections for sending the actual data will be established based on the broker information returned in the metadata._The format is host1:port1,host2:port2, and the list can be a subset of brokers or a VIP pointing to a subset of brokers._<p/>_This option is known as <tt>metadata.broker.list</tt> in the Kafka documentation.;public void setBrokers(String brokers) {_        this.brokers = brokers__    };this,is,for,bootstrapping,and,the,producer,will,only,use,it,for,getting,metadata,topics,partitions,and,replicas,the,socket,connections,for,sending,the,actual,data,will,be,established,based,on,the,broker,information,returned,in,the,metadata,the,format,is,host1,port1,host2,port2,and,the,list,can,be,a,subset,of,brokers,or,a,vip,pointing,to,a,subset,of,brokers,p,this,option,is,known,as,tt,metadata,broker,list,tt,in,the,kafka,documentation;public,void,set,brokers,string,brokers,this,brokers,brokers
KafkaComponent -> public void setBrokers(String brokers);1487152993;URL of the Kafka brokers to use._The format is host1:port1,host2:port2, and the list can be a subset of brokers or a VIP pointing to a subset of brokers._<p/>_This option is known as <tt>metadata.broker.list</tt> in the Kafka documentation.;public void setBrokers(String brokers) {_        this.brokers = brokers__    };url,of,the,kafka,brokers,to,use,the,format,is,host1,port1,host2,port2,and,the,list,can,be,a,subset,of,brokers,or,a,vip,pointing,to,a,subset,of,brokers,p,this,option,is,known,as,tt,metadata,broker,list,tt,in,the,kafka,documentation;public,void,set,brokers,string,brokers,this,brokers,brokers
KafkaComponent -> public void setBrokers(String brokers);1487153800;URL of the Kafka brokers to use._The format is host1:port1,host2:port2, and the list can be a subset of brokers or a VIP pointing to a subset of brokers._<p/>_This option is known as <tt>bootstrap.servers</tt> in the Kafka documentation.;public void setBrokers(String brokers) {_        this.brokers = brokers__    };url,of,the,kafka,brokers,to,use,the,format,is,host1,port1,host2,port2,and,the,list,can,be,a,subset,of,brokers,or,a,vip,pointing,to,a,subset,of,brokers,p,this,option,is,known,as,tt,bootstrap,servers,tt,in,the,kafka,documentation;public,void,set,brokers,string,brokers,this,brokers,brokers
KafkaComponent -> public void setBrokers(String brokers);1489310117;URL of the Kafka brokers to use._The format is host1:port1,host2:port2, and the list can be a subset of brokers or a VIP pointing to a subset of brokers._<p/>_This option is known as <tt>bootstrap.servers</tt> in the Kafka documentation.;public void setBrokers(String brokers) {_        if (configuration == null) {_            configuration = new KafkaConfiguration()__        }_        configuration.setBrokers(brokers)__    };url,of,the,kafka,brokers,to,use,the,format,is,host1,port1,host2,port2,and,the,list,can,be,a,subset,of,brokers,or,a,vip,pointing,to,a,subset,of,brokers,p,this,option,is,known,as,tt,bootstrap,servers,tt,in,the,kafka,documentation;public,void,set,brokers,string,brokers,if,configuration,null,configuration,new,kafka,configuration,configuration,set,brokers,brokers
KafkaComponent -> public void setBrokers(String brokers);1491919259;URL of the Kafka brokers to use._The format is host1:port1,host2:port2, and the list can be a subset of brokers or a VIP pointing to a subset of brokers._<p/>_This option is known as <tt>bootstrap.servers</tt> in the Kafka documentation.;public void setBrokers(String brokers) {_        if (configuration == null) {_            configuration = new KafkaConfiguration()__        }_        configuration.setBrokers(brokers)__    };url,of,the,kafka,brokers,to,use,the,format,is,host1,port1,host2,port2,and,the,list,can,be,a,subset,of,brokers,or,a,vip,pointing,to,a,subset,of,brokers,p,this,option,is,known,as,tt,bootstrap,servers,tt,in,the,kafka,documentation;public,void,set,brokers,string,brokers,if,configuration,null,configuration,new,kafka,configuration,configuration,set,brokers,brokers
KafkaComponent -> public void setBrokers(String brokers);1491919462;URL of the Kafka brokers to use._The format is host1:port1,host2:port2, and the list can be a subset of brokers or a VIP pointing to a subset of brokers._<p/>_This option is known as <tt>bootstrap.servers</tt> in the Kafka documentation.;public void setBrokers(String brokers) {_        if (configuration == null) {_            configuration = new KafkaConfiguration()__        }_        configuration.setBrokers(brokers)__    };url,of,the,kafka,brokers,to,use,the,format,is,host1,port1,host2,port2,and,the,list,can,be,a,subset,of,brokers,or,a,vip,pointing,to,a,subset,of,brokers,p,this,option,is,known,as,tt,bootstrap,servers,tt,in,the,kafka,documentation;public,void,set,brokers,string,brokers,if,configuration,null,configuration,new,kafka,configuration,configuration,set,brokers,brokers
KafkaComponent -> public void setBrokers(String brokers);1491919462;URL of the Kafka brokers to use._The format is host1:port1,host2:port2, and the list can be a subset of brokers or a VIP pointing to a subset of brokers._<p/>_This option is known as <tt>bootstrap.servers</tt> in the Kafka documentation.;public void setBrokers(String brokers) {_        if (configuration == null) {_            configuration = new KafkaConfiguration()__        }_        configuration.setBrokers(brokers)__    };url,of,the,kafka,brokers,to,use,the,format,is,host1,port1,host2,port2,and,the,list,can,be,a,subset,of,brokers,or,a,vip,pointing,to,a,subset,of,brokers,p,this,option,is,known,as,tt,bootstrap,servers,tt,in,the,kafka,documentation;public,void,set,brokers,string,brokers,if,configuration,null,configuration,new,kafka,configuration,configuration,set,brokers,brokers
KafkaComponent -> public void setBrokers(String brokers);1491919462;URL of the Kafka brokers to use._The format is host1:port1,host2:port2, and the list can be a subset of brokers or a VIP pointing to a subset of brokers._<p/>_This option is known as <tt>bootstrap.servers</tt> in the Kafka documentation.;public void setBrokers(String brokers) {_        if (configuration == null) {_            configuration = new KafkaConfiguration()__        }_        configuration.setBrokers(brokers)__    };url,of,the,kafka,brokers,to,use,the,format,is,host1,port1,host2,port2,and,the,list,can,be,a,subset,of,brokers,or,a,vip,pointing,to,a,subset,of,brokers,p,this,option,is,known,as,tt,bootstrap,servers,tt,in,the,kafka,documentation;public,void,set,brokers,string,brokers,if,configuration,null,configuration,new,kafka,configuration,configuration,set,brokers,brokers
KafkaComponent -> public void setBrokers(String brokers);1495715668;URL of the Kafka brokers to use._The format is host1:port1,host2:port2, and the list can be a subset of brokers or a VIP pointing to a subset of brokers._<p/>_This option is known as <tt>bootstrap.servers</tt> in the Kafka documentation.;public void setBrokers(String brokers) {_        if (configuration == null) {_            configuration = new KafkaConfiguration()__        }_        configuration.setBrokers(brokers)__    };url,of,the,kafka,brokers,to,use,the,format,is,host1,port1,host2,port2,and,the,list,can,be,a,subset,of,brokers,or,a,vip,pointing,to,a,subset,of,brokers,p,this,option,is,known,as,tt,bootstrap,servers,tt,in,the,kafka,documentation;public,void,set,brokers,string,brokers,if,configuration,null,configuration,new,kafka,configuration,configuration,set,brokers,brokers
KafkaComponent -> public void setBrokers(String brokers);1508921878;URL of the Kafka brokers to use._The format is host1:port1,host2:port2, and the list can be a subset of brokers or a VIP pointing to a subset of brokers._<p/>_This option is known as <tt>bootstrap.servers</tt> in the Kafka documentation.;public void setBrokers(String brokers) {_        if (configuration == null) {_            configuration = new KafkaConfiguration()__        }_        configuration.setBrokers(brokers)__    };url,of,the,kafka,brokers,to,use,the,format,is,host1,port1,host2,port2,and,the,list,can,be,a,subset,of,brokers,or,a,vip,pointing,to,a,subset,of,brokers,p,this,option,is,known,as,tt,bootstrap,servers,tt,in,the,kafka,documentation;public,void,set,brokers,string,brokers,if,configuration,null,configuration,new,kafka,configuration,configuration,set,brokers,brokers
KafkaComponent -> public void setBrokers(String brokers);1513244677;URL of the Kafka brokers to use._The format is host1:port1,host2:port2, and the list can be a subset of brokers or a VIP pointing to a subset of brokers._<p/>_This option is known as <tt>bootstrap.servers</tt> in the Kafka documentation.;public void setBrokers(String brokers) {_        if (configuration == null) {_            configuration = new KafkaConfiguration()__        }_        configuration.setBrokers(brokers)__    };url,of,the,kafka,brokers,to,use,the,format,is,host1,port1,host2,port2,and,the,list,can,be,a,subset,of,brokers,or,a,vip,pointing,to,a,subset,of,brokers,p,this,option,is,known,as,tt,bootstrap,servers,tt,in,the,kafka,documentation;public,void,set,brokers,string,brokers,if,configuration,null,configuration,new,kafka,configuration,configuration,set,brokers,brokers
KafkaComponent -> public void setBrokers(String brokers);1513325704;URL of the Kafka brokers to use._The format is host1:port1,host2:port2, and the list can be a subset of brokers or a VIP pointing to a subset of brokers._<p/>_This option is known as <tt>bootstrap.servers</tt> in the Kafka documentation.;public void setBrokers(String brokers) {_        if (configuration == null) {_            configuration = new KafkaConfiguration()__        }_        configuration.setBrokers(brokers)__    };url,of,the,kafka,brokers,to,use,the,format,is,host1,port1,host2,port2,and,the,list,can,be,a,subset,of,brokers,or,a,vip,pointing,to,a,subset,of,brokers,p,this,option,is,known,as,tt,bootstrap,servers,tt,in,the,kafka,documentation;public,void,set,brokers,string,brokers,if,configuration,null,configuration,new,kafka,configuration,configuration,set,brokers,brokers
KafkaComponent -> public void setBrokers(String brokers);1518096715;URL of the Kafka brokers to use._The format is host1:port1,host2:port2, and the list can be a subset of brokers or a VIP pointing to a subset of brokers._<p/>_This option is known as <tt>bootstrap.servers</tt> in the Kafka documentation.;public void setBrokers(String brokers) {_        if (configuration == null) {_            configuration = new KafkaConfiguration()__        }_        configuration.setBrokers(brokers)__    };url,of,the,kafka,brokers,to,use,the,format,is,host1,port1,host2,port2,and,the,list,can,be,a,subset,of,brokers,or,a,vip,pointing,to,a,subset,of,brokers,p,this,option,is,known,as,tt,bootstrap,servers,tt,in,the,kafka,documentation;public,void,set,brokers,string,brokers,if,configuration,null,configuration,new,kafka,configuration,configuration,set,brokers,brokers
KafkaComponent -> public void setBrokers(String brokers);1540108163;URL of the Kafka brokers to use._The format is host1:port1,host2:port2, and the list can be a subset of brokers or a VIP pointing to a subset of brokers._<p/>_This option is known as <tt>bootstrap.servers</tt> in the Kafka documentation.;public void setBrokers(String brokers) {_        if (configuration == null) {_            configuration = new KafkaConfiguration()__        }_        configuration.setBrokers(brokers)__    };url,of,the,kafka,brokers,to,use,the,format,is,host1,port1,host2,port2,and,the,list,can,be,a,subset,of,brokers,or,a,vip,pointing,to,a,subset,of,brokers,p,this,option,is,known,as,tt,bootstrap,servers,tt,in,the,kafka,documentation;public,void,set,brokers,string,brokers,if,configuration,null,configuration,new,kafka,configuration,configuration,set,brokers,brokers
KafkaComponent -> public void setBrokers(String brokers);1547241305;URL of the Kafka brokers to use._The format is host1:port1,host2:port2, and the list can be a subset of brokers or a VIP pointing to a subset of brokers._<p/>_This option is known as <tt>bootstrap.servers</tt> in the Kafka documentation.;public void setBrokers(String brokers) {_        if (configuration == null) {_            configuration = new KafkaConfiguration()__        }_        configuration.setBrokers(brokers)__    };url,of,the,kafka,brokers,to,use,the,format,is,host1,port1,host2,port2,and,the,list,can,be,a,subset,of,brokers,or,a,vip,pointing,to,a,subset,of,brokers,p,this,option,is,known,as,tt,bootstrap,servers,tt,in,the,kafka,documentation;public,void,set,brokers,string,brokers,if,configuration,null,configuration,new,kafka,configuration,configuration,set,brokers,brokers
KafkaComponent -> public void setBrokers(String brokers);1548082117;URL of the Kafka brokers to use._The format is host1:port1,host2:port2, and the list can be a subset of brokers or a VIP pointing to a subset of brokers._<p/>_This option is known as <tt>bootstrap.servers</tt> in the Kafka documentation.;public void setBrokers(String brokers) {_        if (configuration == null) {_            configuration = new KafkaConfiguration()__        }_        configuration.setBrokers(brokers)__    };url,of,the,kafka,brokers,to,use,the,format,is,host1,port1,host2,port2,and,the,list,can,be,a,subset,of,brokers,or,a,vip,pointing,to,a,subset,of,brokers,p,this,option,is,known,as,tt,bootstrap,servers,tt,in,the,kafka,documentation;public,void,set,brokers,string,brokers,if,configuration,null,configuration,new,kafka,configuration,configuration,set,brokers,brokers
KafkaComponent -> public void setAllowManualCommit(boolean allowManualCommit);1508921878;Whether to allow doing manual commits via {@link KafkaManualCommit}._<p/>_If this option is enabled then an instance of {@link KafkaManualCommit} is stored on the {@link Exchange} message header,_which allows end users to access this API and perform manual offset commits via the Kafka consumer.;public void setAllowManualCommit(boolean allowManualCommit) {_        this.allowManualCommit = allowManualCommit__    };whether,to,allow,doing,manual,commits,via,link,kafka,manual,commit,p,if,this,option,is,enabled,then,an,instance,of,link,kafka,manual,commit,is,stored,on,the,link,exchange,message,header,which,allows,end,users,to,access,this,api,and,perform,manual,offset,commits,via,the,kafka,consumer;public,void,set,allow,manual,commit,boolean,allow,manual,commit,this,allow,manual,commit,allow,manual,commit
KafkaComponent -> public void setAllowManualCommit(boolean allowManualCommit);1513244677;Whether to allow doing manual commits via {@link KafkaManualCommit}._<p/>_If this option is enabled then an instance of {@link KafkaManualCommit} is stored on the {@link Exchange} message header,_which allows end users to access this API and perform manual offset commits via the Kafka consumer.;public void setAllowManualCommit(boolean allowManualCommit) {_        this.allowManualCommit = allowManualCommit__    };whether,to,allow,doing,manual,commits,via,link,kafka,manual,commit,p,if,this,option,is,enabled,then,an,instance,of,link,kafka,manual,commit,is,stored,on,the,link,exchange,message,header,which,allows,end,users,to,access,this,api,and,perform,manual,offset,commits,via,the,kafka,consumer;public,void,set,allow,manual,commit,boolean,allow,manual,commit,this,allow,manual,commit,allow,manual,commit
KafkaComponent -> public void setAllowManualCommit(boolean allowManualCommit);1513325704;Whether to allow doing manual commits via {@link KafkaManualCommit}._<p/>_If this option is enabled then an instance of {@link KafkaManualCommit} is stored on the {@link Exchange} message header,_which allows end users to access this API and perform manual offset commits via the Kafka consumer.;public void setAllowManualCommit(boolean allowManualCommit) {_        this.allowManualCommit = allowManualCommit__    };whether,to,allow,doing,manual,commits,via,link,kafka,manual,commit,p,if,this,option,is,enabled,then,an,instance,of,link,kafka,manual,commit,is,stored,on,the,link,exchange,message,header,which,allows,end,users,to,access,this,api,and,perform,manual,offset,commits,via,the,kafka,consumer;public,void,set,allow,manual,commit,boolean,allow,manual,commit,this,allow,manual,commit,allow,manual,commit
KafkaComponent -> public void setAllowManualCommit(boolean allowManualCommit);1518096715;Whether to allow doing manual commits via {@link KafkaManualCommit}._<p/>_If this option is enabled then an instance of {@link KafkaManualCommit} is stored on the {@link Exchange} message header,_which allows end users to access this API and perform manual offset commits via the Kafka consumer.;public void setAllowManualCommit(boolean allowManualCommit) {_        this.allowManualCommit = allowManualCommit__    };whether,to,allow,doing,manual,commits,via,link,kafka,manual,commit,p,if,this,option,is,enabled,then,an,instance,of,link,kafka,manual,commit,is,stored,on,the,link,exchange,message,header,which,allows,end,users,to,access,this,api,and,perform,manual,offset,commits,via,the,kafka,consumer;public,void,set,allow,manual,commit,boolean,allow,manual,commit,this,allow,manual,commit,allow,manual,commit
KafkaComponent -> public void setAllowManualCommit(boolean allowManualCommit);1540108163;Whether to allow doing manual commits via {@link KafkaManualCommit}._<p/>_If this option is enabled then an instance of {@link KafkaManualCommit} is stored on the {@link Exchange} message header,_which allows end users to access this API and perform manual offset commits via the Kafka consumer.;public void setAllowManualCommit(boolean allowManualCommit) {_        this.allowManualCommit = allowManualCommit__    };whether,to,allow,doing,manual,commits,via,link,kafka,manual,commit,p,if,this,option,is,enabled,then,an,instance,of,link,kafka,manual,commit,is,stored,on,the,link,exchange,message,header,which,allows,end,users,to,access,this,api,and,perform,manual,offset,commits,via,the,kafka,consumer;public,void,set,allow,manual,commit,boolean,allow,manual,commit,this,allow,manual,commit,allow,manual,commit
KafkaComponent -> public void setAllowManualCommit(boolean allowManualCommit);1547241305;Whether to allow doing manual commits via {@link KafkaManualCommit}._<p/>_If this option is enabled then an instance of {@link KafkaManualCommit} is stored on the {@link Exchange} message header,_which allows end users to access this API and perform manual offset commits via the Kafka consumer.;public void setAllowManualCommit(boolean allowManualCommit) {_        this.allowManualCommit = allowManualCommit__    };whether,to,allow,doing,manual,commits,via,link,kafka,manual,commit,p,if,this,option,is,enabled,then,an,instance,of,link,kafka,manual,commit,is,stored,on,the,link,exchange,message,header,which,allows,end,users,to,access,this,api,and,perform,manual,offset,commits,via,the,kafka,consumer;public,void,set,allow,manual,commit,boolean,allow,manual,commit,this,allow,manual,commit,allow,manual,commit
KafkaComponent -> public void setAllowManualCommit(boolean allowManualCommit);1548082117;Whether to allow doing manual commits via {@link KafkaManualCommit}._<p/>_If this option is enabled then an instance of {@link KafkaManualCommit} is stored on the {@link Exchange} message header,_which allows end users to access this API and perform manual offset commits via the Kafka consumer.;public void setAllowManualCommit(boolean allowManualCommit) {_        this.allowManualCommit = allowManualCommit__    };whether,to,allow,doing,manual,commits,via,link,kafka,manual,commit,p,if,this,option,is,enabled,then,an,instance,of,link,kafka,manual,commit,is,stored,on,the,link,exchange,message,header,which,allows,end,users,to,access,this,api,and,perform,manual,offset,commits,via,the,kafka,consumer;public,void,set,allow,manual,commit,boolean,allow,manual,commit,this,allow,manual,commit,allow,manual,commit
KafkaComponent -> public void setKafkaManualCommitFactory(KafkaManualCommitFactory kafkaManualCommitFactory);1508921878;Factory to use for creating {@link KafkaManualCommit} instances. This allows to plugin a custom factory_to create custom {@link KafkaManualCommit} instances in case special logic is needed when doing manual commits_that deviates from the default implementation that comes out of the box.;public void setKafkaManualCommitFactory(KafkaManualCommitFactory kafkaManualCommitFactory) {_        this.kafkaManualCommitFactory = kafkaManualCommitFactory__    };factory,to,use,for,creating,link,kafka,manual,commit,instances,this,allows,to,plugin,a,custom,factory,to,create,custom,link,kafka,manual,commit,instances,in,case,special,logic,is,needed,when,doing,manual,commits,that,deviates,from,the,default,implementation,that,comes,out,of,the,box;public,void,set,kafka,manual,commit,factory,kafka,manual,commit,factory,kafka,manual,commit,factory,this,kafka,manual,commit,factory,kafka,manual,commit,factory
KafkaComponent -> public void setKafkaManualCommitFactory(KafkaManualCommitFactory kafkaManualCommitFactory);1513244677;Factory to use for creating {@link KafkaManualCommit} instances. This allows to plugin a custom factory_to create custom {@link KafkaManualCommit} instances in case special logic is needed when doing manual commits_that deviates from the default implementation that comes out of the box.;public void setKafkaManualCommitFactory(KafkaManualCommitFactory kafkaManualCommitFactory) {_        this.kafkaManualCommitFactory = kafkaManualCommitFactory__    };factory,to,use,for,creating,link,kafka,manual,commit,instances,this,allows,to,plugin,a,custom,factory,to,create,custom,link,kafka,manual,commit,instances,in,case,special,logic,is,needed,when,doing,manual,commits,that,deviates,from,the,default,implementation,that,comes,out,of,the,box;public,void,set,kafka,manual,commit,factory,kafka,manual,commit,factory,kafka,manual,commit,factory,this,kafka,manual,commit,factory,kafka,manual,commit,factory
KafkaComponent -> public void setKafkaManualCommitFactory(KafkaManualCommitFactory kafkaManualCommitFactory);1513325704;Factory to use for creating {@link KafkaManualCommit} instances. This allows to plugin a custom factory_to create custom {@link KafkaManualCommit} instances in case special logic is needed when doing manual commits_that deviates from the default implementation that comes out of the box.;public void setKafkaManualCommitFactory(KafkaManualCommitFactory kafkaManualCommitFactory) {_        this.kafkaManualCommitFactory = kafkaManualCommitFactory__    };factory,to,use,for,creating,link,kafka,manual,commit,instances,this,allows,to,plugin,a,custom,factory,to,create,custom,link,kafka,manual,commit,instances,in,case,special,logic,is,needed,when,doing,manual,commits,that,deviates,from,the,default,implementation,that,comes,out,of,the,box;public,void,set,kafka,manual,commit,factory,kafka,manual,commit,factory,kafka,manual,commit,factory,this,kafka,manual,commit,factory,kafka,manual,commit,factory
KafkaComponent -> public void setKafkaManualCommitFactory(KafkaManualCommitFactory kafkaManualCommitFactory);1518096715;Factory to use for creating {@link KafkaManualCommit} instances. This allows to plugin a custom factory_to create custom {@link KafkaManualCommit} instances in case special logic is needed when doing manual commits_that deviates from the default implementation that comes out of the box.;public void setKafkaManualCommitFactory(KafkaManualCommitFactory kafkaManualCommitFactory) {_        this.kafkaManualCommitFactory = kafkaManualCommitFactory__    };factory,to,use,for,creating,link,kafka,manual,commit,instances,this,allows,to,plugin,a,custom,factory,to,create,custom,link,kafka,manual,commit,instances,in,case,special,logic,is,needed,when,doing,manual,commits,that,deviates,from,the,default,implementation,that,comes,out,of,the,box;public,void,set,kafka,manual,commit,factory,kafka,manual,commit,factory,kafka,manual,commit,factory,this,kafka,manual,commit,factory,kafka,manual,commit,factory
KafkaComponent -> public void setKafkaManualCommitFactory(KafkaManualCommitFactory kafkaManualCommitFactory);1540108163;Factory to use for creating {@link KafkaManualCommit} instances. This allows to plugin a custom factory_to create custom {@link KafkaManualCommit} instances in case special logic is needed when doing manual commits_that deviates from the default implementation that comes out of the box.;public void setKafkaManualCommitFactory(KafkaManualCommitFactory kafkaManualCommitFactory) {_        this.kafkaManualCommitFactory = kafkaManualCommitFactory__    };factory,to,use,for,creating,link,kafka,manual,commit,instances,this,allows,to,plugin,a,custom,factory,to,create,custom,link,kafka,manual,commit,instances,in,case,special,logic,is,needed,when,doing,manual,commits,that,deviates,from,the,default,implementation,that,comes,out,of,the,box;public,void,set,kafka,manual,commit,factory,kafka,manual,commit,factory,kafka,manual,commit,factory,this,kafka,manual,commit,factory,kafka,manual,commit,factory
KafkaComponent -> public void setKafkaManualCommitFactory(KafkaManualCommitFactory kafkaManualCommitFactory);1547241305;Factory to use for creating {@link KafkaManualCommit} instances. This allows to plugin a custom factory_to create custom {@link KafkaManualCommit} instances in case special logic is needed when doing manual commits_that deviates from the default implementation that comes out of the box.;public void setKafkaManualCommitFactory(KafkaManualCommitFactory kafkaManualCommitFactory) {_        this.kafkaManualCommitFactory = kafkaManualCommitFactory__    };factory,to,use,for,creating,link,kafka,manual,commit,instances,this,allows,to,plugin,a,custom,factory,to,create,custom,link,kafka,manual,commit,instances,in,case,special,logic,is,needed,when,doing,manual,commits,that,deviates,from,the,default,implementation,that,comes,out,of,the,box;public,void,set,kafka,manual,commit,factory,kafka,manual,commit,factory,kafka,manual,commit,factory,this,kafka,manual,commit,factory,kafka,manual,commit,factory
KafkaComponent -> public void setKafkaManualCommitFactory(KafkaManualCommitFactory kafkaManualCommitFactory);1548082117;Factory to use for creating {@link KafkaManualCommit} instances. This allows to plugin a custom factory_to create custom {@link KafkaManualCommit} instances in case special logic is needed when doing manual commits_that deviates from the default implementation that comes out of the box.;public void setKafkaManualCommitFactory(KafkaManualCommitFactory kafkaManualCommitFactory) {_        this.kafkaManualCommitFactory = kafkaManualCommitFactory__    };factory,to,use,for,creating,link,kafka,manual,commit,instances,this,allows,to,plugin,a,custom,factory,to,create,custom,link,kafka,manual,commit,instances,in,case,special,logic,is,needed,when,doing,manual,commits,that,deviates,from,the,default,implementation,that,comes,out,of,the,box;public,void,set,kafka,manual,commit,factory,kafka,manual,commit,factory,kafka,manual,commit,factory,this,kafka,manual,commit,factory,kafka,manual,commit,factory
KafkaComponent -> public void setWorkerPool(ExecutorService workerPool);1463131638;To use a shared custom worker pool for continue routing {@link Exchange} after kafka server has acknowledge_the message that was sent to it from {@link KafkaProducer} using asynchronous non-blocking processing._If using this option then you must handle the lifecycle of the thread pool to shut the pool down when no longer needed.;public void setWorkerPool(ExecutorService workerPool) {_        this.workerPool = workerPool__    };to,use,a,shared,custom,worker,pool,for,continue,routing,link,exchange,after,kafka,server,has,acknowledge,the,message,that,was,sent,to,it,from,link,kafka,producer,using,asynchronous,non,blocking,processing,if,using,this,option,then,you,must,handle,the,lifecycle,of,the,thread,pool,to,shut,the,pool,down,when,no,longer,needed;public,void,set,worker,pool,executor,service,worker,pool,this,worker,pool,worker,pool
KafkaComponent -> public void setWorkerPool(ExecutorService workerPool);1463300498;To use a shared custom worker pool for continue routing {@link Exchange} after kafka server has acknowledge_the message that was sent to it from {@link KafkaProducer} using asynchronous non-blocking processing._If using this option then you must handle the lifecycle of the thread pool to shut the pool down when no longer needed.;public void setWorkerPool(ExecutorService workerPool) {_        this.workerPool = workerPool__    };to,use,a,shared,custom,worker,pool,for,continue,routing,link,exchange,after,kafka,server,has,acknowledge,the,message,that,was,sent,to,it,from,link,kafka,producer,using,asynchronous,non,blocking,processing,if,using,this,option,then,you,must,handle,the,lifecycle,of,the,thread,pool,to,shut,the,pool,down,when,no,longer,needed;public,void,set,worker,pool,executor,service,worker,pool,this,worker,pool,worker,pool
KafkaComponent -> public void setWorkerPool(ExecutorService workerPool);1470377384;To use a shared custom worker pool for continue routing {@link Exchange} after kafka server has acknowledge_the message that was sent to it from {@link KafkaProducer} using asynchronous non-blocking processing._If using this option then you must handle the lifecycle of the thread pool to shut the pool down when no longer needed.;public void setWorkerPool(ExecutorService workerPool) {_        this.workerPool = workerPool__    };to,use,a,shared,custom,worker,pool,for,continue,routing,link,exchange,after,kafka,server,has,acknowledge,the,message,that,was,sent,to,it,from,link,kafka,producer,using,asynchronous,non,blocking,processing,if,using,this,option,then,you,must,handle,the,lifecycle,of,the,thread,pool,to,shut,the,pool,down,when,no,longer,needed;public,void,set,worker,pool,executor,service,worker,pool,this,worker,pool,worker,pool
KafkaComponent -> public void setWorkerPool(ExecutorService workerPool);1482328198;To use a shared custom worker pool for continue routing {@link Exchange} after kafka server has acknowledge_the message that was sent to it from {@link KafkaProducer} using asynchronous non-blocking processing._If using this option then you must handle the lifecycle of the thread pool to shut the pool down when no longer needed.;public void setWorkerPool(ExecutorService workerPool) {_        this.workerPool = workerPool__    };to,use,a,shared,custom,worker,pool,for,continue,routing,link,exchange,after,kafka,server,has,acknowledge,the,message,that,was,sent,to,it,from,link,kafka,producer,using,asynchronous,non,blocking,processing,if,using,this,option,then,you,must,handle,the,lifecycle,of,the,thread,pool,to,shut,the,pool,down,when,no,longer,needed;public,void,set,worker,pool,executor,service,worker,pool,this,worker,pool,worker,pool
KafkaComponent -> public void setWorkerPool(ExecutorService workerPool);1487149900;To use a shared custom worker pool for continue routing {@link Exchange} after kafka server has acknowledge_the message that was sent to it from {@link KafkaProducer} using asynchronous non-blocking processing._If using this option then you must handle the lifecycle of the thread pool to shut the pool down when no longer needed.;public void setWorkerPool(ExecutorService workerPool) {_        this.workerPool = workerPool__    };to,use,a,shared,custom,worker,pool,for,continue,routing,link,exchange,after,kafka,server,has,acknowledge,the,message,that,was,sent,to,it,from,link,kafka,producer,using,asynchronous,non,blocking,processing,if,using,this,option,then,you,must,handle,the,lifecycle,of,the,thread,pool,to,shut,the,pool,down,when,no,longer,needed;public,void,set,worker,pool,executor,service,worker,pool,this,worker,pool,worker,pool
KafkaComponent -> public void setWorkerPool(ExecutorService workerPool);1487152737;To use a shared custom worker pool for continue routing {@link Exchange} after kafka server has acknowledge_the message that was sent to it from {@link KafkaProducer} using asynchronous non-blocking processing._If using this option then you must handle the lifecycle of the thread pool to shut the pool down when no longer needed.;public void setWorkerPool(ExecutorService workerPool) {_        this.workerPool = workerPool__    };to,use,a,shared,custom,worker,pool,for,continue,routing,link,exchange,after,kafka,server,has,acknowledge,the,message,that,was,sent,to,it,from,link,kafka,producer,using,asynchronous,non,blocking,processing,if,using,this,option,then,you,must,handle,the,lifecycle,of,the,thread,pool,to,shut,the,pool,down,when,no,longer,needed;public,void,set,worker,pool,executor,service,worker,pool,this,worker,pool,worker,pool
KafkaComponent -> public void setWorkerPool(ExecutorService workerPool);1487152993;To use a shared custom worker pool for continue routing {@link Exchange} after kafka server has acknowledge_the message that was sent to it from {@link KafkaProducer} using asynchronous non-blocking processing._If using this option then you must handle the lifecycle of the thread pool to shut the pool down when no longer needed.;public void setWorkerPool(ExecutorService workerPool) {_        this.workerPool = workerPool__    };to,use,a,shared,custom,worker,pool,for,continue,routing,link,exchange,after,kafka,server,has,acknowledge,the,message,that,was,sent,to,it,from,link,kafka,producer,using,asynchronous,non,blocking,processing,if,using,this,option,then,you,must,handle,the,lifecycle,of,the,thread,pool,to,shut,the,pool,down,when,no,longer,needed;public,void,set,worker,pool,executor,service,worker,pool,this,worker,pool,worker,pool
KafkaComponent -> public void setWorkerPool(ExecutorService workerPool);1487153800;To use a shared custom worker pool for continue routing {@link Exchange} after kafka server has acknowledge_the message that was sent to it from {@link KafkaProducer} using asynchronous non-blocking processing._If using this option then you must handle the lifecycle of the thread pool to shut the pool down when no longer needed.;public void setWorkerPool(ExecutorService workerPool) {_        this.workerPool = workerPool__    };to,use,a,shared,custom,worker,pool,for,continue,routing,link,exchange,after,kafka,server,has,acknowledge,the,message,that,was,sent,to,it,from,link,kafka,producer,using,asynchronous,non,blocking,processing,if,using,this,option,then,you,must,handle,the,lifecycle,of,the,thread,pool,to,shut,the,pool,down,when,no,longer,needed;public,void,set,worker,pool,executor,service,worker,pool,this,worker,pool,worker,pool
KafkaComponent -> public void setWorkerPool(ExecutorService workerPool);1489310117;To use a shared custom worker pool for continue routing {@link Exchange} after kafka server has acknowledge_the message that was sent to it from {@link KafkaProducer} using asynchronous non-blocking processing._If using this option then you must handle the lifecycle of the thread pool to shut the pool down when no longer needed.;public void setWorkerPool(ExecutorService workerPool) {_        this.workerPool = workerPool__    };to,use,a,shared,custom,worker,pool,for,continue,routing,link,exchange,after,kafka,server,has,acknowledge,the,message,that,was,sent,to,it,from,link,kafka,producer,using,asynchronous,non,blocking,processing,if,using,this,option,then,you,must,handle,the,lifecycle,of,the,thread,pool,to,shut,the,pool,down,when,no,longer,needed;public,void,set,worker,pool,executor,service,worker,pool,this,worker,pool,worker,pool
KafkaComponent -> public void setWorkerPool(ExecutorService workerPool);1491919259;To use a shared custom worker pool for continue routing {@link Exchange} after kafka server has acknowledge_the message that was sent to it from {@link KafkaProducer} using asynchronous non-blocking processing._If using this option then you must handle the lifecycle of the thread pool to shut the pool down when no longer needed.;public void setWorkerPool(ExecutorService workerPool) {_        this.workerPool = workerPool__    };to,use,a,shared,custom,worker,pool,for,continue,routing,link,exchange,after,kafka,server,has,acknowledge,the,message,that,was,sent,to,it,from,link,kafka,producer,using,asynchronous,non,blocking,processing,if,using,this,option,then,you,must,handle,the,lifecycle,of,the,thread,pool,to,shut,the,pool,down,when,no,longer,needed;public,void,set,worker,pool,executor,service,worker,pool,this,worker,pool,worker,pool
KafkaComponent -> public void setWorkerPool(ExecutorService workerPool);1491919462;To use a shared custom worker pool for continue routing {@link Exchange} after kafka server has acknowledge_the message that was sent to it from {@link KafkaProducer} using asynchronous non-blocking processing._If using this option then you must handle the lifecycle of the thread pool to shut the pool down when no longer needed.;public void setWorkerPool(ExecutorService workerPool) {_        this.workerPool = workerPool__    };to,use,a,shared,custom,worker,pool,for,continue,routing,link,exchange,after,kafka,server,has,acknowledge,the,message,that,was,sent,to,it,from,link,kafka,producer,using,asynchronous,non,blocking,processing,if,using,this,option,then,you,must,handle,the,lifecycle,of,the,thread,pool,to,shut,the,pool,down,when,no,longer,needed;public,void,set,worker,pool,executor,service,worker,pool,this,worker,pool,worker,pool
KafkaComponent -> public void setWorkerPool(ExecutorService workerPool);1491919462;To use a shared custom worker pool for continue routing {@link Exchange} after kafka server has acknowledge_the message that was sent to it from {@link KafkaProducer} using asynchronous non-blocking processing._If using this option then you must handle the lifecycle of the thread pool to shut the pool down when no longer needed.;public void setWorkerPool(ExecutorService workerPool) {_        this.workerPool = workerPool__    };to,use,a,shared,custom,worker,pool,for,continue,routing,link,exchange,after,kafka,server,has,acknowledge,the,message,that,was,sent,to,it,from,link,kafka,producer,using,asynchronous,non,blocking,processing,if,using,this,option,then,you,must,handle,the,lifecycle,of,the,thread,pool,to,shut,the,pool,down,when,no,longer,needed;public,void,set,worker,pool,executor,service,worker,pool,this,worker,pool,worker,pool
KafkaComponent -> public void setWorkerPool(ExecutorService workerPool);1491919462;To use a shared custom worker pool for continue routing {@link Exchange} after kafka server has acknowledge_the message that was sent to it from {@link KafkaProducer} using asynchronous non-blocking processing._If using this option then you must handle the lifecycle of the thread pool to shut the pool down when no longer needed.;public void setWorkerPool(ExecutorService workerPool) {_        this.workerPool = workerPool__    };to,use,a,shared,custom,worker,pool,for,continue,routing,link,exchange,after,kafka,server,has,acknowledge,the,message,that,was,sent,to,it,from,link,kafka,producer,using,asynchronous,non,blocking,processing,if,using,this,option,then,you,must,handle,the,lifecycle,of,the,thread,pool,to,shut,the,pool,down,when,no,longer,needed;public,void,set,worker,pool,executor,service,worker,pool,this,worker,pool,worker,pool
KafkaComponent -> public void setWorkerPool(ExecutorService workerPool);1495715668;To use a shared custom worker pool for continue routing {@link Exchange} after kafka server has acknowledge_the message that was sent to it from {@link KafkaProducer} using asynchronous non-blocking processing._If using this option then you must handle the lifecycle of the thread pool to shut the pool down when no longer needed.;public void setWorkerPool(ExecutorService workerPool) {_        this.workerPool = workerPool__    };to,use,a,shared,custom,worker,pool,for,continue,routing,link,exchange,after,kafka,server,has,acknowledge,the,message,that,was,sent,to,it,from,link,kafka,producer,using,asynchronous,non,blocking,processing,if,using,this,option,then,you,must,handle,the,lifecycle,of,the,thread,pool,to,shut,the,pool,down,when,no,longer,needed;public,void,set,worker,pool,executor,service,worker,pool,this,worker,pool,worker,pool
KafkaComponent -> public void setWorkerPool(ExecutorService workerPool);1508921878;To use a shared custom worker pool for continue routing {@link Exchange} after kafka server has acknowledge_the message that was sent to it from {@link KafkaProducer} using asynchronous non-blocking processing._If using this option then you must handle the lifecycle of the thread pool to shut the pool down when no longer needed.;public void setWorkerPool(ExecutorService workerPool) {_        this.workerPool = workerPool__    };to,use,a,shared,custom,worker,pool,for,continue,routing,link,exchange,after,kafka,server,has,acknowledge,the,message,that,was,sent,to,it,from,link,kafka,producer,using,asynchronous,non,blocking,processing,if,using,this,option,then,you,must,handle,the,lifecycle,of,the,thread,pool,to,shut,the,pool,down,when,no,longer,needed;public,void,set,worker,pool,executor,service,worker,pool,this,worker,pool,worker,pool
KafkaComponent -> public void setWorkerPool(ExecutorService workerPool);1513244677;To use a shared custom worker pool for continue routing {@link Exchange} after kafka server has acknowledge_the message that was sent to it from {@link KafkaProducer} using asynchronous non-blocking processing._If using this option then you must handle the lifecycle of the thread pool to shut the pool down when no longer needed.;public void setWorkerPool(ExecutorService workerPool) {_        this.workerPool = workerPool__    };to,use,a,shared,custom,worker,pool,for,continue,routing,link,exchange,after,kafka,server,has,acknowledge,the,message,that,was,sent,to,it,from,link,kafka,producer,using,asynchronous,non,blocking,processing,if,using,this,option,then,you,must,handle,the,lifecycle,of,the,thread,pool,to,shut,the,pool,down,when,no,longer,needed;public,void,set,worker,pool,executor,service,worker,pool,this,worker,pool,worker,pool
KafkaComponent -> public void setWorkerPool(ExecutorService workerPool);1513325704;To use a shared custom worker pool for continue routing {@link Exchange} after kafka server has acknowledge_the message that was sent to it from {@link KafkaProducer} using asynchronous non-blocking processing._If using this option then you must handle the lifecycle of the thread pool to shut the pool down when no longer needed.;public void setWorkerPool(ExecutorService workerPool) {_        this.workerPool = workerPool__    };to,use,a,shared,custom,worker,pool,for,continue,routing,link,exchange,after,kafka,server,has,acknowledge,the,message,that,was,sent,to,it,from,link,kafka,producer,using,asynchronous,non,blocking,processing,if,using,this,option,then,you,must,handle,the,lifecycle,of,the,thread,pool,to,shut,the,pool,down,when,no,longer,needed;public,void,set,worker,pool,executor,service,worker,pool,this,worker,pool,worker,pool
KafkaComponent -> public void setWorkerPool(ExecutorService workerPool);1518096715;To use a shared custom worker pool for continue routing {@link Exchange} after kafka server has acknowledge_the message that was sent to it from {@link KafkaProducer} using asynchronous non-blocking processing._If using this option then you must handle the lifecycle of the thread pool to shut the pool down when no longer needed.;public void setWorkerPool(ExecutorService workerPool) {_        this.workerPool = workerPool__    };to,use,a,shared,custom,worker,pool,for,continue,routing,link,exchange,after,kafka,server,has,acknowledge,the,message,that,was,sent,to,it,from,link,kafka,producer,using,asynchronous,non,blocking,processing,if,using,this,option,then,you,must,handle,the,lifecycle,of,the,thread,pool,to,shut,the,pool,down,when,no,longer,needed;public,void,set,worker,pool,executor,service,worker,pool,this,worker,pool,worker,pool
KafkaComponent -> public void setWorkerPool(ExecutorService workerPool);1540108163;To use a shared custom worker pool for continue routing {@link Exchange} after kafka server has acknowledge_the message that was sent to it from {@link KafkaProducer} using asynchronous non-blocking processing._If using this option then you must handle the lifecycle of the thread pool to shut the pool down when no longer needed.;public void setWorkerPool(ExecutorService workerPool) {_        this.workerPool = workerPool__    };to,use,a,shared,custom,worker,pool,for,continue,routing,link,exchange,after,kafka,server,has,acknowledge,the,message,that,was,sent,to,it,from,link,kafka,producer,using,asynchronous,non,blocking,processing,if,using,this,option,then,you,must,handle,the,lifecycle,of,the,thread,pool,to,shut,the,pool,down,when,no,longer,needed;public,void,set,worker,pool,executor,service,worker,pool,this,worker,pool,worker,pool
KafkaComponent -> public void setWorkerPool(ExecutorService workerPool);1547241305;To use a shared custom worker pool for continue routing {@link Exchange} after kafka server has acknowledge_the message that was sent to it from {@link KafkaProducer} using asynchronous non-blocking processing._If using this option then you must handle the lifecycle of the thread pool to shut the pool down when no longer needed.;public void setWorkerPool(ExecutorService workerPool) {_        this.workerPool = workerPool__    };to,use,a,shared,custom,worker,pool,for,continue,routing,link,exchange,after,kafka,server,has,acknowledge,the,message,that,was,sent,to,it,from,link,kafka,producer,using,asynchronous,non,blocking,processing,if,using,this,option,then,you,must,handle,the,lifecycle,of,the,thread,pool,to,shut,the,pool,down,when,no,longer,needed;public,void,set,worker,pool,executor,service,worker,pool,this,worker,pool,worker,pool
KafkaComponent -> public void setWorkerPool(ExecutorService workerPool);1548082117;To use a shared custom worker pool for continue routing {@link Exchange} after kafka server has acknowledge_the message that was sent to it from {@link KafkaProducer} using asynchronous non-blocking processing._If using this option then you must handle the lifecycle of the thread pool to shut the pool down when no longer needed.;public void setWorkerPool(ExecutorService workerPool) {_        this.workerPool = workerPool__    };to,use,a,shared,custom,worker,pool,for,continue,routing,link,exchange,after,kafka,server,has,acknowledge,the,message,that,was,sent,to,it,from,link,kafka,producer,using,asynchronous,non,blocking,processing,if,using,this,option,then,you,must,handle,the,lifecycle,of,the,thread,pool,to,shut,the,pool,down,when,no,longer,needed;public,void,set,worker,pool,executor,service,worker,pool,this,worker,pool,worker,pool
KafkaComponent -> public void setBreakOnFirstError(boolean breakOnFirstError);1495715668;This options controls what happens when a consumer is processing an exchange and it fails._If the option is <tt>false</tt> then the consumer continues to the next message and processes it._If the option is <tt>true</tt> then the consumer breaks out, and will seek back to offset of the_message that caused a failure, and then re-attempt to process this message. However this can lead_to endless processing of the same message if its bound to fail every time, eg a poison message._Therefore its recommended to deal with that for example by using Camel's error handler.;public void setBreakOnFirstError(boolean breakOnFirstError) {_        this.breakOnFirstError = breakOnFirstError__    };this,options,controls,what,happens,when,a,consumer,is,processing,an,exchange,and,it,fails,if,the,option,is,tt,false,tt,then,the,consumer,continues,to,the,next,message,and,processes,it,if,the,option,is,tt,true,tt,then,the,consumer,breaks,out,and,will,seek,back,to,offset,of,the,message,that,caused,a,failure,and,then,re,attempt,to,process,this,message,however,this,can,lead,to,endless,processing,of,the,same,message,if,its,bound,to,fail,every,time,eg,a,poison,message,therefore,its,recommended,to,deal,with,that,for,example,by,using,camel,s,error,handler;public,void,set,break,on,first,error,boolean,break,on,first,error,this,break,on,first,error,break,on,first,error
KafkaComponent -> public void setBreakOnFirstError(boolean breakOnFirstError);1508921878;This options controls what happens when a consumer is processing an exchange and it fails._If the option is <tt>false</tt> then the consumer continues to the next message and processes it._If the option is <tt>true</tt> then the consumer breaks out, and will seek back to offset of the_message that caused a failure, and then re-attempt to process this message. However this can lead_to endless processing of the same message if its bound to fail every time, eg a poison message._Therefore its recommended to deal with that for example by using Camel's error handler.;public void setBreakOnFirstError(boolean breakOnFirstError) {_        this.breakOnFirstError = breakOnFirstError__    };this,options,controls,what,happens,when,a,consumer,is,processing,an,exchange,and,it,fails,if,the,option,is,tt,false,tt,then,the,consumer,continues,to,the,next,message,and,processes,it,if,the,option,is,tt,true,tt,then,the,consumer,breaks,out,and,will,seek,back,to,offset,of,the,message,that,caused,a,failure,and,then,re,attempt,to,process,this,message,however,this,can,lead,to,endless,processing,of,the,same,message,if,its,bound,to,fail,every,time,eg,a,poison,message,therefore,its,recommended,to,deal,with,that,for,example,by,using,camel,s,error,handler;public,void,set,break,on,first,error,boolean,break,on,first,error,this,break,on,first,error,break,on,first,error
KafkaComponent -> public void setBreakOnFirstError(boolean breakOnFirstError);1513244677;This options controls what happens when a consumer is processing an exchange and it fails._If the option is <tt>false</tt> then the consumer continues to the next message and processes it._If the option is <tt>true</tt> then the consumer breaks out, and will seek back to offset of the_message that caused a failure, and then re-attempt to process this message. However this can lead_to endless processing of the same message if its bound to fail every time, eg a poison message._Therefore its recommended to deal with that for example by using Camel's error handler.;public void setBreakOnFirstError(boolean breakOnFirstError) {_        this.breakOnFirstError = breakOnFirstError__    };this,options,controls,what,happens,when,a,consumer,is,processing,an,exchange,and,it,fails,if,the,option,is,tt,false,tt,then,the,consumer,continues,to,the,next,message,and,processes,it,if,the,option,is,tt,true,tt,then,the,consumer,breaks,out,and,will,seek,back,to,offset,of,the,message,that,caused,a,failure,and,then,re,attempt,to,process,this,message,however,this,can,lead,to,endless,processing,of,the,same,message,if,its,bound,to,fail,every,time,eg,a,poison,message,therefore,its,recommended,to,deal,with,that,for,example,by,using,camel,s,error,handler;public,void,set,break,on,first,error,boolean,break,on,first,error,this,break,on,first,error,break,on,first,error
KafkaComponent -> public void setBreakOnFirstError(boolean breakOnFirstError);1513325704;This options controls what happens when a consumer is processing an exchange and it fails._If the option is <tt>false</tt> then the consumer continues to the next message and processes it._If the option is <tt>true</tt> then the consumer breaks out, and will seek back to offset of the_message that caused a failure, and then re-attempt to process this message. However this can lead_to endless processing of the same message if its bound to fail every time, eg a poison message._Therefore its recommended to deal with that for example by using Camel's error handler.;public void setBreakOnFirstError(boolean breakOnFirstError) {_        this.breakOnFirstError = breakOnFirstError__    };this,options,controls,what,happens,when,a,consumer,is,processing,an,exchange,and,it,fails,if,the,option,is,tt,false,tt,then,the,consumer,continues,to,the,next,message,and,processes,it,if,the,option,is,tt,true,tt,then,the,consumer,breaks,out,and,will,seek,back,to,offset,of,the,message,that,caused,a,failure,and,then,re,attempt,to,process,this,message,however,this,can,lead,to,endless,processing,of,the,same,message,if,its,bound,to,fail,every,time,eg,a,poison,message,therefore,its,recommended,to,deal,with,that,for,example,by,using,camel,s,error,handler;public,void,set,break,on,first,error,boolean,break,on,first,error,this,break,on,first,error,break,on,first,error
KafkaComponent -> public void setBreakOnFirstError(boolean breakOnFirstError);1518096715;This options controls what happens when a consumer is processing an exchange and it fails._If the option is <tt>false</tt> then the consumer continues to the next message and processes it._If the option is <tt>true</tt> then the consumer breaks out, and will seek back to offset of the_message that caused a failure, and then re-attempt to process this message. However this can lead_to endless processing of the same message if its bound to fail every time, eg a poison message._Therefore its recommended to deal with that for example by using Camel's error handler.;public void setBreakOnFirstError(boolean breakOnFirstError) {_        this.breakOnFirstError = breakOnFirstError__    };this,options,controls,what,happens,when,a,consumer,is,processing,an,exchange,and,it,fails,if,the,option,is,tt,false,tt,then,the,consumer,continues,to,the,next,message,and,processes,it,if,the,option,is,tt,true,tt,then,the,consumer,breaks,out,and,will,seek,back,to,offset,of,the,message,that,caused,a,failure,and,then,re,attempt,to,process,this,message,however,this,can,lead,to,endless,processing,of,the,same,message,if,its,bound,to,fail,every,time,eg,a,poison,message,therefore,its,recommended,to,deal,with,that,for,example,by,using,camel,s,error,handler;public,void,set,break,on,first,error,boolean,break,on,first,error,this,break,on,first,error,break,on,first,error
KafkaComponent -> public void setBreakOnFirstError(boolean breakOnFirstError);1540108163;This options controls what happens when a consumer is processing an exchange and it fails._If the option is <tt>false</tt> then the consumer continues to the next message and processes it._If the option is <tt>true</tt> then the consumer breaks out, and will seek back to offset of the_message that caused a failure, and then re-attempt to process this message. However this can lead_to endless processing of the same message if its bound to fail every time, eg a poison message._Therefore its recommended to deal with that for example by using Camel's error handler.;public void setBreakOnFirstError(boolean breakOnFirstError) {_        this.breakOnFirstError = breakOnFirstError__    };this,options,controls,what,happens,when,a,consumer,is,processing,an,exchange,and,it,fails,if,the,option,is,tt,false,tt,then,the,consumer,continues,to,the,next,message,and,processes,it,if,the,option,is,tt,true,tt,then,the,consumer,breaks,out,and,will,seek,back,to,offset,of,the,message,that,caused,a,failure,and,then,re,attempt,to,process,this,message,however,this,can,lead,to,endless,processing,of,the,same,message,if,its,bound,to,fail,every,time,eg,a,poison,message,therefore,its,recommended,to,deal,with,that,for,example,by,using,camel,s,error,handler;public,void,set,break,on,first,error,boolean,break,on,first,error,this,break,on,first,error,break,on,first,error
KafkaComponent -> public void setBreakOnFirstError(boolean breakOnFirstError);1547241305;This options controls what happens when a consumer is processing an exchange and it fails._If the option is <tt>false</tt> then the consumer continues to the next message and processes it._If the option is <tt>true</tt> then the consumer breaks out, and will seek back to offset of the_message that caused a failure, and then re-attempt to process this message. However this can lead_to endless processing of the same message if its bound to fail every time, eg a poison message._Therefore its recommended to deal with that for example by using Camel's error handler.;public void setBreakOnFirstError(boolean breakOnFirstError) {_        this.breakOnFirstError = breakOnFirstError__    };this,options,controls,what,happens,when,a,consumer,is,processing,an,exchange,and,it,fails,if,the,option,is,tt,false,tt,then,the,consumer,continues,to,the,next,message,and,processes,it,if,the,option,is,tt,true,tt,then,the,consumer,breaks,out,and,will,seek,back,to,offset,of,the,message,that,caused,a,failure,and,then,re,attempt,to,process,this,message,however,this,can,lead,to,endless,processing,of,the,same,message,if,its,bound,to,fail,every,time,eg,a,poison,message,therefore,its,recommended,to,deal,with,that,for,example,by,using,camel,s,error,handler;public,void,set,break,on,first,error,boolean,break,on,first,error,this,break,on,first,error,break,on,first,error
KafkaComponent -> public void setBreakOnFirstError(boolean breakOnFirstError);1548082117;This options controls what happens when a consumer is processing an exchange and it fails._If the option is <tt>false</tt> then the consumer continues to the next message and processes it._If the option is <tt>true</tt> then the consumer breaks out, and will seek back to offset of the_message that caused a failure, and then re-attempt to process this message. However this can lead_to endless processing of the same message if its bound to fail every time, eg a poison message._Therefore its recommended to deal with that for example by using Camel's error handler.;public void setBreakOnFirstError(boolean breakOnFirstError) {_        this.breakOnFirstError = breakOnFirstError__    };this,options,controls,what,happens,when,a,consumer,is,processing,an,exchange,and,it,fails,if,the,option,is,tt,false,tt,then,the,consumer,continues,to,the,next,message,and,processes,it,if,the,option,is,tt,true,tt,then,the,consumer,breaks,out,and,will,seek,back,to,offset,of,the,message,that,caused,a,failure,and,then,re,attempt,to,process,this,message,however,this,can,lead,to,endless,processing,of,the,same,message,if,its,bound,to,fail,every,time,eg,a,poison,message,therefore,its,recommended,to,deal,with,that,for,example,by,using,camel,s,error,handler;public,void,set,break,on,first,error,boolean,break,on,first,error,this,break,on,first,error,break,on,first,error
KafkaComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1491919462;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
KafkaComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1495715668;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
KafkaComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1508921878;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
KafkaComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1513244677;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
KafkaComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1513325704;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
KafkaComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1518096715;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
KafkaComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1540108163;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
KafkaComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1547241305;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
KafkaComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1548082117;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
KafkaComponent -> public void setConfiguration(KafkaConfiguration configuration);1489310117;Allows to pre-configure the Kafka component with common options that the endpoints will reuse.;public void setConfiguration(KafkaConfiguration configuration) {_        this.configuration = configuration__    };allows,to,pre,configure,the,kafka,component,with,common,options,that,the,endpoints,will,reuse;public,void,set,configuration,kafka,configuration,configuration,this,configuration,configuration
KafkaComponent -> public void setConfiguration(KafkaConfiguration configuration);1491919259;Allows to pre-configure the Kafka component with common options that the endpoints will reuse.;public void setConfiguration(KafkaConfiguration configuration) {_        this.configuration = configuration__    };allows,to,pre,configure,the,kafka,component,with,common,options,that,the,endpoints,will,reuse;public,void,set,configuration,kafka,configuration,configuration,this,configuration,configuration
KafkaComponent -> public void setConfiguration(KafkaConfiguration configuration);1491919462;Allows to pre-configure the Kafka component with common options that the endpoints will reuse.;public void setConfiguration(KafkaConfiguration configuration) {_        this.configuration = configuration__    };allows,to,pre,configure,the,kafka,component,with,common,options,that,the,endpoints,will,reuse;public,void,set,configuration,kafka,configuration,configuration,this,configuration,configuration
KafkaComponent -> public void setConfiguration(KafkaConfiguration configuration);1491919462;Allows to pre-configure the Kafka component with common options that the endpoints will reuse.;public void setConfiguration(KafkaConfiguration configuration) {_        this.configuration = configuration__    };allows,to,pre,configure,the,kafka,component,with,common,options,that,the,endpoints,will,reuse;public,void,set,configuration,kafka,configuration,configuration,this,configuration,configuration
KafkaComponent -> public void setConfiguration(KafkaConfiguration configuration);1491919462;Allows to pre-configure the Kafka component with common options that the endpoints will reuse.;public void setConfiguration(KafkaConfiguration configuration) {_        this.configuration = configuration__    };allows,to,pre,configure,the,kafka,component,with,common,options,that,the,endpoints,will,reuse;public,void,set,configuration,kafka,configuration,configuration,this,configuration,configuration
KafkaComponent -> public void setConfiguration(KafkaConfiguration configuration);1495715668;Allows to pre-configure the Kafka component with common options that the endpoints will reuse.;public void setConfiguration(KafkaConfiguration configuration) {_        this.configuration = configuration__    };allows,to,pre,configure,the,kafka,component,with,common,options,that,the,endpoints,will,reuse;public,void,set,configuration,kafka,configuration,configuration,this,configuration,configuration
KafkaComponent -> public void setConfiguration(KafkaConfiguration configuration);1508921878;Allows to pre-configure the Kafka component with common options that the endpoints will reuse.;public void setConfiguration(KafkaConfiguration configuration) {_        this.configuration = configuration__    };allows,to,pre,configure,the,kafka,component,with,common,options,that,the,endpoints,will,reuse;public,void,set,configuration,kafka,configuration,configuration,this,configuration,configuration
KafkaComponent -> public void setConfiguration(KafkaConfiguration configuration);1513244677;Allows to pre-configure the Kafka component with common options that the endpoints will reuse.;public void setConfiguration(KafkaConfiguration configuration) {_        this.configuration = configuration__    };allows,to,pre,configure,the,kafka,component,with,common,options,that,the,endpoints,will,reuse;public,void,set,configuration,kafka,configuration,configuration,this,configuration,configuration
KafkaComponent -> public void setConfiguration(KafkaConfiguration configuration);1513325704;Allows to pre-configure the Kafka component with common options that the endpoints will reuse.;public void setConfiguration(KafkaConfiguration configuration) {_        this.configuration = configuration__    };allows,to,pre,configure,the,kafka,component,with,common,options,that,the,endpoints,will,reuse;public,void,set,configuration,kafka,configuration,configuration,this,configuration,configuration
KafkaComponent -> public void setConfiguration(KafkaConfiguration configuration);1518096715;Allows to pre-configure the Kafka component with common options that the endpoints will reuse.;public void setConfiguration(KafkaConfiguration configuration) {_        this.configuration = configuration__    };allows,to,pre,configure,the,kafka,component,with,common,options,that,the,endpoints,will,reuse;public,void,set,configuration,kafka,configuration,configuration,this,configuration,configuration
KafkaComponent -> public void setConfiguration(KafkaConfiguration configuration);1540108163;Allows to pre-configure the Kafka component with common options that the endpoints will reuse.;public void setConfiguration(KafkaConfiguration configuration) {_        this.configuration = configuration__    };allows,to,pre,configure,the,kafka,component,with,common,options,that,the,endpoints,will,reuse;public,void,set,configuration,kafka,configuration,configuration,this,configuration,configuration
KafkaComponent -> public void setConfiguration(KafkaConfiguration configuration);1547241305;Allows to pre-configure the Kafka component with common options that the endpoints will reuse.;public void setConfiguration(KafkaConfiguration configuration) {_        this.configuration = configuration__    };allows,to,pre,configure,the,kafka,component,with,common,options,that,the,endpoints,will,reuse;public,void,set,configuration,kafka,configuration,configuration,this,configuration,configuration
KafkaComponent -> public void setConfiguration(KafkaConfiguration configuration);1548082117;Allows to pre-configure the Kafka component with common options that the endpoints will reuse.;public void setConfiguration(KafkaConfiguration configuration) {_        this.configuration = configuration__    };allows,to,pre,configure,the,kafka,component,with,common,options,that,the,endpoints,will,reuse;public,void,set,configuration,kafka,configuration,configuration,this,configuration,configuration
