commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;8;;public static File constructTempDir(String suffix) {     File file = new File(TMPDIR + File.separator + suffix).     if (!file.mkdirs()) {         throw new RuntimeException("could not create temp directory: " + file.getAbsolutePath()).     }     file.deleteOnExit().     return file. }
false;public,static;1;3;;public static String perTest(String directory) {     return RandomStringUtils.randomAlphanumeric(8) + "-" + directory. }
false;public,static;0;12;;public static int getAvailablePort() {     try {         ServerSocket socket = new ServerSocket(0).         try {             return socket.getLocalPort().         } finally {             socket.close().         }     } catch (IOException e) {         throw new IllegalStateException("Cannot find available port: " + e.getMessage(), e).     } }
false;public,static;1;12;;public static boolean deleteFile(File path) throws FileNotFoundException {     if (!path.exists()) {         throw new FileNotFoundException(path.getAbsolutePath()).     }     boolean ret = true.     if (path.isDirectory()) {         for (File f : path.listFiles()) {             ret = ret && deleteFile(f).         }     }     return ret && path.delete(). }
