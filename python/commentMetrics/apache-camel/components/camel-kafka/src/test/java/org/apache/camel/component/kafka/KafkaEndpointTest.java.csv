commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Before public void setup() {     endpoint = new KafkaEndpoint("kafka:mytopic?brokers=localhost", new KafkaComponent(new DefaultCamelContext())). }
false;public;0;18;;@Test public void createKafkaExchangeShouldSetHeaders() {     when(mockRecord.key()).thenReturn("somekey").     when(mockRecord.topic()).thenReturn("topic").     when(mockRecord.partition()).thenReturn(4).     when(mockRecord.offset()).thenReturn(56L).     when(mockRecord.timestamp()).thenReturn(1518026587392L).     Exchange exchange = endpoint.createKafkaExchange(mockRecord).     Message inMessage = exchange.getIn().     assertNotNull(inMessage).     assertEquals("somekey", inMessage.getHeader(KafkaConstants.KEY)).     assertEquals("topic", inMessage.getHeader(KafkaConstants.TOPIC)).     assertEquals(4, inMessage.getHeader(KafkaConstants.PARTITION)).     assertEquals(56L, inMessage.getHeader(KafkaConstants.OFFSET)).     assertEquals(1518026587392L, inMessage.getHeader(KafkaConstants.TIMESTAMP)). }
false;public;0;4;;@Test public void isSingletonShoudlReturnTrue() {     assertTrue(endpoint.isSingleton()). }
