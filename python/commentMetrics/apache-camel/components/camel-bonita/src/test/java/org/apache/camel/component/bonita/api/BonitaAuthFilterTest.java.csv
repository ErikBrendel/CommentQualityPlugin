commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Before public void setup() {     MockitoAnnotations.initMocks(this).     Map<String, Cookie> resultCookies = new HashMap<>().     Mockito.when(requestContext.getCookies()).thenReturn(resultCookies). }
false;public;0;8;;@Test(expected = IllegalArgumentException.class) public void testBonitaAuthFilterUsernameEmpty() throws IOException {     BonitaAPIConfig bonitaApiConfig = new BonitaAPIConfig("localhost", "port", "", "password").     BonitaAuthFilter bonitaAuthFilter = new BonitaAuthFilter(bonitaApiConfig).     bonitaAuthFilter.filter(requestContext). }
false;public;0;7;;@Test(expected = IllegalArgumentException.class) public void testBonitaAuthFilterPasswordEmpty() throws IOException {     BonitaAPIConfig bonitaApiConfig = new BonitaAPIConfig("localhost", "port", "username", "").     BonitaAuthFilter bonitaAuthFilter = new BonitaAuthFilter(bonitaApiConfig).     bonitaAuthFilter.filter(requestContext). }
