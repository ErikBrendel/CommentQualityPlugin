commented;modifiers;parameterAmount;loc;comment;code
false;protected;3;10;;protected Endpoint createEndpoint(String uri, String remaining, Map<String, Object> parameters) throws Exception {     HipchatEndpoint endpoint = getHipchatEndpoint(uri).     setProperties(endpoint.getConfiguration(), parameters).     if (endpoint.getConfiguration().getAuthToken() == null) {         throw new HipchatException("OAuth 2 auth token must be specified").     }     parseUri(remaining, endpoint).     log.debug("Using Hipchat API URL: {}", endpoint.getConfiguration().hipChatUrl()).     return endpoint. }
false;private;2;12;;private void parseUri(String remaining, HipchatEndpoint endpoint) throws Exception {     String uri = URISupport.normalizeUri(remaining).     URI hipChatUri = new URI(uri).     if (hipChatUri.getHost() != null) {         endpoint.getConfiguration().setHost(hipChatUri.getHost()).         if (hipChatUri.getPort() != -1) {             endpoint.getConfiguration().setPort(hipChatUri.getPort()).         }         endpoint.getConfiguration().setProtocol(hipChatUri.getScheme()).     } }
false;protected;1;3;;protected HipchatEndpoint getHipchatEndpoint(String uri) {     return new HipchatEndpoint(uri, this). }
