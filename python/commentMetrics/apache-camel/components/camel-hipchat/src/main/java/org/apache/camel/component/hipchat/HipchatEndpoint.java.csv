commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public Producer createProducer() throws Exception {     return new HipchatProducer(this). }
false;public;1;9;;public Consumer createConsumer(Processor processor) throws Exception {     HipchatConsumer consumer = new HipchatConsumer(this, processor).     // Default delay of 500 millis is too often and would result in Rate Limit error's from     // HipChat API as per https://www.hipchat.com/docs/apiv2/rate_limiting. End user can override using     // consumer.delay parameter     consumer.setDelay(HipchatConsumer.DEFAULT_CONSUMER_DELAY).     configureConsumer(consumer).     return consumer. }
false;public;0;3;;public boolean isSingleton() {     return true. }
false;public;0;3;;public HipchatConfiguration getConfiguration() {     return configuration. }
