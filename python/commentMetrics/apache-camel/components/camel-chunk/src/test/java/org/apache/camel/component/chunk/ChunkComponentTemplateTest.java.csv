commented;modifiers;parameterAmount;loc;comment;code
true;public;0;13;/**  * Test using code Template header  */ ;/**  * Test using code Template header  */ @Test public void testChunkWithTemplateHeader() throws Exception {     // Prepare     Exchange exchange = createExchangeWithBody("The Body").     exchange.getIn().setHeader("someHeader", "Some Header").     exchange.getIn().setHeader(ChunkConstants.CHUNK_TEMPLATE, "Body='{$body}'|SomeHeader='{$headers.someHeader}'").     endSimpleMock.expectedMessageCount(1).     endSimpleMock.expectedBodiesReceived("Body='The Body'|SomeHeader='Some Header'").     // Act     startSimpleProducerTemplate.send(exchange).     // Verify     assertMockEndpointsSatisfied(). }
false;public;0;6;;@Override public void configure() {     from("direct:startSimple").to("chunk://hello").to("mock:endSimple"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() {             from("direct:startSimple").to("chunk://hello").to("mock:endSimple").         }     }. }
