commented;modifiers;parameterAmount;loc;comment;code
true;public;0;12;/**  * Test using two following distinct themeLayer of the same theme without Resource URI header defined  */ ;/**  * Test using two following distinct themeLayer of the same theme without Resource URI header defined  */ @Test public void testChunkDoubleLayers() throws Exception {     // Prepare     Exchange exchange = createExchangeWithBody("The Body").     exchange.getIn().setHeader("name", "Andrew").     endSimpleMock.expectedMessageCount(1).     endSimpleMock.expectedBodiesReceived("<div>\nMars to Andrew. Come in, Andrew. This is the body: <div>\nEarth to Andrew. Come in, Andrew.\n</div>\n\n</div>\n").     // Act     startSimpleProducerTemplate.send(exchange).     // Verify     assertMockEndpointsSatisfied(). }
false;public;0;7;;@Override public void configure() {     from("direct:startSimple").to("chunk:example?themeLayer=example_1").to("chunk:example?themeLayer=example_2").to("mock:endSimple"). }
false;protected;0;12;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() {             from("direct:startSimple").to("chunk:example?themeLayer=example_1").to("chunk:example?themeLayer=example_2").to("mock:endSimple").         }     }. }
