commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testJackson() throws InterruptedException {     getMockEndpoint("mock:result").expectedMessageCount(2).     getMockEndpoint("mock:result").expectedMessagesMatches(body().isInstanceOf(DummyObject.class)).     template.sendBody("direct:start", "[{\"dummy\": \"value1\"}, {\"dummy\": \"value2\"}]").     assertMockEndpointsSatisfied(). }
false;public;0;7;;@Override public void configure() throws Exception {     // you can specify the pojo class type for unmarshal the jason file     JacksonDataFormat format = new JacksonDataFormat(DummyObject.class).     format.useList().     from("direct:start").unmarshal(format).split(body()).to("mock:result"). }
false;protected;0;12;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // you can specify the pojo class type for unmarshal the jason file             JacksonDataFormat format = new JacksonDataFormat(DummyObject.class).             format.useList().             from("direct:start").unmarshal(format).split(body()).to("mock:result").         }     }. }
false;public;0;3;;public String getDummy() {     return dummy. }
false;public;1;3;;public void setDummy(String dummy) {     this.dummy = dummy. }
