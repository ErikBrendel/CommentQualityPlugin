# id;timestamp;commentText;codeText;commentWords;codeWords
CxfEndpointUtils -> public static String getEffectiveAddress(Exchange exchange, String defaultAddress);1308235174;Get effective address for a client to invoke a service.  It first looks for the_{@link org.apache.camel.Exchange#DESTINATION_OVERRIDE_URL} in the IN message header._If the header is not found, it will return the default address.__@param exchange_@param defaultAddress;public static String getEffectiveAddress(Exchange exchange, String defaultAddress) {_        String retval = exchange.getIn().getHeader(Exchange.DESTINATION_OVERRIDE_URL, String.class)__        if (retval == null) {_            retval = defaultAddress__        } else {_            LOG.trace("Client address is overridden by header '{}' to value '{}'",_                Exchange.DESTINATION_OVERRIDE_URL, retval)__        }_        return retval__    };get,effective,address,for,a,client,to,invoke,a,service,it,first,looks,for,the,link,org,apache,camel,exchange,in,the,in,message,header,if,the,header,is,not,found,it,will,return,the,default,address,param,exchange,param,default,address;public,static,string,get,effective,address,exchange,exchange,string,default,address,string,retval,exchange,get,in,get,header,exchange,string,class,if,retval,null,retval,default,address,else,log,trace,client,address,is,overridden,by,header,to,value,exchange,retval,return,retval
CxfEndpointUtils -> public static String getEffectiveAddress(Exchange exchange, String defaultAddress);1308788876;Get effective address for a client to invoke a service.  It first looks for the_{@link org.apache.camel.Exchange#DESTINATION_OVERRIDE_URL} in the IN message header._If the header is not found, it will return the default address.__@param exchange_@param defaultAddress;public static String getEffectiveAddress(Exchange exchange, String defaultAddress) {_        String retval = exchange.getIn().getHeader(Exchange.DESTINATION_OVERRIDE_URL, String.class)__        if (retval == null) {_            retval = defaultAddress__        } else {_            LOG.trace("Client address is overridden by header '{}' to value '{}'",_                Exchange.DESTINATION_OVERRIDE_URL, retval)__        }_        return retval__    };get,effective,address,for,a,client,to,invoke,a,service,it,first,looks,for,the,link,org,apache,camel,exchange,in,the,in,message,header,if,the,header,is,not,found,it,will,return,the,default,address,param,exchange,param,default,address;public,static,string,get,effective,address,exchange,exchange,string,default,address,string,retval,exchange,get,in,get,header,exchange,string,class,if,retval,null,retval,default,address,else,log,trace,client,address,is,overridden,by,header,to,value,exchange,retval,return,retval
CxfEndpointUtils -> public static String getEffectiveAddress(Exchange exchange, String defaultAddress);1315625005;Get effective address for a client to invoke a service.  It first looks for the_{@link org.apache.camel.Exchange#DESTINATION_OVERRIDE_URL} in the IN message header._If the header is not found, it will return the default address.__@param exchange_@param defaultAddress;public static String getEffectiveAddress(Exchange exchange, String defaultAddress) {_        String retval = exchange.getIn().getHeader(Exchange.DESTINATION_OVERRIDE_URL, String.class)__        if (retval == null) {_            retval = defaultAddress__        } else {_            LOG.trace("Client address is overridden by header '{}' to value '{}'",_                Exchange.DESTINATION_OVERRIDE_URL, retval)__        }_        return retval__    };get,effective,address,for,a,client,to,invoke,a,service,it,first,looks,for,the,link,org,apache,camel,exchange,in,the,in,message,header,if,the,header,is,not,found,it,will,return,the,default,address,param,exchange,param,default,address;public,static,string,get,effective,address,exchange,exchange,string,default,address,string,retval,exchange,get,in,get,header,exchange,string,class,if,retval,null,retval,default,address,else,log,trace,client,address,is,overridden,by,header,to,value,exchange,retval,return,retval
CxfEndpointUtils -> public static String getEffectiveAddress(Exchange exchange, String defaultAddress);1389726752;Get effective address for a client to invoke a service.  It first looks for the_{@link org.apache.camel.Exchange#DESTINATION_OVERRIDE_URL} in the IN message header._If the header is not found, it will return the default address.__@param exchange_@param defaultAddress;public static String getEffectiveAddress(Exchange exchange, String defaultAddress) {_        String retval = exchange.getIn().getHeader(Exchange.DESTINATION_OVERRIDE_URL, String.class)__        if (retval == null) {_            retval = defaultAddress__        } else {_            LOG.trace("Client address is overridden by header '{}' to value '{}'",_                Exchange.DESTINATION_OVERRIDE_URL, retval)__        }_        return retval__    };get,effective,address,for,a,client,to,invoke,a,service,it,first,looks,for,the,link,org,apache,camel,exchange,in,the,in,message,header,if,the,header,is,not,found,it,will,return,the,default,address,param,exchange,param,default,address;public,static,string,get,effective,address,exchange,exchange,string,default,address,string,retval,exchange,get,in,get,header,exchange,string,class,if,retval,null,retval,default,address,else,log,trace,client,address,is,overridden,by,header,to,value,exchange,retval,return,retval
CxfEndpointUtils -> public static Bus createBus(CamelContext context);1315625005;Create a CXF bus with either BusFactory or SpringBusFactory if Camel Context_is SpringCamelContext.  In the latter case, this method updates the bus_configuration with the applicationContext which SpringCamelContext holds__@param context - the Camel Context;public static Bus createBus(CamelContext context) {_        BusFactory busFactory = BusFactory.newInstance()___        if (context instanceof SpringCamelContext) {_            SpringCamelContext springCamelContext = (SpringCamelContext) context__            ApplicationContext applicationContext = springCamelContext.getApplicationContext()__            busFactory = new SpringBusFactory(applicationContext)__        }_        return busFactory.createBus()__    };create,a,cxf,bus,with,either,bus,factory,or,spring,bus,factory,if,camel,context,is,spring,camel,context,in,the,latter,case,this,method,updates,the,bus,configuration,with,the,application,context,which,spring,camel,context,holds,param,context,the,camel,context;public,static,bus,create,bus,camel,context,context,bus,factory,bus,factory,bus,factory,new,instance,if,context,instanceof,spring,camel,context,spring,camel,context,spring,camel,context,spring,camel,context,context,application,context,application,context,spring,camel,context,get,application,context,bus,factory,new,spring,bus,factory,application,context,return,bus,factory,create,bus
CxfEndpointUtils -> public static Bus createBus(CamelContext context);1389726752;Create a CXF bus with either BusFactory or SpringBusFactory if Camel Context_is SpringCamelContext.  In the latter case, this method updates the bus_configuration with the applicationContext which SpringCamelContext holds__@param context - the Camel Context;public static Bus createBus(CamelContext context) {_        BusFactory busFactory = BusFactory.newInstance()___        if (context instanceof SpringCamelContext) {_            SpringCamelContext springCamelContext = (SpringCamelContext) context__            ApplicationContext applicationContext = springCamelContext.getApplicationContext()__            busFactory = new SpringBusFactory(applicationContext)__        }_        return busFactory.createBus()__    };create,a,cxf,bus,with,either,bus,factory,or,spring,bus,factory,if,camel,context,is,spring,camel,context,in,the,latter,case,this,method,updates,the,bus,configuration,with,the,application,context,which,spring,camel,context,holds,param,context,the,camel,context;public,static,bus,create,bus,camel,context,context,bus,factory,bus,factory,bus,factory,new,instance,if,context,instanceof,spring,camel,context,spring,camel,context,spring,camel,context,spring,camel,context,context,application,context,application,context,spring,camel,context,get,application,context,bus,factory,new,spring,bus,factory,application,context,return,bus,factory,create,bus
