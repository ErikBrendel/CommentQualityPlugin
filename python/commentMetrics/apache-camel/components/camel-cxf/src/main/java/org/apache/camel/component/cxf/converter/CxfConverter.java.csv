# id;timestamp;commentText;codeText;commentWords;codeWords
CxfConverter -> @SuppressWarnings("unchecked")     @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value,              TypeConverterRegistry registry);1258357702;Use a fallback type converter so we can convert the embedded list element_if the value is MessageContentsList.  The algorithm of this converter_finds the first non-null list element from the list and applies convertion_to the list element.__@param type the desired type to be converted to_@param exchange optional exchange which can be null_@param value the object to be converted_@param registry type converter registry_@return the converted value of the desired type or null if no suitable converter found;@SuppressWarnings("unchecked")_    @FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, _            TypeConverterRegistry registry) {_        _        if (MessageContentsList.class.isAssignableFrom(value.getClass())) {_            MessageContentsList list = (MessageContentsList)value___            for (Object embedded : list) {_                if (embedded != null) {_                    if (type.isInstance(embedded)) {_                        return type.cast(embedded)__                    } else {_                        TypeConverter tc = registry.lookup(type, embedded.getClass())__                        if (tc != null) {_                            return tc.convertTo(type, exchange, embedded)__                        }_                    }_                }_            }_            _            return (T) Void.TYPE__        }_        _        return null__    };use,a,fallback,type,converter,so,we,can,convert,the,embedded,list,element,if,the,value,is,message,contents,list,the,algorithm,of,this,converter,finds,the,first,non,null,list,element,from,the,list,and,applies,convertion,to,the,list,element,param,type,the,desired,type,to,be,converted,to,param,exchange,optional,exchange,which,can,be,null,param,value,the,object,to,be,converted,param,registry,type,converter,registry,return,the,converted,value,of,the,desired,type,or,null,if,no,suitable,converter,found;suppress,warnings,unchecked,fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,if,message,contents,list,class,is,assignable,from,value,get,class,message,contents,list,list,message,contents,list,value,for,object,embedded,list,if,embedded,null,if,type,is,instance,embedded,return,type,cast,embedded,else,type,converter,tc,registry,lookup,type,embedded,get,class,if,tc,null,return,tc,convert,to,type,exchange,embedded,return,t,void,type,return,null
CxfConverter -> @SuppressWarnings("unchecked")     @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value,              TypeConverterRegistry registry);1280130252;Use a fallback type converter so we can convert the embedded list element_if the value is MessageContentsList.  The algorithm of this converter_finds the first non-null list element from the list and applies conversion_to the list element.__@param type the desired type to be converted to_@param exchange optional exchange which can be null_@param value the object to be converted_@param registry type converter registry_@return the converted value of the desired type or null if no suitable converter found;@SuppressWarnings("unchecked")_    @FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, _            TypeConverterRegistry registry) {_        _        if (MessageContentsList.class.isAssignableFrom(value.getClass())) {_            MessageContentsList list = (MessageContentsList)value___            for (Object embedded : list) {_                if (embedded != null) {_                    if (type.isInstance(embedded)) {_                        return type.cast(embedded)__                    } else {_                        TypeConverter tc = registry.lookup(type, embedded.getClass())__                        if (tc != null) {_                            return tc.convertTo(type, exchange, embedded)__                        }_                    }_                }_            }_            _            return (T) Void.TYPE__        }_        _        return null__    };use,a,fallback,type,converter,so,we,can,convert,the,embedded,list,element,if,the,value,is,message,contents,list,the,algorithm,of,this,converter,finds,the,first,non,null,list,element,from,the,list,and,applies,conversion,to,the,list,element,param,type,the,desired,type,to,be,converted,to,param,exchange,optional,exchange,which,can,be,null,param,value,the,object,to,be,converted,param,registry,type,converter,registry,return,the,converted,value,of,the,desired,type,or,null,if,no,suitable,converter,found;suppress,warnings,unchecked,fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,if,message,contents,list,class,is,assignable,from,value,get,class,message,contents,list,list,message,contents,list,value,for,object,embedded,list,if,embedded,null,if,type,is,instance,embedded,return,type,cast,embedded,else,type,converter,tc,registry,lookup,type,embedded,get,class,if,tc,null,return,tc,convert,to,type,exchange,embedded,return,t,void,type,return,null
CxfConverter -> @SuppressWarnings("unchecked")     @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value,              TypeConverterRegistry registry);1286513244;Use a fallback type converter so we can convert the embedded list element_if the value is MessageContentsList.  The algorithm of this converter_finds the first non-null list element from the list and applies conversion_to the list element.__@param type the desired type to be converted to_@param exchange optional exchange which can be null_@param value the object to be converted_@param registry type converter registry_@return the converted value of the desired type or null if no suitable converter found;@SuppressWarnings("unchecked")_    @FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, _            TypeConverterRegistry registry) {_        _        if (MessageContentsList.class.isAssignableFrom(value.getClass())) {_            MessageContentsList list = (MessageContentsList)value___            for (Object embedded : list) {_                if (embedded != null) {_                    if (type.isInstance(embedded)) {_                        return type.cast(embedded)__                    } else {_                        TypeConverter tc = registry.lookup(type, embedded.getClass())__                        if (tc != null) {_                            return tc.convertTo(type, exchange, embedded)__                        }_                    }_                }_            }_            _            return (T) Void.TYPE__        }_        _        return null__    };use,a,fallback,type,converter,so,we,can,convert,the,embedded,list,element,if,the,value,is,message,contents,list,the,algorithm,of,this,converter,finds,the,first,non,null,list,element,from,the,list,and,applies,conversion,to,the,list,element,param,type,the,desired,type,to,be,converted,to,param,exchange,optional,exchange,which,can,be,null,param,value,the,object,to,be,converted,param,registry,type,converter,registry,return,the,converted,value,of,the,desired,type,or,null,if,no,suitable,converter,found;suppress,warnings,unchecked,fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,if,message,contents,list,class,is,assignable,from,value,get,class,message,contents,list,list,message,contents,list,value,for,object,embedded,list,if,embedded,null,if,type,is,instance,embedded,return,type,cast,embedded,else,type,converter,tc,registry,lookup,type,embedded,get,class,if,tc,null,return,tc,convert,to,type,exchange,embedded,return,t,void,type,return,null
CxfConverter -> @SuppressWarnings("unchecked")     @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value,              TypeConverterRegistry registry);1286537870;Use a fallback type converter so we can convert the embedded list element_if the value is MessageContentsList.  The algorithm of this converter_finds the first non-null list element from the list and applies conversion_to the list element.__@param type the desired type to be converted to_@param exchange optional exchange which can be null_@param value the object to be converted_@param registry type converter registry_@return the converted value of the desired type or null if no suitable converter found;@SuppressWarnings("unchecked")_    @FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, _            TypeConverterRegistry registry) {__        _        if (MessageContentsList.class.isAssignableFrom(value.getClass())) {_            MessageContentsList list = (MessageContentsList)value___            for (Object embedded : list) {_                if (embedded != null) {_                    if (type.isInstance(embedded)) {_                        return type.cast(embedded)__                    } else {_                        TypeConverter tc = registry.lookup(type, embedded.getClass())__                        if (tc != null) {_                            return tc.convertTo(type, exchange, embedded)__                        }_                    }_                }_            }_            _            return (T) Void.TYPE__        }__        _        if (Response.class.isAssignableFrom(value.getClass())) {_            Response response = (Response) value__            Object entity = response.getEntity()___            TypeConverter tc = registry.lookup(type, entity.getClass())__            if (tc != null) {_                return tc.convertTo(type, exchange, entity)__            }__            _            return (T) Void.TYPE__        }_        _        return null__    };use,a,fallback,type,converter,so,we,can,convert,the,embedded,list,element,if,the,value,is,message,contents,list,the,algorithm,of,this,converter,finds,the,first,non,null,list,element,from,the,list,and,applies,conversion,to,the,list,element,param,type,the,desired,type,to,be,converted,to,param,exchange,optional,exchange,which,can,be,null,param,value,the,object,to,be,converted,param,registry,type,converter,registry,return,the,converted,value,of,the,desired,type,or,null,if,no,suitable,converter,found;suppress,warnings,unchecked,fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,if,message,contents,list,class,is,assignable,from,value,get,class,message,contents,list,list,message,contents,list,value,for,object,embedded,list,if,embedded,null,if,type,is,instance,embedded,return,type,cast,embedded,else,type,converter,tc,registry,lookup,type,embedded,get,class,if,tc,null,return,tc,convert,to,type,exchange,embedded,return,t,void,type,if,response,class,is,assignable,from,value,get,class,response,response,response,value,object,entity,response,get,entity,type,converter,tc,registry,lookup,type,entity,get,class,if,tc,null,return,tc,convert,to,type,exchange,entity,return,t,void,type,return,null
CxfConverter -> @SuppressWarnings("unchecked")     @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value,              TypeConverterRegistry registry);1296546062;Use a fallback type converter so we can convert the embedded list element_if the value is MessageContentsList.  The algorithm of this converter_finds the first non-null list element from the list and applies conversion_to the list element.__@param type the desired type to be converted to_@param exchange optional exchange which can be null_@param value the object to be converted_@param registry type converter registry_@return the converted value of the desired type or null if no suitable converter found;@SuppressWarnings("unchecked")_    @FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, _            TypeConverterRegistry registry) {__        _        if (MessageContentsList.class.isAssignableFrom(value.getClass())) {_            MessageContentsList list = (MessageContentsList)value___            for (Object embedded : list) {_                if (embedded != null) {_                    if (type.isInstance(embedded)) {_                        return type.cast(embedded)__                    } else {_                        TypeConverter tc = registry.lookup(type, embedded.getClass())__                        if (tc != null) {_                            return tc.convertTo(type, exchange, embedded)__                        }_                    }_                }_            }_            _            return (T) Void.TYPE__        }__        _        if (Response.class.isAssignableFrom(value.getClass())) {_            Response response = (Response) value__            Object entity = response.getEntity()___            TypeConverter tc = registry.lookup(type, entity.getClass())__            if (tc != null) {_                return tc.convertTo(type, exchange, entity)__            }__            _            return (T) Void.TYPE__        }_        _        return null__    };use,a,fallback,type,converter,so,we,can,convert,the,embedded,list,element,if,the,value,is,message,contents,list,the,algorithm,of,this,converter,finds,the,first,non,null,list,element,from,the,list,and,applies,conversion,to,the,list,element,param,type,the,desired,type,to,be,converted,to,param,exchange,optional,exchange,which,can,be,null,param,value,the,object,to,be,converted,param,registry,type,converter,registry,return,the,converted,value,of,the,desired,type,or,null,if,no,suitable,converter,found;suppress,warnings,unchecked,fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,if,message,contents,list,class,is,assignable,from,value,get,class,message,contents,list,list,message,contents,list,value,for,object,embedded,list,if,embedded,null,if,type,is,instance,embedded,return,type,cast,embedded,else,type,converter,tc,registry,lookup,type,embedded,get,class,if,tc,null,return,tc,convert,to,type,exchange,embedded,return,t,void,type,if,response,class,is,assignable,from,value,get,class,response,response,response,value,object,entity,response,get,entity,type,converter,tc,registry,lookup,type,entity,get,class,if,tc,null,return,tc,convert,to,type,exchange,entity,return,t,void,type,return,null
CxfConverter -> @SuppressWarnings("unchecked")     @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value,              TypeConverterRegistry registry);1296558142;Use a fallback type converter so we can convert the embedded list element_if the value is MessageContentsList.  The algorithm of this converter_finds the first non-null list element from the list and applies conversion_to the list element.__@param type the desired type to be converted to_@param exchange optional exchange which can be null_@param value the object to be converted_@param registry type converter registry_@return the converted value of the desired type or null if no suitable converter found;@SuppressWarnings("unchecked")_    @FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, _            TypeConverterRegistry registry) {__        _        if (MessageContentsList.class.isAssignableFrom(value.getClass())) {_            MessageContentsList list = (MessageContentsList)value___            for (Object embedded : list) {_                if (embedded != null) {_                    if (type.isInstance(embedded)) {_                        return type.cast(embedded)__                    } else {_                        TypeConverter tc = registry.lookup(type, embedded.getClass())__                        if (tc != null) {_                            return tc.convertTo(type, exchange, embedded)__                        }_                    }_                }_            }_            _            return (T) Void.TYPE__        }__        _        if (Response.class.isAssignableFrom(value.getClass())) {_            Response response = (Response) value__            Object entity = response.getEntity()___            TypeConverter tc = registry.lookup(type, entity.getClass())__            if (tc != null) {_                return tc.convertTo(type, exchange, entity)__            }__            _            return (T) Void.TYPE__        }_        _        return null__    };use,a,fallback,type,converter,so,we,can,convert,the,embedded,list,element,if,the,value,is,message,contents,list,the,algorithm,of,this,converter,finds,the,first,non,null,list,element,from,the,list,and,applies,conversion,to,the,list,element,param,type,the,desired,type,to,be,converted,to,param,exchange,optional,exchange,which,can,be,null,param,value,the,object,to,be,converted,param,registry,type,converter,registry,return,the,converted,value,of,the,desired,type,or,null,if,no,suitable,converter,found;suppress,warnings,unchecked,fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,if,message,contents,list,class,is,assignable,from,value,get,class,message,contents,list,list,message,contents,list,value,for,object,embedded,list,if,embedded,null,if,type,is,instance,embedded,return,type,cast,embedded,else,type,converter,tc,registry,lookup,type,embedded,get,class,if,tc,null,return,tc,convert,to,type,exchange,embedded,return,t,void,type,if,response,class,is,assignable,from,value,get,class,response,response,response,value,object,entity,response,get,entity,type,converter,tc,registry,lookup,type,entity,get,class,if,tc,null,return,tc,convert,to,type,exchange,entity,return,t,void,type,return,null
CxfConverter -> @SuppressWarnings("unchecked")     @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value,              TypeConverterRegistry registry);1297969159;Use a fallback type converter so we can convert the embedded list element_if the value is MessageContentsList.  The algorithm of this converter_finds the first non-null list element from the list and applies conversion_to the list element.__@param type the desired type to be converted to_@param exchange optional exchange which can be null_@param value the object to be converted_@param registry type converter registry_@return the converted value of the desired type or null if no suitable converter found;@SuppressWarnings("unchecked")_    @FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, _            TypeConverterRegistry registry) {__        _        if (MessageContentsList.class.isAssignableFrom(value.getClass())) {_            MessageContentsList list = (MessageContentsList)value___            for (Object embedded : list) {_                if (embedded != null) {_                    if (type.isInstance(embedded)) {_                        return type.cast(embedded)__                    } else {_                        TypeConverter tc = registry.lookup(type, embedded.getClass())__                        if (tc != null) {_                            return tc.convertTo(type, exchange, embedded)__                        }_                    }_                }_            }_            _            return (T) Void.TYPE__        }__        _        if (Response.class.isAssignableFrom(value.getClass())) {_            Response response = (Response) value__            Object entity = response.getEntity()___            TypeConverter tc = registry.lookup(type, entity.getClass())__            if (tc != null) {_                return tc.convertTo(type, exchange, entity)__            }__            _            return (T) Void.TYPE__        }_        _        return null__    };use,a,fallback,type,converter,so,we,can,convert,the,embedded,list,element,if,the,value,is,message,contents,list,the,algorithm,of,this,converter,finds,the,first,non,null,list,element,from,the,list,and,applies,conversion,to,the,list,element,param,type,the,desired,type,to,be,converted,to,param,exchange,optional,exchange,which,can,be,null,param,value,the,object,to,be,converted,param,registry,type,converter,registry,return,the,converted,value,of,the,desired,type,or,null,if,no,suitable,converter,found;suppress,warnings,unchecked,fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,if,message,contents,list,class,is,assignable,from,value,get,class,message,contents,list,list,message,contents,list,value,for,object,embedded,list,if,embedded,null,if,type,is,instance,embedded,return,type,cast,embedded,else,type,converter,tc,registry,lookup,type,embedded,get,class,if,tc,null,return,tc,convert,to,type,exchange,embedded,return,t,void,type,if,response,class,is,assignable,from,value,get,class,response,response,response,value,object,entity,response,get,entity,type,converter,tc,registry,lookup,type,entity,get,class,if,tc,null,return,tc,convert,to,type,exchange,entity,return,t,void,type,return,null
CxfConverter -> @SuppressWarnings("unchecked")     @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value,              TypeConverterRegistry registry);1308233071;Use a fallback type converter so we can convert the embedded list element_if the value is MessageContentsList.  The algorithm of this converter_finds the first non-null list element from the list and applies conversion_to the list element.__@param type the desired type to be converted to_@param exchange optional exchange which can be null_@param value the object to be converted_@param registry type converter registry_@return the converted value of the desired type or null if no suitable converter found;@SuppressWarnings("unchecked")_    @FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, _            TypeConverterRegistry registry) {__        _        if (MessageContentsList.class.isAssignableFrom(value.getClass())) {_            MessageContentsList list = (MessageContentsList)value___            for (Object embedded : list) {_                if (embedded != null) {_                    if (type.isInstance(embedded)) {_                        return type.cast(embedded)__                    } else {_                        TypeConverter tc = registry.lookup(type, embedded.getClass())__                        if (tc != null) {_                            return tc.convertTo(type, exchange, embedded)__                        }_                    }_                }_            }_            _            return (T) Void.TYPE__        }__        _        if (Response.class.isAssignableFrom(value.getClass())) {_            Response response = (Response) value__            Object entity = response.getEntity()___            TypeConverter tc = registry.lookup(type, entity.getClass())__            if (tc != null) {_                return tc.convertTo(type, exchange, entity)__            }__            _            return (T) Void.TYPE__        }_        _        return null__    };use,a,fallback,type,converter,so,we,can,convert,the,embedded,list,element,if,the,value,is,message,contents,list,the,algorithm,of,this,converter,finds,the,first,non,null,list,element,from,the,list,and,applies,conversion,to,the,list,element,param,type,the,desired,type,to,be,converted,to,param,exchange,optional,exchange,which,can,be,null,param,value,the,object,to,be,converted,param,registry,type,converter,registry,return,the,converted,value,of,the,desired,type,or,null,if,no,suitable,converter,found;suppress,warnings,unchecked,fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,if,message,contents,list,class,is,assignable,from,value,get,class,message,contents,list,list,message,contents,list,value,for,object,embedded,list,if,embedded,null,if,type,is,instance,embedded,return,type,cast,embedded,else,type,converter,tc,registry,lookup,type,embedded,get,class,if,tc,null,return,tc,convert,to,type,exchange,embedded,return,t,void,type,if,response,class,is,assignable,from,value,get,class,response,response,response,value,object,entity,response,get,entity,type,converter,tc,registry,lookup,type,entity,get,class,if,tc,null,return,tc,convert,to,type,exchange,entity,return,t,void,type,return,null
CxfConverter -> @SuppressWarnings("unchecked")     @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value,              TypeConverterRegistry registry);1308788876;Use a fallback type converter so we can convert the embedded list element_if the value is MessageContentsList.  The algorithm of this converter_finds the first non-null list element from the list and applies conversion_to the list element.__@param type the desired type to be converted to_@param exchange optional exchange which can be null_@param value the object to be converted_@param registry type converter registry_@return the converted value of the desired type or null if no suitable converter found;@SuppressWarnings("unchecked")_    @FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, _            TypeConverterRegistry registry) {__        _        if (MessageContentsList.class.isAssignableFrom(value.getClass())) {_            MessageContentsList list = (MessageContentsList)value___            for (Object embedded : list) {_                if (embedded != null) {_                    if (type.isInstance(embedded)) {_                        return type.cast(embedded)__                    } else {_                        TypeConverter tc = registry.lookup(type, embedded.getClass())__                        if (tc != null) {_                            return tc.convertTo(type, exchange, embedded)__                        }_                    }_                }_            }_            _            return (T) Void.TYPE__        }__        _        if (Response.class.isAssignableFrom(value.getClass())) {_            Response response = (Response) value__            Object entity = response.getEntity()___            TypeConverter tc = registry.lookup(type, entity.getClass())__            if (tc != null) {_                return tc.convertTo(type, exchange, entity)__            }__            _            return (T) Void.TYPE__        }_        _        return null__    };use,a,fallback,type,converter,so,we,can,convert,the,embedded,list,element,if,the,value,is,message,contents,list,the,algorithm,of,this,converter,finds,the,first,non,null,list,element,from,the,list,and,applies,conversion,to,the,list,element,param,type,the,desired,type,to,be,converted,to,param,exchange,optional,exchange,which,can,be,null,param,value,the,object,to,be,converted,param,registry,type,converter,registry,return,the,converted,value,of,the,desired,type,or,null,if,no,suitable,converter,found;suppress,warnings,unchecked,fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,if,message,contents,list,class,is,assignable,from,value,get,class,message,contents,list,list,message,contents,list,value,for,object,embedded,list,if,embedded,null,if,type,is,instance,embedded,return,type,cast,embedded,else,type,converter,tc,registry,lookup,type,embedded,get,class,if,tc,null,return,tc,convert,to,type,exchange,embedded,return,t,void,type,if,response,class,is,assignable,from,value,get,class,response,response,response,value,object,entity,response,get,entity,type,converter,tc,registry,lookup,type,entity,get,class,if,tc,null,return,tc,convert,to,type,exchange,entity,return,t,void,type,return,null
CxfConverter -> @SuppressWarnings("unchecked")     @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value,              TypeConverterRegistry registry);1324569391;Use a fallback type converter so we can convert the embedded list element_if the value is MessageContentsList.  The algorithm of this converter_finds the first non-null list element from the list and applies conversion_to the list element.__@param type the desired type to be converted to_@param exchange optional exchange which can be null_@param value the object to be converted_@param registry type converter registry_@return the converted value of the desired type or null if no suitable converter found;@SuppressWarnings("unchecked")_    @FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, _            TypeConverterRegistry registry) {__        _        if (MessageContentsList.class.isAssignableFrom(value.getClass())) {_            MessageContentsList list = (MessageContentsList)value___            for (Object embedded : list) {_                if (embedded != null) {_                    if (type.isInstance(embedded)) {_                        return type.cast(embedded)__                    } else {_                        TypeConverter tc = registry.lookup(type, embedded.getClass())__                        if (tc != null) {_                            return tc.convertTo(type, exchange, embedded)__                        }_                    }_                }_            }_            _            return (T) Void.TYPE__        }__        _        if (Response.class.isAssignableFrom(value.getClass())) {_            Response response = (Response) value__            Object entity = response.getEntity()___            TypeConverter tc = registry.lookup(type, entity.getClass())__            if (tc != null) {_                return tc.convertTo(type, exchange, entity)__            }__            _            return (T) Void.TYPE__        }_        _        return null__    };use,a,fallback,type,converter,so,we,can,convert,the,embedded,list,element,if,the,value,is,message,contents,list,the,algorithm,of,this,converter,finds,the,first,non,null,list,element,from,the,list,and,applies,conversion,to,the,list,element,param,type,the,desired,type,to,be,converted,to,param,exchange,optional,exchange,which,can,be,null,param,value,the,object,to,be,converted,param,registry,type,converter,registry,return,the,converted,value,of,the,desired,type,or,null,if,no,suitable,converter,found;suppress,warnings,unchecked,fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,if,message,contents,list,class,is,assignable,from,value,get,class,message,contents,list,list,message,contents,list,value,for,object,embedded,list,if,embedded,null,if,type,is,instance,embedded,return,type,cast,embedded,else,type,converter,tc,registry,lookup,type,embedded,get,class,if,tc,null,return,tc,convert,to,type,exchange,embedded,return,t,void,type,if,response,class,is,assignable,from,value,get,class,response,response,response,value,object,entity,response,get,entity,type,converter,tc,registry,lookup,type,entity,get,class,if,tc,null,return,tc,convert,to,type,exchange,entity,return,t,void,type,return,null
CxfConverter -> @SuppressWarnings("unchecked")     @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value,              TypeConverterRegistry registry);1326207413;Use a fallback type converter so we can convert the embedded list element_if the value is MessageContentsList.  The algorithm of this converter_finds the first non-null list element from the list and applies conversion_to the list element.__@param type the desired type to be converted to_@param exchange optional exchange which can be null_@param value the object to be converted_@param registry type converter registry_@return the converted value of the desired type or null if no suitable converter found;@SuppressWarnings("unchecked")_    @FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, _            TypeConverterRegistry registry) {__        _        if (MessageContentsList.class.isAssignableFrom(value.getClass())) {_            MessageContentsList list = (MessageContentsList)value___            for (Object embedded : list) {_                if (embedded != null) {_                    if (type.isInstance(embedded)) {_                        return type.cast(embedded)__                    } else {_                        TypeConverter tc = registry.lookup(type, embedded.getClass())__                        if (tc != null) {_                            return tc.convertTo(type, exchange, embedded)__                        }_                    }_                }_            }_            _            return (T) Void.TYPE__        }__        _        if (Response.class.isAssignableFrom(value.getClass())) {_            Response response = (Response) value__            Object entity = response.getEntity()___            TypeConverter tc = registry.lookup(type, entity.getClass())__            if (tc != null) {_                return tc.convertTo(type, exchange, entity)__            }__            _            return (T) Void.TYPE__        }_        _        return null__    };use,a,fallback,type,converter,so,we,can,convert,the,embedded,list,element,if,the,value,is,message,contents,list,the,algorithm,of,this,converter,finds,the,first,non,null,list,element,from,the,list,and,applies,conversion,to,the,list,element,param,type,the,desired,type,to,be,converted,to,param,exchange,optional,exchange,which,can,be,null,param,value,the,object,to,be,converted,param,registry,type,converter,registry,return,the,converted,value,of,the,desired,type,or,null,if,no,suitable,converter,found;suppress,warnings,unchecked,fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,if,message,contents,list,class,is,assignable,from,value,get,class,message,contents,list,list,message,contents,list,value,for,object,embedded,list,if,embedded,null,if,type,is,instance,embedded,return,type,cast,embedded,else,type,converter,tc,registry,lookup,type,embedded,get,class,if,tc,null,return,tc,convert,to,type,exchange,embedded,return,t,void,type,if,response,class,is,assignable,from,value,get,class,response,response,response,value,object,entity,response,get,entity,type,converter,tc,registry,lookup,type,entity,get,class,if,tc,null,return,tc,convert,to,type,exchange,entity,return,t,void,type,return,null
CxfConverter -> @SuppressWarnings("unchecked")     @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value,              TypeConverterRegistry registry);1334483718;Use a fallback type converter so we can convert the embedded list element_if the value is MessageContentsList.  The algorithm of this converter_finds the first non-null list element from the list and applies conversion_to the list element.__@param type the desired type to be converted to_@param exchange optional exchange which can be null_@param value the object to be converted_@param registry type converter registry_@return the converted value of the desired type or null if no suitable converter found;@SuppressWarnings("unchecked")_    @FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, _            TypeConverterRegistry registry) {__        _        if (MessageContentsList.class.isAssignableFrom(value.getClass())) {_            MessageContentsList list = (MessageContentsList)value___            for (Object embedded : list) {_                if (embedded != null) {_                    if (type.isInstance(embedded)) {_                        return type.cast(embedded)__                    } else {_                        TypeConverter tc = registry.lookup(type, embedded.getClass())__                        if (tc != null) {_                            return tc.convertTo(type, exchange, embedded)__                        }_                    }_                }_            }_            _            return (T) Void.TYPE__        }__        _        if (Response.class.isAssignableFrom(value.getClass())) {_            Response response = (Response) value__            Object entity = response.getEntity()___            TypeConverter tc = registry.lookup(type, entity.getClass())__            if (tc != null) {_                return tc.convertTo(type, exchange, entity)__            }__            _            return (T) Void.TYPE__        }_        _        return null__    };use,a,fallback,type,converter,so,we,can,convert,the,embedded,list,element,if,the,value,is,message,contents,list,the,algorithm,of,this,converter,finds,the,first,non,null,list,element,from,the,list,and,applies,conversion,to,the,list,element,param,type,the,desired,type,to,be,converted,to,param,exchange,optional,exchange,which,can,be,null,param,value,the,object,to,be,converted,param,registry,type,converter,registry,return,the,converted,value,of,the,desired,type,or,null,if,no,suitable,converter,found;suppress,warnings,unchecked,fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,if,message,contents,list,class,is,assignable,from,value,get,class,message,contents,list,list,message,contents,list,value,for,object,embedded,list,if,embedded,null,if,type,is,instance,embedded,return,type,cast,embedded,else,type,converter,tc,registry,lookup,type,embedded,get,class,if,tc,null,return,tc,convert,to,type,exchange,embedded,return,t,void,type,if,response,class,is,assignable,from,value,get,class,response,response,response,value,object,entity,response,get,entity,type,converter,tc,registry,lookup,type,entity,get,class,if,tc,null,return,tc,convert,to,type,exchange,entity,return,t,void,type,return,null
CxfConverter -> @SuppressWarnings("unchecked")     @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value,              TypeConverterRegistry registry);1339600835;Use a fallback type converter so we can convert the embedded list element_if the value is MessageContentsList.  The algorithm of this converter_finds the first non-null list element from the list and applies conversion_to the list element.__@param type the desired type to be converted to_@param exchange optional exchange which can be null_@param value the object to be converted_@param registry type converter registry_@return the converted value of the desired type or null if no suitable converter found;@SuppressWarnings("unchecked")_    @FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, _            TypeConverterRegistry registry) {__        _        if (MessageContentsList.class.isAssignableFrom(value.getClass())) {_            MessageContentsList list = (MessageContentsList)value___            for (Object embedded : list) {_                if (embedded != null) {_                    if (type.isInstance(embedded)) {_                        return type.cast(embedded)__                    } else {_                        TypeConverter tc = registry.lookup(type, embedded.getClass())__                        if (tc != null) {_                            return tc.convertTo(type, exchange, embedded)__                        }_                    }_                }_            }_            _            return (T) Void.TYPE__        }__        _        if (Response.class.isAssignableFrom(value.getClass())) {_            Response response = (Response) value__            Object entity = response.getEntity()___            TypeConverter tc = registry.lookup(type, entity.getClass())__            if (tc != null) {_                return tc.convertTo(type, exchange, entity)__            }__            _            return (T) Void.TYPE__        }_        _        return null__    };use,a,fallback,type,converter,so,we,can,convert,the,embedded,list,element,if,the,value,is,message,contents,list,the,algorithm,of,this,converter,finds,the,first,non,null,list,element,from,the,list,and,applies,conversion,to,the,list,element,param,type,the,desired,type,to,be,converted,to,param,exchange,optional,exchange,which,can,be,null,param,value,the,object,to,be,converted,param,registry,type,converter,registry,return,the,converted,value,of,the,desired,type,or,null,if,no,suitable,converter,found;suppress,warnings,unchecked,fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,if,message,contents,list,class,is,assignable,from,value,get,class,message,contents,list,list,message,contents,list,value,for,object,embedded,list,if,embedded,null,if,type,is,instance,embedded,return,type,cast,embedded,else,type,converter,tc,registry,lookup,type,embedded,get,class,if,tc,null,return,tc,convert,to,type,exchange,embedded,return,t,void,type,if,response,class,is,assignable,from,value,get,class,response,response,response,value,object,entity,response,get,entity,type,converter,tc,registry,lookup,type,entity,get,class,if,tc,null,return,tc,convert,to,type,exchange,entity,return,t,void,type,return,null
CxfConverter -> @SuppressWarnings("unchecked")     @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value,              TypeConverterRegistry registry);1339659396;Use a fallback type converter so we can convert the embedded list element_if the value is MessageContentsList.  The algorithm of this converter_finds the first non-null list element from the list and applies conversion_to the list element.__@param type the desired type to be converted to_@param exchange optional exchange which can be null_@param value the object to be converted_@param registry type converter registry_@return the converted value of the desired type or null if no suitable converter found;@SuppressWarnings("unchecked")_    @FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, _            TypeConverterRegistry registry) {__        _        if (MessageContentsList.class.isAssignableFrom(value.getClass())) {_            MessageContentsList list = (MessageContentsList)value___            for (Object embedded : list) {_                if (embedded != null) {_                    if (type.isInstance(embedded)) {_                        return type.cast(embedded)__                    } else {_                        TypeConverter tc = registry.lookup(type, embedded.getClass())__                        if (tc != null) {_                            return tc.convertTo(type, exchange, embedded)__                        }_                    }_                }_            }_            _            return (T) Void.TYPE__        }__        _        if (Response.class.isAssignableFrom(value.getClass())) {_            Response response = (Response) value__            Object entity = response.getEntity()___            TypeConverter tc = registry.lookup(type, entity.getClass())__            if (tc != null) {_                return tc.convertTo(type, exchange, entity)__            }__            _            return (T) Void.TYPE__        }_        _        return null__    };use,a,fallback,type,converter,so,we,can,convert,the,embedded,list,element,if,the,value,is,message,contents,list,the,algorithm,of,this,converter,finds,the,first,non,null,list,element,from,the,list,and,applies,conversion,to,the,list,element,param,type,the,desired,type,to,be,converted,to,param,exchange,optional,exchange,which,can,be,null,param,value,the,object,to,be,converted,param,registry,type,converter,registry,return,the,converted,value,of,the,desired,type,or,null,if,no,suitable,converter,found;suppress,warnings,unchecked,fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,if,message,contents,list,class,is,assignable,from,value,get,class,message,contents,list,list,message,contents,list,value,for,object,embedded,list,if,embedded,null,if,type,is,instance,embedded,return,type,cast,embedded,else,type,converter,tc,registry,lookup,type,embedded,get,class,if,tc,null,return,tc,convert,to,type,exchange,embedded,return,t,void,type,if,response,class,is,assignable,from,value,get,class,response,response,response,value,object,entity,response,get,entity,type,converter,tc,registry,lookup,type,entity,get,class,if,tc,null,return,tc,convert,to,type,exchange,entity,return,t,void,type,return,null
CxfConverter -> @SuppressWarnings("unchecked")     @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value,              TypeConverterRegistry registry);1339661750;Use a fallback type converter so we can convert the embedded list element_if the value is MessageContentsList.  The algorithm of this converter_finds the first non-null list element from the list and applies conversion_to the list element.__@param type the desired type to be converted to_@param exchange optional exchange which can be null_@param value the object to be converted_@param registry type converter registry_@return the converted value of the desired type or null if no suitable converter found;@SuppressWarnings("unchecked")_    @FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, _            TypeConverterRegistry registry) {__        _        if (MessageContentsList.class.isAssignableFrom(value.getClass())) {_            MessageContentsList list = (MessageContentsList)value___            for (Object embedded : list) {_                if (embedded != null) {_                    if (type.isInstance(embedded)) {_                        return type.cast(embedded)__                    } else {_                        TypeConverter tc = registry.lookup(type, embedded.getClass())__                        if (tc != null) {_                            return tc.convertTo(type, exchange, embedded)__                        }_                    }_                }_            }_            _            return (T) Void.TYPE__        }__        _        if (Response.class.isAssignableFrom(value.getClass())) {_            Response response = (Response) value__            Object entity = response.getEntity()___            TypeConverter tc = registry.lookup(type, entity.getClass())__            if (tc != null) {_                return tc.convertTo(type, exchange, entity)__            }__            _            return (T) Void.TYPE__        }_        _        return null__    };use,a,fallback,type,converter,so,we,can,convert,the,embedded,list,element,if,the,value,is,message,contents,list,the,algorithm,of,this,converter,finds,the,first,non,null,list,element,from,the,list,and,applies,conversion,to,the,list,element,param,type,the,desired,type,to,be,converted,to,param,exchange,optional,exchange,which,can,be,null,param,value,the,object,to,be,converted,param,registry,type,converter,registry,return,the,converted,value,of,the,desired,type,or,null,if,no,suitable,converter,found;suppress,warnings,unchecked,fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,if,message,contents,list,class,is,assignable,from,value,get,class,message,contents,list,list,message,contents,list,value,for,object,embedded,list,if,embedded,null,if,type,is,instance,embedded,return,type,cast,embedded,else,type,converter,tc,registry,lookup,type,embedded,get,class,if,tc,null,return,tc,convert,to,type,exchange,embedded,return,t,void,type,if,response,class,is,assignable,from,value,get,class,response,response,response,value,object,entity,response,get,entity,type,converter,tc,registry,lookup,type,entity,get,class,if,tc,null,return,tc,convert,to,type,exchange,entity,return,t,void,type,return,null
CxfConverter -> @SuppressWarnings("unchecked")     @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value,              TypeConverterRegistry registry);1340483947;Use a fallback type converter so we can convert the embedded list element_if the value is MessageContentsList.  The algorithm of this converter_finds the first non-null list element from the list and applies conversion_to the list element.__@param type the desired type to be converted to_@param exchange optional exchange which can be null_@param value the object to be converted_@param registry type converter registry_@return the converted value of the desired type or null if no suitable converter found;@SuppressWarnings("unchecked")_    @FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, _            TypeConverterRegistry registry) {__        _        if (MessageContentsList.class.isAssignableFrom(value.getClass())) {_            MessageContentsList list = (MessageContentsList)value___            for (Object embedded : list) {_                if (embedded != null) {_                    if (type.isInstance(embedded)) {_                        return type.cast(embedded)__                    } else {_                        TypeConverter tc = registry.lookup(type, embedded.getClass())__                        if (tc != null) {_                            return tc.convertTo(type, exchange, embedded)__                        }_                    }_                }_            }_            _            return (T) Void.TYPE__        }__        _        if (Response.class.isAssignableFrom(value.getClass())) {_            Response response = (Response) value__            Object entity = response.getEntity()___            TypeConverter tc = registry.lookup(type, entity.getClass())__            if (tc != null) {_                return tc.convertTo(type, exchange, entity)__            }__            _            return (T) Void.TYPE__        }_        _        return null__    };use,a,fallback,type,converter,so,we,can,convert,the,embedded,list,element,if,the,value,is,message,contents,list,the,algorithm,of,this,converter,finds,the,first,non,null,list,element,from,the,list,and,applies,conversion,to,the,list,element,param,type,the,desired,type,to,be,converted,to,param,exchange,optional,exchange,which,can,be,null,param,value,the,object,to,be,converted,param,registry,type,converter,registry,return,the,converted,value,of,the,desired,type,or,null,if,no,suitable,converter,found;suppress,warnings,unchecked,fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,if,message,contents,list,class,is,assignable,from,value,get,class,message,contents,list,list,message,contents,list,value,for,object,embedded,list,if,embedded,null,if,type,is,instance,embedded,return,type,cast,embedded,else,type,converter,tc,registry,lookup,type,embedded,get,class,if,tc,null,return,tc,convert,to,type,exchange,embedded,return,t,void,type,if,response,class,is,assignable,from,value,get,class,response,response,response,value,object,entity,response,get,entity,type,converter,tc,registry,lookup,type,entity,get,class,if,tc,null,return,tc,convert,to,type,exchange,entity,return,t,void,type,return,null
CxfConverter -> @SuppressWarnings("unchecked")     @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value,              TypeConverterRegistry registry);1344825632;Use a fallback type converter so we can convert the embedded list element_if the value is MessageContentsList.  The algorithm of this converter_finds the first non-null list element from the list and applies conversion_to the list element.__@param type the desired type to be converted to_@param exchange optional exchange which can be null_@param value the object to be converted_@param registry type converter registry_@return the converted value of the desired type or null if no suitable converter found;@SuppressWarnings("unchecked")_    @FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, _            TypeConverterRegistry registry) {__        _        if (MessageContentsList.class.isAssignableFrom(value.getClass())) {_            MessageContentsList list = (MessageContentsList)value__            _            _            for (Object embedded : list) {_                if (embedded != null) {_                    if (type.isInstance(embedded)) {_                        return type.cast(embedded)__                    } else {_                        TypeConverter tc = registry.lookup(type, embedded.getClass())__                        if (tc != null) {_                            Object result = tc.convertTo(type, exchange, embedded)__                            if (result != null) {_                                return (T)result__                            }_                            _                            break__                        }_                    }_                }_            }_            _            return (T) Void.TYPE__        }__        _        if (Response.class.isAssignableFrom(value.getClass())) {_            Response response = (Response) value__            Object entity = response.getEntity()___            TypeConverter tc = registry.lookup(type, entity.getClass())__            if (tc != null) {_                return tc.convertTo(type, exchange, entity)__            }__            _            return (T) Void.TYPE__        }_        _        return null__    };use,a,fallback,type,converter,so,we,can,convert,the,embedded,list,element,if,the,value,is,message,contents,list,the,algorithm,of,this,converter,finds,the,first,non,null,list,element,from,the,list,and,applies,conversion,to,the,list,element,param,type,the,desired,type,to,be,converted,to,param,exchange,optional,exchange,which,can,be,null,param,value,the,object,to,be,converted,param,registry,type,converter,registry,return,the,converted,value,of,the,desired,type,or,null,if,no,suitable,converter,found;suppress,warnings,unchecked,fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,if,message,contents,list,class,is,assignable,from,value,get,class,message,contents,list,list,message,contents,list,value,for,object,embedded,list,if,embedded,null,if,type,is,instance,embedded,return,type,cast,embedded,else,type,converter,tc,registry,lookup,type,embedded,get,class,if,tc,null,object,result,tc,convert,to,type,exchange,embedded,if,result,null,return,t,result,break,return,t,void,type,if,response,class,is,assignable,from,value,get,class,response,response,response,value,object,entity,response,get,entity,type,converter,tc,registry,lookup,type,entity,get,class,if,tc,null,return,tc,convert,to,type,exchange,entity,return,t,void,type,return,null
CxfConverter -> @SuppressWarnings("unchecked")     @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value,              TypeConverterRegistry registry);1371454617;Use a fallback type converter so we can convert the embedded list element_if the value is MessageContentsList.  The algorithm of this converter_finds the first non-null list element from the list and applies conversion_to the list element.__@param type the desired type to be converted to_@param exchange optional exchange which can be null_@param value the object to be converted_@param registry type converter registry_@return the converted value of the desired type or null if no suitable converter found;@SuppressWarnings("unchecked")_    @FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, _            TypeConverterRegistry registry) {__        _        if (MessageContentsList.class.isAssignableFrom(value.getClass())) {_            MessageContentsList list = (MessageContentsList)value__            _            _            for (Object embedded : list) {_                if (embedded != null) {_                    if (type.isInstance(embedded)) {_                        return type.cast(embedded)__                    } else {_                        TypeConverter tc = registry.lookup(type, embedded.getClass())__                        if (tc != null) {_                            Object result = tc.convertTo(type, exchange, embedded)__                            if (result != null) {_                                return (T)result__                            }_                            _                            break__                        }_                    }_                }_            }_            _            return (T) Void.TYPE__        }__        _        if (Response.class.isAssignableFrom(value.getClass())) {_            Response response = (Response) value__            Object entity = response.getEntity()___            TypeConverter tc = registry.lookup(type, entity.getClass())__            if (tc != null) {_                return tc.convertTo(type, exchange, entity)__            }__            _            return (T) Void.TYPE__        }_        _        return null__    };use,a,fallback,type,converter,so,we,can,convert,the,embedded,list,element,if,the,value,is,message,contents,list,the,algorithm,of,this,converter,finds,the,first,non,null,list,element,from,the,list,and,applies,conversion,to,the,list,element,param,type,the,desired,type,to,be,converted,to,param,exchange,optional,exchange,which,can,be,null,param,value,the,object,to,be,converted,param,registry,type,converter,registry,return,the,converted,value,of,the,desired,type,or,null,if,no,suitable,converter,found;suppress,warnings,unchecked,fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,if,message,contents,list,class,is,assignable,from,value,get,class,message,contents,list,list,message,contents,list,value,for,object,embedded,list,if,embedded,null,if,type,is,instance,embedded,return,type,cast,embedded,else,type,converter,tc,registry,lookup,type,embedded,get,class,if,tc,null,object,result,tc,convert,to,type,exchange,embedded,if,result,null,return,t,result,break,return,t,void,type,if,response,class,is,assignable,from,value,get,class,response,response,response,value,object,entity,response,get,entity,type,converter,tc,registry,lookup,type,entity,get,class,if,tc,null,return,tc,convert,to,type,exchange,entity,return,t,void,type,return,null
CxfConverter -> @SuppressWarnings("unchecked")     @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value,              TypeConverterRegistry registry);1371482219;Use a fallback type converter so we can convert the embedded list element_if the value is MessageContentsList.  The algorithm of this converter_finds the first non-null list element from the list and applies conversion_to the list element.__@param type the desired type to be converted to_@param exchange optional exchange which can be null_@param value the object to be converted_@param registry type converter registry_@return the converted value of the desired type or null if no suitable converter found;@SuppressWarnings("unchecked")_    @FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, _            TypeConverterRegistry registry) {__        _        if (MessageContentsList.class.isAssignableFrom(value.getClass())) {_            MessageContentsList list = (MessageContentsList)value__            _            _            for (Object embedded : list) {_                if (embedded != null) {_                    if (type.isInstance(embedded)) {_                        return type.cast(embedded)__                    } else {_                        TypeConverter tc = registry.lookup(type, embedded.getClass())__                        if (tc != null) {_                            Object result = tc.convertTo(type, exchange, embedded)__                            if (result != null) {_                                return (T)result__                            }_                            _                            break__                        }_                    }_                }_            }_            _            return (T) Void.TYPE__        }__        _        if (Response.class.isAssignableFrom(value.getClass())) {_            Response response = (Response) value__            Object entity = response.getEntity()___            TypeConverter tc = registry.lookup(type, entity.getClass())__            if (tc != null) {_                return tc.convertTo(type, exchange, entity)__            }__            _            return (T) Void.TYPE__        }_        _        return null__    };use,a,fallback,type,converter,so,we,can,convert,the,embedded,list,element,if,the,value,is,message,contents,list,the,algorithm,of,this,converter,finds,the,first,non,null,list,element,from,the,list,and,applies,conversion,to,the,list,element,param,type,the,desired,type,to,be,converted,to,param,exchange,optional,exchange,which,can,be,null,param,value,the,object,to,be,converted,param,registry,type,converter,registry,return,the,converted,value,of,the,desired,type,or,null,if,no,suitable,converter,found;suppress,warnings,unchecked,fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,if,message,contents,list,class,is,assignable,from,value,get,class,message,contents,list,list,message,contents,list,value,for,object,embedded,list,if,embedded,null,if,type,is,instance,embedded,return,type,cast,embedded,else,type,converter,tc,registry,lookup,type,embedded,get,class,if,tc,null,object,result,tc,convert,to,type,exchange,embedded,if,result,null,return,t,result,break,return,t,void,type,if,response,class,is,assignable,from,value,get,class,response,response,response,value,object,entity,response,get,entity,type,converter,tc,registry,lookup,type,entity,get,class,if,tc,null,return,tc,convert,to,type,exchange,entity,return,t,void,type,return,null
CxfConverter -> @SuppressWarnings("unchecked")     @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value,              TypeConverterRegistry registry);1373129971;Use a fallback type converter so we can convert the embedded list element_if the value is MessageContentsList.  The algorithm of this converter_finds the first non-null list element from the list and applies conversion_to the list element.__@param type the desired type to be converted to_@param exchange optional exchange which can be null_@param value the object to be converted_@param registry type converter registry_@return the converted value of the desired type or null if no suitable converter found;@SuppressWarnings("unchecked")_    @FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, _            TypeConverterRegistry registry) {__        _        if (MessageContentsList.class.isAssignableFrom(value.getClass())) {_            MessageContentsList list = (MessageContentsList)value__            _            _            for (Object embedded : list) {_                if (embedded != null) {_                    if (type.isInstance(embedded)) {_                        return type.cast(embedded)__                    } else {_                        TypeConverter tc = registry.lookup(type, embedded.getClass())__                        if (tc != null) {_                            Object result = tc.convertTo(type, exchange, embedded)__                            if (result != null) {_                                return (T)result__                            }_                            _                            break__                        }_                    }_                }_            }_            _            return (T) Void.TYPE__        }__        _        if (Response.class.isAssignableFrom(value.getClass())) {_            Response response = (Response) value__            Object entity = response.getEntity()___            TypeConverter tc = registry.lookup(type, entity.getClass())__            if (tc != null) {_                return tc.convertTo(type, exchange, entity)__            }__            _            return (T) Void.TYPE__        }_        _        return null__    };use,a,fallback,type,converter,so,we,can,convert,the,embedded,list,element,if,the,value,is,message,contents,list,the,algorithm,of,this,converter,finds,the,first,non,null,list,element,from,the,list,and,applies,conversion,to,the,list,element,param,type,the,desired,type,to,be,converted,to,param,exchange,optional,exchange,which,can,be,null,param,value,the,object,to,be,converted,param,registry,type,converter,registry,return,the,converted,value,of,the,desired,type,or,null,if,no,suitable,converter,found;suppress,warnings,unchecked,fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,if,message,contents,list,class,is,assignable,from,value,get,class,message,contents,list,list,message,contents,list,value,for,object,embedded,list,if,embedded,null,if,type,is,instance,embedded,return,type,cast,embedded,else,type,converter,tc,registry,lookup,type,embedded,get,class,if,tc,null,object,result,tc,convert,to,type,exchange,embedded,if,result,null,return,t,result,break,return,t,void,type,if,response,class,is,assignable,from,value,get,class,response,response,response,value,object,entity,response,get,entity,type,converter,tc,registry,lookup,type,entity,get,class,if,tc,null,return,tc,convert,to,type,exchange,entity,return,t,void,type,return,null
CxfConverter -> @SuppressWarnings("unchecked")     @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value,              TypeConverterRegistry registry);1540108161;Use a fallback type converter so we can convert the embedded list element_if the value is MessageContentsList.  The algorithm of this converter_finds the first non-null list element from the list and applies conversion_to the list element.__@param type the desired type to be converted to_@param exchange optional exchange which can be null_@param value the object to be converted_@param registry type converter registry_@return the converted value of the desired type or null if no suitable converter found;@SuppressWarnings("unchecked")_    @FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, _            TypeConverterRegistry registry) {__        _        if (MessageContentsList.class.isAssignableFrom(value.getClass())) {_            MessageContentsList list = (MessageContentsList)value__            _            _            for (Object embedded : list) {_                if (embedded != null) {_                    if (type.isInstance(embedded)) {_                        return type.cast(embedded)__                    } else {_                        TypeConverter tc = registry.lookup(type, embedded.getClass())__                        if (tc != null) {_                            Object result = tc.convertTo(type, exchange, embedded)__                            if (result != null) {_                                return (T)result__                            }_                            _                            break__                        }_                    }_                }_            }_            _            return (T) Void.TYPE__        }__        _        if (Response.class.isAssignableFrom(value.getClass())) {_            Response response = (Response) value__            Object entity = response.getEntity()___            TypeConverter tc = registry.lookup(type, entity.getClass())__            if (tc != null) {_                return tc.convertTo(type, exchange, entity)__            }__            _            return (T) Void.TYPE__        }_        _        return null__    };use,a,fallback,type,converter,so,we,can,convert,the,embedded,list,element,if,the,value,is,message,contents,list,the,algorithm,of,this,converter,finds,the,first,non,null,list,element,from,the,list,and,applies,conversion,to,the,list,element,param,type,the,desired,type,to,be,converted,to,param,exchange,optional,exchange,which,can,be,null,param,value,the,object,to,be,converted,param,registry,type,converter,registry,return,the,converted,value,of,the,desired,type,or,null,if,no,suitable,converter,found;suppress,warnings,unchecked,fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,if,message,contents,list,class,is,assignable,from,value,get,class,message,contents,list,list,message,contents,list,value,for,object,embedded,list,if,embedded,null,if,type,is,instance,embedded,return,type,cast,embedded,else,type,converter,tc,registry,lookup,type,embedded,get,class,if,tc,null,object,result,tc,convert,to,type,exchange,embedded,if,result,null,return,t,result,break,return,t,void,type,if,response,class,is,assignable,from,value,get,class,response,response,response,value,object,entity,response,get,entity,type,converter,tc,registry,lookup,type,entity,get,class,if,tc,null,return,tc,convert,to,type,exchange,entity,return,t,void,type,return,null
CxfConverter -> @SuppressWarnings("unchecked")     @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value,              TypeConverterRegistry registry);1540108163;Use a fallback type converter so we can convert the embedded list element_if the value is MessageContentsList.  The algorithm of this converter_finds the first non-null list element from the list and applies conversion_to the list element.__@param type the desired type to be converted to_@param exchange optional exchange which can be null_@param value the object to be converted_@param registry type converter registry_@return the converted value of the desired type or null if no suitable converter found;@SuppressWarnings("unchecked")_    @FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, _            TypeConverterRegistry registry) {__        _        if (MessageContentsList.class.isAssignableFrom(value.getClass())) {_            MessageContentsList list = (MessageContentsList)value__            _            _            for (Object embedded : list) {_                if (embedded != null) {_                    if (type.isInstance(embedded)) {_                        return type.cast(embedded)__                    } else {_                        TypeConverter tc = registry.lookup(type, embedded.getClass())__                        if (tc != null) {_                            Object result = tc.convertTo(type, exchange, embedded)__                            if (result != null) {_                                return (T)result__                            }_                            _                            break__                        }_                    }_                }_            }_            _            return (T) Void.TYPE__        }__        _        if (Response.class.isAssignableFrom(value.getClass())) {_            Response response = (Response) value__            Object entity = response.getEntity()___            TypeConverter tc = registry.lookup(type, entity.getClass())__            if (tc != null) {_                return tc.convertTo(type, exchange, entity)__            }__            _            return (T) Void.TYPE__        }_        _        return null__    };use,a,fallback,type,converter,so,we,can,convert,the,embedded,list,element,if,the,value,is,message,contents,list,the,algorithm,of,this,converter,finds,the,first,non,null,list,element,from,the,list,and,applies,conversion,to,the,list,element,param,type,the,desired,type,to,be,converted,to,param,exchange,optional,exchange,which,can,be,null,param,value,the,object,to,be,converted,param,registry,type,converter,registry,return,the,converted,value,of,the,desired,type,or,null,if,no,suitable,converter,found;suppress,warnings,unchecked,fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,if,message,contents,list,class,is,assignable,from,value,get,class,message,contents,list,list,message,contents,list,value,for,object,embedded,list,if,embedded,null,if,type,is,instance,embedded,return,type,cast,embedded,else,type,converter,tc,registry,lookup,type,embedded,get,class,if,tc,null,object,result,tc,convert,to,type,exchange,embedded,if,result,null,return,t,result,break,return,t,void,type,if,response,class,is,assignable,from,value,get,class,response,response,response,value,object,entity,response,get,entity,type,converter,tc,registry,lookup,type,entity,get,class,if,tc,null,return,tc,convert,to,type,exchange,entity,return,t,void,type,return,null
CxfConverter -> @SuppressWarnings("unchecked")     @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value,              TypeConverterRegistry registry);1540973089;Use a fallback type converter so we can convert the embedded list element_if the value is MessageContentsList.  The algorithm of this converter_finds the first non-null list element from the list and applies conversion_to the list element.__@param type the desired type to be converted to_@param exchange optional exchange which can be null_@param value the object to be converted_@param registry type converter registry_@return the converted value of the desired type or null if no suitable converter found;@SuppressWarnings("unchecked")_    @FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, _            TypeConverterRegistry registry) {__        _        if (MessageContentsList.class.isAssignableFrom(value.getClass())) {_            MessageContentsList list = (MessageContentsList)value__            _            _            for (Object embedded : list) {_                if (embedded != null) {_                    if (type.isInstance(embedded)) {_                        return type.cast(embedded)__                    } else {_                        TypeConverter tc = registry.lookup(type, embedded.getClass())__                        if (tc != null) {_                            Object result = tc.convertTo(type, exchange, embedded)__                            if (result != null) {_                                return (T)result__                            }_                            _                            break__                        }_                    }_                }_            }_            _            return (T) MISS_VALUE__        }__        _        if (Response.class.isAssignableFrom(value.getClass())) {_            Response response = (Response) value__            Object entity = response.getEntity()___            TypeConverter tc = registry.lookup(type, entity.getClass())__            if (tc != null) {_                return tc.convertTo(type, exchange, entity)__            }__            _            return (T) MISS_VALUE__        }_        _        return null__    };use,a,fallback,type,converter,so,we,can,convert,the,embedded,list,element,if,the,value,is,message,contents,list,the,algorithm,of,this,converter,finds,the,first,non,null,list,element,from,the,list,and,applies,conversion,to,the,list,element,param,type,the,desired,type,to,be,converted,to,param,exchange,optional,exchange,which,can,be,null,param,value,the,object,to,be,converted,param,registry,type,converter,registry,return,the,converted,value,of,the,desired,type,or,null,if,no,suitable,converter,found;suppress,warnings,unchecked,fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,if,message,contents,list,class,is,assignable,from,value,get,class,message,contents,list,list,message,contents,list,value,for,object,embedded,list,if,embedded,null,if,type,is,instance,embedded,return,type,cast,embedded,else,type,converter,tc,registry,lookup,type,embedded,get,class,if,tc,null,object,result,tc,convert,to,type,exchange,embedded,if,result,null,return,t,result,break,return,t,if,response,class,is,assignable,from,value,get,class,response,response,response,value,object,entity,response,get,entity,type,converter,tc,registry,lookup,type,entity,get,class,if,tc,null,return,tc,convert,to,type,exchange,entity,return,t,return,null
CxfConverter -> @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value,              TypeConverterRegistry registry);1233261354;Use a fallback type converter so we can convert the embedded list element_if the value is MessageContentsList.  The algorithm of this converter_finds the first non-null list element from the list and applies convertion_to the list element.__@param type the desired type to be converted to_@param exchange optional exchange which can be null_@param value the object to be converted_@param registry type converter registry_@return the converted value of the desired type or null if no suitable converter found;@FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, _            TypeConverterRegistry registry) {_        _        if (MessageContentsList.class.isAssignableFrom(value.getClass())) {_            MessageContentsList list = (MessageContentsList)value__            _            for (int i = 0_ i < list.size()_ i++) {_                Object embedded = list.get(i)__                _                if (embedded != null) {_                    if (type.isInstance(embedded)) {_                        return (T)embedded__                    } else {_                        TypeConverter tc = registry.lookup(type, embedded.getClass())__                        if (tc != null) {_                            return tc.convertTo(type, exchange, embedded)__                        }_                    }_                }_            }_        }_        _        return null__    };use,a,fallback,type,converter,so,we,can,convert,the,embedded,list,element,if,the,value,is,message,contents,list,the,algorithm,of,this,converter,finds,the,first,non,null,list,element,from,the,list,and,applies,convertion,to,the,list,element,param,type,the,desired,type,to,be,converted,to,param,exchange,optional,exchange,which,can,be,null,param,value,the,object,to,be,converted,param,registry,type,converter,registry,return,the,converted,value,of,the,desired,type,or,null,if,no,suitable,converter,found;fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,if,message,contents,list,class,is,assignable,from,value,get,class,message,contents,list,list,message,contents,list,value,for,int,i,0,i,list,size,i,object,embedded,list,get,i,if,embedded,null,if,type,is,instance,embedded,return,t,embedded,else,type,converter,tc,registry,lookup,type,embedded,get,class,if,tc,null,return,tc,convert,to,type,exchange,embedded,return,null
CxfConverter -> @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value,              TypeConverterRegistry registry);1233636662;Use a fallback type converter so we can convert the embedded list element_if the value is MessageContentsList.  The algorithm of this converter_finds the first non-null list element from the list and applies convertion_to the list element.__@param type the desired type to be converted to_@param exchange optional exchange which can be null_@param value the object to be converted_@param registry type converter registry_@return the converted value of the desired type or null if no suitable converter found;@FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, _            TypeConverterRegistry registry) {_        _        if (MessageContentsList.class.isAssignableFrom(value.getClass())) {_            MessageContentsList list = (MessageContentsList)value__            _            for (int i = 0_ i < list.size()_ i++) {_                Object embedded = list.get(i)__                _                if (embedded != null) {_                    if (type.isInstance(embedded)) {_                        return type.cast(embedded)__                    } else {_                        TypeConverter tc = registry.lookup(type, embedded.getClass())__                        if (tc != null) {_                            return tc.convertTo(type, exchange, embedded)__                        }_                    }_                }_            }_        }_        _        return null__    };use,a,fallback,type,converter,so,we,can,convert,the,embedded,list,element,if,the,value,is,message,contents,list,the,algorithm,of,this,converter,finds,the,first,non,null,list,element,from,the,list,and,applies,convertion,to,the,list,element,param,type,the,desired,type,to,be,converted,to,param,exchange,optional,exchange,which,can,be,null,param,value,the,object,to,be,converted,param,registry,type,converter,registry,return,the,converted,value,of,the,desired,type,or,null,if,no,suitable,converter,found;fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,if,message,contents,list,class,is,assignable,from,value,get,class,message,contents,list,list,message,contents,list,value,for,int,i,0,i,list,size,i,object,embedded,list,get,i,if,embedded,null,if,type,is,instance,embedded,return,type,cast,embedded,else,type,converter,tc,registry,lookup,type,embedded,get,class,if,tc,null,return,tc,convert,to,type,exchange,embedded,return,null
CxfConverter -> @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value,              TypeConverterRegistry registry);1237273686;Use a fallback type converter so we can convert the embedded list element_if the value is MessageContentsList.  The algorithm of this converter_finds the first non-null list element from the list and applies convertion_to the list element.__@param type the desired type to be converted to_@param exchange optional exchange which can be null_@param value the object to be converted_@param registry type converter registry_@return the converted value of the desired type or null if no suitable converter found;@FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, _            TypeConverterRegistry registry) {_        _        if (MessageContentsList.class.isAssignableFrom(value.getClass())) {_            MessageContentsList list = (MessageContentsList)value___            for (Object embedded : list) {_                if (embedded != null) {_                    if (type.isInstance(embedded)) {_                        return type.cast(embedded)__                    } else {_                        TypeConverter tc = registry.lookup(type, embedded.getClass())__                        if (tc != null) {_                            return tc.convertTo(type, exchange, embedded)__                        }_                    }_                }_            }_        }_        _        return null__    };use,a,fallback,type,converter,so,we,can,convert,the,embedded,list,element,if,the,value,is,message,contents,list,the,algorithm,of,this,converter,finds,the,first,non,null,list,element,from,the,list,and,applies,convertion,to,the,list,element,param,type,the,desired,type,to,be,converted,to,param,exchange,optional,exchange,which,can,be,null,param,value,the,object,to,be,converted,param,registry,type,converter,registry,return,the,converted,value,of,the,desired,type,or,null,if,no,suitable,converter,found;fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,if,message,contents,list,class,is,assignable,from,value,get,class,message,contents,list,list,message,contents,list,value,for,object,embedded,list,if,embedded,null,if,type,is,instance,embedded,return,type,cast,embedded,else,type,converter,tc,registry,lookup,type,embedded,get,class,if,tc,null,return,tc,convert,to,type,exchange,embedded,return,null
CxfConverter -> @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value,              TypeConverterRegistry registry);1243588852;Use a fallback type converter so we can convert the embedded list element_if the value is MessageContentsList.  The algorithm of this converter_finds the first non-null list element from the list and applies convertion_to the list element.__@param type the desired type to be converted to_@param exchange optional exchange which can be null_@param value the object to be converted_@param registry type converter registry_@return the converted value of the desired type or null if no suitable converter found;@FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, _            TypeConverterRegistry registry) {_        _        if (MessageContentsList.class.isAssignableFrom(value.getClass())) {_            MessageContentsList list = (MessageContentsList)value___            for (Object embedded : list) {_                if (embedded != null) {_                    if (type.isInstance(embedded)) {_                        return type.cast(embedded)__                    } else {_                        TypeConverter tc = registry.lookup(type, embedded.getClass())__                        if (tc != null) {_                            return tc.convertTo(type, exchange, embedded)__                        }_                    }_                }_            }_        }_        _        return null__    };use,a,fallback,type,converter,so,we,can,convert,the,embedded,list,element,if,the,value,is,message,contents,list,the,algorithm,of,this,converter,finds,the,first,non,null,list,element,from,the,list,and,applies,convertion,to,the,list,element,param,type,the,desired,type,to,be,converted,to,param,exchange,optional,exchange,which,can,be,null,param,value,the,object,to,be,converted,param,registry,type,converter,registry,return,the,converted,value,of,the,desired,type,or,null,if,no,suitable,converter,found;fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,if,message,contents,list,class,is,assignable,from,value,get,class,message,contents,list,list,message,contents,list,value,for,object,embedded,list,if,embedded,null,if,type,is,instance,embedded,return,type,cast,embedded,else,type,converter,tc,registry,lookup,type,embedded,get,class,if,tc,null,return,tc,convert,to,type,exchange,embedded,return,null
CxfConverter -> @FallbackConverter     public static <T> T convertTo(Class<T> type, Exchange exchange, Object value,              TypeConverterRegistry registry);1249513864;Use a fallback type converter so we can convert the embedded list element_if the value is MessageContentsList.  The algorithm of this converter_finds the first non-null list element from the list and applies convertion_to the list element.__@param type the desired type to be converted to_@param exchange optional exchange which can be null_@param value the object to be converted_@param registry type converter registry_@return the converted value of the desired type or null if no suitable converter found;@FallbackConverter_    public static <T> T convertTo(Class<T> type, Exchange exchange, Object value, _            TypeConverterRegistry registry) {_        _        if (MessageContentsList.class.isAssignableFrom(value.getClass())) {_            MessageContentsList list = (MessageContentsList)value___            for (Object embedded : list) {_                if (embedded != null) {_                    if (type.isInstance(embedded)) {_                        return type.cast(embedded)__                    } else {_                        TypeConverter tc = registry.lookup(type, embedded.getClass())__                        if (tc != null) {_                            return tc.convertTo(type, exchange, embedded)__                        }_                    }_                }_            }_        }_        _        return null__    };use,a,fallback,type,converter,so,we,can,convert,the,embedded,list,element,if,the,value,is,message,contents,list,the,algorithm,of,this,converter,finds,the,first,non,null,list,element,from,the,list,and,applies,convertion,to,the,list,element,param,type,the,desired,type,to,be,converted,to,param,exchange,optional,exchange,which,can,be,null,param,value,the,object,to,be,converted,param,registry,type,converter,registry,return,the,converted,value,of,the,desired,type,or,null,if,no,suitable,converter,found;fallback,converter,public,static,t,t,convert,to,class,t,type,exchange,exchange,object,value,type,converter,registry,registry,if,message,contents,list,class,is,assignable,from,value,get,class,message,contents,list,list,message,contents,list,value,for,object,embedded,list,if,embedded,null,if,type,is,instance,embedded,return,type,cast,embedded,else,type,converter,tc,registry,lookup,type,embedded,get,class,if,tc,null,return,tc,convert,to,type,exchange,embedded,return,null
