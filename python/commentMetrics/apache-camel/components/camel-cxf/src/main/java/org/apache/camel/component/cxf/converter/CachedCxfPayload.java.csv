commented;modifiers;parameterAmount;loc;comment;code
false;private,static;2;21;;private static void toResult(Source source, Result result) throws TransformerException {     if (source != null) {         XMLConverterHelper xml = new XMLConverterHelper().         TransformerFactory factory = xml.getTransformerFactory().         Transformer transformer = factory.newTransformer().         if (transformer == null) {             throw new TransformerException("Could not create a transformer - JAXP is misconfigured!").         } else {             Properties outputProperties = new Properties().             outputProperties.put("encoding", defaultCharset).             outputProperties.put("omit-xml-declaration", "yes").             transformer.setOutputProperties(outputProperties).             if (factory.getClass().getName().equals("org.apache.xalan.processor.TransformerFactoryImpl") && source instanceof StAXSource) {                 source = new StAX2SAXSource(((StAXSource) source).getXMLStreamReader()).             }             transformer.transform(source, result).         }     } }
false;public;0;8;;@Override public void reset() {     for (Source source : getBodySources()) {         if (source instanceof StreamCache) {             ((StreamCache) source).reset().         }     } }
false;public;1;17;;@Override public void writeTo(OutputStream os) throws IOException {     // no body no write     if (getBodySources().size() == 0) {         return.     }     Source body = getBodySources().get(0).     if (body instanceof StreamCache) {         ((StreamCache) body).writeTo(os).     } else {         try {             StaxUtils.copy(body, os).         } catch (XMLStreamException e) {             throw new IOException("Transformation failed", e).         }     } }
false;public;0;10;;@Override public boolean inMemory() {     boolean inMemory = true.     for (Source source : getBodySources()) {         if (source instanceof StreamCache && !((StreamCache) source).inMemory()) {             inMemory = false.         }     }     return inMemory. }
false;public;0;4;;@Override public long length() {     return 0. }
false;public;1;4;;@Override public StreamCache copy(Exchange exchange) throws IOException {     return new CachedCxfPayload<>(this, exchange). }
