# id;timestamp;commentText;codeText;commentWords;codeWords
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1232329721;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_        _        ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)___        _        ClientProxyFactoryBean factoryBean = createClientFactoryBean(cls)__        _        _        configure(factoryBean)___        _        setupClientFactoryBean(factoryBean, cls)___        _        QName serviceQName = null__        try {_            serviceQName = factoryBean.getServiceName()__        } catch (IllegalStateException e) {_            _        }_        _        if (serviceQName == null && getServiceLocalName() != null) {_            factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_            factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }_        _        return ((ClientProxy)Proxy.getInvocationHandler(factoryBean.create())).getClient()__    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,object,helper,not,null,cls,cxf,constants,client,proxy,factory,bean,factory,bean,create,client,factory,bean,cls,configure,factory,bean,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,client,proxy,proxy,get,invocation,handler,factory,bean,create,get,client
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1232782057;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_        _        ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)___        _        ClientProxyFactoryBean factoryBean = createClientFactoryBean(cls)__        _        _        configure(factoryBean)___        _        setupClientFactoryBean(factoryBean, cls)___        _        QName serviceQName = null__        try {_            serviceQName = factoryBean.getServiceName()__        } catch (IllegalStateException e) {_            _        }_        _        if (serviceQName == null && getServiceLocalName() != null) {_            factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_            factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }_        _        return ((ClientProxy)Proxy.getInvocationHandler(factoryBean.create())).getClient()__    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,object,helper,not,null,cls,cxf,constants,client,proxy,factory,bean,factory,bean,create,client,factory,bean,cls,configure,factory,bean,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,client,proxy,proxy,get,invocation,handler,factory,bean,create,get,client
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1232870413;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_        _        ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)___        _        ClientProxyFactoryBean factoryBean = createClientFactoryBean(cls)__        _        _        configure(factoryBean)___        _        setupClientFactoryBean(factoryBean, cls)___        _        QName serviceQName = null__        try {_            serviceQName = factoryBean.getServiceName()__        } catch (IllegalStateException e) {_            _        }_        _        if (serviceQName == null && getServiceLocalName() != null) {_            factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_            factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }_        _        return ((ClientProxy)Proxy.getInvocationHandler(factoryBean.create())).getClient()__    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,object,helper,not,null,cls,cxf,constants,client,proxy,factory,bean,factory,bean,create,client,factory,bean,cls,configure,factory,bean,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,client,proxy,proxy,get,invocation,handler,factory,bean,create,get,client
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1233111476;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_        _        ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)___        _        ClientProxyFactoryBean factoryBean = createClientFactoryBean(cls)__        _        _        configure(factoryBean)___        _        setupClientFactoryBean(factoryBean, cls)___        _        QName serviceQName = null__        try {_            serviceQName = factoryBean.getServiceName()__        } catch (IllegalStateException e) {_            _        }_        _        if (serviceQName == null && getServiceLocalName() != null) {_            factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_            factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }_        _        return ((ClientProxy)Proxy.getInvocationHandler(factoryBean.create())).getClient()__    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,object,helper,not,null,cls,cxf,constants,client,proxy,factory,bean,factory,bean,create,client,factory,bean,cls,configure,factory,bean,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,client,proxy,proxy,get,invocation,handler,factory,bean,create,get,client
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1233174028;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_        _        ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)___        _        ClientProxyFactoryBean factoryBean = createClientFactoryBean(cls)__        _        _        configure(factoryBean)___        _        setupClientFactoryBean(factoryBean, cls)___        _        QName serviceQName = null__        try {_            serviceQName = factoryBean.getServiceName()__        } catch (IllegalStateException e) {_            _        }_        _        if (serviceQName == null && getServiceLocalName() != null) {_            factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_            factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }_        _        return ((ClientProxy)Proxy.getInvocationHandler(factoryBean.create())).getClient()__    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,object,helper,not,null,cls,cxf,constants,client,proxy,factory,bean,factory,bean,create,client,factory,bean,cls,configure,factory,bean,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,client,proxy,proxy,get,invocation,handler,factory,bean,create,get,client
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1236116950;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_        _        ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)___        _        ClientProxyFactoryBean factoryBean = createClientFactoryBean(cls)__        _        _        configure(factoryBean)___        _        setupClientFactoryBean(factoryBean, cls)___        _        QName serviceQName = null__        try {_            serviceQName = factoryBean.getServiceName()__        } catch (IllegalStateException e) {_            _        }_        _        if (serviceQName == null && getServiceLocalName() != null) {_            factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_            factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }_        _        return ((ClientProxy)Proxy.getInvocationHandler(factoryBean.create())).getClient()__    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,object,helper,not,null,cls,cxf,constants,client,proxy,factory,bean,factory,bean,create,client,factory,bean,cls,configure,factory,bean,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,client,proxy,proxy,get,invocation,handler,factory,bean,create,get,client
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1237363453;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_        _        ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)___        _        ClientProxyFactoryBean factoryBean = createClientFactoryBean(cls)__        _        _        configure(factoryBean)___        _        setupClientFactoryBean(factoryBean, cls)___        _        QName serviceQName = null__        try {_            serviceQName = factoryBean.getServiceName()__        } catch (IllegalStateException e) {_            _        }_        _        if (serviceQName == null && getServiceLocalName() != null) {_            factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_            factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }_        _        return ((ClientProxy)Proxy.getInvocationHandler(factoryBean.create())).getClient()__    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,object,helper,not,null,cls,cxf,constants,client,proxy,factory,bean,factory,bean,create,client,factory,bean,cls,configure,factory,bean,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,client,proxy,proxy,get,invocation,handler,factory,bean,create,get,client
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1237457114;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_        _        ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)___        _        ClientProxyFactoryBean factoryBean = createClientFactoryBean(cls)__        _        _        configure(factoryBean)___        _        setupClientFactoryBean(factoryBean, cls)___        _        QName serviceQName = null__        try {_            serviceQName = factoryBean.getServiceName()__        } catch (IllegalStateException e) {_            _        }_        _        if (serviceQName == null && getServiceLocalName() != null) {_            factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_            factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }_        _        return ((ClientProxy)Proxy.getInvocationHandler(factoryBean.create())).getClient()__    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,object,helper,not,null,cls,cxf,constants,client,proxy,factory,bean,factory,bean,create,client,factory,bean,cls,configure,factory,bean,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,client,proxy,proxy,get,invocation,handler,factory,bean,create,get,client
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1243588852;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_        _        ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)___        _        ClientProxyFactoryBean factoryBean = createClientFactoryBean(cls)__        _        _        configure(factoryBean)___        _        setupClientFactoryBean(factoryBean, cls)___        _        QName serviceQName = null__        try {_            serviceQName = factoryBean.getServiceName()__        } catch (IllegalStateException e) {_            _        }_        _        if (serviceQName == null && getServiceLocalName() != null) {_            factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_            factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }_        _        return ((ClientProxy)Proxy.getInvocationHandler(factoryBean.create())).getClient()__    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,object,helper,not,null,cls,cxf,constants,client,proxy,factory,bean,factory,bean,create,client,factory,bean,cls,configure,factory,bean,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,client,proxy,proxy,get,invocation,handler,factory,bean,create,get,client
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1244724024;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_        _        ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)___        _        ClientProxyFactoryBean factoryBean = createClientFactoryBean(cls)__        _        _        configure(factoryBean)___        _        setupClientFactoryBean(factoryBean, cls)___        _        QName serviceQName = null__        try {_            serviceQName = factoryBean.getServiceName()__        } catch (IllegalStateException e) {_            _        }_        _        if (serviceQName == null && getServiceLocalName() != null) {_            factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_            factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }_        _        return ((ClientProxy)Proxy.getInvocationHandler(factoryBean.create())).getClient()__    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,object,helper,not,null,cls,cxf,constants,client,proxy,factory,bean,factory,bean,create,client,factory,bean,cls,configure,factory,bean,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,client,proxy,proxy,get,invocation,handler,factory,bean,create,get,client
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1247063627;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_    _        _        if (getDataFormat().equals(DataFormat.POJO)) { _            ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        }__        _        ClientProxyFactoryBean factoryBean = createClientFactoryBean(cls)__        _        _        configure(factoryBean)___        _        setupClientFactoryBean(factoryBean, cls)___        _        QName serviceQName = null__        try {_            serviceQName = factoryBean.getServiceName()__        } catch (IllegalStateException e) {_            _        }_        _        if (serviceQName == null && getServiceLocalName() != null) {_            factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_            factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }_        _        if (cls == null) {_            return (Client)factoryBean.create()__        }_        _        return ((ClientProxy)Proxy.getInvocationHandler(factoryBean.create())).getClient()__    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,if,get,data,format,equals,data,format,pojo,object,helper,not,null,cls,cxf,constants,client,proxy,factory,bean,factory,bean,create,client,factory,bean,cls,configure,factory,bean,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,if,cls,null,return,client,factory,bean,create,return,client,proxy,proxy,get,invocation,handler,factory,bean,create,get,client
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1256171018;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_    _        _        if (getDataFormat().equals(DataFormat.POJO)) { _            ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        }__        if (cls != null) {_            _            ClientProxyFactoryBean factoryBean = createClientFactoryBean(cls)___            _            configure(factoryBean)___            _            setupClientFactoryBean(factoryBean, cls)___            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }__            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }__            return ((ClientProxy)Proxy.getInvocationHandler(factoryBean.create())).getClient()__        } else {_            ClientFactoryBean factoryBean = createClientFactoryBean()___            _            configure(factoryBean)__            _            _            setupClientFactoryBean(factoryBean)__            _            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }_            _            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }_            _            ObjectHelper.notNull(factoryBean.getEndpointName(), "Please provide endpoint/port name")__            ObjectHelper.notNull(factoryBean.getServiceName(), "Please provide service name")__            return (Client)factoryBean.create()__        }_    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,if,get,data,format,equals,data,format,pojo,object,helper,not,null,cls,cxf,constants,if,cls,null,client,proxy,factory,bean,factory,bean,create,client,factory,bean,cls,configure,factory,bean,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,client,proxy,proxy,get,invocation,handler,factory,bean,create,get,client,else,client,factory,bean,factory,bean,create,client,factory,bean,configure,factory,bean,setup,client,factory,bean,factory,bean,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,object,helper,not,null,factory,bean,get,endpoint,name,please,provide,endpoint,port,name,object,helper,not,null,factory,bean,get,service,name,please,provide,service,name,return,client,factory,bean,create
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1280130252;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_    _        _        if (getDataFormat().equals(DataFormat.POJO)) { _            ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        }__        if (cls != null) {_            _            ClientProxyFactoryBean factoryBean = createClientFactoryBean(cls)___            _            configure(factoryBean)___            _            setupClientFactoryBean(factoryBean, cls)___            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }__            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }__            return ((ClientProxy)Proxy.getInvocationHandler(factoryBean.create())).getClient()__        } else {_            ClientFactoryBean factoryBean = createClientFactoryBean()___            _            configure(factoryBean)__            _            _            setupClientFactoryBean(factoryBean)__            _            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }_            _            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }_            _            ObjectHelper.notNull(factoryBean.getEndpointName(), "Please provide endpoint/port name")__            ObjectHelper.notNull(factoryBean.getServiceName(), "Please provide service name")__            return (Client)factoryBean.create()__        }_    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,if,get,data,format,equals,data,format,pojo,object,helper,not,null,cls,cxf,constants,if,cls,null,client,proxy,factory,bean,factory,bean,create,client,factory,bean,cls,configure,factory,bean,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,client,proxy,proxy,get,invocation,handler,factory,bean,create,get,client,else,client,factory,bean,factory,bean,create,client,factory,bean,configure,factory,bean,setup,client,factory,bean,factory,bean,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,object,helper,not,null,factory,bean,get,endpoint,name,please,provide,endpoint,port,name,object,helper,not,null,factory,bean,get,service,name,please,provide,service,name,return,client,factory,bean,create
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1280224426;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_    _        _        if (getDataFormat().equals(DataFormat.POJO)) { _            ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        }__        if (cls != null) {_            _            ClientProxyFactoryBean factoryBean = createClientFactoryBean(cls)___            _            configure(factoryBean)___            _            setupClientFactoryBean(factoryBean, cls)___            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }__            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }__            return ((ClientProxy)Proxy.getInvocationHandler(factoryBean.create())).getClient()__        } else {_            ClientFactoryBean factoryBean = createClientFactoryBean()___            _            configure(factoryBean)__            _            _            setupClientFactoryBean(factoryBean)__            _            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }_            _            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }_            _            ObjectHelper.notNull(factoryBean.getEndpointName(), "Please provide endpoint/port name")__            ObjectHelper.notNull(factoryBean.getServiceName(), "Please provide service name")__            return (Client)factoryBean.create()__        }_    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,if,get,data,format,equals,data,format,pojo,object,helper,not,null,cls,cxf,constants,if,cls,null,client,proxy,factory,bean,factory,bean,create,client,factory,bean,cls,configure,factory,bean,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,client,proxy,proxy,get,invocation,handler,factory,bean,create,get,client,else,client,factory,bean,factory,bean,create,client,factory,bean,configure,factory,bean,setup,client,factory,bean,factory,bean,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,object,helper,not,null,factory,bean,get,endpoint,name,please,provide,endpoint,port,name,object,helper,not,null,factory,bean,get,service,name,please,provide,service,name,return,client,factory,bean,create
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1291762322;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_    _        _        if (getDataFormat().equals(DataFormat.POJO)) { _            ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        }__        if (cls != null) {_            _            ClientProxyFactoryBean factoryBean = createClientFactoryBean(cls)___            _            configure(factoryBean)___            _            setupClientFactoryBean(factoryBean, cls)___            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }__            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }__            return ((ClientProxy)Proxy.getInvocationHandler(factoryBean.create())).getClient()__        } else {_            ClientFactoryBean factoryBean = createClientFactoryBean()___            _            configure(factoryBean)__            _            _            setupClientFactoryBean(factoryBean)__            _            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }_            _            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }_            _            ObjectHelper.notNull(factoryBean.getEndpointName(), "Please provide endpoint/port name")__            ObjectHelper.notNull(factoryBean.getServiceName(), "Please provide service name")__            return (Client)factoryBean.create()__        }_    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,if,get,data,format,equals,data,format,pojo,object,helper,not,null,cls,cxf,constants,if,cls,null,client,proxy,factory,bean,factory,bean,create,client,factory,bean,cls,configure,factory,bean,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,client,proxy,proxy,get,invocation,handler,factory,bean,create,get,client,else,client,factory,bean,factory,bean,create,client,factory,bean,configure,factory,bean,setup,client,factory,bean,factory,bean,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,object,helper,not,null,factory,bean,get,endpoint,name,please,provide,endpoint,port,name,object,helper,not,null,factory,bean,get,service,name,please,provide,service,name,return,client,factory,bean,create
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1294211277;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_    _        _        if (getDataFormat().equals(DataFormat.POJO)) { _            ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        }__        if (cls != null) {_            _            ClientProxyFactoryBean factoryBean = createClientFactoryBean(cls)___            _            configure(factoryBean)___            _            setupClientFactoryBean(factoryBean, cls)___            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }__            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }__            return ((ClientProxy)Proxy.getInvocationHandler(factoryBean.create())).getClient()__        } else {_            ClientFactoryBean factoryBean = createClientFactoryBean()___            _            configure(factoryBean)__            _            _            setupClientFactoryBean(factoryBean)__            _            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }_            _            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }_            _            checkName(factoryBean.getEndpointName(), "endpoint/port name")__            checkName(factoryBean.getServiceName(), "service name")__            return (Client)factoryBean.create()__        }_    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,if,get,data,format,equals,data,format,pojo,object,helper,not,null,cls,cxf,constants,if,cls,null,client,proxy,factory,bean,factory,bean,create,client,factory,bean,cls,configure,factory,bean,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,client,proxy,proxy,get,invocation,handler,factory,bean,create,get,client,else,client,factory,bean,factory,bean,create,client,factory,bean,configure,factory,bean,setup,client,factory,bean,factory,bean,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,check,name,factory,bean,get,endpoint,name,endpoint,port,name,check,name,factory,bean,get,service,name,service,name,return,client,factory,bean,create
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1297969159;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_    _        _        if (getDataFormat().equals(DataFormat.POJO)) { _            ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        }__        if (cls != null) {_            _            ClientProxyFactoryBean factoryBean = createClientFactoryBean(cls)___            _            configure(factoryBean)___            _            setupClientFactoryBean(factoryBean, cls)___            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }__            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }__            return ((ClientProxy)Proxy.getInvocationHandler(factoryBean.create())).getClient()__        } else {_            ClientFactoryBean factoryBean = createClientFactoryBean()___            _            configure(factoryBean)__            _            _            setupClientFactoryBean(factoryBean)__            _            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }_            _            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }_            _            checkName(factoryBean.getEndpointName(), "endpoint/port name")__            checkName(factoryBean.getServiceName(), "service name")__            return (Client)factoryBean.create()__        }_    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,if,get,data,format,equals,data,format,pojo,object,helper,not,null,cls,cxf,constants,if,cls,null,client,proxy,factory,bean,factory,bean,create,client,factory,bean,cls,configure,factory,bean,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,client,proxy,proxy,get,invocation,handler,factory,bean,create,get,client,else,client,factory,bean,factory,bean,create,client,factory,bean,configure,factory,bean,setup,client,factory,bean,factory,bean,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,check,name,factory,bean,get,endpoint,name,endpoint,port,name,check,name,factory,bean,get,service,name,service,name,return,client,factory,bean,create
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1300842159;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_    _        _        if (getDataFormat().equals(DataFormat.POJO)) { _            ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        }__        if (getWsdlURL() == null && cls == null) {_            _            setServiceClass(org.apache.camel.component.cxf.DefaultSEI.class.getName())__            setDefaultOperationNamespace(CxfConstants.DISPATCH_NAMESPACE)__            setDefaultOperationName(CxfConstants.DISPATCH_DEFAULT_OPERATION_NAMESPACE)_               _            if (getDataFormat().equals(DataFormat.PAYLOAD)) { _                setSkipPayloadMessagePartCheck(true)__            }_            cls = getSEIClass()__        }_        _        if (cls != null) {_            _            ClientProxyFactoryBean factoryBean = createClientFactoryBean(cls)___            _            configure(factoryBean)___            _            setupClientFactoryBean(factoryBean, cls)___            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }__            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }__            return ((ClientProxy)Proxy.getInvocationHandler(factoryBean.create())).getClient()__        } else {_            _            ClientFactoryBean factoryBean = createClientFactoryBean()___            _            configure(factoryBean)__            _            _            setupClientFactoryBean(factoryBean)__            _            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }_            _            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }_            _            checkName(factoryBean.getEndpointName(), "endpoint/port name")__            checkName(factoryBean.getServiceName(), "service name")__            return (Client)factoryBean.create()__        }_    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,if,get,data,format,equals,data,format,pojo,object,helper,not,null,cls,cxf,constants,if,get,wsdl,url,null,cls,null,set,service,class,org,apache,camel,component,cxf,default,sei,class,get,name,set,default,operation,namespace,cxf,constants,set,default,operation,name,cxf,constants,if,get,data,format,equals,data,format,payload,set,skip,payload,message,part,check,true,cls,get,seiclass,if,cls,null,client,proxy,factory,bean,factory,bean,create,client,factory,bean,cls,configure,factory,bean,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,client,proxy,proxy,get,invocation,handler,factory,bean,create,get,client,else,client,factory,bean,factory,bean,create,client,factory,bean,configure,factory,bean,setup,client,factory,bean,factory,bean,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,check,name,factory,bean,get,endpoint,name,endpoint,port,name,check,name,factory,bean,get,service,name,service,name,return,client,factory,bean,create
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1307014084;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_    _        _        if (getDataFormat().equals(DataFormat.POJO)) { _            ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        }__        if (getWsdlURL() == null && cls == null) {_            _            setServiceClass(org.apache.camel.component.cxf.DefaultSEI.class.getName())__            setDefaultOperationNamespace(CxfConstants.DISPATCH_NAMESPACE)__            setDefaultOperationName(CxfConstants.DISPATCH_DEFAULT_OPERATION_NAMESPACE)_               _            if (getDataFormat().equals(DataFormat.PAYLOAD)) { _                setSkipPayloadMessagePartCheck(true)__            }_            cls = getSEIClass()__        }_        _        if (cls != null) {_            _            ClientProxyFactoryBean factoryBean = createClientFactoryBean(cls)___            _            configure(factoryBean)___            _            setupClientFactoryBean(factoryBean, cls)___            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }__            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }__            return ((ClientProxy)Proxy.getInvocationHandler(factoryBean.create())).getClient()__        } else {_            _            ClientFactoryBean factoryBean = createClientFactoryBean()___            _            configure(factoryBean)__            _            _            setupClientFactoryBean(factoryBean)__            _            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }_            _            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }_            _            checkName(factoryBean.getEndpointName(), "endpoint/port name")__            checkName(factoryBean.getServiceName(), "service name")__            return (Client)factoryBean.create()__        }_    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,if,get,data,format,equals,data,format,pojo,object,helper,not,null,cls,cxf,constants,if,get,wsdl,url,null,cls,null,set,service,class,org,apache,camel,component,cxf,default,sei,class,get,name,set,default,operation,namespace,cxf,constants,set,default,operation,name,cxf,constants,if,get,data,format,equals,data,format,payload,set,skip,payload,message,part,check,true,cls,get,seiclass,if,cls,null,client,proxy,factory,bean,factory,bean,create,client,factory,bean,cls,configure,factory,bean,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,client,proxy,proxy,get,invocation,handler,factory,bean,create,get,client,else,client,factory,bean,factory,bean,create,client,factory,bean,configure,factory,bean,setup,client,factory,bean,factory,bean,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,check,name,factory,bean,get,endpoint,name,endpoint,port,name,check,name,factory,bean,get,service,name,service,name,return,client,factory,bean,create
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1308235174;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_    _        _        if (getDataFormat().equals(DataFormat.POJO)) { _            ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        }__        if (getWsdlURL() == null && cls == null) {_            _            setServiceClass(org.apache.camel.component.cxf.DefaultSEI.class.getName())__            setDefaultOperationNamespace(CxfConstants.DISPATCH_NAMESPACE)__            setDefaultOperationName(CxfConstants.DISPATCH_DEFAULT_OPERATION_NAMESPACE)_               _            if (getDataFormat().equals(DataFormat.PAYLOAD)) { _                setSkipPayloadMessagePartCheck(true)__            }_            cls = getSEIClass()__        }_        _        if (cls != null) {_            _            ClientProxyFactoryBean factoryBean = createClientFactoryBean(cls)___            _            configure(factoryBean)___            _            setupClientFactoryBean(factoryBean, cls)___            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }__            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }__            return ((ClientProxy)Proxy.getInvocationHandler(factoryBean.create())).getClient()__        } else {_            _            ClientFactoryBean factoryBean = createClientFactoryBean()___            _            configure(factoryBean)__            _            _            setupClientFactoryBean(factoryBean)__            _            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }_            _            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }_            _            checkName(factoryBean.getEndpointName(), "endpoint/port name")__            checkName(factoryBean.getServiceName(), "service name")__            return (Client)factoryBean.create()__        }_    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,if,get,data,format,equals,data,format,pojo,object,helper,not,null,cls,cxf,constants,if,get,wsdl,url,null,cls,null,set,service,class,org,apache,camel,component,cxf,default,sei,class,get,name,set,default,operation,namespace,cxf,constants,set,default,operation,name,cxf,constants,if,get,data,format,equals,data,format,payload,set,skip,payload,message,part,check,true,cls,get,seiclass,if,cls,null,client,proxy,factory,bean,factory,bean,create,client,factory,bean,cls,configure,factory,bean,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,client,proxy,proxy,get,invocation,handler,factory,bean,create,get,client,else,client,factory,bean,factory,bean,create,client,factory,bean,configure,factory,bean,setup,client,factory,bean,factory,bean,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,check,name,factory,bean,get,endpoint,name,endpoint,port,name,check,name,factory,bean,get,service,name,service,name,return,client,factory,bean,create
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1308788876;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_    _        _        if (getDataFormat().equals(DataFormat.POJO)) { _            ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        }__        if (getWsdlURL() == null && cls == null) {_            _            setServiceClass(org.apache.camel.component.cxf.DefaultSEI.class.getName())__            setDefaultOperationNamespace(CxfConstants.DISPATCH_NAMESPACE)__            setDefaultOperationName(CxfConstants.DISPATCH_DEFAULT_OPERATION_NAMESPACE)_               _            if (getDataFormat().equals(DataFormat.PAYLOAD)) { _                setSkipPayloadMessagePartCheck(true)__            }_            cls = getSEIClass()__        }_        _        if (cls != null) {_            _            ClientProxyFactoryBean factoryBean = createClientFactoryBean(cls)___            _            configure(factoryBean)___            _            setupClientFactoryBean(factoryBean, cls)___            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }__            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }__            return ((ClientProxy)Proxy.getInvocationHandler(factoryBean.create())).getClient()__        } else {_            _            ClientFactoryBean factoryBean = createClientFactoryBean()___            _            configure(factoryBean)__            _            _            setupClientFactoryBean(factoryBean)__            _            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }_            _            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }_            _            checkName(factoryBean.getEndpointName(), "endpoint/port name")__            checkName(factoryBean.getServiceName(), "service name")__            return (Client)factoryBean.create()__        }_    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,if,get,data,format,equals,data,format,pojo,object,helper,not,null,cls,cxf,constants,if,get,wsdl,url,null,cls,null,set,service,class,org,apache,camel,component,cxf,default,sei,class,get,name,set,default,operation,namespace,cxf,constants,set,default,operation,name,cxf,constants,if,get,data,format,equals,data,format,payload,set,skip,payload,message,part,check,true,cls,get,seiclass,if,cls,null,client,proxy,factory,bean,factory,bean,create,client,factory,bean,cls,configure,factory,bean,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,client,proxy,proxy,get,invocation,handler,factory,bean,create,get,client,else,client,factory,bean,factory,bean,create,client,factory,bean,configure,factory,bean,setup,client,factory,bean,factory,bean,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,check,name,factory,bean,get,endpoint,name,endpoint,port,name,check,name,factory,bean,get,service,name,service,name,return,client,factory,bean,create
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1314714706;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_    _        _        if (getDataFormat().equals(DataFormat.POJO)) { _            ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        }__        if (getWsdlURL() == null && cls == null) {_            _            setServiceClass(org.apache.camel.component.cxf.DefaultSEI.class.getName())__            setDefaultOperationNamespace(CxfConstants.DISPATCH_NAMESPACE)__            setDefaultOperationName(CxfConstants.DISPATCH_DEFAULT_OPERATION_NAMESPACE)_               _            if (getDataFormat().equals(DataFormat.PAYLOAD)) { _                setSkipPayloadMessagePartCheck(true)__            }_            cls = getSEIClass()__        }_        _        if (cls != null) {_            _            ClientProxyFactoryBean factoryBean = createClientFactoryBean(cls)___            _            setupClientFactoryBean(factoryBean, cls)___            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }__            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }__            return ((ClientProxy)Proxy.getInvocationHandler(factoryBean.create())).getClient()__        } else {_            _            ClientFactoryBean factoryBean = createClientFactoryBean()___            _            setupClientFactoryBean(factoryBean)__            _            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }_            _            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }_            _            checkName(factoryBean.getEndpointName(), "endpoint/port name")__            checkName(factoryBean.getServiceName(), "service name")__            return (Client)factoryBean.create()__        }_    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,if,get,data,format,equals,data,format,pojo,object,helper,not,null,cls,cxf,constants,if,get,wsdl,url,null,cls,null,set,service,class,org,apache,camel,component,cxf,default,sei,class,get,name,set,default,operation,namespace,cxf,constants,set,default,operation,name,cxf,constants,if,get,data,format,equals,data,format,payload,set,skip,payload,message,part,check,true,cls,get,seiclass,if,cls,null,client,proxy,factory,bean,factory,bean,create,client,factory,bean,cls,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,client,proxy,proxy,get,invocation,handler,factory,bean,create,get,client,else,client,factory,bean,factory,bean,create,client,factory,bean,setup,client,factory,bean,factory,bean,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,check,name,factory,bean,get,endpoint,name,endpoint,port,name,check,name,factory,bean,get,service,name,service,name,return,client,factory,bean,create
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1315571408;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_    _        _        if (getDataFormat().equals(DataFormat.POJO)) { _            ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        }__        if (getWsdlURL() == null && cls == null) {_            _            setServiceClass(org.apache.camel.component.cxf.DefaultSEI.class.getName())__            setDefaultOperationNamespace(CxfConstants.DISPATCH_NAMESPACE)__            setDefaultOperationName(CxfConstants.DISPATCH_DEFAULT_OPERATION_NAMESPACE)_               _            if (getDataFormat().equals(DataFormat.PAYLOAD)) { _                setSkipPayloadMessagePartCheck(true)__            }_            cls = getSEIClass()__        }_        _        if (cls != null) {_            _            ClientFactoryBean factoryBean = createClientFactoryBean(cls)___            _            setupClientFactoryBean(factoryBean, cls)___            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }__            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }__            Client client = factoryBean.create()__            _            setupHandlers(factoryBean, client)__            return client__        } else {_            _            ClientFactoryBean factoryBean = createClientFactoryBean()___            _            setupClientFactoryBean(factoryBean, null)__            _            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }_            _            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }_            _            checkName(factoryBean.getEndpointName(), "endpoint/port name")__            checkName(factoryBean.getServiceName(), "service name")__            return (Client)factoryBean.create()__        }_    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,if,get,data,format,equals,data,format,pojo,object,helper,not,null,cls,cxf,constants,if,get,wsdl,url,null,cls,null,set,service,class,org,apache,camel,component,cxf,default,sei,class,get,name,set,default,operation,namespace,cxf,constants,set,default,operation,name,cxf,constants,if,get,data,format,equals,data,format,payload,set,skip,payload,message,part,check,true,cls,get,seiclass,if,cls,null,client,factory,bean,factory,bean,create,client,factory,bean,cls,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,client,client,factory,bean,create,setup,handlers,factory,bean,client,return,client,else,client,factory,bean,factory,bean,create,client,factory,bean,setup,client,factory,bean,factory,bean,null,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,check,name,factory,bean,get,endpoint,name,endpoint,port,name,check,name,factory,bean,get,service,name,service,name,return,client,factory,bean,create
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1316165324;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_    _        _        if (getDataFormat().equals(DataFormat.POJO)) { _            ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        }__        if (getWsdlURL() == null && cls == null) {_            _            setServiceClass(org.apache.camel.component.cxf.DefaultSEI.class.getName())__            setDefaultOperationNamespace(CxfConstants.DISPATCH_NAMESPACE)__            setDefaultOperationName(CxfConstants.DISPATCH_DEFAULT_OPERATION_NAMESPACE)_               _            if (getDataFormat().equals(DataFormat.PAYLOAD)) { _                setSkipPayloadMessagePartCheck(true)__            }_            cls = getSEIClass()__        }_        _        if (cls != null) {_            _            ClientFactoryBean factoryBean = createClientFactoryBean(cls)___            _            setupClientFactoryBean(factoryBean, cls)___            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }__            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }__            Client client = factoryBean.create()__            _            setupHandlers(factoryBean, client)__            return client__        } else {_            _            ClientFactoryBean factoryBean = createClientFactoryBean()___            _            setupClientFactoryBean(factoryBean, null)__            _            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }_            _            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }_            _            checkName(factoryBean.getEndpointName(), "endpoint/port name")__            checkName(factoryBean.getServiceName(), "service name")__            return (Client)factoryBean.create()__        }_    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,if,get,data,format,equals,data,format,pojo,object,helper,not,null,cls,cxf,constants,if,get,wsdl,url,null,cls,null,set,service,class,org,apache,camel,component,cxf,default,sei,class,get,name,set,default,operation,namespace,cxf,constants,set,default,operation,name,cxf,constants,if,get,data,format,equals,data,format,payload,set,skip,payload,message,part,check,true,cls,get,seiclass,if,cls,null,client,factory,bean,factory,bean,create,client,factory,bean,cls,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,client,client,factory,bean,create,setup,handlers,factory,bean,client,return,client,else,client,factory,bean,factory,bean,create,client,factory,bean,setup,client,factory,bean,factory,bean,null,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,check,name,factory,bean,get,endpoint,name,endpoint,port,name,check,name,factory,bean,get,service,name,service,name,return,client,factory,bean,create
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1323117475;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_    _        _        if (getDataFormat().equals(DataFormat.POJO)) { _            ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        }__        if (getWsdlURL() == null && cls == null) {_            _            setServiceClass(org.apache.camel.component.cxf.DefaultSEI.class.getName())__            setDefaultOperationNamespace(CxfConstants.DISPATCH_NAMESPACE)__            setDefaultOperationName(CxfConstants.DISPATCH_DEFAULT_OPERATION_NAMESPACE)_               _            if (getDataFormat().equals(DataFormat.PAYLOAD)) { _                setSkipPayloadMessagePartCheck(true)__            }_            cls = getSEIClass()__        }_        _        if (cls != null) {_            _            ClientFactoryBean factoryBean = createClientFactoryBean(cls)___            _            setupClientFactoryBean(factoryBean, cls)___            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }__            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }__            Client client = factoryBean.create()__            _            setupHandlers(factoryBean, client)__            return client__        } else {_            _            ClientFactoryBean factoryBean = createClientFactoryBean()___            _            setupClientFactoryBean(factoryBean, null)__            _            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }_            _            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }_            _            checkName(factoryBean.getEndpointName(), "endpoint/port name")__            checkName(factoryBean.getServiceName(), "service name")__            return (Client)factoryBean.create()__        }_    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,if,get,data,format,equals,data,format,pojo,object,helper,not,null,cls,cxf,constants,if,get,wsdl,url,null,cls,null,set,service,class,org,apache,camel,component,cxf,default,sei,class,get,name,set,default,operation,namespace,cxf,constants,set,default,operation,name,cxf,constants,if,get,data,format,equals,data,format,payload,set,skip,payload,message,part,check,true,cls,get,seiclass,if,cls,null,client,factory,bean,factory,bean,create,client,factory,bean,cls,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,client,client,factory,bean,create,setup,handlers,factory,bean,client,return,client,else,client,factory,bean,factory,bean,create,client,factory,bean,setup,client,factory,bean,factory,bean,null,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,check,name,factory,bean,get,endpoint,name,endpoint,port,name,check,name,factory,bean,get,service,name,service,name,return,client,factory,bean,create
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1324569391;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_    _        _        if (getDataFormat().equals(DataFormat.POJO)) { _            ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        }__        if (getWsdlURL() == null && cls == null) {_            _            setServiceClass(org.apache.camel.component.cxf.DefaultSEI.class.getName())__            setDefaultOperationNamespace(CxfConstants.DISPATCH_NAMESPACE)__            setDefaultOperationName(CxfConstants.DISPATCH_DEFAULT_OPERATION_NAMESPACE)_               _            if (getDataFormat().equals(DataFormat.PAYLOAD)) { _                setSkipPayloadMessagePartCheck(true)__            }_            cls = getSEIClass()__        }_        _        if (cls != null) {_            _            ClientFactoryBean factoryBean = createClientFactoryBean(cls)___            _            setupClientFactoryBean(factoryBean, cls)___            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }__            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }__            Client client = factoryBean.create()__            _            setupHandlers(factoryBean, client)__            return client__        } else {_            _            ClientFactoryBean factoryBean = createClientFactoryBean()___            _            setupClientFactoryBean(factoryBean, null)__            _            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }_            _            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }_            _            checkName(factoryBean.getEndpointName(), "endpoint/port name")__            checkName(factoryBean.getServiceName(), "service name")__            return (Client)factoryBean.create()__        }_    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,if,get,data,format,equals,data,format,pojo,object,helper,not,null,cls,cxf,constants,if,get,wsdl,url,null,cls,null,set,service,class,org,apache,camel,component,cxf,default,sei,class,get,name,set,default,operation,namespace,cxf,constants,set,default,operation,name,cxf,constants,if,get,data,format,equals,data,format,payload,set,skip,payload,message,part,check,true,cls,get,seiclass,if,cls,null,client,factory,bean,factory,bean,create,client,factory,bean,cls,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,client,client,factory,bean,create,setup,handlers,factory,bean,client,return,client,else,client,factory,bean,factory,bean,create,client,factory,bean,setup,client,factory,bean,factory,bean,null,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,check,name,factory,bean,get,endpoint,name,endpoint,port,name,check,name,factory,bean,get,service,name,service,name,return,client,factory,bean,create
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1325745470;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_    _        _        if (getDataFormat().equals(DataFormat.POJO)) { _            ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        }__        if (getWsdlURL() == null && cls == null) {_            _            setServiceClass(org.apache.camel.component.cxf.DefaultSEI.class.getName())__            setDefaultOperationNamespace(CxfConstants.DISPATCH_NAMESPACE)__            setDefaultOperationName(CxfConstants.DISPATCH_DEFAULT_OPERATION_NAMESPACE)_               _            if (getDataFormat().equals(DataFormat.PAYLOAD)) { _                setSkipPayloadMessagePartCheck(true)__            }_            cls = getSEIClass()__        }_        _        if (cls != null) {_            _            ClientFactoryBean factoryBean = createClientFactoryBean(cls)___            _            setupClientFactoryBean(factoryBean, cls)___            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }__            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }__            Client client = factoryBean.create()__            _            setupHandlers(factoryBean, client)__            return client__        } else {_            _            ClientFactoryBean factoryBean = createClientFactoryBean()___            _            setupClientFactoryBean(factoryBean, null)__            _            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }_            _            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }_            _            checkName(factoryBean.getEndpointName(), "endpoint/port name")__            checkName(factoryBean.getServiceName(), "service name")__            return (Client)factoryBean.create()__        }_    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,if,get,data,format,equals,data,format,pojo,object,helper,not,null,cls,cxf,constants,if,get,wsdl,url,null,cls,null,set,service,class,org,apache,camel,component,cxf,default,sei,class,get,name,set,default,operation,namespace,cxf,constants,set,default,operation,name,cxf,constants,if,get,data,format,equals,data,format,payload,set,skip,payload,message,part,check,true,cls,get,seiclass,if,cls,null,client,factory,bean,factory,bean,create,client,factory,bean,cls,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,client,client,factory,bean,create,setup,handlers,factory,bean,client,return,client,else,client,factory,bean,factory,bean,create,client,factory,bean,setup,client,factory,bean,factory,bean,null,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,check,name,factory,bean,get,endpoint,name,endpoint,port,name,check,name,factory,bean,get,service,name,service,name,return,client,factory,bean,create
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1325779288;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_    _        _        if (getDataFormat().equals(DataFormat.POJO)) { _            ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        }__        if (getWsdlURL() == null && cls == null) {_            _            setServiceClass(org.apache.camel.component.cxf.DefaultSEI.class.getName())__            setDefaultOperationNamespace(CxfConstants.DISPATCH_NAMESPACE)__            setDefaultOperationName(CxfConstants.DISPATCH_DEFAULT_OPERATION_NAMESPACE)_               _            if (getDataFormat().equals(DataFormat.PAYLOAD)) { _                setSkipPayloadMessagePartCheck(true)__            }_            cls = getSEIClass()__        }_        _        if (cls != null) {_            _            ClientFactoryBean factoryBean = createClientFactoryBean(cls)___            _            setupClientFactoryBean(factoryBean, cls)___            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }__            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }__            Client client = factoryBean.create()__            _            setupHandlers(factoryBean, client)__            return client__        } else {_            _            ClientFactoryBean factoryBean = createClientFactoryBean()___            _            setupClientFactoryBean(factoryBean, null)__            _            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }_            _            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }_            _            checkName(factoryBean.getEndpointName(), "endpoint/port name")__            checkName(factoryBean.getServiceName(), "service name")__            return factoryBean.create()__        }_    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,if,get,data,format,equals,data,format,pojo,object,helper,not,null,cls,cxf,constants,if,get,wsdl,url,null,cls,null,set,service,class,org,apache,camel,component,cxf,default,sei,class,get,name,set,default,operation,namespace,cxf,constants,set,default,operation,name,cxf,constants,if,get,data,format,equals,data,format,payload,set,skip,payload,message,part,check,true,cls,get,seiclass,if,cls,null,client,factory,bean,factory,bean,create,client,factory,bean,cls,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,client,client,factory,bean,create,setup,handlers,factory,bean,client,return,client,else,client,factory,bean,factory,bean,create,client,factory,bean,setup,client,factory,bean,factory,bean,null,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,check,name,factory,bean,get,endpoint,name,endpoint,port,name,check,name,factory,bean,get,service,name,service,name,return,factory,bean,create
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1338993982;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_    _        _        if (getDataFormat().equals(DataFormat.POJO)) { _            ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        }__        if (getWsdlURL() == null && cls == null) {_            _            setServiceClass(org.apache.camel.component.cxf.DefaultSEI.class.getName())__            setDefaultOperationNamespace(CxfConstants.DISPATCH_NAMESPACE)__            setDefaultOperationName(CxfConstants.DISPATCH_DEFAULT_OPERATION_NAMESPACE)_               _            if (getDataFormat().equals(DataFormat.PAYLOAD)) { _                setSkipPayloadMessagePartCheck(true)__            }_            cls = getSEIClass()__        }_        _        if (cls != null) {_            _            ClientFactoryBean factoryBean = createClientFactoryBean(cls)___            _            setupClientFactoryBean(factoryBean, cls)___            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }__            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }__            Client client = factoryBean.create()__            _            setupHandlers(factoryBean, client)__            return client__        } else {_            _            ClientFactoryBean factoryBean = createClientFactoryBean()___            _            setupClientFactoryBean(factoryBean, null)__            _            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }_            _            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }_            _            checkName(factoryBean.getEndpointName(), "endpoint/port name")__            checkName(factoryBean.getServiceName(), "service name")__            return factoryBean.create()__        }_    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,if,get,data,format,equals,data,format,pojo,object,helper,not,null,cls,cxf,constants,if,get,wsdl,url,null,cls,null,set,service,class,org,apache,camel,component,cxf,default,sei,class,get,name,set,default,operation,namespace,cxf,constants,set,default,operation,name,cxf,constants,if,get,data,format,equals,data,format,payload,set,skip,payload,message,part,check,true,cls,get,seiclass,if,cls,null,client,factory,bean,factory,bean,create,client,factory,bean,cls,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,client,client,factory,bean,create,setup,handlers,factory,bean,client,return,client,else,client,factory,bean,factory,bean,create,client,factory,bean,setup,client,factory,bean,factory,bean,null,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,check,name,factory,bean,get,endpoint,name,endpoint,port,name,check,name,factory,bean,get,service,name,service,name,return,factory,bean,create
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1389726752;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_    _        _        if (getDataFormat().equals(DataFormat.POJO)) { _            ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        }__        if (getWsdlURL() == null && cls == null) {_            _            setServiceClass(org.apache.camel.component.cxf.DefaultSEI.class.getName())__            setDefaultOperationNamespace(CxfConstants.DISPATCH_NAMESPACE)__            setDefaultOperationName(CxfConstants.DISPATCH_DEFAULT_OPERATION_NAMESPACE)_               _            if (getDataFormat().equals(DataFormat.PAYLOAD)) { _                setSkipPayloadMessagePartCheck(true)__            }_            cls = getSEIClass()__        }_        _        if (cls != null) {_            _            ClientFactoryBean factoryBean = createClientFactoryBean(cls)___            _            setupClientFactoryBean(factoryBean, cls)___            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }__            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }__            Client client = factoryBean.create()__            _            setupHandlers(factoryBean, client)__            return client__        } else {_            _            ClientFactoryBean factoryBean = createClientFactoryBean()___            _            setupClientFactoryBean(factoryBean, null)__            _            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }_            _            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }_            _            checkName(factoryBean.getEndpointName(), "endpoint/port name")__            checkName(factoryBean.getServiceName(), "service name")__            return factoryBean.create()__        }_    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,if,get,data,format,equals,data,format,pojo,object,helper,not,null,cls,cxf,constants,if,get,wsdl,url,null,cls,null,set,service,class,org,apache,camel,component,cxf,default,sei,class,get,name,set,default,operation,namespace,cxf,constants,set,default,operation,name,cxf,constants,if,get,data,format,equals,data,format,payload,set,skip,payload,message,part,check,true,cls,get,seiclass,if,cls,null,client,factory,bean,factory,bean,create,client,factory,bean,cls,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,client,client,factory,bean,create,setup,handlers,factory,bean,client,return,client,else,client,factory,bean,factory,bean,create,client,factory,bean,setup,client,factory,bean,factory,bean,null,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,check,name,factory,bean,get,endpoint,name,endpoint,port,name,check,name,factory,bean,get,service,name,service,name,return,factory,bean,create
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1405374721;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getSEIClass()_    _        _        if (getDataFormat().equals(DataFormat.POJO)) { _            ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        }__        if (getWsdlURL() == null && cls == null) {_            _            setServiceClass(org.apache.camel.component.cxf.DefaultSEI.class.getName())__            setDefaultOperationNamespace(CxfConstants.DISPATCH_NAMESPACE)__            setDefaultOperationName(CxfConstants.DISPATCH_DEFAULT_OPERATION_NAMESPACE)_               _            if (getDataFormat().equals(DataFormat.PAYLOAD)) { _                setSkipPayloadMessagePartCheck(true)__            }_            cls = getSEIClass()__        }_        _        if (cls != null) {_            _            ClientFactoryBean factoryBean = createClientFactoryBean(cls)___            _            setupClientFactoryBean(factoryBean, cls)___            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }__            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }__            Client client = factoryBean.create()__            _            setupHandlers(factoryBean, client)__            return client__        } else {_            _            ClientFactoryBean factoryBean = createClientFactoryBean()___            _            setupClientFactoryBean(factoryBean, null)__            _            _            QName serviceQName = null__            try {_                serviceQName = factoryBean.getServiceName()__            } catch (IllegalStateException e) {_                _            }_            _            if (serviceQName == null && getServiceLocalName() != null) {_                factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__            }_            if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_                factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__            }_            _            checkName(factoryBean.getEndpointName(), "endpoint/port name")__            checkName(factoryBean.getServiceName(), "service name")__            return factoryBean.create()__        }_    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,seiclass,if,get,data,format,equals,data,format,pojo,object,helper,not,null,cls,cxf,constants,if,get,wsdl,url,null,cls,null,set,service,class,org,apache,camel,component,cxf,default,sei,class,get,name,set,default,operation,namespace,cxf,constants,set,default,operation,name,cxf,constants,if,get,data,format,equals,data,format,payload,set,skip,payload,message,part,check,true,cls,get,seiclass,if,cls,null,client,factory,bean,factory,bean,create,client,factory,bean,cls,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,client,client,factory,bean,create,setup,handlers,factory,bean,client,return,client,else,client,factory,bean,factory,bean,create,client,factory,bean,setup,client,factory,bean,factory,bean,null,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,check,name,factory,bean,get,endpoint,name,endpoint,port,name,check,name,factory,bean,get,service,name,service,name,return,factory,bean,create
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1533715436;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getServiceClass()_    _        _        if (getDataFormat().equals(DataFormat.POJO)) { _            ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        }__        if (getWsdlURL() == null && cls == null) {_            _            setServiceClass(org.apache.camel.component.cxf.DefaultSEI.class.getName())__            setDefaultOperationNamespace(CxfConstants.DISPATCH_NAMESPACE)__            setDefaultOperationName(CxfConstants.DISPATCH_DEFAULT_OPERATION_NAMESPACE)_               _            if (getDataFormat().equals(DataFormat.PAYLOAD)) { _                setSkipPayloadMessagePartCheck(true)__            }_            cls = getServiceClass()__        }_        _        ClientFactoryBean factoryBean__        if (cls != null) {_            _            factoryBean = createClientFactoryBean(cls)__        } else {_            factoryBean = createClientFactoryBean()__        }__        _        setupClientFactoryBean(factoryBean, cls)___        _        QName serviceQName = null__        try {_            serviceQName = factoryBean.getServiceName()__        } catch (IllegalStateException e) {_            _        }__        if (serviceQName == null && getServiceLocalName() != null) {_            factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_            factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }_        _        if (cls == null) {_            checkName(factoryBean.getEndpointName(), "endpoint/port name")__            checkName(factoryBean.getServiceName(), "service name")__        }__        Client client = factoryBean.create()__        _        setupHandlers(factoryBean, client)__        return client__    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,service,class,if,get,data,format,equals,data,format,pojo,object,helper,not,null,cls,cxf,constants,if,get,wsdl,url,null,cls,null,set,service,class,org,apache,camel,component,cxf,default,sei,class,get,name,set,default,operation,namespace,cxf,constants,set,default,operation,name,cxf,constants,if,get,data,format,equals,data,format,payload,set,skip,payload,message,part,check,true,cls,get,service,class,client,factory,bean,factory,bean,if,cls,null,factory,bean,create,client,factory,bean,cls,else,factory,bean,create,client,factory,bean,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,if,cls,null,check,name,factory,bean,get,endpoint,name,endpoint,port,name,check,name,factory,bean,get,service,name,service,name,client,client,factory,bean,create,setup,handlers,factory,bean,client,return,client
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1537792841;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getServiceClass()_    _        _        if (getDataFormat().equals(DataFormat.POJO)) { _            ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        }__        if (getWsdlURL() == null && cls == null) {_            _            setServiceClass(org.apache.camel.component.cxf.DefaultSEI.class.getName())__            setDefaultOperationNamespace(CxfConstants.DISPATCH_NAMESPACE)__            setDefaultOperationName(CxfConstants.DISPATCH_DEFAULT_OPERATION_NAMESPACE)_               _            if (getDataFormat().equals(DataFormat.PAYLOAD)) { _                setSkipPayloadMessagePartCheck(true)__            }_            cls = getServiceClass()__        }_        _        ClientFactoryBean factoryBean__        if (cls != null) {_            _            factoryBean = createClientFactoryBean(cls)__        } else {_            factoryBean = createClientFactoryBean()__        }__        _        setupClientFactoryBean(factoryBean, cls)___        _        QName serviceQName = null__        try {_            serviceQName = factoryBean.getServiceName()__        } catch (IllegalStateException e) {_            _        }__        if (serviceQName == null && getServiceLocalName() != null) {_            factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_            factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }_        _        if (cls == null) {_            checkName(factoryBean.getEndpointName(), "endpoint/port name")__            checkName(factoryBean.getServiceName(), "service name")__        }__        Client client = factoryBean.create()__        _        setupHandlers(factoryBean, client)__        return client__    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,service,class,if,get,data,format,equals,data,format,pojo,object,helper,not,null,cls,cxf,constants,if,get,wsdl,url,null,cls,null,set,service,class,org,apache,camel,component,cxf,default,sei,class,get,name,set,default,operation,namespace,cxf,constants,set,default,operation,name,cxf,constants,if,get,data,format,equals,data,format,payload,set,skip,payload,message,part,check,true,cls,get,service,class,client,factory,bean,factory,bean,if,cls,null,factory,bean,create,client,factory,bean,cls,else,factory,bean,create,client,factory,bean,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,if,cls,null,check,name,factory,bean,get,endpoint,name,endpoint,port,name,check,name,factory,bean,get,service,name,service,name,client,client,factory,bean,create,setup,handlers,factory,bean,client,return,client
CxfSpringEndpoint -> @Override     Client createClient() throws Exception;1540108161;Create a CXF Client;@Override_    Client createClient() throws Exception {_        _        _        Class<?> cls = getServiceClass()_    _        _        if (getDataFormat().equals(DataFormat.POJO)) { _            ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        }__        if (getWsdlURL() == null && cls == null) {_            _            setServiceClass(org.apache.camel.component.cxf.DefaultSEI.class.getName())__            setDefaultOperationNamespace(CxfConstants.DISPATCH_NAMESPACE)__            setDefaultOperationName(CxfConstants.DISPATCH_DEFAULT_OPERATION_NAMESPACE)_               _            if (getDataFormat().equals(DataFormat.PAYLOAD)) { _                setSkipPayloadMessagePartCheck(true)__            }_            cls = getServiceClass()__        }_        _        ClientFactoryBean factoryBean__        if (cls != null) {_            _            factoryBean = createClientFactoryBean(cls)__        } else {_            factoryBean = createClientFactoryBean()__        }__        _        setupClientFactoryBean(factoryBean, cls)___        _        QName serviceQName = null__        try {_            serviceQName = factoryBean.getServiceName()__        } catch (IllegalStateException e) {_            _        }__        if (serviceQName == null && getServiceLocalName() != null) {_            factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {_            factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }_        _        if (cls == null) {_            checkName(factoryBean.getEndpointName(), "endpoint/port name")__            checkName(factoryBean.getServiceName(), "service name")__        }__        Client client = factoryBean.create()__        _        setupHandlers(factoryBean, client)__        return client__    };create,a,cxf,client;override,client,create,client,throws,exception,class,cls,get,service,class,if,get,data,format,equals,data,format,pojo,object,helper,not,null,cls,cxf,constants,if,get,wsdl,url,null,cls,null,set,service,class,org,apache,camel,component,cxf,default,sei,class,get,name,set,default,operation,namespace,cxf,constants,set,default,operation,name,cxf,constants,if,get,data,format,equals,data,format,payload,set,skip,payload,message,part,check,true,cls,get,service,class,client,factory,bean,factory,bean,if,cls,null,factory,bean,create,client,factory,bean,cls,else,factory,bean,create,client,factory,bean,setup,client,factory,bean,factory,bean,cls,qname,service,qname,null,try,service,qname,factory,bean,get,service,name,catch,illegal,state,exception,e,if,service,qname,null,get,service,local,name,null,factory,bean,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,factory,bean,get,endpoint,name,null,get,endpoint,local,name,null,factory,bean,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,if,cls,null,check,name,factory,bean,get,endpoint,name,endpoint,port,name,check,name,factory,bean,get,service,name,service,name,client,client,factory,bean,create,setup,handlers,factory,bean,client,return,client
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1232329721;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_        _        ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        _        _        ServerFactoryBean answer = CxfEndpointUtils.getServerFactoryBean(cls)___        _        configure(answer)__        _        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,object,helper,not,null,cls,cxf,constants,server,factory,bean,answer,cxf,endpoint,utils,get,server,factory,bean,cls,configure,answer,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1232782057;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_        _        ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        _        _        ServerFactoryBean answer = CxfEndpointUtils.getServerFactoryBean(cls)___        _        configure(answer)__        _        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,object,helper,not,null,cls,cxf,constants,server,factory,bean,answer,cxf,endpoint,utils,get,server,factory,bean,cls,configure,answer,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1232870413;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_        _        ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        _        _        ServerFactoryBean answer = CxfEndpointUtils.getServerFactoryBean(cls)___        _        configure(answer)__        _        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,object,helper,not,null,cls,cxf,constants,server,factory,bean,answer,cxf,endpoint,utils,get,server,factory,bean,cls,configure,answer,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1233111476;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_        _        ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        _        _        _        _        _        ServerFactoryBean answer = null__        if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        configure(answer)__        _        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,object,helper,not,null,cls,cxf,constants,server,factory,bean,answer,null,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,configure,answer,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1233174028;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_        _        ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        _        _        _        _        _        ServerFactoryBean answer = null__        if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        configure(answer)__        _        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,object,helper,not,null,cls,cxf,constants,server,factory,bean,answer,null,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,configure,answer,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1236116950;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_        _        ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        _        _        _        _        _        ServerFactoryBean answer = null__        if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        configure(answer)__        _        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,object,helper,not,null,cls,cxf,constants,server,factory,bean,answer,null,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,configure,answer,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1237363453;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_        _        ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        _        _        _        _        _        ServerFactoryBean answer = null__        if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        configure(answer)__        _        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,object,helper,not,null,cls,cxf,constants,server,factory,bean,answer,null,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,configure,answer,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1237457114;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_        _        ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__        _        _        _        _        _        ServerFactoryBean answer = null__        if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        configure(answer)__        _        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,object,helper,not,null,cls,cxf,constants,server,factory,bean,answer,null,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,configure,answer,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1243588852;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_        _        ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__                _        _        _        _        ServerFactoryBean answer = null__        if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        configure(answer)__        _        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,object,helper,not,null,cls,cxf,constants,server,factory,bean,answer,null,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,configure,answer,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1244724024;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_        _        ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__                _        _        _        _        ServerFactoryBean answer = null__        if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        configure(answer)__        _        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,object,helper,not,null,cls,cxf,constants,server,factory,bean,answer,null,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,configure,answer,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1247063627;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_                _                _        _        _        _        ServerFactoryBean answer = null___        if (cls == null) {_            if (!getDataFormat().equals(DataFormat.POJO)) {_                answer = new ServerFactoryBean(new WSDLServiceFactoryBean())__            } else {_                ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__            }_        } else if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        configure(answer)__        _        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,server,factory,bean,answer,null,if,cls,null,if,get,data,format,equals,data,format,pojo,answer,new,server,factory,bean,new,wsdlservice,factory,bean,else,object,helper,not,null,cls,cxf,constants,else,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,configure,answer,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1256171018;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_                _                _        _        _        _        ServerFactoryBean answer = null___        if (cls == null) {_            if (!getDataFormat().equals(DataFormat.POJO)) {_                answer = new ServerFactoryBean(new WSDLServiceFactoryBean())__            } else {_                ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__            }_        } else if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        configure(answer)__        _        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        if (cls == null) {_            ObjectHelper.notNull(answer.getEndpointName(), "Please provide endpoint/port name")__            ObjectHelper.notNull(answer.getServiceName(), "Please provide service name")__        }_        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,server,factory,bean,answer,null,if,cls,null,if,get,data,format,equals,data,format,pojo,answer,new,server,factory,bean,new,wsdlservice,factory,bean,else,object,helper,not,null,cls,cxf,constants,else,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,configure,answer,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,if,cls,null,object,helper,not,null,answer,get,endpoint,name,please,provide,endpoint,port,name,object,helper,not,null,answer,get,service,name,please,provide,service,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1280130252;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_                _                _        _        _        _        ServerFactoryBean answer = null___        if (cls == null) {_            if (!getDataFormat().equals(DataFormat.POJO)) {_                answer = new ServerFactoryBean(new WSDLServiceFactoryBean())__            } else {_                ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__            }_        } else if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        configure(answer)__        _        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        if (cls == null) {_            ObjectHelper.notNull(answer.getEndpointName(), "Please provide endpoint/port name")__            ObjectHelper.notNull(answer.getServiceName(), "Please provide service name")__        }_        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,server,factory,bean,answer,null,if,cls,null,if,get,data,format,equals,data,format,pojo,answer,new,server,factory,bean,new,wsdlservice,factory,bean,else,object,helper,not,null,cls,cxf,constants,else,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,configure,answer,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,if,cls,null,object,helper,not,null,answer,get,endpoint,name,please,provide,endpoint,port,name,object,helper,not,null,answer,get,service,name,please,provide,service,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1280224426;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_                _                _        _        _        _        ServerFactoryBean answer = null___        if (cls == null) {_            if (!getDataFormat().equals(DataFormat.POJO)) {_                answer = new ServerFactoryBean(new WSDLServiceFactoryBean())__            } else {_                ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__            }_        } else if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        configure(answer)__        _        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        if (cls == null) {_            ObjectHelper.notNull(answer.getEndpointName(), "Please provide endpoint/port name")__            ObjectHelper.notNull(answer.getServiceName(), "Please provide service name")__        }_        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,server,factory,bean,answer,null,if,cls,null,if,get,data,format,equals,data,format,pojo,answer,new,server,factory,bean,new,wsdlservice,factory,bean,else,object,helper,not,null,cls,cxf,constants,else,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,configure,answer,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,if,cls,null,object,helper,not,null,answer,get,endpoint,name,please,provide,endpoint,port,name,object,helper,not,null,answer,get,service,name,please,provide,service,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1291649338;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_                _                _        _        _        _        ServerFactoryBean answer = null___        if (cls == null) {_            if (!getDataFormat().equals(DataFormat.POJO)) {_                answer = new ServerFactoryBean(new WSDLServiceFactoryBean())__            } else {_                ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__            }_        } else if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        configure(answer)__        _        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        if (cls == null) {_            ObjectHelper.notNull(answer.getEndpointName(), "Please provide endpoint/port name")__            ObjectHelper.notNull(answer.getServiceName(), "Please provide service name")__        }_        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,server,factory,bean,answer,null,if,cls,null,if,get,data,format,equals,data,format,pojo,answer,new,server,factory,bean,new,wsdlservice,factory,bean,else,object,helper,not,null,cls,cxf,constants,else,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,configure,answer,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,if,cls,null,object,helper,not,null,answer,get,endpoint,name,please,provide,endpoint,port,name,object,helper,not,null,answer,get,service,name,please,provide,service,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1291762322;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_                _                _        _        _        _        ServerFactoryBean answer = null___        if (cls == null) {_            if (!getDataFormat().equals(DataFormat.POJO)) {_                answer = new ServerFactoryBean(new WSDLServiceFactoryBean())__            } else {_                ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__            }_        } else if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        configure(answer)__        _        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        if (cls == null) {_            ObjectHelper.notNull(answer.getEndpointName(), "Please provide endpoint/port name")__            ObjectHelper.notNull(answer.getServiceName(), "Please provide service name")__        }_        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,server,factory,bean,answer,null,if,cls,null,if,get,data,format,equals,data,format,pojo,answer,new,server,factory,bean,new,wsdlservice,factory,bean,else,object,helper,not,null,cls,cxf,constants,else,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,configure,answer,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,if,cls,null,object,helper,not,null,answer,get,endpoint,name,please,provide,endpoint,port,name,object,helper,not,null,answer,get,service,name,please,provide,service,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1294211277;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_                _                _        _        _        _        ServerFactoryBean answer = null___        if (cls == null) {_            if (!getDataFormat().equals(DataFormat.POJO)) {_                answer = new ServerFactoryBean(new WSDLServiceFactoryBean())__            } else {_                ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__            }_        } else if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        configure(answer)__        _        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        if (cls == null) {_            checkName(answer.getEndpointName(), "endpoint/port name")__            checkName(answer.getServiceName(), "service name")__        }_        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,server,factory,bean,answer,null,if,cls,null,if,get,data,format,equals,data,format,pojo,answer,new,server,factory,bean,new,wsdlservice,factory,bean,else,object,helper,not,null,cls,cxf,constants,else,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,configure,answer,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,if,cls,null,check,name,answer,get,endpoint,name,endpoint,port,name,check,name,answer,get,service,name,service,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1297969159;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_                _                _        _        _        _        ServerFactoryBean answer = null___        if (cls == null) {_            if (!getDataFormat().equals(DataFormat.POJO)) {_                answer = new ServerFactoryBean(new WSDLServiceFactoryBean())__            } else {_                ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__            }_        } else if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        configure(answer)__        _        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        if (cls == null) {_            checkName(answer.getEndpointName(), "endpoint/port name")__            checkName(answer.getServiceName(), "service name")__        }_        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,server,factory,bean,answer,null,if,cls,null,if,get,data,format,equals,data,format,pojo,answer,new,server,factory,bean,new,wsdlservice,factory,bean,else,object,helper,not,null,cls,cxf,constants,else,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,configure,answer,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,if,cls,null,check,name,answer,get,endpoint,name,endpoint,port,name,check,name,answer,get,service,name,service,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1300842159;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_                _                _        _        _        _        ServerFactoryBean answer = null___        if (cls == null) {_            if (!getDataFormat().equals(DataFormat.POJO)) {_                answer = new ServerFactoryBean(new WSDLServiceFactoryBean())__            } else {_                ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__            }_        } else if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        configure(answer)__        _        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        if (cls == null) {_            checkName(answer.getEndpointName(), "endpoint/port name")__            checkName(answer.getServiceName(), "service name")__        }_        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,server,factory,bean,answer,null,if,cls,null,if,get,data,format,equals,data,format,pojo,answer,new,server,factory,bean,new,wsdlservice,factory,bean,else,object,helper,not,null,cls,cxf,constants,else,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,configure,answer,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,if,cls,null,check,name,answer,get,endpoint,name,endpoint,port,name,check,name,answer,get,service,name,service,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1307014084;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_                _                _        _        _        _        ServerFactoryBean answer = null___        if (cls == null) {_            if (!getDataFormat().equals(DataFormat.POJO)) {_                answer = new ServerFactoryBean(new WSDLServiceFactoryBean())__            } else {_                ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__            }_        } else if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        configure(answer)__        _        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        if (cls == null) {_            checkName(answer.getEndpointName(), "endpoint/port name")__            checkName(answer.getServiceName(), "service name")__        }_        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,server,factory,bean,answer,null,if,cls,null,if,get,data,format,equals,data,format,pojo,answer,new,server,factory,bean,new,wsdlservice,factory,bean,else,object,helper,not,null,cls,cxf,constants,else,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,configure,answer,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,if,cls,null,check,name,answer,get,endpoint,name,endpoint,port,name,check,name,answer,get,service,name,service,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1308235174;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_                _                _        _        _        _        ServerFactoryBean answer = null___        if (cls == null) {_            if (!getDataFormat().equals(DataFormat.POJO)) {_                answer = new ServerFactoryBean(new WSDLServiceFactoryBean())__            } else {_                ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__            }_        } else if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        configure(answer)__        _        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        if (cls == null) {_            checkName(answer.getEndpointName(), "endpoint/port name")__            checkName(answer.getServiceName(), "service name")__        }_        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,server,factory,bean,answer,null,if,cls,null,if,get,data,format,equals,data,format,pojo,answer,new,server,factory,bean,new,wsdlservice,factory,bean,else,object,helper,not,null,cls,cxf,constants,else,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,configure,answer,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,if,cls,null,check,name,answer,get,endpoint,name,endpoint,port,name,check,name,answer,get,service,name,service,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1308788876;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_                _                _        _        _        _        ServerFactoryBean answer = null___        if (cls == null) {_            if (!getDataFormat().equals(DataFormat.POJO)) {_                answer = new ServerFactoryBean(new WSDLServiceFactoryBean())__            } else {_                ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__            }_        } else if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        configure(answer)__        _        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        if (cls == null) {_            checkName(answer.getEndpointName(), "endpoint/port name")__            checkName(answer.getServiceName(), "service name")__        }_        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,server,factory,bean,answer,null,if,cls,null,if,get,data,format,equals,data,format,pojo,answer,new,server,factory,bean,new,wsdlservice,factory,bean,else,object,helper,not,null,cls,cxf,constants,else,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,configure,answer,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,if,cls,null,check,name,answer,get,endpoint,name,endpoint,port,name,check,name,answer,get,service,name,service,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1314714706;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_                _                _        _        _        _        ServerFactoryBean answer = null___        if (cls == null) {_            if (!getDataFormat().equals(DataFormat.POJO)) {_                answer = new ServerFactoryBean(new WSDLServiceFactoryBean())__            } else {_                ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__            }_        } else if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        if (cls == null) {_            checkName(answer.getEndpointName(), "endpoint/port name")__            checkName(answer.getServiceName(), "service name")__        }_        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,server,factory,bean,answer,null,if,cls,null,if,get,data,format,equals,data,format,pojo,answer,new,server,factory,bean,new,wsdlservice,factory,bean,else,object,helper,not,null,cls,cxf,constants,else,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,if,cls,null,check,name,answer,get,endpoint,name,endpoint,port,name,check,name,answer,get,service,name,service,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1315571408;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_                _                _        _        _        _        ServerFactoryBean answer = null___        if (cls == null) {_            if (!getDataFormat().equals(DataFormat.POJO)) {_                answer = new ServerFactoryBean(new WSDLServiceFactoryBean())__            } else {_                ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__            }_        } else if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        if (cls == null) {_            checkName(answer.getEndpointName(), "endpoint/port name")__            checkName(answer.getServiceName(), "service name")__        }_        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,server,factory,bean,answer,null,if,cls,null,if,get,data,format,equals,data,format,pojo,answer,new,server,factory,bean,new,wsdlservice,factory,bean,else,object,helper,not,null,cls,cxf,constants,else,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,if,cls,null,check,name,answer,get,endpoint,name,endpoint,port,name,check,name,answer,get,service,name,service,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1316165324;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_                _                _        _        _        _        ServerFactoryBean answer = null___        if (cls == null) {_            if (!getDataFormat().equals(DataFormat.POJO)) {_                answer = new ServerFactoryBean(new WSDLServiceFactoryBean())__            } else {_                ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__            }_        } else if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        if (cls == null) {_            checkName(answer.getEndpointName(), "endpoint/port name")__            checkName(answer.getServiceName(), "service name")__        }_        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,server,factory,bean,answer,null,if,cls,null,if,get,data,format,equals,data,format,pojo,answer,new,server,factory,bean,new,wsdlservice,factory,bean,else,object,helper,not,null,cls,cxf,constants,else,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,if,cls,null,check,name,answer,get,endpoint,name,endpoint,port,name,check,name,answer,get,service,name,service,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1323117475;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_                _                _        _        _        _        ServerFactoryBean answer = null___        if (cls == null) {_            if (!getDataFormat().equals(DataFormat.POJO)) {_                answer = new ServerFactoryBean(new WSDLServiceFactoryBean())__            } else {_                ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__            }_        } else if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        if (cls == null) {_            checkName(answer.getEndpointName(), "endpoint/port name")__            checkName(answer.getServiceName(), "service name")__        }_        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,server,factory,bean,answer,null,if,cls,null,if,get,data,format,equals,data,format,pojo,answer,new,server,factory,bean,new,wsdlservice,factory,bean,else,object,helper,not,null,cls,cxf,constants,else,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,if,cls,null,check,name,answer,get,endpoint,name,endpoint,port,name,check,name,answer,get,service,name,service,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1324569391;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_                _                _        _        _        _        ServerFactoryBean answer = null___        if (cls == null) {_            if (!getDataFormat().equals(DataFormat.POJO)) {_                answer = new ServerFactoryBean(new WSDLServiceFactoryBean())__            } else {_                ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__            }_        } else if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        if (cls == null) {_            checkName(answer.getEndpointName(), "endpoint/port name")__            checkName(answer.getServiceName(), "service name")__        }_        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,server,factory,bean,answer,null,if,cls,null,if,get,data,format,equals,data,format,pojo,answer,new,server,factory,bean,new,wsdlservice,factory,bean,else,object,helper,not,null,cls,cxf,constants,else,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,if,cls,null,check,name,answer,get,endpoint,name,endpoint,port,name,check,name,answer,get,service,name,service,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1325745470;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_                _                _        _        _        _        ServerFactoryBean answer = null___        if (cls == null) {_            if (!getDataFormat().equals(DataFormat.POJO)) {_                answer = new ServerFactoryBean(new WSDLServiceFactoryBean())__            } else {_                ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__            }_        } else if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        if (cls == null) {_            checkName(answer.getEndpointName(), "endpoint/port name")__            checkName(answer.getServiceName(), "service name")__        }_        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,server,factory,bean,answer,null,if,cls,null,if,get,data,format,equals,data,format,pojo,answer,new,server,factory,bean,new,wsdlservice,factory,bean,else,object,helper,not,null,cls,cxf,constants,else,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,if,cls,null,check,name,answer,get,endpoint,name,endpoint,port,name,check,name,answer,get,service,name,service,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1325779288;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_                _                _        _        _        _        ServerFactoryBean answer = null___        if (cls == null) {_            if (!getDataFormat().equals(DataFormat.POJO)) {_                answer = new ServerFactoryBean(new WSDLServiceFactoryBean())__            } else {_                ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__            }_        } else if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        if (cls == null) {_            checkName(answer.getEndpointName(), "endpoint/port name")__            checkName(answer.getServiceName(), "service name")__        }_        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,server,factory,bean,answer,null,if,cls,null,if,get,data,format,equals,data,format,pojo,answer,new,server,factory,bean,new,wsdlservice,factory,bean,else,object,helper,not,null,cls,cxf,constants,else,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,if,cls,null,check,name,answer,get,endpoint,name,endpoint,port,name,check,name,answer,get,service,name,service,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1338993982;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_                _        _        if (getWsdlURL() == null && cls == null) {_            _            if (getDataFormat().equals(DataFormat.PAYLOAD)) {_                setServiceClass(org.apache.camel.component.cxf.DefaultPayloadProviderSEI.class.getName())__            } _            cls = getServiceClass()__        }_        _        _        _        _        ServerFactoryBean answer = null___        if (cls == null) {_            if (!getDataFormat().equals(DataFormat.POJO)) {_                answer = new ServerFactoryBean(new WSDLServiceFactoryBean())__            } else {_                ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__            }_        } else if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        if (cls == null) {_            checkName(answer.getEndpointName(), "endpoint/port name")__            checkName(answer.getServiceName(), "service name")__        }_        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,if,get,wsdl,url,null,cls,null,if,get,data,format,equals,data,format,payload,set,service,class,org,apache,camel,component,cxf,default,payload,provider,sei,class,get,name,cls,get,service,class,server,factory,bean,answer,null,if,cls,null,if,get,data,format,equals,data,format,pojo,answer,new,server,factory,bean,new,wsdlservice,factory,bean,else,object,helper,not,null,cls,cxf,constants,else,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,if,cls,null,check,name,answer,get,endpoint,name,endpoint,port,name,check,name,answer,get,service,name,service,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1389726752;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_                _        _        if (getWsdlURL() == null && cls == null) {_            _            if (getDataFormat().equals(DataFormat.PAYLOAD)) {_                setServiceClass(org.apache.camel.component.cxf.DefaultPayloadProviderSEI.class.getName())__            } _            cls = getServiceClass()__        }_        _        _        _        _        ServerFactoryBean answer = null___        if (cls == null) {_            if (!getDataFormat().equals(DataFormat.POJO)) {_                answer = new JaxWsServerFactoryBean(new WSDLServiceFactoryBean()) {_                    {_                        doInit = false__                    }_                }__                cls = Provider.class__            } else {_                ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__            }_        } else if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        if (cls == null) {_            checkName(answer.getEndpointName(), "endpoint/port name")__            checkName(answer.getServiceName(), "service name")__        }_        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,if,get,wsdl,url,null,cls,null,if,get,data,format,equals,data,format,payload,set,service,class,org,apache,camel,component,cxf,default,payload,provider,sei,class,get,name,cls,get,service,class,server,factory,bean,answer,null,if,cls,null,if,get,data,format,equals,data,format,pojo,answer,new,jax,ws,server,factory,bean,new,wsdlservice,factory,bean,do,init,false,cls,provider,class,else,object,helper,not,null,cls,cxf,constants,else,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,if,cls,null,check,name,answer,get,endpoint,name,endpoint,port,name,check,name,answer,get,service,name,service,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1405374721;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getSEIClass()_                _        _        if (getWsdlURL() == null && cls == null) {_            _            if (getDataFormat().equals(DataFormat.PAYLOAD)) {_                setServiceClass(org.apache.camel.component.cxf.DefaultPayloadProviderSEI.class.getName())__            } _            cls = getServiceClass()__        }_        _        _        _        _        ServerFactoryBean answer = null___        if (cls == null) {_            if (!getDataFormat().equals(DataFormat.POJO)) {_                answer = new JaxWsServerFactoryBean(new WSDLServiceFactoryBean()) {_                    {_                        doInit = false__                    }_                }__                cls = Provider.class__            } else {_                ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__            }_        } else if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        if (cls == null) {_            checkName(answer.getEndpointName(), "endpoint/port name")__            checkName(answer.getServiceName(), "service name")__        }_        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,seiclass,if,get,wsdl,url,null,cls,null,if,get,data,format,equals,data,format,payload,set,service,class,org,apache,camel,component,cxf,default,payload,provider,sei,class,get,name,cls,get,service,class,server,factory,bean,answer,null,if,cls,null,if,get,data,format,equals,data,format,pojo,answer,new,jax,ws,server,factory,bean,new,wsdlservice,factory,bean,do,init,false,cls,provider,class,else,object,helper,not,null,cls,cxf,constants,else,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,if,cls,null,check,name,answer,get,endpoint,name,endpoint,port,name,check,name,answer,get,service,name,service,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1533715436;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getServiceClass()_                _        _        if (getWsdlURL() == null && cls == null) {_            _            if (getDataFormat().equals(DataFormat.PAYLOAD)) {_                setServiceClass(org.apache.camel.component.cxf.DefaultPayloadProviderSEI.class.getName())__            } _            cls = getServiceClass()__        }_        _        _        _        _        ServerFactoryBean answer = null___        if (cls == null) {_            if (!getDataFormat().equals(DataFormat.POJO)) {_                answer = new JaxWsServerFactoryBean(new WSDLServiceFactoryBean())__                cls = Provider.class__            } else {_                ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__            }_        } else if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        if (cls == null) {_            checkName(answer.getEndpointName(), "endpoint/port name")__            checkName(answer.getServiceName(), "service name")__        }_        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,service,class,if,get,wsdl,url,null,cls,null,if,get,data,format,equals,data,format,payload,set,service,class,org,apache,camel,component,cxf,default,payload,provider,sei,class,get,name,cls,get,service,class,server,factory,bean,answer,null,if,cls,null,if,get,data,format,equals,data,format,pojo,answer,new,jax,ws,server,factory,bean,new,wsdlservice,factory,bean,cls,provider,class,else,object,helper,not,null,cls,cxf,constants,else,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,if,cls,null,check,name,answer,get,endpoint,name,endpoint,port,name,check,name,answer,get,service,name,service,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1537792841;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getServiceClass()_                _        _        if (getWsdlURL() == null && cls == null) {_            _            if (getDataFormat().equals(DataFormat.PAYLOAD)) {_                setServiceClass(org.apache.camel.component.cxf.DefaultPayloadProviderSEI.class.getName())__            } _            cls = getServiceClass()__        }_        _        _        _        _        ServerFactoryBean answer = null___        if (cls == null) {_            if (!getDataFormat().equals(DataFormat.POJO)) {_                answer = new JaxWsServerFactoryBean(new WSDLServiceFactoryBean())__                cls = Provider.class__            } else {_                ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__            }_        } else if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        if (cls == null) {_            checkName(answer.getEndpointName(), "endpoint/port name")__            checkName(answer.getServiceName(), "service name")__        }_        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,service,class,if,get,wsdl,url,null,cls,null,if,get,data,format,equals,data,format,payload,set,service,class,org,apache,camel,component,cxf,default,payload,provider,sei,class,get,name,cls,get,service,class,server,factory,bean,answer,null,if,cls,null,if,get,data,format,equals,data,format,pojo,answer,new,jax,ws,server,factory,bean,new,wsdlservice,factory,bean,cls,provider,class,else,object,helper,not,null,cls,cxf,constants,else,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,if,cls,null,check,name,answer,get,endpoint,name,endpoint,port,name,check,name,answer,get,service,name,service,name,return,answer
CxfSpringEndpoint -> @Override     ServerFactoryBean createServerFactoryBean() throws Exception;1540108161;Create a service factory bean;@Override_    ServerFactoryBean createServerFactoryBean() throws Exception  {_        _        _        Class<?> cls = getServiceClass()_                _        _        if (getWsdlURL() == null && cls == null) {_            _            if (getDataFormat().equals(DataFormat.PAYLOAD)) {_                setServiceClass(org.apache.camel.component.cxf.DefaultPayloadProviderSEI.class.getName())__            } _            cls = getServiceClass()__        }_        _        _        _        _        ServerFactoryBean answer = null___        if (cls == null) {_            if (!getDataFormat().equals(DataFormat.POJO)) {_                answer = new JaxWsServerFactoryBean(new WSDLServiceFactoryBean())__                cls = Provider.class__            } else {_                ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS)__            }_        } else if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {_            answer = new JaxWsServerFactoryBean()__        } else {_            answer = new ServerFactoryBean()__        }__        _        setupServerFactoryBean(answer, cls)___        _        if (answer.getServiceName() == null && getServiceLocalName() != null) {_            answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName()))__        }_        if (answer.getEndpointName() == null && getEndpointLocalName() != null) {_            answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName()))__        }__        if (cls == null) {_            checkName(answer.getEndpointName(), "endpoint/port name")__            checkName(answer.getServiceName(), "service name")__        }_        return answer__    };create,a,service,factory,bean;override,server,factory,bean,create,server,factory,bean,throws,exception,class,cls,get,service,class,if,get,wsdl,url,null,cls,null,if,get,data,format,equals,data,format,payload,set,service,class,org,apache,camel,component,cxf,default,payload,provider,sei,class,get,name,cls,get,service,class,server,factory,bean,answer,null,if,cls,null,if,get,data,format,equals,data,format,pojo,answer,new,jax,ws,server,factory,bean,new,wsdlservice,factory,bean,cls,provider,class,else,object,helper,not,null,cls,cxf,constants,else,if,cxf,endpoint,utils,has,web,service,annotation,cls,answer,new,jax,ws,server,factory,bean,else,answer,new,server,factory,bean,setup,server,factory,bean,answer,cls,if,answer,get,service,name,null,get,service,local,name,null,answer,set,service,name,new,qname,get,service,namespace,get,service,local,name,if,answer,get,endpoint,name,null,get,endpoint,local,name,null,answer,set,endpoint,name,new,qname,get,endpoint,namespace,get,endpoint,local,name,if,cls,null,check,name,answer,get,endpoint,name,endpoint,port,name,check,name,answer,get,service,name,service,name,return,answer
CxfSpringEndpoint -> private void setPropertiesBean() throws Exception;1232329721;Read properties from the CxfEndpointBean and copy them to the_properties of this class.  Note that the properties values can_be overridden by values in URI query as the DefaultComponent_will perform "setProperties" later (after the constructor).;private void setPropertiesBean() throws Exception {_        if (bean.getProperties() != null) {_            Map<String, Object> copy = new HashMap<String, Object>()__            copy.putAll(bean.getProperties())___            _            IntrospectionSupport.setProperties(getCamelContext().getTypeConverter(), _                    this, copy)_      _        }_    };read,properties,from,the,cxf,endpoint,bean,and,copy,them,to,the,properties,of,this,class,note,that,the,properties,values,can,be,overridden,by,values,in,uri,query,as,the,default,component,will,perform,set,properties,later,after,the,constructor;private,void,set,properties,bean,throws,exception,if,bean,get,properties,null,map,string,object,copy,new,hash,map,string,object,copy,put,all,bean,get,properties,introspection,support,set,properties,get,camel,context,get,type,converter,this,copy
CxfSpringEndpoint -> private void setPropertiesBean() throws Exception;1232782057;Read properties from the CxfEndpointBean and copy them to the_properties of this class.  Note that the properties values can_be overridden by values in URI query as the DefaultComponent_will perform "setProperties" later (after the constructor).;private void setPropertiesBean() throws Exception {_        if (bean.getProperties() != null) {_            Map<String, Object> copy = new HashMap<String, Object>()__            copy.putAll(bean.getProperties())___            _            IntrospectionSupport.setProperties(getCamelContext().getTypeConverter(), _                    this, copy)_      _        }_    };read,properties,from,the,cxf,endpoint,bean,and,copy,them,to,the,properties,of,this,class,note,that,the,properties,values,can,be,overridden,by,values,in,uri,query,as,the,default,component,will,perform,set,properties,later,after,the,constructor;private,void,set,properties,bean,throws,exception,if,bean,get,properties,null,map,string,object,copy,new,hash,map,string,object,copy,put,all,bean,get,properties,introspection,support,set,properties,get,camel,context,get,type,converter,this,copy
CxfSpringEndpoint -> private void setPropertiesBean() throws Exception;1232870413;Read properties from the CxfEndpointBean and copy them to the_properties of this class.  Note that the properties values can_be overridden by values in URI query as the DefaultComponent_will perform "setProperties" later (after the constructor).;private void setPropertiesBean() throws Exception {_        if (bean.getProperties() != null) {_            Map<String, Object> copy = new HashMap<String, Object>()__            copy.putAll(bean.getProperties())__            _            _            IntrospectionSupport.setProperties(getCamelContext().getTypeConverter(), _                    this, copy)_      _        }_    };read,properties,from,the,cxf,endpoint,bean,and,copy,them,to,the,properties,of,this,class,note,that,the,properties,values,can,be,overridden,by,values,in,uri,query,as,the,default,component,will,perform,set,properties,later,after,the,constructor;private,void,set,properties,bean,throws,exception,if,bean,get,properties,null,map,string,object,copy,new,hash,map,string,object,copy,put,all,bean,get,properties,introspection,support,set,properties,get,camel,context,get,type,converter,this,copy
CxfSpringEndpoint -> private void setPropertiesBean() throws Exception;1233111476;Read properties from the CxfEndpointBean and copy them to the_properties of this class.  Note that the properties values can_be overridden by values in URI query as the DefaultComponent_will perform "setProperties" later (after the constructor).;private void setPropertiesBean() throws Exception {_        if (bean.getProperties() != null) {_            Map<String, Object> copy = new HashMap<String, Object>()__            copy.putAll(bean.getProperties())__            _            _            IntrospectionSupport.setProperties(getCamelContext().getTypeConverter(), _                    this, copy)_      _        }_    };read,properties,from,the,cxf,endpoint,bean,and,copy,them,to,the,properties,of,this,class,note,that,the,properties,values,can,be,overridden,by,values,in,uri,query,as,the,default,component,will,perform,set,properties,later,after,the,constructor;private,void,set,properties,bean,throws,exception,if,bean,get,properties,null,map,string,object,copy,new,hash,map,string,object,copy,put,all,bean,get,properties,introspection,support,set,properties,get,camel,context,get,type,converter,this,copy
CxfSpringEndpoint -> private void setPropertiesBean() throws Exception;1233174028;Read properties from the CxfEndpointBean and copy them to the_properties of this class.  Note that the properties values can_be overridden by values in URI query as the DefaultComponent_will perform "setProperties" later (after the constructor).;private void setPropertiesBean() throws Exception {_        if (bean.getProperties() != null) {_            Map<String, Object> copy = new HashMap<String, Object>()__            copy.putAll(bean.getProperties())__            _            _            IntrospectionSupport.setProperties(getCamelContext().getTypeConverter(), _                    this, copy)_      _        }_    };read,properties,from,the,cxf,endpoint,bean,and,copy,them,to,the,properties,of,this,class,note,that,the,properties,values,can,be,overridden,by,values,in,uri,query,as,the,default,component,will,perform,set,properties,later,after,the,constructor;private,void,set,properties,bean,throws,exception,if,bean,get,properties,null,map,string,object,copy,new,hash,map,string,object,copy,put,all,bean,get,properties,introspection,support,set,properties,get,camel,context,get,type,converter,this,copy
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1232329721;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = ClassLoaderUtils.loadClass(getServiceClass(), getClass())__        } else {_            answer = bean.getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,class,loader,utils,load,class,get,service,class,get,class,else,answer,bean,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1232782057;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = ClassLoaderUtils.loadClass(getServiceClass(), getClass())__        } else {_            answer = bean.getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,class,loader,utils,load,class,get,service,class,get,class,else,answer,bean,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1232870413;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = ClassLoaderUtils.loadClass(getServiceClass(), getClass())__        } else {_            answer = bean.getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,class,loader,utils,load,class,get,service,class,get,class,else,answer,bean,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1233111476;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = ClassLoaderUtils.loadClass(getServiceClass(), getClass())__        } else {_            answer = bean.getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,class,loader,utils,load,class,get,service,class,get,class,else,answer,bean,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1233174028;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = ClassLoaderUtils.loadClass(getServiceClass(), getClass())__        } else {_            answer = bean.getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,class,loader,utils,load,class,get,service,class,get,class,else,answer,bean,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1236116950;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = ClassLoaderUtils.loadClass(getServiceClass(), getClass())__        } else {_            answer = bean.getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,class,loader,utils,load,class,get,service,class,get,class,else,answer,bean,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1237363453;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = ClassLoaderUtils.loadClass(getServiceClass(), getClass())__        } else {_            answer = bean.getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,class,loader,utils,load,class,get,service,class,get,class,else,answer,bean,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1237457114;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = ClassLoaderUtils.loadClass(getServiceClass(), getClass())__        } else {_            answer = bean.getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,class,loader,utils,load,class,get,service,class,get,class,else,answer,bean,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1243588852;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = ClassLoaderUtils.loadClass(getServiceClass(), getClass())__        } else {_            answer = bean.getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,class,loader,utils,load,class,get,service,class,get,class,else,answer,bean,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1244724024;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = ClassLoaderUtils.loadClass(getServiceClass(), getClass())__        } else {_            answer = bean.getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,class,loader,utils,load,class,get,service,class,get,class,else,answer,bean,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1247063627;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = ClassLoaderUtils.loadClass(getServiceClass(), getClass())__        } else {_            answer = bean.getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,class,loader,utils,load,class,get,service,class,get,class,else,answer,bean,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1256171018;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = ClassLoaderUtils.loadClass(getServiceClass(), getClass())__        } else {_            answer = bean.getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,class,loader,utils,load,class,get,service,class,get,class,else,answer,bean,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1280130252;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = ClassLoaderUtils.loadClass(getServiceClass(), getClass())__        } else {_            answer = bean.getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,class,loader,utils,load,class,get,service,class,get,class,else,answer,bean,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1280224426;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = ClassLoaderUtils.loadClass(getServiceClass(), getClass())__        } else {_            answer = bean.getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,class,loader,utils,load,class,get,service,class,get,class,else,answer,bean,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1291649338;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = ClassLoaderUtils.loadClass(getServiceClass(), getClass())__        } else {_            answer = bean.getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,class,loader,utils,load,class,get,service,class,get,class,else,answer,bean,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1291762322;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = ClassLoaderUtils.loadClass(getServiceClass(), getClass())__        } else {_            answer = bean.getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,class,loader,utils,load,class,get,service,class,get,class,else,answer,bean,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1294211277;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = ClassLoaderUtils.loadClass(getServiceClass(), getClass())__        } else {_            answer = bean.getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,class,loader,utils,load,class,get,service,class,get,class,else,answer,bean,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1297969159;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = ClassLoaderUtils.loadClass(getServiceClass(), getClass())__        } else {_            answer = bean.getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,class,loader,utils,load,class,get,service,class,get,class,else,answer,bean,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1300842159;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = ClassLoaderUtils.loadClass(getServiceClass(), getClass())__        } else {_            answer = bean.getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,class,loader,utils,load,class,get,service,class,get,class,else,answer,bean,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1307014084;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = ClassLoaderUtils.loadClass(getServiceClass(), getClass())__        } else {_            answer = bean.getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,class,loader,utils,load,class,get,service,class,get,class,else,answer,bean,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1308235174;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = ClassLoaderUtils.loadClass(getServiceClass(), getClass())__        } else {_            answer = bean.getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,class,loader,utils,load,class,get,service,class,get,class,else,answer,bean,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1308788876;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1314714706;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1315571408;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1316165324;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1323117475;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1324569391;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1325745470;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1325779288;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1338993982;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1389726752;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,get,service,class,return,answer
CxfSpringEndpoint -> private Class<?> getSEIClass() throws ClassNotFoundException;1405374721;A help to get the service class.  The serviceClass classname in URI_query takes precedence over the serviceClass in CxfEndpointBean.;private Class<?> getSEIClass() throws ClassNotFoundException {_        _        _        Class<?> answer = null__        if (getServiceClass() != null) {_            _            answer = getServiceClass()__        }_        return answer__    };a,help,to,get,the,service,class,the,service,class,classname,in,uri,query,takes,precedence,over,the,service,class,in,cxf,endpoint,bean;private,class,get,seiclass,throws,class,not,found,exception,class,answer,null,if,get,service,class,null,answer,get,service,class,return,answer
