commented;modifiers;parameterAmount;loc;comment;code
true;;0;57;/**  * Create a CXF Client  */ ;// Package private methods // ------------------------------------------------------------------------- /**  * Create a CXF Client  */ @Override Client createClient() throws Exception {     // get service class     Class<?> cls = getServiceClass().     if (getDataFormat().equals(DataFormat.POJO)) {         ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS).     }     if (getWsdlURL() == null && cls == null) {         // no WSDL and serviceClass specified, set our default serviceClass         setServiceClass(org.apache.camel.component.cxf.DefaultSEI.class.getName()).         setDefaultOperationNamespace(CxfConstants.DISPATCH_NAMESPACE).         setDefaultOperationName(CxfConstants.DISPATCH_DEFAULT_OPERATION_NAMESPACE).         if (getDataFormat().equals(DataFormat.PAYLOAD)) {             setSkipPayloadMessagePartCheck(true).         }         cls = getServiceClass().     }     ClientFactoryBean factoryBean.     if (cls != null) {         // create client factory bean         factoryBean = createClientFactoryBean(cls).     } else {         factoryBean = createClientFactoryBean().     }     // setup client factory bean     setupClientFactoryBean(factoryBean, cls).     // fill in values that have not been filled.     QName serviceQName = null.     try {         serviceQName = factoryBean.getServiceName().     } catch (IllegalStateException e) {     // It throws IllegalStateException if serviceName has not been set.     }     if (serviceQName == null && getServiceLocalName() != null) {         factoryBean.setServiceName(new QName(getServiceNamespace(), getServiceLocalName())).     }     if (factoryBean.getEndpointName() == null && getEndpointLocalName() != null) {         factoryBean.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName())).     }     if (cls == null) {         checkName(factoryBean.getEndpointName(), "endpoint/port name").         checkName(factoryBean.getServiceName(), "service name").     }     Client client = factoryBean.create().     // setup the handlers     setupHandlers(factoryBean, client).     return client. }
true;;0;49;/**  * Create a service factory bean  */ ;/**  * Create a service factory bean  */ @Override ServerFactoryBean createServerFactoryBean() throws Exception {     // get service class     Class<?> cls = getServiceClass().     if (getWsdlURL() == null && cls == null) {         // no WSDL and serviceClass specified, set our default serviceClass         if (getDataFormat().equals(DataFormat.PAYLOAD)) {             setServiceClass(org.apache.camel.component.cxf.DefaultPayloadProviderSEI.class.getName()).         }         cls = getServiceClass().     }     // create server factory bean     // Shouldn't use CxfEndpointUtils.getServerFactoryBean(cls) as it is for     // CxfSoapComponent     ServerFactoryBean answer = null.     if (cls == null) {         if (!getDataFormat().equals(DataFormat.POJO)) {             answer = new JaxWsServerFactoryBean(new WSDLServiceFactoryBean()).             cls = Provider.class.         } else {             ObjectHelper.notNull(cls, CxfConstants.SERVICE_CLASS).         }     } else if (CxfEndpointUtils.hasWebServiceAnnotation(cls)) {         answer = new JaxWsServerFactoryBean().     } else {         answer = new ServerFactoryBean().     }     // setup server factory bean     setupServerFactoryBean(answer, cls).     // fill in values that have not been filled.     if (answer.getServiceName() == null && getServiceLocalName() != null) {         answer.setServiceName(new QName(getServiceNamespace(), getServiceLocalName())).     }     if (answer.getEndpointName() == null && getEndpointLocalName() != null) {         answer.setEndpointName(new QName(getEndpointNamespace(), getEndpointLocalName())).     }     if (cls == null) {         checkName(answer.getEndpointName(), "endpoint/port name").         checkName(answer.getServiceName(), "service name").     }     return answer. }
true;public;0;3;// ------------------------------------------------------------------------- ;// Properties // ------------------------------------------------------------------------- public String getBeanId() {     return beanId. }
true;public;1;3;// this property will be set by spring ;// this property will be set by spring public void setBeanId(String id) {     this.beanId = id. }
false;public;1;8;;public void setServiceNamespace(String serviceNamespace) {     QName qn = getServiceName().     if (qn == null) {         setServiceName(new QName(serviceNamespace, "local")).     } else {         setServiceName(new QName(serviceNamespace, qn.getLocalPart())).     } }
false;public;0;7;;public String getServiceNamespace() {     QName qn = getServiceName().     if (qn == null) {         return null.     }     return qn.getNamespaceURI(). }
false;public;1;8;;public void setServiceLocalName(String serviceLocalName) {     QName qn = getServiceName().     if (qn == null) {         setServiceName(new QName("", serviceLocalName)).     } else {         setServiceName(new QName(qn.getNamespaceURI(), serviceLocalName)).     } }
false;public;0;7;;public String getServiceLocalName() {     QName qn = getServiceName().     if (qn == null) {         return null.     }     return qn.getLocalPart(). }
false;public;0;7;;public String getEndpointLocalName() {     QName qn = getPortName().     if (qn == null) {         return null.     }     return qn.getLocalPart(). }
false;public;1;8;;public void setEndpointLocalName(String endpointLocalName) {     QName qn = getPortName().     if (qn == null) {         setPortName(new QName("", endpointLocalName)).     } else {         setPortName(new QName(qn.getNamespaceURI(), endpointLocalName)).     } }
false;public;1;8;;public void setEndpointNamespace(String endpointNamespace) {     QName qn = getPortName().     if (qn == null) {         setPortName(new QName(endpointNamespace, "local")).     } else {         setPortName(new QName(endpointNamespace, qn.getLocalPart())).     } }
false;public;0;7;;public String getEndpointNamespace() {     QName qn = getPortName().     if (qn == null) {         return null.     }     return qn.getNamespaceURI(). }
false;public;1;8;;public void setApplicationContext(ApplicationContext ctx) throws BeansException {     applicationContext = ctx.     if (bus == null) {         createBus = true.         bus = BusWiringBeanFactoryPostProcessor.addDefaultBus(ctx).     } }
false;public;0;3;;public ApplicationContext getApplicationContext() {     return applicationContext. }
