# id;timestamp;commentText;codeText;commentWords;codeWords
CxfPayload -> public List<Element> getBody();1318820680;Get the body as a List of DOM elements._This will cause the Body to be fully read and parsed._@return;public List<Element> getBody() {_        List<Element> els = new ArrayList<Element>()__        for (int x = 0_ x < body.size()_ x++) {_            Source s = body.get(x)__            try {_                Element el = StaxUtils.read(s).getDocumentElement()__                addNamespace(el, nsMap)__                els.add(el)__                body.set(x, new DOMSource(el))__            } catch (Exception ex) {_                throw new RuntimeCamelException("Problem converting content to Element", ex)__            }_        }_        return els__    };get,the,body,as,a,list,of,dom,elements,this,will,cause,the,body,to,be,fully,read,and,parsed,return;public,list,element,get,body,list,element,els,new,array,list,element,for,int,x,0,x,body,size,x,source,s,body,get,x,try,element,el,stax,utils,read,s,get,document,element,add,namespace,el,ns,map,els,add,el,body,set,x,new,domsource,el,catch,exception,ex,throw,new,runtime,camel,exception,problem,converting,content,to,element,ex,return,els
CxfPayload -> public List<Element> getBody();1318822133;Get the body as a List of DOM elements._This will cause the Body to be fully read and parsed._@return;public List<Element> getBody() {_        return new AbstractList<Element>() {_            public boolean add(Element e) {_                return body.add(new DOMSource(e))__            }__            public Element set(int index, Element element) {_                Source s = body.set(index, new DOMSource(element))__                try {_                    return StaxUtils.read(s).getDocumentElement()__                } catch (XMLStreamException e) {_                    throw new RuntimeCamelException("Problem converting content to Element", e)__                }_            }__            public void add(int index, Element element) {_                body.add(index, new DOMSource(element))__            }__            public Element remove(int index) {_                Source s = body.remove(index)__                try {_                    return StaxUtils.read(s).getDocumentElement()__                } catch (XMLStreamException e) {_                    throw new RuntimeCamelException("Problem converting content to Element", e)__                }_            }__            public Element get(int index) {_                Source s = body.get(index)__                try {_                    Element el = StaxUtils.read(s).getDocumentElement()__                    addNamespace(el, nsMap)__                    body.set(index, new DOMSource(el))__                    return el__                } catch (Exception ex) {_                    throw new RuntimeCamelException("Problem converting content to Element", ex)__                }_            }__            public int size() {_                return body.size()__            }_        }__    };get,the,body,as,a,list,of,dom,elements,this,will,cause,the,body,to,be,fully,read,and,parsed,return;public,list,element,get,body,return,new,abstract,list,element,public,boolean,add,element,e,return,body,add,new,domsource,e,public,element,set,int,index,element,element,source,s,body,set,index,new,domsource,element,try,return,stax,utils,read,s,get,document,element,catch,xmlstream,exception,e,throw,new,runtime,camel,exception,problem,converting,content,to,element,e,public,void,add,int,index,element,element,body,add,index,new,domsource,element,public,element,remove,int,index,source,s,body,remove,index,try,return,stax,utils,read,s,get,document,element,catch,xmlstream,exception,e,throw,new,runtime,camel,exception,problem,converting,content,to,element,e,public,element,get,int,index,source,s,body,get,index,try,element,el,stax,utils,read,s,get,document,element,add,namespace,el,ns,map,body,set,index,new,domsource,el,return,el,catch,exception,ex,throw,new,runtime,camel,exception,problem,converting,content,to,element,ex,public,int,size,return,body,size
CxfPayload -> public List<Element> getBody();1318873084;Get the body as a List of DOM elements._This will cause the Body to be fully read and parsed._@return;public List<Element> getBody() {_        return new AbstractList<Element>() {_            public boolean add(Element e) {_                return body.add(new DOMSource(e))__            }__            public Element set(int index, Element element) {_                Source s = body.set(index, new DOMSource(element))__                try {_                    return StaxUtils.read(s).getDocumentElement()__                } catch (XMLStreamException e) {_                    throw new RuntimeCamelException("Problem converting content to Element", e)__                }_            }__            public void add(int index, Element element) {_                body.add(index, new DOMSource(element))__            }__            public Element remove(int index) {_                Source s = body.remove(index)__                try {_                    return StaxUtils.read(s).getDocumentElement()__                } catch (XMLStreamException e) {_                    throw new RuntimeCamelException("Problem converting content to Element", e)__                }_            }__            public Element get(int index) {_                Source s = body.get(index)__                try {_                    Element el = StaxUtils.read(s).getDocumentElement()__                    addNamespace(el, nsMap)__                    body.set(index, new DOMSource(el))__                    return el__                } catch (Exception ex) {_                    throw new RuntimeCamelException("Problem converting content to Element", ex)__                }_            }__            public int size() {_                return body.size()__            }_        }__    };get,the,body,as,a,list,of,dom,elements,this,will,cause,the,body,to,be,fully,read,and,parsed,return;public,list,element,get,body,return,new,abstract,list,element,public,boolean,add,element,e,return,body,add,new,domsource,e,public,element,set,int,index,element,element,source,s,body,set,index,new,domsource,element,try,return,stax,utils,read,s,get,document,element,catch,xmlstream,exception,e,throw,new,runtime,camel,exception,problem,converting,content,to,element,e,public,void,add,int,index,element,element,body,add,index,new,domsource,element,public,element,remove,int,index,source,s,body,remove,index,try,return,stax,utils,read,s,get,document,element,catch,xmlstream,exception,e,throw,new,runtime,camel,exception,problem,converting,content,to,element,e,public,element,get,int,index,source,s,body,get,index,try,element,el,stax,utils,read,s,get,document,element,add,namespace,el,ns,map,body,set,index,new,domsource,el,return,el,catch,exception,ex,throw,new,runtime,camel,exception,problem,converting,content,to,element,ex,public,int,size,return,body,size
CxfPayload -> public List<Element> getBody();1324569391;Get the body as a List of DOM elements._This will cause the Body to be fully read and parsed._@return;public List<Element> getBody() {_        return new AbstractList<Element>() {_            public boolean add(Element e) {_                return body.add(new DOMSource(e))__            }__            public Element set(int index, Element element) {_                Source s = body.set(index, new DOMSource(element))__                try {_                    return StaxUtils.read(s).getDocumentElement()__                } catch (XMLStreamException e) {_                    throw new RuntimeCamelException("Problem converting content to Element", e)__                }_            }__            public void add(int index, Element element) {_                body.add(index, new DOMSource(element))__            }__            public Element remove(int index) {_                Source s = body.remove(index)__                try {_                    return StaxUtils.read(s).getDocumentElement()__                } catch (XMLStreamException e) {_                    throw new RuntimeCamelException("Problem converting content to Element", e)__                }_            }__            public Element get(int index) {_                Source s = body.get(index)__                try {_                    Element el = StaxUtils.read(s).getDocumentElement()__                    addNamespace(el, nsMap)__                    body.set(index, new DOMSource(el))__                    return el__                } catch (Exception ex) {_                    throw new RuntimeCamelException("Problem converting content to Element", ex)__                }_            }__            public int size() {_                return body.size()__            }_        }__    };get,the,body,as,a,list,of,dom,elements,this,will,cause,the,body,to,be,fully,read,and,parsed,return;public,list,element,get,body,return,new,abstract,list,element,public,boolean,add,element,e,return,body,add,new,domsource,e,public,element,set,int,index,element,element,source,s,body,set,index,new,domsource,element,try,return,stax,utils,read,s,get,document,element,catch,xmlstream,exception,e,throw,new,runtime,camel,exception,problem,converting,content,to,element,e,public,void,add,int,index,element,element,body,add,index,new,domsource,element,public,element,remove,int,index,source,s,body,remove,index,try,return,stax,utils,read,s,get,document,element,catch,xmlstream,exception,e,throw,new,runtime,camel,exception,problem,converting,content,to,element,e,public,element,get,int,index,source,s,body,get,index,try,element,el,stax,utils,read,s,get,document,element,add,namespace,el,ns,map,body,set,index,new,domsource,el,return,el,catch,exception,ex,throw,new,runtime,camel,exception,problem,converting,content,to,element,ex,public,int,size,return,body,size
CxfPayload -> public List<Element> getBody();1345733973;Get the body as a List of DOM elements._This will cause the Body to be fully read and parsed._@return;public List<Element> getBody() {_        return new AbstractList<Element>() {_            public boolean add(Element e) {_                return body.add(new DOMSource(e))__            }__            public Element set(int index, Element element) {_                Source s = body.set(index, new DOMSource(element))__                try {_                    return StaxUtils.read(s).getDocumentElement()__                } catch (XMLStreamException e) {_                    throw new RuntimeCamelException("Problem converting content to Element", e)__                }_            }__            public void add(int index, Element element) {_                body.add(index, new DOMSource(element))__            }__            public Element remove(int index) {_                Source s = body.remove(index)__                try {_                    return StaxUtils.read(s).getDocumentElement()__                } catch (XMLStreamException e) {_                    throw new RuntimeCamelException("Problem converting content to Element", e)__                }_            }__            public Element get(int index) {_                Source s = body.get(index)__                try {_                    Element el = StaxUtils.read(s).getDocumentElement()__                    addNamespace(el, nsMap)__                    body.set(index, new DOMSource(el))__                    return el__                } catch (Exception ex) {_                    throw new RuntimeCamelException("Problem converting content to Element", ex)__                }_            }__            public int size() {_                return body.size()__            }_        }__    };get,the,body,as,a,list,of,dom,elements,this,will,cause,the,body,to,be,fully,read,and,parsed,return;public,list,element,get,body,return,new,abstract,list,element,public,boolean,add,element,e,return,body,add,new,domsource,e,public,element,set,int,index,element,element,source,s,body,set,index,new,domsource,element,try,return,stax,utils,read,s,get,document,element,catch,xmlstream,exception,e,throw,new,runtime,camel,exception,problem,converting,content,to,element,e,public,void,add,int,index,element,element,body,add,index,new,domsource,element,public,element,remove,int,index,source,s,body,remove,index,try,return,stax,utils,read,s,get,document,element,catch,xmlstream,exception,e,throw,new,runtime,camel,exception,problem,converting,content,to,element,e,public,element,get,int,index,source,s,body,get,index,try,element,el,stax,utils,read,s,get,document,element,add,namespace,el,ns,map,body,set,index,new,domsource,el,return,el,catch,exception,ex,throw,new,runtime,camel,exception,problem,converting,content,to,element,ex,public,int,size,return,body,size
CxfPayload -> public List<Element> getBody();1371728896;Get the body as a List of DOM elements._This will cause the Body to be fully read and parsed._@return;public List<Element> getBody() {_        return new AbstractList<Element>() {_            public boolean add(Element e) {_                return body.add(new DOMSource(e))__            }__            public Element set(int index, Element element) {_                Source s = body.set(index, new DOMSource(element))__                try {_                    return StaxUtils.read(s).getDocumentElement()__                } catch (XMLStreamException e) {_                    throw new RuntimeCamelException("Problem converting content to Element", e)__                }_            }__            public void add(int index, Element element) {_                body.add(index, new DOMSource(element))__            }__            public Element remove(int index) {_                Source s = body.remove(index)__                try {_                    return StaxUtils.read(s).getDocumentElement()__                } catch (XMLStreamException e) {_                    throw new RuntimeCamelException("Problem converting content to Element", e)__                }_            }__            public Element get(int index) {_                Source s = body.get(index)__                try {_                    Element el = StaxUtils.read(s).getDocumentElement()__                    addNamespace(el, nsMap)__                    body.set(index, new DOMSource(el))__                    return el__                } catch (Exception ex) {_                    throw new RuntimeCamelException("Problem converting content to Element", ex)__                }_            }__            public int size() {_                return body.size()__            }_        }__    };get,the,body,as,a,list,of,dom,elements,this,will,cause,the,body,to,be,fully,read,and,parsed,return;public,list,element,get,body,return,new,abstract,list,element,public,boolean,add,element,e,return,body,add,new,domsource,e,public,element,set,int,index,element,element,source,s,body,set,index,new,domsource,element,try,return,stax,utils,read,s,get,document,element,catch,xmlstream,exception,e,throw,new,runtime,camel,exception,problem,converting,content,to,element,e,public,void,add,int,index,element,element,body,add,index,new,domsource,element,public,element,remove,int,index,source,s,body,remove,index,try,return,stax,utils,read,s,get,document,element,catch,xmlstream,exception,e,throw,new,runtime,camel,exception,problem,converting,content,to,element,e,public,element,get,int,index,source,s,body,get,index,try,element,el,stax,utils,read,s,get,document,element,add,namespace,el,ns,map,body,set,index,new,domsource,el,return,el,catch,exception,ex,throw,new,runtime,camel,exception,problem,converting,content,to,element,ex,public,int,size,return,body,size
CxfPayload -> public List<Element> getBody();1415211488;Get the body as a List of DOM elements._This will cause the Body to be fully read and parsed._@return;public List<Element> getBody() {_        return new AbstractList<Element>() {_            public boolean add(Element e) {_                return body.add(new DOMSource(e))__            }__            public Element set(int index, Element element) {_                Source s = body.set(index, new DOMSource(element))__                try {_                    return StaxUtils.read(s).getDocumentElement()__                } catch (XMLStreamException e) {_                    throw new RuntimeCamelException("Problem converting content to Element", e)__                }_            }__            public void add(int index, Element element) {_                body.add(index, new DOMSource(element))__            }__            public Element remove(int index) {_                Source s = body.remove(index)__                try {_                    return StaxUtils.read(s).getDocumentElement()__                } catch (XMLStreamException e) {_                    throw new RuntimeCamelException("Problem converting content to Element", e)__                }_            }__            public Element get(int index) {_                Source s = body.get(index)__                try {_                    Element el = StaxUtils.read(s).getDocumentElement()__                    addNamespace(el, nsMap)__                    body.set(index, new DOMSource(el))__                    return el__                } catch (Exception ex) {_                    throw new RuntimeCamelException("Problem converting content to Element", ex)__                }_            }__            public int size() {_                return body.size()__            }_        }__    };get,the,body,as,a,list,of,dom,elements,this,will,cause,the,body,to,be,fully,read,and,parsed,return;public,list,element,get,body,return,new,abstract,list,element,public,boolean,add,element,e,return,body,add,new,domsource,e,public,element,set,int,index,element,element,source,s,body,set,index,new,domsource,element,try,return,stax,utils,read,s,get,document,element,catch,xmlstream,exception,e,throw,new,runtime,camel,exception,problem,converting,content,to,element,e,public,void,add,int,index,element,element,body,add,index,new,domsource,element,public,element,remove,int,index,source,s,body,remove,index,try,return,stax,utils,read,s,get,document,element,catch,xmlstream,exception,e,throw,new,runtime,camel,exception,problem,converting,content,to,element,e,public,element,get,int,index,source,s,body,get,index,try,element,el,stax,utils,read,s,get,document,element,add,namespace,el,ns,map,body,set,index,new,domsource,el,return,el,catch,exception,ex,throw,new,runtime,camel,exception,problem,converting,content,to,element,ex,public,int,size,return,body,size
CxfPayload -> public List<Element> getBody();1423054622;Get the body as a List of DOM elements._This will cause the Body to be fully read and parsed._@return;public List<Element> getBody() {_        return new AbstractList<Element>() {_            public boolean add(Element e) {_                return body.add(new DOMSource(e))__            }__            public Element set(int index, Element element) {_                Source s = body.set(index, new DOMSource(element))__                try {_                    return StaxUtils.read(s).getDocumentElement()__                } catch (XMLStreamException e) {_                    throw new RuntimeCamelException("Problem converting content to Element", e)__                }_            }__            public void add(int index, Element element) {_                body.add(index, new DOMSource(element))__            }__            public Element remove(int index) {_                Source s = body.remove(index)__                try {_                    return StaxUtils.read(s).getDocumentElement()__                } catch (XMLStreamException e) {_                    throw new RuntimeCamelException("Problem converting content to Element", e)__                }_            }__            public Element get(int index) {_                Source s = body.get(index)__                try {_                    Element el = StaxUtils.read(s).getDocumentElement()__                    addNamespace(el, nsMap)__                    body.set(index, new DOMSource(el))__                    return el__                } catch (Exception ex) {_                    throw new RuntimeCamelException("Problem converting content to Element", ex)__                }_            }__            public int size() {_                return body.size()__            }_        }__    };get,the,body,as,a,list,of,dom,elements,this,will,cause,the,body,to,be,fully,read,and,parsed,return;public,list,element,get,body,return,new,abstract,list,element,public,boolean,add,element,e,return,body,add,new,domsource,e,public,element,set,int,index,element,element,source,s,body,set,index,new,domsource,element,try,return,stax,utils,read,s,get,document,element,catch,xmlstream,exception,e,throw,new,runtime,camel,exception,problem,converting,content,to,element,e,public,void,add,int,index,element,element,body,add,index,new,domsource,element,public,element,remove,int,index,source,s,body,remove,index,try,return,stax,utils,read,s,get,document,element,catch,xmlstream,exception,e,throw,new,runtime,camel,exception,problem,converting,content,to,element,e,public,element,get,int,index,source,s,body,get,index,try,element,el,stax,utils,read,s,get,document,element,add,namespace,el,ns,map,body,set,index,new,domsource,el,return,el,catch,exception,ex,throw,new,runtime,camel,exception,problem,converting,content,to,element,ex,public,int,size,return,body,size
CxfPayload -> public List<Element> getBody();1428568260;Get the body as a List of DOM elements._This will cause the Body to be fully read and parsed._@return;public List<Element> getBody() {_        return new AbstractList<Element>() {_            public boolean add(Element e) {_                return body.add(new DOMSource(e))__            }__            public Element set(int index, Element element) {_                Source s = body.set(index, new DOMSource(element))__                try {_                    return StaxUtils.read(s).getDocumentElement()__                } catch (XMLStreamException e) {_                    throw new RuntimeCamelException("Problem converting content to Element", e)__                }_            }__            public void add(int index, Element element) {_                body.add(index, new DOMSource(element))__            }__            public Element remove(int index) {_                Source s = body.remove(index)__                try {_                    return StaxUtils.read(s).getDocumentElement()__                } catch (XMLStreamException e) {_                    throw new RuntimeCamelException("Problem converting content to Element", e)__                }_            }__            public Element get(int index) {_                Source s = body.get(index)__                try {_                    Element el = StaxUtils.read(s).getDocumentElement()__                    addNamespace(el, nsMap)__                    body.set(index, new DOMSource(el))__                    return el__                } catch (Exception ex) {_                    throw new RuntimeCamelException("Problem converting content to Element", ex)__                }_            }__            public int size() {_                return body.size()__            }_        }__    };get,the,body,as,a,list,of,dom,elements,this,will,cause,the,body,to,be,fully,read,and,parsed,return;public,list,element,get,body,return,new,abstract,list,element,public,boolean,add,element,e,return,body,add,new,domsource,e,public,element,set,int,index,element,element,source,s,body,set,index,new,domsource,element,try,return,stax,utils,read,s,get,document,element,catch,xmlstream,exception,e,throw,new,runtime,camel,exception,problem,converting,content,to,element,e,public,void,add,int,index,element,element,body,add,index,new,domsource,element,public,element,remove,int,index,source,s,body,remove,index,try,return,stax,utils,read,s,get,document,element,catch,xmlstream,exception,e,throw,new,runtime,camel,exception,problem,converting,content,to,element,e,public,element,get,int,index,source,s,body,get,index,try,element,el,stax,utils,read,s,get,document,element,add,namespace,el,ns,map,body,set,index,new,domsource,el,return,el,catch,exception,ex,throw,new,runtime,camel,exception,problem,converting,content,to,element,ex,public,int,size,return,body,size
CxfPayload -> public List<Element> getBody();1523968798;Get the body as a List of DOM elements._This will cause the Body to be fully read and parsed._@return;public List<Element> getBody() {_        return new AbstractList<Element>() {_            public boolean add(Element e) {_                return body.add(new DOMSource(e))__            }__            public Element set(int index, Element element) {_                Source s = body.set(index, new DOMSource(element))__                try {_                    return StaxUtils.read(s).getDocumentElement()__                } catch (XMLStreamException e) {_                    throw new RuntimeCamelException("Problem converting content to Element", e)__                }_            }__            public void add(int index, Element element) {_                body.add(index, new DOMSource(element))__            }__            public Element remove(int index) {_                Source s = body.remove(index)__                try {_                    return StaxUtils.read(s).getDocumentElement()__                } catch (XMLStreamException e) {_                    throw new RuntimeCamelException("Problem converting content to Element", e)__                }_            }__            public Element get(int index) {_                Source s = body.get(index)__                try {_                    Element el = StaxUtils.read(s).getDocumentElement()__                    addNamespace(el, nsMap)__                    body.set(index, new DOMSource(el))__                    return el__                } catch (Exception ex) {_                    throw new RuntimeCamelException("Problem converting content to Element", ex)__                }_            }__            public int size() {_                return body.size()__            }_        }__    };get,the,body,as,a,list,of,dom,elements,this,will,cause,the,body,to,be,fully,read,and,parsed,return;public,list,element,get,body,return,new,abstract,list,element,public,boolean,add,element,e,return,body,add,new,domsource,e,public,element,set,int,index,element,element,source,s,body,set,index,new,domsource,element,try,return,stax,utils,read,s,get,document,element,catch,xmlstream,exception,e,throw,new,runtime,camel,exception,problem,converting,content,to,element,e,public,void,add,int,index,element,element,body,add,index,new,domsource,element,public,element,remove,int,index,source,s,body,remove,index,try,return,stax,utils,read,s,get,document,element,catch,xmlstream,exception,e,throw,new,runtime,camel,exception,problem,converting,content,to,element,e,public,element,get,int,index,source,s,body,get,index,try,element,el,stax,utils,read,s,get,document,element,add,namespace,el,ns,map,body,set,index,new,domsource,el,return,el,catch,exception,ex,throw,new,runtime,camel,exception,problem,converting,content,to,element,ex,public,int,size,return,body,size
CxfPayload -> public List<Element> getBody();1540108161;Get the body as a List of DOM elements._This will cause the Body to be fully read and parsed._@return;public List<Element> getBody() {_        return new AbstractList<Element>() {_            public boolean add(Element e) {_                return body.add(new DOMSource(e))__            }__            public Element set(int index, Element element) {_                Source s = body.set(index, new DOMSource(element))__                try {_                    return StaxUtils.read(s).getDocumentElement()__                } catch (XMLStreamException e) {_                    throw new RuntimeCamelException("Problem converting content to Element", e)__                }_            }__            public void add(int index, Element element) {_                body.add(index, new DOMSource(element))__            }__            public Element remove(int index) {_                Source s = body.remove(index)__                try {_                    return StaxUtils.read(s).getDocumentElement()__                } catch (XMLStreamException e) {_                    throw new RuntimeCamelException("Problem converting content to Element", e)__                }_            }__            public Element get(int index) {_                Source s = body.get(index)__                try {_                    Element el = StaxUtils.read(s).getDocumentElement()__                    addNamespace(el, nsMap)__                    body.set(index, new DOMSource(el))__                    return el__                } catch (Exception ex) {_                    throw new RuntimeCamelException("Problem converting content to Element", ex)__                }_            }__            public int size() {_                return body.size()__            }_        }__    };get,the,body,as,a,list,of,dom,elements,this,will,cause,the,body,to,be,fully,read,and,parsed,return;public,list,element,get,body,return,new,abstract,list,element,public,boolean,add,element,e,return,body,add,new,domsource,e,public,element,set,int,index,element,element,source,s,body,set,index,new,domsource,element,try,return,stax,utils,read,s,get,document,element,catch,xmlstream,exception,e,throw,new,runtime,camel,exception,problem,converting,content,to,element,e,public,void,add,int,index,element,element,body,add,index,new,domsource,element,public,element,remove,int,index,source,s,body,remove,index,try,return,stax,utils,read,s,get,document,element,catch,xmlstream,exception,e,throw,new,runtime,camel,exception,problem,converting,content,to,element,e,public,element,get,int,index,source,s,body,get,index,try,element,el,stax,utils,read,s,get,document,element,add,namespace,el,ns,map,body,set,index,new,domsource,el,return,el,catch,exception,ex,throw,new,runtime,camel,exception,problem,converting,content,to,element,ex,public,int,size,return,body,size
CxfPayload -> public String toString();1318873084;Returns the contents as a String_Important notes:_1) This requires the message to be fully loaded breaking the streaming_2) For large messages, the result can be a VERY large String and require_large amounts of memory.;public String toString() {_        XmlConverter converter = new XmlConverter()__        StringBuilder buf = new StringBuilder()__        buf.append(getClass().getName())__        buf.append(" headers: " + headers)__        _        if (body == null) {_            buf.append("body: " + body)__        } else {_            buf.append("body: [ ")__            for (Element src : getBody()) {_                String elementString = ""__                try {_                    elementString = converter.toString(src, null)__                } catch (TransformerException e) {_                    elementString = src.toString()__                }_                buf.append("[" + elementString + "]")__            }_            buf.append("]")__        }_        return buf.toString()__    };returns,the,contents,as,a,string,important,notes,1,this,requires,the,message,to,be,fully,loaded,breaking,the,streaming,2,for,large,messages,the,result,can,be,a,very,large,string,and,require,large,amounts,of,memory;public,string,to,string,xml,converter,converter,new,xml,converter,string,builder,buf,new,string,builder,buf,append,get,class,get,name,buf,append,headers,headers,if,body,null,buf,append,body,body,else,buf,append,body,for,element,src,get,body,string,element,string,try,element,string,converter,to,string,src,null,catch,transformer,exception,e,element,string,src,to,string,buf,append,element,string,buf,append,return,buf,to,string
CxfPayload -> public String toString();1324569391;Returns the contents as a String_Important notes:_1) This requires the message to be fully loaded breaking the streaming_2) For large messages, the result can be a VERY large String and require_large amounts of memory.;public String toString() {_        XmlConverter converter = new XmlConverter()__        StringBuilder buf = new StringBuilder()__        buf.append(getClass().getName())__        buf.append(" headers: " + headers)__        _        if (body == null) {_            buf.append("body: " + body)__        } else {_            buf.append("body: [ ")__            for (Element src : getBody()) {_                String elementString = ""__                try {_                    elementString = converter.toString(src, null)__                } catch (TransformerException e) {_                    elementString = src.toString()__                }_                buf.append("[" + elementString + "]")__            }_            buf.append("]")__        }_        return buf.toString()__    };returns,the,contents,as,a,string,important,notes,1,this,requires,the,message,to,be,fully,loaded,breaking,the,streaming,2,for,large,messages,the,result,can,be,a,very,large,string,and,require,large,amounts,of,memory;public,string,to,string,xml,converter,converter,new,xml,converter,string,builder,buf,new,string,builder,buf,append,get,class,get,name,buf,append,headers,headers,if,body,null,buf,append,body,body,else,buf,append,body,for,element,src,get,body,string,element,string,try,element,string,converter,to,string,src,null,catch,transformer,exception,e,element,string,src,to,string,buf,append,element,string,buf,append,return,buf,to,string
CxfPayload -> public String toString();1345733973;Returns the contents as a String_Important notes:_1) This requires the message to be fully loaded breaking the streaming_2) For large messages, the result can be a VERY large String and require_large amounts of memory.;public String toString() {_        StringBuilder buf = new StringBuilder()__        buf.append(getClass().getName())__        buf.append(" headers: " + headers)__        _        if (body == null) {_            buf.append("body: " + body)__        } else {_            buf.append("body: [ ")__            for (Element src : getBody()) {_                String elementString__                try {_                    elementString = StaxUtils.toString(src)__                } catch (XMLStreamException e) {_                    elementString = src.toString()__                }_                buf.append("[" + elementString + "]")__            }_            buf.append("]")__        }_        return buf.toString()__    };returns,the,contents,as,a,string,important,notes,1,this,requires,the,message,to,be,fully,loaded,breaking,the,streaming,2,for,large,messages,the,result,can,be,a,very,large,string,and,require,large,amounts,of,memory;public,string,to,string,string,builder,buf,new,string,builder,buf,append,get,class,get,name,buf,append,headers,headers,if,body,null,buf,append,body,body,else,buf,append,body,for,element,src,get,body,string,element,string,try,element,string,stax,utils,to,string,src,catch,xmlstream,exception,e,element,string,src,to,string,buf,append,element,string,buf,append,return,buf,to,string
CxfPayload -> public List<Source> getBodySources();1318820680;Gets the body as a List of source objects_@return;public List<Source> getBodySources() {_        return body__    };gets,the,body,as,a,list,of,source,objects,return;public,list,source,get,body,sources,return,body
CxfPayload -> public List<Source> getBodySources();1318822133;Gets the body as a List of source objects_@return;public List<Source> getBodySources() {_        return body__    };gets,the,body,as,a,list,of,source,objects,return;public,list,source,get,body,sources,return,body
CxfPayload -> public List<Source> getBodySources();1318873084;Gets the body as a List of source objects.   If possible, the Source objects_will likely be StaxSource or similar that allows streaming.   If you plan to_modify or use the Source, be careful that the result is still usable by_the Camel runtime._@return;public List<Source> getBodySources() {_        return body__    };gets,the,body,as,a,list,of,source,objects,if,possible,the,source,objects,will,likely,be,stax,source,or,similar,that,allows,streaming,if,you,plan,to,modify,or,use,the,source,be,careful,that,the,result,is,still,usable,by,the,camel,runtime,return;public,list,source,get,body,sources,return,body
CxfPayload -> public List<Source> getBodySources();1324569391;Gets the body as a List of source objects.   If possible, the Source objects_will likely be StaxSource or similar that allows streaming.   If you plan to_modify or use the Source, be careful that the result is still usable by_the Camel runtime._@return;public List<Source> getBodySources() {_        return body__    };gets,the,body,as,a,list,of,source,objects,if,possible,the,source,objects,will,likely,be,stax,source,or,similar,that,allows,streaming,if,you,plan,to,modify,or,use,the,source,be,careful,that,the,result,is,still,usable,by,the,camel,runtime,return;public,list,source,get,body,sources,return,body
CxfPayload -> public List<Source> getBodySources();1345733973;Gets the body as a List of source objects.   If possible, the Source objects_will likely be StaxSource or similar that allows streaming.   If you plan to_modify or use the Source, be careful that the result is still usable by_the Camel runtime._@return;public List<Source> getBodySources() {_        return body__    };gets,the,body,as,a,list,of,source,objects,if,possible,the,source,objects,will,likely,be,stax,source,or,similar,that,allows,streaming,if,you,plan,to,modify,or,use,the,source,be,careful,that,the,result,is,still,usable,by,the,camel,runtime,return;public,list,source,get,body,sources,return,body
CxfPayload -> public List<Source> getBodySources();1371728896;Gets the body as a List of source objects.   If possible, the Source objects_will likely be StaxSource or similar that allows streaming.   If you plan to_modify or use the Source, be careful that the result is still usable by_the Camel runtime._@return;public List<Source> getBodySources() {_        return body__    };gets,the,body,as,a,list,of,source,objects,if,possible,the,source,objects,will,likely,be,stax,source,or,similar,that,allows,streaming,if,you,plan,to,modify,or,use,the,source,be,careful,that,the,result,is,still,usable,by,the,camel,runtime,return;public,list,source,get,body,sources,return,body
CxfPayload -> public List<Source> getBodySources();1415211488;Gets the body as a List of source objects.   If possible, the Source objects_will likely be StaxSource or similar that allows streaming.   If you plan to_modify or use the Source, be careful that the result is still usable by_the Camel runtime._@return;public List<Source> getBodySources() {_        return body__    };gets,the,body,as,a,list,of,source,objects,if,possible,the,source,objects,will,likely,be,stax,source,or,similar,that,allows,streaming,if,you,plan,to,modify,or,use,the,source,be,careful,that,the,result,is,still,usable,by,the,camel,runtime,return;public,list,source,get,body,sources,return,body
CxfPayload -> public List<Source> getBodySources();1423054622;Gets the body as a List of source objects.   If possible, the Source objects_will likely be StaxSource or similar that allows streaming.   If you plan to_modify or use the Source, be careful that the result is still usable by_the Camel runtime._@return;public List<Source> getBodySources() {_        return body__    };gets,the,body,as,a,list,of,source,objects,if,possible,the,source,objects,will,likely,be,stax,source,or,similar,that,allows,streaming,if,you,plan,to,modify,or,use,the,source,be,careful,that,the,result,is,still,usable,by,the,camel,runtime,return;public,list,source,get,body,sources,return,body
CxfPayload -> public List<Source> getBodySources();1428568260;Gets the body as a List of source objects.   If possible, the Source objects_will likely be StaxSource or similar that allows streaming.   If you plan to_modify or use the Source, be careful that the result is still usable by_the Camel runtime._@return;public List<Source> getBodySources() {_        return body__    };gets,the,body,as,a,list,of,source,objects,if,possible,the,source,objects,will,likely,be,stax,source,or,similar,that,allows,streaming,if,you,plan,to,modify,or,use,the,source,be,careful,that,the,result,is,still,usable,by,the,camel,runtime,return;public,list,source,get,body,sources,return,body
CxfPayload -> public List<Source> getBodySources();1523968798;Gets the body as a List of source objects.   If possible, the Source objects_will likely be StaxSource or similar that allows streaming.   If you plan to_modify or use the Source, be careful that the result is still usable by_the Camel runtime._@return;public List<Source> getBodySources() {_        return body__    };gets,the,body,as,a,list,of,source,objects,if,possible,the,source,objects,will,likely,be,stax,source,or,similar,that,allows,streaming,if,you,plan,to,modify,or,use,the,source,be,careful,that,the,result,is,still,usable,by,the,camel,runtime,return;public,list,source,get,body,sources,return,body
CxfPayload -> public List<Source> getBodySources();1540108161;Gets the body as a List of source objects.   If possible, the Source objects_will likely be StaxSource or similar that allows streaming.   If you plan to_modify or use the Source, be careful that the result is still usable by_the Camel runtime._@return;public List<Source> getBodySources() {_        return body__    };gets,the,body,as,a,list,of,source,objects,if,possible,the,source,objects,will,likely,be,stax,source,or,similar,that,allows,streaming,if,you,plan,to,modify,or,use,the,source,be,careful,that,the,result,is,still,usable,by,the,camel,runtime,return;public,list,source,get,body,sources,return,body
