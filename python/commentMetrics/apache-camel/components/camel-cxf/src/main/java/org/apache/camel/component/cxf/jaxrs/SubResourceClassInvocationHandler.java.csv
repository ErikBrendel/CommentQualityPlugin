commented;modifiers;parameterAmount;loc;comment;code
false;public;3;18;;@Override public Object invoke(Object proxy, Method method, Object[] parameters) throws Throwable {     Object result = null.     Class<?> returnType = method.getReturnType().     if (!returnType.isAssignableFrom(Void.class)) {         // create a instance to return         if (returnType.isInterface()) {             // create a new proxy for it             result = Proxy.newProxyInstance(returnType.getClassLoader(), new Class[] { returnType }, new SubResourceClassInvocationHandler()).         } else {             // get the constructor and create a new instance             Constructor<?> c = ResourceUtils.findResourceConstructor(returnType, true).             result = c.newInstance(new Object[] {}).         }     }     return result. }
