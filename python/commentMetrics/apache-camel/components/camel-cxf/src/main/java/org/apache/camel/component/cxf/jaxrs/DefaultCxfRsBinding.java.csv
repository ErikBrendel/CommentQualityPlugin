# id;timestamp;commentText;codeText;commentWords;codeWords
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)         throws Exception;1280130252;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<String, Object>()__        if (response instanceof Response) {_            _            for (Map.Entry<String, List<Object>> entry : ((Response)response).getMetadata().entrySet()) {_                if (!headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(), _                                                                       entry.getValue(), camelExchange)) {_                    _                    String mappedHeaderName = cxfToCamelHeaderMap.get(entry.getKey())__                    if (mappedHeaderName == null) {_                        mappedHeaderName = entry.getKey()__                    }_                    _                    if (LOG.isTraceEnabled()) {_                        LOG.trace("Populate external header " + entry.getKey() + "=" + entry.getValue()_                                  + " as " + mappedHeaderName)__                    }_                    _                    answer.put(mappedHeaderName, entry.getValue().get(0))___                } else {_                    if (LOG.isTraceEnabled()) {_                        LOG.trace("Drop external header " + entry.getKey() + "=" + entry.getValue())__                    }_                }_            }_            _            _            answer.put(Exchange.HTTP_RESPONSE_CODE, ((Response)response).getStatus())__        }_        _        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,camel,exchange,throws,exception,map,string,object,answer,new,hash,map,string,object,if,response,instanceof,response,for,map,entry,string,list,object,entry,response,response,get,metadata,entry,set,if,header,filter,strategy,apply,filter,to,external,headers,entry,get,key,entry,get,value,camel,exchange,string,mapped,header,name,cxf,to,camel,header,map,get,entry,get,key,if,mapped,header,name,null,mapped,header,name,entry,get,key,if,log,is,trace,enabled,log,trace,populate,external,header,entry,get,key,entry,get,value,as,mapped,header,name,answer,put,mapped,header,name,entry,get,value,get,0,else,if,log,is,trace,enabled,log,trace,drop,external,header,entry,get,key,entry,get,value,answer,put,exchange,response,response,get,status,return,answer
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)         throws Exception;1282188974;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<String, Object>()__        if (response instanceof Response) {_            _            for (Map.Entry<String, List<Object>> entry : ((Response)response).getMetadata().entrySet()) {_                if (!headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(), _                                                                       entry.getValue(), camelExchange)) {_                    _                    String mappedHeaderName = cxfToCamelHeaderMap.get(entry.getKey())__                    if (mappedHeaderName == null) {_                        mappedHeaderName = entry.getKey()__                    }_                    _                    if (LOG.isTraceEnabled()) {_                        LOG.trace("Populate external header " + entry.getKey() + "=" + entry.getValue()_                                  + " as " + mappedHeaderName)__                    }_                    _                    answer.put(mappedHeaderName, entry.getValue().get(0))___                } else {_                    if (LOG.isTraceEnabled()) {_                        LOG.trace("Drop external header " + entry.getKey() + "=" + entry.getValue())__                    }_                }_            }_            _            _            answer.put(Exchange.HTTP_RESPONSE_CODE, ((Response)response).getStatus())__        }_        _        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,camel,exchange,throws,exception,map,string,object,answer,new,hash,map,string,object,if,response,instanceof,response,for,map,entry,string,list,object,entry,response,response,get,metadata,entry,set,if,header,filter,strategy,apply,filter,to,external,headers,entry,get,key,entry,get,value,camel,exchange,string,mapped,header,name,cxf,to,camel,header,map,get,entry,get,key,if,mapped,header,name,null,mapped,header,name,entry,get,key,if,log,is,trace,enabled,log,trace,populate,external,header,entry,get,key,entry,get,value,as,mapped,header,name,answer,put,mapped,header,name,entry,get,value,get,0,else,if,log,is,trace,enabled,log,trace,drop,external,header,entry,get,key,entry,get,value,answer,put,exchange,response,response,get,status,return,answer
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)         throws Exception;1286537870;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<String, Object>()__        if (response instanceof Response) {_            _            for (Map.Entry<String, List<Object>> entry : ((Response)response).getMetadata().entrySet()) {_                if (!headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(), _                                                                       entry.getValue(), camelExchange)) {_                    _                    String mappedHeaderName = cxfToCamelHeaderMap.get(entry.getKey())__                    if (mappedHeaderName == null) {_                        mappedHeaderName = entry.getKey()__                    }_                    _                    if (LOG.isTraceEnabled()) {_                        LOG.trace("Populate external header " + entry.getKey() + "=" + entry.getValue()_                                  + " as " + mappedHeaderName)__                    }_                    _                    answer.put(mappedHeaderName, entry.getValue().get(0))___                } else {_                    if (LOG.isTraceEnabled()) {_                        LOG.trace("Drop external header " + entry.getKey() + "=" + entry.getValue())__                    }_                }_            }_            _            _            answer.put(Exchange.HTTP_RESPONSE_CODE, ((Response)response).getStatus())__        }_        _        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,camel,exchange,throws,exception,map,string,object,answer,new,hash,map,string,object,if,response,instanceof,response,for,map,entry,string,list,object,entry,response,response,get,metadata,entry,set,if,header,filter,strategy,apply,filter,to,external,headers,entry,get,key,entry,get,value,camel,exchange,string,mapped,header,name,cxf,to,camel,header,map,get,entry,get,key,if,mapped,header,name,null,mapped,header,name,entry,get,key,if,log,is,trace,enabled,log,trace,populate,external,header,entry,get,key,entry,get,value,as,mapped,header,name,answer,put,mapped,header,name,entry,get,value,get,0,else,if,log,is,trace,enabled,log,trace,drop,external,header,entry,get,key,entry,get,value,answer,put,exchange,response,response,get,status,return,answer
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)         throws Exception;1296546062;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<String, Object>()__        if (response instanceof Response) {_            _            for (Map.Entry<String, List<Object>> entry : ((Response)response).getMetadata().entrySet()) {_                if (!headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(), _                                                                       entry.getValue(), camelExchange)) {_                    _                    String mappedHeaderName = cxfToCamelHeaderMap.get(entry.getKey())__                    if (mappedHeaderName == null) {_                        mappedHeaderName = entry.getKey()__                    }_                    _                    if (LOG.isTraceEnabled()) {_                        LOG.trace("Populate external header " + entry.getKey() + "=" + entry.getValue()_                                  + " as " + mappedHeaderName)__                    }_                    _                    answer.put(mappedHeaderName, entry.getValue().get(0))___                } else {_                    if (LOG.isTraceEnabled()) {_                        LOG.trace("Drop external header " + entry.getKey() + "=" + entry.getValue())__                    }_                }_            }_            _            _            answer.put(Exchange.HTTP_RESPONSE_CODE, ((Response)response).getStatus())__        }_        _        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,camel,exchange,throws,exception,map,string,object,answer,new,hash,map,string,object,if,response,instanceof,response,for,map,entry,string,list,object,entry,response,response,get,metadata,entry,set,if,header,filter,strategy,apply,filter,to,external,headers,entry,get,key,entry,get,value,camel,exchange,string,mapped,header,name,cxf,to,camel,header,map,get,entry,get,key,if,mapped,header,name,null,mapped,header,name,entry,get,key,if,log,is,trace,enabled,log,trace,populate,external,header,entry,get,key,entry,get,value,as,mapped,header,name,answer,put,mapped,header,name,entry,get,value,get,0,else,if,log,is,trace,enabled,log,trace,drop,external,header,entry,get,key,entry,get,value,answer,put,exchange,response,response,get,status,return,answer
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)         throws Exception;1296558142;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<String, Object>()__        if (response instanceof Response) {_            _            for (Map.Entry<String, List<Object>> entry : ((Response)response).getMetadata().entrySet()) {_                if (!headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(), _                                                                       entry.getValue(), camelExchange)) {_                    _                    String mappedHeaderName = cxfToCamelHeaderMap.get(entry.getKey())__                    if (mappedHeaderName == null) {_                        mappedHeaderName = entry.getKey()__                    }_                    _                    if (LOG.isTraceEnabled()) {_                        LOG.trace("Populate external header " + entry.getKey() + "=" + entry.getValue()_                                  + " as " + mappedHeaderName)__                    }_                    _                    answer.put(mappedHeaderName, entry.getValue().get(0))___                } else {_                    if (LOG.isTraceEnabled()) {_                        LOG.trace("Drop external header " + entry.getKey() + "=" + entry.getValue())__                    }_                }_            }_            _            _            answer.put(Exchange.HTTP_RESPONSE_CODE, ((Response)response).getStatus())__        }_        _        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,camel,exchange,throws,exception,map,string,object,answer,new,hash,map,string,object,if,response,instanceof,response,for,map,entry,string,list,object,entry,response,response,get,metadata,entry,set,if,header,filter,strategy,apply,filter,to,external,headers,entry,get,key,entry,get,value,camel,exchange,string,mapped,header,name,cxf,to,camel,header,map,get,entry,get,key,if,mapped,header,name,null,mapped,header,name,entry,get,key,if,log,is,trace,enabled,log,trace,populate,external,header,entry,get,key,entry,get,value,as,mapped,header,name,answer,put,mapped,header,name,entry,get,value,get,0,else,if,log,is,trace,enabled,log,trace,drop,external,header,entry,get,key,entry,get,value,answer,put,exchange,response,response,get,status,return,answer
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)         throws Exception;1297969159;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<String, Object>()__        if (response instanceof Response) {_            _            for (Map.Entry<String, List<Object>> entry : ((Response)response).getMetadata().entrySet()) {_                if (!headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(), _                                                                       entry.getValue(), camelExchange)) {_                    _                    String mappedHeaderName = cxfToCamelHeaderMap.get(entry.getKey())__                    if (mappedHeaderName == null) {_                        mappedHeaderName = entry.getKey()__                    }_                    _                    if (LOG.isTraceEnabled()) {_                        LOG.trace("Populate external header " + entry.getKey() + "=" + entry.getValue()_                                  + " as " + mappedHeaderName)__                    }_                    _                    answer.put(mappedHeaderName, entry.getValue().get(0))___                } else {_                    if (LOG.isTraceEnabled()) {_                        LOG.trace("Drop external header " + entry.getKey() + "=" + entry.getValue())__                    }_                }_            }_            _            _            answer.put(Exchange.HTTP_RESPONSE_CODE, ((Response)response).getStatus())__        }_        _        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,camel,exchange,throws,exception,map,string,object,answer,new,hash,map,string,object,if,response,instanceof,response,for,map,entry,string,list,object,entry,response,response,get,metadata,entry,set,if,header,filter,strategy,apply,filter,to,external,headers,entry,get,key,entry,get,value,camel,exchange,string,mapped,header,name,cxf,to,camel,header,map,get,entry,get,key,if,mapped,header,name,null,mapped,header,name,entry,get,key,if,log,is,trace,enabled,log,trace,populate,external,header,entry,get,key,entry,get,value,as,mapped,header,name,answer,put,mapped,header,name,entry,get,value,get,0,else,if,log,is,trace,enabled,log,trace,drop,external,header,entry,get,key,entry,get,value,answer,put,exchange,response,response,get,status,return,answer
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)         throws Exception;1301257798;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<String, Object>()__        if (response instanceof Response) {_            _            for (Map.Entry<String, List<Object>> entry : ((Response)response).getMetadata().entrySet()) {_                if (!headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(), _                                                                       entry.getValue(), camelExchange)) {_                    _                    String mappedHeaderName = cxfToCamelHeaderMap.get(entry.getKey())__                    if (mappedHeaderName == null) {_                        mappedHeaderName = entry.getKey()__                    }_                    _                    LOG.trace("Populate external header {}={} as {}",_                        new Object[]{entry.getKey(), entry.getValue(), mappedHeaderName})__                    _                    answer.put(mappedHeaderName, entry.getValue().get(0))___                } else {_                    LOG.trace("Drop external header {}={}", entry.getKey(), entry.getValue())__                }_            }_            _            _            answer.put(Exchange.HTTP_RESPONSE_CODE, ((Response)response).getStatus())__        }_        _        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,camel,exchange,throws,exception,map,string,object,answer,new,hash,map,string,object,if,response,instanceof,response,for,map,entry,string,list,object,entry,response,response,get,metadata,entry,set,if,header,filter,strategy,apply,filter,to,external,headers,entry,get,key,entry,get,value,camel,exchange,string,mapped,header,name,cxf,to,camel,header,map,get,entry,get,key,if,mapped,header,name,null,mapped,header,name,entry,get,key,log,trace,populate,external,header,as,new,object,entry,get,key,entry,get,value,mapped,header,name,answer,put,mapped,header,name,entry,get,value,get,0,else,log,trace,drop,external,header,entry,get,key,entry,get,value,answer,put,exchange,response,response,get,status,return,answer
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)         throws Exception;1307014084;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<String, Object>()__        if (response instanceof Response) {_            _            for (Map.Entry<String, List<Object>> entry : ((Response)response).getMetadata().entrySet()) {_                if (!headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(), _                                                                       entry.getValue(), camelExchange)) {_                    _                    String mappedHeaderName = cxfToCamelHeaderMap.get(entry.getKey())__                    if (mappedHeaderName == null) {_                        mappedHeaderName = entry.getKey()__                    }_                    _                    LOG.trace("Populate external header {}={} as {}",_                        new Object[]{entry.getKey(), entry.getValue(), mappedHeaderName})__                    _                    answer.put(mappedHeaderName, entry.getValue().get(0))___                } else {_                    LOG.trace("Drop external header {}={}", entry.getKey(), entry.getValue())__                }_            }_            _            _            answer.put(Exchange.HTTP_RESPONSE_CODE, ((Response)response).getStatus())__        }_        _        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,camel,exchange,throws,exception,map,string,object,answer,new,hash,map,string,object,if,response,instanceof,response,for,map,entry,string,list,object,entry,response,response,get,metadata,entry,set,if,header,filter,strategy,apply,filter,to,external,headers,entry,get,key,entry,get,value,camel,exchange,string,mapped,header,name,cxf,to,camel,header,map,get,entry,get,key,if,mapped,header,name,null,mapped,header,name,entry,get,key,log,trace,populate,external,header,as,new,object,entry,get,key,entry,get,value,mapped,header,name,answer,put,mapped,header,name,entry,get,value,get,0,else,log,trace,drop,external,header,entry,get,key,entry,get,value,answer,put,exchange,response,response,get,status,return,answer
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)         throws Exception;1308663107;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<String, Object>()__        if (response instanceof Response) {_            _            for (Map.Entry<String, List<Object>> entry : ((Response)response).getMetadata().entrySet()) {_                if (!headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(), _                                                                       entry.getValue(), camelExchange)) {_                    _                    String mappedHeaderName = cxfToCamelHeaderMap.get(entry.getKey())__                    if (mappedHeaderName == null) {_                        mappedHeaderName = entry.getKey()__                    }_                    _                    LOG.trace("Populate external header {}={} as {}",_                        new Object[]{entry.getKey(), entry.getValue(), mappedHeaderName})__                    _                    answer.put(mappedHeaderName, entry.getValue().get(0))___                } else {_                    LOG.trace("Drop external header {}={}", entry.getKey(), entry.getValue())__                }_            }_            _        }_        _        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,camel,exchange,throws,exception,map,string,object,answer,new,hash,map,string,object,if,response,instanceof,response,for,map,entry,string,list,object,entry,response,response,get,metadata,entry,set,if,header,filter,strategy,apply,filter,to,external,headers,entry,get,key,entry,get,value,camel,exchange,string,mapped,header,name,cxf,to,camel,header,map,get,entry,get,key,if,mapped,header,name,null,mapped,header,name,entry,get,key,log,trace,populate,external,header,as,new,object,entry,get,key,entry,get,value,mapped,header,name,answer,put,mapped,header,name,entry,get,value,get,0,else,log,trace,drop,external,header,entry,get,key,entry,get,value,return,answer
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)         throws Exception;1325041596;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<String, Object>()__        if (response instanceof Response) {_            _            for (Map.Entry<String, List<Object>> entry : ((Response)response).getMetadata().entrySet()) {_                if (!headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(), _                                                                       entry.getValue(), camelExchange)) {_                    _                    String mappedHeaderName = cxfToCamelHeaderMap.get(entry.getKey())__                    if (mappedHeaderName == null) {_                        mappedHeaderName = entry.getKey()__                    }_                    _                    LOG.trace("Populate external header {}={} as {}",_                        new Object[]{entry.getKey(), entry.getValue(), mappedHeaderName})__                    _                    answer.put(mappedHeaderName, entry.getValue().get(0))___                } else {_                    LOG.trace("Drop external header {}={}", entry.getKey(), entry.getValue())__                }_            }_            _        }_        _        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,camel,exchange,throws,exception,map,string,object,answer,new,hash,map,string,object,if,response,instanceof,response,for,map,entry,string,list,object,entry,response,response,get,metadata,entry,set,if,header,filter,strategy,apply,filter,to,external,headers,entry,get,key,entry,get,value,camel,exchange,string,mapped,header,name,cxf,to,camel,header,map,get,entry,get,key,if,mapped,header,name,null,mapped,header,name,entry,get,key,log,trace,populate,external,header,as,new,object,entry,get,key,entry,get,value,mapped,header,name,answer,put,mapped,header,name,entry,get,value,get,0,else,log,trace,drop,external,header,entry,get,key,entry,get,value,return,answer
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)         throws Exception;1365739963;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<String, Object>()__        if (response instanceof Response) {_            _            for (Map.Entry<String, List<Object>> entry : ((Response)response).getMetadata().entrySet()) {_                if (!headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(), _                                                                       entry.getValue(), camelExchange)) {_                    _                    String mappedHeaderName = cxfToCamelHeaderMap.get(entry.getKey())__                    if (mappedHeaderName == null) {_                        mappedHeaderName = entry.getKey()__                    }_                    _                    LOG.trace("Populate external header {}={} as {}",_                        new Object[]{entry.getKey(), entry.getValue(), mappedHeaderName})__                    _                    answer.put(mappedHeaderName, entry.getValue().get(0))___                } else {_                    LOG.trace("Drop external header {}={}", entry.getKey(), entry.getValue())__                }_            }_            _        }_        _        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,camel,exchange,throws,exception,map,string,object,answer,new,hash,map,string,object,if,response,instanceof,response,for,map,entry,string,list,object,entry,response,response,get,metadata,entry,set,if,header,filter,strategy,apply,filter,to,external,headers,entry,get,key,entry,get,value,camel,exchange,string,mapped,header,name,cxf,to,camel,header,map,get,entry,get,key,if,mapped,header,name,null,mapped,header,name,entry,get,key,log,trace,populate,external,header,as,new,object,entry,get,key,entry,get,value,mapped,header,name,answer,put,mapped,header,name,entry,get,value,get,0,else,log,trace,drop,external,header,entry,get,key,entry,get,value,return,answer
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)         throws Exception;1365781567;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<String, Object>()__        if (response instanceof Response) {_            _            for (Map.Entry<String, List<Object>> entry : ((Response)response).getMetadata().entrySet()) {_                if (!headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(), _                                                                       entry.getValue(), camelExchange)) {_                    _                    String mappedHeaderName = cxfToCamelHeaderMap.get(entry.getKey())__                    if (mappedHeaderName == null) {_                        mappedHeaderName = entry.getKey()__                    }_                    _                    LOG.trace("Populate external header {}={} as {}",_                        new Object[]{entry.getKey(), entry.getValue(), mappedHeaderName})__                    _                    answer.put(mappedHeaderName, entry.getValue().get(0))___                } else {_                    LOG.trace("Drop external header {}={}", entry.getKey(), entry.getValue())__                }_            }_            _        }_        _        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,camel,exchange,throws,exception,map,string,object,answer,new,hash,map,string,object,if,response,instanceof,response,for,map,entry,string,list,object,entry,response,response,get,metadata,entry,set,if,header,filter,strategy,apply,filter,to,external,headers,entry,get,key,entry,get,value,camel,exchange,string,mapped,header,name,cxf,to,camel,header,map,get,entry,get,key,if,mapped,header,name,null,mapped,header,name,entry,get,key,log,trace,populate,external,header,as,new,object,entry,get,key,entry,get,value,mapped,header,name,answer,put,mapped,header,name,entry,get,value,get,0,else,log,trace,drop,external,header,entry,get,key,entry,get,value,return,answer
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)         throws Exception;1388443957;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<String, Object>()__        if (response instanceof Response) {_            _            for (Map.Entry<String, List<Object>> entry : ((Response)response).getMetadata().entrySet()) {_                if (!headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(), _                                                                       entry.getValue(), camelExchange)) {_                    _                    String mappedHeaderName = cxfToCamelHeaderMap.get(entry.getKey())__                    if (mappedHeaderName == null) {_                        mappedHeaderName = entry.getKey()__                    }_                    _                    LOG.trace("Populate external header {}={} as {}",_                        new Object[]{entry.getKey(), entry.getValue(), mappedHeaderName})__                    _                    answer.put(mappedHeaderName, entry.getValue().get(0))___                } else {_                    LOG.trace("Drop external header {}={}", entry.getKey(), entry.getValue())__                }_            }_            _        }_        _        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,camel,exchange,throws,exception,map,string,object,answer,new,hash,map,string,object,if,response,instanceof,response,for,map,entry,string,list,object,entry,response,response,get,metadata,entry,set,if,header,filter,strategy,apply,filter,to,external,headers,entry,get,key,entry,get,value,camel,exchange,string,mapped,header,name,cxf,to,camel,header,map,get,entry,get,key,if,mapped,header,name,null,mapped,header,name,entry,get,key,log,trace,populate,external,header,as,new,object,entry,get,key,entry,get,value,mapped,header,name,answer,put,mapped,header,name,entry,get,value,get,0,else,log,trace,drop,external,header,entry,get,key,entry,get,value,return,answer
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)         throws Exception;1395076208;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<String, Object>()__        if (response instanceof Response) {_            _            for (Map.Entry<String, List<Object>> entry : ((Response)response).getMetadata().entrySet()) {_                if (!headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(), _                                                                       entry.getValue(), camelExchange)) {_                    _                    String mappedHeaderName = cxfToCamelHeaderMap.get(entry.getKey())__                    if (mappedHeaderName == null) {_                        mappedHeaderName = entry.getKey()__                    }_                    _                    LOG.trace("Populate external header {}={} as {}",_                        new Object[]{entry.getKey(), entry.getValue(), mappedHeaderName})__                    _                    answer.put(mappedHeaderName, entry.getValue().get(0))___                } else {_                    LOG.trace("Drop external header {}={}", entry.getKey(), entry.getValue())__                }_            }_            _        }_        _        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,camel,exchange,throws,exception,map,string,object,answer,new,hash,map,string,object,if,response,instanceof,response,for,map,entry,string,list,object,entry,response,response,get,metadata,entry,set,if,header,filter,strategy,apply,filter,to,external,headers,entry,get,key,entry,get,value,camel,exchange,string,mapped,header,name,cxf,to,camel,header,map,get,entry,get,key,if,mapped,header,name,null,mapped,header,name,entry,get,key,log,trace,populate,external,header,as,new,object,entry,get,key,entry,get,value,mapped,header,name,answer,put,mapped,header,name,entry,get,value,get,0,else,log,trace,drop,external,header,entry,get,key,entry,get,value,return,answer
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)         throws Exception;1405374721;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<String, Object>()__        if (response instanceof Response) {_            _            for (Map.Entry<String, List<Object>> entry : ((Response)response).getMetadata().entrySet()) {_                if (!headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(), _                                                                       entry.getValue(), camelExchange)) {_                    _                    String mappedHeaderName = cxfToCamelHeaderMap.get(entry.getKey())__                    if (mappedHeaderName == null) {_                        mappedHeaderName = entry.getKey()__                    }_                    _                    LOG.trace("Populate external header {}={} as {}",_                        new Object[]{entry.getKey(), entry.getValue(), mappedHeaderName})__                    _                    answer.put(mappedHeaderName, entry.getValue().get(0))___                } else {_                    LOG.trace("Drop external header {}={}", entry.getKey(), entry.getValue())__                }_            }_            _        }_        _        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,camel,exchange,throws,exception,map,string,object,answer,new,hash,map,string,object,if,response,instanceof,response,for,map,entry,string,list,object,entry,response,response,get,metadata,entry,set,if,header,filter,strategy,apply,filter,to,external,headers,entry,get,key,entry,get,value,camel,exchange,string,mapped,header,name,cxf,to,camel,header,map,get,entry,get,key,if,mapped,header,name,null,mapped,header,name,entry,get,key,log,trace,populate,external,header,as,new,object,entry,get,key,entry,get,value,mapped,header,name,answer,put,mapped,header,name,entry,get,value,get,0,else,log,trace,drop,external,header,entry,get,key,entry,get,value,return,answer
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)         throws Exception;1415211488;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<String, Object>()__        if (response instanceof Response) {_            _            for (Map.Entry<String, List<Object>> entry : ((Response)response).getMetadata().entrySet()) {_                if (!headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(), _                                                                       entry.getValue(), camelExchange)) {_                    _                    String mappedHeaderName = cxfToCamelHeaderMap.get(entry.getKey())__                    if (mappedHeaderName == null) {_                        mappedHeaderName = entry.getKey()__                    }_                    _                    LOG.trace("Populate external header {}={} as {}",_                        new Object[]{entry.getKey(), entry.getValue(), mappedHeaderName})__                    _                    answer.put(mappedHeaderName, entry.getValue().get(0))___                } else {_                    LOG.trace("Drop external header {}={}", entry.getKey(), entry.getValue())__                }_            }_            _        }_        _        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,camel,exchange,throws,exception,map,string,object,answer,new,hash,map,string,object,if,response,instanceof,response,for,map,entry,string,list,object,entry,response,response,get,metadata,entry,set,if,header,filter,strategy,apply,filter,to,external,headers,entry,get,key,entry,get,value,camel,exchange,string,mapped,header,name,cxf,to,camel,header,map,get,entry,get,key,if,mapped,header,name,null,mapped,header,name,entry,get,key,log,trace,populate,external,header,as,new,object,entry,get,key,entry,get,value,mapped,header,name,answer,put,mapped,header,name,entry,get,value,get,0,else,log,trace,drop,external,header,entry,get,key,entry,get,value,return,answer
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)         throws Exception;1415783678;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<String, Object>()__        if (response instanceof Response) {_            _            for (Map.Entry<String, List<Object>> entry : ((Response)response).getMetadata().entrySet()) {_                if (!headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(), _                                                                       entry.getValue(), camelExchange)) {_                    _                    String mappedHeaderName = cxfToCamelHeaderMap.get(entry.getKey())__                    if (mappedHeaderName == null) {_                        mappedHeaderName = entry.getKey()__                    }_                    _                    LOG.trace("Populate external header {}={} as {}",_                        new Object[]{entry.getKey(), entry.getValue(), mappedHeaderName})__                    _                    answer.put(mappedHeaderName, entry.getValue().get(0))___                } else {_                    LOG.trace("Drop external header {}={}", entry.getKey(), entry.getValue())__                }_            }_            _        }_        _        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,camel,exchange,throws,exception,map,string,object,answer,new,hash,map,string,object,if,response,instanceof,response,for,map,entry,string,list,object,entry,response,response,get,metadata,entry,set,if,header,filter,strategy,apply,filter,to,external,headers,entry,get,key,entry,get,value,camel,exchange,string,mapped,header,name,cxf,to,camel,header,map,get,entry,get,key,if,mapped,header,name,null,mapped,header,name,entry,get,key,log,trace,populate,external,header,as,new,object,entry,get,key,entry,get,value,mapped,header,name,answer,put,mapped,header,name,entry,get,value,get,0,else,log,trace,drop,external,header,entry,get,key,entry,get,value,return,answer
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)         throws Exception;1421498072;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<String, Object>()__        if (response instanceof Response) {_            _            for (Map.Entry<String, List<Object>> entry : ((Response)response).getMetadata().entrySet()) {_                if (!headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(), _                                                                       entry.getValue(), camelExchange)) {_                    _                    String mappedHeaderName = cxfToCamelHeaderMap.get(entry.getKey())__                    if (mappedHeaderName == null) {_                        mappedHeaderName = entry.getKey()__                    }_                    _                    LOG.trace("Populate external header {}={} as {}",_                        new Object[]{entry.getKey(), entry.getValue(), mappedHeaderName})__                    _                    answer.put(mappedHeaderName, entry.getValue().get(0))___                } else {_                    LOG.trace("Drop external header {}={}", entry.getKey(), entry.getValue())__                }_            }_            _        }_        _        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,camel,exchange,throws,exception,map,string,object,answer,new,hash,map,string,object,if,response,instanceof,response,for,map,entry,string,list,object,entry,response,response,get,metadata,entry,set,if,header,filter,strategy,apply,filter,to,external,headers,entry,get,key,entry,get,value,camel,exchange,string,mapped,header,name,cxf,to,camel,header,map,get,entry,get,key,if,mapped,header,name,null,mapped,header,name,entry,get,key,log,trace,populate,external,header,as,new,object,entry,get,key,entry,get,value,mapped,header,name,answer,put,mapped,header,name,entry,get,value,get,0,else,log,trace,drop,external,header,entry,get,key,entry,get,value,return,answer
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)         throws Exception;1436889404;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<String, Object>()__        if (response instanceof Response) {_            _            for (Map.Entry<String, List<Object>> entry : ((Response)response).getMetadata().entrySet()) {_                if (!headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(), _                                                                       entry.getValue(), camelExchange)) {_                    _                    String mappedHeaderName = cxfToCamelHeaderMap.get(entry.getKey())__                    if (mappedHeaderName == null) {_                        mappedHeaderName = entry.getKey()__                    }_                    _                    LOG.trace("Populate external header {}={} as {}",_                        new Object[]{entry.getKey(), entry.getValue(), mappedHeaderName})__                    _                    answer.put(mappedHeaderName, entry.getValue().get(0))___                } else {_                    LOG.trace("Drop external header {}={}", entry.getKey(), entry.getValue())__                }_            }_            _        }_        _        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,camel,exchange,throws,exception,map,string,object,answer,new,hash,map,string,object,if,response,instanceof,response,for,map,entry,string,list,object,entry,response,response,get,metadata,entry,set,if,header,filter,strategy,apply,filter,to,external,headers,entry,get,key,entry,get,value,camel,exchange,string,mapped,header,name,cxf,to,camel,header,map,get,entry,get,key,if,mapped,header,name,null,mapped,header,name,entry,get,key,log,trace,populate,external,header,as,new,object,entry,get,key,entry,get,value,mapped,header,name,answer,put,mapped,header,name,entry,get,value,get,0,else,log,trace,drop,external,header,entry,get,key,entry,get,value,return,answer
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)         throws Exception;1478332141;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<String, Object>()__        if (response instanceof Response) {_            _            for (Map.Entry<String, List<Object>> entry : ((Response)response).getMetadata().entrySet()) {_                if (!headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(), _                                                                       entry.getValue(), camelExchange)) {_                    _                    String mappedHeaderName = cxfToCamelHeaderMap.get(entry.getKey())__                    if (mappedHeaderName == null) {_                        mappedHeaderName = entry.getKey()__                    }_                    _                    LOG.trace("Populate external header {}={} as {}",_                        new Object[]{entry.getKey(), entry.getValue(), mappedHeaderName})__                    _                    answer.put(mappedHeaderName, entry.getValue().get(0))___                } else {_                    LOG.trace("Drop external header {}={}", entry.getKey(), entry.getValue())__                }_            }_            _        }_        _        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,camel,exchange,throws,exception,map,string,object,answer,new,hash,map,string,object,if,response,instanceof,response,for,map,entry,string,list,object,entry,response,response,get,metadata,entry,set,if,header,filter,strategy,apply,filter,to,external,headers,entry,get,key,entry,get,value,camel,exchange,string,mapped,header,name,cxf,to,camel,header,map,get,entry,get,key,if,mapped,header,name,null,mapped,header,name,entry,get,key,log,trace,populate,external,header,as,new,object,entry,get,key,entry,get,value,mapped,header,name,answer,put,mapped,header,name,entry,get,value,get,0,else,log,trace,drop,external,header,entry,get,key,entry,get,value,return,answer
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)         throws Exception;1478545926;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<>()__        if (response instanceof Response) {_            Map<String, List<Object>> responseHeaders = ((Response) response).getMetadata()__            CxfHeaderHelper.propagateCxfHeadersToCamelHeaders(headerFilterStrategy, responseHeaders, answer, camelExchange)__        }__        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,camel,exchange,throws,exception,map,string,object,answer,new,hash,map,if,response,instanceof,response,map,string,list,object,response,headers,response,response,get,metadata,cxf,header,helper,propagate,cxf,headers,to,camel,headers,header,filter,strategy,response,headers,answer,camel,exchange,return,answer
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)         throws Exception;1482339648;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<>()__        if (response instanceof Response) {_            Map<String, List<Object>> responseHeaders = ((Response) response).getMetadata()__            CxfHeaderHelper.propagateCxfHeadersToCamelHeaders(headerFilterStrategy, responseHeaders, answer, camelExchange)__        }__        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,camel,exchange,throws,exception,map,string,object,answer,new,hash,map,if,response,instanceof,response,map,string,list,object,response,headers,response,response,get,metadata,cxf,header,helper,propagate,cxf,headers,to,camel,headers,header,filter,strategy,response,headers,answer,camel,exchange,return,answer
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)         throws Exception;1524759930;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<>()__        if (response instanceof Response) {_            Map<String, List<Object>> responseHeaders = ((Response) response).getMetadata()__            CxfHeaderHelper.propagateCxfHeadersToCamelHeaders(headerFilterStrategy, responseHeaders, answer, camelExchange)__        }__        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,camel,exchange,throws,exception,map,string,object,answer,new,hash,map,if,response,instanceof,response,map,string,list,object,response,headers,response,response,get,metadata,cxf,header,helper,propagate,cxf,headers,to,camel,headers,header,filter,strategy,response,headers,answer,camel,exchange,return,answer
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)         throws Exception;1533107427;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<>()__        if (response instanceof Response) {_            Map<String, List<Object>> responseHeaders = ((Response) response).getMetadata()__            CxfHeaderHelper.propagateCxfHeadersToCamelHeaders(headerFilterStrategy, responseHeaders, answer, camelExchange)__        }__        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,camel,exchange,throws,exception,map,string,object,answer,new,hash,map,if,response,instanceof,response,map,string,list,object,response,headers,response,response,get,metadata,cxf,header,helper,propagate,cxf,headers,to,camel,headers,header,filter,strategy,response,headers,answer,camel,exchange,return,answer
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)         throws Exception;1536558533;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<>()__        if (response instanceof Response) {_            Map<String, List<Object>> responseHeaders = ((Response) response).getMetadata()__            CxfHeaderHelper.propagateCxfHeadersToCamelHeaders(headerFilterStrategy, responseHeaders, answer, camelExchange)__        }__        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,camel,exchange,throws,exception,map,string,object,answer,new,hash,map,if,response,instanceof,response,map,string,list,object,response,headers,response,response,get,metadata,cxf,header,helper,propagate,cxf,headers,to,camel,headers,header,filter,strategy,response,headers,answer,camel,exchange,return,answer
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)         throws Exception;1540108161;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<>()__        if (response instanceof Response) {_            Map<String, List<Object>> responseHeaders = ((Response) response).getMetadata()__            CxfHeaderHelper.propagateCxfHeadersToCamelHeaders(headerFilterStrategy, responseHeaders, answer, camelExchange)__        }__        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,camel,exchange,throws,exception,map,string,object,answer,new,hash,map,if,response,instanceof,response,map,string,list,object,response,headers,response,response,get,metadata,cxf,header,helper,propagate,cxf,headers,to,camel,headers,header,filter,strategy,response,headers,answer,camel,exchange,return,answer
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)         throws Exception;1540108163;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<>()__        if (response instanceof Response) {_            Map<String, List<Object>> responseHeaders = ((Response) response).getMetadata()__            CxfHeaderHelper.propagateCxfHeadersToCamelHeaders(headerFilterStrategy, responseHeaders, answer, camelExchange)__        }__        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,camel,exchange,throws,exception,map,string,object,answer,new,hash,map,if,response,instanceof,response,map,string,list,object,response,headers,response,response,get,metadata,cxf,header,helper,propagate,cxf,headers,to,camel,headers,header,filter,strategy,response,headers,answer,camel,exchange,return,answer
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1249513864;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request___    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1259661114;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request___    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1269831101;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request___    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1269929613;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request___    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1280130252;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request___    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1282188974;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request___    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1286537870;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request != null && request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request__    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,null,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1296546062;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request != null && request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request__    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,null,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1296558142;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request != null && request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request__    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,null,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1297969159;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request != null && request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request__    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,null,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1301257798;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request != null && request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request__    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,null,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1307014084;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request != null && request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request__    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,null,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1308663107;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request != null && request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request__    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,null,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1325041596;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request != null && request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request__    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,null,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1365739963;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request != null && request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request__    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,null,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1365781567;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request != null && request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request__    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,null,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1388443957;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request != null && request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request__    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,null,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1395076208;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request != null && request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request__    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,null,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1405374721;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request != null && request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request__    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,null,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1415211488;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request != null && request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request__    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,null,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1415783678;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request != null && request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request__    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,null,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1421498072;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request != null && request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request__    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,null,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1436889404;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request != null && request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request__    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,null,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1478332141;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request != null && request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request__    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,null,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1478545926;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request != null && request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request__    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,null,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1482339648;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request != null && request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request__    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,null,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1524759930;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request != null && request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request__    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,null,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1533107427;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request != null && request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request__    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,null,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1536558533;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request != null && request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request__    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,null,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1540108161;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request != null && request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request__    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,null,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)         throws Exception;1540108163;This method call Message.getBody({@link MessageContentsList}) to allow_an appropriate converter to kick in even through we only read the first_element off the MessageContextList.  If that returns null, we check_the body to see if it is a List or an array and then return the first_element.  If that fails, we will simply return the object.;public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange)_        throws Exception {__        Object request = camelMessage.getBody(MessageContentsList.class)__        if (request != null) {_            return ((MessageContentsList)request).get(0)__        } __        request = camelMessage.getBody()__        if (request instanceof List) {_            request = ((List<?>)request).get(0)__        } else if (request != null && request.getClass().isArray()) {_            request = ((Object[])request)[0]__        }__        return request__    };this,method,call,message,get,body,link,message,contents,list,to,allow,an,appropriate,converter,to,kick,in,even,through,we,only,read,the,first,element,off,the,message,context,list,if,that,returns,null,we,check,the,body,to,see,if,it,is,a,list,or,an,array,and,then,return,the,first,element,if,that,fails,we,will,simply,return,the,object;public,object,bind,camel,message,body,to,request,body,message,camel,message,exchange,camel,exchange,throws,exception,object,request,camel,message,get,body,message,contents,list,class,if,request,null,return,message,contents,list,request,get,0,request,camel,message,get,body,if,request,instanceof,list,request,list,request,get,0,else,if,request,null,request,get,class,is,array,request,object,request,0,return,request
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange exchange)         throws Exception;1249513864;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange exchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<String, Object>()__        if (response instanceof Response) {_            _            for (Map.Entry<String, List<Object>> entry : ((Response)response).getMetadata().entrySet()) {_                if (!headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(), _                                                                       entry.getValue(), exchange)) {_                    _                    String mappedHeaderName = cxfToCamelHeaderMap.get(entry.getKey())__                    if (mappedHeaderName == null) {_                        mappedHeaderName = entry.getKey()__                    }_                    _                    if (LOG.isTraceEnabled()) {_                        LOG.trace("Populate external header " + entry.getKey() + "=" + entry.getValue()_                                  + " as " + mappedHeaderName)__                    }_                    _                    answer.put(mappedHeaderName, entry.getValue().get(0))___                } else {_                    if (LOG.isTraceEnabled()) {_                        LOG.trace("Drop external header " + entry.getKey() + "=" + entry.getValue())__                    }_                }_            }_            _            _            answer.put(Exchange.HTTP_RESPONSE_CODE, ((Response)response).getStatus())__        }_        _        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,exchange,throws,exception,map,string,object,answer,new,hash,map,string,object,if,response,instanceof,response,for,map,entry,string,list,object,entry,response,response,get,metadata,entry,set,if,header,filter,strategy,apply,filter,to,external,headers,entry,get,key,entry,get,value,exchange,string,mapped,header,name,cxf,to,camel,header,map,get,entry,get,key,if,mapped,header,name,null,mapped,header,name,entry,get,key,if,log,is,trace,enabled,log,trace,populate,external,header,entry,get,key,entry,get,value,as,mapped,header,name,answer,put,mapped,header,name,entry,get,value,get,0,else,if,log,is,trace,enabled,log,trace,drop,external,header,entry,get,key,entry,get,value,answer,put,exchange,response,response,get,status,return,answer
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange exchange)         throws Exception;1259661114;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange exchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<String, Object>()__        if (response instanceof Response) {_            _            for (Map.Entry<String, List<Object>> entry : ((Response)response).getMetadata().entrySet()) {_                if (!headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(), _                                                                       entry.getValue(), exchange)) {_                    _                    String mappedHeaderName = cxfToCamelHeaderMap.get(entry.getKey())__                    if (mappedHeaderName == null) {_                        mappedHeaderName = entry.getKey()__                    }_                    _                    if (LOG.isTraceEnabled()) {_                        LOG.trace("Populate external header " + entry.getKey() + "=" + entry.getValue()_                                  + " as " + mappedHeaderName)__                    }_                    _                    answer.put(mappedHeaderName, entry.getValue().get(0))___                } else {_                    if (LOG.isTraceEnabled()) {_                        LOG.trace("Drop external header " + entry.getKey() + "=" + entry.getValue())__                    }_                }_            }_            _            _            answer.put(Exchange.HTTP_RESPONSE_CODE, ((Response)response).getStatus())__        }_        _        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,exchange,throws,exception,map,string,object,answer,new,hash,map,string,object,if,response,instanceof,response,for,map,entry,string,list,object,entry,response,response,get,metadata,entry,set,if,header,filter,strategy,apply,filter,to,external,headers,entry,get,key,entry,get,value,exchange,string,mapped,header,name,cxf,to,camel,header,map,get,entry,get,key,if,mapped,header,name,null,mapped,header,name,entry,get,key,if,log,is,trace,enabled,log,trace,populate,external,header,entry,get,key,entry,get,value,as,mapped,header,name,answer,put,mapped,header,name,entry,get,value,get,0,else,if,log,is,trace,enabled,log,trace,drop,external,header,entry,get,key,entry,get,value,answer,put,exchange,response,response,get,status,return,answer
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange exchange)         throws Exception;1269831101;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange exchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<String, Object>()__        if (response instanceof Response) {_            _            for (Map.Entry<String, List<Object>> entry : ((Response)response).getMetadata().entrySet()) {_                if (!headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(), _                                                                       entry.getValue(), exchange)) {_                    _                    String mappedHeaderName = cxfToCamelHeaderMap.get(entry.getKey())__                    if (mappedHeaderName == null) {_                        mappedHeaderName = entry.getKey()__                    }_                    _                    if (LOG.isTraceEnabled()) {_                        LOG.trace("Populate external header " + entry.getKey() + "=" + entry.getValue()_                                  + " as " + mappedHeaderName)__                    }_                    _                    answer.put(mappedHeaderName, entry.getValue().get(0))___                } else {_                    if (LOG.isTraceEnabled()) {_                        LOG.trace("Drop external header " + entry.getKey() + "=" + entry.getValue())__                    }_                }_            }_            _            _            answer.put(Exchange.HTTP_RESPONSE_CODE, ((Response)response).getStatus())__        }_        _        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,exchange,throws,exception,map,string,object,answer,new,hash,map,string,object,if,response,instanceof,response,for,map,entry,string,list,object,entry,response,response,get,metadata,entry,set,if,header,filter,strategy,apply,filter,to,external,headers,entry,get,key,entry,get,value,exchange,string,mapped,header,name,cxf,to,camel,header,map,get,entry,get,key,if,mapped,header,name,null,mapped,header,name,entry,get,key,if,log,is,trace,enabled,log,trace,populate,external,header,entry,get,key,entry,get,value,as,mapped,header,name,answer,put,mapped,header,name,entry,get,value,get,0,else,if,log,is,trace,enabled,log,trace,drop,external,header,entry,get,key,entry,get,value,answer,put,exchange,response,response,get,status,return,answer
DefaultCxfRsBinding -> public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange exchange)         throws Exception;1269929613;We will return an empty Map unless the response parameter is a {@link Response} object.;public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange exchange)_        throws Exception {_        _        Map<String, Object> answer = new HashMap<String, Object>()__        if (response instanceof Response) {_            _            for (Map.Entry<String, List<Object>> entry : ((Response)response).getMetadata().entrySet()) {_                if (!headerFilterStrategy.applyFilterToExternalHeaders(entry.getKey(), _                                                                       entry.getValue(), exchange)) {_                    _                    String mappedHeaderName = cxfToCamelHeaderMap.get(entry.getKey())__                    if (mappedHeaderName == null) {_                        mappedHeaderName = entry.getKey()__                    }_                    _                    if (LOG.isTraceEnabled()) {_                        LOG.trace("Populate external header " + entry.getKey() + "=" + entry.getValue()_                                  + " as " + mappedHeaderName)__                    }_                    _                    answer.put(mappedHeaderName, entry.getValue().get(0))___                } else {_                    if (LOG.isTraceEnabled()) {_                        LOG.trace("Drop external header " + entry.getKey() + "=" + entry.getValue())__                    }_                }_            }_            _            _            answer.put(Exchange.HTTP_RESPONSE_CODE, ((Response)response).getStatus())__        }_        _        return answer__    };we,will,return,an,empty,map,unless,the,response,parameter,is,a,link,response,object;public,map,string,object,bind,response,headers,to,camel,headers,object,response,exchange,exchange,throws,exception,map,string,object,answer,new,hash,map,string,object,if,response,instanceof,response,for,map,entry,string,list,object,entry,response,response,get,metadata,entry,set,if,header,filter,strategy,apply,filter,to,external,headers,entry,get,key,entry,get,value,exchange,string,mapped,header,name,cxf,to,camel,header,map,get,entry,get,key,if,mapped,header,name,null,mapped,header,name,entry,get,key,if,log,is,trace,enabled,log,trace,populate,external,header,entry,get,key,entry,get,value,as,mapped,header,name,answer,put,mapped,header,name,entry,get,value,get,0,else,if,log,is,trace,enabled,log,trace,drop,external,header,entry,get,key,entry,get,value,answer,put,exchange,response,response,get,status,return,answer
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1249513864;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1259661114;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1269831101;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1269929613;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1280130252;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1282188974;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1286537870;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1296546062;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1296558142;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1297969159;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1301257798;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1307014084;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1308663107;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1325041596;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1365739963;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1365781567;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1388443957;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1395076208;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1405374721;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1415211488;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1415783678;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1421498072;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1436889404;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1478332141;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1478545926;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1482339648;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1524759930;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1533107427;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1536558533;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1540108161;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
DefaultCxfRsBinding -> public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception;1540108163;By default, we just return the response object.;public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {_        return response__    };by,default,we,just,return,the,response,object;public,object,bind,response,to,camel,body,object,response,exchange,camel,exchange,throws,exception,return,response
