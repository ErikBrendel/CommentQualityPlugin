commented;modifiers;parameterAmount;loc;comment;code
false;public;1;5;;public void setApplicationContext(ApplicationContext ctx) throws BeansException {     if (bus == null) {         setBus(BusWiringBeanFactoryPostProcessor.addDefaultBus(ctx)).     } }
false;public;0;3;;public String getBeanId() {     return beanId. }
false;public;1;3;;public void setBeanId(String id) {     beanId = id. }
true;;0;3;// add this mothod for testing ;// add this mothod for testing List<String> getSchemaLocations() {     return schemaLocations. }
false;public;0;3;;public boolean isLoggingFeatureEnabled() {     return loggingFeature != null. }
false;public;1;15;;public void setLoggingFeatureEnabled(boolean loggingFeatureEnabled) {     if (loggingFeature != null) {         getFeatures().remove(loggingFeature).         loggingFeature = null.     }     if (loggingFeatureEnabled) {         if (getLoggingSizeLimit() > 0) {             loggingFeature = new LoggingFeature(getLoggingSizeLimit()).         } else {             loggingFeature = new LoggingFeature().         }         getFeatures().add(loggingFeature).     } }
false;public;0;3;;public int getLoggingSizeLimit() {     return loggingSizeLimit. }
false;public;1;12;;public void setLoggingSizeLimit(int loggingSizeLimit) {     this.loggingSizeLimit = loggingSizeLimit.     if (loggingFeature != null) {         getFeatures().remove(loggingFeature).         if (loggingSizeLimit > 0) {             loggingFeature = new LoggingFeature(loggingSizeLimit).         } else {             loggingFeature = new LoggingFeature().         }         getFeatures().add(loggingFeature).     } }
false;public;1;8;;public void setSkipFaultLogging(boolean skipFaultLogging) {     if (skipFaultLogging) {         if (this.getProperties() == null) {             this.setProperties(new HashMap<String, Object>()).         }         this.getProperties().put(FaultListener.class.getName(), new NullFaultListener()).     } }
