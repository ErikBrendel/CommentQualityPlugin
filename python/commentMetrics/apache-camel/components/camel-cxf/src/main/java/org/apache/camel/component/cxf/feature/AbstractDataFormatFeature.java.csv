commented;modifiers;parameterAmount;loc;comment;code
false;protected,abstract;0;1;;protected abstract Logger getLogger().
false;protected;3;24;;protected void removeInterceptorWhichIsOutThePhases(List<Interceptor<? extends Message>> interceptors, String[] phaseNames, Set<String> needToBeKept) {     for (Interceptor<? extends Message> i : interceptors) {         boolean outside = false.         if (i instanceof PhaseInterceptor) {             PhaseInterceptor<? extends Message> p = (PhaseInterceptor<? extends Message>) i.             for (String phaseName : phaseNames) {                 if (p.getPhase().equals(phaseName)) {                     outside = true.                     break.                 }             }             if (!outside) {                 // To support the old API                 if (needToBeKept == null) {                     getLogger().info("removing the interceptor " + p).                     interceptors.remove(p).                 } else if (!needToBeKept.contains(p.getClass().getName())) {                     getLogger().info("removing the interceptor " + p).                     interceptors.remove(p).                 }             }         }     } }
false;protected;2;9;;protected void removeInterceptors(List<Interceptor<? extends Message>> interceptors, Collection<Class<?>> toBeRemovedInterceptors) {     for (Interceptor<? extends Message> interceptor : interceptors) {         if (toBeRemovedInterceptors.contains(interceptor.getClass())) {             getLogger().info("removing the interceptor " + interceptor).             interceptors.remove(interceptor).         }     } }
false;protected;2;8;;protected void removeInterceptor(List<Interceptor<? extends Message>> interceptors, Class<? extends Interceptor<? extends Message>> cls) {     for (Interceptor<? extends Message> interceptor : interceptors) {         if (interceptor.getClass().equals(cls)) {             interceptors.remove(interceptor).         }     } }
false;protected;1;6;;protected void removeFaultInInterceptorFromClient(Client client) {     removeInterceptors(client.getInFaultInterceptors(), REMOVING_FAULT_IN_INTERCEPTORS).     removeInterceptors(client.getEndpoint().getService().getInFaultInterceptors(), REMOVING_FAULT_IN_INTERCEPTORS).     removeInterceptors(client.getEndpoint().getInFaultInterceptors(), REMOVING_FAULT_IN_INTERCEPTORS).     removeInterceptors(client.getEndpoint().getBinding().getInFaultInterceptors(), REMOVING_FAULT_IN_INTERCEPTORS). }
false;public;1;5;;public void addInIntercepters(List<Interceptor<? extends Message>> interceptors) {     for (Interceptor<? extends Message> interceptor : interceptors) {         inInterceptorNames.add(interceptor.getClass().getName()).     } }
false;public;1;5;;public void addOutInterceptors(List<Interceptor<? extends Message>> interceptors) {     for (Interceptor<? extends Message> interceptor : interceptors) {         outInterceptorNames.add(interceptor.getClass().getName()).     } }
false;public;0;3;;public Set<String> getInInterceptorNames() {     return inInterceptorNames. }
false;public;0;3;;public Set<String> getOutInterceptorNames() {     return outInterceptorNames. }
