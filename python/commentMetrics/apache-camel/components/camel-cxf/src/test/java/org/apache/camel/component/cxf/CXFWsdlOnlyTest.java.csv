commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public boolean isCreateCamelContextPerClass() {     return true. }
false;protected;0;10;;protected ClassPathXmlApplicationContext createApplicationContext() {     System.setProperty("CXFWsdlOnlyTest.port1", Integer.toString(port1)).     System.setProperty("CXFWsdlOnlyTest.port2", Integer.toString(port2)).     System.setProperty("CXFWsdlOnlyTest.port3", Integer.toString(port3)).     System.setProperty("CXFWsdlOnlyTest.port4", Integer.toString(port4)).     // this will cause the issue of the new http server doesn't send the response back.     return new ClassPathXmlApplicationContext("org/apache/camel/component/cxf/WsdlOnlyBeans.xml"). }
false;protected;1;3;;protected void assertValidContext(CamelContext context) {     assertNotNull("No context found!", context). }
false;public,static;0;9;;@BeforeClass public static void startServices() {     Object implementor = new PersonImpl().     String address = "http://localhost:" + port1 + "/CXFWsdlOnlyTest/PersonService/".     endpoint1 = Endpoint.publish(address, implementor).     address = "http://localhost:" + port2 + "/CXFWsdlOnlyTest/PersonService/".     endpoint2 = Endpoint.publish(address, implementor). }
false;public,static;0;10;;@AfterClass public static void stopServices() {     if (endpoint1 != null) {         endpoint1.stop().     }     if (endpoint2 != null) {         endpoint2.stop().     } }
false;public;0;51;;@Test public void testRoutesWithFault() throws Exception {     URL wsdlURL = getClass().getClassLoader().getResource("person.wsdl").     PersonService ss = new PersonService(wsdlURL, new QName("http://camel.apache.org/wsdl-first", "PersonService")).     Person client = ss.getSoap().     ((BindingProvider) client).getRequestContext().put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY, "http://localhost:" + port3 + "/CXFWsdlOnlyTest/PersonService/").     Holder<String> personId = new Holder<>().     personId.value = "hello".     Holder<String> ssn = new Holder<>().     Holder<String> name = new Holder<>().     client.getPerson(personId, ssn, name).     assertEquals("Bonjour", name.value).     personId.value = "".     ssn = new Holder<>().     name = new Holder<>().     Throwable t = null.     try {         client.getPerson(personId, ssn, name).         fail("Expect exception").     } catch (UnknownPersonFault e) {         t = e.     }     assertTrue(t instanceof UnknownPersonFault).     Person client2 = ss.getSoap2().     ((BindingProvider) client2).getRequestContext().put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY, "http://localhost:" + port4 + "/CXFWsdlOnlyTest/PersonService/").     Holder<String> personId2 = new Holder<>().     personId2.value = "hello".     Holder<String> ssn2 = new Holder<>().     Holder<String> name2 = new Holder<>().     client2.getPerson(personId2, ssn2, name2).     assertEquals("Bonjour", name2.value).     personId2.value = "".     ssn2 = new Holder<>().     name2 = new Holder<>().     try {         client2.getPerson(personId2, ssn2, name2).         fail("Expect exception").     } catch (UnknownPersonFault e) {         t = e.     }     assertTrue(t instanceof UnknownPersonFault). }
