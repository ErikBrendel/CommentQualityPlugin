commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;6;;@AfterClass public static void stopService() {     if (endpoint != null) {         endpoint.stop().     } }
false;public,static;0;7;;@BeforeClass public static void startService() {     Object implementor = new GreeterImpl().     String address = "http://localhost:" + getPort1() + "/CxfGreeterMessageCamelHttpRouterTest/SoapContext/SoapPort".     endpoint = Endpoint.publish(address, implementor). }
false;public;0;6;;public void configure() {     from("cxf:bean:routerEndpoint?dataFormat=RAW&publishedEndpointUrl=http://www.simple.com/services/test").removeHeaders("CamelHttp*").to(serverAddress + "?throwExceptionOnFailure=false"). }
false;protected;0;11;;@Override protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          public void configure() {             from("cxf:bean:routerEndpoint?dataFormat=RAW&publishedEndpointUrl=http://www.simple.com/services/test").removeHeaders("CamelHttp*").to(serverAddress + "?throwExceptionOnFailure=false").         }     }. }
false;protected;0;4;;@Override protected ClassPathXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/component/cxf/GreeterEndpointWithCamelHttpBeans.xml"). }
