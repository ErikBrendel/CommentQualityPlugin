commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isCreateCamelContextPerClass() {     return true. }
false;public;0;7;;@Before public void startService() {     Object implementor = new GreeterImpl().     String address = "http://localhost:" + port + "/" + getClass().getSimpleName() + "/SoapContext/GreeterPort".     endpoint = Endpoint.publish(address, implementor). }
false;public;0;6;;@After public void stopService() {     if (endpoint != null) {         endpoint.stop().     } }
false;protected,static;1;10;;protected static String getResponseType(Element node) {     NodeList nodes = node.getElementsByTagNameNS("http://apache.org/hello_world_soap_http/types", "responseType").     if (nodes != null && nodes.getLength() == 1) {         Node c = nodes.item(0).getFirstChild().         if (c != null) {             return c.getNodeValue().         }     }     return null. }
false;protected,static,synchronized;0;9;;protected static synchronized DocumentBuilderFactory getDocumentBuilderFactory() {     if (documentBuilderFactory == null) {         documentBuilderFactory = DocumentBuilderFactory.newInstance().         documentBuilderFactory.setNamespaceAware(true).         documentBuilderFactory.setIgnoringElementContentWhitespace(true).         documentBuilderFactory.setIgnoringComments(true).     }     return documentBuilderFactory. }
