commented;modifiers;parameterAmount;loc;comment;code
false;protected;1;3;;protected void configureFactory(ServerFactoryBean svrBean) {     svrBean.getServiceFactory().setWrapped(false). }
false;public;0;4;;public void configure() {     errorHandler(noErrorHandler()).     from(routerEndpointURI).to("log:org.apache.camel?level=DEBUG").to(serviceEndpointURI). }
false;protected;0;8;;protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          public void configure() {             errorHandler(noErrorHandler()).             from(routerEndpointURI).to("log:org.apache.camel?level=DEBUG").to(serviceEndpointURI).         }     }. }
false;protected;0;9;;protected HelloService getCXFClient() throws Exception {     ClientProxyFactoryBean proxyFactory = new ClientProxyFactoryBean().     ClientFactoryBean clientBean = proxyFactory.getClientFactoryBean().     clientBean.setAddress(getRouterAddress()).     clientBean.setServiceClass(HelloService.class).     clientBean.getServiceFactory().setWrapped(false).     HelloService client = (HelloService) proxyFactory.create().     return client. }
false;public;0;4;;@Test public void testOnwayInvocation() throws Exception { // ignore the invocation without parameter, as the document-literal doesn't support the invocation without parameter. }
false;public;0;10;;@Test public void testInvokingServiceFromCXFClient() throws Exception {     HelloService client = getCXFClient().     Boolean result = client.echoBoolean(true).     assertEquals("we should get the right answer from router", true, result).     // The below invocation is failed with CXF 2.6.1 as the request are all start with <arg0>     String str = client.echo("hello world").     assertEquals("we should get the right answer from router", "echo hello world", str). }
