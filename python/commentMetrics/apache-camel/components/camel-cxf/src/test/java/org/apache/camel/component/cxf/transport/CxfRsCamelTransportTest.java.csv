commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected AbstractApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("/org/apache/camel/component/cxf/transport/CxfRsCamelTransport.xml"). }
false;public;0;8;;@Test public void testCamelTransport() throws Exception {     MockEndpoint result = getMockEndpoint("mock:result").     result.expectedBodiesReceived("Hello, Test!").     template.sendBody("direct:input", "Test").     assertMockEndpointsSatisfied(). }
false;;1;5;;@GET @Path("/hello/{name}") @Consumes("text/plain") @Produces("text/plain") String hello(@PathParam("name") String name).
false;public;1;7;;@GET @Path("/hello/{name}") @Consumes("text/plain") @Produces("text/plain") public String hello(@PathParam("name") String name) {     return String.format("Hello, %s!", name). }
