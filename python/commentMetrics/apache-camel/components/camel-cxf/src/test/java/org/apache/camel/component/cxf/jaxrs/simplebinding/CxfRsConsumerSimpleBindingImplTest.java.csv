commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Override @Before public void setUp() throws Exception {     super.setUp().     httpclient = HttpClientBuilder.create().build().     jaxb = JAXBContext.newInstance(CustomerList.class, Customer.class, Order.class, Product.class). }
false;public;0;6;;@Override @After public void tearDown() throws Exception {     super.tearDown().     httpclient.close(). }
false;public;1;6;;@Override public void process(Exchange exchange) throws Exception {     assertEquals("123", exchange.getIn().getHeader("id")).     exchange.getOut().setBody(new Customer(123, "Raul")).     exchange.getOut().setHeader(Exchange.HTTP_RESPONSE_CODE, 200). }
false;public;1;8;;@Override public void process(Exchange exchange) throws Exception {     Customer c = exchange.getIn().getBody(Customer.class).     assertNotNull(c).     assertEquals(123, c.getId()).     assertEquals(12, exchange.getIn().getHeader("age")).     exchange.getOut().setHeader(Exchange.HTTP_RESPONSE_CODE, 200). }
false;public;0;25;;@Override public void configure() {     from(CXF_RS_ENDPOINT_URI).recipientList(simple("direct:${header.operationName}")).     from("direct:getCustomer").process(new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             assertEquals("123", exchange.getIn().getHeader("id")).             exchange.getOut().setBody(new Customer(123, "Raul")).             exchange.getOut().setHeader(Exchange.HTTP_RESPONSE_CODE, 200).         }     }).     from("direct:newCustomer").process(new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             Customer c = exchange.getIn().getBody(Customer.class).             assertNotNull(c).             assertEquals(123, c.getId()).             assertEquals(12, exchange.getIn().getHeader("age")).             exchange.getOut().setHeader(Exchange.HTTP_RESPONSE_CODE, 200).         }     }). }
false;protected;0;30;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() {             from(CXF_RS_ENDPOINT_URI).recipientList(simple("direct:${header.operationName}")).             from("direct:getCustomer").process(new Processor() {                  @Override                 public void process(Exchange exchange) throws Exception {                     assertEquals("123", exchange.getIn().getHeader("id")).                     exchange.getOut().setBody(new Customer(123, "Raul")).                     exchange.getOut().setHeader(Exchange.HTTP_RESPONSE_CODE, 200).                 }             }).             from("direct:newCustomer").process(new Processor() {                  @Override                 public void process(Exchange exchange) throws Exception {                     Customer c = exchange.getIn().getBody(Customer.class).                     assertNotNull(c).                     assertEquals(123, c.getId()).                     assertEquals(12, exchange.getIn().getHeader("age")).                     exchange.getOut().setHeader(Exchange.HTTP_RESPONSE_CODE, 200).                 }             }).         }     }. }
false;public;0;9;;@Test public void testGetCustomerOnlyHeaders() throws Exception {     HttpGet get = new HttpGet("http://localhost:" + PORT_PATH + "/rest/customerservice/customers/123").     get.addHeader("Accept", "text/xml").     HttpResponse response = httpclient.execute(get).     assertEquals(200, response.getStatusLine().getStatusCode()).     Customer entity = (Customer) jaxb.createUnmarshaller().unmarshal(response.getEntity().getContent()).     assertEquals(123, entity.getId()). }
false;public;0;11;;@Test public void testNewCustomerWithQueryParam() throws Exception {     HttpPost post = new HttpPost("http://localhost:" + PORT_PATH + "/rest/customerservice/customers?age=12").     StringWriter sw = new StringWriter().     jaxb.createMarshaller().marshal(new Customer(123, "Raul"), sw).     post.setEntity(new StringEntity(sw.toString())).     post.addHeader("Content-Type", "text/xml").     post.addHeader("Accept", "text/xml").     HttpResponse response = httpclient.execute(post).     assertEquals(200, response.getStatusLine().getStatusCode()). }
