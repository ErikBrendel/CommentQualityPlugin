commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isCreateCamelContextPerClass() {     return true. }
false;public;0;5;;@Before public void startService() {     endpoint = Endpoint.publish("http://localhost:" + port1 + "/" + getClass().getSimpleName() + "/PersonService", new PersonImpl()). }
false;public;0;7;;@After public void stopService() {     if (endpoint != null) {         endpoint.stop().     } }
false;protected;1;5;;protected void checkSOAPAction(Exchange exchange) {     // check the SOAPAction to be null     assertNull(exchange.getIn().getHeader("SOAPAction")). }
false;public;1;4;;@Override public void process(Exchange exchange) throws Exception {     checkSOAPAction(exchange). }
false;public;0;14;;public void configure() {     from("cxf://http://localhost:" + port2 + "/" + cn + "/PersonService?" + PORT_NAME_PROP + "&" + SERVICE_NAME_PROP + getServiceName() + "&" + WSDL_URL_PROP + "&dataFormat=" + getDataFormat()).process(new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             checkSOAPAction(exchange).         }     }).to("cxf://http://localhost:" + port1 + "/" + cn + "/PersonService?" + PORT_NAME_PROP + "&" + SERVICE_NAME_PROP + getServiceName() + "&" + WSDL_URL_PROP + "&dataFormat=" + getDataFormat()). }
false;protected;0;20;;@Override protected RouteBuilder createRouteBuilder() {     final String cn = getClass().getSimpleName().     return new RouteBuilder() {          public void configure() {             from("cxf://http://localhost:" + port2 + "/" + cn + "/PersonService?" + PORT_NAME_PROP + "&" + SERVICE_NAME_PROP + getServiceName() + "&" + WSDL_URL_PROP + "&dataFormat=" + getDataFormat()).process(new Processor() {                  @Override                 public void process(Exchange exchange) throws Exception {                     checkSOAPAction(exchange).                 }             }).to("cxf://http://localhost:" + port1 + "/" + cn + "/PersonService?" + PORT_NAME_PROP + "&" + SERVICE_NAME_PROP + getServiceName() + "&" + WSDL_URL_PROP + "&dataFormat=" + getDataFormat()).         }     }. }
false;protected;0;3;;protected String getDataFormat() {     return "PAYLOAD". }
false;public;0;23;;@Test public void testRoutes() throws Exception {     URL wsdlURL = getClass().getClassLoader().getResource("person.wsdl").     PersonService ss = new PersonService(wsdlURL, QName.valueOf(getServiceName())).     Person client = ss.getSoap().     Client c = ClientProxy.getClient(client).     ((BindingProvider) client).getRequestContext().put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY, "http://localhost:" + port1 + "/" + getClass().getSimpleName() + "/PersonService").     c.getInInterceptors().add(new LoggingInInterceptor()).     c.getOutInterceptors().add(new LoggingOutInterceptor()).     Holder<String> personId = new Holder<>().     personId.value = "hello".     Holder<String> ssn = new Holder<>().     Holder<String> name = new Holder<>().     client.getPerson(personId, ssn, name).     assertEquals("Bonjour", name.value). }
false;public;0;31;;@Test public void testApplicationFault() {     URL wsdlURL = getClass().getClassLoader().getResource("person.wsdl").     PersonService ss = new PersonService(wsdlURL, QName.valueOf(getServiceName())).     Person client = ss.getSoap().     ((BindingProvider) client).getRequestContext().put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY, "http://localhost:" + port1 + "/" + getClass().getSimpleName() + "/PersonService").     Client c = ClientProxy.getClient(client).     c.getInInterceptors().add(new LoggingInInterceptor()).     c.getOutInterceptors().add(new LoggingOutInterceptor()).     Holder<String> personId = new Holder<>().     personId.value = "".     Holder<String> ssn = new Holder<>().     Holder<String> name = new Holder<>().     Throwable t = null.     try {         client.getPerson(personId, ssn, name).         fail("expect UnknownPersonFault").     } catch (UnknownPersonFault e) {         t = e.     }     assertNotNull(t).     assertTrue(t instanceof UnknownPersonFault). }
false;protected;0;3;;protected String getServiceName() {     return "{http://camel.apache.org/wsdl-first}PersonService". }
