commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;5;;@BeforeClass public static void loadTestSupport() {     // Need to load the static class first     CXFTestSupport.getPort1(). }
false;protected;0;4;;@Override protected AbstractXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/component/cxf/wsdl/camel-route.xml"). }
false;public;0;5;;@Test public void testCamelWsdl() throws Exception {     Object body = template.sendBody("http://localhost:" + CXFTestSupport.getPort1() + "/camel-order/?wsdl", ExchangePattern.InOut, null).     checkWsdl(InputStream.class.cast(body)). }
false;public;0;5;;@Test public void testCxfWsdl() throws Exception {     Object body = template.sendBody("http://localhost:" + CXFTestSupport.getPort1() + "/cxf-order/?wsdl", ExchangePattern.InOut, null).     checkWsdl(InputStream.class.cast(body)). }
false;public;1;18;;public void checkWsdl(InputStream in) throws Exception {     boolean containsOrderComplexType = false.     LineNumberReader reader = new LineNumberReader(new InputStreamReader(in)).     String line.     while ((line = reader.readLine()) != null) {         if (line.contains("complexType name=\"order\"")) {             containsOrderComplexType = true.         // break.         }     }     if (!containsOrderComplexType) {         throw new RuntimeException("WSDL does not contain complex type defintion for class Order").     } }
