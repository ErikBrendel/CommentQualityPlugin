commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isCreateCamelContextPerClass() {     return true. }
false;public;1;8;;public void process(final Exchange exchange) throws Exception {     QName faultCode = new QName("http://schemas.xmlsoap.org/soap/envelope/", "Server").     SoapFault fault = new SoapFault("Get the null value of person name", faultCode).     Element details = StaxUtils.read(new StringReader(DETAILS)).getDocumentElement().     fault.setDetail(details).     exchange.setException(fault). }
false;public;0;12;;public void configure() {     from(fromURI).process(new Processor() {          public void process(final Exchange exchange) throws Exception {             QName faultCode = new QName("http://schemas.xmlsoap.org/soap/envelope/", "Server").             SoapFault fault = new SoapFault("Get the null value of person name", faultCode).             Element details = StaxUtils.read(new StringReader(DETAILS)).getDocumentElement().             fault.setDetail(details).             exchange.setException(fault).         }     }). }
false;protected;0;17;;@Override protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          public void configure() {             from(fromURI).process(new Processor() {                  public void process(final Exchange exchange) throws Exception {                     QName faultCode = new QName("http://schemas.xmlsoap.org/soap/envelope/", "Server").                     SoapFault fault = new SoapFault("Get the null value of person name", faultCode).                     Element details = StaxUtils.read(new StringReader(DETAILS)).getDocumentElement().                     fault.setDetail(details).                     exchange.setException(fault).                 }             }).         }     }. }
false;public;0;31;;@Test public void testInvokingFromCxfClient() throws Exception {     URL wsdlURL = getClass().getClassLoader().getResource("person.wsdl").     PersonService ss = new PersonService(wsdlURL, QName.valueOf(SERVICE_NAME)).     Person client = ss.getSoap().     Client c = ClientProxy.getClient(client).     c.getInInterceptors().add(new LoggingInInterceptor()).     c.getOutInterceptors().add(new LoggingOutInterceptor()).     ((BindingProvider) client).getRequestContext().put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY, serviceAddress).     Holder<String> personId = new Holder<>().     personId.value = "".     Holder<String> ssn = new Holder<>().     Holder<String> name = new Holder<>().     Throwable t = null.     try {         client.getPerson(personId, ssn, name).         fail("expect UnknownPersonFault").     } catch (UnknownPersonFault e) {         t = e.         assertEquals("Get the wrong fault detail", "", e.getFaultInfo().getPersonId()).     }     assertNotNull(t).     assertTrue(t instanceof UnknownPersonFault). }
