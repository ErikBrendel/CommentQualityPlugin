commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;29;;@Override protected boolean validateOutOfBandHander() {     MessageContext ctx = context == null ? null : context.getMessageContext().     if (!relayHeaders) {         if (ctx != null && !ctx.containsKey(Header.HEADER_LIST) || (ctx.containsKey(Header.HEADER_LIST) && ((List<?>) ctx.get(Header.HEADER_LIST)).size() == 0)) {             return true.         }         return false.     }     boolean success = false.     if (ctx != null && ctx.containsKey(Header.HEADER_LIST)) {         List<Header> oobHdr = CastUtils.cast((List<?>) ctx.get(Header.HEADER_LIST)).         if (oobHdr.size() != 2) {             throw new RuntimeException("test failed expected 2 soap headers but found " + oobHdr.size()).         }         verifyHeader(oobHdr.get(0), "testOobHeader", "testOobHeaderValue").         verifyHeader(oobHdr.get(1), "New_testOobHeader", "New_testOobHeaderValue").         oobHdr.clear().         success = true.     } else {         throw new RuntimeException("MessageContext is null or doesnot contain OOBHeaders").     }     return success. }
false;private;3;26;;private void verifyHeader(Object hdr, String headerName, String headerValue) {     if (hdr instanceof Header && ((Header) hdr).getObject() instanceof Node) {         Header hdr1 = (Header) hdr.         try {             JAXBElement<?> job = (JAXBElement<?>) JAXBContext.newInstance(org.apache.cxf.outofband.header.ObjectFactory.class).createUnmarshaller().unmarshal((Node) hdr1.getObject()).             OutofBandHeader ob = (OutofBandHeader) job.getValue().             if (!headerName.equals(ob.getName())) {                 throw new RuntimeException("test failed expected name ' + headerName + ' but found '" + ob.getName() + "'").             }             if (!headerValue.equals(ob.getValue())) {                 throw new RuntimeException("test failed expected name ' + headerValue + ' but found '" + ob.getValue() + "'").             }         } catch (JAXBException ex) {             throw new RuntimeException("test failed", ex).         }     } else {         throw new RuntimeException("test failed. Unexpected type " + hdr.getClass()).     } }
