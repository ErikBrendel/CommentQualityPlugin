commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;3;;protected String[] getApplicationContextFiles() {     return new String[] { "org/apache/camel/component/cxf/spring/CxfEndpointBeans.xml" }. }
false;public;0;24;;@Test public void testCxfEndpointBeanDefinitionParser() {     CxfEndpoint routerEndpoint = ctx.getBean("routerEndpoint", CxfEndpoint.class).     assertEquals("Got the wrong endpoint address", "http://localhost:" + port1 + "/CxfEndpointBeanTest/router", routerEndpoint.getAddress()).     assertEquals("Got the wrong endpont service class", "org.apache.camel.component.cxf.HelloService", routerEndpoint.getServiceClass().getName()).     assertEquals("loggingFeatureEnabled should be false", false, routerEndpoint.isLoggingFeatureEnabled()).     assertEquals("loggingSizeLimit should not be set", 0, routerEndpoint.getLoggingSizeLimit()).     assertEquals("Got the wrong handlers size", 1, routerEndpoint.getHandlers().size()).     assertEquals("Got the wrong schemalocations size", 1, routerEndpoint.getSchemaLocations().size()).     assertEquals("Got the wrong schemalocation", "classpath:wsdl/Message.xsd", routerEndpoint.getSchemaLocations().get(0)).     assertEquals("Got the wrong continuationTimeout", 60000, routerEndpoint.getContinuationTimeout()).     CxfEndpoint myEndpoint = ctx.getBean("myEndpoint", CxfEndpoint.class).     assertEquals("Got the wrong endpointName", endpointName, myEndpoint.getPortName()).     assertEquals("Got the wrong serviceName", serviceName, myEndpoint.getServiceName()).     assertEquals("loggingFeatureEnabled should be true", true, myEndpoint.isLoggingFeatureEnabled()).     assertEquals("loggingSizeLimit should be set", 200, myEndpoint.getLoggingSizeLimit()).     assertTrue("We should get a soap binding", myEndpoint.getBindingConfig() instanceof SoapBindingConfiguration).     SoapBindingConfiguration configuration = (SoapBindingConfiguration) myEndpoint.getBindingConfig().     assertEquals("We should get a right soap version", "1.2", String.valueOf(configuration.getVersion().getVersion())). }
false;public;0;13;;@Test public void testCxfEndpointsWithCamelContext() {     CamelContext context = ctx.getBean("myCamelContext", CamelContext.class).     // try to create a new CxfEndpoint which could override the old bean's setting     CxfEndpoint myLocalCxfEndpoint = (CxfEndpoint) context.getEndpoint("cxf:bean:routerEndpoint?address=http://localhost:" + port1 + "/CxfEndpointBeanTest/myCamelContext/").     assertEquals("Got the wrong endpoint address", "http://localhost:" + port1 + "/CxfEndpointBeanTest/myCamelContext/", myLocalCxfEndpoint.getAddress()).     CxfEndpoint routerEndpoint = ctx.getBean("routerEndpoint", CxfEndpoint.class).     assertEquals("Got the wrong endpoint address", "http://localhost:" + port1 + "/CxfEndpointBeanTest/router", routerEndpoint.getAddress()). }
false;public;0;10;;@Test public void testPropertiesSettingOnCxfClient() throws Exception {     CxfEndpoint clientEndpoint = ctx.getBean("clientEndpoint", CxfEndpoint.class).     CxfProducer producer = (CxfProducer) clientEndpoint.createProducer().     // need to start the producer to get the client     producer.start().     Client client = producer.getClient().     HTTPConduit conduit = (HTTPConduit) client.getConduit().     assertEquals("Got the wrong user name", "test", conduit.getAuthorization().getUserName()). }
