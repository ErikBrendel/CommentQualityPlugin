commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected String getRequestMessage() {     return MtomTestHelper.MTOM_DISABLED_REQ_MESSAGE. }
false;public;1;28;;@SuppressWarnings("unchecked") public void process(Exchange exchange) throws Exception {     CxfPayload<SoapHeader> in = exchange.getIn().getBody(CxfPayload.class).     // verify request     Assert.assertEquals(1, in.getBody().size()).     DataHandler dr = exchange.getIn().getAttachment(MtomTestHelper.REQ_PHOTO_CID).     Assert.assertEquals("application/octet-stream", dr.getContentType()).     MtomTestHelper.assertEquals(MtomTestHelper.REQ_PHOTO_DATA, IOUtils.readBytesFromStream(dr.getInputStream())).     dr = exchange.getIn().getAttachment(MtomTestHelper.REQ_IMAGE_CID).     Assert.assertEquals("image/jpeg", dr.getContentType()).     MtomTestHelper.assertEquals(MtomTestHelper.requestJpeg, IOUtils.readBytesFromStream(dr.getInputStream())).     // create response     List<Source> elements = new ArrayList<>().     elements.add(new DOMSource(StaxUtils.read(new StringReader(MtomTestHelper.MTOM_DISABLED_RESP_MESSAGE)).getDocumentElement())).     CxfPayload<SoapHeader> body = new CxfPayload<>(new ArrayList<SoapHeader>(), elements, null).     exchange.getOut().setBody(body).     exchange.getOut().addAttachment(MtomTestHelper.RESP_PHOTO_CID, new DataHandler(new ByteArrayDataSource(MtomTestHelper.RESP_PHOTO_DATA, "application/octet-stream"))).     exchange.getOut().addAttachment(MtomTestHelper.RESP_IMAGE_CID, new DataHandler(new ByteArrayDataSource(MtomTestHelper.responseJpeg, "image/jpeg"))). }
