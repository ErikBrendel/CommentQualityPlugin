commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Before public void setUp() throws Exception {     applicationContext = createApplicationContext().     super.setUp().     assertNotNull("Should have created a valid spring context", applicationContext). }
false;public;0;6;;@After public void tearDown() throws Exception {     IOHelper.close(applicationContext).     super.tearDown(). }
false;protected;0;4;;@Override protected CamelContext createCamelContext() throws Exception {     return SpringCamelContext.springCamelContext(applicationContext, true). }
false;protected;0;3;;protected ClassPathXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/component/cxf/jms/camel-context.xml"). }
false;public;1;6;;@Override public void process(Exchange exchange) throws Exception {     // just set the response for greetme operation here     String me = exchange.getIn().getBody(String.class).     exchange.getOut().setBody("Hello " + me). }
false;public;0;10;;public void configure() {     from("cxf:bean:jmsEndpoint").process(new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             // just set the response for greetme operation here             String me = exchange.getIn().getBody(String.class).             exchange.getOut().setBody("Hello " + me).         }     }). }
false;protected;0;14;;protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          public void configure() {             from("cxf:bean:jmsEndpoint").process(new Processor() {                  @Override                 public void process(Exchange exchange) throws Exception {                     // just set the response for greetme operation here                     String me = exchange.getIn().getBody(String.class).                     exchange.getOut().setBody("Hello " + me).                 }             }).         }     }. }
false;public;0;16;;@Test public void testInvocation() {     // Here we just the address with JMS URI     String address = "jms:jndi:dynamicQueues/test.cxf.jmstransport.queue" + "?jndiInitialContextFactory" + "=org.apache.activemq.jndi.ActiveMQInitialContextFactory" + "&jndiConnectionFactoryName=ConnectionFactory&jndiURL=" + "vm://localhost".     JaxWsProxyFactoryBean factory = new JaxWsProxyFactoryBean().     factory.setServiceClass(Greeter.class).     factory.setAddress(address).     Greeter greeter = factory.create(Greeter.class).     String response = greeter.greetMe("Willem").     assertEquals("Get a wrong response", "Hello Willem", response). }
