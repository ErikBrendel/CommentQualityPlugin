commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isCreateCamelContextPerClass() {     return true. }
false;public;1;8;;@Override public void process(Exchange exchange) throws Exception {     Message in = exchange.getIn().     // Get the parameter list     List<?> parameter = in.getBody(List.class).     // Put the result back     exchange.getOut().setBody(parameter.get(0)). }
false;public;1;4;;@Override public void process(Exchange exchange) throws Exception {     throw new IllegalStateException(). }
false;public;1;10;;public void process(final Exchange exchange) {     Message in = exchange.getIn().     // Get the parameter list     List<?> parameter = in.getBody(List.class).     // Get the operation name     String operation = (String) in.getHeader(CxfConstants.OPERATION_NAME).     Object result = operation + " " + (String) parameter.get(0).     // Put the result back     exchange.getOut().setBody(result). }
false;public;0;33;;public void configure() {     from(SIMPLE_ENDPOINT_URI).choice().when(header(CxfConstants.OPERATION_NAME).isEqualTo(ECHO_OPERATION)).process(new Processor() {          public void process(final Exchange exchange) {             Message in = exchange.getIn().             // Get the parameter list             List<?> parameter = in.getBody(List.class).             // Get the operation name             String operation = (String) in.getHeader(CxfConstants.OPERATION_NAME).             Object result = operation + " " + (String) parameter.get(0).             // Put the result back             exchange.getOut().setBody(result).         }     }).when(header(CxfConstants.OPERATION_NAME).isEqualTo(ECHO_BOOLEAN_OPERATION)).doTry().process(new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             throw new IllegalStateException().         }     }).doCatch(IllegalStateException.class).process(new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             Message in = exchange.getIn().             // Get the parameter list             List<?> parameter = in.getBody(List.class).             // Put the result back             exchange.getOut().setBody(parameter.get(0)).         }     }).end(). }
true;protected;0;37;// START SNIPPET: example ;// START SNIPPET: example protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          public void configure() {             from(SIMPLE_ENDPOINT_URI).choice().when(header(CxfConstants.OPERATION_NAME).isEqualTo(ECHO_OPERATION)).process(new Processor() {                  public void process(final Exchange exchange) {                     Message in = exchange.getIn().                     // Get the parameter list                     List<?> parameter = in.getBody(List.class).                     // Get the operation name                     String operation = (String) in.getHeader(CxfConstants.OPERATION_NAME).                     Object result = operation + " " + (String) parameter.get(0).                     // Put the result back                     exchange.getOut().setBody(result).                 }             }).when(header(CxfConstants.OPERATION_NAME).isEqualTo(ECHO_BOOLEAN_OPERATION)).doTry().process(new Processor() {                  @Override                 public void process(Exchange exchange) throws Exception {                     throw new IllegalStateException().                 }             }).doCatch(IllegalStateException.class).process(new Processor() {                  @Override                 public void process(Exchange exchange) throws Exception {                     Message in = exchange.getIn().                     // Get the parameter list                     List<?> parameter = in.getBody(List.class).                     // Put the result back                     exchange.getOut().setBody(parameter.get(0)).                 }             }).end().         }     }. }
false;public;0;4;;@Test public void testXmlDeclaration() throws Exception { // do nothing here }
