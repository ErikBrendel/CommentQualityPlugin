commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isCreateCamelContextPerClass() {     return true. }
false;public;1;15;;public void process(final Exchange exchange) {     Message in = exchange.getIn().     // check the content-length header is filtered     Object value = in.getHeader("Content-Length").     assertNull("The Content-Length header should be removed", value).     // Get the request message     String request = in.getBody(String.class).     // Send the response message back     if (request.indexOf(ECHO_METHOD) > 0) {         exchange.getOut().setBody(ECHO_RESPONSE).     } else {         // echoBoolean call         exchange.getOut().setBody(ECHO_BOOLEAN_RESPONSE).     } }
false;public;0;19;;public void configure() {     from(simpleEndpointURI + "&dataFormat=RAW").process(new Processor() {          public void process(final Exchange exchange) {             Message in = exchange.getIn().             // check the content-length header is filtered             Object value = in.getHeader("Content-Length").             assertNull("The Content-Length header should be removed", value).             // Get the request message             String request = in.getBody(String.class).             // Send the response message back             if (request.indexOf(ECHO_METHOD) > 0) {                 exchange.getOut().setBody(ECHO_RESPONSE).             } else {                 // echoBoolean call                 exchange.getOut().setBody(ECHO_BOOLEAN_RESPONSE).             }         }     }). }
false;protected;0;23;;protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          public void configure() {             from(simpleEndpointURI + "&dataFormat=RAW").process(new Processor() {                  public void process(final Exchange exchange) {                     Message in = exchange.getIn().                     // check the content-length header is filtered                     Object value = in.getHeader("Content-Length").                     assertNull("The Content-Length header should be removed", value).                     // Get the request message                     String request = in.getBody(String.class).                     // Send the response message back                     if (request.indexOf(ECHO_METHOD) > 0) {                         exchange.getOut().setBody(ECHO_RESPONSE).                     } else {                         // echoBoolean call                         exchange.getOut().setBody(ECHO_BOOLEAN_RESPONSE).                     }                 }             }).         }     }. }
false;public;0;18;;@Test public void testInvokingServiceFromClient() throws Exception {     ClientProxyFactoryBean proxyFactory = new ClientProxyFactoryBean().     ClientFactoryBean clientBean = proxyFactory.getClientFactoryBean().     clientBean.setAddress(simpleEndpointAddress).     clientBean.setServiceClass(HelloService.class).     clientBean.setBus(BusFactory.getDefaultBus()).     HelloService client = (HelloService) proxyFactory.create().     String result = client.echo(TEST_MESSAGE).     assertEquals("We should get the echo string result from router", result, "echo " + TEST_MESSAGE).     Boolean bool = client.echoBoolean(Boolean.TRUE).     assertNotNull("The result should not be null", bool).     assertEquals("We should get the echo boolean result from router ", bool.toString(), "true"). }
