commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isCreateCamelContextPerClass() {     return true. }
false;protected;0;8;;@Override protected CamelContext createCamelContext() throws Exception {     CamelContext context = super.createCamelContext().     SSLContextParameters parameters = context.getRegistry().lookupByNameAndType("mySslContext", SSLContextParameters.class).     ((SSLContextParametersAware) context.getComponent("cxf")).setUseGlobalSslContextParameters(true).     context.setSSLContextParameters(parameters).     return context. }
false;public;0;5;;@Test public void testInvokingTrustRoute() throws Exception {     Exchange reply = sendJaxWsMessage("direct:trust").     assertFalse("We expect no exception here", reply.isFailed()). }
false;public;0;7;;@Test public void testInvokingWrongTrustRoute() throws Exception {     Exchange reply = sendJaxWsMessage("direct:wrongTrust").     assertTrue("We expect the exception here", reply.isFailed()).     Throwable e = reply.getException().getCause().     assertThat(e.getClass().getCanonicalName(), is("javax.net.ssl.SSLHandshakeException")). }
false;public;1;6;;public void process(final Exchange exchange) {     final List<String> params = new ArrayList<>().     params.add(TEST_MESSAGE).     exchange.getIn().setBody(params).     exchange.getIn().setHeader(CxfConstants.OPERATION_NAME, GREET_ME_OPERATION). }
false;protected;1;11;;protected Exchange sendJaxWsMessage(String endpointUri) throws InterruptedException {     Exchange exchange = template.send(endpointUri, new Processor() {          public void process(final Exchange exchange) {             final List<String> params = new ArrayList<>().             params.add(TEST_MESSAGE).             exchange.getIn().setBody(params).             exchange.getIn().setHeader(CxfConstants.OPERATION_NAME, GREET_ME_OPERATION).         }     }).     return exchange. }
false;protected;0;5;;@Override protected AbstractXmlApplicationContext createApplicationContext() {     // we can put the http conduit configuration here     return new ClassPathXmlApplicationContext("org/apache/camel/component/cxf/CxfGlobalSslContext.xml"). }
