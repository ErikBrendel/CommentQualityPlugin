commented;modifiers;parameterAmount;loc;comment;code
false;public;0;14;;@Test public void testCxfRsBindingConfiguration() {     // check binding styles     assertEquals(BindingStyle.Custom, endpointForRouteId("custom").getBindingStyle()).     assertEquals(BindingStyle.SimpleConsumer, endpointForRouteId("simple").getBindingStyle()).     assertEquals(BindingStyle.Default, endpointForRouteId("default").getBindingStyle()).     assertEquals(BindingStyle.Default, endpointForRouteId("none").getBindingStyle()).     // check binding implementations     assertEquals(DummyCxfRsBindingImplementation.class, endpointForRouteId("custom").getBinding().getClass()).     assertEquals(SimpleCxfRsBinding.class, endpointForRouteId("simple").getBinding().getClass()).     assertEquals(DefaultCxfRsBinding.class, endpointForRouteId("default").getBinding().getClass()).     assertEquals(DefaultCxfRsBinding.class, endpointForRouteId("default").getBinding().getClass()). }
false;private;1;3;;private CxfRsEndpoint endpointForRouteId(String routeId) {     return (CxfRsEndpoint) context.getRoute(routeId).getConsumer().getEndpoint(). }
false;protected;0;6;;@Override protected JndiRegistry createRegistry() throws Exception {     JndiRegistry answer = super.createRegistry().     answer.bind("binding", new DummyCxfRsBindingImplementation()).     return answer. }
false;public;0;15;;public void configure() {     from(CXF_RS_ENDPOINT_URI_CUSTOM).routeId("custom").to("log:foo").     from(CXF_RS_ENDPOINT_URI_SIMPLE).routeId("simple").to("log:foo").     from(CXF_RS_ENDPOINT_URI_DEFAULT).routeId("default").to("log:foo").     from(CXF_RS_ENDPOINT_URI_NONE).routeId("none").to("log:foo"). }
false;protected;0;19;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() {             from(CXF_RS_ENDPOINT_URI_CUSTOM).routeId("custom").to("log:foo").             from(CXF_RS_ENDPOINT_URI_SIMPLE).routeId("simple").to("log:foo").             from(CXF_RS_ENDPOINT_URI_DEFAULT).routeId("default").to("log:foo").             from(CXF_RS_ENDPOINT_URI_NONE).routeId("none").to("log:foo").         }     }. }
false;public;4;3;;@Override public void populateExchangeFromCxfRsRequest(org.apache.cxf.message.Exchange cxfExchange, Exchange camelExchange, Method method, Object[] paramArray) { }
false;public;2;4;;@Override public Object populateCxfRsResponseFromExchange(Exchange camelExchange, org.apache.cxf.message.Exchange cxfExchange) throws Exception {     return null. }
false;public;2;4;;@Override public Object bindResponseToCamelBody(Object response, Exchange camelExchange) throws Exception {     return null. }
false;public;2;4;;@Override public Map<String, Object> bindResponseHeadersToCamelHeaders(Object response, Exchange camelExchange) throws Exception {     return null. }
false;public;3;4;;@Override public Entity<Object> bindCamelMessageToRequestEntity(Object body, Message camelMessage, Exchange camelExchange) {     return null. }
false;public;2;4;;@Override public Object bindCamelMessageBodyToRequestBody(Message camelMessage, Exchange camelExchange) throws Exception {     return null. }
false;public;2;4;;@Override public MultivaluedMap<String, String> bindCamelHeadersToRequestHeaders(Map<String, Object> camelHeaders, Exchange camelExchange) throws Exception {     return null. }
