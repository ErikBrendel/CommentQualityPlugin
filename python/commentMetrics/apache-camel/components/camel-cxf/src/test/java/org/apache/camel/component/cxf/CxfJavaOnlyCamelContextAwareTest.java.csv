commented;modifiers;parameterAmount;loc;comment;code
false;public;0;23;;@Test public void testCxfEndpointHasCamelContext() throws Exception {     String s = "<GetPerson xmlns=\"http://camel.apache.org/wsdl-first/types\"><personId>123</personId></GetPerson>".     Document xml = context.getTypeConverter().convertTo(Document.class, s).     log.info("Endpoints: {}", context.getEndpoints()).     Object output = template.requestBody("personService", xml).     assertNotNull(output).     // using CxfPayload in payload mode     CxfPayload<?> payload = (CxfPayload<?>) output.     // convert the payload body to string     String reply = context.getTypeConverter().convertTo(String.class, payload.getBody().get(0)).     assertNotNull(reply).     assertTrue(reply.contains("<personId>123</personId")).     assertTrue(reply.contains("<ssn>456</ssn")).     assertTrue(reply.contains("<name>Donald Duck</name")).     assertTrue(context.getEndpoint("personService") instanceof CamelContextAware).     assertNotNull("CamelContext should be set on CxfEndpoint", context.getEndpoint("personService").getCamelContext()). }
false;public;1;9;;@Override public void process(Exchange exchange) throws Exception {     String s = "<GetPersonResponse xmlns=\"http://camel.apache.org/wsdl-first/types\">" + "<personId>123</personId><ssn>456</ssn><name>Donald Duck</name>" + "</GetPersonResponse>".     Document xml = context.getTypeConverter().convertTo(Document.class, s).     exchange.getOut().setBody(xml). }
false;public;0;22;;@Override public void configure() throws Exception {     CxfEndpoint endpoint = new CxfEndpoint().     endpoint.setAddress("http://localhost:" + port1 + "/PersonService").     endpoint.setServiceName(new QName("http://camel.apache.org/wsdl-first", "PersonService")).     endpoint.setPortName(new QName("http://camel.apache.org/wsdl-first", "soap")).     endpoint.setWsdlURL("classpath:person.wsdl").     endpoint.setDataFormat(DataFormat.PAYLOAD).     context.addEndpoint("personService", endpoint).     from(endpoint).process(new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             String s = "<GetPersonResponse xmlns=\"http://camel.apache.org/wsdl-first/types\">" + "<personId>123</personId><ssn>456</ssn><name>Donald Duck</name>" + "</GetPersonResponse>".             Document xml = context.getTypeConverter().convertTo(Document.class, s).             exchange.getOut().setBody(xml).         }     }). }
false;protected;0;27;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             CxfEndpoint endpoint = new CxfEndpoint().             endpoint.setAddress("http://localhost:" + port1 + "/PersonService").             endpoint.setServiceName(new QName("http://camel.apache.org/wsdl-first", "PersonService")).             endpoint.setPortName(new QName("http://camel.apache.org/wsdl-first", "soap")).             endpoint.setWsdlURL("classpath:person.wsdl").             endpoint.setDataFormat(DataFormat.PAYLOAD).             context.addEndpoint("personService", endpoint).             from(endpoint).process(new Processor() {                  @Override                 public void process(Exchange exchange) throws Exception {                     String s = "<GetPersonResponse xmlns=\"http://camel.apache.org/wsdl-first/types\">" + "<personId>123</personId><ssn>456</ssn><name>Donald Duck</name>" + "</GetPersonResponse>".                     Document xml = context.getTypeConverter().convertTo(Document.class, s).                     exchange.getOut().setBody(xml).                 }             }).         }     }. }
