commented;modifiers;parameterAmount;loc;comment;code
false;public;0;13;;@Override public void configure() throws Exception {     from("cxf:http://localhost:9000/PersonService/" + "?serviceClass=org.apache.camel.non_wrapper.Person" + "&serviceName={http://camel.apache.org/non-wrapper}PersonService" + "&portName={http://camel.apache.org/non-wrapper}soap" + "&dataFormat=POJO").process(new BeforeProcessor()).to("direct:something").process(new AfterProcessor()).     from("direct:something").process(new DoSomethingProcessor()).process(new DoNothingProcessor()). }
false;public;1;3;;public void process(Exchange exchange) throws Exception {     exchange.getOut().setBody(exchange.getIn().getBody() + " world!"). }
false;public;1;3;;public void process(Exchange exchange) throws Exception {     exchange.getOut().setBody(exchange.getIn().getBody()). }
false;public;1;4;;public void process(Exchange e) throws Exception {     MessageContentsList mclIn = e.getIn().getBody(MessageContentsList.class).     e.getIn().setBody(((GetPerson) mclIn.get(0)).getPersonId(), String.class). }
false;public;1;10;;public void process(Exchange e) throws Exception {     GetPersonResponse gpr = new GetPersonResponse().     gpr.setName("Bill").     gpr.setPersonId(e.getIn().getBody(String.class)).     gpr.setSsn("Test").     MessageContentsList mclOut = new MessageContentsList().     mclOut.set(0, gpr).     e.getOut().setBody(mclOut, MessageContentsList.class). }
