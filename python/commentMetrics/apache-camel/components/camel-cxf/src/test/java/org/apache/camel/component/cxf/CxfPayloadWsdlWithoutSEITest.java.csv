commented;modifiers;parameterAmount;loc;comment;code
false;public,static;0;6;;@BeforeClass public static void startService() {     Object implementor = new PersonImpl().     String address = "http://localhost:" + getPort1() + "/CxfPayloadWsdlWithoutSEITest/PersonService/".     Endpoint.publish(address, implementor). }
false;protected;0;4;;@Override protected ClassPathXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/component/cxf/CxfPayloadWsdlWithoutSEI.xml"). }
false;public;0;14;;@Test @Override public void testInvokingServiceWithCamelProducer() {     Exchange exchange = sendJaxWsMessage("hello").     assertEquals("The request should be handled sucessfully ", exchange.isFailed(), false).     org.apache.camel.Message out = exchange.getOut().     String result = out.getBody(String.class).     assertStringContains(result, "Bonjour").     exchange = sendJaxWsMessage("").     assertEquals("We should get a fault here", exchange.isFailed(), true).     Throwable ex = exchange.getException().     assertTrue("We should get a SoapFault here", ex instanceof SoapFault). }
false;public;1;5;;public void process(final Exchange exchange) {     String body = "<GetPerson xmlns=\"http://camel.apache.org/wsdl-first/types\"><personId>" + personIdString + "</personId></GetPerson>\n".     exchange.getIn().setBody(body).     exchange.getIn().setHeader(CxfConstants.OPERATION_NAME, "GetPerson"). }
false;private;1;10;;private Exchange sendJaxWsMessage(final String personIdString) {     Exchange exchange = template.send("direct:producer", new Processor() {          public void process(final Exchange exchange) {             String body = "<GetPerson xmlns=\"http://camel.apache.org/wsdl-first/types\"><personId>" + personIdString + "</personId></GetPerson>\n".             exchange.getIn().setBody(body).             exchange.getIn().setHeader(CxfConstants.OPERATION_NAME, "GetPerson").         }     }).     return exchange. }
