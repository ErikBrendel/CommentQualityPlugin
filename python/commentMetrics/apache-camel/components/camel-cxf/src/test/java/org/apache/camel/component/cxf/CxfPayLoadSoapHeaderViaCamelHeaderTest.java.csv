commented;modifiers;parameterAmount;loc;comment;code
false;public;1;11;;public void process(Exchange exchange) throws Exception {     CallerIDHeaderType callerId = new CallerIDHeaderType().     callerId.setName("Willem").     callerId.setPhoneNumber("108").     SoapHeader soapHeader = new SoapHeader(new QName("http://camel.apache.org/pizza/types", "CallerIDHeader"), callerId, new JAXBDataBinding(CallerIDHeaderType.class)).     List<SoapHeader> soapHeaders = new ArrayList<>(1).     soapHeaders.add(soapHeader).     // sets the SOAP header via a camel header     exchange.getIn().setHeader(Header.HEADER_LIST, soapHeaders). }
false;public;0;19;;public void configure() {     // START SNIPPET: payload_soap_header_set     from("direct:start").process(new Processor() {          public void process(Exchange exchange) throws Exception {             CallerIDHeaderType callerId = new CallerIDHeaderType().             callerId.setName("Willem").             callerId.setPhoneNumber("108").             SoapHeader soapHeader = new SoapHeader(new QName("http://camel.apache.org/pizza/types", "CallerIDHeader"), callerId, new JAXBDataBinding(CallerIDHeaderType.class)).             List<SoapHeader> soapHeaders = new ArrayList<>(1).             soapHeaders.add(soapHeader).             // sets the SOAP header via a camel header             exchange.getIn().setHeader(Header.HEADER_LIST, soapHeaders).         }     }).to(//      getServiceEndpointURI()).to("mock:end"). // END SNIPPET: payload_soap_header_set }
false;protected;0;24;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() {             // START SNIPPET: payload_soap_header_set             from("direct:start").process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     CallerIDHeaderType callerId = new CallerIDHeaderType().                     callerId.setName("Willem").                     callerId.setPhoneNumber("108").                     SoapHeader soapHeader = new SoapHeader(new QName("http://camel.apache.org/pizza/types", "CallerIDHeader"), callerId, new JAXBDataBinding(CallerIDHeaderType.class)).                     List<SoapHeader> soapHeaders = new ArrayList<>(1).                     soapHeaders.add(soapHeader).                     // sets the SOAP header via a camel header                     exchange.getIn().setHeader(Header.HEADER_LIST, soapHeaders).                 }             }).to(//              getServiceEndpointURI()).to("mock:end").         // END SNIPPET: payload_soap_header_set         }     }. }
false;public;0;19;;@Test public void testCreateSoapHeaderViaCamelHeaderForSoapRequest() throws Exception {     String body = "<OrderRequest xmlns=\"http://camel.apache.org/pizza/types\"><Toppings><Topping>topping_value</Topping></Toppings></OrderRequest>".     MockEndpoint mock = getMockEndpoint("mock:end").     mock.expectedMessageCount(1).     sendBody("direct:start", body).     assertMockEndpointsSatisfied().     Document message = mock.getExchanges().get(0).getIn().getMandatoryBody(Document.class).     Element root = message.getDocumentElement().     NodeList nodeList = root.getElementsByTagName("MinutesUntilReady").     assertEquals(1, nodeList.getLength()).     Element elMinutesUntilReady = (Element) nodeList.item(0).     /**      * the phone number 108 which is given in the SOAP header is added to      * 100 which results in 208, see class      * org.apache.camel.component.cxf.PizzaImpl.      */     assertEquals("208", elMinutesUntilReady.getTextContent()). }
