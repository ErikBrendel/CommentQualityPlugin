commented;modifiers;parameterAmount;loc;comment;code
false;public;1;34;;public void process(Exchange exchange) throws Exception {     LOG.info("processing exchange in camel").     BindingOperationInfo boi = (BindingOperationInfo) exchange.getProperty(BindingOperationInfo.class.getName()).     if (boi != null) {         LOG.info("boi.isUnwrapped" + boi.isUnwrapped()).     }     GetPerson person = exchange.getIn().getBody(GetPerson.class).     String personId = person.getPersonId().     GetPersonResponse response = new GetPersonResponse().     if (personId == null || personId.length() == 0) {         LOG.info("person id 123, so throwing exception").         // Try to throw out the soap fault message         org.apache.camel.non_wrapper.types.UnknownPersonFault personFault = new org.apache.camel.non_wrapper.types.UnknownPersonFault().         personFault.setPersonId("").         org.apache.camel.non_wrapper.UnknownPersonFault fault = new org.apache.camel.non_wrapper.UnknownPersonFault("Get the null value of person name", personFault).         // Since camel has its own exception handler framework, we can't throw the exception to trigger it         // We just set the fault message in the exchange for camel-cxf component handling and return         exchange.getOut().setFault(true).         exchange.getOut().setBody(fault).         return.     }     response.setPersonId(personId).     response.setName("Bonjour").     response.setSsn("123").     LOG.info("setting Bonjour as the response").     // Set the response message, first element is the return value of the operation,     // the others are the holders of method parameters     exchange.getOut().setBody(new Object[] { response }). }
