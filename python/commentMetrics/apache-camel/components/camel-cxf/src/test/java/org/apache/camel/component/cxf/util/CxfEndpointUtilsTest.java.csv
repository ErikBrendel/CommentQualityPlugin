commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;3;;protected String getEndpointURI() {     return CXF_BASE_URI. }
false;protected;0;3;;protected String getNoServiceClassURI() {     return NO_SERVICE_CLASS_URI. }
false;protected;0;3;;protected CamelContext getCamelContext() throws Exception {     return new DefaultCamelContext(). }
false;protected;1;4;;protected CxfEndpoint createEndpoint(String uri) throws Exception {     CamelContext context = getCamelContext().     return (CxfEndpoint) new CxfComponent(context).createEndpoint(uri). }
false;public;0;6;;@Test public void testGetProperties() throws Exception {     CxfEndpoint endpoint = createEndpoint(getEndpointURI()).     QName service = endpoint.getServiceName().     assertEquals("We should get the right service name", service, SERVICE_NAME). }
false;public;0;3;;public char sepChar() {     return '&'. }
false;public;0;5;;@Test public void testGetDataFormatCXF() throws Exception {     CxfEndpoint endpoint = createEndpoint(getEndpointURI() + sepChar() + "dataFormat=CXF_MESSAGE").     assertEquals("We should get the Message DataFormat", DataFormat.CXF_MESSAGE, endpoint.getDataFormat()). }
false;public;0;5;;@Test public void testGetDataFormatRAW() throws Exception {     CxfEndpoint endpoint = createEndpoint(getEndpointURI() + sepChar() + "dataFormat=RAW").     assertEquals("We should get the Message DataFormat", DataFormat.RAW, endpoint.getDataFormat()). }
false;public;0;5;;@Test public void testCheckServiceClassWithTheEndpoint() throws Exception {     CxfEndpoint endpoint = createEndpoint(getNoServiceClassURI()).     assertNull(endpoint.getServiceClass()). }
false;public;0;5;;@Test public void testCheckServiceClassProcedure() throws Exception {     CxfEndpoint endpoint = createEndpoint(getNoServiceClassURI()).     assertNotNull(endpoint.createProducer()). }
false;public;1;4;;@Override public void process(Exchange exchange) throws Exception { // noop }
false;public;0;18;;@Test public void testCheckServiceClassConsumer() throws Exception {     CxfEndpoint endpoint = createEndpoint(getNoServiceClassURI()).     try {         endpoint.createConsumer(new Processor() {              @Override             public void process(Exchange exchange) throws Exception {             // noop             }         }).         fail("Should have thrown exception").     } catch (IllegalArgumentException exception) {         assertNotNull("Should get a CamelException here", exception).         assertTrue(exception.getMessage().startsWith("serviceClass must be specified")).     } }
