commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isCreateCamelContextPerClass() {     return true. }
false;public;0;4;;@Before public void startService() {     endpoint = Endpoint.publish(SERVICE_ADDRESS, new PersonMultiPartImpl()). }
false;public;0;6;;@After public void stopService() {     if (endpoint != null) {         endpoint.stop().     } }
false;public;0;8;;public void configure() {     from("cxf://http://localhost:" + port2 + "/CXFWsdlOnlyPayloadModeMultiPartNoSpringTest/PersonMultiPart?" + PORT_NAME_PROP + "&" + SERVICE_NAME_PROP + getServiceName() + "&" + WSDL_URL_PROP + "&dataFormat=" + getDataFormat() + "&loggingFeatureEnabled=true").to("cxf://http://localhost:" + port1 + "/CXFWsdlOnlyPayloadModeMultiPartNoSpringTest/PersonMultiPart?" + PORT_NAME_PROP + "&" + SERVICE_NAME_PROP + getServiceName() + "&" + WSDL_URL_PROP + "&dataFormat=" + getDataFormat() + "&loggingFeatureEnabled=true"). }
false;protected;0;13;;@Override protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          public void configure() {             from("cxf://http://localhost:" + port2 + "/CXFWsdlOnlyPayloadModeMultiPartNoSpringTest/PersonMultiPart?" + PORT_NAME_PROP + "&" + SERVICE_NAME_PROP + getServiceName() + "&" + WSDL_URL_PROP + "&dataFormat=" + getDataFormat() + "&loggingFeatureEnabled=true").to("cxf://http://localhost:" + port1 + "/CXFWsdlOnlyPayloadModeMultiPartNoSpringTest/PersonMultiPart?" + PORT_NAME_PROP + "&" + SERVICE_NAME_PROP + getServiceName() + "&" + WSDL_URL_PROP + "&dataFormat=" + getDataFormat() + "&loggingFeatureEnabled=true").         }     }. }
false;protected;0;3;;protected String getDataFormat() {     return "PAYLOAD". }
false;public;0;21;;@Test public void testMultiPartMessage() {     URL wsdlURL = getClass().getClassLoader().getResource("person.wsdl").     PersonMultiPartService ss = new PersonMultiPartService(wsdlURL, QName.valueOf(getServiceName())).     PersonMultiPartPortType client = ss.getPersonMultiPartPort().     ((BindingProvider) client).getRequestContext().put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY, "http://localhost:" + port2 + "/CXFWsdlOnlyPayloadModeMultiPartNoSpringTest/PersonMultiPart").     Holder<Integer> ssn = new Holder<>().     ssn.value = 0.     Holder<String> name = new Holder<>().     name.value = "Unknown name".     client.getPersonMultiPartOperation("foo", 0, name, ssn).     assertEquals("New Person Name", name.value).     assertTrue(123456789 == ssn.value). }
false;protected;0;3;;protected String getServiceName() {     return "{http://camel.apache.org/wsdl-first}PersonMultiPartService". }
