commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testToArray() throws Exception {     List<String> testList = new ArrayList<>().     testList.add("string 1").     testList.add("string 2").     Object[] array = CxfConverter.toArray(testList).     assertNotNull("The array should not be null", array).     assertEquals("The array size should not be wrong", 2, array.length). }
false;public;0;18;;@Test public void testToInputStream() throws Exception {     CamelContext context = new DefaultCamelContext().     Exchange exchange = new DefaultExchange(context).     Response response = mock(Response.class).     InputStream is = mock(InputStream.class).     when(response.getEntity()).thenReturn(is).     InputStream result = CxfConverter.toInputStream(response, exchange).     assertEquals("We should get the inputStream here ", is, result).     reset(response).     when(response.getEntity()).thenReturn("Hello World").     result = CxfConverter.toInputStream(response, exchange).     assertTrue("We should get the inputStream here ", result instanceof ByteArrayInputStream). }
false;public;0;26;;@Test public void testFallbackConverter() throws Exception {     CamelContext context = new DefaultCamelContext().     Exchange exchange = new DefaultExchange(context).     MessageContentsList list = new MessageContentsList().     NodeListWrapper nl = new NodeListWrapper(new ArrayList<Element>()).     list.add(nl).     exchange.getIn().setBody(list).     Node node = exchange.getIn().getBody(Node.class).     assertNull(node).     File file = new File("src/test/resources/org/apache/camel/component/cxf/converter/test.xml").     DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance().     documentBuilderFactory.setNamespaceAware(true).     DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder().     Document document = documentBuilder.parse(file).     document.getDocumentElement().normalize().     List<Element> elements = new ArrayList<>().     elements.add(document.getDocumentElement()).     nl = new NodeListWrapper(elements).     list.clear().     list.add(nl).     exchange.getIn().setBody(list).     node = exchange.getIn().getBody(Node.class).     assertNotNull(node). }
