commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isCreateCamelContextPerClass() {     return true. }
false;public;0;7;;@Override @Before public void setUp() throws Exception {     bus = BusFactory.getDefaultBus().     super.setUp(). }
false;public;0;6;;@Override @After public void tearDown() throws Exception {     // TODO need to shutdown the server     super.tearDown(). }
false;public;1;6;;public void process(Exchange exchange) throws Exception {     SoapFault fault = exchange.getProperty(Exchange.EXCEPTION_CAUGHT, SoapFault.class).     exchange.getOut().setFault(true).     exchange.getOut().setBody(fault). }
false;public;0;22;;public void configure() {     // START SNIPPET: onException     from("direct:start").onException(SoapFault.class).maximumRedeliveries(0).handled(true).process(new Processor() {          public void process(Exchange exchange) throws Exception {             SoapFault fault = exchange.getProperty(Exchange.EXCEPTION_CAUGHT, SoapFault.class).             exchange.getOut().setFault(true).             exchange.getOut().setBody(fault).         }     }).end().to(serviceURI).     // END SNIPPET: onException     // START SNIPPET: ThrowFault     from(routerEndpointURI).setFaultBody(constant(SOAP_FAULT)). // END SNIPPET: ThrowFault }
false;protected;0;26;;protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          public void configure() {             // START SNIPPET: onException             from("direct:start").onException(SoapFault.class).maximumRedeliveries(0).handled(true).process(new Processor() {                  public void process(Exchange exchange) throws Exception {                     SoapFault fault = exchange.getProperty(Exchange.EXCEPTION_CAUGHT, SoapFault.class).                     exchange.getOut().setFault(true).                     exchange.getOut().setBody(fault).                 }             }).end().to(serviceURI).             // END SNIPPET: onException             // START SNIPPET: ThrowFault             from(routerEndpointURI).setFaultBody(constant(SOAP_FAULT)).         // END SNIPPET: ThrowFault         }     }. }
false;protected;0;3;;protected CamelContext createCamelContext() throws Exception {     return new DefaultCamelContext(). }
false;public;0;7;;@Test public void testInvokingServiceFromCamel() throws Exception {     Object result = template.sendBodyAndHeader("direct:start", ExchangePattern.InOut, "hello world", CxfConstants.OPERATION_NAME, "echo").     assertTrue("Exception is not instance of SoapFault", result instanceof SoapFault).     assertEquals("Expect to get right detail message", DETAIL_TEXT, ((SoapFault) result).getDetail().getTextContent()).     assertEquals("Expect to get right fault-code", "{http://schemas.xmlsoap.org/soap/envelope/}Client", ((SoapFault) result).getFaultCode().toString()). }
false;public;0;22;;@Test public void testInvokingServiceFromCXFClient() throws Exception {     ClientProxyFactoryBean proxyFactory = new ClientProxyFactoryBean().     ClientFactoryBean clientBean = proxyFactory.getClientFactoryBean().     clientBean.setAddress(routerAddress).     clientBean.setServiceClass(HelloService.class).     clientBean.setBus(bus).     HelloService client = (HelloService) proxyFactory.create().     try {         client.echo("hello world").         fail("Expect to get an exception here").     } catch (Exception e) {         assertEquals("Expect to get right exception message", EXCEPTION_MESSAGE, e.getMessage()).         assertTrue("Exception is not instance of SoapFault", e instanceof SoapFault).         assertEquals("Expect to get right detail message", DETAIL_TEXT, ((SoapFault) e).getDetail().getTextContent()).         // In CXF 2.1.2 , the fault code is per spec , the below fault-code is for SOAP 1.1         assertEquals("Expect to get right fault-code", "{http://schemas.xmlsoap.org/soap/envelope/}Client", ((SoapFault) e).getFaultCode().toString()).     } }
false;public;0;25;;@Test public void testInvokingServiceFromHTTPURL() throws Exception {     URL url = new URL(routerAddress).     URLConnection urlConnection = url.openConnection().     urlConnection.setDoInput(true).     urlConnection.setDoOutput(true).     urlConnection.setUseCaches(false).     urlConnection.setRequestProperty("Content-Type", "application/xml").     // Send POST data     OutputStream out = urlConnection.getOutputStream().     // copy the message out     InputStream is = this.getClass().getResourceAsStream("SimpleSoapRequest.xml").     IOHelper.copy(is, out).     out.flush().     is.close().     // check the response code     try {         urlConnection.getInputStream().         fail("We except an IOException here").     } catch (IOException exception) {         assertTrue(exception.getMessage().contains("500")).     } }
