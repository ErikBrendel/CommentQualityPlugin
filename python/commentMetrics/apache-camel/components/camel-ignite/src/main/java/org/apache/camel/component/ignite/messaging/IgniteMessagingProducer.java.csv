commented;modifiers;parameterAmount;loc;comment;code
false;public;2;22;;@Override public boolean process(Exchange exchange, AsyncCallback callback) {     Message in = exchange.getIn().     Message out = exchange.getOut().     MessageHelper.copyHeaders(exchange.getIn(), out, true).     Object body = in.getBody().     if (endpoint.getSendMode() == IgniteMessagingSendMode.UNORDERED) {         if (body instanceof Collection<?> && !endpoint.isTreatCollectionsAsCacheObjects()) {             messaging.send(topicFor(exchange), (Collection<?>) body).         } else {             messaging.send(topicFor(exchange), body).         }     } else {         messaging.sendOrdered(topicFor(exchange), body, endpoint.getTimeout()).     }     IgniteHelper.maybePropagateIncomingBody(endpoint, in, out).     callback.done(false).     return false. }
false;private;1;3;;private String topicFor(Exchange exchange) {     return exchange.getIn().getHeader(IgniteConstants.IGNITE_MESSAGING_TOPIC, endpoint.getTopic(), String.class). }
