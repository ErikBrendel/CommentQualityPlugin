# id;timestamp;commentText;codeText;commentWords;codeWords
IgniteEventsEndpoint -> public void setEndpointId(String endpointId);1492766412;The endpoint ID (not used).__@param endpointId endpoint ID (not used);public void setEndpointId(String endpointId) {_        this.endpointId = endpointId__    };the,endpoint,id,not,used,param,endpoint,id,endpoint,id,not,used;public,void,set,endpoint,id,string,endpoint,id,this,endpoint,id,endpoint,id
IgniteEventsEndpoint -> public void setEndpointId(String endpointId);1492766412;The endpoint ID (not used).__@param endpointId endpoint ID (not used);public void setEndpointId(String endpointId) {_        this.endpointId = endpointId__    };the,endpoint,id,not,used,param,endpoint,id,endpoint,id,not,used;public,void,set,endpoint,id,string,endpoint,id,this,endpoint,id,endpoint,id
IgniteEventsEndpoint -> public void setEndpointId(String endpointId);1499717928;The endpoint ID (not used).__@param endpointId endpoint ID (not used);public void setEndpointId(String endpointId) {_        this.endpointId = endpointId__    };the,endpoint,id,not,used,param,endpoint,id,endpoint,id,not,used;public,void,set,endpoint,id,string,endpoint,id,this,endpoint,id,endpoint,id
IgniteEventsEndpoint -> public void setEndpointId(String endpointId);1540108160;The endpoint ID (not used).__@param endpointId endpoint ID (not used);public void setEndpointId(String endpointId) {_        this.endpointId = endpointId__    };the,endpoint,id,not,used,param,endpoint,id,endpoint,id,not,used;public,void,set,endpoint,id,string,endpoint,id,this,endpoint,id,endpoint,id
IgniteEventsEndpoint -> public void setEndpointId(String endpointId);1547241310;The endpoint ID (not used).__@param endpointId endpoint ID (not used);public void setEndpointId(String endpointId) {_        this.endpointId = endpointId__    };the,endpoint,id,not,used,param,endpoint,id,endpoint,id,not,used;public,void,set,endpoint,id,string,endpoint,id,this,endpoint,id,endpoint,id
IgniteEventsEndpoint -> public void setEndpointId(String endpointId);1547480087;The endpoint ID (not used).__@param endpointId endpoint ID (not used);public void setEndpointId(String endpointId) {_        this.endpointId = endpointId__    };the,endpoint,id,not,used,param,endpoint,id,endpoint,id,not,used;public,void,set,endpoint,id,string,endpoint,id,this,endpoint,id,endpoint,id
IgniteEventsEndpoint -> public Set<Integer> getEvents();1450886210;Gets the event types to subscribe to.__@return;public Set<Integer> getEvents() {_        return events__    };gets,the,event,types,to,subscribe,to,return;public,set,integer,get,events,return,events
IgniteEventsEndpoint -> public Set<Integer> getEvents();1492766412;Gets the event types to subscribe to.__@return;public Set<Integer> getEvents() {_        return events__    };gets,the,event,types,to,subscribe,to,return;public,set,integer,get,events,return,events
IgniteEventsEndpoint -> public Set<Integer> getEvents();1492766412;Gets the event types to subscribe to.__@return;public Set<Integer> getEvents() {_        return events__    };gets,the,event,types,to,subscribe,to,return;public,set,integer,get,events,return,events
IgniteEventsEndpoint -> public Set<Integer> getEvents();1499717928;Gets the event types to subscribe to.__@return;public Set<Integer> getEvents() {_        return events__    };gets,the,event,types,to,subscribe,to,return;public,set,integer,get,events,return,events
IgniteEventsEndpoint -> public Set<Integer> getEvents();1540108160;Gets the event types to subscribe to.__@return;public Set<Integer> getEvents() {_        return events__    };gets,the,event,types,to,subscribe,to,return;public,set,integer,get,events,return,events
IgniteEventsEndpoint -> public Set<Integer> getEvents();1547241310;Gets the event types to subscribe to.__@return;public Set<Integer> getEvents() {_        return events__    };gets,the,event,types,to,subscribe,to,return;public,set,integer,get,events,return,events
IgniteEventsEndpoint -> public Set<Integer> getEvents();1547480087;Gets the event types to subscribe to.__@return;public Set<Integer> getEvents() {_        return events__    };gets,the,event,types,to,subscribe,to,return;public,set,integer,get,events,return,events
IgniteEventsEndpoint -> public String getEndpointId();1492766412;Gets the endpoint ID (not used).__@return endpoint ID (not used);public String getEndpointId() {_        return endpointId__    };gets,the,endpoint,id,not,used,return,endpoint,id,not,used;public,string,get,endpoint,id,return,endpoint,id
IgniteEventsEndpoint -> public String getEndpointId();1492766412;Gets the endpoint ID (not used).__@return endpoint ID (not used);public String getEndpointId() {_        return endpointId__    };gets,the,endpoint,id,not,used,return,endpoint,id,not,used;public,string,get,endpoint,id,return,endpoint,id
IgniteEventsEndpoint -> public String getEndpointId();1499717928;Gets the endpoint ID (not used).__@return endpoint ID (not used);public String getEndpointId() {_        return endpointId__    };gets,the,endpoint,id,not,used,return,endpoint,id,not,used;public,string,get,endpoint,id,return,endpoint,id
IgniteEventsEndpoint -> public String getEndpointId();1540108160;Gets the endpoint ID (not used).__@return endpoint ID (not used);public String getEndpointId() {_        return endpointId__    };gets,the,endpoint,id,not,used,return,endpoint,id,not,used;public,string,get,endpoint,id,return,endpoint,id
IgniteEventsEndpoint -> public String getEndpointId();1547241310;Gets the endpoint ID (not used).__@return endpoint ID (not used);public String getEndpointId() {_        return endpointId__    };gets,the,endpoint,id,not,used,return,endpoint,id,not,used;public,string,get,endpoint,id,return,endpoint,id
IgniteEventsEndpoint -> public String getEndpointId();1547480087;Gets the endpoint ID (not used).__@return endpoint ID (not used);public String getEndpointId() {_        return endpointId__    };gets,the,endpoint,id,not,used,return,endpoint,id,not,used;public,string,get,endpoint,id,return,endpoint,id
IgniteEventsEndpoint -> public void setEvents(String events);1450886210;Sets the event types to subscribe to as a comma-separated string of event constants as defined in {@link EventType}._<p>_For example: EVT_CACHE_ENTRY_CREATED,EVT_CACHE_OBJECT_REMOVED,EVT_IGFS_DIR_CREATED.__@param events;public void setEvents(String events) {_        this.events = new HashSet<>()__        Set<String> requestedEvents = new HashSet<>(Arrays.asList(events.toUpperCase().split(",")))__        Field[] fields = EventType.class.getDeclaredFields()__        for (Field field : fields) {_            if (!requestedEvents.contains(field.getName())) {_                continue__            }_            try {_                this.events.add(field.getInt(null))__            } catch (Exception e) {_                throw new IllegalArgumentException("Problem while resolving event type. See stacktrace.", e)__            }_        }_    };sets,the,event,types,to,subscribe,to,as,a,comma,separated,string,of,event,constants,as,defined,in,link,event,type,p,for,example,param,events;public,void,set,events,string,events,this,events,new,hash,set,set,string,requested,events,new,hash,set,arrays,as,list,events,to,upper,case,split,field,fields,event,type,class,get,declared,fields,for,field,field,fields,if,requested,events,contains,field,get,name,continue,try,this,events,add,field,get,int,null,catch,exception,e,throw,new,illegal,argument,exception,problem,while,resolving,event,type,see,stacktrace,e
IgniteEventsEndpoint -> public void setEvents(String events);1492766412;The event types to subscribe to as a comma-separated string of event constants as defined in {@link EventType}._<p>_For example: EVT_CACHE_ENTRY_CREATED,EVT_CACHE_OBJECT_REMOVED,EVT_IGFS_DIR_CREATED.__@param events;public void setEvents(String events) {_        this.events = new HashSet<>()__        Set<String> requestedEvents = new HashSet<>(Arrays.asList(events.toUpperCase().split(",")))__        Field[] fields = EventType.class.getDeclaredFields()__        for (Field field : fields) {_            if (!requestedEvents.contains(field.getName())) {_                continue__            }_            try {_                this.events.add(field.getInt(null))__            } catch (Exception e) {_                throw new IllegalArgumentException("Problem while resolving event type. See stacktrace.", e)__            }_        }_    };the,event,types,to,subscribe,to,as,a,comma,separated,string,of,event,constants,as,defined,in,link,event,type,p,for,example,param,events;public,void,set,events,string,events,this,events,new,hash,set,set,string,requested,events,new,hash,set,arrays,as,list,events,to,upper,case,split,field,fields,event,type,class,get,declared,fields,for,field,field,fields,if,requested,events,contains,field,get,name,continue,try,this,events,add,field,get,int,null,catch,exception,e,throw,new,illegal,argument,exception,problem,while,resolving,event,type,see,stacktrace,e
IgniteEventsEndpoint -> public void setEvents(String events);1492766412;The event types to subscribe to as a comma-separated string of event constants as defined in {@link EventType}._<p>_For example: EVT_CACHE_ENTRY_CREATED,EVT_CACHE_OBJECT_REMOVED,EVT_IGFS_DIR_CREATED.__@param events;public void setEvents(String events) {_        this.events = new HashSet<>()__        Set<String> requestedEvents = new HashSet<>(Arrays.asList(events.toUpperCase().split(",")))__        Field[] fields = EventType.class.getDeclaredFields()__        for (Field field : fields) {_            if (!requestedEvents.contains(field.getName())) {_                continue__            }_            try {_                this.events.add(field.getInt(null))__            } catch (Exception e) {_                throw new IllegalArgumentException("Problem while resolving event type. See stacktrace.", e)__            }_        }_    };the,event,types,to,subscribe,to,as,a,comma,separated,string,of,event,constants,as,defined,in,link,event,type,p,for,example,param,events;public,void,set,events,string,events,this,events,new,hash,set,set,string,requested,events,new,hash,set,arrays,as,list,events,to,upper,case,split,field,fields,event,type,class,get,declared,fields,for,field,field,fields,if,requested,events,contains,field,get,name,continue,try,this,events,add,field,get,int,null,catch,exception,e,throw,new,illegal,argument,exception,problem,while,resolving,event,type,see,stacktrace,e
IgniteEventsEndpoint -> public void setEvents(String events);1499717928;The event types to subscribe to as a comma-separated string of event constants as defined in {@link EventType}._<p>_For example: EVT_CACHE_ENTRY_CREATED,EVT_CACHE_OBJECT_REMOVED,EVT_IGFS_DIR_CREATED.__@param events;public void setEvents(String events) {_        this.events = new HashSet<>()__        Set<String> requestedEvents = new HashSet<>(Arrays.asList(events.toUpperCase().split(",")))__        Field[] fields = EventType.class.getDeclaredFields()__        for (Field field : fields) {_            if (!requestedEvents.contains(field.getName())) {_                continue__            }_            try {_                this.events.add(field.getInt(null))__            } catch (Exception e) {_                throw new IllegalArgumentException("Problem while resolving event type. See stacktrace.", e)__            }_        }_    };the,event,types,to,subscribe,to,as,a,comma,separated,string,of,event,constants,as,defined,in,link,event,type,p,for,example,param,events;public,void,set,events,string,events,this,events,new,hash,set,set,string,requested,events,new,hash,set,arrays,as,list,events,to,upper,case,split,field,fields,event,type,class,get,declared,fields,for,field,field,fields,if,requested,events,contains,field,get,name,continue,try,this,events,add,field,get,int,null,catch,exception,e,throw,new,illegal,argument,exception,problem,while,resolving,event,type,see,stacktrace,e
IgniteEventsEndpoint -> public void setEvents(String events);1540108160;The event types to subscribe to as a comma-separated string of event constants as defined in {@link EventType}._<p>_For example: EVT_CACHE_ENTRY_CREATED,EVT_CACHE_OBJECT_REMOVED,EVT_IGFS_DIR_CREATED.__@param events;public void setEvents(String events) {_        this.events = new HashSet<>()__        Set<String> requestedEvents = new HashSet<>(Arrays.asList(events.toUpperCase().split(",")))__        Field[] fields = EventType.class.getDeclaredFields()__        for (Field field : fields) {_            if (!requestedEvents.contains(field.getName())) {_                continue__            }_            try {_                this.events.add(field.getInt(null))__            } catch (Exception e) {_                throw new IllegalArgumentException("Problem while resolving event type. See stacktrace.", e)__            }_        }_    };the,event,types,to,subscribe,to,as,a,comma,separated,string,of,event,constants,as,defined,in,link,event,type,p,for,example,param,events;public,void,set,events,string,events,this,events,new,hash,set,set,string,requested,events,new,hash,set,arrays,as,list,events,to,upper,case,split,field,fields,event,type,class,get,declared,fields,for,field,field,fields,if,requested,events,contains,field,get,name,continue,try,this,events,add,field,get,int,null,catch,exception,e,throw,new,illegal,argument,exception,problem,while,resolving,event,type,see,stacktrace,e
IgniteEventsEndpoint -> public void setEvents(String events);1547241310;The event types to subscribe to as a comma-separated string of event constants as defined in {@link EventType}._<p>_For example: EVT_CACHE_ENTRY_CREATED,EVT_CACHE_OBJECT_REMOVED,EVT_IGFS_DIR_CREATED.__@param events;public void setEvents(String events) {_        this.events = new HashSet<>()__        Set<String> requestedEvents = new HashSet<>(Arrays.asList(events.toUpperCase().split(",")))__        Field[] fields = EventType.class.getDeclaredFields()__        for (Field field : fields) {_            if (!requestedEvents.contains(field.getName())) {_                continue__            }_            try {_                this.events.add(field.getInt(null))__            } catch (Exception e) {_                throw new IllegalArgumentException("Problem while resolving event type. See stacktrace.", e)__            }_        }_    };the,event,types,to,subscribe,to,as,a,comma,separated,string,of,event,constants,as,defined,in,link,event,type,p,for,example,param,events;public,void,set,events,string,events,this,events,new,hash,set,set,string,requested,events,new,hash,set,arrays,as,list,events,to,upper,case,split,field,fields,event,type,class,get,declared,fields,for,field,field,fields,if,requested,events,contains,field,get,name,continue,try,this,events,add,field,get,int,null,catch,exception,e,throw,new,illegal,argument,exception,problem,while,resolving,event,type,see,stacktrace,e
IgniteEventsEndpoint -> public void setEvents(String events);1547480087;The event types to subscribe to as a comma-separated string of event constants as defined in {@link EventType}._<p>_For example: EVT_CACHE_ENTRY_CREATED,EVT_CACHE_OBJECT_REMOVED,EVT_IGFS_DIR_CREATED.__@param events;public void setEvents(String events) {_        this.events = new HashSet<>()__        Set<String> requestedEvents = new HashSet<>(Arrays.asList(events.toUpperCase().split(",")))__        Field[] fields = EventType.class.getDeclaredFields()__        for (Field field : fields) {_            if (!requestedEvents.contains(field.getName())) {_                continue__            }_            try {_                this.events.add(field.getInt(null))__            } catch (Exception e) {_                throw new IllegalArgumentException("Problem while resolving event type. See stacktrace.", e)__            }_        }_    };the,event,types,to,subscribe,to,as,a,comma,separated,string,of,event,constants,as,defined,in,link,event,type,p,for,example,param,events;public,void,set,events,string,events,this,events,new,hash,set,set,string,requested,events,new,hash,set,arrays,as,list,events,to,upper,case,split,field,fields,event,type,class,get,declared,fields,for,field,field,fields,if,requested,events,contains,field,get,name,continue,try,this,events,add,field,get,int,null,catch,exception,e,throw,new,illegal,argument,exception,problem,while,resolving,event,type,see,stacktrace,e
IgniteEventsEndpoint -> public ClusterGroupExpression getClusterGroupExpression();1492766412;Gets the cluster group expression.__@return cluster group expression;public ClusterGroupExpression getClusterGroupExpression() {_        return clusterGroupExpression__    };gets,the,cluster,group,expression,return,cluster,group,expression;public,cluster,group,expression,get,cluster,group,expression,return,cluster,group,expression
IgniteEventsEndpoint -> public ClusterGroupExpression getClusterGroupExpression();1492766412;Gets the cluster group expression.__@return cluster group expression;public ClusterGroupExpression getClusterGroupExpression() {_        return clusterGroupExpression__    };gets,the,cluster,group,expression,return,cluster,group,expression;public,cluster,group,expression,get,cluster,group,expression,return,cluster,group,expression
IgniteEventsEndpoint -> public ClusterGroupExpression getClusterGroupExpression();1499717928;Gets the cluster group expression.__@return cluster group expression;public ClusterGroupExpression getClusterGroupExpression() {_        return clusterGroupExpression__    };gets,the,cluster,group,expression,return,cluster,group,expression;public,cluster,group,expression,get,cluster,group,expression,return,cluster,group,expression
IgniteEventsEndpoint -> public ClusterGroupExpression getClusterGroupExpression();1540108160;Gets the cluster group expression.__@return cluster group expression;public ClusterGroupExpression getClusterGroupExpression() {_        return clusterGroupExpression__    };gets,the,cluster,group,expression,return,cluster,group,expression;public,cluster,group,expression,get,cluster,group,expression,return,cluster,group,expression
IgniteEventsEndpoint -> public ClusterGroupExpression getClusterGroupExpression();1547241310;Gets the cluster group expression.__@return cluster group expression;public ClusterGroupExpression getClusterGroupExpression() {_        return clusterGroupExpression__    };gets,the,cluster,group,expression,return,cluster,group,expression;public,cluster,group,expression,get,cluster,group,expression,return,cluster,group,expression
IgniteEventsEndpoint -> public ClusterGroupExpression getClusterGroupExpression();1547480087;Gets the cluster group expression.__@return cluster group expression;public ClusterGroupExpression getClusterGroupExpression() {_        return clusterGroupExpression__    };gets,the,cluster,group,expression,return,cluster,group,expression;public,cluster,group,expression,get,cluster,group,expression,return,cluster,group,expression
IgniteEventsEndpoint -> public void setClusterGroupExpression(ClusterGroupExpression clusterGroupExpression);1492766412;The cluster group expression.__@param clusterGroupExpression cluster group expression;public void setClusterGroupExpression(ClusterGroupExpression clusterGroupExpression) {_        this.clusterGroupExpression = clusterGroupExpression__    };the,cluster,group,expression,param,cluster,group,expression,cluster,group,expression;public,void,set,cluster,group,expression,cluster,group,expression,cluster,group,expression,this,cluster,group,expression,cluster,group,expression
IgniteEventsEndpoint -> public void setClusterGroupExpression(ClusterGroupExpression clusterGroupExpression);1492766412;The cluster group expression.__@param clusterGroupExpression cluster group expression;public void setClusterGroupExpression(ClusterGroupExpression clusterGroupExpression) {_        this.clusterGroupExpression = clusterGroupExpression__    };the,cluster,group,expression,param,cluster,group,expression,cluster,group,expression;public,void,set,cluster,group,expression,cluster,group,expression,cluster,group,expression,this,cluster,group,expression,cluster,group,expression
IgniteEventsEndpoint -> public void setClusterGroupExpression(ClusterGroupExpression clusterGroupExpression);1499717928;The cluster group expression.__@param clusterGroupExpression cluster group expression;public void setClusterGroupExpression(ClusterGroupExpression clusterGroupExpression) {_        this.clusterGroupExpression = clusterGroupExpression__    };the,cluster,group,expression,param,cluster,group,expression,cluster,group,expression;public,void,set,cluster,group,expression,cluster,group,expression,cluster,group,expression,this,cluster,group,expression,cluster,group,expression
IgniteEventsEndpoint -> public void setClusterGroupExpression(ClusterGroupExpression clusterGroupExpression);1540108160;The cluster group expression.__@param clusterGroupExpression cluster group expression;public void setClusterGroupExpression(ClusterGroupExpression clusterGroupExpression) {_        this.clusterGroupExpression = clusterGroupExpression__    };the,cluster,group,expression,param,cluster,group,expression,cluster,group,expression;public,void,set,cluster,group,expression,cluster,group,expression,cluster,group,expression,this,cluster,group,expression,cluster,group,expression
IgniteEventsEndpoint -> public void setClusterGroupExpression(ClusterGroupExpression clusterGroupExpression);1547241310;The cluster group expression.__@param clusterGroupExpression cluster group expression;public void setClusterGroupExpression(ClusterGroupExpression clusterGroupExpression) {_        this.clusterGroupExpression = clusterGroupExpression__    };the,cluster,group,expression,param,cluster,group,expression,cluster,group,expression;public,void,set,cluster,group,expression,cluster,group,expression,cluster,group,expression,this,cluster,group,expression,cluster,group,expression
IgniteEventsEndpoint -> public void setClusterGroupExpression(ClusterGroupExpression clusterGroupExpression);1547480087;The cluster group expression.__@param clusterGroupExpression cluster group expression;public void setClusterGroupExpression(ClusterGroupExpression clusterGroupExpression) {_        this.clusterGroupExpression = clusterGroupExpression__    };the,cluster,group,expression,param,cluster,group,expression,cluster,group,expression;public,void,set,cluster,group,expression,cluster,group,expression,cluster,group,expression,this,cluster,group,expression,cluster,group,expression
IgniteEventsEndpoint -> public void setEvents(Set<Integer> events);1450886210;Sets the event types to subscribe to as a {@link Set}.__@param events;public void setEvents(Set<Integer> events) {_        this.events = events__    };sets,the,event,types,to,subscribe,to,as,a,link,set,param,events;public,void,set,events,set,integer,events,this,events,events
IgniteEventsEndpoint -> public void setEvents(Set<Integer> events);1492766412;The event IDs to subscribe to as a Set<Integer> directly where_the IDs are the different constants in org.apache.ignite.events.EventType.__@param events;public void setEvents(Set<Integer> events) {_        this.events = events__    };the,event,ids,to,subscribe,to,as,a,set,integer,directly,where,the,ids,are,the,different,constants,in,org,apache,ignite,events,event,type,param,events;public,void,set,events,set,integer,events,this,events,events
IgniteEventsEndpoint -> public void setEvents(Set<Integer> events);1492766412;The event IDs to subscribe to as a Set<Integer> directly where_the IDs are the different constants in org.apache.ignite.events.EventType.__@param events;public void setEvents(Set<Integer> events) {_        this.events = events__    };the,event,ids,to,subscribe,to,as,a,set,integer,directly,where,the,ids,are,the,different,constants,in,org,apache,ignite,events,event,type,param,events;public,void,set,events,set,integer,events,this,events,events
IgniteEventsEndpoint -> public void setEvents(Set<Integer> events);1499717928;The event IDs to subscribe to as a Set<Integer> directly where_the IDs are the different constants in org.apache.ignite.events.EventType.__@param events;public void setEvents(Set<Integer> events) {_        this.events = events__    };the,event,ids,to,subscribe,to,as,a,set,integer,directly,where,the,ids,are,the,different,constants,in,org,apache,ignite,events,event,type,param,events;public,void,set,events,set,integer,events,this,events,events
IgniteEventsEndpoint -> public void setEvents(Set<Integer> events);1540108160;The event IDs to subscribe to as a Set<Integer> directly where_the IDs are the different constants in org.apache.ignite.events.EventType.__@param events;public void setEvents(Set<Integer> events) {_        this.events = events__    };the,event,ids,to,subscribe,to,as,a,set,integer,directly,where,the,ids,are,the,different,constants,in,org,apache,ignite,events,event,type,param,events;public,void,set,events,set,integer,events,this,events,events
IgniteEventsEndpoint -> public void setEvents(Set<Integer> events);1547241310;The event IDs to subscribe to as a Set<Integer> directly where_the IDs are the different constants in org.apache.ignite.events.EventType.__@param events;public void setEvents(Set<Integer> events) {_        this.events = events__    };the,event,ids,to,subscribe,to,as,a,set,integer,directly,where,the,ids,are,the,different,constants,in,org,apache,ignite,events,event,type,param,events;public,void,set,events,set,integer,events,this,events,events
IgniteEventsEndpoint -> public void setEvents(Set<Integer> events);1547480087;The event IDs to subscribe to as a Set<Integer> directly where_the IDs are the different constants in org.apache.ignite.events.EventType.__@param events;public void setEvents(Set<Integer> events) {_        this.events = events__    };the,event,ids,to,subscribe,to,as,a,set,integer,directly,where,the,ids,are,the,different,constants,in,org,apache,ignite,events,event,type,param,events;public,void,set,events,set,integer,events,this,events,events
