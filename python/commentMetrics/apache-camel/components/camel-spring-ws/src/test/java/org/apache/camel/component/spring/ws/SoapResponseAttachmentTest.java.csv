# id;timestamp;commentText;codeText;commentWords;codeWords
SoapResponseAttachmentTest -> @Test()     public void consumeStockQuoteWebserviceWithSoapHeader() throws Exception;1483962941;This tests if attachments, returned by a spring-ws request, are populated into the exchange._The SOAP attachments are populated by the SoapAttachmentResponseProcessor._Which adds 2 response attachments._Note: 'allowResponseAttachmentOverride=true' must be set!__@throws Exception;@Test()_    public void consumeStockQuoteWebserviceWithSoapHeader() throws Exception {_        Exchange result = template.request("direct:stockQuoteWebservice", new Processor() {__            @Override_            public void process(Exchange exchange) throws Exception {_                exchange.getIn().setBody(xmlRequestForGoogleStockQuote)__                exchange.getIn().setHeader(SpringWebserviceConstants.SPRING_WS_SOAP_HEADER, soapHeader)__                exchange.getIn().addAttachment("requestAttachment1.txt", new DataHandler("hello attachment!", "text/plain"))__            }_        })__        assertNotNull(result)__        assertNotNull(result.getOut().getAttachment("requestAttachment1.txt"))__        assertNotNull(result.getOut().getAttachment("responseAttachment1.txt"))__        assertNotNull(result.getOut().getAttachment("responseAttachment2.xml"))__    };this,tests,if,attachments,returned,by,a,spring,ws,request,are,populated,into,the,exchange,the,soap,attachments,are,populated,by,the,soap,attachment,response,processor,which,adds,2,response,attachments,note,allow,response,attachment,override,true,must,be,set,throws,exception;test,public,void,consume,stock,quote,webservice,with,soap,header,throws,exception,exchange,result,template,request,direct,stock,quote,webservice,new,processor,override,public,void,process,exchange,exchange,throws,exception,exchange,get,in,set,body,xml,request,for,google,stock,quote,exchange,get,in,set,header,spring,webservice,constants,soap,header,exchange,get,in,add,attachment,request,attachment1,txt,new,data,handler,hello,attachment,text,plain,assert,not,null,result,assert,not,null,result,get,out,get,attachment,request,attachment1,txt,assert,not,null,result,get,out,get,attachment,response,attachment1,txt,assert,not,null,result,get,out,get,attachment,response,attachment2,xml
SoapResponseAttachmentTest -> @Test()     public void consumeStockQuoteWebserviceWithSoapHeader() throws Exception;1483962941;This tests if attachments, returned by a spring-ws request, are populated into the exchange._The SOAP attachments are populated by the SoapAttachmentResponseProcessor._Which adds 2 response attachments._Note: 'allowResponseAttachmentOverride=true' must be set!__@throws Exception;@Test()_    public void consumeStockQuoteWebserviceWithSoapHeader() throws Exception {_        Exchange result = template.request("direct:stockQuoteWebservice", new Processor() {__            @Override_            public void process(Exchange exchange) throws Exception {_                exchange.getIn().setBody(xmlRequestForGoogleStockQuote)__                exchange.getIn().setHeader(SpringWebserviceConstants.SPRING_WS_SOAP_HEADER, soapHeader)__                exchange.getIn().addAttachment("requestAttachment1.txt", new DataHandler("hello attachment!", "text/plain"))__            }_        })__        assertNotNull(result)__        assertNotNull(result.getOut().getAttachment("requestAttachment1.txt"))__        assertNotNull(result.getOut().getAttachment("responseAttachment1.txt"))__        assertNotNull(result.getOut().getAttachment("responseAttachment2.xml"))__    };this,tests,if,attachments,returned,by,a,spring,ws,request,are,populated,into,the,exchange,the,soap,attachments,are,populated,by,the,soap,attachment,response,processor,which,adds,2,response,attachments,note,allow,response,attachment,override,true,must,be,set,throws,exception;test,public,void,consume,stock,quote,webservice,with,soap,header,throws,exception,exchange,result,template,request,direct,stock,quote,webservice,new,processor,override,public,void,process,exchange,exchange,throws,exception,exchange,get,in,set,body,xml,request,for,google,stock,quote,exchange,get,in,set,header,spring,webservice,constants,soap,header,exchange,get,in,add,attachment,request,attachment1,txt,new,data,handler,hello,attachment,text,plain,assert,not,null,result,assert,not,null,result,get,out,get,attachment,request,attachment1,txt,assert,not,null,result,get,out,get,attachment,response,attachment1,txt,assert,not,null,result,get,out,get,attachment,response,attachment2,xml
SoapResponseAttachmentTest -> @Test()     public void consumeStockQuoteWebserviceWithSoapResponseAttachment() throws Exception;1483962941;This tests if attachments, returned by a spring-ws request, are populated into the exchange._The SOAP attachments are populated by the SoapAttachmentResponseProcessor._Which adds 2 response attachments._Note: 'allowResponseAttachmentOverride=true' must be set!__@throws Exception;@Test()_    public void consumeStockQuoteWebserviceWithSoapResponseAttachment() throws Exception {_        Exchange result = template.request("direct:stockQuoteWebservice", new Processor() {__            @Override_            public void process(Exchange exchange) throws Exception {_                exchange.getIn().setBody(xmlRequestForGoogleStockQuote)__                exchange.getIn().setHeader(SpringWebserviceConstants.SPRING_WS_SOAP_HEADER, soapHeader)__                exchange.getIn().addAttachment("requestAttachment1.txt", new DataHandler("hello attachment!", "text/plain"))__            }_        })__        assertNotNull(result)__        assertNotNull(result.getOut().getAttachment("requestAttachment1.txt"))__        assertNotNull(result.getOut().getAttachment("responseAttachment1.txt"))__        assertNotNull(result.getOut().getAttachment("responseAttachment2.xml"))__    };this,tests,if,attachments,returned,by,a,spring,ws,request,are,populated,into,the,exchange,the,soap,attachments,are,populated,by,the,soap,attachment,response,processor,which,adds,2,response,attachments,note,allow,response,attachment,override,true,must,be,set,throws,exception;test,public,void,consume,stock,quote,webservice,with,soap,response,attachment,throws,exception,exchange,result,template,request,direct,stock,quote,webservice,new,processor,override,public,void,process,exchange,exchange,throws,exception,exchange,get,in,set,body,xml,request,for,google,stock,quote,exchange,get,in,set,header,spring,webservice,constants,soap,header,exchange,get,in,add,attachment,request,attachment1,txt,new,data,handler,hello,attachment,text,plain,assert,not,null,result,assert,not,null,result,get,out,get,attachment,request,attachment1,txt,assert,not,null,result,get,out,get,attachment,response,attachment1,txt,assert,not,null,result,get,out,get,attachment,response,attachment2,xml
SoapResponseAttachmentTest -> @Test()     public void consumeStockQuoteWebserviceWithSoapResponseAttachment() throws Exception;1537290824;This tests if attachments, returned by a spring-ws request, are populated into the exchange._The SOAP attachments are populated by the SoapAttachmentResponseProcessor._Which adds 2 response attachments._Note: 'allowResponseAttachmentOverride=true' must be set!__@throws Exception;@Test()_    public void consumeStockQuoteWebserviceWithSoapResponseAttachment() throws Exception {_        Exchange result = template.request("direct:stockQuoteWebservice", new Processor() {__            @Override_            public void process(Exchange exchange) throws Exception {_                exchange.getIn().setBody(xmlRequestForGoogleStockQuote)__                exchange.getIn().setHeader(SpringWebserviceConstants.SPRING_WS_SOAP_HEADER, soapHeader)__                exchange.getIn().addAttachment("requestAttachment1.txt", new DataHandler("hello attachment!", "text/plain"))__            }_        })__        assertNotNull(result)__        assertNotNull(result.getOut().getAttachment("requestAttachment1.txt"))__        assertNotNull(result.getOut().getAttachment("responseAttachment1.txt"))__        assertNotNull(result.getOut().getAttachment("responseAttachment2.xml"))__    };this,tests,if,attachments,returned,by,a,spring,ws,request,are,populated,into,the,exchange,the,soap,attachments,are,populated,by,the,soap,attachment,response,processor,which,adds,2,response,attachments,note,allow,response,attachment,override,true,must,be,set,throws,exception;test,public,void,consume,stock,quote,webservice,with,soap,response,attachment,throws,exception,exchange,result,template,request,direct,stock,quote,webservice,new,processor,override,public,void,process,exchange,exchange,throws,exception,exchange,get,in,set,body,xml,request,for,google,stock,quote,exchange,get,in,set,header,spring,webservice,constants,soap,header,exchange,get,in,add,attachment,request,attachment1,txt,new,data,handler,hello,attachment,text,plain,assert,not,null,result,assert,not,null,result,get,out,get,attachment,request,attachment1,txt,assert,not,null,result,get,out,get,attachment,response,attachment1,txt,assert,not,null,result,get,out,get,attachment,response,attachment2,xml
