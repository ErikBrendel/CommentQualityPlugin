commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Before public void setUp() throws Exception {     super.setUp().     sender = getMandatoryBean(OutputChannelReceiver.class, "senderReceiver").     sender.clear(). }
false;public,static;0;4;;@BeforeClass public static void setUpConstants() throws Exception {     anonymousUri = new URI("http://www.w3.org/2005/08/addressing/anonymous"). }
false;public;0;14;;@Test public void testDefaultReplyTo() throws Exception {     template.requestBody("direct:defaultOk", xmlBody).     assertNotNull(sender.getMessageContext()).     // check default actions     Assertions.assertThat(sender.getMessageContext()).isNotNull().     MessageAddressingProperties wsaProperties = TestUtil.getWSAProperties((SoapMessage) sender.getMessageContext().getRequest()).     Assertions.assertThat(wsaProperties).isNotNull().     Assertions.assertThat(wsaProperties.getReplyTo().getAddress()).isEqualTo(anonymousUri).     Assertions.assertThat(wsaProperties.getFaultTo().getAddress()).isEqualTo(anonymousUri). }
false;public;0;13;;@Test public void testDefaulFaultTo() throws Exception {     template.requestBody("direct:defaultFault", xmlBody).     assertNotNull(sender.getMessageContext()).     // check default actions     Assertions.assertThat(sender.getMessageContext()).isNotNull().     MessageAddressingProperties wsaProperties = TestUtil.getWSAProperties((SoapMessage) sender.getMessageContext().getRequest()).     Assertions.assertThat(wsaProperties).isNotNull().     Assertions.assertThat(wsaProperties.getReplyTo().getAddress()).isEqualTo(anonymousUri).     Assertions.assertThat(wsaProperties.getFaultTo().getAddress()).isEqualTo(anonymousUri). }
false;public;0;14;;@Test public void testReplyTo() throws Exception {     template.requestBody("direct:replyTo", xmlBody).     assertNotNull(sender.getMessageContext()).     // check default actions     Assertions.assertThat(sender.getMessageContext()).isNotNull().     MessageAddressingProperties wsaProperties = TestUtil.getWSAProperties((SoapMessage) sender.getMessageContext().getRequest()).     Assertions.assertThat(wsaProperties).isNotNull().     Assertions.assertThat(wsaProperties.getReplyTo().getAddress()).isEqualTo(new URI("mailto://replyTo@chocolatejar.eu")).     Assertions.assertThat(wsaProperties.getFaultTo().getAddress()).isEqualTo(new URI("http://fault.to")). }
false;public;0;14;;@Test public void testFaultTo() throws Exception {     template.requestBody("direct:faultTo", xmlBody).     assertNotNull(sender.getMessageContext()).     // check default actions     Assertions.assertThat(sender.getMessageContext()).isNotNull().     MessageAddressingProperties wsaProperties = TestUtil.getWSAProperties((SoapMessage) sender.getMessageContext().getRequest()).     Assertions.assertThat(wsaProperties).isNotNull().     Assertions.assertThat(wsaProperties.getReplyTo().getAddress()).isEqualTo(anonymousUri).     Assertions.assertThat(wsaProperties.getFaultTo().getAddress()).isEqualTo(new URI("http://fault.to")). }
false;public;0;14;;@Test public void testFaultFollowsReply() throws Exception {     template.requestBody("direct:omittedFaultTo", xmlBody).     assertNotNull(sender.getMessageContext()).     // check default actions     Assertions.assertThat(sender.getMessageContext()).isNotNull().     MessageAddressingProperties wsaProperties = TestUtil.getWSAProperties((SoapMessage) sender.getMessageContext().getRequest()).     Assertions.assertThat(wsaProperties).isNotNull().     Assertions.assertThat(wsaProperties.getReplyTo().getAddress()).isEqualTo(new URI("http://reply.to")).     Assertions.assertThat(wsaProperties.getFaultTo().getAddress()).isEqualTo(new URI("http://reply.to")). }
false;public;0;14;;@Test public void testReplyDoesntFollowFault() throws Exception {     template.requestBody("direct:omittedReplyTo", xmlBody).     assertNotNull(sender.getMessageContext()).     // check default actions     Assertions.assertThat(sender.getMessageContext()).isNotNull().     MessageAddressingProperties wsaProperties = TestUtil.getWSAProperties((SoapMessage) sender.getMessageContext().getRequest()).     Assertions.assertThat(wsaProperties).isNotNull().     Assertions.assertThat(wsaProperties.getReplyTo().getAddress()).isEqualTo(anonymousUri).     Assertions.assertThat(wsaProperties.getFaultTo().getAddress()).isEqualTo(new URI("http://fault.to")). }
false;public;0;15;;@Test public void testEmptyReplyAndFaultAndActionMustBePresent() throws Exception {     template.requestBody("direct:empty", xmlBody).     assertNotNull(sender.getMessageContext()).     // check default actions     Assertions.assertThat(sender.getMessageContext()).isNotNull().     MessageAddressingProperties wsaProperties = TestUtil.getWSAProperties((SoapMessage) sender.getMessageContext().getRequest()).     Assertions.assertThat(wsaProperties).isNotNull().     Assertions.assertThat(wsaProperties.getAction()).isEqualTo(new URI("http://turnOnWSA.com")).     Assertions.assertThat(wsaProperties.getReplyTo().getAddress()).isEqualTo(anonymousUri).     Assertions.assertThat(wsaProperties.getFaultTo().getAddress()).isEqualTo(anonymousUri). }
false;public;0;11;;@Test public void testNoAction() throws Exception {     template.requestBody("direct:noAction", xmlBody).     assertNotNull(sender.getMessageContext()).     // WSA is not supported, if there is no ws action     Assertions.assertThat(sender.getMessageContext()).isNotNull().     MessageAddressingProperties wsaProperties = TestUtil.getWSAProperties((SoapMessage) sender.getMessageContext().getRequest()).     Assertions.assertThat(wsaProperties).isNull(). }
false;protected;0;4;;@Override protected AbstractXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext(new String[] { "org/apache/camel/component/spring/ws/addresing/ProducerParamsBasicTest-context.xml" }). }
