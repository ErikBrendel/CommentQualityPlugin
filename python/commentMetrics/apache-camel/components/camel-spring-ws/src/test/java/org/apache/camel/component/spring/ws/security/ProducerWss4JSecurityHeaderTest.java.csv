commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Override @Before public void setUp() throws Exception {     super.setUp().     webServiceTemplate = applicationContext.getBean("webServiceTemplate", WebServiceTemplate.class). }
false;public;0;13;;@Test public void testResponseUsingWss4jSampleInterceptorWithoutHeadersRemoved() throws Exception {     setRemoveHeaders(false).     PlusResponse result = createSampleRequestResponsePair().     assertNotNull(result).     assertEquals(3, result.getResult()).     assertTrue(ProducerWss4JSecurityHeaderTestInterceptor.isX509DataPresent). }
false;public;0;13;;@Test public void testResponseUsingWss4jSampleInterceptorWithHeadersRemoved() throws Exception {     setRemoveHeaders(true).     PlusResponse result = createSampleRequestResponsePair().     assertNotNull(result).     assertEquals(3, result.getResult()).     assertTrue(ProducerWss4JSecurityHeaderTestInterceptor.isX509DataPresent). }
false;private;0;9;;private PlusResponse createSampleRequestResponsePair() {     PlusRequest request = new PlusRequest().     request.setA(new Integer(1)).     request.setB(new Integer(2)).     PlusResponse result = (PlusResponse) template.requestBody("direct:testHeader", request).     return result. }
false;private;1;11;;private void setRemoveHeaders(boolean isRemoved) {     ClientInterceptor[] clientInterceptors = webServiceTemplate.getInterceptors().     for (ClientInterceptor clientInterceptor : clientInterceptors) {         if (clientInterceptor instanceof Wss4jSecurityInterceptor) {             Wss4jSecurityInterceptor wss4jSampleInterceptor = (Wss4jSecurityInterceptor) clientInterceptor.             wss4jSampleInterceptor.setRemoveSecurityHeader(isRemoved).         }     } }
false;protected;0;5;;@Override protected AbstractXmlApplicationContext createApplicationContext() {     return new ClassPathXmlApplicationContext("org/apache/camel/component/spring/ws/security/ProducerWss4JSecurityHeaderTest-context.xml"). }
