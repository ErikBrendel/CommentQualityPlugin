commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public WebServiceMessageReceiver getWebServiceMessageReceiver() {     return super.getWebServiceMessageReceiver(). }
false;public;1;4;;@Override public void setWebServiceMessageReceiver(WebServiceMessageReceiver webServiceMessageReceiver) {     super.setWebServiceMessageReceiver(webServiceMessageReceiver). }
false;public;1;5;;@Override public void receive(MessageContext messageContext) throws Exception {     decorator.receive(messageContext).     original.receive(messageContext). }
false;public;0;11;;public void decorateResponseReceiver() {     final WebServiceMessageReceiver original = getWebServiceMessageReceiver().     setWebServiceMessageReceiver(new WebServiceMessageReceiver() {          @Override         public void receive(MessageContext messageContext) throws Exception {             decorator.receive(messageContext).             original.receive(messageContext).         }     }). }
true;public;0;7;/*      * (non-Javadoc)      * @see net.javacrumbs.springws.test.helper.InMemoryWebServiceMessageSender#      * afterPropertiesSet()      */ ;/*      * (non-Javadoc)      * @see net.javacrumbs.springws.test.helper.InMemoryWebServiceMessageSender#      * afterPropertiesSet()      */ @Override public void afterPropertiesSet() {     super.afterPropertiesSet().     if (decorator != null) {         decorateResponseReceiver().     } }
true;public;0;3;/**  * * @return Returns the decorator.  */ ;/**  * * @return Returns the decorator.  */ public WebServiceMessageReceiver getDecorator() {     return decorator. }
true;public;1;3;/**  * @param decorator The decorator to set.  */ ;/**  * @param decorator The decorator to set.  */ public void setDecorator(WebServiceMessageReceiver decorator) {     this.decorator = decorator. }
