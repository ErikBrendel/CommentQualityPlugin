commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Test(timeout = 5000) public void consumeStockQuoteWebserviceWithDefaultTemplate() throws Exception {     Object result = template.requestBody("direct:stockQuoteWebserviceWithDefaultTemplate", xmlRequestForGoogleStockQuote).     assertNotNull(result).     assertTrue(result instanceof Source). }
false;public;0;7;;@Test(timeout = 5000) public void consumeStockQuoteWebservice() throws Exception {     Object result = template.requestBody("direct:stockQuoteWebservice", xmlRequestForGoogleStockQuote).     assertNotNull(result).     assertTrue(result instanceof Source). }
false;public;0;7;;@Test(timeout = 5000) public void consumeStockQuoteWebserviceWithCamelStringSourceInput() throws Exception {     Object result = template.requestBody("direct:stockQuoteWebservice", new StringSource(xmlRequestForGoogleStockQuote)).     assertNotNull(result).     assertTrue(result instanceof Source). }
false;public;0;7;;@Test(timeout = 5000) public void consumeStockQuoteWebserviceWithNonDefaultMessageFactory() throws Exception {     Object result = template.requestBody("direct:stockQuoteWebserviceWithNonDefaultMessageFactory", xmlRequestForGoogleStockQuote).     assertNotNull(result).     assertTrue(result instanceof Source). }
false;public;0;9;;@Test(timeout = 5000) public void consumeStockQuoteWebserviceAndConvertResult() throws Exception {     Object result = template.requestBody("direct:stockQuoteWebserviceAsString", xmlRequestForGoogleStockQuote).     assertNotNull(result).     assertTrue(result instanceof String).     String resultMessage = (String) result.     assertTrue(resultMessage.contains("Google Inc.")). }
false;public;0;10;;@Test(timeout = 5000) public void consumeStockQuoteWebserviceAndProvideEndpointUriByHeader() throws Exception {     Object result = template.requestBodyAndHeader("direct:stockQuoteWebserviceWithoutDefaultUri", xmlRequestForGoogleStockQuote, SpringWebserviceConstants.SPRING_WS_ENDPOINT_URI, stockQuoteWebserviceUri).     assertNotNull(result).     assertTrue(result instanceof String).     String resultMessage = (String) result.     assertTrue(resultMessage.contains("Google Inc.")). }
