commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Test public void consumeStockQuoteWebserviceWithDefaultTemplate() throws Exception {     Object result = template.requestBody("direct:stockQuoteWebserviceWithDefaultTemplate", xmlRequestForGoogleStockQuote).     assertNotNull(result).     assertTrue(result instanceof Source). }
false;public;0;9;;@Test public void consumeStockQuoteWebserviceAndPreserveHeaders() throws Exception {     resultEndpoint.expectedHeaderReceived("helloHeader", "hello world!").     Object result = template.requestBodyAndHeader("direct:stockQuoteWebserviceMock", xmlRequestForGoogleStockQuote, "helloHeader", "hello world!").     assertNotNull(result).     resultEndpoint.assertIsSatisfied(). }
false;public;0;7;;@Test public void consumeStockQuoteWebservice() throws Exception {     Object result = template.requestBody("direct:stockQuoteWebservice", xmlRequestForGoogleStockQuote).     assertNotNull(result).     assertTrue(result instanceof Source). }
false;public;0;7;;@Test public void consumeStockQuoteWebserviceWithCamelStringSourceInput() throws Exception {     Object result = template.requestBody("direct:stockQuoteWebservice", new StringSource(xmlRequestForGoogleStockQuote)).     assertNotNull(result).     assertTrue(result instanceof Source). }
false;public;0;7;;@Test public void consumeStockQuoteWebserviceWithNonDefaultMessageFactory() throws Exception {     Object result = template.requestBody("direct:stockQuoteWebserviceWithNonDefaultMessageFactory", xmlRequestForGoogleStockQuote).     assertNotNull(result).     assertTrue(result instanceof Source). }
false;public;0;9;;@Test public void consumeStockQuoteWebserviceAndConvertResult() throws Exception {     Object result = template.requestBody("direct:stockQuoteWebserviceAsString", xmlRequestForGoogleStockQuote).     assertNotNull(result).     assertTrue(result instanceof String).     String resultMessage = (String) result.     assertTrue(resultMessage.contains("Google Inc.")). }
false;public;0;10;;@Test public void consumeStockQuoteWebserviceAndProvideEndpointUriByHeader() throws Exception {     Object result = template.requestBodyAndHeader("direct:stockQuoteWebserviceWithoutDefaultUri", xmlRequestForGoogleStockQuote, SpringWebserviceConstants.SPRING_WS_ENDPOINT_URI, stockQuoteWebserviceUri).     assertNotNull(result).     assertTrue(result instanceof String).     String resultMessage = (String) result.     assertTrue(resultMessage.contains("Google Inc.")). }
false;public;0;20;;@Test public void consumeStockQuoteWebserviceInOnly() throws Exception {     inOnlyEndpoint.expectedExchangePattern(ExchangePattern.InOnly).     inOnlyEndpoint.expectedMessageCount(1).     template.sendBodyAndHeader("direct:stockQuoteWebserviceInOnly", xmlRequestForGoogleStockQuote, "foo", "bar").     inOnlyEndpoint.assertIsSatisfied().     Message in = inOnlyEndpoint.getReceivedExchanges().get(0).getIn().     Object result = in.getBody().     assertNotNull(result).     assertTrue(result instanceof String).     String resultMessage = (String) result.     assertTrue(resultMessage.contains("Google Inc.")).     Object bar = in.getHeader("foo").     assertEquals("The header value should have been preserved", "bar", bar). }
