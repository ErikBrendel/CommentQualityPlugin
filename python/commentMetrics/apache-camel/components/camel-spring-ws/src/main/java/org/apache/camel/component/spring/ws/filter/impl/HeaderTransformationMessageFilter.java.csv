# id;timestamp;commentText;codeText;commentWords;codeWords
HeaderTransformationMessageFilter -> private void addParameters(Message inOrOut, Transformer transformer);1509636011;Adding the headers of the message as parameter to the transformer__@param inOrOut_@param transformer;private void addParameters(Message inOrOut, Transformer transformer) {_        Map<String, Object> headers = inOrOut.getHeaders()__        for (Map.Entry<String, Object> headerEntry : headers.entrySet()) {_            String key = headerEntry.getKey()___            _            if (key != null && !key.startsWith("$")) {_                transformer.setParameter(key, String.valueOf(headerEntry.getValue()))__            }_        }_    };adding,the,headers,of,the,message,as,parameter,to,the,transformer,param,in,or,out,param,transformer;private,void,add,parameters,message,in,or,out,transformer,transformer,map,string,object,headers,in,or,out,get,headers,for,map,entry,string,object,header,entry,headers,entry,set,string,key,header,entry,get,key,if,key,null,key,starts,with,transformer,set,parameter,key,string,value,of,header,entry,get,value
HeaderTransformationMessageFilter -> private void addParameters(Message inOrOut, Transformer transformer);1524063178;Adding the headers of the message as parameter to the transformer__@param inOrOut_@param transformer;private void addParameters(Message inOrOut, Transformer transformer) {_        Map<String, Object> headers = inOrOut.getHeaders()__        for (Map.Entry<String, Object> headerEntry : headers.entrySet()) {_            String key = headerEntry.getKey()___            _            if (key != null && !key.startsWith("$")) {_                transformer.setParameter(key, String.valueOf(headerEntry.getValue()))__            }_        }_    };adding,the,headers,of,the,message,as,parameter,to,the,transformer,param,in,or,out,param,transformer;private,void,add,parameters,message,in,or,out,transformer,transformer,map,string,object,headers,in,or,out,get,headers,for,map,entry,string,object,header,entry,headers,entry,set,string,key,header,entry,get,key,if,key,null,key,starts,with,transformer,set,parameter,key,string,value,of,header,entry,get,value
HeaderTransformationMessageFilter -> private void addParameters(Message inOrOut, Transformer transformer);1540108163;Adding the headers of the message as parameter to the transformer__@param inOrOut_@param transformer;private void addParameters(Message inOrOut, Transformer transformer) {_        Map<String, Object> headers = inOrOut.getHeaders()__        for (Map.Entry<String, Object> headerEntry : headers.entrySet()) {_            String key = headerEntry.getKey()___            _            if (key != null && !key.startsWith("$")) {_                transformer.setParameter(key, String.valueOf(headerEntry.getValue()))__            }_        }_    };adding,the,headers,of,the,message,as,parameter,to,the,transformer,param,in,or,out,param,transformer;private,void,add,parameters,message,in,or,out,transformer,transformer,map,string,object,headers,in,or,out,get,headers,for,map,entry,string,object,header,entry,headers,entry,set,string,key,header,entry,get,key,if,key,null,key,starts,with,transformer,set,parameter,key,string,value,of,header,entry,get,value
HeaderTransformationMessageFilter -> private void addParameters(Message inOrOut, Transformer transformer);1544001042;Adding the headers of the message as parameter to the transformer__@param inOrOut_@param transformer;private void addParameters(Message inOrOut, Transformer transformer) {_        Map<String, Object> headers = inOrOut.getHeaders()__        for (Map.Entry<String, Object> headerEntry : headers.entrySet()) {_            String key = headerEntry.getKey()___            _            if (key != null && !key.startsWith("$")) {_                transformer.setParameter(key, String.valueOf(headerEntry.getValue()))__            }_        }_    };adding,the,headers,of,the,message,as,parameter,to,the,transformer,param,in,or,out,param,transformer;private,void,add,parameters,message,in,or,out,transformer,transformer,map,string,object,headers,in,or,out,get,headers,for,map,entry,string,object,header,entry,headers,entry,set,string,key,header,entry,get,key,if,key,null,key,starts,with,transformer,set,parameter,key,string,value,of,header,entry,get,value
HeaderTransformationMessageFilter -> private void addParameters(Message inOrOut, Transformer transformer);1548606483;Adding the headers of the message as parameter to the transformer__@param inOrOut_@param transformer;private void addParameters(Message inOrOut, Transformer transformer) {_        Map<String, Object> headers = inOrOut.getHeaders()__        for (Map.Entry<String, Object> headerEntry : headers.entrySet()) {_            String key = headerEntry.getKey()___            _            if (key != null && !key.startsWith("$")) {_                transformer.setParameter(key, String.valueOf(headerEntry.getValue()))__            }_        }_    };adding,the,headers,of,the,message,as,parameter,to,the,transformer,param,in,or,out,param,transformer;private,void,add,parameters,message,in,or,out,transformer,transformer,map,string,object,headers,in,or,out,get,headers,for,map,entry,string,object,header,entry,headers,entry,set,string,key,header,entry,get,key,if,key,null,key,starts,with,transformer,set,parameter,key,string,value,of,header,entry,get,value
HeaderTransformationMessageFilter -> private TransformerFactory getSaxonTransformerFactory(CamelContext context);1509636011;Loading the saxon transformer class__@param context_@return;private TransformerFactory getSaxonTransformerFactory(CamelContext context) {_        final ClassResolver resolver = context.getClassResolver()__        try {_            Class<TransformerFactory> factoryClass = resolver.resolveMandatoryClass(_                    XsltEndpoint.SAXON_TRANSFORMER_FACTORY_CLASS_NAME, TransformerFactory.class,_                    XsltComponent.class.getClassLoader())___            if (factoryClass != null) {_                return ObjectHelper.newInstance(factoryClass)__            }__        } catch (ClassNotFoundException e) {_            throw new RuntimeException("Cannot load the saxon transformer class", e)__        }__        return null__    };loading,the,saxon,transformer,class,param,context,return;private,transformer,factory,get,saxon,transformer,factory,camel,context,context,final,class,resolver,resolver,context,get,class,resolver,try,class,transformer,factory,factory,class,resolver,resolve,mandatory,class,xslt,endpoint,transformer,factory,class,xslt,component,class,get,class,loader,if,factory,class,null,return,object,helper,new,instance,factory,class,catch,class,not,found,exception,e,throw,new,runtime,exception,cannot,load,the,saxon,transformer,class,e,return,null
HeaderTransformationMessageFilter -> private TransformerFactory getSaxonTransformerFactory(CamelContext context);1524063178;Loading the saxon transformer class__@param context_@return;private TransformerFactory getSaxonTransformerFactory(CamelContext context) {_        final ClassResolver resolver = context.getClassResolver()__        try {_            Class<TransformerFactory> factoryClass = resolver.resolveMandatoryClass(_                    XsltEndpoint.SAXON_TRANSFORMER_FACTORY_CLASS_NAME, TransformerFactory.class,_                    XsltComponent.class.getClassLoader())___            if (factoryClass != null) {_                return ObjectHelper.newInstance(factoryClass)__            }__        } catch (ClassNotFoundException e) {_            throw new RuntimeException("Cannot load the saxon transformer class", e)__        }__        return null__    };loading,the,saxon,transformer,class,param,context,return;private,transformer,factory,get,saxon,transformer,factory,camel,context,context,final,class,resolver,resolver,context,get,class,resolver,try,class,transformer,factory,factory,class,resolver,resolve,mandatory,class,xslt,endpoint,transformer,factory,class,xslt,component,class,get,class,loader,if,factory,class,null,return,object,helper,new,instance,factory,class,catch,class,not,found,exception,e,throw,new,runtime,exception,cannot,load,the,saxon,transformer,class,e,return,null
HeaderTransformationMessageFilter -> private TransformerFactory getSaxonTransformerFactory(CamelContext context);1540108163;Loading the saxon transformer class__@param context_@return;private TransformerFactory getSaxonTransformerFactory(CamelContext context) {_        final ClassResolver resolver = context.getClassResolver()__        try {_            Class<TransformerFactory> factoryClass = resolver.resolveMandatoryClass(_                    XsltEndpoint.SAXON_TRANSFORMER_FACTORY_CLASS_NAME, TransformerFactory.class,_                    XsltComponent.class.getClassLoader())___            if (factoryClass != null) {_                return ObjectHelper.newInstance(factoryClass)__            }__        } catch (ClassNotFoundException e) {_            throw new RuntimeException("Cannot load the saxon transformer class", e)__        }__        return null__    };loading,the,saxon,transformer,class,param,context,return;private,transformer,factory,get,saxon,transformer,factory,camel,context,context,final,class,resolver,resolver,context,get,class,resolver,try,class,transformer,factory,factory,class,resolver,resolve,mandatory,class,xslt,endpoint,transformer,factory,class,xslt,component,class,get,class,loader,if,factory,class,null,return,object,helper,new,instance,factory,class,catch,class,not,found,exception,e,throw,new,runtime,exception,cannot,load,the,saxon,transformer,class,e,return,null
HeaderTransformationMessageFilter -> private TransformerFactory getSaxonTransformerFactory(CamelContext context);1544001042;Loading the saxon transformer class__@param context_@return;private TransformerFactory getSaxonTransformerFactory(CamelContext context) {_        final ClassResolver resolver = context.getClassResolver()__        try {_            Class<TransformerFactory> factoryClass = resolver.resolveMandatoryClass(_                    XsltEndpoint.SAXON_TRANSFORMER_FACTORY_CLASS_NAME, TransformerFactory.class,_                    XsltComponent.class.getClassLoader())___            if (factoryClass != null) {_                return ObjectHelper.newInstance(factoryClass)__            }__        } catch (ClassNotFoundException e) {_            throw new RuntimeException("Cannot load the saxon transformer class", e)__        }__        return null__    };loading,the,saxon,transformer,class,param,context,return;private,transformer,factory,get,saxon,transformer,factory,camel,context,context,final,class,resolver,resolver,context,get,class,resolver,try,class,transformer,factory,factory,class,resolver,resolve,mandatory,class,xslt,endpoint,transformer,factory,class,xslt,component,class,get,class,loader,if,factory,class,null,return,object,helper,new,instance,factory,class,catch,class,not,found,exception,e,throw,new,runtime,exception,cannot,load,the,saxon,transformer,class,e,return,null
HeaderTransformationMessageFilter -> private TransformerFactory getSaxonTransformerFactory(CamelContext context);1548606483;Loading the saxon transformer class__@param context_@return;private TransformerFactory getSaxonTransformerFactory(CamelContext context) {_        final ClassResolver resolver = context.getClassResolver()__        try {_            Class<TransformerFactory> factoryClass = resolver.resolveMandatoryClass(_                    XsltEndpoint.SAXON_TRANSFORMER_FACTORY_CLASS_NAME, TransformerFactory.class,_                    XsltComponent.class.getClassLoader())___            if (factoryClass != null) {_                return ObjectHelper.newInstance(factoryClass)__            }__        } catch (ClassNotFoundException e) {_            throw new RuntimeException("Cannot load the saxon transformer class", e)__        }__        return null__    };loading,the,saxon,transformer,class,param,context,return;private,transformer,factory,get,saxon,transformer,factory,camel,context,context,final,class,resolver,resolver,context,get,class,resolver,try,class,transformer,factory,factory,class,resolver,resolve,mandatory,class,xslt,endpoint,transformer,factory,class,xslt,component,class,get,class,loader,if,factory,class,null,return,object,helper,new,instance,factory,class,catch,class,not,found,exception,e,throw,new,runtime,exception,cannot,load,the,saxon,transformer,class,e,return,null
HeaderTransformationMessageFilter -> private TransformerFactory getTransformerFactory(CamelContext context);1509636011;Getting a {@link TransformerFactory} with logging__@return {@link TransformerFactory};private TransformerFactory getTransformerFactory(CamelContext context) {_        TransformerFactory transformerFactory = null__        if (saxon) {_            transformerFactory = getSaxonTransformerFactory(context)__        } else {_            transformerFactory = TransformerFactory.newInstance()__        }__        if (transformerFactory == null) {_            throw new IllegalStateException("Cannot resolve a transformer factory")__        }__        transformerFactory.setErrorListener(new ErrorListener() {__            @Override_            public void warning(TransformerException exception) throws TransformerException {_                LOG.warn(SOAP_HEADER_TRANSFORMATION_PROBLEM, exception)__            }__            @Override_            public void fatalError(TransformerException exception) throws TransformerException {_                LOG.error(SOAP_HEADER_TRANSFORMATION_PROBLEM, exception)__            }__            @Override_            public void error(TransformerException exception) throws TransformerException {_                LOG.error(SOAP_HEADER_TRANSFORMATION_PROBLEM, exception)__            }_        })___        return transformerFactory__    };getting,a,link,transformer,factory,with,logging,return,link,transformer,factory;private,transformer,factory,get,transformer,factory,camel,context,context,transformer,factory,transformer,factory,null,if,saxon,transformer,factory,get,saxon,transformer,factory,context,else,transformer,factory,transformer,factory,new,instance,if,transformer,factory,null,throw,new,illegal,state,exception,cannot,resolve,a,transformer,factory,transformer,factory,set,error,listener,new,error,listener,override,public,void,warning,transformer,exception,exception,throws,transformer,exception,log,warn,exception,override,public,void,fatal,error,transformer,exception,exception,throws,transformer,exception,log,error,exception,override,public,void,error,transformer,exception,exception,throws,transformer,exception,log,error,exception,return,transformer,factory
HeaderTransformationMessageFilter -> private TransformerFactory getTransformerFactory(CamelContext context);1524063178;Getting a {@link TransformerFactory} with logging__@return {@link TransformerFactory};private TransformerFactory getTransformerFactory(CamelContext context) {_        TransformerFactory transformerFactory = null__        if (saxon) {_            transformerFactory = getSaxonTransformerFactory(context)__        } else {_            transformerFactory = TransformerFactory.newInstance()__        }__        if (transformerFactory == null) {_            throw new IllegalStateException("Cannot resolve a transformer factory")__        }__        transformerFactory.setErrorListener(new ErrorListener() {__            @Override_            public void warning(TransformerException exception) throws TransformerException {_                LOG.warn(SOAP_HEADER_TRANSFORMATION_PROBLEM, exception)__            }__            @Override_            public void fatalError(TransformerException exception) throws TransformerException {_                LOG.error(SOAP_HEADER_TRANSFORMATION_PROBLEM, exception)__            }__            @Override_            public void error(TransformerException exception) throws TransformerException {_                LOG.error(SOAP_HEADER_TRANSFORMATION_PROBLEM, exception)__            }_        })___        return transformerFactory__    };getting,a,link,transformer,factory,with,logging,return,link,transformer,factory;private,transformer,factory,get,transformer,factory,camel,context,context,transformer,factory,transformer,factory,null,if,saxon,transformer,factory,get,saxon,transformer,factory,context,else,transformer,factory,transformer,factory,new,instance,if,transformer,factory,null,throw,new,illegal,state,exception,cannot,resolve,a,transformer,factory,transformer,factory,set,error,listener,new,error,listener,override,public,void,warning,transformer,exception,exception,throws,transformer,exception,log,warn,exception,override,public,void,fatal,error,transformer,exception,exception,throws,transformer,exception,log,error,exception,override,public,void,error,transformer,exception,exception,throws,transformer,exception,log,error,exception,return,transformer,factory
HeaderTransformationMessageFilter -> private TransformerFactory getTransformerFactory(CamelContext context);1540108163;Getting a {@link TransformerFactory} with logging__@return {@link TransformerFactory};private TransformerFactory getTransformerFactory(CamelContext context) {_        TransformerFactory transformerFactory = null__        if (saxon) {_            transformerFactory = getSaxonTransformerFactory(context)__        } else {_            transformerFactory = TransformerFactory.newInstance()__        }__        if (transformerFactory == null) {_            throw new IllegalStateException("Cannot resolve a transformer factory")__        }__        transformerFactory.setErrorListener(new ErrorListener() {__            @Override_            public void warning(TransformerException exception) throws TransformerException {_                LOG.warn(SOAP_HEADER_TRANSFORMATION_PROBLEM, exception)__            }__            @Override_            public void fatalError(TransformerException exception) throws TransformerException {_                LOG.error(SOAP_HEADER_TRANSFORMATION_PROBLEM, exception)__            }__            @Override_            public void error(TransformerException exception) throws TransformerException {_                LOG.error(SOAP_HEADER_TRANSFORMATION_PROBLEM, exception)__            }_        })___        return transformerFactory__    };getting,a,link,transformer,factory,with,logging,return,link,transformer,factory;private,transformer,factory,get,transformer,factory,camel,context,context,transformer,factory,transformer,factory,null,if,saxon,transformer,factory,get,saxon,transformer,factory,context,else,transformer,factory,transformer,factory,new,instance,if,transformer,factory,null,throw,new,illegal,state,exception,cannot,resolve,a,transformer,factory,transformer,factory,set,error,listener,new,error,listener,override,public,void,warning,transformer,exception,exception,throws,transformer,exception,log,warn,exception,override,public,void,fatal,error,transformer,exception,exception,throws,transformer,exception,log,error,exception,override,public,void,error,transformer,exception,exception,throws,transformer,exception,log,error,exception,return,transformer,factory
HeaderTransformationMessageFilter -> private TransformerFactory getTransformerFactory(CamelContext context);1544001042;Getting a {@link TransformerFactory} with logging__@return {@link TransformerFactory};private TransformerFactory getTransformerFactory(CamelContext context) {_        TransformerFactory transformerFactory = null__        if (saxon) {_            transformerFactory = getSaxonTransformerFactory(context)__        } else {_            transformerFactory = TransformerFactory.newInstance()__        }__        if (transformerFactory == null) {_            throw new IllegalStateException("Cannot resolve a transformer factory")__        }__        try {_            transformerFactory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, Boolean.TRUE)__        } catch (TransformerConfigurationException ex) {_            _        }__        transformerFactory.setErrorListener(new ErrorListener() {__            @Override_            public void warning(TransformerException exception) throws TransformerException {_                LOG.warn(SOAP_HEADER_TRANSFORMATION_PROBLEM, exception)__            }__            @Override_            public void fatalError(TransformerException exception) throws TransformerException {_                LOG.error(SOAP_HEADER_TRANSFORMATION_PROBLEM, exception)__            }__            @Override_            public void error(TransformerException exception) throws TransformerException {_                LOG.error(SOAP_HEADER_TRANSFORMATION_PROBLEM, exception)__            }_        })___        return transformerFactory__    };getting,a,link,transformer,factory,with,logging,return,link,transformer,factory;private,transformer,factory,get,transformer,factory,camel,context,context,transformer,factory,transformer,factory,null,if,saxon,transformer,factory,get,saxon,transformer,factory,context,else,transformer,factory,transformer,factory,new,instance,if,transformer,factory,null,throw,new,illegal,state,exception,cannot,resolve,a,transformer,factory,try,transformer,factory,set,feature,xmlconstants,boolean,true,catch,transformer,configuration,exception,ex,transformer,factory,set,error,listener,new,error,listener,override,public,void,warning,transformer,exception,exception,throws,transformer,exception,log,warn,exception,override,public,void,fatal,error,transformer,exception,exception,throws,transformer,exception,log,error,exception,override,public,void,error,transformer,exception,exception,throws,transformer,exception,log,error,exception,return,transformer,factory
HeaderTransformationMessageFilter -> private TransformerFactory getTransformerFactory(CamelContext context);1548606483;Getting a {@link TransformerFactory} with logging__@return {@link TransformerFactory};private TransformerFactory getTransformerFactory(CamelContext context) {_        TransformerFactory transformerFactory = null__        if (saxon) {_            transformerFactory = getSaxonTransformerFactory(context)__        } else {_            transformerFactory = TransformerFactory.newInstance()__        }__        if (transformerFactory == null) {_            throw new IllegalStateException("Cannot resolve a transformer factory")__        }__        try {_            transformerFactory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, Boolean.TRUE)__        } catch (TransformerConfigurationException ex) {_            _        }__        transformerFactory.setErrorListener(new ErrorListener() {__            @Override_            public void warning(TransformerException exception) throws TransformerException {_                LOG.warn(SOAP_HEADER_TRANSFORMATION_PROBLEM, exception)__            }__            @Override_            public void fatalError(TransformerException exception) throws TransformerException {_                LOG.error(SOAP_HEADER_TRANSFORMATION_PROBLEM, exception)__            }__            @Override_            public void error(TransformerException exception) throws TransformerException {_                LOG.error(SOAP_HEADER_TRANSFORMATION_PROBLEM, exception)__            }_        })___        return transformerFactory__    };getting,a,link,transformer,factory,with,logging,return,link,transformer,factory;private,transformer,factory,get,transformer,factory,camel,context,context,transformer,factory,transformer,factory,null,if,saxon,transformer,factory,get,saxon,transformer,factory,context,else,transformer,factory,transformer,factory,new,instance,if,transformer,factory,null,throw,new,illegal,state,exception,cannot,resolve,a,transformer,factory,try,transformer,factory,set,feature,xmlconstants,boolean,true,catch,transformer,configuration,exception,ex,transformer,factory,set,error,listener,new,error,listener,override,public,void,warning,transformer,exception,exception,throws,transformer,exception,log,warn,exception,override,public,void,fatal,error,transformer,exception,exception,throws,transformer,exception,log,error,exception,override,public,void,error,transformer,exception,exception,throws,transformer,exception,log,error,exception,return,transformer,factory
HeaderTransformationMessageFilter -> public HeaderTransformationMessageFilter(String xslt);1509636011;@param xslt;public HeaderTransformationMessageFilter(String xslt) {_        super()__        this.xslt = xslt__    };param,xslt;public,header,transformation,message,filter,string,xslt,super,this,xslt,xslt
HeaderTransformationMessageFilter -> public HeaderTransformationMessageFilter(String xslt);1524063178;@param xslt;public HeaderTransformationMessageFilter(String xslt) {_        super()__        this.xslt = xslt__    };param,xslt;public,header,transformation,message,filter,string,xslt,super,this,xslt,xslt
HeaderTransformationMessageFilter -> public HeaderTransformationMessageFilter(String xslt);1540108163;@param xslt;public HeaderTransformationMessageFilter(String xslt) {_        super()__        this.xslt = xslt__    };param,xslt;public,header,transformation,message,filter,string,xslt,super,this,xslt,xslt
HeaderTransformationMessageFilter -> public HeaderTransformationMessageFilter(String xslt);1544001042;@param xslt;public HeaderTransformationMessageFilter(String xslt) {_        super()__        this.xslt = xslt__    };param,xslt;public,header,transformation,message,filter,string,xslt,super,this,xslt,xslt
HeaderTransformationMessageFilter -> public HeaderTransformationMessageFilter(String xslt);1548606483;@param xslt;public HeaderTransformationMessageFilter(String xslt) {_        super()__        this.xslt = xslt__    };param,xslt;public,header,transformation,message,filter,string,xslt,super,this,xslt,xslt
HeaderTransformationMessageFilter -> private void processHeader(CamelContext context, Message inOrOut, WebServiceMessage webServiceMessage);1509636011;Transform the header_@param context_@param inOrOut_@param webServiceMessage;private void processHeader(CamelContext context, Message inOrOut, WebServiceMessage webServiceMessage) {_        if (webServiceMessage instanceof SoapMessage) {_            SoapMessage soapMessage = (SoapMessage) webServiceMessage__            try {_                XsltUriResolver resolver = new XsltUriResolver(context, xslt)__                Source stylesheetResource = resolver.resolve(xslt, null)___                TransformerFactory transformerFactory = getTransformerFactory(context)__                Transformer transformer = transformerFactory.newTransformer(stylesheetResource)___                addParameters(inOrOut, transformer)__                _                transformer.transform(soapMessage.getSoapHeader().getSource(), soapMessage.getSoapHeader().getResult())__            } catch (TransformerException e) {_                throw new RuntimeException("Cannot transform the header of the soap message", e)__            }_        }_    };transform,the,header,param,context,param,in,or,out,param,web,service,message;private,void,process,header,camel,context,context,message,in,or,out,web,service,message,web,service,message,if,web,service,message,instanceof,soap,message,soap,message,soap,message,soap,message,web,service,message,try,xslt,uri,resolver,resolver,new,xslt,uri,resolver,context,xslt,source,stylesheet,resource,resolver,resolve,xslt,null,transformer,factory,transformer,factory,get,transformer,factory,context,transformer,transformer,transformer,factory,new,transformer,stylesheet,resource,add,parameters,in,or,out,transformer,transformer,transform,soap,message,get,soap,header,get,source,soap,message,get,soap,header,get,result,catch,transformer,exception,e,throw,new,runtime,exception,cannot,transform,the,header,of,the,soap,message,e
HeaderTransformationMessageFilter -> private void processHeader(CamelContext context, Message inOrOut, WebServiceMessage webServiceMessage);1524063178;Transform the header_@param context_@param inOrOut_@param webServiceMessage;private void processHeader(CamelContext context, Message inOrOut, WebServiceMessage webServiceMessage) {_        if (webServiceMessage instanceof SoapMessage) {_            SoapMessage soapMessage = (SoapMessage) webServiceMessage__            try {_                XsltUriResolver resolver = new XsltUriResolver(context, xslt)__                Source stylesheetResource = resolver.resolve(xslt, null)___                TransformerFactory transformerFactory = getTransformerFactory(context)__                Transformer transformer = transformerFactory.newTransformer(stylesheetResource)___                addParameters(inOrOut, transformer)__                _                transformer.transform(soapMessage.getSoapHeader().getSource(), soapMessage.getSoapHeader().getResult())__            } catch (TransformerException e) {_                throw new RuntimeException("Cannot transform the header of the soap message", e)__            }_        }_    };transform,the,header,param,context,param,in,or,out,param,web,service,message;private,void,process,header,camel,context,context,message,in,or,out,web,service,message,web,service,message,if,web,service,message,instanceof,soap,message,soap,message,soap,message,soap,message,web,service,message,try,xslt,uri,resolver,resolver,new,xslt,uri,resolver,context,xslt,source,stylesheet,resource,resolver,resolve,xslt,null,transformer,factory,transformer,factory,get,transformer,factory,context,transformer,transformer,transformer,factory,new,transformer,stylesheet,resource,add,parameters,in,or,out,transformer,transformer,transform,soap,message,get,soap,header,get,source,soap,message,get,soap,header,get,result,catch,transformer,exception,e,throw,new,runtime,exception,cannot,transform,the,header,of,the,soap,message,e
HeaderTransformationMessageFilter -> private void processHeader(CamelContext context, Message inOrOut, WebServiceMessage webServiceMessage);1540108163;Transform the header_@param context_@param inOrOut_@param webServiceMessage;private void processHeader(CamelContext context, Message inOrOut, WebServiceMessage webServiceMessage) {_        if (webServiceMessage instanceof SoapMessage) {_            SoapMessage soapMessage = (SoapMessage) webServiceMessage__            try {_                XsltUriResolver resolver = new XsltUriResolver(context, xslt)__                Source stylesheetResource = resolver.resolve(xslt, null)___                TransformerFactory transformerFactory = getTransformerFactory(context)__                Transformer transformer = transformerFactory.newTransformer(stylesheetResource)___                addParameters(inOrOut, transformer)__                _                transformer.transform(soapMessage.getSoapHeader().getSource(), soapMessage.getSoapHeader().getResult())__            } catch (TransformerException e) {_                throw new RuntimeException("Cannot transform the header of the soap message", e)__            }_        }_    };transform,the,header,param,context,param,in,or,out,param,web,service,message;private,void,process,header,camel,context,context,message,in,or,out,web,service,message,web,service,message,if,web,service,message,instanceof,soap,message,soap,message,soap,message,soap,message,web,service,message,try,xslt,uri,resolver,resolver,new,xslt,uri,resolver,context,xslt,source,stylesheet,resource,resolver,resolve,xslt,null,transformer,factory,transformer,factory,get,transformer,factory,context,transformer,transformer,transformer,factory,new,transformer,stylesheet,resource,add,parameters,in,or,out,transformer,transformer,transform,soap,message,get,soap,header,get,source,soap,message,get,soap,header,get,result,catch,transformer,exception,e,throw,new,runtime,exception,cannot,transform,the,header,of,the,soap,message,e
HeaderTransformationMessageFilter -> private void processHeader(CamelContext context, Message inOrOut, WebServiceMessage webServiceMessage);1544001042;Transform the header_@param context_@param inOrOut_@param webServiceMessage;private void processHeader(CamelContext context, Message inOrOut, WebServiceMessage webServiceMessage) {_        if (webServiceMessage instanceof SoapMessage) {_            SoapMessage soapMessage = (SoapMessage) webServiceMessage__            try {_                XsltUriResolver resolver = new XsltUriResolver(context, xslt)__                Source stylesheetResource = resolver.resolve(xslt, null)___                TransformerFactory transformerFactory = getTransformerFactory(context)__                Transformer transformer = transformerFactory.newTransformer(stylesheetResource)___                addParameters(inOrOut, transformer)__                _                transformer.transform(soapMessage.getSoapHeader().getSource(), soapMessage.getSoapHeader().getResult())__            } catch (TransformerException e) {_                throw new RuntimeException("Cannot transform the header of the soap message", e)__            }_        }_    };transform,the,header,param,context,param,in,or,out,param,web,service,message;private,void,process,header,camel,context,context,message,in,or,out,web,service,message,web,service,message,if,web,service,message,instanceof,soap,message,soap,message,soap,message,soap,message,web,service,message,try,xslt,uri,resolver,resolver,new,xslt,uri,resolver,context,xslt,source,stylesheet,resource,resolver,resolve,xslt,null,transformer,factory,transformer,factory,get,transformer,factory,context,transformer,transformer,transformer,factory,new,transformer,stylesheet,resource,add,parameters,in,or,out,transformer,transformer,transform,soap,message,get,soap,header,get,source,soap,message,get,soap,header,get,result,catch,transformer,exception,e,throw,new,runtime,exception,cannot,transform,the,header,of,the,soap,message,e
HeaderTransformationMessageFilter -> private void processHeader(CamelContext context, Message inOrOut, WebServiceMessage webServiceMessage);1548606483;Transform the header_@param context_@param inOrOut_@param webServiceMessage;private void processHeader(CamelContext context, Message inOrOut, WebServiceMessage webServiceMessage) {_        if (webServiceMessage instanceof SoapMessage) {_            SoapMessage soapMessage = (SoapMessage) webServiceMessage__            try {_                XsltUriResolver resolver = new XsltUriResolver(context, xslt)__                Source stylesheetResource = resolver.resolve(xslt, null)___                TransformerFactory transformerFactory = getTransformerFactory(context)__                Transformer transformer = transformerFactory.newTransformer(stylesheetResource)___                addParameters(inOrOut, transformer)__                _                transformer.transform(soapMessage.getSoapHeader().getSource(), soapMessage.getSoapHeader().getResult())__            } catch (TransformerException e) {_                throw new RuntimeException("Cannot transform the header of the soap message", e)__            }_        }_    };transform,the,header,param,context,param,in,or,out,param,web,service,message;private,void,process,header,camel,context,context,message,in,or,out,web,service,message,web,service,message,if,web,service,message,instanceof,soap,message,soap,message,soap,message,soap,message,web,service,message,try,xslt,uri,resolver,resolver,new,xslt,uri,resolver,context,xslt,source,stylesheet,resource,resolver,resolve,xslt,null,transformer,factory,transformer,factory,get,transformer,factory,context,transformer,transformer,transformer,factory,new,transformer,stylesheet,resource,add,parameters,in,or,out,transformer,transformer,transform,soap,message,get,soap,header,get,source,soap,message,get,soap,header,get,result,catch,transformer,exception,e,throw,new,runtime,exception,cannot,transform,the,header,of,the,soap,message,e
