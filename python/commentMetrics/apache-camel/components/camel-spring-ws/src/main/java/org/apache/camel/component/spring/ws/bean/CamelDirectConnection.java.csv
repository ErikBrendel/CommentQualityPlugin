commented;modifiers;parameterAmount;loc;comment;code
false;public;1;9;;@Override public void send(WebServiceMessage message) throws IOException {     try {         camelContext.createProducerTemplate().sendBody(destination.toString(), message).     } catch (CamelExecutionException e) {         // simply discard replyTo message         LOG.warn("Could not found any camel endpoint [" + destination + "] for wsa:ReplyTo camel mapping.", e).     } }
false;public;1;4;;@Override public WebServiceMessage receive(WebServiceMessageFactory messageFactory) throws IOException {     return null. }
false;public;0;4;;@Override public URI getUri() throws URISyntaxException {     return destination. }
false;public;0;4;;@Override public boolean hasError() throws IOException {     return false. }
false;public;0;4;;@Override public String getErrorMessage() throws IOException {     return null. }
false;public;0;4;;@Override public void close() throws IOException { }
false;public;0;3;;public CamelContext getCamelContext() {     return camelContext. }
false;public;1;3;;public void setCamelContext(CamelContext camelContext) {     this.camelContext = camelContext. }
