# id;timestamp;commentText;codeText;commentWords;codeWords
SpringWebserviceComponent -> private void configureMessageFilter(SpringWebserviceConfiguration configuration);1436176438;Configures the messageFilter's factory. The factory is looked up in the endpoint's URI and then in the Spring's context._The bean search mechanism looks for a bean with the name messageFilter._The endpoint's URI search mechanism looks for the URI's key parameter name messageFilter, for instance like this:_spring-ws:http://yourdomain.com?messageFilter=<beanName>;private void configureMessageFilter(SpringWebserviceConfiguration configuration) {_        if (configuration.getMessageFilter() == null) {_            _            final MessageFilter globalMessageFilter = EndpointHelper.resolveReferenceParameter(getCamelContext(), "messageFilter", MessageFilter.class, false)__            if (globalMessageFilter != null) {_                configuration.setMessageFilter(globalMessageFilter)__            } else {_                _                configuration.setMessageFilter(new BasicMessageFilter())__            }_        }_    };configures,the,message,filter,s,factory,the,factory,is,looked,up,in,the,endpoint,s,uri,and,then,in,the,spring,s,context,the,bean,search,mechanism,looks,for,a,bean,with,the,name,message,filter,the,endpoint,s,uri,search,mechanism,looks,for,the,uri,s,key,parameter,name,message,filter,for,instance,like,this,spring,ws,http,yourdomain,com,message,filter,bean,name;private,void,configure,message,filter,spring,webservice,configuration,configuration,if,configuration,get,message,filter,null,final,message,filter,global,message,filter,endpoint,helper,resolve,reference,parameter,get,camel,context,message,filter,message,filter,class,false,if,global,message,filter,null,configuration,set,message,filter,global,message,filter,else,configuration,set,message,filter,new,basic,message,filter
SpringWebserviceComponent -> private void configureMessageFilter(SpringWebserviceConfiguration configuration);1491919259;Configures the messageFilter's factory. The factory is looked up in the endpoint's URI and then in the Spring's context._The bean search mechanism looks for a bean with the name messageFilter._The endpoint's URI search mechanism looks for the URI's key parameter name messageFilter, for instance like this:_spring-ws:http://yourdomain.com?messageFilter=<beanName>;private void configureMessageFilter(SpringWebserviceConfiguration configuration) {_        if (configuration.getMessageFilter() == null) {_            _            final MessageFilter globalMessageFilter = EndpointHelper.resolveReferenceParameter(getCamelContext(), "messageFilter", MessageFilter.class, false)__            if (globalMessageFilter != null) {_                configuration.setMessageFilter(globalMessageFilter)__            } else {_                _                configuration.setMessageFilter(new BasicMessageFilter())__            }_        }_    };configures,the,message,filter,s,factory,the,factory,is,looked,up,in,the,endpoint,s,uri,and,then,in,the,spring,s,context,the,bean,search,mechanism,looks,for,a,bean,with,the,name,message,filter,the,endpoint,s,uri,search,mechanism,looks,for,the,uri,s,key,parameter,name,message,filter,for,instance,like,this,spring,ws,http,yourdomain,com,message,filter,bean,name;private,void,configure,message,filter,spring,webservice,configuration,configuration,if,configuration,get,message,filter,null,final,message,filter,global,message,filter,endpoint,helper,resolve,reference,parameter,get,camel,context,message,filter,message,filter,class,false,if,global,message,filter,null,configuration,set,message,filter,global,message,filter,else,configuration,set,message,filter,new,basic,message,filter
SpringWebserviceComponent -> private void configureMessageFilter(SpringWebserviceConfiguration configuration);1491919462;Configures the messageFilter's factory. The factory is looked up in the endpoint's URI and then in the Spring's context._The bean search mechanism looks for a bean with the name messageFilter._The endpoint's URI search mechanism looks for the URI's key parameter name messageFilter, for instance like this:_spring-ws:http://yourdomain.com?messageFilter=<beanName>;private void configureMessageFilter(SpringWebserviceConfiguration configuration) {_        if (configuration.getMessageFilter() == null) {_            _            final MessageFilter globalMessageFilter = EndpointHelper.resolveReferenceParameter(getCamelContext(), "messageFilter", MessageFilter.class, false)__            if (globalMessageFilter != null) {_                configuration.setMessageFilter(globalMessageFilter)__            } else {_                _                configuration.setMessageFilter(new BasicMessageFilter())__            }_        }_    };configures,the,message,filter,s,factory,the,factory,is,looked,up,in,the,endpoint,s,uri,and,then,in,the,spring,s,context,the,bean,search,mechanism,looks,for,a,bean,with,the,name,message,filter,the,endpoint,s,uri,search,mechanism,looks,for,the,uri,s,key,parameter,name,message,filter,for,instance,like,this,spring,ws,http,yourdomain,com,message,filter,bean,name;private,void,configure,message,filter,spring,webservice,configuration,configuration,if,configuration,get,message,filter,null,final,message,filter,global,message,filter,endpoint,helper,resolve,reference,parameter,get,camel,context,message,filter,message,filter,class,false,if,global,message,filter,null,configuration,set,message,filter,global,message,filter,else,configuration,set,message,filter,new,basic,message,filter
SpringWebserviceComponent -> private void configureMessageFilter(SpringWebserviceConfiguration configuration);1491919462;Configures the messageFilter's factory. The factory is looked up in the endpoint's URI and then in the Spring's context._The bean search mechanism looks for a bean with the name messageFilter._The endpoint's URI search mechanism looks for the URI's key parameter name messageFilter, for instance like this:_spring-ws:http://yourdomain.com?messageFilter=<beanName>;private void configureMessageFilter(SpringWebserviceConfiguration configuration) {_        if (configuration.getMessageFilter() == null) {_            _            final MessageFilter globalMessageFilter = EndpointHelper.resolveReferenceParameter(getCamelContext(), "messageFilter", MessageFilter.class, false)__            if (globalMessageFilter != null) {_                configuration.setMessageFilter(globalMessageFilter)__            } else {_                _                configuration.setMessageFilter(new BasicMessageFilter())__            }_        }_    };configures,the,message,filter,s,factory,the,factory,is,looked,up,in,the,endpoint,s,uri,and,then,in,the,spring,s,context,the,bean,search,mechanism,looks,for,a,bean,with,the,name,message,filter,the,endpoint,s,uri,search,mechanism,looks,for,the,uri,s,key,parameter,name,message,filter,for,instance,like,this,spring,ws,http,yourdomain,com,message,filter,bean,name;private,void,configure,message,filter,spring,webservice,configuration,configuration,if,configuration,get,message,filter,null,final,message,filter,global,message,filter,endpoint,helper,resolve,reference,parameter,get,camel,context,message,filter,message,filter,class,false,if,global,message,filter,null,configuration,set,message,filter,global,message,filter,else,configuration,set,message,filter,new,basic,message,filter
SpringWebserviceComponent -> private void configureMessageFilter(SpringWebserviceConfiguration configuration);1491919462;Configures the messageFilter's factory. The factory is looked up in the endpoint's URI and then in the Spring's context._The bean search mechanism looks for a bean with the name messageFilter._The endpoint's URI search mechanism looks for the URI's key parameter name messageFilter, for instance like this:_spring-ws:http://yourdomain.com?messageFilter=<beanName>;private void configureMessageFilter(SpringWebserviceConfiguration configuration) {_        if (configuration.getMessageFilter() == null) {_            _            final MessageFilter globalMessageFilter = EndpointHelper.resolveReferenceParameter(getCamelContext(), "messageFilter", MessageFilter.class, false)__            if (globalMessageFilter != null) {_                configuration.setMessageFilter(globalMessageFilter)__            } else {_                _                configuration.setMessageFilter(new BasicMessageFilter())__            }_        }_    };configures,the,message,filter,s,factory,the,factory,is,looked,up,in,the,endpoint,s,uri,and,then,in,the,spring,s,context,the,bean,search,mechanism,looks,for,a,bean,with,the,name,message,filter,the,endpoint,s,uri,search,mechanism,looks,for,the,uri,s,key,parameter,name,message,filter,for,instance,like,this,spring,ws,http,yourdomain,com,message,filter,bean,name;private,void,configure,message,filter,spring,webservice,configuration,configuration,if,configuration,get,message,filter,null,final,message,filter,global,message,filter,endpoint,helper,resolve,reference,parameter,get,camel,context,message,filter,message,filter,class,false,if,global,message,filter,null,configuration,set,message,filter,global,message,filter,else,configuration,set,message,filter,new,basic,message,filter
SpringWebserviceComponent -> private void configureMessageFilter(SpringWebserviceConfiguration configuration);1536687142;Configures the messageFilter's factory. The factory is looked up in the endpoint's URI and then in the Spring's context._The bean search mechanism looks for a bean with the name messageFilter._The endpoint's URI search mechanism looks for the URI's key parameter name messageFilter, for instance like this:_spring-ws:http://yourdomain.com?messageFilter=<beanName>;private void configureMessageFilter(SpringWebserviceConfiguration configuration) {_        if (configuration.getMessageFilter() == null) {_            _            final MessageFilter globalMessageFilter = EndpointHelper.resolveReferenceParameter(getCamelContext(), "messageFilter", MessageFilter.class, false)__            if (globalMessageFilter != null) {_                configuration.setMessageFilter(globalMessageFilter)__            } else {_                _                configuration.setMessageFilter(new BasicMessageFilter())__            }_        }_    };configures,the,message,filter,s,factory,the,factory,is,looked,up,in,the,endpoint,s,uri,and,then,in,the,spring,s,context,the,bean,search,mechanism,looks,for,a,bean,with,the,name,message,filter,the,endpoint,s,uri,search,mechanism,looks,for,the,uri,s,key,parameter,name,message,filter,for,instance,like,this,spring,ws,http,yourdomain,com,message,filter,bean,name;private,void,configure,message,filter,spring,webservice,configuration,configuration,if,configuration,get,message,filter,null,final,message,filter,global,message,filter,endpoint,helper,resolve,reference,parameter,get,camel,context,message,filter,message,filter,class,false,if,global,message,filter,null,configuration,set,message,filter,global,message,filter,else,configuration,set,message,filter,new,basic,message,filter
SpringWebserviceComponent -> private void configureMessageFilter(SpringWebserviceConfiguration configuration);1537290824;Configures the messageFilter's factory. The factory is looked up in the endpoint's URI and then in the Spring's context._The bean search mechanism looks for a bean with the name messageFilter._The endpoint's URI search mechanism looks for the URI's key parameter name messageFilter, for instance like this:_spring-ws:http://yourdomain.com?messageFilter=<beanName>;private void configureMessageFilter(SpringWebserviceConfiguration configuration) {_        if (configuration.getMessageFilter() == null) {_            _            final MessageFilter globalMessageFilter = EndpointHelper.resolveReferenceParameter(getCamelContext(), "messageFilter", MessageFilter.class, false)__            if (globalMessageFilter != null) {_                configuration.setMessageFilter(globalMessageFilter)__            } else {_                _                configuration.setMessageFilter(new BasicMessageFilter())__            }_        }_    };configures,the,message,filter,s,factory,the,factory,is,looked,up,in,the,endpoint,s,uri,and,then,in,the,spring,s,context,the,bean,search,mechanism,looks,for,a,bean,with,the,name,message,filter,the,endpoint,s,uri,search,mechanism,looks,for,the,uri,s,key,parameter,name,message,filter,for,instance,like,this,spring,ws,http,yourdomain,com,message,filter,bean,name;private,void,configure,message,filter,spring,webservice,configuration,configuration,if,configuration,get,message,filter,null,final,message,filter,global,message,filter,endpoint,helper,resolve,reference,parameter,get,camel,context,message,filter,message,filter,class,false,if,global,message,filter,null,configuration,set,message,filter,global,message,filter,else,configuration,set,message,filter,new,basic,message,filter
SpringWebserviceComponent -> private void configureMessageFilter(SpringWebserviceConfiguration configuration);1540108158;Configures the messageFilter's factory. The factory is looked up in the endpoint's URI and then in the Spring's context._The bean search mechanism looks for a bean with the name messageFilter._The endpoint's URI search mechanism looks for the URI's key parameter name messageFilter, for instance like this:_spring-ws:http://yourdomain.com?messageFilter=<beanName>;private void configureMessageFilter(SpringWebserviceConfiguration configuration) {_        if (configuration.getMessageFilter() == null) {_            _            final MessageFilter globalMessageFilter = EndpointHelper.resolveReferenceParameter(getCamelContext(), "messageFilter", MessageFilter.class, false)__            if (globalMessageFilter != null) {_                configuration.setMessageFilter(globalMessageFilter)__            } else {_                _                configuration.setMessageFilter(new BasicMessageFilter())__            }_        }_    };configures,the,message,filter,s,factory,the,factory,is,looked,up,in,the,endpoint,s,uri,and,then,in,the,spring,s,context,the,bean,search,mechanism,looks,for,a,bean,with,the,name,message,filter,the,endpoint,s,uri,search,mechanism,looks,for,the,uri,s,key,parameter,name,message,filter,for,instance,like,this,spring,ws,http,yourdomain,com,message,filter,bean,name;private,void,configure,message,filter,spring,webservice,configuration,configuration,if,configuration,get,message,filter,null,final,message,filter,global,message,filter,endpoint,helper,resolve,reference,parameter,get,camel,context,message,filter,message,filter,class,false,if,global,message,filter,null,configuration,set,message,filter,global,message,filter,else,configuration,set,message,filter,new,basic,message,filter
SpringWebserviceComponent -> private void configureMessageFilter(SpringWebserviceConfiguration configuration);1540108160;Configures the messageFilter's factory. The factory is looked up in the endpoint's URI and then in the Spring's context._The bean search mechanism looks for a bean with the name messageFilter._The endpoint's URI search mechanism looks for the URI's key parameter name messageFilter, for instance like this:_spring-ws:http://yourdomain.com?messageFilter=<beanName>;private void configureMessageFilter(SpringWebserviceConfiguration configuration) {_        if (configuration.getMessageFilter() == null) {_            _            final MessageFilter globalMessageFilter = EndpointHelper.resolveReferenceParameter(getCamelContext(), "messageFilter", MessageFilter.class, false)__            if (globalMessageFilter != null) {_                configuration.setMessageFilter(globalMessageFilter)__            } else {_                _                configuration.setMessageFilter(new BasicMessageFilter())__            }_        }_    };configures,the,message,filter,s,factory,the,factory,is,looked,up,in,the,endpoint,s,uri,and,then,in,the,spring,s,context,the,bean,search,mechanism,looks,for,a,bean,with,the,name,message,filter,the,endpoint,s,uri,search,mechanism,looks,for,the,uri,s,key,parameter,name,message,filter,for,instance,like,this,spring,ws,http,yourdomain,com,message,filter,bean,name;private,void,configure,message,filter,spring,webservice,configuration,configuration,if,configuration,get,message,filter,null,final,message,filter,global,message,filter,endpoint,helper,resolve,reference,parameter,get,camel,context,message,filter,message,filter,class,false,if,global,message,filter,null,configuration,set,message,filter,global,message,filter,else,configuration,set,message,filter,new,basic,message,filter
SpringWebserviceComponent -> private void configureMessageFilter(SpringWebserviceConfiguration configuration);1540108163;Configures the messageFilter's factory. The factory is looked up in the endpoint's URI and then in the Spring's context._The bean search mechanism looks for a bean with the name messageFilter._The endpoint's URI search mechanism looks for the URI's key parameter name messageFilter, for instance like this:_spring-ws:http://yourdomain.com?messageFilter=<beanName>;private void configureMessageFilter(SpringWebserviceConfiguration configuration) {_        if (configuration.getMessageFilter() == null) {_            _            final MessageFilter globalMessageFilter = EndpointHelper.resolveReferenceParameter(getCamelContext(), "messageFilter", MessageFilter.class, false)__            if (globalMessageFilter != null) {_                configuration.setMessageFilter(globalMessageFilter)__            } else {_                _                configuration.setMessageFilter(new BasicMessageFilter())__            }_        }_    };configures,the,message,filter,s,factory,the,factory,is,looked,up,in,the,endpoint,s,uri,and,then,in,the,spring,s,context,the,bean,search,mechanism,looks,for,a,bean,with,the,name,message,filter,the,endpoint,s,uri,search,mechanism,looks,for,the,uri,s,key,parameter,name,message,filter,for,instance,like,this,spring,ws,http,yourdomain,com,message,filter,bean,name;private,void,configure,message,filter,spring,webservice,configuration,configuration,if,configuration,get,message,filter,null,final,message,filter,global,message,filter,endpoint,helper,resolve,reference,parameter,get,camel,context,message,filter,message,filter,class,false,if,global,message,filter,null,configuration,set,message,filter,global,message,filter,else,configuration,set,message,filter,new,basic,message,filter
SpringWebserviceComponent -> private void configureMessageFilter(SpringWebserviceConfiguration configuration);1547241305;Configures the messageFilter's factory. The factory is looked up in the endpoint's URI and then in the Spring's context._The bean search mechanism looks for a bean with the name messageFilter._The endpoint's URI search mechanism looks for the URI's key parameter name messageFilter, for instance like this:_spring-ws:http://yourdomain.com?messageFilter=<beanName>;private void configureMessageFilter(SpringWebserviceConfiguration configuration) {_        if (configuration.getMessageFilter() == null) {_            _            final MessageFilter globalMessageFilter = EndpointHelper.resolveReferenceParameter(getCamelContext(), "messageFilter", MessageFilter.class, false)__            if (globalMessageFilter != null) {_                configuration.setMessageFilter(globalMessageFilter)__            } else {_                _                configuration.setMessageFilter(new BasicMessageFilter())__            }_        }_    };configures,the,message,filter,s,factory,the,factory,is,looked,up,in,the,endpoint,s,uri,and,then,in,the,spring,s,context,the,bean,search,mechanism,looks,for,a,bean,with,the,name,message,filter,the,endpoint,s,uri,search,mechanism,looks,for,the,uri,s,key,parameter,name,message,filter,for,instance,like,this,spring,ws,http,yourdomain,com,message,filter,bean,name;private,void,configure,message,filter,spring,webservice,configuration,configuration,if,configuration,get,message,filter,null,final,message,filter,global,message,filter,endpoint,helper,resolve,reference,parameter,get,camel,context,message,filter,message,filter,class,false,if,global,message,filter,null,configuration,set,message,filter,global,message,filter,else,configuration,set,message,filter,new,basic,message,filter
SpringWebserviceComponent -> private void configureMessageFilter(SpringWebserviceConfiguration configuration);1548507965;Configures the messageFilter's factory. The factory is looked up in the endpoint's URI and then in the Spring's context._The bean search mechanism looks for a bean with the name messageFilter._The endpoint's URI search mechanism looks for the URI's key parameter name messageFilter, for instance like this:_spring-ws:http://yourdomain.com?messageFilter=<beanName>;private void configureMessageFilter(SpringWebserviceConfiguration configuration) {_        if (configuration.getMessageFilter() == null) {_            _            final MessageFilter globalMessageFilter = EndpointHelper.resolveReferenceParameter(getCamelContext(), "messageFilter", MessageFilter.class, false)__            if (globalMessageFilter != null) {_                configuration.setMessageFilter(globalMessageFilter)__            } else {_                _                configuration.setMessageFilter(new BasicMessageFilter())__            }_        }_    };configures,the,message,filter,s,factory,the,factory,is,looked,up,in,the,endpoint,s,uri,and,then,in,the,spring,s,context,the,bean,search,mechanism,looks,for,a,bean,with,the,name,message,filter,the,endpoint,s,uri,search,mechanism,looks,for,the,uri,s,key,parameter,name,message,filter,for,instance,like,this,spring,ws,http,yourdomain,com,message,filter,bean,name;private,void,configure,message,filter,spring,webservice,configuration,configuration,if,configuration,get,message,filter,null,final,message,filter,global,message,filter,endpoint,helper,resolve,reference,parameter,get,camel,context,message,filter,message,filter,class,false,if,global,message,filter,null,configuration,set,message,filter,global,message,filter,else,configuration,set,message,filter,new,basic,message,filter
SpringWebserviceComponent -> private void configureMessageFilter(SpringWebserviceConfiguration configuration);1548671910;Configures the messageFilter's factory. The factory is looked up in the endpoint's URI and then in the Spring's context._The bean search mechanism looks for a bean with the name messageFilter._The endpoint's URI search mechanism looks for the URI's key parameter name messageFilter, for instance like this:_spring-ws:http://yourdomain.com?messageFilter=<beanName>;private void configureMessageFilter(SpringWebserviceConfiguration configuration) {_        if (configuration.getMessageFilter() == null) {_            _            final MessageFilter globalMessageFilter = EndpointHelper.resolveReferenceParameter(getCamelContext(), "messageFilter", MessageFilter.class, false)__            if (globalMessageFilter != null) {_                configuration.setMessageFilter(globalMessageFilter)__            } else {_                _                configuration.setMessageFilter(new BasicMessageFilter())__            }_        }_    };configures,the,message,filter,s,factory,the,factory,is,looked,up,in,the,endpoint,s,uri,and,then,in,the,spring,s,context,the,bean,search,mechanism,looks,for,a,bean,with,the,name,message,filter,the,endpoint,s,uri,search,mechanism,looks,for,the,uri,s,key,parameter,name,message,filter,for,instance,like,this,spring,ws,http,yourdomain,com,message,filter,bean,name;private,void,configure,message,filter,spring,webservice,configuration,configuration,if,configuration,get,message,filter,null,final,message,filter,global,message,filter,endpoint,helper,resolve,reference,parameter,get,camel,context,message,filter,message,filter,class,false,if,global,message,filter,null,configuration,set,message,filter,global,message,filter,else,configuration,set,message,filter,new,basic,message,filter
SpringWebserviceComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1491919462;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
SpringWebserviceComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1536687142;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
SpringWebserviceComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1537290824;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
SpringWebserviceComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1540108158;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
SpringWebserviceComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1540108160;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
SpringWebserviceComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1540108163;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
SpringWebserviceComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1547241305;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
SpringWebserviceComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1548507965;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
SpringWebserviceComponent -> @Override     public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);1548671910;Enable usage of global SSL context parameters.;@Override_    public void setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters) {_        this.useGlobalSslContextParameters = useGlobalSslContextParameters__    };enable,usage,of,global,ssl,context,parameters;override,public,void,set,use,global,ssl,context,parameters,boolean,use,global,ssl,context,parameters,this,use,global,ssl,context,parameters,use,global,ssl,context,parameters
SpringWebserviceComponent -> private void configureMessageFilter(Map<String, Object> parameters, SpringWebserviceConfiguration configuration);1351167431;Configures the messageFilter's factory. The factory is looked up in the endpoint's URI and then in the Spring's context._The bean search mechanism looks for a bean with the name messageFilter._The endpoint's URI search mechanism looks for the URI's key parameter name messageFilter, for instance like this:_spring-ws:http://yourdomain.com?messageFilter=<beanName>__@param parameters_@param configuration;private void configureMessageFilter(Map<String, Object> parameters, SpringWebserviceConfiguration configuration) {__        final MessageFilter globalMessageFilter = EndpointHelper.resolveReferenceParameter(_                                                      getCamelContext(), "messageFilter", MessageFilter.class, false )__        final MessageFilter messageFilter = resolveAndRemoveReferenceParameter(_                                                      parameters, "messageFilter", MessageFilter.class, globalMessageFilter)___        configuration.setMessageFilter(messageFilter)__    };configures,the,message,filter,s,factory,the,factory,is,looked,up,in,the,endpoint,s,uri,and,then,in,the,spring,s,context,the,bean,search,mechanism,looks,for,a,bean,with,the,name,message,filter,the,endpoint,s,uri,search,mechanism,looks,for,the,uri,s,key,parameter,name,message,filter,for,instance,like,this,spring,ws,http,yourdomain,com,message,filter,bean,name,param,parameters,param,configuration;private,void,configure,message,filter,map,string,object,parameters,spring,webservice,configuration,configuration,final,message,filter,global,message,filter,endpoint,helper,resolve,reference,parameter,get,camel,context,message,filter,message,filter,class,false,final,message,filter,message,filter,resolve,and,remove,reference,parameter,parameters,message,filter,message,filter,class,global,message,filter,configuration,set,message,filter,message,filter
SpringWebserviceComponent -> private void configureMessageFilter(Map<String, Object> parameters, SpringWebserviceConfiguration configuration);1353422503;Configures the messageFilter's factory. The factory is looked up in the endpoint's URI and then in the Spring's context._The bean search mechanism looks for a bean with the name messageFilter._The endpoint's URI search mechanism looks for the URI's key parameter name messageFilter, for instance like this:_spring-ws:http://yourdomain.com?messageFilter=<beanName>__@param parameters_@param configuration;private void configureMessageFilter(Map<String, Object> parameters, SpringWebserviceConfiguration configuration) {__        final MessageFilter globalMessageFilter = EndpointHelper.resolveReferenceParameter(_                                                      getCamelContext(), "messageFilter", MessageFilter.class, false )__        final MessageFilter messageFilter = resolveAndRemoveReferenceParameter(_                                                      parameters, "messageFilter", MessageFilter.class, globalMessageFilter)___        configuration.setMessageFilter(messageFilter)__    };configures,the,message,filter,s,factory,the,factory,is,looked,up,in,the,endpoint,s,uri,and,then,in,the,spring,s,context,the,bean,search,mechanism,looks,for,a,bean,with,the,name,message,filter,the,endpoint,s,uri,search,mechanism,looks,for,the,uri,s,key,parameter,name,message,filter,for,instance,like,this,spring,ws,http,yourdomain,com,message,filter,bean,name,param,parameters,param,configuration;private,void,configure,message,filter,map,string,object,parameters,spring,webservice,configuration,configuration,final,message,filter,global,message,filter,endpoint,helper,resolve,reference,parameter,get,camel,context,message,filter,message,filter,class,false,final,message,filter,message,filter,resolve,and,remove,reference,parameter,parameters,message,filter,message,filter,class,global,message,filter,configuration,set,message,filter,message,filter
SpringWebserviceComponent -> private void configureMessageFilter(Map<String, Object> parameters, SpringWebserviceConfiguration configuration);1354776370;Configures the messageFilter's factory. The factory is looked up in the endpoint's URI and then in the Spring's context._The bean search mechanism looks for a bean with the name messageFilter._The endpoint's URI search mechanism looks for the URI's key parameter name messageFilter, for instance like this:_spring-ws:http://yourdomain.com?messageFilter=<beanName>__@param parameters_@param configuration;private void configureMessageFilter(Map<String, Object> parameters, SpringWebserviceConfiguration configuration) {__        final MessageFilter globalMessageFilter = EndpointHelper.resolveReferenceParameter(_                                                      getCamelContext(), "messageFilter", MessageFilter.class, false )__        final MessageFilter messageFilter = resolveAndRemoveReferenceParameter(_                                                      parameters, "messageFilter", MessageFilter.class, globalMessageFilter)___        configuration.setMessageFilter(messageFilter)__    };configures,the,message,filter,s,factory,the,factory,is,looked,up,in,the,endpoint,s,uri,and,then,in,the,spring,s,context,the,bean,search,mechanism,looks,for,a,bean,with,the,name,message,filter,the,endpoint,s,uri,search,mechanism,looks,for,the,uri,s,key,parameter,name,message,filter,for,instance,like,this,spring,ws,http,yourdomain,com,message,filter,bean,name,param,parameters,param,configuration;private,void,configure,message,filter,map,string,object,parameters,spring,webservice,configuration,configuration,final,message,filter,global,message,filter,endpoint,helper,resolve,reference,parameter,get,camel,context,message,filter,message,filter,class,false,final,message,filter,message,filter,resolve,and,remove,reference,parameter,parameters,message,filter,message,filter,class,global,message,filter,configuration,set,message,filter,message,filter
SpringWebserviceComponent -> private void configureMessageFilter(Map<String, Object> parameters, SpringWebserviceConfiguration configuration);1420453909;Configures the messageFilter's factory. The factory is looked up in the endpoint's URI and then in the Spring's context._The bean search mechanism looks for a bean with the name messageFilter._The endpoint's URI search mechanism looks for the URI's key parameter name messageFilter, for instance like this:_spring-ws:http://yourdomain.com?messageFilter=<beanName>__@param parameters_@param configuration;private void configureMessageFilter(Map<String, Object> parameters, SpringWebserviceConfiguration configuration) {__        final MessageFilter globalMessageFilter = EndpointHelper.resolveReferenceParameter(_                                                      getCamelContext(), "messageFilter", MessageFilter.class, false )__        final MessageFilter messageFilter = resolveAndRemoveReferenceParameter(_                                                      parameters, "messageFilter", MessageFilter.class, globalMessageFilter)___        configuration.setMessageFilter(messageFilter)__    };configures,the,message,filter,s,factory,the,factory,is,looked,up,in,the,endpoint,s,uri,and,then,in,the,spring,s,context,the,bean,search,mechanism,looks,for,a,bean,with,the,name,message,filter,the,endpoint,s,uri,search,mechanism,looks,for,the,uri,s,key,parameter,name,message,filter,for,instance,like,this,spring,ws,http,yourdomain,com,message,filter,bean,name,param,parameters,param,configuration;private,void,configure,message,filter,map,string,object,parameters,spring,webservice,configuration,configuration,final,message,filter,global,message,filter,endpoint,helper,resolve,reference,parameter,get,camel,context,message,filter,message,filter,class,false,final,message,filter,message,filter,resolve,and,remove,reference,parameter,parameters,message,filter,message,filter,class,global,message,filter,configuration,set,message,filter,message,filter
SpringWebserviceComponent -> private void configureMessageFilter(Map<String, Object> parameters, SpringWebserviceConfiguration configuration);1432189523;Configures the messageFilter's factory. The factory is looked up in the endpoint's URI and then in the Spring's context._The bean search mechanism looks for a bean with the name messageFilter._The endpoint's URI search mechanism looks for the URI's key parameter name messageFilter, for instance like this:_spring-ws:http://yourdomain.com?messageFilter=<beanName>__@param parameters_@param configuration;private void configureMessageFilter(Map<String, Object> parameters, SpringWebserviceConfiguration configuration) {__        final MessageFilter globalMessageFilter = EndpointHelper.resolveReferenceParameter(_                                                      getCamelContext(), "messageFilter", MessageFilter.class, false )__        final MessageFilter messageFilter = resolveAndRemoveReferenceParameter(_                                                      parameters, "messageFilter", MessageFilter.class, globalMessageFilter)___        configuration.setMessageFilter(messageFilter)__    };configures,the,message,filter,s,factory,the,factory,is,looked,up,in,the,endpoint,s,uri,and,then,in,the,spring,s,context,the,bean,search,mechanism,looks,for,a,bean,with,the,name,message,filter,the,endpoint,s,uri,search,mechanism,looks,for,the,uri,s,key,parameter,name,message,filter,for,instance,like,this,spring,ws,http,yourdomain,com,message,filter,bean,name,param,parameters,param,configuration;private,void,configure,message,filter,map,string,object,parameters,spring,webservice,configuration,configuration,final,message,filter,global,message,filter,endpoint,helper,resolve,reference,parameter,get,camel,context,message,filter,message,filter,class,false,final,message,filter,message,filter,resolve,and,remove,reference,parameter,parameters,message,filter,message,filter,class,global,message,filter,configuration,set,message,filter,message,filter
