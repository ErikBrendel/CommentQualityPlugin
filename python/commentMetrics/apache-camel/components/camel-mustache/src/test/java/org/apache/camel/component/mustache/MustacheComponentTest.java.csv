# id;timestamp;commentText;codeText;commentWords;codeWords
MustacheComponentTest -> @Test     public void testMustache() throws Exception;1371718422;Main test;@Test_    public void testMustache() throws Exception {_        _        endSimpleMock.expectedMessageCount(1)__        endSimpleMock.expectedBodiesReceived("Message with body 'The Body' and some header 'Some Header'")_        _        _        startSimpleProducerTemplate.sendBodyAndHeader("The Body", "someHeader", "Some Header")__        _        assertMockEndpointsSatisfied()__    };main,test;test,public,void,test,mustache,throws,exception,end,simple,mock,expected,message,count,1,end,simple,mock,expected,bodies,received,message,with,body,the,body,and,some,header,some,header,start,simple,producer,template,send,body,and,header,the,body,some,header,some,header,assert,mock,endpoints,satisfied
MustacheComponentTest -> @Test     public void testMustache() throws Exception;1371720388;Main test;@Test_    public void testMustache() throws Exception {_        _        endSimpleMock.expectedMessageCount(1)__        endSimpleMock.expectedBodiesReceived("Message with body 'The Body' and some header 'Some Header'")__        _        startSimpleProducerTemplate.sendBodyAndHeader("The Body", "someHeader", "Some Header")__        _        assertMockEndpointsSatisfied()__    };main,test;test,public,void,test,mustache,throws,exception,end,simple,mock,expected,message,count,1,end,simple,mock,expected,bodies,received,message,with,body,the,body,and,some,header,some,header,start,simple,producer,template,send,body,and,header,the,body,some,header,some,header,assert,mock,endpoints,satisfied
MustacheComponentTest -> @Test     public void testMustache() throws Exception;1425541488;Main test;@Test_    public void testMustache() throws Exception {_        _        endSimpleMock.expectedMessageCount(1)__        endSimpleMock.expectedBodiesReceived("Message with body 'The Body' and some header 'Some Header'")__        _        startSimpleProducerTemplate.sendBodyAndHeader("The Body", "someHeader", "Some Header")__        _        assertMockEndpointsSatisfied()__    };main,test;test,public,void,test,mustache,throws,exception,end,simple,mock,expected,message,count,1,end,simple,mock,expected,bodies,received,message,with,body,the,body,and,some,header,some,header,start,simple,producer,template,send,body,and,header,the,body,some,header,some,header,assert,mock,endpoints,satisfied
MustacheComponentTest -> @Test     public void testMustache() throws Exception;1540108158;Main test;@Test_    public void testMustache() throws Exception {_        _        endSimpleMock.expectedMessageCount(1)__        endSimpleMock.expectedBodiesReceived("Message with body 'The Body' and some header 'Some Header'")__        _        startSimpleProducerTemplate.sendBodyAndHeader("The Body", "someHeader", "Some Header")__        _        assertMockEndpointsSatisfied()__    };main,test;test,public,void,test,mustache,throws,exception,end,simple,mock,expected,message,count,1,end,simple,mock,expected,bodies,received,message,with,body,the,body,and,some,header,some,header,start,simple,producer,template,send,body,and,header,the,body,some,header,some,header,assert,mock,endpoints,satisfied
MustacheComponentTest -> @Test     public void testMustacheWithTemplateHeader() throws Exception;1371718422;Test using code Template header;@Test_    public void testMustacheWithTemplateHeader() throws Exception {_        _        Exchange exchange=createExchangeWithBody("The Body")__        exchange.getIn().setHeader("someHeader", "Some Header")__        exchange.getIn().setHeader(MustacheConstants.MUSTACHE_TEMPLATE, "Body='{{body}}'|SomeHeader='{{headers.someHeader}}'")__        endSimpleMock.expectedMessageCount(1)__        endSimpleMock.expectedBodiesReceived("Body='The Body'|SomeHeader='Some Header'")_        _        _        startSimpleProducerTemplate.send(exchange)__        _        assertMockEndpointsSatisfied()__    };test,using,code,template,header;test,public,void,test,mustache,with,template,header,throws,exception,exchange,exchange,create,exchange,with,body,the,body,exchange,get,in,set,header,some,header,some,header,exchange,get,in,set,header,mustache,constants,body,body,some,header,headers,some,header,end,simple,mock,expected,message,count,1,end,simple,mock,expected,bodies,received,body,the,body,some,header,some,header,start,simple,producer,template,send,exchange,assert,mock,endpoints,satisfied
MustacheComponentTest -> @Test     public void testMustacheWithTemplateHeader() throws Exception;1371720388;Test using code Template header;@Test_    public void testMustacheWithTemplateHeader() throws Exception {_        _        Exchange exchange = createExchangeWithBody("The Body")__        exchange.getIn().setHeader("someHeader", "Some Header")__        exchange.getIn().setHeader(MustacheConstants.MUSTACHE_TEMPLATE, "Body='{{body}}'|SomeHeader='{{headers.someHeader}}'")__        endSimpleMock.expectedMessageCount(1)__        endSimpleMock.expectedBodiesReceived("Body='The Body'|SomeHeader='Some Header'")__        _        startSimpleProducerTemplate.send(exchange)__        _        assertMockEndpointsSatisfied()__    };test,using,code,template,header;test,public,void,test,mustache,with,template,header,throws,exception,exchange,exchange,create,exchange,with,body,the,body,exchange,get,in,set,header,some,header,some,header,exchange,get,in,set,header,mustache,constants,body,body,some,header,headers,some,header,end,simple,mock,expected,message,count,1,end,simple,mock,expected,bodies,received,body,the,body,some,header,some,header,start,simple,producer,template,send,exchange,assert,mock,endpoints,satisfied
MustacheComponentTest -> @Test     public void testMustacheWithTemplateHeader() throws Exception;1425541488;Test using code Template header;@Test_    public void testMustacheWithTemplateHeader() throws Exception {_        _        Exchange exchange = createExchangeWithBody("The Body")__        exchange.getIn().setHeader("someHeader", "Some Header")__        exchange.getIn().setHeader(MustacheConstants.MUSTACHE_TEMPLATE, "Body='{{body}}'|SomeHeader='{{headers.someHeader}}'")__        endSimpleMock.expectedMessageCount(1)__        endSimpleMock.expectedBodiesReceived("Body='The Body'|SomeHeader='Some Header'")__        _        startSimpleProducerTemplate.send(exchange)__        _        assertMockEndpointsSatisfied()__    };test,using,code,template,header;test,public,void,test,mustache,with,template,header,throws,exception,exchange,exchange,create,exchange,with,body,the,body,exchange,get,in,set,header,some,header,some,header,exchange,get,in,set,header,mustache,constants,body,body,some,header,headers,some,header,end,simple,mock,expected,message,count,1,end,simple,mock,expected,bodies,received,body,the,body,some,header,some,header,start,simple,producer,template,send,exchange,assert,mock,endpoints,satisfied
MustacheComponentTest -> @Test     public void testMustacheWithTemplateHeader() throws Exception;1540108158;Test using code Template header;@Test_    public void testMustacheWithTemplateHeader() throws Exception {_        _        Exchange exchange = createExchangeWithBody("The Body")__        exchange.getIn().setHeader("someHeader", "Some Header")__        exchange.getIn().setHeader(MustacheConstants.MUSTACHE_TEMPLATE, "Body='{{body}}'|SomeHeader='{{headers.someHeader}}'")__        endSimpleMock.expectedMessageCount(1)__        endSimpleMock.expectedBodiesReceived("Body='The Body'|SomeHeader='Some Header'")__        _        startSimpleProducerTemplate.send(exchange)__        _        assertMockEndpointsSatisfied()__    };test,using,code,template,header;test,public,void,test,mustache,with,template,header,throws,exception,exchange,exchange,create,exchange,with,body,the,body,exchange,get,in,set,header,some,header,some,header,exchange,get,in,set,header,mustache,constants,body,body,some,header,headers,some,header,end,simple,mock,expected,message,count,1,end,simple,mock,expected,bodies,received,body,the,body,some,header,some,header,start,simple,producer,template,send,exchange,assert,mock,endpoints,satisfied
MustacheComponentTest -> @Test     public void testMustachePerformance() throws Exception;1371718422;Main test;@Test_    public void testMustachePerformance() throws Exception {_        int messageCount=10000__        endSimpleMock.expectedMessageCount(messageCount)__        StopWatch stopwatch=new StopWatch(true)__        for(int i=0_i<messageCount_i++) {_            startSimpleProducerTemplate.sendBodyAndHeader("The Body", "someHeader", "Some Header")_            _        }_        assertMockEndpointsSatisfied()__        LoggerFactory.getLogger(getClass()).info("Mustache performance: "+stopwatch.stop()+"ms for "+messageCount+" messages")__        _    };main,test;test,public,void,test,mustache,performance,throws,exception,int,message,count,10000,end,simple,mock,expected,message,count,message,count,stop,watch,stopwatch,new,stop,watch,true,for,int,i,0,i,message,count,i,start,simple,producer,template,send,body,and,header,the,body,some,header,some,header,assert,mock,endpoints,satisfied,logger,factory,get,logger,get,class,info,mustache,performance,stopwatch,stop,ms,for,message,count,messages
MustacheComponentTest -> @Test     public void testMustachePerformance() throws Exception;1371720388;Main test;@Test_    public void testMustachePerformance() throws Exception {_        int messageCount = 10000__        endSimpleMock.expectedMessageCount(messageCount)__        StopWatch stopwatch = new StopWatch(true)__        for (int i = 0_ i < messageCount_ i++) {_            startSimpleProducerTemplate.sendBodyAndHeader("The Body", "someHeader", "Some Header")__        }_        assertMockEndpointsSatisfied()__        LoggerFactory.getLogger(getClass()).info("Mustache performance: " + stopwatch.stop() + "ms for " + messageCount + " messages")___    };main,test;test,public,void,test,mustache,performance,throws,exception,int,message,count,10000,end,simple,mock,expected,message,count,message,count,stop,watch,stopwatch,new,stop,watch,true,for,int,i,0,i,message,count,i,start,simple,producer,template,send,body,and,header,the,body,some,header,some,header,assert,mock,endpoints,satisfied,logger,factory,get,logger,get,class,info,mustache,performance,stopwatch,stop,ms,for,message,count,messages
MustacheComponentTest -> @Test     public void testMustachePerformance() throws Exception;1425541488;Main test;@Test_    public void testMustachePerformance() throws Exception {_        int messageCount = 10000__        endSimpleMock.expectedMessageCount(messageCount)__        StopWatch stopwatch = new StopWatch(true)__        for (int i = 0_ i < messageCount_ i++) {_            startSimpleProducerTemplate.sendBodyAndHeader("The Body", "someHeader", "Some Header")__        }_        assertMockEndpointsSatisfied()__        LoggerFactory.getLogger(getClass()).info("Mustache performance: " + stopwatch.stop() + "ms for " + messageCount + " messages")__    };main,test;test,public,void,test,mustache,performance,throws,exception,int,message,count,10000,end,simple,mock,expected,message,count,message,count,stop,watch,stopwatch,new,stop,watch,true,for,int,i,0,i,message,count,i,start,simple,producer,template,send,body,and,header,the,body,some,header,some,header,assert,mock,endpoints,satisfied,logger,factory,get,logger,get,class,info,mustache,performance,stopwatch,stop,ms,for,message,count,messages
MustacheComponentTest -> @Test     public void testMustachePerformance() throws Exception;1540108158;Main test;@Test_    public void testMustachePerformance() throws Exception {_        int messageCount = 10000__        endSimpleMock.expectedMessageCount(messageCount)__        StopWatch stopwatch = new StopWatch(true)__        for (int i = 0_ i < messageCount_ i++) {_            startSimpleProducerTemplate.sendBodyAndHeader("The Body", "someHeader", "Some Header")__        }_        assertMockEndpointsSatisfied()__        LoggerFactory.getLogger(getClass()).info("Mustache performance: " + stopwatch.taken() + "ms for " + messageCount + " messages")__    };main,test;test,public,void,test,mustache,performance,throws,exception,int,message,count,10000,end,simple,mock,expected,message,count,message,count,stop,watch,stopwatch,new,stop,watch,true,for,int,i,0,i,message,count,i,start,simple,producer,template,send,body,and,header,the,body,some,header,some,header,assert,mock,endpoints,satisfied,logger,factory,get,logger,get,class,info,mustache,performance,stopwatch,taken,ms,for,message,count,messages
MustacheComponentTest -> @Test     public void testMustacheWithResourceUriHeader() throws Exception;1371718422;Test using Resource URI header;@Test_    public void testMustacheWithResourceUriHeader() throws Exception {_        _        Exchange exchange=createExchangeWithBody("The Body")__        exchange.getIn().setHeader("someHeader", "Some Header")__        exchange.getIn().setHeader(MustacheConstants.MUSTACHE_RESOURCE_URI, "/another.mustache")__        endSimpleMock.expectedMessageCount(1)__        endSimpleMock.expectedBodiesReceived("Yet another Mustache with body:\n" +_            "    'The Body'\n" +_            "and some header:\n" +_            "    'Some Header'\n")_        _        _        startSimpleProducerTemplate.send(exchange)__        _        assertMockEndpointsSatisfied()__    };test,using,resource,uri,header;test,public,void,test,mustache,with,resource,uri,header,throws,exception,exchange,exchange,create,exchange,with,body,the,body,exchange,get,in,set,header,some,header,some,header,exchange,get,in,set,header,mustache,constants,another,mustache,end,simple,mock,expected,message,count,1,end,simple,mock,expected,bodies,received,yet,another,mustache,with,body,n,the,body,n,and,some,header,n,some,header,n,start,simple,producer,template,send,exchange,assert,mock,endpoints,satisfied
MustacheComponentTest -> @Test     public void testMustacheWithResourceUriHeader() throws Exception;1371720388;Test using Resource URI header;@Test_    public void testMustacheWithResourceUriHeader() throws Exception {_        _        Exchange exchange = createExchangeWithBody("The Body")__        exchange.getIn().setHeader("someHeader", "Some Header")__        exchange.getIn().setHeader(MustacheConstants.MUSTACHE_RESOURCE_URI, "/another.mustache")__        endSimpleMock.expectedMessageCount(1)__        endSimpleMock.expectedBodiesReceived("Yet another Mustache with body:\n"_                + "    'The Body'\n"_                + "and some header:\n"_                + "    'Some Header'\n")__        _        startSimpleProducerTemplate.send(exchange)__        _        assertMockEndpointsSatisfied()__    };test,using,resource,uri,header;test,public,void,test,mustache,with,resource,uri,header,throws,exception,exchange,exchange,create,exchange,with,body,the,body,exchange,get,in,set,header,some,header,some,header,exchange,get,in,set,header,mustache,constants,another,mustache,end,simple,mock,expected,message,count,1,end,simple,mock,expected,bodies,received,yet,another,mustache,with,body,n,the,body,n,and,some,header,n,some,header,n,start,simple,producer,template,send,exchange,assert,mock,endpoints,satisfied
MustacheComponentTest -> @Test     public void testMustacheWithResourceUriHeader() throws Exception;1425541488;Test using Resource URI header;@Test_    public void testMustacheWithResourceUriHeader() throws Exception {_        _        Exchange exchange = createExchangeWithBody("The Body")__        exchange.getIn().setHeader("someHeader", "Some Header")__        exchange.getIn().setHeader(MustacheConstants.MUSTACHE_RESOURCE_URI, "/another.mustache")__        endSimpleMock.expectedMessageCount(1)__        endSimpleMock.message(0).body().contains("The Body")__        endSimpleMock.message(0).body().contains("Some Header")__        _        startSimpleProducerTemplate.send(exchange)__        _        assertMockEndpointsSatisfied()__    };test,using,resource,uri,header;test,public,void,test,mustache,with,resource,uri,header,throws,exception,exchange,exchange,create,exchange,with,body,the,body,exchange,get,in,set,header,some,header,some,header,exchange,get,in,set,header,mustache,constants,another,mustache,end,simple,mock,expected,message,count,1,end,simple,mock,message,0,body,contains,the,body,end,simple,mock,message,0,body,contains,some,header,start,simple,producer,template,send,exchange,assert,mock,endpoints,satisfied
MustacheComponentTest -> @Test     public void testMustacheWithResourceUriHeader() throws Exception;1540108158;Test using Resource URI header;@Test_    public void testMustacheWithResourceUriHeader() throws Exception {_        _        Exchange exchange = createExchangeWithBody("The Body")__        exchange.getIn().setHeader("someHeader", "Some Header")__        exchange.getIn().setHeader(MustacheConstants.MUSTACHE_RESOURCE_URI, "/another.mustache")__        endSimpleMock.expectedMessageCount(1)__        endSimpleMock.message(0).body().contains("The Body")__        endSimpleMock.message(0).body().contains("Some Header")__        _        startSimpleProducerTemplate.send(exchange)__        _        assertMockEndpointsSatisfied()__    };test,using,resource,uri,header;test,public,void,test,mustache,with,resource,uri,header,throws,exception,exchange,exchange,create,exchange,with,body,the,body,exchange,get,in,set,header,some,header,some,header,exchange,get,in,set,header,mustache,constants,another,mustache,end,simple,mock,expected,message,count,1,end,simple,mock,message,0,body,contains,the,body,end,simple,mock,message,0,body,contains,some,header,start,simple,producer,template,send,exchange,assert,mock,endpoints,satisfied
