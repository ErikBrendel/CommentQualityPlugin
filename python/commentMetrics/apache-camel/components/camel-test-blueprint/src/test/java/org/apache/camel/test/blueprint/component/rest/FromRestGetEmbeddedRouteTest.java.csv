commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected String getBlueprintDescriptor() {     return "org/apache/camel/test/blueprint/component/rest/FromRestGetEmbeddedRouteTest.xml". }
false;protected;0;3;;protected int getExpectedNumberOfRoutes() {     return 3. }
false;public;0;30;;@Test public void testFromRestModel() throws Exception {     assertEquals(getExpectedNumberOfRoutes(), context.getRoutes().size()).     assertEquals(2, context.getRestDefinitions().size()).     RestDefinition rest = context.getRestDefinitions().get(0).     assertNotNull(rest).     assertEquals("/say/hello", rest.getPath()).     assertEquals(1, rest.getVerbs().size()).     ToDefinition to = assertIsInstanceOf(ToDefinition.class, rest.getVerbs().get(0).getRoute().getOutputs().get(0)).     assertEquals("mock:hello", to.getUri()).     rest = context.getRestDefinitions().get(1).     assertNotNull(rest).     assertEquals("/say/bye", rest.getPath()).     assertEquals(2, rest.getVerbs().size()).     assertEquals("application/json", rest.getVerbs().get(0).getConsumes()).     to = assertIsInstanceOf(ToDefinition.class, rest.getVerbs().get(0).getRoute().getOutputs().get(0)).     assertEquals("mock:bye", to.getUri()).     // the rest becomes routes and the input is a seda endpoint created by the DummyRestConsumerFactory     getMockEndpoint("mock:update").expectedMessageCount(1).     template.sendBody("seda:post-say-bye", "I was here").     assertMockEndpointsSatisfied().     String out = template.requestBody("seda:get-say-hello", "Me", String.class).     assertEquals("Hello World", out).     String out2 = template.requestBody("seda:get-say-bye", "Me", String.class).     assertEquals("Bye World", out2). }
