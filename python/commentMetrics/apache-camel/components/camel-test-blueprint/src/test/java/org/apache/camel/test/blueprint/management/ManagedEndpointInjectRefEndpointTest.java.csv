commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected boolean useJmx() {     return true. }
false;protected;0;4;;@Override protected String getBlueprintDescriptor() {     return "org/apache/camel/test/blueprint/management/managedEndpointInjectRefEndpointTest.xml". }
false;protected;0;3;;protected MBeanServer getMBeanServer() {     return context.getManagementStrategy().getManagementAgent().getMBeanServer(). }
false;public;0;47;;@Test public void testRef() throws Exception {     // JMX tests dont work well on AIX CI servers (hangs them)     if (isPlatform("aix")) {         return.     }     // don't test well on windows     if (isPlatform("windows")) {         return.     }     // fire a message to get it running     getMockEndpoint("mock:result").expectedMessageCount(1).     getMockEndpoint("foo").expectedMessageCount(1).     template.sendBody("direct:start", "Hello World").     assertMockEndpointsSatisfied().     MBeanServer mbeanServer = getMBeanServer().     Set<ObjectName> set = mbeanServer.queryNames(new ObjectName("*:type=producers,*"), null).     assertEquals(2, set.size()).     Set<String> uris = new HashSet<>(Arrays.asList("mock://foo", "mock://result")).     for (ObjectName on : set) {         boolean registered = mbeanServer.isRegistered(on).         assertTrue("Should be registered", registered).         String uri = (String) mbeanServer.getAttribute(on, "EndpointUri").         assertTrue(uri, uris.contains(uri)).         // should be started         String state = (String) mbeanServer.getAttribute(on, "State").         assertEquals("Should be started", ServiceStatus.Started.name(), state).     }     set = mbeanServer.queryNames(new ObjectName("*:type=endpoints,*"), null).     assertEquals(3, set.size()).     uris = new HashSet<>(Arrays.asList("direct://start", "mock://foo", "mock://result")).     for (ObjectName on : set) {         boolean registered = mbeanServer.isRegistered(on).         assertTrue("Should be registered", registered).         String uri = (String) mbeanServer.getAttribute(on, "EndpointUri").         assertTrue(uri, uris.contains(uri)).     } }
