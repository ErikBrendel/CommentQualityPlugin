commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected String getBlueprintDescriptor() {     return "org/apache/camel/test/blueprint/BlueprintMultipleServiceTest.xml". }
false;protected;1;13;;@Override @SuppressWarnings("rawtypes") protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services) {     Dictionary<String, String> dict1 = new Hashtable<>().     dict1.put("component", "fakeservice1").     Dictionary<String, String> dict2 = new Hashtable<>().     dict2.put("component", "fakeservice2").     services.add(asKeyValueService(ComponentResolver.class.getName(), mockComponentOne, dict1)).     services.add(asKeyValueService(ComponentResolver.class.getName(), mockComponentTwo, dict2)). }
false;protected;0;8;;@Override protected CamelContext createCamelContext() throws Exception {     CamelContext context = super.createCamelContext().     context.addComponent("fakeservice1", mockComponentOne).     context.addComponent("fakeservice2", mockComponentTwo).     return context. }
false;public;0;11;;@Test public void testMultipleService() throws Exception {     template.sendBody("direct:start", "Camel").     fakeServiceOneMock.expectedMessageCount(1).     fakeServiceTwoMock.expectedMessageCount(1).     assertMockEndpointsSatisfied(). }
