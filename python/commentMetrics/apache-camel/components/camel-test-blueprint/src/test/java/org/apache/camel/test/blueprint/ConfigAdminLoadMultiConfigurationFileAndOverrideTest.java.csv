commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;5;;@Override protected String getBlueprintDescriptor() {     // which blueprint XML file to use for this test     return "org/apache/camel/test/blueprint/configadmin-loadmultifileoverride.xml". }
false;protected;0;5;;@Override protected String[] loadConfigAdminConfigurationFile() {     // which .cfg files to use, and their corresponding persistence-ids     return new String[] { "src/test/resources/etc/stuff.cfg", "stuff", "src/test/resources/etc/otherstuff.cfg", "otherstuff" }. }
false;protected;1;8;;@Override protected String useOverridePropertiesWithConfigAdmin(Dictionary properties) throws Exception {     // override / add extra properties     properties.put("arrive", "mock:otherExtra").     // return the persistence-id to use     return "otherstuff". }
false;public;0;13;;@Test public void testConfigAdminWithMultiplePids() throws Exception {     // mock:otherOriginal comes from <cm:default-properties>/<cm:property name="arrive" value="mock:otherOriginal" />     getMockEndpoint("mock:otherOriginal").setExpectedMessageCount(0).     // mock:result comes from loadConfigAdminConfigurationFile()     getMockEndpoint("mock:otherResult").setExpectedMessageCount(0).     // mock:extra comes from useOverridePropertiesWithConfigAdmin()     getMockEndpoint("mock:otherExtra").expectedBodiesReceived("Adieu World", "tiens! Adieu Worldtiens! Adieu World").     template.sendBody("direct:otherStart", "World").     assertMockEndpointsSatisfied(). }
