# id;timestamp;commentText;codeText;commentWords;codeWords
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary<String, String> props) throws Exception;1456327396;<p>Override this method to override config admin properties. Overriden properties will be passed to_{@link Configuration#update(Dictionary)} and may or may not lead to reload of Blueprint container - this_depends on <code>update-strategy="reload|none"</code> in <code>&lt_cm:property-placeholder&gt_</code></p>_<p>This method should be used to simulate configuration update <strong>after</strong> Blueprint container_is already initialized and started. Don't use this method to initialized ConfigAdmin configuration.</p>__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary<String, String> props) throws Exception {_        return null__    };p,override,this,method,to,override,config,admin,properties,overriden,properties,will,be,passed,to,link,configuration,update,dictionary,and,may,or,may,not,lead,to,reload,of,blueprint,container,this,depends,on,code,update,strategy,reload,none,code,in,code,lt,cm,property,placeholder,gt,code,p,p,this,method,should,be,used,to,simulate,configuration,update,strong,after,strong,blueprint,container,is,already,initialized,and,started,don,t,use,this,method,to,initialized,config,admin,configuration,p,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,string,string,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary<String, String> props) throws Exception;1458209138;<p>Override this method to override config admin properties. Overriden properties will be passed to_{@link Configuration#update(Dictionary)} and may or may not lead to reload of Blueprint container - this_depends on <code>update-strategy="reload|none"</code> in <code>&lt_cm:property-placeholder&gt_</code></p>_<p>This method should be used to simulate configuration update <strong>after</strong> Blueprint container_is already initialized and started. Don't use this method to initialized ConfigAdmin configuration.</p>__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary<String, String> props) throws Exception {_        return null__    };p,override,this,method,to,override,config,admin,properties,overriden,properties,will,be,passed,to,link,configuration,update,dictionary,and,may,or,may,not,lead,to,reload,of,blueprint,container,this,depends,on,code,update,strategy,reload,none,code,in,code,lt,cm,property,placeholder,gt,code,p,p,this,method,should,be,used,to,simulate,configuration,update,strong,after,strong,blueprint,container,is,already,initialized,and,started,don,t,use,this,method,to,initialized,config,admin,configuration,p,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,string,string,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary<String, String> props) throws Exception;1461352384;<p>Override this method to override config admin properties. Overriden properties will be passed to_{@link Configuration#update(Dictionary)} and may or may not lead to reload of Blueprint container - this_depends on <code>update-strategy="reload|none"</code> in <code>&lt_cm:property-placeholder&gt_</code></p>_<p>This method should be used to simulate configuration update <strong>after</strong> Blueprint container_is already initialized and started. Don't use this method to initialized ConfigAdmin configuration.</p>__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary<String, String> props) throws Exception {_        return null__    };p,override,this,method,to,override,config,admin,properties,overriden,properties,will,be,passed,to,link,configuration,update,dictionary,and,may,or,may,not,lead,to,reload,of,blueprint,container,this,depends,on,code,update,strategy,reload,none,code,in,code,lt,cm,property,placeholder,gt,code,p,p,this,method,should,be,used,to,simulate,configuration,update,strong,after,strong,blueprint,container,is,already,initialized,and,started,don,t,use,this,method,to,initialized,config,admin,configuration,p,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,string,string,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary<String, String> props) throws Exception;1461352968;<p>Override this method to override config admin properties. Overriden properties will be passed to_{@link Configuration#update(Dictionary)} and may or may not lead to reload of Blueprint container - this_depends on <code>update-strategy="reload|none"</code> in <code>&lt_cm:property-placeholder&gt_</code></p>_<p>This method should be used to simulate configuration update <strong>after</strong> Blueprint container_is already initialized and started. Don't use this method to initialized ConfigAdmin configuration.</p>__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary<String, String> props) throws Exception {_        return null__    };p,override,this,method,to,override,config,admin,properties,overriden,properties,will,be,passed,to,link,configuration,update,dictionary,and,may,or,may,not,lead,to,reload,of,blueprint,container,this,depends,on,code,update,strategy,reload,none,code,in,code,lt,cm,property,placeholder,gt,code,p,p,this,method,should,be,used,to,simulate,configuration,update,strong,after,strong,blueprint,container,is,already,initialized,and,started,don,t,use,this,method,to,initialized,config,admin,configuration,p,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,string,string,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary<String, String> props) throws Exception;1486057633;<p>Override this method to override config admin properties. Overriden properties will be passed to_{@link Configuration#update(Dictionary)} and may or may not lead to reload of Blueprint container - this_depends on <code>update-strategy="reload|none"</code> in <code>&lt_cm:property-placeholder&gt_</code></p>_<p>This method should be used to simulate configuration update <strong>after</strong> Blueprint container_is already initialized and started. Don't use this method to initialized ConfigAdmin configuration.</p>__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary<String, String> props) throws Exception {_        return null__    };p,override,this,method,to,override,config,admin,properties,overriden,properties,will,be,passed,to,link,configuration,update,dictionary,and,may,or,may,not,lead,to,reload,of,blueprint,container,this,depends,on,code,update,strategy,reload,none,code,in,code,lt,cm,property,placeholder,gt,code,p,p,this,method,should,be,used,to,simulate,configuration,update,strong,after,strong,blueprint,container,is,already,initialized,and,started,don,t,use,this,method,to,initialized,config,admin,configuration,p,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,string,string,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary<String, String> props) throws Exception;1498733069;<p>Override this method to override config admin properties. Overriden properties will be passed to_{@link Configuration#update(Dictionary)} and may or may not lead to reload of Blueprint container - this_depends on <code>update-strategy="reload|none"</code> in <code>&lt_cm:property-placeholder&gt_</code></p>_<p>This method should be used to simulate configuration update <strong>after</strong> Blueprint container_is already initialized and started. Don't use this method to initialized ConfigAdmin configuration.</p>__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary<String, String> props) throws Exception {_        return null__    };p,override,this,method,to,override,config,admin,properties,overriden,properties,will,be,passed,to,link,configuration,update,dictionary,and,may,or,may,not,lead,to,reload,of,blueprint,container,this,depends,on,code,update,strategy,reload,none,code,in,code,lt,cm,property,placeholder,gt,code,p,p,this,method,should,be,used,to,simulate,configuration,update,strong,after,strong,blueprint,container,is,already,initialized,and,started,don,t,use,this,method,to,initialized,config,admin,configuration,p,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,string,string,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary<String, String> props) throws Exception;1498733823;<p>Override this method to override config admin properties. Overriden properties will be passed to_{@link Configuration#update(Dictionary)} and may or may not lead to reload of Blueprint container - this_depends on <code>update-strategy="reload|none"</code> in <code>&lt_cm:property-placeholder&gt_</code></p>_<p>This method should be used to simulate configuration update <strong>after</strong> Blueprint container_is already initialized and started. Don't use this method to initialized ConfigAdmin configuration.</p>__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary<String, String> props) throws Exception {_        return null__    };p,override,this,method,to,override,config,admin,properties,overriden,properties,will,be,passed,to,link,configuration,update,dictionary,and,may,or,may,not,lead,to,reload,of,blueprint,container,this,depends,on,code,update,strategy,reload,none,code,in,code,lt,cm,property,placeholder,gt,code,p,p,this,method,should,be,used,to,simulate,configuration,update,strong,after,strong,blueprint,container,is,already,initialized,and,started,don,t,use,this,method,to,initialized,config,admin,configuration,p,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,string,string,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary<String, String> props) throws Exception;1524063209;<p>Override this method to override config admin properties. Overriden properties will be passed to_{@link Configuration#update(Dictionary)} and may or may not lead to reload of Blueprint container - this_depends on <code>update-strategy="reload|none"</code> in <code>&lt_cm:property-placeholder&gt_</code></p>_<p>This method should be used to simulate configuration update <strong>after</strong> Blueprint container_is already initialized and started. Don't use this method to initialized ConfigAdmin configuration.</p>__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary<String, String> props) throws Exception {_        return null__    };p,override,this,method,to,override,config,admin,properties,overriden,properties,will,be,passed,to,link,configuration,update,dictionary,and,may,or,may,not,lead,to,reload,of,blueprint,container,this,depends,on,code,update,strategy,reload,none,code,in,code,lt,cm,property,placeholder,gt,code,p,p,this,method,should,be,used,to,simulate,configuration,update,strong,after,strong,blueprint,container,is,already,initialized,and,started,don,t,use,this,method,to,initialized,config,admin,configuration,p,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,string,string,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary<String, String> props) throws Exception;1528210046;<p>Override this method to override config admin properties. Overriden properties will be passed to_{@link Configuration#update(Dictionary)} and may or may not lead to reload of Blueprint container - this_depends on <code>update-strategy="reload|none"</code> in <code>&lt_cm:property-placeholder&gt_</code></p>_<p>This method should be used to simulate configuration update <strong>after</strong> Blueprint container_is already initialized and started. Don't use this method to initialized ConfigAdmin configuration.</p>__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary<String, String> props) throws Exception {_        return null__    };p,override,this,method,to,override,config,admin,properties,overriden,properties,will,be,passed,to,link,configuration,update,dictionary,and,may,or,may,not,lead,to,reload,of,blueprint,container,this,depends,on,code,update,strategy,reload,none,code,in,code,lt,cm,property,placeholder,gt,code,p,p,this,method,should,be,used,to,simulate,configuration,update,strong,after,strong,blueprint,container,is,already,initialized,and,started,don,t,use,this,method,to,initialized,config,admin,configuration,p,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,string,string,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary<String, String> props) throws Exception;1544618083;<p>Override this method to override config admin properties. Overriden properties will be passed to_{@link Configuration#update(Dictionary)} and may or may not lead to reload of Blueprint container - this_depends on <code>update-strategy="reload|none"</code> in <code>&lt_cm:property-placeholder&gt_</code></p>_<p>This method should be used to simulate configuration update <strong>after</strong> Blueprint container_is already initialized and started. Don't use this method to initialized ConfigAdmin configuration.</p>__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary<String, String> props) throws Exception {_        return null__    };p,override,this,method,to,override,config,admin,properties,overriden,properties,will,be,passed,to,link,configuration,update,dictionary,and,may,or,may,not,lead,to,reload,of,blueprint,container,this,depends,on,code,update,strategy,reload,none,code,in,code,lt,cm,property,placeholder,gt,code,p,p,this,method,should,be,used,to,simulate,configuration,update,strong,after,strong,blueprint,container,is,already,initialized,and,started,don,t,use,this,method,to,initialized,config,admin,configuration,p,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,string,string,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected List<BundleDescriptor> getBundleDescriptors() throws Exception;1329920108;Gets list of bundle descriptors. Modify this method if you wish to change_default behavior.__@return List pointers to OSGi bundles._@throws Exception If looking up the bundles fails.;protected List<BundleDescriptor> getBundleDescriptors() throws Exception {_        return new ClasspathScanner().scanForBundles("(Bundle-SymbolicName=*)")__    };gets,list,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,list,pointers,to,osgi,bundles,throws,exception,if,looking,up,the,bundles,fails;protected,list,bundle,descriptor,get,bundle,descriptors,throws,exception,return,new,classpath,scanner,scan,for,bundles,bundle,symbolic,name
CamelBlueprintTestSupport -> protected List<BundleDescriptor> getBundleDescriptors() throws Exception;1334006191;Gets list of bundle descriptors. Modify this method if you wish to change_default behavior.__@return List pointers to OSGi bundles._@throws Exception If looking up the bundles fails.;protected List<BundleDescriptor> getBundleDescriptors() throws Exception {_        return new ClasspathScanner().scanForBundles("(Bundle-SymbolicName=*)")__    };gets,list,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,list,pointers,to,osgi,bundles,throws,exception,if,looking,up,the,bundles,fails;protected,list,bundle,descriptor,get,bundle,descriptors,throws,exception,return,new,classpath,scanner,scan,for,bundles,bundle,symbolic,name
CamelBlueprintTestSupport -> private static Collection<ServiceReference<?>> asCollection(ServiceReference<?>[] references);1327012901;Provides an iterable collection of references, even if the original array is <code>null</code>.;private static Collection<ServiceReference<?>> asCollection(ServiceReference<?>[] references) {_        return references  == null ? new ArrayList<ServiceReference<?>>(0) : Arrays.asList(references)__    };provides,an,iterable,collection,of,references,even,if,the,original,array,is,code,null,code;private,static,collection,service,reference,as,collection,service,reference,references,return,references,null,new,array,list,service,reference,0,arrays,as,list,references
CamelBlueprintTestSupport -> private static Collection<ServiceReference<?>> asCollection(ServiceReference<?>[] references);1327327884;Provides an iterable collection of references, even if the original array is <code>null</code>.;private static Collection<ServiceReference<?>> asCollection(ServiceReference<?>[] references) {_        return references  == null ? new ArrayList<ServiceReference<?>>(0) : Arrays.asList(references)__    };provides,an,iterable,collection,of,references,even,if,the,original,array,is,code,null,code;private,static,collection,service,reference,as,collection,service,reference,references,return,references,null,new,array,list,service,reference,0,arrays,as,list,references
CamelBlueprintTestSupport -> private static Collection<ServiceReference<?>> asCollection(ServiceReference<?>[] references);1327330106;Provides an iterable collection of references, even if the original array is <code>null</code>.;private static Collection<ServiceReference<?>> asCollection(ServiceReference<?>[] references) {_        return references  == null ? new ArrayList<ServiceReference<?>>(0) : Arrays.asList(references)__    };provides,an,iterable,collection,of,references,even,if,the,original,array,is,code,null,code;private,static,collection,service,reference,as,collection,service,reference,references,return,references,null,new,array,list,service,reference,0,arrays,as,list,references
CamelBlueprintTestSupport -> private static Collection<ServiceReference<?>> asCollection(ServiceReference<?>[] references);1327336123;Provides an iterable collection of references, even if the original array is <code>null</code>.;private static Collection<ServiceReference<?>> asCollection(ServiceReference<?>[] references) {_        return references  == null ? new ArrayList<ServiceReference<?>>(0) : Arrays.asList(references)__    };provides,an,iterable,collection,of,references,even,if,the,original,array,is,code,null,code;private,static,collection,service,reference,as,collection,service,reference,references,return,references,null,new,array,list,service,reference,0,arrays,as,list,references
CamelBlueprintTestSupport -> private static Collection<ServiceReference<?>> asCollection(ServiceReference<?>[] references);1327349321;Provides an iterable collection of references, even if the original array is <code>null</code>.;private static Collection<ServiceReference<?>> asCollection(ServiceReference<?>[] references) {_        return references  == null ? new ArrayList<ServiceReference<?>>(0) : Arrays.asList(references)__    };provides,an,iterable,collection,of,references,even,if,the,original,array,is,code,null,code;private,static,collection,service,reference,as,collection,service,reference,references,return,references,null,new,array,list,service,reference,0,arrays,as,list,references
CamelBlueprintTestSupport -> private static Collection<ServiceReference<?>> asCollection(ServiceReference<?>[] references);1327416359;Provides an iterable collection of references, even if the original array is <code>null</code>.;private static Collection<ServiceReference<?>> asCollection(ServiceReference<?>[] references) {_        return references  == null ? new ArrayList<ServiceReference<?>>(0) : Arrays.asList(references)__    };provides,an,iterable,collection,of,references,even,if,the,original,array,is,code,null,code;private,static,collection,service,reference,as,collection,service,reference,references,return,references,null,new,array,list,service,reference,0,arrays,as,list,references
CamelBlueprintTestSupport -> private static Collection<ServiceReference<?>> asCollection(ServiceReference<?>[] references);1329920108;Provides an iterable collection of references, even if the original array is <code>null</code>.;private static Collection<ServiceReference<?>> asCollection(ServiceReference<?>[] references) {_        return references  == null ? new ArrayList<ServiceReference<?>>(0) : Arrays.asList(references)__    };provides,an,iterable,collection,of,references,even,if,the,original,array,is,code,null,code;private,static,collection,service,reference,as,collection,service,reference,references,return,references,null,new,array,list,service,reference,0,arrays,as,list,references
CamelBlueprintTestSupport -> private static Collection<ServiceReference<?>> asCollection(ServiceReference<?>[] references);1334006191;Provides an iterable collection of references, even if the original array is <code>null</code>.;private static Collection<ServiceReference<?>> asCollection(ServiceReference<?>[] references) {_        return references  == null ? new ArrayList<ServiceReference<?>>(0) : Arrays.asList(references)__    };provides,an,iterable,collection,of,references,even,if,the,original,array,is,code,null,code;private,static,collection,service,reference,as,collection,service,reference,references,return,references,null,new,array,list,service,reference,0,arrays,as,list,references
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception;1360324485;Override this method to override config admin properties.__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception {_        return null__    };override,this,method,to,override,config,admin,properties,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception;1360335319;Override this method to override config admin properties.__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception {_        return null__    };override,this,method,to,override,config,admin,properties,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception;1360840554;Override this method to override config admin properties.__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception {_        return null__    };override,this,method,to,override,config,admin,properties,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception;1363726640;Override this method to override config admin properties.__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception {_        return null__    };override,this,method,to,override,config,admin,properties,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception;1364362255;Override this method to override config admin properties.__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception {_        return null__    };override,this,method,to,override,config,admin,properties,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception;1364651477;Override this method to override config admin properties.__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception {_        return null__    };override,this,method,to,override,config,admin,properties,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception;1368004799;Override this method to override config admin properties.__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception {_        return null__    };override,this,method,to,override,config,admin,properties,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception;1373187183;Override this method to override config admin properties.__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception {_        return null__    };override,this,method,to,override,config,admin,properties,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception;1373223799;Override this method to override config admin properties.__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception {_        return null__    };override,this,method,to,override,config,admin,properties,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception;1373448419;Override this method to override config admin properties.__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception {_        return null__    };override,this,method,to,override,config,admin,properties,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception;1378117940;Override this method to override config admin properties.__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception {_        return null__    };override,this,method,to,override,config,admin,properties,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception;1379386731;Override this method to override config admin properties.__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception {_        return null__    };override,this,method,to,override,config,admin,properties,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception;1381253992;Override this method to override config admin properties.__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception {_        return null__    };override,this,method,to,override,config,admin,properties,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception;1385476973;Override this method to override config admin properties.__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception {_        return null__    };override,this,method,to,override,config,admin,properties,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception;1405374721;Override this method to override config admin properties.__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception {_        return null__    };override,this,method,to,override,config,admin,properties,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception;1431242312;Override this method to override config admin properties.__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception {_        return null__    };override,this,method,to,override,config,admin,properties,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception;1437396697;Override this method to override config admin properties.__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception {_        return null__    };override,this,method,to,override,config,admin,properties,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception;1437396697;Override this method to override config admin properties.__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception {_        return null__    };override,this,method,to,override,config,admin,properties,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception;1437396697;Override this method to override config admin properties.__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception {_        return null__    };override,this,method,to,override,config,admin,properties,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception;1437396697;Override this method to override config admin properties.__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception {_        return null__    };override,this,method,to,override,config,admin,properties,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception;1437396697;Override this method to override config admin properties.__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception {_        return null__    };override,this,method,to,override,config,admin,properties,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception;1437396698;Override this method to override config admin properties.__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception {_        return null__    };override,this,method,to,override,config,admin,properties,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception;1437396698;Override this method to override config admin properties.__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception {_        return null__    };override,this,method,to,override,config,admin,properties,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception;1442412776;Override this method to override config admin properties.__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception {_        return null__    };override,this,method,to,override,config,admin,properties,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception;1449942375;Override this method to override config admin properties. Overriden properties will be passed to_{@link Configuration#update(Dictionary)} and may or may not lead to reload of Blueprint container - this_depends on <code>update-strategy="reload|none"</code> in <code>&lt_cm:property-placeholder&gt_</code>__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception {_        return null__    };override,this,method,to,override,config,admin,properties,overriden,properties,will,be,passed,to,link,configuration,update,dictionary,and,may,or,may,not,lead,to,reload,of,blueprint,container,this,depends,on,code,update,strategy,reload,none,code,in,code,lt,cm,property,placeholder,gt,code,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception;1449947902;Override this method to override config admin properties. Overriden properties will be passed to_{@link Configuration#update(Dictionary)} and may or may not lead to reload of Blueprint container - this_depends on <code>update-strategy="reload|none"</code> in <code>&lt_cm:property-placeholder&gt_</code>__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception {_        return null__    };override,this,method,to,override,config,admin,properties,overriden,properties,will,be,passed,to,link,configuration,update,dictionary,and,may,or,may,not,lead,to,reload,of,blueprint,container,this,depends,on,code,update,strategy,reload,none,code,in,code,lt,cm,property,placeholder,gt,code,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception;1456295809;Override this method to override config admin properties. Overriden properties will be passed to_{@link Configuration#update(Dictionary)} and may or may not lead to reload of Blueprint container - this_depends on <code>update-strategy="reload|none"</code> in <code>&lt_cm:property-placeholder&gt_</code>__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception {_        return null__    };override,this,method,to,override,config,admin,properties,overriden,properties,will,be,passed,to,link,configuration,update,dictionary,and,may,or,may,not,lead,to,reload,of,blueprint,container,this,depends,on,code,update,strategy,reload,none,code,in,code,lt,cm,property,placeholder,gt,code,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception;1456298245;Override this method to override config admin properties. Overriden properties will be passed to_{@link Configuration#update(Dictionary)} and may or may not lead to reload of Blueprint container - this_depends on <code>update-strategy="reload|none"</code> in <code>&lt_cm:property-placeholder&gt_</code>__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception {_        return null__    };override,this,method,to,override,config,admin,properties,overriden,properties,will,be,passed,to,link,configuration,update,dictionary,and,may,or,may,not,lead,to,reload,of,blueprint,container,this,depends,on,code,update,strategy,reload,none,code,in,code,lt,cm,property,placeholder,gt,code,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception;1456320648;Override this method to override config admin properties. Overriden properties will be passed to_{@link Configuration#update(Dictionary)} and may or may not lead to reload of Blueprint container - this_depends on <code>update-strategy="reload|none"</code> in <code>&lt_cm:property-placeholder&gt_</code>__@param props properties where you add the properties to override_@return the PID of the OSGi {@link ConfigurationAdmin} which are defined in the Blueprint XML file.;protected String useOverridePropertiesWithConfigAdmin(Dictionary props) throws Exception {_        return null__    };override,this,method,to,override,config,admin,properties,overriden,properties,will,be,passed,to,link,configuration,update,dictionary,and,may,or,may,not,lead,to,reload,of,blueprint,container,this,depends,on,code,update,strategy,reload,none,code,in,code,lt,cm,property,placeholder,gt,code,param,props,properties,where,you,add,the,properties,to,override,return,the,pid,of,the,osgi,link,configuration,admin,which,are,defined,in,the,blueprint,xml,file;protected,string,use,override,properties,with,config,admin,dictionary,props,throws,exception,return,null
CamelBlueprintTestSupport -> protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate();1437396697;This method may be overriden to instruct BP test support that BP container will reloaded when_Config Admin configuration is updated. By default, this is expected, when blueprint XML definition_contains <code>&lt_cm:property-placeholder persistent-id="PID" update-strategy="reload"&gt_</code>;protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate() {_        boolean expectedReload = false__        String descriptor = getBlueprintDescriptor()__        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance()__        dbf.setNamespaceAware(true)__        try {_            _            Set<String> cmNamesaces = new HashSet<>(Arrays.asList(_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_1,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_2,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_3_            ))__            DocumentBuilder db = dbf.newDocumentBuilder()__            Document doc = db.parse(getClass().getClassLoader().getResourceAsStream(descriptor))__            NodeList nl = doc.getDocumentElement().getChildNodes()__            for (int i = 0_ i < nl.getLength()_ i++) {_                Node node = nl.item(i)__                if (node instanceof Element) {_                    Element pp = (Element) node__                    if (cmNamesaces.contains(pp.getNamespaceURI())) {_                        String us = pp.getAttribute("update-strategy")__                        if (us != null && us.equals("reload")) {_                            expectedReload = true__                            break__                        }_                    }_                }_            }_        } catch (Exception e) {_            throw new RuntimeException(e.getMessage(), e)__        }_        return expectedReload__    };this,method,may,be,overriden,to,instruct,bp,test,support,that,bp,container,will,reloaded,when,config,admin,configuration,is,updated,by,default,this,is,expected,when,blueprint,xml,definition,contains,code,lt,cm,property,placeholder,persistent,id,pid,update,strategy,reload,gt,code;protected,boolean,expect,blueprint,container,reload,on,config,admin,update,boolean,expected,reload,false,string,descriptor,get,blueprint,descriptor,document,builder,factory,dbf,document,builder,factory,new,instance,dbf,set,namespace,aware,true,try,set,string,cm,namesaces,new,hash,set,arrays,as,list,cm,namespace,handler,cm,namespace,handler,cm,namespace,handler,document,builder,db,dbf,new,document,builder,document,doc,db,parse,get,class,get,class,loader,get,resource,as,stream,descriptor,node,list,nl,doc,get,document,element,get,child,nodes,for,int,i,0,i,nl,get,length,i,node,node,nl,item,i,if,node,instanceof,element,element,pp,element,node,if,cm,namesaces,contains,pp,get,namespace,uri,string,us,pp,get,attribute,update,strategy,if,us,null,us,equals,reload,expected,reload,true,break,catch,exception,e,throw,new,runtime,exception,e,get,message,e,return,expected,reload
CamelBlueprintTestSupport -> protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate();1437396698;This method may be overriden to instruct BP test support that BP container will reloaded when_Config Admin configuration is updated. By default, this is expected, when blueprint XML definition_contains <code>&lt_cm:property-placeholder persistent-id="PID" update-strategy="reload"&gt_</code>;protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate() {_        boolean expectedReload = false__        String descriptor = getBlueprintDescriptor()__        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance()__        dbf.setNamespaceAware(true)__        try {_            _            Set<String> cmNamesaces = new HashSet<>(Arrays.asList(_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_1,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_2,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_3_            ))__            DocumentBuilder db = dbf.newDocumentBuilder()__            Document doc = db.parse(getClass().getClassLoader().getResourceAsStream(descriptor))__            NodeList nl = doc.getDocumentElement().getChildNodes()__            for (int i = 0_ i < nl.getLength()_ i++) {_                Node node = nl.item(i)__                if (node instanceof Element) {_                    Element pp = (Element) node__                    if (cmNamesaces.contains(pp.getNamespaceURI())) {_                        String us = pp.getAttribute("update-strategy")__                        if (us != null && us.equals("reload")) {_                            expectedReload = true__                            break__                        }_                    }_                }_            }_        } catch (Exception e) {_            throw new RuntimeException(e.getMessage(), e)__        }_        return expectedReload__    };this,method,may,be,overriden,to,instruct,bp,test,support,that,bp,container,will,reloaded,when,config,admin,configuration,is,updated,by,default,this,is,expected,when,blueprint,xml,definition,contains,code,lt,cm,property,placeholder,persistent,id,pid,update,strategy,reload,gt,code;protected,boolean,expect,blueprint,container,reload,on,config,admin,update,boolean,expected,reload,false,string,descriptor,get,blueprint,descriptor,document,builder,factory,dbf,document,builder,factory,new,instance,dbf,set,namespace,aware,true,try,set,string,cm,namesaces,new,hash,set,arrays,as,list,cm,namespace,handler,cm,namespace,handler,cm,namespace,handler,document,builder,db,dbf,new,document,builder,document,doc,db,parse,get,class,get,class,loader,get,resource,as,stream,descriptor,node,list,nl,doc,get,document,element,get,child,nodes,for,int,i,0,i,nl,get,length,i,node,node,nl,item,i,if,node,instanceof,element,element,pp,element,node,if,cm,namesaces,contains,pp,get,namespace,uri,string,us,pp,get,attribute,update,strategy,if,us,null,us,equals,reload,expected,reload,true,break,catch,exception,e,throw,new,runtime,exception,e,get,message,e,return,expected,reload
CamelBlueprintTestSupport -> protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate();1437396698;This method may be overriden to instruct BP test support that BP container will reloaded when_Config Admin configuration is updated. By default, this is expected, when blueprint XML definition_contains <code>&lt_cm:property-placeholder persistent-id="PID" update-strategy="reload"&gt_</code>;protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate() {_        boolean expectedReload = false__        String descriptor = getBlueprintDescriptor()__        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance()__        dbf.setNamespaceAware(true)__        try {_            _            Set<String> cmNamesaces = new HashSet<>(Arrays.asList(_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_1,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_2,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_3_            ))__            DocumentBuilder db = dbf.newDocumentBuilder()__            Document doc = db.parse(getClass().getClassLoader().getResourceAsStream(descriptor))__            NodeList nl = doc.getDocumentElement().getChildNodes()__            for (int i = 0_ i < nl.getLength()_ i++) {_                Node node = nl.item(i)__                if (node instanceof Element) {_                    Element pp = (Element) node__                    if (cmNamesaces.contains(pp.getNamespaceURI())) {_                        String us = pp.getAttribute("update-strategy")__                        if (us != null && us.equals("reload")) {_                            expectedReload = true__                            break__                        }_                    }_                }_            }_        } catch (Exception e) {_            throw new RuntimeException(e.getMessage(), e)__        }_        return expectedReload__    };this,method,may,be,overriden,to,instruct,bp,test,support,that,bp,container,will,reloaded,when,config,admin,configuration,is,updated,by,default,this,is,expected,when,blueprint,xml,definition,contains,code,lt,cm,property,placeholder,persistent,id,pid,update,strategy,reload,gt,code;protected,boolean,expect,blueprint,container,reload,on,config,admin,update,boolean,expected,reload,false,string,descriptor,get,blueprint,descriptor,document,builder,factory,dbf,document,builder,factory,new,instance,dbf,set,namespace,aware,true,try,set,string,cm,namesaces,new,hash,set,arrays,as,list,cm,namespace,handler,cm,namespace,handler,cm,namespace,handler,document,builder,db,dbf,new,document,builder,document,doc,db,parse,get,class,get,class,loader,get,resource,as,stream,descriptor,node,list,nl,doc,get,document,element,get,child,nodes,for,int,i,0,i,nl,get,length,i,node,node,nl,item,i,if,node,instanceof,element,element,pp,element,node,if,cm,namesaces,contains,pp,get,namespace,uri,string,us,pp,get,attribute,update,strategy,if,us,null,us,equals,reload,expected,reload,true,break,catch,exception,e,throw,new,runtime,exception,e,get,message,e,return,expected,reload
CamelBlueprintTestSupport -> protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate();1442412776;This method may be overriden to instruct BP test support that BP container will reloaded when_Config Admin configuration is updated. By default, this is expected, when blueprint XML definition_contains <code>&lt_cm:property-placeholder persistent-id="PID" update-strategy="reload"&gt_</code>;protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate() {_        boolean expectedReload = false__        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance()__        dbf.setNamespaceAware(true)__        try {_            _            Set<String> cmNamesaces = new HashSet<>(Arrays.asList(_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_1,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_2,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_3_            ))__            for (URL descriptor : CamelBlueprintHelper.getBlueprintDescriptors(getBlueprintDescriptor())) {_                DocumentBuilder db = dbf.newDocumentBuilder()__                try (InputStream is = descriptor.openStream()) {_                    Document doc = db.parse(is)__                    NodeList nl = doc.getDocumentElement().getChildNodes()__                    for (int i = 0_ i < nl.getLength()_ i++) {_                        Node node = nl.item(i)__                        if (node instanceof Element) {_                            Element pp = (Element) node__                            if (cmNamesaces.contains(pp.getNamespaceURI())) {_                                String us = pp.getAttribute("update-strategy")__                                if (us != null && us.equals("reload")) {_                                    expectedReload = true__                                    break__                                }_                            }_                        }_                    }_                }_            }_        } catch (Exception e) {_            throw new RuntimeException(e.getMessage(), e)__        }_        return expectedReload__    };this,method,may,be,overriden,to,instruct,bp,test,support,that,bp,container,will,reloaded,when,config,admin,configuration,is,updated,by,default,this,is,expected,when,blueprint,xml,definition,contains,code,lt,cm,property,placeholder,persistent,id,pid,update,strategy,reload,gt,code;protected,boolean,expect,blueprint,container,reload,on,config,admin,update,boolean,expected,reload,false,document,builder,factory,dbf,document,builder,factory,new,instance,dbf,set,namespace,aware,true,try,set,string,cm,namesaces,new,hash,set,arrays,as,list,cm,namespace,handler,cm,namespace,handler,cm,namespace,handler,for,url,descriptor,camel,blueprint,helper,get,blueprint,descriptors,get,blueprint,descriptor,document,builder,db,dbf,new,document,builder,try,input,stream,is,descriptor,open,stream,document,doc,db,parse,is,node,list,nl,doc,get,document,element,get,child,nodes,for,int,i,0,i,nl,get,length,i,node,node,nl,item,i,if,node,instanceof,element,element,pp,element,node,if,cm,namesaces,contains,pp,get,namespace,uri,string,us,pp,get,attribute,update,strategy,if,us,null,us,equals,reload,expected,reload,true,break,catch,exception,e,throw,new,runtime,exception,e,get,message,e,return,expected,reload
CamelBlueprintTestSupport -> protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate();1449942375;This method may be overriden to instruct BP test support that BP container will reloaded when_Config Admin configuration is updated. By default, this is expected, when blueprint XML definition_contains <code>&lt_cm:property-placeholder persistent-id="PID" update-strategy="reload"&gt_</code>;protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate() {_        boolean expectedReload = false__        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance()__        dbf.setNamespaceAware(true)__        try {_            _            Set<String> cmNamesaces = new HashSet<>(Arrays.asList(_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_1,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_2,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_3_            ))__            for (URL descriptor : CamelBlueprintHelper.getBlueprintDescriptors(getBlueprintDescriptor())) {_                DocumentBuilder db = dbf.newDocumentBuilder()__                try (InputStream is = descriptor.openStream()) {_                    Document doc = db.parse(is)__                    NodeList nl = doc.getDocumentElement().getChildNodes()__                    for (int i = 0_ i < nl.getLength()_ i++) {_                        Node node = nl.item(i)__                        if (node instanceof Element) {_                            Element pp = (Element) node__                            if (cmNamesaces.contains(pp.getNamespaceURI())) {_                                String us = pp.getAttribute("update-strategy")__                                if (us != null && us.equals("reload")) {_                                    expectedReload = true__                                    break__                                }_                            }_                        }_                    }_                }_            }_        } catch (Exception e) {_            throw new RuntimeException(e.getMessage(), e)__        }_        return expectedReload__    };this,method,may,be,overriden,to,instruct,bp,test,support,that,bp,container,will,reloaded,when,config,admin,configuration,is,updated,by,default,this,is,expected,when,blueprint,xml,definition,contains,code,lt,cm,property,placeholder,persistent,id,pid,update,strategy,reload,gt,code;protected,boolean,expect,blueprint,container,reload,on,config,admin,update,boolean,expected,reload,false,document,builder,factory,dbf,document,builder,factory,new,instance,dbf,set,namespace,aware,true,try,set,string,cm,namesaces,new,hash,set,arrays,as,list,cm,namespace,handler,cm,namespace,handler,cm,namespace,handler,for,url,descriptor,camel,blueprint,helper,get,blueprint,descriptors,get,blueprint,descriptor,document,builder,db,dbf,new,document,builder,try,input,stream,is,descriptor,open,stream,document,doc,db,parse,is,node,list,nl,doc,get,document,element,get,child,nodes,for,int,i,0,i,nl,get,length,i,node,node,nl,item,i,if,node,instanceof,element,element,pp,element,node,if,cm,namesaces,contains,pp,get,namespace,uri,string,us,pp,get,attribute,update,strategy,if,us,null,us,equals,reload,expected,reload,true,break,catch,exception,e,throw,new,runtime,exception,e,get,message,e,return,expected,reload
CamelBlueprintTestSupport -> protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate();1449947902;This method may be overriden to instruct BP test support that BP container will reloaded when_Config Admin configuration is updated. By default, this is expected, when blueprint XML definition_contains <code>&lt_cm:property-placeholder persistent-id="PID" update-strategy="reload"&gt_</code>;protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate() {_        boolean expectedReload = false__        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance()__        dbf.setNamespaceAware(true)__        try {_            _            Set<String> cmNamesaces = new HashSet<>(Arrays.asList(_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_1,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_2,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_3_            ))__            for (URL descriptor : CamelBlueprintHelper.getBlueprintDescriptors(getBlueprintDescriptor())) {_                DocumentBuilder db = dbf.newDocumentBuilder()__                try (InputStream is = descriptor.openStream()) {_                    Document doc = db.parse(is)__                    NodeList nl = doc.getDocumentElement().getChildNodes()__                    for (int i = 0_ i < nl.getLength()_ i++) {_                        Node node = nl.item(i)__                        if (node instanceof Element) {_                            Element pp = (Element) node__                            if (cmNamesaces.contains(pp.getNamespaceURI())) {_                                String us = pp.getAttribute("update-strategy")__                                if (us != null && us.equals("reload")) {_                                    expectedReload = true__                                    break__                                }_                            }_                        }_                    }_                }_            }_        } catch (Exception e) {_            throw new RuntimeException(e.getMessage(), e)__        }_        return expectedReload__    };this,method,may,be,overriden,to,instruct,bp,test,support,that,bp,container,will,reloaded,when,config,admin,configuration,is,updated,by,default,this,is,expected,when,blueprint,xml,definition,contains,code,lt,cm,property,placeholder,persistent,id,pid,update,strategy,reload,gt,code;protected,boolean,expect,blueprint,container,reload,on,config,admin,update,boolean,expected,reload,false,document,builder,factory,dbf,document,builder,factory,new,instance,dbf,set,namespace,aware,true,try,set,string,cm,namesaces,new,hash,set,arrays,as,list,cm,namespace,handler,cm,namespace,handler,cm,namespace,handler,for,url,descriptor,camel,blueprint,helper,get,blueprint,descriptors,get,blueprint,descriptor,document,builder,db,dbf,new,document,builder,try,input,stream,is,descriptor,open,stream,document,doc,db,parse,is,node,list,nl,doc,get,document,element,get,child,nodes,for,int,i,0,i,nl,get,length,i,node,node,nl,item,i,if,node,instanceof,element,element,pp,element,node,if,cm,namesaces,contains,pp,get,namespace,uri,string,us,pp,get,attribute,update,strategy,if,us,null,us,equals,reload,expected,reload,true,break,catch,exception,e,throw,new,runtime,exception,e,get,message,e,return,expected,reload
CamelBlueprintTestSupport -> protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate();1456295809;This method may be overriden to instruct BP test support that BP container will reloaded when_Config Admin configuration is updated. By default, this is expected, when blueprint XML definition_contains <code>&lt_cm:property-placeholder persistent-id="PID" update-strategy="reload"&gt_</code>;protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate() {_        boolean expectedReload = false__        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance()__        dbf.setNamespaceAware(true)__        try {_            _            Set<String> cmNamesaces = new HashSet<>(Arrays.asList(_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_1,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_2,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_3_            ))__            for (URL descriptor : CamelBlueprintHelper.getBlueprintDescriptors(getBlueprintDescriptor())) {_                DocumentBuilder db = dbf.newDocumentBuilder()__                try (InputStream is = descriptor.openStream()) {_                    Document doc = db.parse(is)__                    NodeList nl = doc.getDocumentElement().getChildNodes()__                    for (int i = 0_ i < nl.getLength()_ i++) {_                        Node node = nl.item(i)__                        if (node instanceof Element) {_                            Element pp = (Element) node__                            if (cmNamesaces.contains(pp.getNamespaceURI())) {_                                String us = pp.getAttribute("update-strategy")__                                if (us != null && us.equals("reload")) {_                                    expectedReload = true__                                    break__                                }_                            }_                        }_                    }_                }_            }_        } catch (Exception e) {_            throw new RuntimeException(e.getMessage(), e)__        }_        return expectedReload__    };this,method,may,be,overriden,to,instruct,bp,test,support,that,bp,container,will,reloaded,when,config,admin,configuration,is,updated,by,default,this,is,expected,when,blueprint,xml,definition,contains,code,lt,cm,property,placeholder,persistent,id,pid,update,strategy,reload,gt,code;protected,boolean,expect,blueprint,container,reload,on,config,admin,update,boolean,expected,reload,false,document,builder,factory,dbf,document,builder,factory,new,instance,dbf,set,namespace,aware,true,try,set,string,cm,namesaces,new,hash,set,arrays,as,list,cm,namespace,handler,cm,namespace,handler,cm,namespace,handler,for,url,descriptor,camel,blueprint,helper,get,blueprint,descriptors,get,blueprint,descriptor,document,builder,db,dbf,new,document,builder,try,input,stream,is,descriptor,open,stream,document,doc,db,parse,is,node,list,nl,doc,get,document,element,get,child,nodes,for,int,i,0,i,nl,get,length,i,node,node,nl,item,i,if,node,instanceof,element,element,pp,element,node,if,cm,namesaces,contains,pp,get,namespace,uri,string,us,pp,get,attribute,update,strategy,if,us,null,us,equals,reload,expected,reload,true,break,catch,exception,e,throw,new,runtime,exception,e,get,message,e,return,expected,reload
CamelBlueprintTestSupport -> protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate();1456298245;This method may be overriden to instruct BP test support that BP container will reloaded when_Config Admin configuration is updated. By default, this is expected, when blueprint XML definition_contains <code>&lt_cm:property-placeholder persistent-id="PID" update-strategy="reload"&gt_</code>;protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate() {_        boolean expectedReload = false__        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance()__        dbf.setNamespaceAware(true)__        try {_            _            Set<String> cmNamesaces = new HashSet<>(Arrays.asList(_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_1,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_2,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_3_            ))__            for (URL descriptor : CamelBlueprintHelper.getBlueprintDescriptors(getBlueprintDescriptor())) {_                DocumentBuilder db = dbf.newDocumentBuilder()__                try (InputStream is = descriptor.openStream()) {_                    Document doc = db.parse(is)__                    NodeList nl = doc.getDocumentElement().getChildNodes()__                    for (int i = 0_ i < nl.getLength()_ i++) {_                        Node node = nl.item(i)__                        if (node instanceof Element) {_                            Element pp = (Element) node__                            if (cmNamesaces.contains(pp.getNamespaceURI())) {_                                String us = pp.getAttribute("update-strategy")__                                if (us != null && us.equals("reload")) {_                                    expectedReload = true__                                    break__                                }_                            }_                        }_                    }_                }_            }_        } catch (Exception e) {_            throw new RuntimeException(e.getMessage(), e)__        }_        return expectedReload__    };this,method,may,be,overriden,to,instruct,bp,test,support,that,bp,container,will,reloaded,when,config,admin,configuration,is,updated,by,default,this,is,expected,when,blueprint,xml,definition,contains,code,lt,cm,property,placeholder,persistent,id,pid,update,strategy,reload,gt,code;protected,boolean,expect,blueprint,container,reload,on,config,admin,update,boolean,expected,reload,false,document,builder,factory,dbf,document,builder,factory,new,instance,dbf,set,namespace,aware,true,try,set,string,cm,namesaces,new,hash,set,arrays,as,list,cm,namespace,handler,cm,namespace,handler,cm,namespace,handler,for,url,descriptor,camel,blueprint,helper,get,blueprint,descriptors,get,blueprint,descriptor,document,builder,db,dbf,new,document,builder,try,input,stream,is,descriptor,open,stream,document,doc,db,parse,is,node,list,nl,doc,get,document,element,get,child,nodes,for,int,i,0,i,nl,get,length,i,node,node,nl,item,i,if,node,instanceof,element,element,pp,element,node,if,cm,namesaces,contains,pp,get,namespace,uri,string,us,pp,get,attribute,update,strategy,if,us,null,us,equals,reload,expected,reload,true,break,catch,exception,e,throw,new,runtime,exception,e,get,message,e,return,expected,reload
CamelBlueprintTestSupport -> protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate();1456320648;This method may be overriden to instruct BP test support that BP container will reloaded when_Config Admin configuration is updated. By default, this is expected, when blueprint XML definition_contains <code>&lt_cm:property-placeholder persistent-id="PID" update-strategy="reload"&gt_</code>;protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate() {_        boolean expectedReload = false__        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance()__        dbf.setNamespaceAware(true)__        try {_            _            Set<String> cmNamesaces = new HashSet<>(Arrays.asList(_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_1,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_2,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_3_            ))__            for (URL descriptor : CamelBlueprintHelper.getBlueprintDescriptors(getBlueprintDescriptor())) {_                DocumentBuilder db = dbf.newDocumentBuilder()__                try (InputStream is = descriptor.openStream()) {_                    Document doc = db.parse(is)__                    NodeList nl = doc.getDocumentElement().getChildNodes()__                    for (int i = 0_ i < nl.getLength()_ i++) {_                        Node node = nl.item(i)__                        if (node instanceof Element) {_                            Element pp = (Element) node__                            if (cmNamesaces.contains(pp.getNamespaceURI())) {_                                String us = pp.getAttribute("update-strategy")__                                if (us != null && us.equals("reload")) {_                                    expectedReload = true__                                    break__                                }_                            }_                        }_                    }_                }_            }_        } catch (Exception e) {_            throw new RuntimeException(e.getMessage(), e)__        }_        return expectedReload__    };this,method,may,be,overriden,to,instruct,bp,test,support,that,bp,container,will,reloaded,when,config,admin,configuration,is,updated,by,default,this,is,expected,when,blueprint,xml,definition,contains,code,lt,cm,property,placeholder,persistent,id,pid,update,strategy,reload,gt,code;protected,boolean,expect,blueprint,container,reload,on,config,admin,update,boolean,expected,reload,false,document,builder,factory,dbf,document,builder,factory,new,instance,dbf,set,namespace,aware,true,try,set,string,cm,namesaces,new,hash,set,arrays,as,list,cm,namespace,handler,cm,namespace,handler,cm,namespace,handler,for,url,descriptor,camel,blueprint,helper,get,blueprint,descriptors,get,blueprint,descriptor,document,builder,db,dbf,new,document,builder,try,input,stream,is,descriptor,open,stream,document,doc,db,parse,is,node,list,nl,doc,get,document,element,get,child,nodes,for,int,i,0,i,nl,get,length,i,node,node,nl,item,i,if,node,instanceof,element,element,pp,element,node,if,cm,namesaces,contains,pp,get,namespace,uri,string,us,pp,get,attribute,update,strategy,if,us,null,us,equals,reload,expected,reload,true,break,catch,exception,e,throw,new,runtime,exception,e,get,message,e,return,expected,reload
CamelBlueprintTestSupport -> protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate();1456327396;This method may be overriden to instruct BP test support that BP container will reloaded when_Config Admin configuration is updated. By default, this is expected, when blueprint XML definition_contains <code>&lt_cm:property-placeholder persistent-id="PID" update-strategy="reload"&gt_</code>;protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate() {_        boolean expectedReload = false__        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance()__        dbf.setNamespaceAware(true)__        try {_            _            Set<String> cmNamesaces = new HashSet<>(Arrays.asList(_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_1,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_2,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_3_            ))__            for (URL descriptor : CamelBlueprintHelper.getBlueprintDescriptors(getBlueprintDescriptor())) {_                DocumentBuilder db = dbf.newDocumentBuilder()__                try (InputStream is = descriptor.openStream()) {_                    Document doc = db.parse(is)__                    NodeList nl = doc.getDocumentElement().getChildNodes()__                    for (int i = 0_ i < nl.getLength()_ i++) {_                        Node node = nl.item(i)__                        if (node instanceof Element) {_                            Element pp = (Element) node__                            if (cmNamesaces.contains(pp.getNamespaceURI())) {_                                String us = pp.getAttribute("update-strategy")__                                if (us != null && us.equals("reload")) {_                                    expectedReload = true__                                    break__                                }_                            }_                        }_                    }_                }_            }_        } catch (Exception e) {_            throw new RuntimeException(e.getMessage(), e)__        }_        return expectedReload__    };this,method,may,be,overriden,to,instruct,bp,test,support,that,bp,container,will,reloaded,when,config,admin,configuration,is,updated,by,default,this,is,expected,when,blueprint,xml,definition,contains,code,lt,cm,property,placeholder,persistent,id,pid,update,strategy,reload,gt,code;protected,boolean,expect,blueprint,container,reload,on,config,admin,update,boolean,expected,reload,false,document,builder,factory,dbf,document,builder,factory,new,instance,dbf,set,namespace,aware,true,try,set,string,cm,namesaces,new,hash,set,arrays,as,list,cm,namespace,handler,cm,namespace,handler,cm,namespace,handler,for,url,descriptor,camel,blueprint,helper,get,blueprint,descriptors,get,blueprint,descriptor,document,builder,db,dbf,new,document,builder,try,input,stream,is,descriptor,open,stream,document,doc,db,parse,is,node,list,nl,doc,get,document,element,get,child,nodes,for,int,i,0,i,nl,get,length,i,node,node,nl,item,i,if,node,instanceof,element,element,pp,element,node,if,cm,namesaces,contains,pp,get,namespace,uri,string,us,pp,get,attribute,update,strategy,if,us,null,us,equals,reload,expected,reload,true,break,catch,exception,e,throw,new,runtime,exception,e,get,message,e,return,expected,reload
CamelBlueprintTestSupport -> protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate();1458209138;This method may be overriden to instruct BP test support that BP container will reloaded when_Config Admin configuration is updated. By default, this is expected, when blueprint XML definition_contains <code>&lt_cm:property-placeholder persistent-id="PID" update-strategy="reload"&gt_</code>;protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate() {_        boolean expectedReload = false__        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance()__        dbf.setNamespaceAware(true)__        try {_            _            Set<String> cmNamesaces = new HashSet<>(Arrays.asList(_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_1,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_2,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_3_            ))__            for (URL descriptor : CamelBlueprintHelper.getBlueprintDescriptors(getBlueprintDescriptor())) {_                DocumentBuilder db = dbf.newDocumentBuilder()__                try (InputStream is = descriptor.openStream()) {_                    Document doc = db.parse(is)__                    NodeList nl = doc.getDocumentElement().getChildNodes()__                    for (int i = 0_ i < nl.getLength()_ i++) {_                        Node node = nl.item(i)__                        if (node instanceof Element) {_                            Element pp = (Element) node__                            if (cmNamesaces.contains(pp.getNamespaceURI())) {_                                String us = pp.getAttribute("update-strategy")__                                if (us != null && us.equals("reload")) {_                                    expectedReload = true__                                    break__                                }_                            }_                        }_                    }_                }_            }_        } catch (Exception e) {_            throw new RuntimeException(e.getMessage(), e)__        }_        return expectedReload__    };this,method,may,be,overriden,to,instruct,bp,test,support,that,bp,container,will,reloaded,when,config,admin,configuration,is,updated,by,default,this,is,expected,when,blueprint,xml,definition,contains,code,lt,cm,property,placeholder,persistent,id,pid,update,strategy,reload,gt,code;protected,boolean,expect,blueprint,container,reload,on,config,admin,update,boolean,expected,reload,false,document,builder,factory,dbf,document,builder,factory,new,instance,dbf,set,namespace,aware,true,try,set,string,cm,namesaces,new,hash,set,arrays,as,list,cm,namespace,handler,cm,namespace,handler,cm,namespace,handler,for,url,descriptor,camel,blueprint,helper,get,blueprint,descriptors,get,blueprint,descriptor,document,builder,db,dbf,new,document,builder,try,input,stream,is,descriptor,open,stream,document,doc,db,parse,is,node,list,nl,doc,get,document,element,get,child,nodes,for,int,i,0,i,nl,get,length,i,node,node,nl,item,i,if,node,instanceof,element,element,pp,element,node,if,cm,namesaces,contains,pp,get,namespace,uri,string,us,pp,get,attribute,update,strategy,if,us,null,us,equals,reload,expected,reload,true,break,catch,exception,e,throw,new,runtime,exception,e,get,message,e,return,expected,reload
CamelBlueprintTestSupport -> protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate();1461352384;This method may be overriden to instruct BP test support that BP container will reloaded when_Config Admin configuration is updated. By default, this is expected, when blueprint XML definition_contains <code>&lt_cm:property-placeholder persistent-id="PID" update-strategy="reload"&gt_</code>;protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate() {_        boolean expectedReload = false__        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance()__        dbf.setNamespaceAware(true)__        try {_            _            Set<String> cmNamesaces = new HashSet<>(Arrays.asList(_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_1,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_2,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_3_            ))__            for (URL descriptor : CamelBlueprintHelper.getBlueprintDescriptors(getBlueprintDescriptor())) {_                DocumentBuilder db = dbf.newDocumentBuilder()__                try (InputStream is = descriptor.openStream()) {_                    Document doc = db.parse(is)__                    NodeList nl = doc.getDocumentElement().getChildNodes()__                    for (int i = 0_ i < nl.getLength()_ i++) {_                        Node node = nl.item(i)__                        if (node instanceof Element) {_                            Element pp = (Element) node__                            if (cmNamesaces.contains(pp.getNamespaceURI())) {_                                String us = pp.getAttribute("update-strategy")__                                if (us != null && us.equals("reload")) {_                                    expectedReload = true__                                    break__                                }_                            }_                        }_                    }_                }_            }_        } catch (Exception e) {_            throw new RuntimeException(e.getMessage(), e)__        }_        return expectedReload__    };this,method,may,be,overriden,to,instruct,bp,test,support,that,bp,container,will,reloaded,when,config,admin,configuration,is,updated,by,default,this,is,expected,when,blueprint,xml,definition,contains,code,lt,cm,property,placeholder,persistent,id,pid,update,strategy,reload,gt,code;protected,boolean,expect,blueprint,container,reload,on,config,admin,update,boolean,expected,reload,false,document,builder,factory,dbf,document,builder,factory,new,instance,dbf,set,namespace,aware,true,try,set,string,cm,namesaces,new,hash,set,arrays,as,list,cm,namespace,handler,cm,namespace,handler,cm,namespace,handler,for,url,descriptor,camel,blueprint,helper,get,blueprint,descriptors,get,blueprint,descriptor,document,builder,db,dbf,new,document,builder,try,input,stream,is,descriptor,open,stream,document,doc,db,parse,is,node,list,nl,doc,get,document,element,get,child,nodes,for,int,i,0,i,nl,get,length,i,node,node,nl,item,i,if,node,instanceof,element,element,pp,element,node,if,cm,namesaces,contains,pp,get,namespace,uri,string,us,pp,get,attribute,update,strategy,if,us,null,us,equals,reload,expected,reload,true,break,catch,exception,e,throw,new,runtime,exception,e,get,message,e,return,expected,reload
CamelBlueprintTestSupport -> protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate();1461352968;This method may be overriden to instruct BP test support that BP container will reloaded when_Config Admin configuration is updated. By default, this is expected, when blueprint XML definition_contains <code>&lt_cm:property-placeholder persistent-id="PID" update-strategy="reload"&gt_</code>;protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate() {_        boolean expectedReload = false__        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance()__        dbf.setNamespaceAware(true)__        try {_            _            Set<String> cmNamesaces = new HashSet<>(Arrays.asList(_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_1,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_2,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_3_            ))__            for (URL descriptor : CamelBlueprintHelper.getBlueprintDescriptors(getBlueprintDescriptor())) {_                DocumentBuilder db = dbf.newDocumentBuilder()__                try (InputStream is = descriptor.openStream()) {_                    Document doc = db.parse(is)__                    NodeList nl = doc.getDocumentElement().getChildNodes()__                    for (int i = 0_ i < nl.getLength()_ i++) {_                        Node node = nl.item(i)__                        if (node instanceof Element) {_                            Element pp = (Element) node__                            if (cmNamesaces.contains(pp.getNamespaceURI())) {_                                String us = pp.getAttribute("update-strategy")__                                if (us != null && us.equals("reload")) {_                                    expectedReload = true__                                    break__                                }_                            }_                        }_                    }_                }_            }_        } catch (Exception e) {_            throw new RuntimeException(e.getMessage(), e)__        }_        return expectedReload__    };this,method,may,be,overriden,to,instruct,bp,test,support,that,bp,container,will,reloaded,when,config,admin,configuration,is,updated,by,default,this,is,expected,when,blueprint,xml,definition,contains,code,lt,cm,property,placeholder,persistent,id,pid,update,strategy,reload,gt,code;protected,boolean,expect,blueprint,container,reload,on,config,admin,update,boolean,expected,reload,false,document,builder,factory,dbf,document,builder,factory,new,instance,dbf,set,namespace,aware,true,try,set,string,cm,namesaces,new,hash,set,arrays,as,list,cm,namespace,handler,cm,namespace,handler,cm,namespace,handler,for,url,descriptor,camel,blueprint,helper,get,blueprint,descriptors,get,blueprint,descriptor,document,builder,db,dbf,new,document,builder,try,input,stream,is,descriptor,open,stream,document,doc,db,parse,is,node,list,nl,doc,get,document,element,get,child,nodes,for,int,i,0,i,nl,get,length,i,node,node,nl,item,i,if,node,instanceof,element,element,pp,element,node,if,cm,namesaces,contains,pp,get,namespace,uri,string,us,pp,get,attribute,update,strategy,if,us,null,us,equals,reload,expected,reload,true,break,catch,exception,e,throw,new,runtime,exception,e,get,message,e,return,expected,reload
CamelBlueprintTestSupport -> protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate();1486057633;This method may be overriden to instruct BP test support that BP container will reloaded when_Config Admin configuration is updated. By default, this is expected, when blueprint XML definition_contains <code>&lt_cm:property-placeholder persistent-id="PID" update-strategy="reload"&gt_</code>;protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate() {_        boolean expectedReload = false__        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance()__        dbf.setNamespaceAware(true)__        try {_            _            Set<String> cmNamesaces = new HashSet<>(Arrays.asList(_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_1,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_2,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_3_            ))__            for (URL descriptor : CamelBlueprintHelper.getBlueprintDescriptors(getBlueprintDescriptor())) {_                DocumentBuilder db = dbf.newDocumentBuilder()__                try (InputStream is = descriptor.openStream()) {_                    Document doc = db.parse(is)__                    NodeList nl = doc.getDocumentElement().getChildNodes()__                    for (int i = 0_ i < nl.getLength()_ i++) {_                        Node node = nl.item(i)__                        if (node instanceof Element) {_                            Element pp = (Element) node__                            if (cmNamesaces.contains(pp.getNamespaceURI())) {_                                String us = pp.getAttribute("update-strategy")__                                if (us != null && us.equals("reload")) {_                                    expectedReload = true__                                    break__                                }_                            }_                        }_                    }_                }_            }_        } catch (Exception e) {_            throw new RuntimeException(e.getMessage(), e)__        }_        return expectedReload__    };this,method,may,be,overriden,to,instruct,bp,test,support,that,bp,container,will,reloaded,when,config,admin,configuration,is,updated,by,default,this,is,expected,when,blueprint,xml,definition,contains,code,lt,cm,property,placeholder,persistent,id,pid,update,strategy,reload,gt,code;protected,boolean,expect,blueprint,container,reload,on,config,admin,update,boolean,expected,reload,false,document,builder,factory,dbf,document,builder,factory,new,instance,dbf,set,namespace,aware,true,try,set,string,cm,namesaces,new,hash,set,arrays,as,list,cm,namespace,handler,cm,namespace,handler,cm,namespace,handler,for,url,descriptor,camel,blueprint,helper,get,blueprint,descriptors,get,blueprint,descriptor,document,builder,db,dbf,new,document,builder,try,input,stream,is,descriptor,open,stream,document,doc,db,parse,is,node,list,nl,doc,get,document,element,get,child,nodes,for,int,i,0,i,nl,get,length,i,node,node,nl,item,i,if,node,instanceof,element,element,pp,element,node,if,cm,namesaces,contains,pp,get,namespace,uri,string,us,pp,get,attribute,update,strategy,if,us,null,us,equals,reload,expected,reload,true,break,catch,exception,e,throw,new,runtime,exception,e,get,message,e,return,expected,reload
CamelBlueprintTestSupport -> protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate();1498733069;This method may be overriden to instruct BP test support that BP container will reloaded when_Config Admin configuration is updated. By default, this is expected, when blueprint XML definition_contains <code>&lt_cm:property-placeholder persistent-id="PID" update-strategy="reload"&gt_</code>;protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate() {_        boolean expectedReload = false__        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance()__        dbf.setNamespaceAware(true)__        try {_            _            Set<String> cmNamesaces = new HashSet<>(Arrays.asList(_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_1,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_2,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_3_            ))__            for (URL descriptor : CamelBlueprintHelper.getBlueprintDescriptors(getBlueprintDescriptor())) {_                DocumentBuilder db = dbf.newDocumentBuilder()__                try (InputStream is = descriptor.openStream()) {_                    Document doc = db.parse(is)__                    NodeList nl = doc.getDocumentElement().getChildNodes()__                    for (int i = 0_ i < nl.getLength()_ i++) {_                        Node node = nl.item(i)__                        if (node instanceof Element) {_                            Element pp = (Element) node__                            if (cmNamesaces.contains(pp.getNamespaceURI())) {_                                String us = pp.getAttribute("update-strategy")__                                if (us != null && us.equals("reload")) {_                                    expectedReload = true__                                    break__                                }_                            }_                        }_                    }_                }_            }_        } catch (Exception e) {_            throw new RuntimeException(e.getMessage(), e)__        }_        return expectedReload__    };this,method,may,be,overriden,to,instruct,bp,test,support,that,bp,container,will,reloaded,when,config,admin,configuration,is,updated,by,default,this,is,expected,when,blueprint,xml,definition,contains,code,lt,cm,property,placeholder,persistent,id,pid,update,strategy,reload,gt,code;protected,boolean,expect,blueprint,container,reload,on,config,admin,update,boolean,expected,reload,false,document,builder,factory,dbf,document,builder,factory,new,instance,dbf,set,namespace,aware,true,try,set,string,cm,namesaces,new,hash,set,arrays,as,list,cm,namespace,handler,cm,namespace,handler,cm,namespace,handler,for,url,descriptor,camel,blueprint,helper,get,blueprint,descriptors,get,blueprint,descriptor,document,builder,db,dbf,new,document,builder,try,input,stream,is,descriptor,open,stream,document,doc,db,parse,is,node,list,nl,doc,get,document,element,get,child,nodes,for,int,i,0,i,nl,get,length,i,node,node,nl,item,i,if,node,instanceof,element,element,pp,element,node,if,cm,namesaces,contains,pp,get,namespace,uri,string,us,pp,get,attribute,update,strategy,if,us,null,us,equals,reload,expected,reload,true,break,catch,exception,e,throw,new,runtime,exception,e,get,message,e,return,expected,reload
CamelBlueprintTestSupport -> protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate();1498733823;This method may be overriden to instruct BP test support that BP container will reloaded when_Config Admin configuration is updated. By default, this is expected, when blueprint XML definition_contains <code>&lt_cm:property-placeholder persistent-id="PID" update-strategy="reload"&gt_</code>;protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate() {_        boolean expectedReload = false__        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance()__        dbf.setNamespaceAware(true)__        try {_            _            Set<String> cmNamesaces = new HashSet<>(Arrays.asList(_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_1,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_2,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_3_            ))__            for (URL descriptor : CamelBlueprintHelper.getBlueprintDescriptors(getBlueprintDescriptor())) {_                DocumentBuilder db = dbf.newDocumentBuilder()__                try (InputStream is = descriptor.openStream()) {_                    Document doc = db.parse(is)__                    NodeList nl = doc.getDocumentElement().getChildNodes()__                    for (int i = 0_ i < nl.getLength()_ i++) {_                        Node node = nl.item(i)__                        if (node instanceof Element) {_                            Element pp = (Element) node__                            if (cmNamesaces.contains(pp.getNamespaceURI())) {_                                String us = pp.getAttribute("update-strategy")__                                if (us != null && us.equals("reload")) {_                                    expectedReload = true__                                    break__                                }_                            }_                        }_                    }_                }_            }_        } catch (Exception e) {_            throw new RuntimeException(e.getMessage(), e)__        }_        return expectedReload__    };this,method,may,be,overriden,to,instruct,bp,test,support,that,bp,container,will,reloaded,when,config,admin,configuration,is,updated,by,default,this,is,expected,when,blueprint,xml,definition,contains,code,lt,cm,property,placeholder,persistent,id,pid,update,strategy,reload,gt,code;protected,boolean,expect,blueprint,container,reload,on,config,admin,update,boolean,expected,reload,false,document,builder,factory,dbf,document,builder,factory,new,instance,dbf,set,namespace,aware,true,try,set,string,cm,namesaces,new,hash,set,arrays,as,list,cm,namespace,handler,cm,namespace,handler,cm,namespace,handler,for,url,descriptor,camel,blueprint,helper,get,blueprint,descriptors,get,blueprint,descriptor,document,builder,db,dbf,new,document,builder,try,input,stream,is,descriptor,open,stream,document,doc,db,parse,is,node,list,nl,doc,get,document,element,get,child,nodes,for,int,i,0,i,nl,get,length,i,node,node,nl,item,i,if,node,instanceof,element,element,pp,element,node,if,cm,namesaces,contains,pp,get,namespace,uri,string,us,pp,get,attribute,update,strategy,if,us,null,us,equals,reload,expected,reload,true,break,catch,exception,e,throw,new,runtime,exception,e,get,message,e,return,expected,reload
CamelBlueprintTestSupport -> protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate();1524063209;This method may be overriden to instruct BP test support that BP container will reloaded when_Config Admin configuration is updated. By default, this is expected, when blueprint XML definition_contains <code>&lt_cm:property-placeholder persistent-id="PID" update-strategy="reload"&gt_</code>;protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate() {_        boolean expectedReload = false__        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance()__        dbf.setNamespaceAware(true)__        try {_            _            Set<String> cmNamesaces = new HashSet<>(Arrays.asList(_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_1,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_2,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_3_            ))__            for (URL descriptor : CamelBlueprintHelper.getBlueprintDescriptors(getBlueprintDescriptor())) {_                DocumentBuilder db = dbf.newDocumentBuilder()__                try (InputStream is = descriptor.openStream()) {_                    Document doc = db.parse(is)__                    NodeList nl = doc.getDocumentElement().getChildNodes()__                    for (int i = 0_ i < nl.getLength()_ i++) {_                        Node node = nl.item(i)__                        if (node instanceof Element) {_                            Element pp = (Element) node__                            if (cmNamesaces.contains(pp.getNamespaceURI())) {_                                String us = pp.getAttribute("update-strategy")__                                if (us != null && us.equals("reload")) {_                                    expectedReload = true__                                    break__                                }_                            }_                        }_                    }_                }_            }_        } catch (Exception e) {_            throw new RuntimeException(e.getMessage(), e)__        }_        return expectedReload__    };this,method,may,be,overriden,to,instruct,bp,test,support,that,bp,container,will,reloaded,when,config,admin,configuration,is,updated,by,default,this,is,expected,when,blueprint,xml,definition,contains,code,lt,cm,property,placeholder,persistent,id,pid,update,strategy,reload,gt,code;protected,boolean,expect,blueprint,container,reload,on,config,admin,update,boolean,expected,reload,false,document,builder,factory,dbf,document,builder,factory,new,instance,dbf,set,namespace,aware,true,try,set,string,cm,namesaces,new,hash,set,arrays,as,list,cm,namespace,handler,cm,namespace,handler,cm,namespace,handler,for,url,descriptor,camel,blueprint,helper,get,blueprint,descriptors,get,blueprint,descriptor,document,builder,db,dbf,new,document,builder,try,input,stream,is,descriptor,open,stream,document,doc,db,parse,is,node,list,nl,doc,get,document,element,get,child,nodes,for,int,i,0,i,nl,get,length,i,node,node,nl,item,i,if,node,instanceof,element,element,pp,element,node,if,cm,namesaces,contains,pp,get,namespace,uri,string,us,pp,get,attribute,update,strategy,if,us,null,us,equals,reload,expected,reload,true,break,catch,exception,e,throw,new,runtime,exception,e,get,message,e,return,expected,reload
CamelBlueprintTestSupport -> protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate();1528210046;This method may be overriden to instruct BP test support that BP container will reloaded when_Config Admin configuration is updated. By default, this is expected, when blueprint XML definition_contains <code>&lt_cm:property-placeholder persistent-id="PID" update-strategy="reload"&gt_</code>;protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate() {_        boolean expectedReload = false__        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance()__        dbf.setNamespaceAware(true)__        try {_            _            Set<String> cmNamesaces = new HashSet<>(Arrays.asList(_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_1,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_2,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_3_            ))__            for (URL descriptor : CamelBlueprintHelper.getBlueprintDescriptors(getBlueprintDescriptor())) {_                DocumentBuilder db = dbf.newDocumentBuilder()__                try (InputStream is = descriptor.openStream()) {_                    Document doc = db.parse(is)__                    NodeList nl = doc.getDocumentElement().getChildNodes()__                    for (int i = 0_ i < nl.getLength()_ i++) {_                        Node node = nl.item(i)__                        if (node instanceof Element) {_                            Element pp = (Element) node__                            if (cmNamesaces.contains(pp.getNamespaceURI())) {_                                String us = pp.getAttribute("update-strategy")__                                if (us != null && us.equals("reload")) {_                                    expectedReload = true__                                    break__                                }_                            }_                        }_                    }_                }_            }_        } catch (Exception e) {_            throw new RuntimeException(e.getMessage(), e)__        }_        return expectedReload__    };this,method,may,be,overriden,to,instruct,bp,test,support,that,bp,container,will,reloaded,when,config,admin,configuration,is,updated,by,default,this,is,expected,when,blueprint,xml,definition,contains,code,lt,cm,property,placeholder,persistent,id,pid,update,strategy,reload,gt,code;protected,boolean,expect,blueprint,container,reload,on,config,admin,update,boolean,expected,reload,false,document,builder,factory,dbf,document,builder,factory,new,instance,dbf,set,namespace,aware,true,try,set,string,cm,namesaces,new,hash,set,arrays,as,list,cm,namespace,handler,cm,namespace,handler,cm,namespace,handler,for,url,descriptor,camel,blueprint,helper,get,blueprint,descriptors,get,blueprint,descriptor,document,builder,db,dbf,new,document,builder,try,input,stream,is,descriptor,open,stream,document,doc,db,parse,is,node,list,nl,doc,get,document,element,get,child,nodes,for,int,i,0,i,nl,get,length,i,node,node,nl,item,i,if,node,instanceof,element,element,pp,element,node,if,cm,namesaces,contains,pp,get,namespace,uri,string,us,pp,get,attribute,update,strategy,if,us,null,us,equals,reload,expected,reload,true,break,catch,exception,e,throw,new,runtime,exception,e,get,message,e,return,expected,reload
CamelBlueprintTestSupport -> protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate();1544618083;This method may be overriden to instruct BP test support that BP container will reloaded when_Config Admin configuration is updated. By default, this is expected, when blueprint XML definition_contains <code>&lt_cm:property-placeholder persistent-id="PID" update-strategy="reload"&gt_</code>;protected boolean expectBlueprintContainerReloadOnConfigAdminUpdate() {_        boolean expectedReload = false__        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance()__        dbf.setNamespaceAware(true)__        try {_            _            Set<String> cmNamesaces = new HashSet<>(Arrays.asList(_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_1,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_2,_                    CmNamespaceHandler.BLUEPRINT_CM_NAMESPACE_1_3_            ))__            for (URL descriptor : CamelBlueprintHelper.getBlueprintDescriptors(getBlueprintDescriptor())) {_                DocumentBuilder db = dbf.newDocumentBuilder()__                try (InputStream is = descriptor.openStream()) {_                    Document doc = db.parse(is)__                    NodeList nl = doc.getDocumentElement().getChildNodes()__                    for (int i = 0_ i < nl.getLength()_ i++) {_                        Node node = nl.item(i)__                        if (node instanceof Element) {_                            Element pp = (Element) node__                            if (cmNamesaces.contains(pp.getNamespaceURI())) {_                                String us = pp.getAttribute("update-strategy")__                                if (us != null && us.equals("reload")) {_                                    expectedReload = true__                                    break__                                }_                            }_                        }_                    }_                }_            }_        } catch (Exception e) {_            throw new RuntimeException(e.getMessage(), e)__        }_        return expectedReload__    };this,method,may,be,overriden,to,instruct,bp,test,support,that,bp,container,will,reloaded,when,config,admin,configuration,is,updated,by,default,this,is,expected,when,blueprint,xml,definition,contains,code,lt,cm,property,placeholder,persistent,id,pid,update,strategy,reload,gt,code;protected,boolean,expect,blueprint,container,reload,on,config,admin,update,boolean,expected,reload,false,document,builder,factory,dbf,document,builder,factory,new,instance,dbf,set,namespace,aware,true,try,set,string,cm,namesaces,new,hash,set,arrays,as,list,cm,namespace,handler,cm,namespace,handler,cm,namespace,handler,for,url,descriptor,camel,blueprint,helper,get,blueprint,descriptors,get,blueprint,descriptor,document,builder,db,dbf,new,document,builder,try,input,stream,is,descriptor,open,stream,document,doc,db,parse,is,node,list,nl,doc,get,document,element,get,child,nodes,for,int,i,0,i,nl,get,length,i,node,node,nl,item,i,if,node,instanceof,element,element,pp,element,node,if,cm,namesaces,contains,pp,get,namespace,uri,string,us,pp,get,attribute,update,strategy,if,us,null,us,equals,reload,expected,reload,true,break,catch,exception,e,throw,new,runtime,exception,e,get,message,e,return,expected,reload
CamelBlueprintTestSupport -> protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services);1378117940;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asService(Object, java.util.Dictionary)}, {@link #asService(Object, String, String)}_to make it easy to add the services to the map.;protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,service,object,java,util,dictionary,link,as,service,object,string,string,to,make,it,easy,to,add,the,services,to,the,map;protected,void,add,services,on,startup,map,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services);1379386731;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asService(Object, java.util.Dictionary)}, {@link #asService(Object, String, String)}_to make it easy to add the services to the map.;protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,service,object,java,util,dictionary,link,as,service,object,string,string,to,make,it,easy,to,add,the,services,to,the,map;protected,void,add,services,on,startup,map,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services);1381253992;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asService(Object, java.util.Dictionary)}, {@link #asService(Object, String, String)}_to make it easy to add the services to the map.;protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,service,object,java,util,dictionary,link,as,service,object,string,string,to,make,it,easy,to,add,the,services,to,the,map;protected,void,add,services,on,startup,map,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services);1385476973;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asService(Object, java.util.Dictionary)}, {@link #asService(Object, String, String)}_to make it easy to add the services to the map.;protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,service,object,java,util,dictionary,link,as,service,object,string,string,to,make,it,easy,to,add,the,services,to,the,map;protected,void,add,services,on,startup,map,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services);1405374721;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asService(Object, java.util.Dictionary)}, {@link #asService(Object, String, String)}_to make it easy to add the services to the map.;protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,service,object,java,util,dictionary,link,as,service,object,string,string,to,make,it,easy,to,add,the,services,to,the,map;protected,void,add,services,on,startup,map,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services);1431242312;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asService(Object, java.util.Dictionary)}, {@link #asService(Object, String, String)}_to make it easy to add the services to the map.;protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,service,object,java,util,dictionary,link,as,service,object,string,string,to,make,it,easy,to,add,the,services,to,the,map;protected,void,add,services,on,startup,map,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services);1437396697;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asService(Object, java.util.Dictionary)}, {@link #asService(Object, String, String)}_to make it easy to add the services to the map.;protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,service,object,java,util,dictionary,link,as,service,object,string,string,to,make,it,easy,to,add,the,services,to,the,map;protected,void,add,services,on,startup,map,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services);1437396697;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asService(Object, java.util.Dictionary)}, {@link #asService(Object, String, String)}_to make it easy to add the services to the map.;protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,service,object,java,util,dictionary,link,as,service,object,string,string,to,make,it,easy,to,add,the,services,to,the,map;protected,void,add,services,on,startup,map,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services);1437396697;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asService(Object, java.util.Dictionary)}, {@link #asService(Object, String, String)}_to make it easy to add the services to the map.;protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,service,object,java,util,dictionary,link,as,service,object,string,string,to,make,it,easy,to,add,the,services,to,the,map;protected,void,add,services,on,startup,map,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services);1437396697;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asService(Object, java.util.Dictionary)}, {@link #asService(Object, String, String)}_to make it easy to add the services to the map.;protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,service,object,java,util,dictionary,link,as,service,object,string,string,to,make,it,easy,to,add,the,services,to,the,map;protected,void,add,services,on,startup,map,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services);1437396697;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asService(Object, java.util.Dictionary)}, {@link #asService(Object, String, String)}_to make it easy to add the services to the map.;protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,service,object,java,util,dictionary,link,as,service,object,string,string,to,make,it,easy,to,add,the,services,to,the,map;protected,void,add,services,on,startup,map,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services);1437396698;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asService(Object, java.util.Dictionary)}, {@link #asService(Object, String, String)}_to make it easy to add the services to the map.;protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,service,object,java,util,dictionary,link,as,service,object,string,string,to,make,it,easy,to,add,the,services,to,the,map;protected,void,add,services,on,startup,map,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services);1437396698;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asService(Object, java.util.Dictionary)}, {@link #asService(Object, String, String)}_to make it easy to add the services to the map.;protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,service,object,java,util,dictionary,link,as,service,object,string,string,to,make,it,easy,to,add,the,services,to,the,map;protected,void,add,services,on,startup,map,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services);1442412776;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asService(Object, java.util.Dictionary)}, {@link #asService(Object, String, String)}_to make it easy to add the services to the map.;protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,service,object,java,util,dictionary,link,as,service,object,string,string,to,make,it,easy,to,add,the,services,to,the,map;protected,void,add,services,on,startup,map,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services);1449942375;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asService(Object, java.util.Dictionary)}, {@link #asService(Object, String, String)}_to make it easy to add the services to the map.;protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,service,object,java,util,dictionary,link,as,service,object,string,string,to,make,it,easy,to,add,the,services,to,the,map;protected,void,add,services,on,startup,map,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services);1449947902;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asService(Object, java.util.Dictionary)}, {@link #asService(Object, String, String)}_to make it easy to add the services to the map.;protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,service,object,java,util,dictionary,link,as,service,object,string,string,to,make,it,easy,to,add,the,services,to,the,map;protected,void,add,services,on,startup,map,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services);1456295809;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asService(Object, java.util.Dictionary)}, {@link #asService(Object, String, String)}_to make it easy to add the services to the map.;protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,service,object,java,util,dictionary,link,as,service,object,string,string,to,make,it,easy,to,add,the,services,to,the,map;protected,void,add,services,on,startup,map,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services);1456298245;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asService(Object, java.util.Dictionary)}, {@link #asService(Object, String, String)}_to make it easy to add the services to the map.;protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,service,object,java,util,dictionary,link,as,service,object,string,string,to,make,it,easy,to,add,the,services,to,the,map;protected,void,add,services,on,startup,map,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services);1456320648;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asService(Object, java.util.Dictionary)}, {@link #asService(Object, String, String)}_to make it easy to add the services to the map.;protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,service,object,java,util,dictionary,link,as,service,object,string,string,to,make,it,easy,to,add,the,services,to,the,map;protected,void,add,services,on,startup,map,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services);1456327396;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asService(Object, java.util.Dictionary)}, {@link #asService(Object, String, String)}_to make it easy to add the services to the map.;protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,service,object,java,util,dictionary,link,as,service,object,string,string,to,make,it,easy,to,add,the,services,to,the,map;protected,void,add,services,on,startup,map,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services);1458209138;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asService(Object, java.util.Dictionary)}, {@link #asService(Object, String, String)}_to make it easy to add the services to the map.;protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,service,object,java,util,dictionary,link,as,service,object,string,string,to,make,it,easy,to,add,the,services,to,the,map;protected,void,add,services,on,startup,map,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services);1461352384;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asService(Object, java.util.Dictionary)}, {@link #asService(Object, String, String)}_to make it easy to add the services to the map.;protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,service,object,java,util,dictionary,link,as,service,object,string,string,to,make,it,easy,to,add,the,services,to,the,map;protected,void,add,services,on,startup,map,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services);1461352968;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asService(Object, java.util.Dictionary)}, {@link #asService(Object, String, String)}_to make it easy to add the services to the map.;protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,service,object,java,util,dictionary,link,as,service,object,string,string,to,make,it,easy,to,add,the,services,to,the,map;protected,void,add,services,on,startup,map,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services);1486057633;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asService(Object, java.util.Dictionary)}, {@link #asService(Object, String, String)}_to make it easy to add the services to the map.;protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,service,object,java,util,dictionary,link,as,service,object,string,string,to,make,it,easy,to,add,the,services,to,the,map;protected,void,add,services,on,startup,map,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services);1498733069;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asService(Object, java.util.Dictionary)}, {@link #asService(Object, String, String)}_to make it easy to add the services to the map.;protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,service,object,java,util,dictionary,link,as,service,object,string,string,to,make,it,easy,to,add,the,services,to,the,map;protected,void,add,services,on,startup,map,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services);1498733823;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asService(Object, java.util.Dictionary)}, {@link #asService(Object, String, String)}_to make it easy to add the services to the map.;protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,service,object,java,util,dictionary,link,as,service,object,string,string,to,make,it,easy,to,add,the,services,to,the,map;protected,void,add,services,on,startup,map,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services);1524063209;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asService(Object, java.util.Dictionary)}, {@link #asService(Object, String, String)}_to make it easy to add the services to the map.;protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,service,object,java,util,dictionary,link,as,service,object,string,string,to,make,it,easy,to,add,the,services,to,the,map;protected,void,add,services,on,startup,map,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services);1528210046;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asService(Object, java.util.Dictionary)}, {@link #asService(Object, String, String)}_to make it easy to add the services to the map.;protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,service,object,java,util,dictionary,link,as,service,object,string,string,to,make,it,easy,to,add,the,services,to,the,map;protected,void,add,services,on,startup,map,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services);1544618083;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asService(Object, java.util.Dictionary)}, {@link #asService(Object, String, String)}_to make it easy to add the services to the map.;protected void addServicesOnStartup(Map<String, KeyValueHolder<Object, Dictionary>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,service,object,java,util,dictionary,link,as,service,object,string,string,to,make,it,easy,to,add,the,services,to,the,map;protected,void,add,services,on,startup,map,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected boolean useAsynchronousBlueprintStartup();1437396698;<p>Override this method if you want to start Blueprint containers asynchronously using the thread_that starts the bundles itself._By default this method returns <code>true</code> which means Blueprint Extender will use thread pool_(threads named "<code>Blueprint Extender: N</code>") to startup Blueprint containers.</p>_<p>Karaf and Fuse OSGi containers use synchronous startup.</p>_<p>Asynchronous startup is more in the <em>spirit</em> of OSGi and usually means that if everything works fine_asynchronously, it'll work synchronously as well. This isn't always true otherwise.</p>_@return;protected boolean useAsynchronousBlueprintStartup() {_        return true__    };p,override,this,method,if,you,want,to,start,blueprint,containers,asynchronously,using,the,thread,that,starts,the,bundles,itself,by,default,this,method,returns,code,true,code,which,means,blueprint,extender,will,use,thread,pool,threads,named,code,blueprint,extender,n,code,to,startup,blueprint,containers,p,p,karaf,and,fuse,osgi,containers,use,synchronous,startup,p,p,asynchronous,startup,is,more,in,the,em,spirit,em,of,osgi,and,usually,means,that,if,everything,works,fine,asynchronously,it,ll,work,synchronously,as,well,this,isn,t,always,true,otherwise,p,return;protected,boolean,use,asynchronous,blueprint,startup,return,true
CamelBlueprintTestSupport -> protected boolean useAsynchronousBlueprintStartup();1437396698;<p>Override this method if you want to start Blueprint containers asynchronously using the thread_that starts the bundles itself._By default this method returns <code>true</code> which means Blueprint Extender will use thread pool_(threads named "<code>Blueprint Extender: N</code>") to startup Blueprint containers.</p>_<p>Karaf and Fuse OSGi containers use synchronous startup.</p>_<p>Asynchronous startup is more in the <em>spirit</em> of OSGi and usually means that if everything works fine_asynchronously, it'll work synchronously as well. This isn't always true otherwise.</p>_@return;protected boolean useAsynchronousBlueprintStartup() {_        return true__    };p,override,this,method,if,you,want,to,start,blueprint,containers,asynchronously,using,the,thread,that,starts,the,bundles,itself,by,default,this,method,returns,code,true,code,which,means,blueprint,extender,will,use,thread,pool,threads,named,code,blueprint,extender,n,code,to,startup,blueprint,containers,p,p,karaf,and,fuse,osgi,containers,use,synchronous,startup,p,p,asynchronous,startup,is,more,in,the,em,spirit,em,of,osgi,and,usually,means,that,if,everything,works,fine,asynchronously,it,ll,work,synchronously,as,well,this,isn,t,always,true,otherwise,p,return;protected,boolean,use,asynchronous,blueprint,startup,return,true
CamelBlueprintTestSupport -> protected boolean useAsynchronousBlueprintStartup();1442412776;<p>Override this method if you want to start Blueprint containers asynchronously using the thread_that starts the bundles itself._By default this method returns <code>true</code> which means Blueprint Extender will use thread pool_(threads named "<code>Blueprint Extender: N</code>") to startup Blueprint containers.</p>_<p>Karaf and Fuse OSGi containers use synchronous startup.</p>_<p>Asynchronous startup is more in the <em>spirit</em> of OSGi and usually means that if everything works fine_asynchronously, it'll work synchronously as well. This isn't always true otherwise.</p>_@return;protected boolean useAsynchronousBlueprintStartup() {_        return true__    };p,override,this,method,if,you,want,to,start,blueprint,containers,asynchronously,using,the,thread,that,starts,the,bundles,itself,by,default,this,method,returns,code,true,code,which,means,blueprint,extender,will,use,thread,pool,threads,named,code,blueprint,extender,n,code,to,startup,blueprint,containers,p,p,karaf,and,fuse,osgi,containers,use,synchronous,startup,p,p,asynchronous,startup,is,more,in,the,em,spirit,em,of,osgi,and,usually,means,that,if,everything,works,fine,asynchronously,it,ll,work,synchronously,as,well,this,isn,t,always,true,otherwise,p,return;protected,boolean,use,asynchronous,blueprint,startup,return,true
CamelBlueprintTestSupport -> protected boolean useAsynchronousBlueprintStartup();1449942375;<p>Override this method if you want to start Blueprint containers asynchronously using the thread_that starts the bundles itself._By default this method returns <code>true</code> which means Blueprint Extender will use thread pool_(threads named "<code>Blueprint Extender: N</code>") to startup Blueprint containers.</p>_<p>Karaf and Fuse OSGi containers use synchronous startup.</p>_<p>Asynchronous startup is more in the <em>spirit</em> of OSGi and usually means that if everything works fine_asynchronously, it'll work synchronously as well. This isn't always true otherwise.</p>_@return;protected boolean useAsynchronousBlueprintStartup() {_        return true__    };p,override,this,method,if,you,want,to,start,blueprint,containers,asynchronously,using,the,thread,that,starts,the,bundles,itself,by,default,this,method,returns,code,true,code,which,means,blueprint,extender,will,use,thread,pool,threads,named,code,blueprint,extender,n,code,to,startup,blueprint,containers,p,p,karaf,and,fuse,osgi,containers,use,synchronous,startup,p,p,asynchronous,startup,is,more,in,the,em,spirit,em,of,osgi,and,usually,means,that,if,everything,works,fine,asynchronously,it,ll,work,synchronously,as,well,this,isn,t,always,true,otherwise,p,return;protected,boolean,use,asynchronous,blueprint,startup,return,true
CamelBlueprintTestSupport -> protected boolean useAsynchronousBlueprintStartup();1449947902;<p>Override this method if you want to start Blueprint containers asynchronously using the thread_that starts the bundles itself._By default this method returns <code>true</code> which means Blueprint Extender will use thread pool_(threads named "<code>Blueprint Extender: N</code>") to startup Blueprint containers.</p>_<p>Karaf and Fuse OSGi containers use synchronous startup.</p>_<p>Asynchronous startup is more in the <em>spirit</em> of OSGi and usually means that if everything works fine_asynchronously, it'll work synchronously as well. This isn't always true otherwise.</p>_@return;protected boolean useAsynchronousBlueprintStartup() {_        return true__    };p,override,this,method,if,you,want,to,start,blueprint,containers,asynchronously,using,the,thread,that,starts,the,bundles,itself,by,default,this,method,returns,code,true,code,which,means,blueprint,extender,will,use,thread,pool,threads,named,code,blueprint,extender,n,code,to,startup,blueprint,containers,p,p,karaf,and,fuse,osgi,containers,use,synchronous,startup,p,p,asynchronous,startup,is,more,in,the,em,spirit,em,of,osgi,and,usually,means,that,if,everything,works,fine,asynchronously,it,ll,work,synchronously,as,well,this,isn,t,always,true,otherwise,p,return;protected,boolean,use,asynchronous,blueprint,startup,return,true
CamelBlueprintTestSupport -> protected boolean useAsynchronousBlueprintStartup();1456295809;<p>Override this method if you want to start Blueprint containers asynchronously using the thread_that starts the bundles itself._By default this method returns <code>true</code> which means Blueprint Extender will use thread pool_(threads named "<code>Blueprint Extender: N</code>") to startup Blueprint containers.</p>_<p>Karaf and Fuse OSGi containers use synchronous startup.</p>_<p>Asynchronous startup is more in the <em>spirit</em> of OSGi and usually means that if everything works fine_asynchronously, it'll work synchronously as well. This isn't always true otherwise.</p>_@return;protected boolean useAsynchronousBlueprintStartup() {_        return true__    };p,override,this,method,if,you,want,to,start,blueprint,containers,asynchronously,using,the,thread,that,starts,the,bundles,itself,by,default,this,method,returns,code,true,code,which,means,blueprint,extender,will,use,thread,pool,threads,named,code,blueprint,extender,n,code,to,startup,blueprint,containers,p,p,karaf,and,fuse,osgi,containers,use,synchronous,startup,p,p,asynchronous,startup,is,more,in,the,em,spirit,em,of,osgi,and,usually,means,that,if,everything,works,fine,asynchronously,it,ll,work,synchronously,as,well,this,isn,t,always,true,otherwise,p,return;protected,boolean,use,asynchronous,blueprint,startup,return,true
CamelBlueprintTestSupport -> protected boolean useAsynchronousBlueprintStartup();1456298245;<p>Override this method if you want to start Blueprint containers asynchronously using the thread_that starts the bundles itself._By default this method returns <code>true</code> which means Blueprint Extender will use thread pool_(threads named "<code>Blueprint Extender: N</code>") to startup Blueprint containers.</p>_<p>Karaf and Fuse OSGi containers use synchronous startup.</p>_<p>Asynchronous startup is more in the <em>spirit</em> of OSGi and usually means that if everything works fine_asynchronously, it'll work synchronously as well. This isn't always true otherwise.</p>_@return;protected boolean useAsynchronousBlueprintStartup() {_        return true__    };p,override,this,method,if,you,want,to,start,blueprint,containers,asynchronously,using,the,thread,that,starts,the,bundles,itself,by,default,this,method,returns,code,true,code,which,means,blueprint,extender,will,use,thread,pool,threads,named,code,blueprint,extender,n,code,to,startup,blueprint,containers,p,p,karaf,and,fuse,osgi,containers,use,synchronous,startup,p,p,asynchronous,startup,is,more,in,the,em,spirit,em,of,osgi,and,usually,means,that,if,everything,works,fine,asynchronously,it,ll,work,synchronously,as,well,this,isn,t,always,true,otherwise,p,return;protected,boolean,use,asynchronous,blueprint,startup,return,true
CamelBlueprintTestSupport -> protected boolean useAsynchronousBlueprintStartup();1456320648;<p>Override this method if you want to start Blueprint containers asynchronously using the thread_that starts the bundles itself._By default this method returns <code>true</code> which means Blueprint Extender will use thread pool_(threads named "<code>Blueprint Extender: N</code>") to startup Blueprint containers.</p>_<p>Karaf and Fuse OSGi containers use synchronous startup.</p>_<p>Asynchronous startup is more in the <em>spirit</em> of OSGi and usually means that if everything works fine_asynchronously, it'll work synchronously as well. This isn't always true otherwise.</p>_@return;protected boolean useAsynchronousBlueprintStartup() {_        return true__    };p,override,this,method,if,you,want,to,start,blueprint,containers,asynchronously,using,the,thread,that,starts,the,bundles,itself,by,default,this,method,returns,code,true,code,which,means,blueprint,extender,will,use,thread,pool,threads,named,code,blueprint,extender,n,code,to,startup,blueprint,containers,p,p,karaf,and,fuse,osgi,containers,use,synchronous,startup,p,p,asynchronous,startup,is,more,in,the,em,spirit,em,of,osgi,and,usually,means,that,if,everything,works,fine,asynchronously,it,ll,work,synchronously,as,well,this,isn,t,always,true,otherwise,p,return;protected,boolean,use,asynchronous,blueprint,startup,return,true
CamelBlueprintTestSupport -> protected boolean useAsynchronousBlueprintStartup();1456327396;<p>Override this method if you want to start Blueprint containers asynchronously using the thread_that starts the bundles itself._By default this method returns <code>true</code> which means Blueprint Extender will use thread pool_(threads named "<code>Blueprint Extender: N</code>") to startup Blueprint containers.</p>_<p>Karaf and Fuse OSGi containers use synchronous startup.</p>_<p>Asynchronous startup is more in the <em>spirit</em> of OSGi and usually means that if everything works fine_asynchronously, it'll work synchronously as well. This isn't always true otherwise.</p>_@return;protected boolean useAsynchronousBlueprintStartup() {_        return true__    };p,override,this,method,if,you,want,to,start,blueprint,containers,asynchronously,using,the,thread,that,starts,the,bundles,itself,by,default,this,method,returns,code,true,code,which,means,blueprint,extender,will,use,thread,pool,threads,named,code,blueprint,extender,n,code,to,startup,blueprint,containers,p,p,karaf,and,fuse,osgi,containers,use,synchronous,startup,p,p,asynchronous,startup,is,more,in,the,em,spirit,em,of,osgi,and,usually,means,that,if,everything,works,fine,asynchronously,it,ll,work,synchronously,as,well,this,isn,t,always,true,otherwise,p,return;protected,boolean,use,asynchronous,blueprint,startup,return,true
CamelBlueprintTestSupport -> protected boolean useAsynchronousBlueprintStartup();1458209138;<p>Override this method if you want to start Blueprint containers asynchronously using the thread_that starts the bundles itself._By default this method returns <code>true</code> which means Blueprint Extender will use thread pool_(threads named "<code>Blueprint Extender: N</code>") to startup Blueprint containers.</p>_<p>Karaf and Fuse OSGi containers use synchronous startup.</p>_<p>Asynchronous startup is more in the <em>spirit</em> of OSGi and usually means that if everything works fine_asynchronously, it'll work synchronously as well. This isn't always true otherwise.</p>_@return;protected boolean useAsynchronousBlueprintStartup() {_        return true__    };p,override,this,method,if,you,want,to,start,blueprint,containers,asynchronously,using,the,thread,that,starts,the,bundles,itself,by,default,this,method,returns,code,true,code,which,means,blueprint,extender,will,use,thread,pool,threads,named,code,blueprint,extender,n,code,to,startup,blueprint,containers,p,p,karaf,and,fuse,osgi,containers,use,synchronous,startup,p,p,asynchronous,startup,is,more,in,the,em,spirit,em,of,osgi,and,usually,means,that,if,everything,works,fine,asynchronously,it,ll,work,synchronously,as,well,this,isn,t,always,true,otherwise,p,return;protected,boolean,use,asynchronous,blueprint,startup,return,true
CamelBlueprintTestSupport -> protected boolean useAsynchronousBlueprintStartup();1461352384;<p>Override this method if you want to start Blueprint containers asynchronously using the thread_that starts the bundles itself._By default this method returns <code>true</code> which means Blueprint Extender will use thread pool_(threads named "<code>Blueprint Extender: N</code>") to startup Blueprint containers.</p>_<p>Karaf and Fuse OSGi containers use synchronous startup.</p>_<p>Asynchronous startup is more in the <em>spirit</em> of OSGi and usually means that if everything works fine_asynchronously, it'll work synchronously as well. This isn't always true otherwise.</p>_@return;protected boolean useAsynchronousBlueprintStartup() {_        return true__    };p,override,this,method,if,you,want,to,start,blueprint,containers,asynchronously,using,the,thread,that,starts,the,bundles,itself,by,default,this,method,returns,code,true,code,which,means,blueprint,extender,will,use,thread,pool,threads,named,code,blueprint,extender,n,code,to,startup,blueprint,containers,p,p,karaf,and,fuse,osgi,containers,use,synchronous,startup,p,p,asynchronous,startup,is,more,in,the,em,spirit,em,of,osgi,and,usually,means,that,if,everything,works,fine,asynchronously,it,ll,work,synchronously,as,well,this,isn,t,always,true,otherwise,p,return;protected,boolean,use,asynchronous,blueprint,startup,return,true
CamelBlueprintTestSupport -> protected boolean useAsynchronousBlueprintStartup();1461352968;<p>Override this method if you want to start Blueprint containers asynchronously using the thread_that starts the bundles itself._By default this method returns <code>true</code> which means Blueprint Extender will use thread pool_(threads named "<code>Blueprint Extender: N</code>") to startup Blueprint containers.</p>_<p>Karaf and Fuse OSGi containers use synchronous startup.</p>_<p>Asynchronous startup is more in the <em>spirit</em> of OSGi and usually means that if everything works fine_asynchronously, it'll work synchronously as well. This isn't always true otherwise.</p>_@return;protected boolean useAsynchronousBlueprintStartup() {_        return true__    };p,override,this,method,if,you,want,to,start,blueprint,containers,asynchronously,using,the,thread,that,starts,the,bundles,itself,by,default,this,method,returns,code,true,code,which,means,blueprint,extender,will,use,thread,pool,threads,named,code,blueprint,extender,n,code,to,startup,blueprint,containers,p,p,karaf,and,fuse,osgi,containers,use,synchronous,startup,p,p,asynchronous,startup,is,more,in,the,em,spirit,em,of,osgi,and,usually,means,that,if,everything,works,fine,asynchronously,it,ll,work,synchronously,as,well,this,isn,t,always,true,otherwise,p,return;protected,boolean,use,asynchronous,blueprint,startup,return,true
CamelBlueprintTestSupport -> protected boolean useAsynchronousBlueprintStartup();1486057633;<p>Override this method if you want to start Blueprint containers asynchronously using the thread_that starts the bundles itself._By default this method returns <code>true</code> which means Blueprint Extender will use thread pool_(threads named "<code>Blueprint Extender: N</code>") to startup Blueprint containers.</p>_<p>Karaf and Fuse OSGi containers use synchronous startup.</p>_<p>Asynchronous startup is more in the <em>spirit</em> of OSGi and usually means that if everything works fine_asynchronously, it'll work synchronously as well. This isn't always true otherwise.</p>_@return <code>true</code> when blueprint containers are to be started asynchronously, otherwise <code>false</code>.;protected boolean useAsynchronousBlueprintStartup() {_        return true__    };p,override,this,method,if,you,want,to,start,blueprint,containers,asynchronously,using,the,thread,that,starts,the,bundles,itself,by,default,this,method,returns,code,true,code,which,means,blueprint,extender,will,use,thread,pool,threads,named,code,blueprint,extender,n,code,to,startup,blueprint,containers,p,p,karaf,and,fuse,osgi,containers,use,synchronous,startup,p,p,asynchronous,startup,is,more,in,the,em,spirit,em,of,osgi,and,usually,means,that,if,everything,works,fine,asynchronously,it,ll,work,synchronously,as,well,this,isn,t,always,true,otherwise,p,return,code,true,code,when,blueprint,containers,are,to,be,started,asynchronously,otherwise,code,false,code;protected,boolean,use,asynchronous,blueprint,startup,return,true
CamelBlueprintTestSupport -> protected boolean useAsynchronousBlueprintStartup();1498733069;<p>Override this method if you want to start Blueprint containers asynchronously using the thread_that starts the bundles itself._By default this method returns <code>true</code> which means Blueprint Extender will use thread pool_(threads named "<code>Blueprint Extender: N</code>") to startup Blueprint containers.</p>_<p>Karaf and Fuse OSGi containers use synchronous startup.</p>_<p>Asynchronous startup is more in the <em>spirit</em> of OSGi and usually means that if everything works fine_asynchronously, it'll work synchronously as well. This isn't always true otherwise.</p>_@return <code>true</code> when blueprint containers are to be started asynchronously, otherwise <code>false</code>.;protected boolean useAsynchronousBlueprintStartup() {_        return true__    };p,override,this,method,if,you,want,to,start,blueprint,containers,asynchronously,using,the,thread,that,starts,the,bundles,itself,by,default,this,method,returns,code,true,code,which,means,blueprint,extender,will,use,thread,pool,threads,named,code,blueprint,extender,n,code,to,startup,blueprint,containers,p,p,karaf,and,fuse,osgi,containers,use,synchronous,startup,p,p,asynchronous,startup,is,more,in,the,em,spirit,em,of,osgi,and,usually,means,that,if,everything,works,fine,asynchronously,it,ll,work,synchronously,as,well,this,isn,t,always,true,otherwise,p,return,code,true,code,when,blueprint,containers,are,to,be,started,asynchronously,otherwise,code,false,code;protected,boolean,use,asynchronous,blueprint,startup,return,true
CamelBlueprintTestSupport -> protected boolean useAsynchronousBlueprintStartup();1498733823;<p>Override this method if you want to start Blueprint containers asynchronously using the thread_that starts the bundles itself._By default this method returns <code>true</code> which means Blueprint Extender will use thread pool_(threads named "<code>Blueprint Extender: N</code>") to startup Blueprint containers.</p>_<p>Karaf and Fuse OSGi containers use synchronous startup.</p>_<p>Asynchronous startup is more in the <em>spirit</em> of OSGi and usually means that if everything works fine_asynchronously, it'll work synchronously as well. This isn't always true otherwise.</p>_@return <code>true</code> when blueprint containers are to be started asynchronously, otherwise <code>false</code>.;protected boolean useAsynchronousBlueprintStartup() {_        return true__    };p,override,this,method,if,you,want,to,start,blueprint,containers,asynchronously,using,the,thread,that,starts,the,bundles,itself,by,default,this,method,returns,code,true,code,which,means,blueprint,extender,will,use,thread,pool,threads,named,code,blueprint,extender,n,code,to,startup,blueprint,containers,p,p,karaf,and,fuse,osgi,containers,use,synchronous,startup,p,p,asynchronous,startup,is,more,in,the,em,spirit,em,of,osgi,and,usually,means,that,if,everything,works,fine,asynchronously,it,ll,work,synchronously,as,well,this,isn,t,always,true,otherwise,p,return,code,true,code,when,blueprint,containers,are,to,be,started,asynchronously,otherwise,code,false,code;protected,boolean,use,asynchronous,blueprint,startup,return,true
CamelBlueprintTestSupport -> protected boolean useAsynchronousBlueprintStartup();1524063209;<p>Override this method if you want to start Blueprint containers asynchronously using the thread_that starts the bundles itself._By default this method returns <code>true</code> which means Blueprint Extender will use thread pool_(threads named "<code>Blueprint Extender: N</code>") to startup Blueprint containers.</p>_<p>Karaf and Fuse OSGi containers use synchronous startup.</p>_<p>Asynchronous startup is more in the <em>spirit</em> of OSGi and usually means that if everything works fine_asynchronously, it'll work synchronously as well. This isn't always true otherwise.</p>_@return <code>true</code> when blueprint containers are to be started asynchronously, otherwise <code>false</code>.;protected boolean useAsynchronousBlueprintStartup() {_        return true__    };p,override,this,method,if,you,want,to,start,blueprint,containers,asynchronously,using,the,thread,that,starts,the,bundles,itself,by,default,this,method,returns,code,true,code,which,means,blueprint,extender,will,use,thread,pool,threads,named,code,blueprint,extender,n,code,to,startup,blueprint,containers,p,p,karaf,and,fuse,osgi,containers,use,synchronous,startup,p,p,asynchronous,startup,is,more,in,the,em,spirit,em,of,osgi,and,usually,means,that,if,everything,works,fine,asynchronously,it,ll,work,synchronously,as,well,this,isn,t,always,true,otherwise,p,return,code,true,code,when,blueprint,containers,are,to,be,started,asynchronously,otherwise,code,false,code;protected,boolean,use,asynchronous,blueprint,startup,return,true
CamelBlueprintTestSupport -> protected boolean useAsynchronousBlueprintStartup();1528210046;<p>Override this method if you want to start Blueprint containers asynchronously using the thread_that starts the bundles itself._By default this method returns <code>true</code> which means Blueprint Extender will use thread pool_(threads named "<code>Blueprint Extender: N</code>") to startup Blueprint containers.</p>_<p>Karaf and Fuse OSGi containers use synchronous startup.</p>_<p>Asynchronous startup is more in the <em>spirit</em> of OSGi and usually means that if everything works fine_asynchronously, it'll work synchronously as well. This isn't always true otherwise.</p>_@return <code>true</code> when blueprint containers are to be started asynchronously, otherwise <code>false</code>.;protected boolean useAsynchronousBlueprintStartup() {_        return true__    };p,override,this,method,if,you,want,to,start,blueprint,containers,asynchronously,using,the,thread,that,starts,the,bundles,itself,by,default,this,method,returns,code,true,code,which,means,blueprint,extender,will,use,thread,pool,threads,named,code,blueprint,extender,n,code,to,startup,blueprint,containers,p,p,karaf,and,fuse,osgi,containers,use,synchronous,startup,p,p,asynchronous,startup,is,more,in,the,em,spirit,em,of,osgi,and,usually,means,that,if,everything,works,fine,asynchronously,it,ll,work,synchronously,as,well,this,isn,t,always,true,otherwise,p,return,code,true,code,when,blueprint,containers,are,to,be,started,asynchronously,otherwise,code,false,code;protected,boolean,use,asynchronous,blueprint,startup,return,true
CamelBlueprintTestSupport -> protected boolean useAsynchronousBlueprintStartup();1544618083;<p>Override this method if you want to start Blueprint containers asynchronously using the thread_that starts the bundles itself._By default this method returns <code>true</code> which means Blueprint Extender will use thread pool_(threads named "<code>Blueprint Extender: N</code>") to startup Blueprint containers.</p>_<p>Karaf and Fuse OSGi containers use synchronous startup.</p>_<p>Asynchronous startup is more in the <em>spirit</em> of OSGi and usually means that if everything works fine_asynchronously, it'll work synchronously as well. This isn't always true otherwise.</p>_@return <code>true</code> when blueprint containers are to be started asynchronously, otherwise <code>false</code>.;protected boolean useAsynchronousBlueprintStartup() {_        return true__    };p,override,this,method,if,you,want,to,start,blueprint,containers,asynchronously,using,the,thread,that,starts,the,bundles,itself,by,default,this,method,returns,code,true,code,which,means,blueprint,extender,will,use,thread,pool,threads,named,code,blueprint,extender,n,code,to,startup,blueprint,containers,p,p,karaf,and,fuse,osgi,containers,use,synchronous,startup,p,p,asynchronous,startup,is,more,in,the,em,spirit,em,of,osgi,and,usually,means,that,if,everything,works,fine,asynchronously,it,ll,work,synchronously,as,well,this,isn,t,always,true,otherwise,p,return,code,true,code,when,blueprint,containers,are,to,be,started,asynchronously,otherwise,code,false,code;protected,boolean,use,asynchronous,blueprint,startup,return,true
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict);1385476973;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict) {_        return new KeyValueHolder<Object, Dictionary>(service, dict)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,dictionary,dict,return,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict);1405374721;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict) {_        return new KeyValueHolder<Object, Dictionary>(service, dict)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,dictionary,dict,return,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict);1431242312;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict) {_        return new KeyValueHolder<Object, Dictionary>(service, dict)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,dictionary,dict,return,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict);1437396697;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict) {_        return new KeyValueHolder<Object, Dictionary>(service, dict)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,dictionary,dict,return,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict);1437396697;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict) {_        return new KeyValueHolder<Object, Dictionary>(service, dict)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,dictionary,dict,return,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict);1437396697;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict) {_        return new KeyValueHolder<Object, Dictionary>(service, dict)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,dictionary,dict,return,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict);1437396697;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict) {_        return new KeyValueHolder<Object, Dictionary>(service, dict)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,dictionary,dict,return,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict);1437396697;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict) {_        return new KeyValueHolder<Object, Dictionary>(service, dict)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,dictionary,dict,return,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict);1437396698;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict) {_        return new KeyValueHolder<Object, Dictionary>(service, dict)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,dictionary,dict,return,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict);1437396698;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict) {_        return new KeyValueHolder<Object, Dictionary>(service, dict)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,dictionary,dict,return,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict);1442412776;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict) {_        return new KeyValueHolder<Object, Dictionary>(service, dict)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,dictionary,dict,return,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict);1449942375;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict) {_        return new KeyValueHolder<Object, Dictionary>(service, dict)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,dictionary,dict,return,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict);1449947902;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict) {_        return new KeyValueHolder<Object, Dictionary>(service, dict)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,dictionary,dict,return,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict);1456295809;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict) {_        return new KeyValueHolder<Object, Dictionary>(service, dict)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,dictionary,dict,return,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict);1456298245;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict) {_        return new KeyValueHolder<Object, Dictionary>(service, dict)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,dictionary,dict,return,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict);1456320648;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict) {_        return new KeyValueHolder<Object, Dictionary>(service, dict)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,dictionary,dict,return,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict);1456327396;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict) {_        return new KeyValueHolder<Object, Dictionary>(service, dict)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,dictionary,dict,return,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict);1458209138;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict) {_        return new KeyValueHolder<Object, Dictionary>(service, dict)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,dictionary,dict,return,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict);1461352384;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict) {_        return new KeyValueHolder<Object, Dictionary>(service, dict)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,dictionary,dict,return,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict);1461352968;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict) {_        return new KeyValueHolder<Object, Dictionary>(service, dict)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,dictionary,dict,return,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict);1486057633;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict) {_        return new KeyValueHolder<Object, Dictionary>(service, dict)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,dictionary,dict,return,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict);1498733069;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict) {_        return new KeyValueHolder<Object, Dictionary>(service, dict)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,dictionary,dict,return,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict);1498733823;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict) {_        return new KeyValueHolder<Object, Dictionary>(service, dict)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,dictionary,dict,return,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict);1524063209;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict) {_        return new KeyValueHolder<>(service, dict)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,dictionary,dict,return,new,key,value,holder,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict);1528210046;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict) {_        return new KeyValueHolder<>(service, dict)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,dictionary,dict,return,new,key,value,holder,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict);1544618083;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict) {_        return new KeyValueHolder<>(service, dict)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,dictionary,dict,return,new,key,value,holder,service,dict
CamelBlueprintTestSupport -> protected String setConfigAdminInitialConfiguration(Properties props);1456327396;Override this method as an alternative to {@link #loadConfigAdminConfigurationFile()} if there's a need_to set initial ConfigAdmin configuration without using files.__@param props always non-null. Tests may initialize ConfigAdmin configuration by returning PID._@return persistence-id of the property placeholder. If non-null, <code>props</code> will be used as_initial ConfigAdmin configuration;protected String setConfigAdminInitialConfiguration(Properties props) {_        return null__    };override,this,method,as,an,alternative,to,link,load,config,admin,configuration,file,if,there,s,a,need,to,set,initial,config,admin,configuration,without,using,files,param,props,always,non,null,tests,may,initialize,config,admin,configuration,by,returning,pid,return,persistence,id,of,the,property,placeholder,if,non,null,code,props,code,will,be,used,as,initial,config,admin,configuration;protected,string,set,config,admin,initial,configuration,properties,props,return,null
CamelBlueprintTestSupport -> protected String setConfigAdminInitialConfiguration(Properties props);1458209138;Override this method as an alternative to {@link #loadConfigAdminConfigurationFile()} if there's a need_to set initial ConfigAdmin configuration without using files.__@param props always non-null. Tests may initialize ConfigAdmin configuration by returning PID._@return persistence-id of the property placeholder. If non-null, <code>props</code> will be used as_initial ConfigAdmin configuration;protected String setConfigAdminInitialConfiguration(Properties props) {_        return null__    };override,this,method,as,an,alternative,to,link,load,config,admin,configuration,file,if,there,s,a,need,to,set,initial,config,admin,configuration,without,using,files,param,props,always,non,null,tests,may,initialize,config,admin,configuration,by,returning,pid,return,persistence,id,of,the,property,placeholder,if,non,null,code,props,code,will,be,used,as,initial,config,admin,configuration;protected,string,set,config,admin,initial,configuration,properties,props,return,null
CamelBlueprintTestSupport -> protected String setConfigAdminInitialConfiguration(Properties props);1461352384;Override this method as an alternative to {@link #loadConfigAdminConfigurationFile()} if there's a need_to set initial ConfigAdmin configuration without using files.__@param props always non-null. Tests may initialize ConfigAdmin configuration by returning PID._@return persistence-id of the property placeholder. If non-null, <code>props</code> will be used as_initial ConfigAdmin configuration;protected String setConfigAdminInitialConfiguration(Properties props) {_        return null__    };override,this,method,as,an,alternative,to,link,load,config,admin,configuration,file,if,there,s,a,need,to,set,initial,config,admin,configuration,without,using,files,param,props,always,non,null,tests,may,initialize,config,admin,configuration,by,returning,pid,return,persistence,id,of,the,property,placeholder,if,non,null,code,props,code,will,be,used,as,initial,config,admin,configuration;protected,string,set,config,admin,initial,configuration,properties,props,return,null
CamelBlueprintTestSupport -> protected String setConfigAdminInitialConfiguration(Properties props);1461352968;Override this method as an alternative to {@link #loadConfigAdminConfigurationFile()} if there's a need_to set initial ConfigAdmin configuration without using files.__@param props always non-null. Tests may initialize ConfigAdmin configuration by returning PID._@return persistence-id of the property placeholder. If non-null, <code>props</code> will be used as_initial ConfigAdmin configuration;protected String setConfigAdminInitialConfiguration(Properties props) {_        return null__    };override,this,method,as,an,alternative,to,link,load,config,admin,configuration,file,if,there,s,a,need,to,set,initial,config,admin,configuration,without,using,files,param,props,always,non,null,tests,may,initialize,config,admin,configuration,by,returning,pid,return,persistence,id,of,the,property,placeholder,if,non,null,code,props,code,will,be,used,as,initial,config,admin,configuration;protected,string,set,config,admin,initial,configuration,properties,props,return,null
CamelBlueprintTestSupport -> protected String setConfigAdminInitialConfiguration(Properties props);1486057633;Override this method as an alternative to {@link #loadConfigAdminConfigurationFile()} if there's a need_to set initial ConfigAdmin configuration without using files.__@param props always non-null. Tests may initialize ConfigAdmin configuration by returning PID._@return persistence-id of the property placeholder. If non-null, <code>props</code> will be used as_initial ConfigAdmin configuration;protected String setConfigAdminInitialConfiguration(Properties props) {_        return null__    };override,this,method,as,an,alternative,to,link,load,config,admin,configuration,file,if,there,s,a,need,to,set,initial,config,admin,configuration,without,using,files,param,props,always,non,null,tests,may,initialize,config,admin,configuration,by,returning,pid,return,persistence,id,of,the,property,placeholder,if,non,null,code,props,code,will,be,used,as,initial,config,admin,configuration;protected,string,set,config,admin,initial,configuration,properties,props,return,null
CamelBlueprintTestSupport -> protected String setConfigAdminInitialConfiguration(Properties props);1498733069;Override this method as an alternative to {@link #loadConfigAdminConfigurationFile()} if there's a need_to set initial ConfigAdmin configuration without using files.__@param props always non-null. Tests may initialize ConfigAdmin configuration by returning PID._@return persistence-id of the property placeholder. If non-null, <code>props</code> will be used as_initial ConfigAdmin configuration;protected String setConfigAdminInitialConfiguration(Properties props) {_        return null__    };override,this,method,as,an,alternative,to,link,load,config,admin,configuration,file,if,there,s,a,need,to,set,initial,config,admin,configuration,without,using,files,param,props,always,non,null,tests,may,initialize,config,admin,configuration,by,returning,pid,return,persistence,id,of,the,property,placeholder,if,non,null,code,props,code,will,be,used,as,initial,config,admin,configuration;protected,string,set,config,admin,initial,configuration,properties,props,return,null
CamelBlueprintTestSupport -> protected String setConfigAdminInitialConfiguration(Properties props);1498733823;Override this method as an alternative to {@link #loadConfigAdminConfigurationFile()} if there's a need_to set initial ConfigAdmin configuration without using files.__@param props always non-null. Tests may initialize ConfigAdmin configuration by returning PID._@return persistence-id of the property placeholder. If non-null, <code>props</code> will be used as_initial ConfigAdmin configuration;protected String setConfigAdminInitialConfiguration(Properties props) {_        return null__    };override,this,method,as,an,alternative,to,link,load,config,admin,configuration,file,if,there,s,a,need,to,set,initial,config,admin,configuration,without,using,files,param,props,always,non,null,tests,may,initialize,config,admin,configuration,by,returning,pid,return,persistence,id,of,the,property,placeholder,if,non,null,code,props,code,will,be,used,as,initial,config,admin,configuration;protected,string,set,config,admin,initial,configuration,properties,props,return,null
CamelBlueprintTestSupport -> protected String setConfigAdminInitialConfiguration(Properties props);1524063209;Override this method as an alternative to {@link #loadConfigAdminConfigurationFile()} if there's a need_to set initial ConfigAdmin configuration without using files.__@param props always non-null. Tests may initialize ConfigAdmin configuration by returning PID._@return persistence-id of the property placeholder. If non-null, <code>props</code> will be used as_initial ConfigAdmin configuration;protected String setConfigAdminInitialConfiguration(Properties props) {_        return null__    };override,this,method,as,an,alternative,to,link,load,config,admin,configuration,file,if,there,s,a,need,to,set,initial,config,admin,configuration,without,using,files,param,props,always,non,null,tests,may,initialize,config,admin,configuration,by,returning,pid,return,persistence,id,of,the,property,placeholder,if,non,null,code,props,code,will,be,used,as,initial,config,admin,configuration;protected,string,set,config,admin,initial,configuration,properties,props,return,null
CamelBlueprintTestSupport -> protected String setConfigAdminInitialConfiguration(Properties props);1528210046;Override this method as an alternative to {@link #loadConfigAdminConfigurationFile()} if there's a need_to set initial ConfigAdmin configuration without using files.__@param props always non-null. Tests may initialize ConfigAdmin configuration by returning PID._@return persistence-id of the property placeholder. If non-null, <code>props</code> will be used as_initial ConfigAdmin configuration;protected String setConfigAdminInitialConfiguration(Properties props) {_        return null__    };override,this,method,as,an,alternative,to,link,load,config,admin,configuration,file,if,there,s,a,need,to,set,initial,config,admin,configuration,without,using,files,param,props,always,non,null,tests,may,initialize,config,admin,configuration,by,returning,pid,return,persistence,id,of,the,property,placeholder,if,non,null,code,props,code,will,be,used,as,initial,config,admin,configuration;protected,string,set,config,admin,initial,configuration,properties,props,return,null
CamelBlueprintTestSupport -> protected String setConfigAdminInitialConfiguration(Properties props);1544618083;Override this method as an alternative to {@link #loadConfigAdminConfigurationFile()} if there's a need_to set initial ConfigAdmin configuration without using files.__@param props always non-null. Tests may initialize ConfigAdmin configuration by returning PID._@return persistence-id of the property placeholder. If non-null, <code>props</code> will be used as_initial ConfigAdmin configuration;protected String setConfigAdminInitialConfiguration(Properties props) {_        return null__    };override,this,method,as,an,alternative,to,link,load,config,admin,configuration,file,if,there,s,a,need,to,set,initial,config,admin,configuration,without,using,files,param,props,always,non,null,tests,may,initialize,config,admin,configuration,by,returning,pid,return,persistence,id,of,the,property,placeholder,if,non,null,code,props,code,will,be,used,as,initial,config,admin,configuration;protected,string,set,config,admin,initial,configuration,properties,props,return,null
CamelBlueprintTestSupport -> protected Long getCamelContextCreationTimeout();1379386731;Returns how long to wait for Camel Context_to be created.__@return timeout in milliseconds.;protected Long getCamelContextCreationTimeout() {_        String tm = System.getProperty(SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT)__        if (tm == null) {_            return null__        }_        try {_            Long val = Long.valueOf(tm)__            if (val < 0) {_                throw new IllegalArgumentException("Value of " _                        + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                        + " cannot be negative.")__            }_            return val__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("Value of " _                    + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                    + " has wrong format.", e)__        }_    };returns,how,long,to,wait,for,camel,context,to,be,created,return,timeout,in,milliseconds;protected,long,get,camel,context,creation,timeout,string,tm,system,get,property,if,tm,null,return,null,try,long,val,long,value,of,tm,if,val,0,throw,new,illegal,argument,exception,value,of,cannot,be,negative,return,val,catch,number,format,exception,e,throw,new,illegal,argument,exception,value,of,has,wrong,format,e
CamelBlueprintTestSupport -> protected Long getCamelContextCreationTimeout();1381253992;Returns how long to wait for Camel Context_to be created.__@return timeout in milliseconds.;protected Long getCamelContextCreationTimeout() {_        String tm = System.getProperty(SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT)__        if (tm == null) {_            return null__        }_        try {_            Long val = Long.valueOf(tm)__            if (val < 0) {_                throw new IllegalArgumentException("Value of " _                        + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                        + " cannot be negative.")__            }_            return val__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("Value of " _                    + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                    + " has wrong format.", e)__        }_    };returns,how,long,to,wait,for,camel,context,to,be,created,return,timeout,in,milliseconds;protected,long,get,camel,context,creation,timeout,string,tm,system,get,property,if,tm,null,return,null,try,long,val,long,value,of,tm,if,val,0,throw,new,illegal,argument,exception,value,of,cannot,be,negative,return,val,catch,number,format,exception,e,throw,new,illegal,argument,exception,value,of,has,wrong,format,e
CamelBlueprintTestSupport -> protected Long getCamelContextCreationTimeout();1385476973;Returns how long to wait for Camel Context_to be created.__@return timeout in milliseconds.;protected Long getCamelContextCreationTimeout() {_        String tm = System.getProperty(SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT)__        if (tm == null) {_            return null__        }_        try {_            Long val = Long.valueOf(tm)__            if (val < 0) {_                throw new IllegalArgumentException("Value of " _                        + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                        + " cannot be negative.")__            }_            return val__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("Value of " _                    + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                    + " has wrong format.", e)__        }_    };returns,how,long,to,wait,for,camel,context,to,be,created,return,timeout,in,milliseconds;protected,long,get,camel,context,creation,timeout,string,tm,system,get,property,if,tm,null,return,null,try,long,val,long,value,of,tm,if,val,0,throw,new,illegal,argument,exception,value,of,cannot,be,negative,return,val,catch,number,format,exception,e,throw,new,illegal,argument,exception,value,of,has,wrong,format,e
CamelBlueprintTestSupport -> protected Long getCamelContextCreationTimeout();1405374721;Returns how long to wait for Camel Context_to be created.__@return timeout in milliseconds.;protected Long getCamelContextCreationTimeout() {_        String tm = System.getProperty(SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT)__        if (tm == null) {_            return null__        }_        try {_            Long val = Long.valueOf(tm)__            if (val < 0) {_                throw new IllegalArgumentException("Value of " _                        + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                        + " cannot be negative.")__            }_            return val__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("Value of " _                    + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                    + " has wrong format.", e)__        }_    };returns,how,long,to,wait,for,camel,context,to,be,created,return,timeout,in,milliseconds;protected,long,get,camel,context,creation,timeout,string,tm,system,get,property,if,tm,null,return,null,try,long,val,long,value,of,tm,if,val,0,throw,new,illegal,argument,exception,value,of,cannot,be,negative,return,val,catch,number,format,exception,e,throw,new,illegal,argument,exception,value,of,has,wrong,format,e
CamelBlueprintTestSupport -> protected Long getCamelContextCreationTimeout();1431242312;Returns how long to wait for Camel Context_to be created.__@return timeout in milliseconds.;protected Long getCamelContextCreationTimeout() {_        String tm = System.getProperty(SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT)__        if (tm == null) {_            return null__        }_        try {_            Long val = Long.valueOf(tm)__            if (val < 0) {_                throw new IllegalArgumentException("Value of " _                        + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                        + " cannot be negative.")__            }_            return val__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("Value of " _                    + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                    + " has wrong format.", e)__        }_    };returns,how,long,to,wait,for,camel,context,to,be,created,return,timeout,in,milliseconds;protected,long,get,camel,context,creation,timeout,string,tm,system,get,property,if,tm,null,return,null,try,long,val,long,value,of,tm,if,val,0,throw,new,illegal,argument,exception,value,of,cannot,be,negative,return,val,catch,number,format,exception,e,throw,new,illegal,argument,exception,value,of,has,wrong,format,e
CamelBlueprintTestSupport -> protected Long getCamelContextCreationTimeout();1437396697;Returns how long to wait for Camel Context_to be created.__@return timeout in milliseconds.;protected Long getCamelContextCreationTimeout() {_        String tm = System.getProperty(SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT)__        if (tm == null) {_            return null__        }_        try {_            Long val = Long.valueOf(tm)__            if (val < 0) {_                throw new IllegalArgumentException("Value of " _                        + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                        + " cannot be negative.")__            }_            return val__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("Value of " _                    + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                    + " has wrong format.", e)__        }_    };returns,how,long,to,wait,for,camel,context,to,be,created,return,timeout,in,milliseconds;protected,long,get,camel,context,creation,timeout,string,tm,system,get,property,if,tm,null,return,null,try,long,val,long,value,of,tm,if,val,0,throw,new,illegal,argument,exception,value,of,cannot,be,negative,return,val,catch,number,format,exception,e,throw,new,illegal,argument,exception,value,of,has,wrong,format,e
CamelBlueprintTestSupport -> protected Long getCamelContextCreationTimeout();1437396697;Returns how long to wait for Camel Context_to be created.__@return timeout in milliseconds.;protected Long getCamelContextCreationTimeout() {_        String tm = System.getProperty(SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT)__        if (tm == null) {_            return null__        }_        try {_            Long val = Long.valueOf(tm)__            if (val < 0) {_                throw new IllegalArgumentException("Value of " _                        + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                        + " cannot be negative.")__            }_            return val__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("Value of " _                    + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                    + " has wrong format.", e)__        }_    };returns,how,long,to,wait,for,camel,context,to,be,created,return,timeout,in,milliseconds;protected,long,get,camel,context,creation,timeout,string,tm,system,get,property,if,tm,null,return,null,try,long,val,long,value,of,tm,if,val,0,throw,new,illegal,argument,exception,value,of,cannot,be,negative,return,val,catch,number,format,exception,e,throw,new,illegal,argument,exception,value,of,has,wrong,format,e
CamelBlueprintTestSupport -> protected Long getCamelContextCreationTimeout();1437396697;Returns how long to wait for Camel Context_to be created.__@return timeout in milliseconds.;protected Long getCamelContextCreationTimeout() {_        String tm = System.getProperty(SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT)__        if (tm == null) {_            return null__        }_        try {_            Long val = Long.valueOf(tm)__            if (val < 0) {_                throw new IllegalArgumentException("Value of " _                        + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                        + " cannot be negative.")__            }_            return val__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("Value of " _                    + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                    + " has wrong format.", e)__        }_    };returns,how,long,to,wait,for,camel,context,to,be,created,return,timeout,in,milliseconds;protected,long,get,camel,context,creation,timeout,string,tm,system,get,property,if,tm,null,return,null,try,long,val,long,value,of,tm,if,val,0,throw,new,illegal,argument,exception,value,of,cannot,be,negative,return,val,catch,number,format,exception,e,throw,new,illegal,argument,exception,value,of,has,wrong,format,e
CamelBlueprintTestSupport -> protected Long getCamelContextCreationTimeout();1437396697;Returns how long to wait for Camel Context_to be created.__@return timeout in milliseconds.;protected Long getCamelContextCreationTimeout() {_        String tm = System.getProperty(SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT)__        if (tm == null) {_            return null__        }_        try {_            Long val = Long.valueOf(tm)__            if (val < 0) {_                throw new IllegalArgumentException("Value of " _                        + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                        + " cannot be negative.")__            }_            return val__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("Value of " _                    + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                    + " has wrong format.", e)__        }_    };returns,how,long,to,wait,for,camel,context,to,be,created,return,timeout,in,milliseconds;protected,long,get,camel,context,creation,timeout,string,tm,system,get,property,if,tm,null,return,null,try,long,val,long,value,of,tm,if,val,0,throw,new,illegal,argument,exception,value,of,cannot,be,negative,return,val,catch,number,format,exception,e,throw,new,illegal,argument,exception,value,of,has,wrong,format,e
CamelBlueprintTestSupport -> protected Long getCamelContextCreationTimeout();1437396697;Returns how long to wait for Camel Context_to be created.__@return timeout in milliseconds.;protected Long getCamelContextCreationTimeout() {_        String tm = System.getProperty(SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT)__        if (tm == null) {_            return null__        }_        try {_            Long val = Long.valueOf(tm)__            if (val < 0) {_                throw new IllegalArgumentException("Value of " _                        + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                        + " cannot be negative.")__            }_            return val__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("Value of " _                    + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                    + " has wrong format.", e)__        }_    };returns,how,long,to,wait,for,camel,context,to,be,created,return,timeout,in,milliseconds;protected,long,get,camel,context,creation,timeout,string,tm,system,get,property,if,tm,null,return,null,try,long,val,long,value,of,tm,if,val,0,throw,new,illegal,argument,exception,value,of,cannot,be,negative,return,val,catch,number,format,exception,e,throw,new,illegal,argument,exception,value,of,has,wrong,format,e
CamelBlueprintTestSupport -> protected Long getCamelContextCreationTimeout();1437396698;Returns how long to wait for Camel Context_to be created.__@return timeout in milliseconds.;protected Long getCamelContextCreationTimeout() {_        String tm = System.getProperty(SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT)__        if (tm == null) {_            return null__        }_        try {_            Long val = Long.valueOf(tm)__            if (val < 0) {_                throw new IllegalArgumentException("Value of " _                        + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                        + " cannot be negative.")__            }_            return val__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("Value of " _                    + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                    + " has wrong format.", e)__        }_    };returns,how,long,to,wait,for,camel,context,to,be,created,return,timeout,in,milliseconds;protected,long,get,camel,context,creation,timeout,string,tm,system,get,property,if,tm,null,return,null,try,long,val,long,value,of,tm,if,val,0,throw,new,illegal,argument,exception,value,of,cannot,be,negative,return,val,catch,number,format,exception,e,throw,new,illegal,argument,exception,value,of,has,wrong,format,e
CamelBlueprintTestSupport -> protected Long getCamelContextCreationTimeout();1437396698;Returns how long to wait for Camel Context_to be created.__@return timeout in milliseconds.;protected Long getCamelContextCreationTimeout() {_        String tm = System.getProperty(SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT)__        if (tm == null) {_            return null__        }_        try {_            Long val = Long.valueOf(tm)__            if (val < 0) {_                throw new IllegalArgumentException("Value of " _                        + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                        + " cannot be negative.")__            }_            return val__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("Value of " _                    + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                    + " has wrong format.", e)__        }_    };returns,how,long,to,wait,for,camel,context,to,be,created,return,timeout,in,milliseconds;protected,long,get,camel,context,creation,timeout,string,tm,system,get,property,if,tm,null,return,null,try,long,val,long,value,of,tm,if,val,0,throw,new,illegal,argument,exception,value,of,cannot,be,negative,return,val,catch,number,format,exception,e,throw,new,illegal,argument,exception,value,of,has,wrong,format,e
CamelBlueprintTestSupport -> protected Long getCamelContextCreationTimeout();1442412776;Returns how long to wait for Camel Context_to be created.__@return timeout in milliseconds.;protected Long getCamelContextCreationTimeout() {_        String tm = System.getProperty(SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT)__        if (tm == null) {_            return null__        }_        try {_            Long val = Long.valueOf(tm)__            if (val < 0) {_                throw new IllegalArgumentException("Value of " _                        + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                        + " cannot be negative.")__            }_            return val__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("Value of " _                    + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                    + " has wrong format.", e)__        }_    };returns,how,long,to,wait,for,camel,context,to,be,created,return,timeout,in,milliseconds;protected,long,get,camel,context,creation,timeout,string,tm,system,get,property,if,tm,null,return,null,try,long,val,long,value,of,tm,if,val,0,throw,new,illegal,argument,exception,value,of,cannot,be,negative,return,val,catch,number,format,exception,e,throw,new,illegal,argument,exception,value,of,has,wrong,format,e
CamelBlueprintTestSupport -> protected Long getCamelContextCreationTimeout();1449942375;Returns how long to wait for Camel Context_to be created.__@return timeout in milliseconds.;protected Long getCamelContextCreationTimeout() {_        String tm = System.getProperty(SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT)__        if (tm == null) {_            return null__        }_        try {_            Long val = Long.valueOf(tm)__            if (val < 0) {_                throw new IllegalArgumentException("Value of " _                        + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                        + " cannot be negative.")__            }_            return val__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("Value of " _                    + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                    + " has wrong format.", e)__        }_    };returns,how,long,to,wait,for,camel,context,to,be,created,return,timeout,in,milliseconds;protected,long,get,camel,context,creation,timeout,string,tm,system,get,property,if,tm,null,return,null,try,long,val,long,value,of,tm,if,val,0,throw,new,illegal,argument,exception,value,of,cannot,be,negative,return,val,catch,number,format,exception,e,throw,new,illegal,argument,exception,value,of,has,wrong,format,e
CamelBlueprintTestSupport -> protected Long getCamelContextCreationTimeout();1449947902;Returns how long to wait for Camel Context_to be created.__@return timeout in milliseconds.;protected Long getCamelContextCreationTimeout() {_        String tm = System.getProperty(SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT)__        if (tm == null) {_            return null__        }_        try {_            Long val = Long.valueOf(tm)__            if (val < 0) {_                throw new IllegalArgumentException("Value of " _                        + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                        + " cannot be negative.")__            }_            return val__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("Value of " _                    + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                    + " has wrong format.", e)__        }_    };returns,how,long,to,wait,for,camel,context,to,be,created,return,timeout,in,milliseconds;protected,long,get,camel,context,creation,timeout,string,tm,system,get,property,if,tm,null,return,null,try,long,val,long,value,of,tm,if,val,0,throw,new,illegal,argument,exception,value,of,cannot,be,negative,return,val,catch,number,format,exception,e,throw,new,illegal,argument,exception,value,of,has,wrong,format,e
CamelBlueprintTestSupport -> protected Long getCamelContextCreationTimeout();1456295809;Returns how long to wait for Camel Context_to be created.__@return timeout in milliseconds.;protected Long getCamelContextCreationTimeout() {_        String tm = System.getProperty(SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT)__        if (tm == null) {_            return null__        }_        try {_            Long val = Long.valueOf(tm)__            if (val < 0) {_                throw new IllegalArgumentException("Value of " _                        + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                        + " cannot be negative.")__            }_            return val__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("Value of " _                    + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                    + " has wrong format.", e)__        }_    };returns,how,long,to,wait,for,camel,context,to,be,created,return,timeout,in,milliseconds;protected,long,get,camel,context,creation,timeout,string,tm,system,get,property,if,tm,null,return,null,try,long,val,long,value,of,tm,if,val,0,throw,new,illegal,argument,exception,value,of,cannot,be,negative,return,val,catch,number,format,exception,e,throw,new,illegal,argument,exception,value,of,has,wrong,format,e
CamelBlueprintTestSupport -> protected Long getCamelContextCreationTimeout();1456298245;Returns how long to wait for Camel Context_to be created.__@return timeout in milliseconds.;protected Long getCamelContextCreationTimeout() {_        String tm = System.getProperty(SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT)__        if (tm == null) {_            return null__        }_        try {_            Long val = Long.valueOf(tm)__            if (val < 0) {_                throw new IllegalArgumentException("Value of " _                        + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                        + " cannot be negative.")__            }_            return val__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("Value of " _                    + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                    + " has wrong format.", e)__        }_    };returns,how,long,to,wait,for,camel,context,to,be,created,return,timeout,in,milliseconds;protected,long,get,camel,context,creation,timeout,string,tm,system,get,property,if,tm,null,return,null,try,long,val,long,value,of,tm,if,val,0,throw,new,illegal,argument,exception,value,of,cannot,be,negative,return,val,catch,number,format,exception,e,throw,new,illegal,argument,exception,value,of,has,wrong,format,e
CamelBlueprintTestSupport -> protected Long getCamelContextCreationTimeout();1456320648;Returns how long to wait for Camel Context_to be created.__@return timeout in milliseconds.;protected Long getCamelContextCreationTimeout() {_        String tm = System.getProperty(SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT)__        if (tm == null) {_            return null__        }_        try {_            Long val = Long.valueOf(tm)__            if (val < 0) {_                throw new IllegalArgumentException("Value of " _                        + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                        + " cannot be negative.")__            }_            return val__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("Value of " _                    + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                    + " has wrong format.", e)__        }_    };returns,how,long,to,wait,for,camel,context,to,be,created,return,timeout,in,milliseconds;protected,long,get,camel,context,creation,timeout,string,tm,system,get,property,if,tm,null,return,null,try,long,val,long,value,of,tm,if,val,0,throw,new,illegal,argument,exception,value,of,cannot,be,negative,return,val,catch,number,format,exception,e,throw,new,illegal,argument,exception,value,of,has,wrong,format,e
CamelBlueprintTestSupport -> protected Long getCamelContextCreationTimeout();1456327396;Returns how long to wait for Camel Context_to be created.__@return timeout in milliseconds.;protected Long getCamelContextCreationTimeout() {_        String tm = System.getProperty(SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT)__        if (tm == null) {_            return null__        }_        try {_            Long val = Long.valueOf(tm)__            if (val < 0) {_                throw new IllegalArgumentException("Value of " _                        + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                        + " cannot be negative.")__            }_            return val__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("Value of " _                    + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                    + " has wrong format.", e)__        }_    };returns,how,long,to,wait,for,camel,context,to,be,created,return,timeout,in,milliseconds;protected,long,get,camel,context,creation,timeout,string,tm,system,get,property,if,tm,null,return,null,try,long,val,long,value,of,tm,if,val,0,throw,new,illegal,argument,exception,value,of,cannot,be,negative,return,val,catch,number,format,exception,e,throw,new,illegal,argument,exception,value,of,has,wrong,format,e
CamelBlueprintTestSupport -> protected Long getCamelContextCreationTimeout();1458209138;Returns how long to wait for Camel Context_to be created.__@return timeout in milliseconds.;protected Long getCamelContextCreationTimeout() {_        String tm = System.getProperty(SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT)__        if (tm == null) {_            return null__        }_        try {_            Long val = Long.valueOf(tm)__            if (val < 0) {_                throw new IllegalArgumentException("Value of " _                        + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                        + " cannot be negative.")__            }_            return val__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("Value of " _                    + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                    + " has wrong format.", e)__        }_    };returns,how,long,to,wait,for,camel,context,to,be,created,return,timeout,in,milliseconds;protected,long,get,camel,context,creation,timeout,string,tm,system,get,property,if,tm,null,return,null,try,long,val,long,value,of,tm,if,val,0,throw,new,illegal,argument,exception,value,of,cannot,be,negative,return,val,catch,number,format,exception,e,throw,new,illegal,argument,exception,value,of,has,wrong,format,e
CamelBlueprintTestSupport -> protected Long getCamelContextCreationTimeout();1461352384;Returns how long to wait for Camel Context_to be created.__@return timeout in milliseconds.;protected Long getCamelContextCreationTimeout() {_        String tm = System.getProperty(SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT)__        if (tm == null) {_            return null__        }_        try {_            Long val = Long.valueOf(tm)__            if (val < 0) {_                throw new IllegalArgumentException("Value of " _                        + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                        + " cannot be negative.")__            }_            return val__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("Value of " _                    + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                    + " has wrong format.", e)__        }_    };returns,how,long,to,wait,for,camel,context,to,be,created,return,timeout,in,milliseconds;protected,long,get,camel,context,creation,timeout,string,tm,system,get,property,if,tm,null,return,null,try,long,val,long,value,of,tm,if,val,0,throw,new,illegal,argument,exception,value,of,cannot,be,negative,return,val,catch,number,format,exception,e,throw,new,illegal,argument,exception,value,of,has,wrong,format,e
CamelBlueprintTestSupport -> protected Long getCamelContextCreationTimeout();1461352968;Returns how long to wait for Camel Context_to be created.__@return timeout in milliseconds.;protected Long getCamelContextCreationTimeout() {_        String tm = System.getProperty(SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT)__        if (tm == null) {_            return null__        }_        try {_            Long val = Long.valueOf(tm)__            if (val < 0) {_                throw new IllegalArgumentException("Value of " _                        + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                        + " cannot be negative.")__            }_            return val__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("Value of " _                    + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                    + " has wrong format.", e)__        }_    };returns,how,long,to,wait,for,camel,context,to,be,created,return,timeout,in,milliseconds;protected,long,get,camel,context,creation,timeout,string,tm,system,get,property,if,tm,null,return,null,try,long,val,long,value,of,tm,if,val,0,throw,new,illegal,argument,exception,value,of,cannot,be,negative,return,val,catch,number,format,exception,e,throw,new,illegal,argument,exception,value,of,has,wrong,format,e
CamelBlueprintTestSupport -> protected Long getCamelContextCreationTimeout();1486057633;Returns how long to wait for Camel Context_to be created.__@return timeout in milliseconds.;protected Long getCamelContextCreationTimeout() {_        String tm = System.getProperty(SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT)__        if (tm == null) {_            return null__        }_        try {_            Long val = Long.valueOf(tm)__            if (val < 0) {_                throw new IllegalArgumentException("Value of " _                        + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                        + " cannot be negative.")__            }_            return val__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("Value of " _                    + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                    + " has wrong format.", e)__        }_    };returns,how,long,to,wait,for,camel,context,to,be,created,return,timeout,in,milliseconds;protected,long,get,camel,context,creation,timeout,string,tm,system,get,property,if,tm,null,return,null,try,long,val,long,value,of,tm,if,val,0,throw,new,illegal,argument,exception,value,of,cannot,be,negative,return,val,catch,number,format,exception,e,throw,new,illegal,argument,exception,value,of,has,wrong,format,e
CamelBlueprintTestSupport -> protected Long getCamelContextCreationTimeout();1498733069;Returns how long to wait for Camel Context_to be created.__@return timeout in milliseconds.;protected Long getCamelContextCreationTimeout() {_        String tm = System.getProperty(SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT)__        if (tm == null) {_            return null__        }_        try {_            Long val = Long.valueOf(tm)__            if (val < 0) {_                throw new IllegalArgumentException("Value of " _                        + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                        + " cannot be negative.")__            }_            return val__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("Value of " _                    + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                    + " has wrong format.", e)__        }_    };returns,how,long,to,wait,for,camel,context,to,be,created,return,timeout,in,milliseconds;protected,long,get,camel,context,creation,timeout,string,tm,system,get,property,if,tm,null,return,null,try,long,val,long,value,of,tm,if,val,0,throw,new,illegal,argument,exception,value,of,cannot,be,negative,return,val,catch,number,format,exception,e,throw,new,illegal,argument,exception,value,of,has,wrong,format,e
CamelBlueprintTestSupport -> protected Long getCamelContextCreationTimeout();1498733823;Returns how long to wait for Camel Context_to be created.__@return timeout in milliseconds.;protected Long getCamelContextCreationTimeout() {_        String tm = System.getProperty(SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT)__        if (tm == null) {_            return null__        }_        try {_            Long val = Long.valueOf(tm)__            if (val < 0) {_                throw new IllegalArgumentException("Value of " _                        + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                        + " cannot be negative.")__            }_            return val__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("Value of " _                    + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                    + " has wrong format.", e)__        }_    };returns,how,long,to,wait,for,camel,context,to,be,created,return,timeout,in,milliseconds;protected,long,get,camel,context,creation,timeout,string,tm,system,get,property,if,tm,null,return,null,try,long,val,long,value,of,tm,if,val,0,throw,new,illegal,argument,exception,value,of,cannot,be,negative,return,val,catch,number,format,exception,e,throw,new,illegal,argument,exception,value,of,has,wrong,format,e
CamelBlueprintTestSupport -> protected Long getCamelContextCreationTimeout();1524063209;Returns how long to wait for Camel Context_to be created.__@return timeout in milliseconds.;protected Long getCamelContextCreationTimeout() {_        String tm = System.getProperty(SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT)__        if (tm == null) {_            return null__        }_        try {_            Long val = Long.valueOf(tm)__            if (val < 0) {_                throw new IllegalArgumentException("Value of " _                        + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                        + " cannot be negative.")__            }_            return val__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("Value of " _                    + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                    + " has wrong format.", e)__        }_    };returns,how,long,to,wait,for,camel,context,to,be,created,return,timeout,in,milliseconds;protected,long,get,camel,context,creation,timeout,string,tm,system,get,property,if,tm,null,return,null,try,long,val,long,value,of,tm,if,val,0,throw,new,illegal,argument,exception,value,of,cannot,be,negative,return,val,catch,number,format,exception,e,throw,new,illegal,argument,exception,value,of,has,wrong,format,e
CamelBlueprintTestSupport -> protected Long getCamelContextCreationTimeout();1528210046;Returns how long to wait for Camel Context_to be created.__@return timeout in milliseconds.;protected Long getCamelContextCreationTimeout() {_        String tm = System.getProperty(SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT)__        if (tm == null) {_            return null__        }_        try {_            Long val = Long.valueOf(tm)__            if (val < 0) {_                throw new IllegalArgumentException("Value of " _                        + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                        + " cannot be negative.")__            }_            return val__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("Value of " _                    + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                    + " has wrong format.", e)__        }_    };returns,how,long,to,wait,for,camel,context,to,be,created,return,timeout,in,milliseconds;protected,long,get,camel,context,creation,timeout,string,tm,system,get,property,if,tm,null,return,null,try,long,val,long,value,of,tm,if,val,0,throw,new,illegal,argument,exception,value,of,cannot,be,negative,return,val,catch,number,format,exception,e,throw,new,illegal,argument,exception,value,of,has,wrong,format,e
CamelBlueprintTestSupport -> protected Long getCamelContextCreationTimeout();1544618083;Returns how long to wait for Camel Context_to be created.__@return timeout in milliseconds.;protected Long getCamelContextCreationTimeout() {_        String tm = System.getProperty(SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT)__        if (tm == null) {_            return null__        }_        try {_            Long val = Long.valueOf(tm)__            if (val < 0) {_                throw new IllegalArgumentException("Value of " _                        + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                        + " cannot be negative.")__            }_            return val__        } catch (NumberFormatException e) {_            throw new IllegalArgumentException("Value of " _                    + SPROP_CAMEL_CONTEXT_CREATION_TIMEOUT_                    + " has wrong format.", e)__        }_    };returns,how,long,to,wait,for,camel,context,to,be,created,return,timeout,in,milliseconds;protected,long,get,camel,context,creation,timeout,string,tm,system,get,property,if,tm,null,return,null,try,long,val,long,value,of,tm,if,val,0,throw,new,illegal,argument,exception,value,of,cannot,be,negative,return,val,catch,number,format,exception,e,throw,new,illegal,argument,exception,value,of,has,wrong,format,e
CamelBlueprintTestSupport -> private String prepareInitialConfigFile(Properties initialConfiguration) throws IOException;1456327396;Create a temporary File with persisted configuration for ConfigAdmin_@param initialConfiguration_@return;private String prepareInitialConfigFile(Properties initialConfiguration) throws IOException {_        File dir = new File("target/etc")__        dir.mkdirs()__        File cfg = File.createTempFile("properties-", ".cfg", dir)__        FileWriter writer = new FileWriter(cfg)__        try {_            initialConfiguration.store(writer, null)__        } finally {_            writer.close()__        }_        return cfg.getAbsolutePath()__    };create,a,temporary,file,with,persisted,configuration,for,config,admin,param,initial,configuration,return;private,string,prepare,initial,config,file,properties,initial,configuration,throws,ioexception,file,dir,new,file,target,etc,dir,mkdirs,file,cfg,file,create,temp,file,properties,cfg,dir,file,writer,writer,new,file,writer,cfg,try,initial,configuration,store,writer,null,finally,writer,close,return,cfg,get,absolute,path
CamelBlueprintTestSupport -> private String prepareInitialConfigFile(Properties initialConfiguration) throws IOException;1458209138;Create a temporary File with persisted configuration for ConfigAdmin_@param initialConfiguration_@return;private String prepareInitialConfigFile(Properties initialConfiguration) throws IOException {_        File dir = new File("target/etc")__        dir.mkdirs()__        File cfg = File.createTempFile("properties-", ".cfg", dir)__        FileWriter writer = new FileWriter(cfg)__        try {_            initialConfiguration.store(writer, null)__        } finally {_            writer.close()__        }_        return cfg.getAbsolutePath()__    };create,a,temporary,file,with,persisted,configuration,for,config,admin,param,initial,configuration,return;private,string,prepare,initial,config,file,properties,initial,configuration,throws,ioexception,file,dir,new,file,target,etc,dir,mkdirs,file,cfg,file,create,temp,file,properties,cfg,dir,file,writer,writer,new,file,writer,cfg,try,initial,configuration,store,writer,null,finally,writer,close,return,cfg,get,absolute,path
CamelBlueprintTestSupport -> private String prepareInitialConfigFile(Properties initialConfiguration) throws IOException;1461352384;Create a temporary File with persisted configuration for ConfigAdmin_@param initialConfiguration_@return;private String prepareInitialConfigFile(Properties initialConfiguration) throws IOException {_        File dir = new File("target/etc")__        dir.mkdirs()__        File cfg = File.createTempFile("properties-", ".cfg", dir)__        FileWriter writer = new FileWriter(cfg)__        try {_            initialConfiguration.store(writer, null)__        } finally {_            writer.close()__        }_        return cfg.getAbsolutePath()__    };create,a,temporary,file,with,persisted,configuration,for,config,admin,param,initial,configuration,return;private,string,prepare,initial,config,file,properties,initial,configuration,throws,ioexception,file,dir,new,file,target,etc,dir,mkdirs,file,cfg,file,create,temp,file,properties,cfg,dir,file,writer,writer,new,file,writer,cfg,try,initial,configuration,store,writer,null,finally,writer,close,return,cfg,get,absolute,path
CamelBlueprintTestSupport -> private String prepareInitialConfigFile(Properties initialConfiguration) throws IOException;1461352968;Create a temporary File with persisted configuration for ConfigAdmin_@param initialConfiguration_@return;private String prepareInitialConfigFile(Properties initialConfiguration) throws IOException {_        File dir = new File("target/etc")__        dir.mkdirs()__        File cfg = File.createTempFile("properties-", ".cfg", dir)__        FileWriter writer = new FileWriter(cfg)__        try {_            initialConfiguration.store(writer, null)__        } finally {_            writer.close()__        }_        return cfg.getAbsolutePath()__    };create,a,temporary,file,with,persisted,configuration,for,config,admin,param,initial,configuration,return;private,string,prepare,initial,config,file,properties,initial,configuration,throws,ioexception,file,dir,new,file,target,etc,dir,mkdirs,file,cfg,file,create,temp,file,properties,cfg,dir,file,writer,writer,new,file,writer,cfg,try,initial,configuration,store,writer,null,finally,writer,close,return,cfg,get,absolute,path
CamelBlueprintTestSupport -> private String prepareInitialConfigFile(Properties initialConfiguration) throws IOException;1486057633;Create a temporary File with persisted configuration for ConfigAdmin_@param initialConfiguration_@return;private String prepareInitialConfigFile(Properties initialConfiguration) throws IOException {_        File dir = new File("target/etc")__        dir.mkdirs()__        File cfg = File.createTempFile("properties-", ".cfg", dir)__        FileWriter writer = new FileWriter(cfg)__        try {_            initialConfiguration.store(writer, null)__        } finally {_            writer.close()__        }_        return cfg.getAbsolutePath()__    };create,a,temporary,file,with,persisted,configuration,for,config,admin,param,initial,configuration,return;private,string,prepare,initial,config,file,properties,initial,configuration,throws,ioexception,file,dir,new,file,target,etc,dir,mkdirs,file,cfg,file,create,temp,file,properties,cfg,dir,file,writer,writer,new,file,writer,cfg,try,initial,configuration,store,writer,null,finally,writer,close,return,cfg,get,absolute,path
CamelBlueprintTestSupport -> private String prepareInitialConfigFile(Properties initialConfiguration) throws IOException;1498733069;Create a temporary File with persisted configuration for ConfigAdmin_@param initialConfiguration_@return;private String prepareInitialConfigFile(Properties initialConfiguration) throws IOException {_        File dir = new File("target/etc")__        dir.mkdirs()__        File cfg = File.createTempFile("properties-", ".cfg", dir)__        FileWriter writer = new FileWriter(cfg)__        try {_            initialConfiguration.store(writer, null)__        } finally {_            writer.close()__        }_        return cfg.getAbsolutePath()__    };create,a,temporary,file,with,persisted,configuration,for,config,admin,param,initial,configuration,return;private,string,prepare,initial,config,file,properties,initial,configuration,throws,ioexception,file,dir,new,file,target,etc,dir,mkdirs,file,cfg,file,create,temp,file,properties,cfg,dir,file,writer,writer,new,file,writer,cfg,try,initial,configuration,store,writer,null,finally,writer,close,return,cfg,get,absolute,path
CamelBlueprintTestSupport -> private String prepareInitialConfigFile(Properties initialConfiguration) throws IOException;1498733823;Create a temporary File with persisted configuration for ConfigAdmin_@param initialConfiguration_@return;private String prepareInitialConfigFile(Properties initialConfiguration) throws IOException {_        File dir = new File("target/etc")__        dir.mkdirs()__        File cfg = File.createTempFile("properties-", ".cfg", dir)__        FileWriter writer = new FileWriter(cfg)__        try {_            initialConfiguration.store(writer, null)__        } finally {_            writer.close()__        }_        return cfg.getAbsolutePath()__    };create,a,temporary,file,with,persisted,configuration,for,config,admin,param,initial,configuration,return;private,string,prepare,initial,config,file,properties,initial,configuration,throws,ioexception,file,dir,new,file,target,etc,dir,mkdirs,file,cfg,file,create,temp,file,properties,cfg,dir,file,writer,writer,new,file,writer,cfg,try,initial,configuration,store,writer,null,finally,writer,close,return,cfg,get,absolute,path
CamelBlueprintTestSupport -> private String prepareInitialConfigFile(Properties initialConfiguration) throws IOException;1524063209;Create a temporary File with persisted configuration for ConfigAdmin_@param initialConfiguration_@return;private String prepareInitialConfigFile(Properties initialConfiguration) throws IOException {_        File dir = new File("target/etc")__        dir.mkdirs()__        File cfg = File.createTempFile("properties-", ".cfg", dir)__        FileWriter writer = new FileWriter(cfg)__        try {_            initialConfiguration.store(writer, null)__        } finally {_            writer.close()__        }_        return cfg.getAbsolutePath()__    };create,a,temporary,file,with,persisted,configuration,for,config,admin,param,initial,configuration,return;private,string,prepare,initial,config,file,properties,initial,configuration,throws,ioexception,file,dir,new,file,target,etc,dir,mkdirs,file,cfg,file,create,temp,file,properties,cfg,dir,file,writer,writer,new,file,writer,cfg,try,initial,configuration,store,writer,null,finally,writer,close,return,cfg,get,absolute,path
CamelBlueprintTestSupport -> private String prepareInitialConfigFile(Properties initialConfiguration) throws IOException;1528210046;Create a temporary File with persisted configuration for ConfigAdmin_@param initialConfiguration_@return;private String prepareInitialConfigFile(Properties initialConfiguration) throws IOException {_        File dir = new File("target/etc")__        dir.mkdirs()__        File cfg = File.createTempFile("properties-", ".cfg", dir)__        FileWriter writer = new FileWriter(cfg)__        try {_            initialConfiguration.store(writer, null)__        } finally {_            writer.close()__        }_        return cfg.getAbsolutePath()__    };create,a,temporary,file,with,persisted,configuration,for,config,admin,param,initial,configuration,return;private,string,prepare,initial,config,file,properties,initial,configuration,throws,ioexception,file,dir,new,file,target,etc,dir,mkdirs,file,cfg,file,create,temp,file,properties,cfg,dir,file,writer,writer,new,file,writer,cfg,try,initial,configuration,store,writer,null,finally,writer,close,return,cfg,get,absolute,path
CamelBlueprintTestSupport -> private String prepareInitialConfigFile(Properties initialConfiguration) throws IOException;1544618083;Create a temporary File with persisted configuration for ConfigAdmin_@param initialConfiguration_@return;private String prepareInitialConfigFile(Properties initialConfiguration) throws IOException {_        File dir = new File("target/etc")__        dir.mkdirs()__        File cfg = File.createTempFile("properties-", ".cfg", dir)__        FileWriter writer = new FileWriter(cfg)__        try {_            initialConfiguration.store(writer, null)__        } finally {_            writer.close()__        }_        return cfg.getAbsolutePath()__    };create,a,temporary,file,with,persisted,configuration,for,config,admin,param,initial,configuration,return;private,string,prepare,initial,config,file,properties,initial,configuration,throws,ioexception,file,dir,new,file,target,etc,dir,mkdirs,file,cfg,file,create,temp,file,properties,cfg,dir,file,writer,writer,new,file,writer,cfg,try,initial,configuration,store,writer,null,finally,writer,close,return,cfg,get,absolute,path
CamelBlueprintTestSupport -> private static String explode(Dictionary<?, ?> dictionary);1327012901;Explode the dictionary into a <code>,</code> delimited list of <code>key=value</code> pairs.;private static String explode(Dictionary<?, ?> dictionary) {_        Enumeration<?> keys = dictionary.keys()__        StringBuffer result = new StringBuffer()__        while (keys.hasMoreElements()) {_            Object key = keys.nextElement()__            result.append(String.format("%s=%s", key, dictionary.get(key)))__            if (keys.hasMoreElements()) {_                result.append(", ")__            }_        }_        return result.toString()__    };explode,the,dictionary,into,a,code,code,delimited,list,of,code,key,value,code,pairs;private,static,string,explode,dictionary,dictionary,enumeration,keys,dictionary,keys,string,buffer,result,new,string,buffer,while,keys,has,more,elements,object,key,keys,next,element,result,append,string,format,s,s,key,dictionary,get,key,if,keys,has,more,elements,result,append,return,result,to,string
CamelBlueprintTestSupport -> private static String explode(Dictionary<?, ?> dictionary);1327327884;Explode the dictionary into a <code>,</code> delimited list of <code>key=value</code> pairs.;private static String explode(Dictionary<?, ?> dictionary) {_        Enumeration<?> keys = dictionary.keys()__        StringBuffer result = new StringBuffer()__        while (keys.hasMoreElements()) {_            Object key = keys.nextElement()__            result.append(String.format("%s=%s", key, dictionary.get(key)))__            if (keys.hasMoreElements()) {_                result.append(", ")__            }_        }_        return result.toString()__    };explode,the,dictionary,into,a,code,code,delimited,list,of,code,key,value,code,pairs;private,static,string,explode,dictionary,dictionary,enumeration,keys,dictionary,keys,string,buffer,result,new,string,buffer,while,keys,has,more,elements,object,key,keys,next,element,result,append,string,format,s,s,key,dictionary,get,key,if,keys,has,more,elements,result,append,return,result,to,string
CamelBlueprintTestSupport -> private static String explode(Dictionary<?, ?> dictionary);1327330106;Explode the dictionary into a <code>,</code> delimited list of <code>key=value</code> pairs.;private static String explode(Dictionary<?, ?> dictionary) {_        Enumeration<?> keys = dictionary.keys()__        StringBuffer result = new StringBuffer()__        while (keys.hasMoreElements()) {_            Object key = keys.nextElement()__            result.append(String.format("%s=%s", key, dictionary.get(key)))__            if (keys.hasMoreElements()) {_                result.append(", ")__            }_        }_        return result.toString()__    };explode,the,dictionary,into,a,code,code,delimited,list,of,code,key,value,code,pairs;private,static,string,explode,dictionary,dictionary,enumeration,keys,dictionary,keys,string,buffer,result,new,string,buffer,while,keys,has,more,elements,object,key,keys,next,element,result,append,string,format,s,s,key,dictionary,get,key,if,keys,has,more,elements,result,append,return,result,to,string
CamelBlueprintTestSupport -> private static String explode(Dictionary<?, ?> dictionary);1327336123;Explode the dictionary into a <code>,</code> delimited list of <code>key=value</code> pairs.;private static String explode(Dictionary<?, ?> dictionary) {_        Enumeration<?> keys = dictionary.keys()__        StringBuffer result = new StringBuffer()__        while (keys.hasMoreElements()) {_            Object key = keys.nextElement()__            result.append(String.format("%s=%s", key, dictionary.get(key)))__            if (keys.hasMoreElements()) {_                result.append(", ")__            }_        }_        return result.toString()__    };explode,the,dictionary,into,a,code,code,delimited,list,of,code,key,value,code,pairs;private,static,string,explode,dictionary,dictionary,enumeration,keys,dictionary,keys,string,buffer,result,new,string,buffer,while,keys,has,more,elements,object,key,keys,next,element,result,append,string,format,s,s,key,dictionary,get,key,if,keys,has,more,elements,result,append,return,result,to,string
CamelBlueprintTestSupport -> private static String explode(Dictionary<?, ?> dictionary);1327349321;Explode the dictionary into a <code>,</code> delimited list of <code>key=value</code> pairs.;private static String explode(Dictionary<?, ?> dictionary) {_        Enumeration<?> keys = dictionary.keys()__        StringBuffer result = new StringBuffer()__        while (keys.hasMoreElements()) {_            Object key = keys.nextElement()__            result.append(String.format("%s=%s", key, dictionary.get(key)))__            if (keys.hasMoreElements()) {_                result.append(", ")__            }_        }_        return result.toString()__    };explode,the,dictionary,into,a,code,code,delimited,list,of,code,key,value,code,pairs;private,static,string,explode,dictionary,dictionary,enumeration,keys,dictionary,keys,string,buffer,result,new,string,buffer,while,keys,has,more,elements,object,key,keys,next,element,result,append,string,format,s,s,key,dictionary,get,key,if,keys,has,more,elements,result,append,return,result,to,string
CamelBlueprintTestSupport -> private static String explode(Dictionary<?, ?> dictionary);1327416359;Explode the dictionary into a <code>,</code> delimited list of <code>key=value</code> pairs.;private static String explode(Dictionary<?, ?> dictionary) {_        Enumeration<?> keys = dictionary.keys()__        StringBuffer result = new StringBuffer()__        while (keys.hasMoreElements()) {_            Object key = keys.nextElement()__            result.append(String.format("%s=%s", key, dictionary.get(key)))__            if (keys.hasMoreElements()) {_                result.append(", ")__            }_        }_        return result.toString()__    };explode,the,dictionary,into,a,code,code,delimited,list,of,code,key,value,code,pairs;private,static,string,explode,dictionary,dictionary,enumeration,keys,dictionary,keys,string,buffer,result,new,string,buffer,while,keys,has,more,elements,object,key,keys,next,element,result,append,string,format,s,s,key,dictionary,get,key,if,keys,has,more,elements,result,append,return,result,to,string
CamelBlueprintTestSupport -> private static String explode(Dictionary<?, ?> dictionary);1329920108;Explode the dictionary into a <code>,</code> delimited list of <code>key=value</code> pairs.;private static String explode(Dictionary<?, ?> dictionary) {_        Enumeration<?> keys = dictionary.keys()__        StringBuffer result = new StringBuffer()__        while (keys.hasMoreElements()) {_            Object key = keys.nextElement()__            result.append(String.format("%s=%s", key, dictionary.get(key)))__            if (keys.hasMoreElements()) {_                result.append(", ")__            }_        }_        return result.toString()__    };explode,the,dictionary,into,a,code,code,delimited,list,of,code,key,value,code,pairs;private,static,string,explode,dictionary,dictionary,enumeration,keys,dictionary,keys,string,buffer,result,new,string,buffer,while,keys,has,more,elements,object,key,keys,next,element,result,append,string,format,s,s,key,dictionary,get,key,if,keys,has,more,elements,result,append,return,result,to,string
CamelBlueprintTestSupport -> private static String explode(Dictionary<?, ?> dictionary);1334006191;Explode the dictionary into a <code>,</code> delimited list of <code>key=value</code> pairs.;private static String explode(Dictionary<?, ?> dictionary) {_        Enumeration<?> keys = dictionary.keys()__        StringBuffer result = new StringBuffer()__        while (keys.hasMoreElements()) {_            Object key = keys.nextElement()__            result.append(String.format("%s=%s", key, dictionary.get(key)))__            if (keys.hasMoreElements()) {_                result.append(", ")__            }_        }_        return result.toString()__    };explode,the,dictionary,into,a,code,code,delimited,list,of,code,key,value,code,pairs;private,static,string,explode,dictionary,dictionary,enumeration,keys,dictionary,keys,string,buffer,result,new,string,buffer,while,keys,has,more,elements,object,key,keys,next,element,result,append,string,format,s,s,key,dictionary,get,key,if,keys,has,more,elements,result,append,return,result,to,string
CamelBlueprintTestSupport -> KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value);1378117940;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value) {_        Properties prop = new Properties()__        if (key != null && value != null) {_            prop.put(key, value)__        }_        return new KeyValueHolder<Object, Dictionary>(service, prop)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;key,value,holder,object,dictionary,as,service,object,service,string,key,string,value,properties,prop,new,properties,if,key,null,value,null,prop,put,key,value,return,new,key,value,holder,object,dictionary,service,prop
CamelBlueprintTestSupport -> KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value);1379386731;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value) {_        Properties prop = new Properties()__        if (key != null && value != null) {_            prop.put(key, value)__        }_        return new KeyValueHolder<Object, Dictionary>(service, prop)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;key,value,holder,object,dictionary,as,service,object,service,string,key,string,value,properties,prop,new,properties,if,key,null,value,null,prop,put,key,value,return,new,key,value,holder,object,dictionary,service,prop
CamelBlueprintTestSupport -> KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value);1381253992;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value) {_        Properties prop = new Properties()__        if (key != null && value != null) {_            prop.put(key, value)__        }_        return new KeyValueHolder<Object, Dictionary>(service, prop)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;key,value,holder,object,dictionary,as,service,object,service,string,key,string,value,properties,prop,new,properties,if,key,null,value,null,prop,put,key,value,return,new,key,value,holder,object,dictionary,service,prop
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1342458052;Return the system bundle context_@return;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context,return;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1345470544;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1352556719;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1360321077;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1360324485;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1360335319;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1360840554;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1363726640;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1364362255;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1364651477;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1368004799;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1373187183;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1373223799;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1373448419;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1378117940;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1379386731;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1381253992;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1385476973;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1405374721;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1431242312;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1437396697;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1437396697;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1437396697;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1437396697;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1437396697;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1437396698;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1437396698;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1442412776;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1449942375;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1449947902;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1456295809;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1456298245;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1456320648;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1456327396;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1458209138;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1461352384;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1461352968;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1486057633;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1498733069;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1498733823;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1524063209;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1528210046;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected BundleContext getBundleContext();1544618083;Return the system bundle context;protected BundleContext getBundleContext() {_        return bundleContext__    };return,the,system,bundle,context;protected,bundle,context,get,bundle,context,return,bundle,context
CamelBlueprintTestSupport -> protected boolean includeTestBundle();1381253992;Override this method if you don't want CamelBlueprintTestSupport create the test bundle_@return includeTestBundle_If the return value is true CamelBlueprintTestSupport creates the test bundle which includes blueprint configuration files_If the return value is false CamelBlueprintTestSupport won't create the test bundle;protected boolean includeTestBundle() {_        return true__    };override,this,method,if,you,don,t,want,camel,blueprint,test,support,create,the,test,bundle,return,include,test,bundle,if,the,return,value,is,true,camel,blueprint,test,support,creates,the,test,bundle,which,includes,blueprint,configuration,files,if,the,return,value,is,false,camel,blueprint,test,support,won,t,create,the,test,bundle;protected,boolean,include,test,bundle,return,true
CamelBlueprintTestSupport -> protected boolean includeTestBundle();1385476973;Override this method if you don't want CamelBlueprintTestSupport create the test bundle_@return includeTestBundle_If the return value is true CamelBlueprintTestSupport creates the test bundle which includes blueprint configuration files_If the return value is false CamelBlueprintTestSupport won't create the test bundle;protected boolean includeTestBundle() {_        return true__    };override,this,method,if,you,don,t,want,camel,blueprint,test,support,create,the,test,bundle,return,include,test,bundle,if,the,return,value,is,true,camel,blueprint,test,support,creates,the,test,bundle,which,includes,blueprint,configuration,files,if,the,return,value,is,false,camel,blueprint,test,support,won,t,create,the,test,bundle;protected,boolean,include,test,bundle,return,true
CamelBlueprintTestSupport -> protected boolean includeTestBundle();1405374721;Override this method if you don't want CamelBlueprintTestSupport create the test bundle_@return includeTestBundle_If the return value is true CamelBlueprintTestSupport creates the test bundle which includes blueprint configuration files_If the return value is false CamelBlueprintTestSupport won't create the test bundle;protected boolean includeTestBundle() {_        return true__    };override,this,method,if,you,don,t,want,camel,blueprint,test,support,create,the,test,bundle,return,include,test,bundle,if,the,return,value,is,true,camel,blueprint,test,support,creates,the,test,bundle,which,includes,blueprint,configuration,files,if,the,return,value,is,false,camel,blueprint,test,support,won,t,create,the,test,bundle;protected,boolean,include,test,bundle,return,true
CamelBlueprintTestSupport -> protected boolean includeTestBundle();1431242312;Override this method if you don't want CamelBlueprintTestSupport create the test bundle_@return includeTestBundle_If the return value is true CamelBlueprintTestSupport creates the test bundle which includes blueprint configuration files_If the return value is false CamelBlueprintTestSupport won't create the test bundle;protected boolean includeTestBundle() {_        return true__    };override,this,method,if,you,don,t,want,camel,blueprint,test,support,create,the,test,bundle,return,include,test,bundle,if,the,return,value,is,true,camel,blueprint,test,support,creates,the,test,bundle,which,includes,blueprint,configuration,files,if,the,return,value,is,false,camel,blueprint,test,support,won,t,create,the,test,bundle;protected,boolean,include,test,bundle,return,true
CamelBlueprintTestSupport -> protected boolean includeTestBundle();1437396697;Override this method if you don't want CamelBlueprintTestSupport create the test bundle_@return includeTestBundle_If the return value is true CamelBlueprintTestSupport creates the test bundle which includes blueprint configuration files_If the return value is false CamelBlueprintTestSupport won't create the test bundle;protected boolean includeTestBundle() {_        return true__    };override,this,method,if,you,don,t,want,camel,blueprint,test,support,create,the,test,bundle,return,include,test,bundle,if,the,return,value,is,true,camel,blueprint,test,support,creates,the,test,bundle,which,includes,blueprint,configuration,files,if,the,return,value,is,false,camel,blueprint,test,support,won,t,create,the,test,bundle;protected,boolean,include,test,bundle,return,true
CamelBlueprintTestSupport -> protected boolean includeTestBundle();1437396697;Override this method if you don't want CamelBlueprintTestSupport create the test bundle_@return includeTestBundle_If the return value is true CamelBlueprintTestSupport creates the test bundle which includes blueprint configuration files_If the return value is false CamelBlueprintTestSupport won't create the test bundle;protected boolean includeTestBundle() {_        return true__    };override,this,method,if,you,don,t,want,camel,blueprint,test,support,create,the,test,bundle,return,include,test,bundle,if,the,return,value,is,true,camel,blueprint,test,support,creates,the,test,bundle,which,includes,blueprint,configuration,files,if,the,return,value,is,false,camel,blueprint,test,support,won,t,create,the,test,bundle;protected,boolean,include,test,bundle,return,true
CamelBlueprintTestSupport -> protected boolean includeTestBundle();1437396697;Override this method if you don't want CamelBlueprintTestSupport create the test bundle_@return includeTestBundle_If the return value is true CamelBlueprintTestSupport creates the test bundle which includes blueprint configuration files_If the return value is false CamelBlueprintTestSupport won't create the test bundle;protected boolean includeTestBundle() {_        return true__    };override,this,method,if,you,don,t,want,camel,blueprint,test,support,create,the,test,bundle,return,include,test,bundle,if,the,return,value,is,true,camel,blueprint,test,support,creates,the,test,bundle,which,includes,blueprint,configuration,files,if,the,return,value,is,false,camel,blueprint,test,support,won,t,create,the,test,bundle;protected,boolean,include,test,bundle,return,true
CamelBlueprintTestSupport -> protected boolean includeTestBundle();1437396697;Override this method if you don't want CamelBlueprintTestSupport create the test bundle_@return includeTestBundle_If the return value is true CamelBlueprintTestSupport creates the test bundle which includes blueprint configuration files_If the return value is false CamelBlueprintTestSupport won't create the test bundle;protected boolean includeTestBundle() {_        return true__    };override,this,method,if,you,don,t,want,camel,blueprint,test,support,create,the,test,bundle,return,include,test,bundle,if,the,return,value,is,true,camel,blueprint,test,support,creates,the,test,bundle,which,includes,blueprint,configuration,files,if,the,return,value,is,false,camel,blueprint,test,support,won,t,create,the,test,bundle;protected,boolean,include,test,bundle,return,true
CamelBlueprintTestSupport -> protected boolean includeTestBundle();1437396697;Override this method if you don't want CamelBlueprintTestSupport create the test bundle_@return includeTestBundle_If the return value is true CamelBlueprintTestSupport creates the test bundle which includes blueprint configuration files_If the return value is false CamelBlueprintTestSupport won't create the test bundle;protected boolean includeTestBundle() {_        return true__    };override,this,method,if,you,don,t,want,camel,blueprint,test,support,create,the,test,bundle,return,include,test,bundle,if,the,return,value,is,true,camel,blueprint,test,support,creates,the,test,bundle,which,includes,blueprint,configuration,files,if,the,return,value,is,false,camel,blueprint,test,support,won,t,create,the,test,bundle;protected,boolean,include,test,bundle,return,true
CamelBlueprintTestSupport -> protected boolean includeTestBundle();1437396698;Override this method if you don't want CamelBlueprintTestSupport create the test bundle_@return includeTestBundle_If the return value is true CamelBlueprintTestSupport creates the test bundle which includes blueprint configuration files_If the return value is false CamelBlueprintTestSupport won't create the test bundle;protected boolean includeTestBundle() {_        return true__    };override,this,method,if,you,don,t,want,camel,blueprint,test,support,create,the,test,bundle,return,include,test,bundle,if,the,return,value,is,true,camel,blueprint,test,support,creates,the,test,bundle,which,includes,blueprint,configuration,files,if,the,return,value,is,false,camel,blueprint,test,support,won,t,create,the,test,bundle;protected,boolean,include,test,bundle,return,true
CamelBlueprintTestSupport -> protected boolean includeTestBundle();1437396698;Override this method if you don't want CamelBlueprintTestSupport create the test bundle_@return includeTestBundle_If the return value is true CamelBlueprintTestSupport creates the test bundle which includes blueprint configuration files_If the return value is false CamelBlueprintTestSupport won't create the test bundle;protected boolean includeTestBundle() {_        return true__    };override,this,method,if,you,don,t,want,camel,blueprint,test,support,create,the,test,bundle,return,include,test,bundle,if,the,return,value,is,true,camel,blueprint,test,support,creates,the,test,bundle,which,includes,blueprint,configuration,files,if,the,return,value,is,false,camel,blueprint,test,support,won,t,create,the,test,bundle;protected,boolean,include,test,bundle,return,true
CamelBlueprintTestSupport -> protected boolean includeTestBundle();1442412776;Override this method if you don't want CamelBlueprintTestSupport create the test bundle_@return includeTestBundle_If the return value is true CamelBlueprintTestSupport creates the test bundle which includes blueprint configuration files_If the return value is false CamelBlueprintTestSupport won't create the test bundle;protected boolean includeTestBundle() {_        return true__    };override,this,method,if,you,don,t,want,camel,blueprint,test,support,create,the,test,bundle,return,include,test,bundle,if,the,return,value,is,true,camel,blueprint,test,support,creates,the,test,bundle,which,includes,blueprint,configuration,files,if,the,return,value,is,false,camel,blueprint,test,support,won,t,create,the,test,bundle;protected,boolean,include,test,bundle,return,true
CamelBlueprintTestSupport -> protected boolean includeTestBundle();1449942375;Override this method if you don't want CamelBlueprintTestSupport create the test bundle_@return includeTestBundle_If the return value is true CamelBlueprintTestSupport creates the test bundle which includes blueprint configuration files_If the return value is false CamelBlueprintTestSupport won't create the test bundle;protected boolean includeTestBundle() {_        return true__    };override,this,method,if,you,don,t,want,camel,blueprint,test,support,create,the,test,bundle,return,include,test,bundle,if,the,return,value,is,true,camel,blueprint,test,support,creates,the,test,bundle,which,includes,blueprint,configuration,files,if,the,return,value,is,false,camel,blueprint,test,support,won,t,create,the,test,bundle;protected,boolean,include,test,bundle,return,true
CamelBlueprintTestSupport -> protected boolean includeTestBundle();1449947902;Override this method if you don't want CamelBlueprintTestSupport create the test bundle_@return includeTestBundle_If the return value is true CamelBlueprintTestSupport creates the test bundle which includes blueprint configuration files_If the return value is false CamelBlueprintTestSupport won't create the test bundle;protected boolean includeTestBundle() {_        return true__    };override,this,method,if,you,don,t,want,camel,blueprint,test,support,create,the,test,bundle,return,include,test,bundle,if,the,return,value,is,true,camel,blueprint,test,support,creates,the,test,bundle,which,includes,blueprint,configuration,files,if,the,return,value,is,false,camel,blueprint,test,support,won,t,create,the,test,bundle;protected,boolean,include,test,bundle,return,true
CamelBlueprintTestSupport -> protected boolean includeTestBundle();1456295809;Override this method if you don't want CamelBlueprintTestSupport create the test bundle_@return includeTestBundle_If the return value is true CamelBlueprintTestSupport creates the test bundle which includes blueprint configuration files_If the return value is false CamelBlueprintTestSupport won't create the test bundle;protected boolean includeTestBundle() {_        return true__    };override,this,method,if,you,don,t,want,camel,blueprint,test,support,create,the,test,bundle,return,include,test,bundle,if,the,return,value,is,true,camel,blueprint,test,support,creates,the,test,bundle,which,includes,blueprint,configuration,files,if,the,return,value,is,false,camel,blueprint,test,support,won,t,create,the,test,bundle;protected,boolean,include,test,bundle,return,true
CamelBlueprintTestSupport -> protected boolean includeTestBundle();1456298245;Override this method if you don't want CamelBlueprintTestSupport create the test bundle_@return includeTestBundle_If the return value is true CamelBlueprintTestSupport creates the test bundle which includes blueprint configuration files_If the return value is false CamelBlueprintTestSupport won't create the test bundle;protected boolean includeTestBundle() {_        return true__    };override,this,method,if,you,don,t,want,camel,blueprint,test,support,create,the,test,bundle,return,include,test,bundle,if,the,return,value,is,true,camel,blueprint,test,support,creates,the,test,bundle,which,includes,blueprint,configuration,files,if,the,return,value,is,false,camel,blueprint,test,support,won,t,create,the,test,bundle;protected,boolean,include,test,bundle,return,true
CamelBlueprintTestSupport -> protected boolean includeTestBundle();1456320648;Override this method if you don't want CamelBlueprintTestSupport create the test bundle_@return includeTestBundle_If the return value is true CamelBlueprintTestSupport creates the test bundle which includes blueprint configuration files_If the return value is false CamelBlueprintTestSupport won't create the test bundle;protected boolean includeTestBundle() {_        return true__    };override,this,method,if,you,don,t,want,camel,blueprint,test,support,create,the,test,bundle,return,include,test,bundle,if,the,return,value,is,true,camel,blueprint,test,support,creates,the,test,bundle,which,includes,blueprint,configuration,files,if,the,return,value,is,false,camel,blueprint,test,support,won,t,create,the,test,bundle;protected,boolean,include,test,bundle,return,true
CamelBlueprintTestSupport -> protected boolean includeTestBundle();1456327396;Override this method if you don't want CamelBlueprintTestSupport create the test bundle_@return includeTestBundle_If the return value is true CamelBlueprintTestSupport creates the test bundle which includes blueprint configuration files_If the return value is false CamelBlueprintTestSupport won't create the test bundle;protected boolean includeTestBundle() {_        return true__    };override,this,method,if,you,don,t,want,camel,blueprint,test,support,create,the,test,bundle,return,include,test,bundle,if,the,return,value,is,true,camel,blueprint,test,support,creates,the,test,bundle,which,includes,blueprint,configuration,files,if,the,return,value,is,false,camel,blueprint,test,support,won,t,create,the,test,bundle;protected,boolean,include,test,bundle,return,true
CamelBlueprintTestSupport -> protected boolean includeTestBundle();1458209138;Override this method if you don't want CamelBlueprintTestSupport create the test bundle_@return includeTestBundle_If the return value is true CamelBlueprintTestSupport creates the test bundle which includes blueprint configuration files_If the return value is false CamelBlueprintTestSupport won't create the test bundle;protected boolean includeTestBundle() {_        return true__    };override,this,method,if,you,don,t,want,camel,blueprint,test,support,create,the,test,bundle,return,include,test,bundle,if,the,return,value,is,true,camel,blueprint,test,support,creates,the,test,bundle,which,includes,blueprint,configuration,files,if,the,return,value,is,false,camel,blueprint,test,support,won,t,create,the,test,bundle;protected,boolean,include,test,bundle,return,true
CamelBlueprintTestSupport -> protected boolean includeTestBundle();1461352384;Override this method if you don't want CamelBlueprintTestSupport create the test bundle_@return includeTestBundle_If the return value is true CamelBlueprintTestSupport creates the test bundle which includes blueprint configuration files_If the return value is false CamelBlueprintTestSupport won't create the test bundle;protected boolean includeTestBundle() {_        return true__    };override,this,method,if,you,don,t,want,camel,blueprint,test,support,create,the,test,bundle,return,include,test,bundle,if,the,return,value,is,true,camel,blueprint,test,support,creates,the,test,bundle,which,includes,blueprint,configuration,files,if,the,return,value,is,false,camel,blueprint,test,support,won,t,create,the,test,bundle;protected,boolean,include,test,bundle,return,true
CamelBlueprintTestSupport -> protected boolean includeTestBundle();1461352968;Override this method if you don't want CamelBlueprintTestSupport create the test bundle_@return includeTestBundle_If the return value is true CamelBlueprintTestSupport creates the test bundle which includes blueprint configuration files_If the return value is false CamelBlueprintTestSupport won't create the test bundle;protected boolean includeTestBundle() {_        return true__    };override,this,method,if,you,don,t,want,camel,blueprint,test,support,create,the,test,bundle,return,include,test,bundle,if,the,return,value,is,true,camel,blueprint,test,support,creates,the,test,bundle,which,includes,blueprint,configuration,files,if,the,return,value,is,false,camel,blueprint,test,support,won,t,create,the,test,bundle;protected,boolean,include,test,bundle,return,true
CamelBlueprintTestSupport -> protected boolean includeTestBundle();1486057633;Override this method if you don't want CamelBlueprintTestSupport create the test bundle_@return includeTestBundle_If the return value is true CamelBlueprintTestSupport creates the test bundle which includes blueprint configuration files_If the return value is false CamelBlueprintTestSupport won't create the test bundle;protected boolean includeTestBundle() {_        return true__    };override,this,method,if,you,don,t,want,camel,blueprint,test,support,create,the,test,bundle,return,include,test,bundle,if,the,return,value,is,true,camel,blueprint,test,support,creates,the,test,bundle,which,includes,blueprint,configuration,files,if,the,return,value,is,false,camel,blueprint,test,support,won,t,create,the,test,bundle;protected,boolean,include,test,bundle,return,true
CamelBlueprintTestSupport -> protected boolean includeTestBundle();1498733069;Override this method if you don't want CamelBlueprintTestSupport create the test bundle_@return includeTestBundle_If the return value is true CamelBlueprintTestSupport creates the test bundle which includes blueprint configuration files_If the return value is false CamelBlueprintTestSupport won't create the test bundle;protected boolean includeTestBundle() {_        return true__    };override,this,method,if,you,don,t,want,camel,blueprint,test,support,create,the,test,bundle,return,include,test,bundle,if,the,return,value,is,true,camel,blueprint,test,support,creates,the,test,bundle,which,includes,blueprint,configuration,files,if,the,return,value,is,false,camel,blueprint,test,support,won,t,create,the,test,bundle;protected,boolean,include,test,bundle,return,true
CamelBlueprintTestSupport -> protected boolean includeTestBundle();1498733823;Override this method if you don't want CamelBlueprintTestSupport create the test bundle_@return includeTestBundle_If the return value is true CamelBlueprintTestSupport creates the test bundle which includes blueprint configuration files_If the return value is false CamelBlueprintTestSupport won't create the test bundle;protected boolean includeTestBundle() {_        return true__    };override,this,method,if,you,don,t,want,camel,blueprint,test,support,create,the,test,bundle,return,include,test,bundle,if,the,return,value,is,true,camel,blueprint,test,support,creates,the,test,bundle,which,includes,blueprint,configuration,files,if,the,return,value,is,false,camel,blueprint,test,support,won,t,create,the,test,bundle;protected,boolean,include,test,bundle,return,true
CamelBlueprintTestSupport -> protected boolean includeTestBundle();1524063209;Override this method if you don't want CamelBlueprintTestSupport create the test bundle_@return includeTestBundle_If the return value is true CamelBlueprintTestSupport creates the test bundle which includes blueprint configuration files_If the return value is false CamelBlueprintTestSupport won't create the test bundle;protected boolean includeTestBundle() {_        return true__    };override,this,method,if,you,don,t,want,camel,blueprint,test,support,create,the,test,bundle,return,include,test,bundle,if,the,return,value,is,true,camel,blueprint,test,support,creates,the,test,bundle,which,includes,blueprint,configuration,files,if,the,return,value,is,false,camel,blueprint,test,support,won,t,create,the,test,bundle;protected,boolean,include,test,bundle,return,true
CamelBlueprintTestSupport -> protected boolean includeTestBundle();1528210046;Override this method if you don't want CamelBlueprintTestSupport create the test bundle_@return includeTestBundle_If the return value is true CamelBlueprintTestSupport creates the test bundle which includes blueprint configuration files_If the return value is false CamelBlueprintTestSupport won't create the test bundle;protected boolean includeTestBundle() {_        return true__    };override,this,method,if,you,don,t,want,camel,blueprint,test,support,create,the,test,bundle,return,include,test,bundle,if,the,return,value,is,true,camel,blueprint,test,support,creates,the,test,bundle,which,includes,blueprint,configuration,files,if,the,return,value,is,false,camel,blueprint,test,support,won,t,create,the,test,bundle;protected,boolean,include,test,bundle,return,true
CamelBlueprintTestSupport -> protected boolean includeTestBundle();1544618083;Override this method if you don't want CamelBlueprintTestSupport create the test bundle_@return includeTestBundle_If the return value is true CamelBlueprintTestSupport creates the test bundle which includes blueprint configuration files_If the return value is false CamelBlueprintTestSupport won't create the test bundle;protected boolean includeTestBundle() {_        return true__    };override,this,method,if,you,don,t,want,camel,blueprint,test,support,create,the,test,bundle,return,include,test,bundle,if,the,return,value,is,true,camel,blueprint,test,support,creates,the,test,bundle,which,includes,blueprint,configuration,files,if,the,return,value,is,false,camel,blueprint,test,support,won,t,create,the,test,bundle;protected,boolean,include,test,bundle,return,true
CamelBlueprintTestSupport -> protected Collection<URL> getBlueprintDescriptors() throws FileNotFoundException;1327327884;Gets the bundle descriptors as {@link URL} resources._<p/>_It is preferred to override the {@link #getBlueprintDescriptor()} method, and return the_location as a String, which is easier to deal with than a {@link Collection} type.__@return the bundle descriptors._@throws FileNotFoundException is thrown if a bundle descriptor cannot be found;protected Collection<URL> getBlueprintDescriptors() throws FileNotFoundException {_        List<URL> answer = new ArrayList<URL>()__        String descriptor = getBlueprintDescriptor()__        if (descriptor != null) {_            _            Iterator<Object> it = ObjectHelper.createIterator(descriptor)__            while (it.hasNext()) {_                String s = (String) it.next()__                URL url = ObjectHelper.loadResourceAsURL(s)__                if (url == null) {_                    throw new FileNotFoundException("Resource " + s + " not found in classpath")__                }_                answer.add(url)__            }_            return answer__        } else {_            throw new IllegalArgumentException("No bundle descriptor configured. Override getBlueprintDescriptor() or getBlueprintDescriptors() method")__        }_    };gets,the,bundle,descriptors,as,link,url,resources,p,it,is,preferred,to,override,the,link,get,blueprint,descriptor,method,and,return,the,location,as,a,string,which,is,easier,to,deal,with,than,a,link,collection,type,return,the,bundle,descriptors,throws,file,not,found,exception,is,thrown,if,a,bundle,descriptor,cannot,be,found;protected,collection,url,get,blueprint,descriptors,throws,file,not,found,exception,list,url,answer,new,array,list,url,string,descriptor,get,blueprint,descriptor,if,descriptor,null,iterator,object,it,object,helper,create,iterator,descriptor,while,it,has,next,string,s,string,it,next,url,url,object,helper,load,resource,as,url,s,if,url,null,throw,new,file,not,found,exception,resource,s,not,found,in,classpath,answer,add,url,return,answer,else,throw,new,illegal,argument,exception,no,bundle,descriptor,configured,override,get,blueprint,descriptor,or,get,blueprint,descriptors,method
CamelBlueprintTestSupport -> protected Collection<URL> getBlueprintDescriptors() throws FileNotFoundException;1327330106;Gets the bundle descriptors as {@link URL} resources._<p/>_It is preferred to override the {@link #getBlueprintDescriptor()} method, and return the_location as a String, which is easier to deal with than a {@link Collection} type.__@return the bundle descriptors._@throws FileNotFoundException is thrown if a bundle descriptor cannot be found;protected Collection<URL> getBlueprintDescriptors() throws FileNotFoundException {_        List<URL> answer = new ArrayList<URL>()__        String descriptor = getBlueprintDescriptor()__        if (descriptor != null) {_            _            Iterator<Object> it = ObjectHelper.createIterator(descriptor)__            while (it.hasNext()) {_                String s = (String) it.next()__                URL url = ObjectHelper.loadResourceAsURL(s)__                if (url == null) {_                    throw new FileNotFoundException("Resource " + s + " not found in classpath")__                }_                answer.add(url)__            }_            return answer__        } else {_            throw new IllegalArgumentException("No bundle descriptor configured. Override getBlueprintDescriptor() or getBlueprintDescriptors() method")__        }_    };gets,the,bundle,descriptors,as,link,url,resources,p,it,is,preferred,to,override,the,link,get,blueprint,descriptor,method,and,return,the,location,as,a,string,which,is,easier,to,deal,with,than,a,link,collection,type,return,the,bundle,descriptors,throws,file,not,found,exception,is,thrown,if,a,bundle,descriptor,cannot,be,found;protected,collection,url,get,blueprint,descriptors,throws,file,not,found,exception,list,url,answer,new,array,list,url,string,descriptor,get,blueprint,descriptor,if,descriptor,null,iterator,object,it,object,helper,create,iterator,descriptor,while,it,has,next,string,s,string,it,next,url,url,object,helper,load,resource,as,url,s,if,url,null,throw,new,file,not,found,exception,resource,s,not,found,in,classpath,answer,add,url,return,answer,else,throw,new,illegal,argument,exception,no,bundle,descriptor,configured,override,get,blueprint,descriptor,or,get,blueprint,descriptors,method
CamelBlueprintTestSupport -> protected Collection<URL> getBlueprintDescriptors() throws FileNotFoundException;1327336123;Gets the bundle descriptors as {@link URL} resources._<p/>_It is preferred to override the {@link #getBlueprintDescriptor()} method, and return the_location as a String, which is easier to deal with than a {@link Collection} type.__@return the bundle descriptors._@throws FileNotFoundException is thrown if a bundle descriptor cannot be found;protected Collection<URL> getBlueprintDescriptors() throws FileNotFoundException {_        List<URL> answer = new ArrayList<URL>()__        String descriptor = getBlueprintDescriptor()__        if (descriptor != null) {_            _            Iterator<Object> it = ObjectHelper.createIterator(descriptor)__            while (it.hasNext()) {_                String s = (String) it.next()__                _                s = FileUtil.stripLeadingSeparator(s)__                URL url = ObjectHelper.loadResourceAsURL(s)__                if (url == null) {_                    throw new FileNotFoundException("Resource " + s + " not found in classpath")__                }_                answer.add(url)__            }_            return answer__        } else {_            throw new IllegalArgumentException("No bundle descriptor configured. Override getBlueprintDescriptor() or getBlueprintDescriptors() method")__        }_    };gets,the,bundle,descriptors,as,link,url,resources,p,it,is,preferred,to,override,the,link,get,blueprint,descriptor,method,and,return,the,location,as,a,string,which,is,easier,to,deal,with,than,a,link,collection,type,return,the,bundle,descriptors,throws,file,not,found,exception,is,thrown,if,a,bundle,descriptor,cannot,be,found;protected,collection,url,get,blueprint,descriptors,throws,file,not,found,exception,list,url,answer,new,array,list,url,string,descriptor,get,blueprint,descriptor,if,descriptor,null,iterator,object,it,object,helper,create,iterator,descriptor,while,it,has,next,string,s,string,it,next,s,file,util,strip,leading,separator,s,url,url,object,helper,load,resource,as,url,s,if,url,null,throw,new,file,not,found,exception,resource,s,not,found,in,classpath,answer,add,url,return,answer,else,throw,new,illegal,argument,exception,no,bundle,descriptor,configured,override,get,blueprint,descriptor,or,get,blueprint,descriptors,method
CamelBlueprintTestSupport -> protected Collection<URL> getBlueprintDescriptors() throws FileNotFoundException;1327349321;Gets the bundle descriptors as {@link URL} resources._<p/>_It is preferred to override the {@link #getBlueprintDescriptor()} method, and return the_location as a String, which is easier to deal with than a {@link Collection} type.__@return the bundle descriptors._@throws FileNotFoundException is thrown if a bundle descriptor cannot be found;protected Collection<URL> getBlueprintDescriptors() throws FileNotFoundException {_        List<URL> answer = new ArrayList<URL>()__        String descriptor = getBlueprintDescriptor()__        if (descriptor != null) {_            _            Iterator<Object> it = ObjectHelper.createIterator(descriptor)__            while (it.hasNext()) {_                String s = (String) it.next()__                _                s = FileUtil.stripLeadingSeparator(s)__                URL url = ObjectHelper.loadResourceAsURL(s)__                if (url == null) {_                    throw new FileNotFoundException("Resource " + s + " not found in classpath")__                }_                answer.add(url)__            }_            return answer__        } else {_            throw new IllegalArgumentException("No bundle descriptor configured. Override getBlueprintDescriptor() or getBlueprintDescriptors() method")__        }_    };gets,the,bundle,descriptors,as,link,url,resources,p,it,is,preferred,to,override,the,link,get,blueprint,descriptor,method,and,return,the,location,as,a,string,which,is,easier,to,deal,with,than,a,link,collection,type,return,the,bundle,descriptors,throws,file,not,found,exception,is,thrown,if,a,bundle,descriptor,cannot,be,found;protected,collection,url,get,blueprint,descriptors,throws,file,not,found,exception,list,url,answer,new,array,list,url,string,descriptor,get,blueprint,descriptor,if,descriptor,null,iterator,object,it,object,helper,create,iterator,descriptor,while,it,has,next,string,s,string,it,next,s,file,util,strip,leading,separator,s,url,url,object,helper,load,resource,as,url,s,if,url,null,throw,new,file,not,found,exception,resource,s,not,found,in,classpath,answer,add,url,return,answer,else,throw,new,illegal,argument,exception,no,bundle,descriptor,configured,override,get,blueprint,descriptor,or,get,blueprint,descriptors,method
CamelBlueprintTestSupport -> protected Collection<URL> getBlueprintDescriptors() throws FileNotFoundException;1327416359;Gets the bundle descriptors as {@link URL} resources._<p/>_It is preferred to override the {@link #getBlueprintDescriptor()} method, and return the_location as a String, which is easier to deal with than a {@link Collection} type.__@return the bundle descriptors._@throws FileNotFoundException is thrown if a bundle descriptor cannot be found;protected Collection<URL> getBlueprintDescriptors() throws FileNotFoundException {_        List<URL> answer = new ArrayList<URL>()__        String descriptor = getBlueprintDescriptor()__        if (descriptor != null) {_            _            Iterator<Object> it = ObjectHelper.createIterator(descriptor)__            while (it.hasNext()) {_                String s = (String) it.next()__                _                s = FileUtil.stripLeadingSeparator(s)__                URL url = ObjectHelper.loadResourceAsURL(s)__                if (url == null) {_                    throw new FileNotFoundException("Resource " + s + " not found in classpath")__                }_                answer.add(url)__            }_            return answer__        } else {_            throw new IllegalArgumentException("No bundle descriptor configured. Override getBlueprintDescriptor() or getBlueprintDescriptors() method")__        }_    };gets,the,bundle,descriptors,as,link,url,resources,p,it,is,preferred,to,override,the,link,get,blueprint,descriptor,method,and,return,the,location,as,a,string,which,is,easier,to,deal,with,than,a,link,collection,type,return,the,bundle,descriptors,throws,file,not,found,exception,is,thrown,if,a,bundle,descriptor,cannot,be,found;protected,collection,url,get,blueprint,descriptors,throws,file,not,found,exception,list,url,answer,new,array,list,url,string,descriptor,get,blueprint,descriptor,if,descriptor,null,iterator,object,it,object,helper,create,iterator,descriptor,while,it,has,next,string,s,string,it,next,s,file,util,strip,leading,separator,s,url,url,object,helper,load,resource,as,url,s,if,url,null,throw,new,file,not,found,exception,resource,s,not,found,in,classpath,answer,add,url,return,answer,else,throw,new,illegal,argument,exception,no,bundle,descriptor,configured,override,get,blueprint,descriptor,or,get,blueprint,descriptors,method
CamelBlueprintTestSupport -> protected Collection<URL> getBlueprintDescriptors() throws FileNotFoundException;1329920108;Gets the bundle descriptors as {@link URL} resources._<p/>_It is preferred to override the {@link #getBlueprintDescriptor()} method, and return the_location as a String, which is easier to deal with than a {@link Collection} type.__@return the bundle descriptors._@throws FileNotFoundException is thrown if a bundle descriptor cannot be found;protected Collection<URL> getBlueprintDescriptors() throws FileNotFoundException {_        List<URL> answer = new ArrayList<URL>()__        String descriptor = getBlueprintDescriptor()__        if (descriptor != null) {_            _            Iterator<Object> it = ObjectHelper.createIterator(descriptor)__            while (it.hasNext()) {_                String s = (String) it.next()__                _                s = FileUtil.stripLeadingSeparator(s)__                URL url = ObjectHelper.loadResourceAsURL(s)__                if (url == null) {_                    throw new FileNotFoundException("Resource " + s + " not found in classpath")__                }_                answer.add(url)__            }_            return answer__        } else {_            throw new IllegalArgumentException("No bundle descriptor configured. Override getBlueprintDescriptor() or getBlueprintDescriptors() method")__        }_    };gets,the,bundle,descriptors,as,link,url,resources,p,it,is,preferred,to,override,the,link,get,blueprint,descriptor,method,and,return,the,location,as,a,string,which,is,easier,to,deal,with,than,a,link,collection,type,return,the,bundle,descriptors,throws,file,not,found,exception,is,thrown,if,a,bundle,descriptor,cannot,be,found;protected,collection,url,get,blueprint,descriptors,throws,file,not,found,exception,list,url,answer,new,array,list,url,string,descriptor,get,blueprint,descriptor,if,descriptor,null,iterator,object,it,object,helper,create,iterator,descriptor,while,it,has,next,string,s,string,it,next,s,file,util,strip,leading,separator,s,url,url,object,helper,load,resource,as,url,s,if,url,null,throw,new,file,not,found,exception,resource,s,not,found,in,classpath,answer,add,url,return,answer,else,throw,new,illegal,argument,exception,no,bundle,descriptor,configured,override,get,blueprint,descriptor,or,get,blueprint,descriptors,method
CamelBlueprintTestSupport -> protected Collection<URL> getBlueprintDescriptors() throws FileNotFoundException;1334006191;Gets the bundle descriptors as {@link URL} resources._<p/>_It is preferred to override the {@link #getBlueprintDescriptor()} method, and return the_location as a String, which is easier to deal with than a {@link Collection} type.__@return the bundle descriptors._@throws FileNotFoundException is thrown if a bundle descriptor cannot be found;protected Collection<URL> getBlueprintDescriptors() throws FileNotFoundException {_        List<URL> answer = new ArrayList<URL>()__        String descriptor = getBlueprintDescriptor()__        if (descriptor != null) {_            _            Iterator<Object> it = ObjectHelper.createIterator(descriptor)__            while (it.hasNext()) {_                String s = (String) it.next()__                _                s = FileUtil.stripLeadingSeparator(s)__                URL url = ObjectHelper.loadResourceAsURL(s)__                if (url == null) {_                    throw new FileNotFoundException("Resource " + s + " not found in classpath")__                }_                answer.add(url)__            }_            return answer__        } else {_            throw new IllegalArgumentException("No bundle descriptor configured. Override getBlueprintDescriptor() or getBlueprintDescriptors() method")__        }_    };gets,the,bundle,descriptors,as,link,url,resources,p,it,is,preferred,to,override,the,link,get,blueprint,descriptor,method,and,return,the,location,as,a,string,which,is,easier,to,deal,with,than,a,link,collection,type,return,the,bundle,descriptors,throws,file,not,found,exception,is,thrown,if,a,bundle,descriptor,cannot,be,found;protected,collection,url,get,blueprint,descriptors,throws,file,not,found,exception,list,url,answer,new,array,list,url,string,descriptor,get,blueprint,descriptor,if,descriptor,null,iterator,object,it,object,helper,create,iterator,descriptor,while,it,has,next,string,s,string,it,next,s,file,util,strip,leading,separator,s,url,url,object,helper,load,resource,as,url,s,if,url,null,throw,new,file,not,found,exception,resource,s,not,found,in,classpath,answer,add,url,return,answer,else,throw,new,illegal,argument,exception,no,bundle,descriptor,configured,override,get,blueprint,descriptor,or,get,blueprint,descriptors,method
CamelBlueprintTestSupport -> protected String getBundleVersion();1335625139;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1337953843;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1339246630;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1340111803;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1342458052;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1345470544;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1352556719;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1360321077;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1360324485;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1360335319;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1360840554;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1363726640;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1364362255;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1364651477;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1368004799;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1373187183;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1373223799;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1373448419;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1378117940;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1379386731;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1381253992;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1385476973;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1405374721;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1431242312;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1437396697;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1437396697;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1437396697;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1437396697;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1437396697;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1437396698;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1437396698;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1442412776;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1449942375;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1449947902;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1456295809;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1456298245;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1456320648;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1456327396;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1458209138;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1461352384;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1461352968;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1486057633;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1498733069;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1498733823;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1524063209;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1528210046;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleVersion();1544618083;Gets test bundle version._Modify this method if you wish to change default behavior.__@return test bundle version;protected String getBundleVersion() {_        return CamelBlueprintHelper.BUNDLE_VERSION__    };gets,test,bundle,version,modify,this,method,if,you,wish,to,change,default,behavior,return,test,bundle,version;protected,string,get,bundle,version,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleDirectives();1352556719;Gets the bundle directives._Modify this method if you wish to add some directives._@return;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,modify,this,method,if,you,wish,to,add,some,directives,return;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1360321077;Gets the bundle directives._Modify this method if you wish to add some directives._@return;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,modify,this,method,if,you,wish,to,add,some,directives,return;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1360324485;Gets the bundle directives._Modify this method if you wish to add some directives._@return;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,modify,this,method,if,you,wish,to,add,some,directives,return;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1360335319;Gets the bundle directives._Modify this method if you wish to add some directives._@return;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,modify,this,method,if,you,wish,to,add,some,directives,return;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1360840554;Gets the bundle directives._Modify this method if you wish to add some directives._@return;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,modify,this,method,if,you,wish,to,add,some,directives,return;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1363726640;Gets the bundle directives._Modify this method if you wish to add some directives._@return;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,modify,this,method,if,you,wish,to,add,some,directives,return;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1364362255;Gets the bundle directives._Modify this method if you wish to add some directives._@return;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,modify,this,method,if,you,wish,to,add,some,directives,return;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1364651477;Gets the bundle directives._Modify this method if you wish to add some directives._@return;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,modify,this,method,if,you,wish,to,add,some,directives,return;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1368004799;Gets the bundle directives._Modify this method if you wish to add some directives._@return;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,modify,this,method,if,you,wish,to,add,some,directives,return;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1373187183;Gets the bundle directives._Modify this method if you wish to add some directives._@return;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,modify,this,method,if,you,wish,to,add,some,directives,return;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1373223799;Gets the bundle directives._Modify this method if you wish to add some directives._@return;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,modify,this,method,if,you,wish,to,add,some,directives,return;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1373448419;Gets the bundle directives._<p/>_Modify this method if you wish to add some directives.;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,p,modify,this,method,if,you,wish,to,add,some,directives;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1378117940;Gets the bundle directives._<p/>_Modify this method if you wish to add some directives.;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,p,modify,this,method,if,you,wish,to,add,some,directives;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1379386731;Gets the bundle directives._<p/>_Modify this method if you wish to add some directives.;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,p,modify,this,method,if,you,wish,to,add,some,directives;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1381253992;Gets the bundle directives._<p/>_Modify this method if you wish to add some directives.;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,p,modify,this,method,if,you,wish,to,add,some,directives;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1385476973;Gets the bundle directives._<p/>_Modify this method if you wish to add some directives.;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,p,modify,this,method,if,you,wish,to,add,some,directives;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1405374721;Gets the bundle directives._<p/>_Modify this method if you wish to add some directives.;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,p,modify,this,method,if,you,wish,to,add,some,directives;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1431242312;Gets the bundle directives._<p/>_Modify this method if you wish to add some directives.;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,p,modify,this,method,if,you,wish,to,add,some,directives;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1437396697;Gets the bundle directives._<p/>_Modify this method if you wish to add some directives.;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,p,modify,this,method,if,you,wish,to,add,some,directives;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1437396697;Gets the bundle directives._<p/>_Modify this method if you wish to add some directives.;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,p,modify,this,method,if,you,wish,to,add,some,directives;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1437396697;Gets the bundle directives._<p/>_Modify this method if you wish to add some directives.;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,p,modify,this,method,if,you,wish,to,add,some,directives;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1437396697;Gets the bundle directives._<p/>_Modify this method if you wish to add some directives.;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,p,modify,this,method,if,you,wish,to,add,some,directives;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1437396697;Gets the bundle directives._<p/>_Modify this method if you wish to add some directives.;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,p,modify,this,method,if,you,wish,to,add,some,directives;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1437396698;Gets the bundle directives._<p/>_Modify this method if you wish to add some directives.;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,p,modify,this,method,if,you,wish,to,add,some,directives;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1437396698;Gets the bundle directives._<p/>_Modify this method if you wish to add some directives.;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,p,modify,this,method,if,you,wish,to,add,some,directives;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1442412776;Gets the bundle directives._<p/>_Modify this method if you wish to add some directives.;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,p,modify,this,method,if,you,wish,to,add,some,directives;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1449942375;Gets the bundle directives._<p/>_Modify this method if you wish to add some directives.;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,p,modify,this,method,if,you,wish,to,add,some,directives;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1449947902;Gets the bundle directives._<p/>_Modify this method if you wish to add some directives.;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,p,modify,this,method,if,you,wish,to,add,some,directives;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1456295809;Gets the bundle directives._<p/>_Modify this method if you wish to add some directives.;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,p,modify,this,method,if,you,wish,to,add,some,directives;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1456298245;Gets the bundle directives._<p/>_Modify this method if you wish to add some directives.;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,p,modify,this,method,if,you,wish,to,add,some,directives;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1456320648;Gets the bundle directives._<p/>_Modify this method if you wish to add some directives.;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,p,modify,this,method,if,you,wish,to,add,some,directives;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1456327396;Gets the bundle directives._<p/>_Modify this method if you wish to add some directives.;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,p,modify,this,method,if,you,wish,to,add,some,directives;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1458209138;Gets the bundle directives._<p/>_Modify this method if you wish to add some directives.;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,p,modify,this,method,if,you,wish,to,add,some,directives;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1461352384;Gets the bundle directives._<p/>_Modify this method if you wish to add some directives.;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,p,modify,this,method,if,you,wish,to,add,some,directives;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1461352968;Gets the bundle directives._<p/>_Modify this method if you wish to add some directives.;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,p,modify,this,method,if,you,wish,to,add,some,directives;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1486057633;Gets the bundle directives._<p/>_Modify this method if you wish to add some directives.;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,p,modify,this,method,if,you,wish,to,add,some,directives;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1498733069;Gets the bundle directives._<p/>_Modify this method if you wish to add some directives.;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,p,modify,this,method,if,you,wish,to,add,some,directives;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1498733823;Gets the bundle directives._<p/>_Modify this method if you wish to add some directives.;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,p,modify,this,method,if,you,wish,to,add,some,directives;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1524063209;Gets the bundle directives._<p/>_Modify this method if you wish to add some directives.;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,p,modify,this,method,if,you,wish,to,add,some,directives;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1528210046;Gets the bundle directives._<p/>_Modify this method if you wish to add some directives.;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,p,modify,this,method,if,you,wish,to,add,some,directives;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String getBundleDirectives();1544618083;Gets the bundle directives._<p/>_Modify this method if you wish to add some directives.;protected String getBundleDirectives() {_        return null__    };gets,the,bundle,directives,p,modify,this,method,if,you,wish,to,add,some,directives;protected,string,get,bundle,directives,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1360324485;Override this method and provide the name of the .cfg configuration file to use for_Blueprint ConfigAdmin service.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,blueprint,config,admin,service,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1360335319;Override this method and provide the name of the .cfg configuration file to use for_Blueprint ConfigAdmin service.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,blueprint,config,admin,service,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1360840554;Override this method and provide the name of the .cfg configuration file to use for_Blueprint ConfigAdmin service.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,blueprint,config,admin,service,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1363726640;Override this method and provide the name of the .cfg configuration file to use for_Blueprint ConfigAdmin service.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,blueprint,config,admin,service,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1364362255;Override this method and provide the name of the .cfg configuration file to use for_Blueprint ConfigAdmin service.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,blueprint,config,admin,service,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1364651477;Override this method and provide the name of the .cfg configuration file to use for_Blueprint ConfigAdmin service.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,blueprint,config,admin,service,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1368004799;Override this method and provide the name of the .cfg configuration file to use for_Blueprint ConfigAdmin service.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,blueprint,config,admin,service,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1373187183;Override this method and provide the name of the .cfg configuration file to use for_Blueprint ConfigAdmin service.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,blueprint,config,admin,service,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1373223799;Override this method and provide the name of the .cfg configuration file to use for_Blueprint ConfigAdmin service.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,blueprint,config,admin,service,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1373448419;Override this method and provide the name of the .cfg configuration file to use for_Blueprint ConfigAdmin service.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,blueprint,config,admin,service,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1378117940;Override this method and provide the name of the .cfg configuration file to use for_Blueprint ConfigAdmin service.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,blueprint,config,admin,service,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1379386731;Override this method and provide the name of the .cfg configuration file to use for_Blueprint ConfigAdmin service.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,blueprint,config,admin,service,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1381253992;Override this method and provide the name of the .cfg configuration file to use for_Blueprint ConfigAdmin service.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,blueprint,config,admin,service,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1385476973;Override this method and provide the name of the .cfg configuration file to use for_Blueprint ConfigAdmin service.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,blueprint,config,admin,service,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1405374721;Override this method and provide the name of the .cfg configuration file to use for_Blueprint ConfigAdmin service.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,blueprint,config,admin,service,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1431242312;Override this method and provide the name of the .cfg configuration file to use for_Blueprint ConfigAdmin service.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,blueprint,config,admin,service,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1437396697;Override this method and provide the name of the .cfg configuration file to use for_Blueprint ConfigAdmin service.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,blueprint,config,admin,service,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1437396697;Override this method and provide the name of the .cfg configuration file to use for_Blueprint ConfigAdmin service.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,blueprint,config,admin,service,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1437396697;Override this method and provide the name of the .cfg configuration file to use for_Blueprint ConfigAdmin service.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,blueprint,config,admin,service,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1437396697;Override this method and provide the name of the .cfg configuration file to use for_Blueprint ConfigAdmin service.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,blueprint,config,admin,service,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1437396697;Override this method and provide the name of the .cfg configuration file to use for_Blueprint ConfigAdmin service.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,blueprint,config,admin,service,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1437396698;Override this method and provide the name of the .cfg configuration file to use for_Blueprint ConfigAdmin service.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,blueprint,config,admin,service,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1437396698;Override this method and provide the name of the .cfg configuration file to use for_Blueprint ConfigAdmin service.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,blueprint,config,admin,service,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1442412776;Override this method and provide the name of the .cfg configuration file to use for_Blueprint ConfigAdmin service.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,blueprint,config,admin,service,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1449942375;Override this method and provide the name of the .cfg configuration file to use for_ConfigAdmin service. Provided file will be used to initialize ConfigAdmin configuration before Blueprint_container is loaded.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,config,admin,service,provided,file,will,be,used,to,initialize,config,admin,configuration,before,blueprint,container,is,loaded,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1449947902;Override this method and provide the name of the .cfg configuration file to use for_ConfigAdmin service. Provided file will be used to initialize ConfigAdmin configuration before Blueprint_container is loaded.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,config,admin,service,provided,file,will,be,used,to,initialize,config,admin,configuration,before,blueprint,container,is,loaded,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1456295809;Override this method and provide the name of the .cfg configuration file to use for_ConfigAdmin service. Provided file will be used to initialize ConfigAdmin configuration before Blueprint_container is loaded.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,config,admin,service,provided,file,will,be,used,to,initialize,config,admin,configuration,before,blueprint,container,is,loaded,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1456298245;Override this method and provide the name of the .cfg configuration file to use for_ConfigAdmin service. Provided file will be used to initialize ConfigAdmin configuration before Blueprint_container is loaded.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,config,admin,service,provided,file,will,be,used,to,initialize,config,admin,configuration,before,blueprint,container,is,loaded,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1456320648;Override this method and provide the name of the .cfg configuration file to use for_ConfigAdmin service. Provided file will be used to initialize ConfigAdmin configuration before Blueprint_container is loaded.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,config,admin,service,provided,file,will,be,used,to,initialize,config,admin,configuration,before,blueprint,container,is,loaded,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1456327396;Override this method and provide the name of the .cfg configuration file to use for_ConfigAdmin service. Provided file will be used to initialize ConfigAdmin configuration before Blueprint_container is loaded.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,config,admin,service,provided,file,will,be,used,to,initialize,config,admin,configuration,before,blueprint,container,is,loaded,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1458209138;Override this method and provide the name of the .cfg configuration file to use for_ConfigAdmin service. Provided file will be used to initialize ConfigAdmin configuration before Blueprint_container is loaded.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,config,admin,service,provided,file,will,be,used,to,initialize,config,admin,configuration,before,blueprint,container,is,loaded,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1461352384;Override this method and provide the name of the .cfg configuration file to use for_ConfigAdmin service. Provided file will be used to initialize ConfigAdmin configuration before Blueprint_container is loaded.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,config,admin,service,provided,file,will,be,used,to,initialize,config,admin,configuration,before,blueprint,container,is,loaded,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1461352968;Override this method and provide the name of the .cfg configuration file to use for_ConfigAdmin service. Provided file will be used to initialize ConfigAdmin configuration before Blueprint_container is loaded.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,config,admin,service,provided,file,will,be,used,to,initialize,config,admin,configuration,before,blueprint,container,is,loaded,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1486057633;Override this method and provide the name of the .cfg configuration file to use for_ConfigAdmin service. Provided file will be used to initialize ConfigAdmin configuration before Blueprint_container is loaded.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,config,admin,service,provided,file,will,be,used,to,initialize,config,admin,configuration,before,blueprint,container,is,loaded,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1498733069;Override this method and provide the name of the .cfg configuration file to use for_ConfigAdmin service. Provided file will be used to initialize ConfigAdmin configuration before Blueprint_container is loaded.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,config,admin,service,provided,file,will,be,used,to,initialize,config,admin,configuration,before,blueprint,container,is,loaded,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1498733823;Override this method and provide the name of the .cfg configuration file to use for_ConfigAdmin service. Provided file will be used to initialize ConfigAdmin configuration before Blueprint_container is loaded.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,config,admin,service,provided,file,will,be,used,to,initialize,config,admin,configuration,before,blueprint,container,is,loaded,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1524063209;Override this method and provide the name of the .cfg configuration file to use for_ConfigAdmin service. Provided file will be used to initialize ConfigAdmin configuration before Blueprint_container is loaded.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,config,admin,service,provided,file,will,be,used,to,initialize,config,admin,configuration,before,blueprint,container,is,loaded,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1528210046;Override this method and provide the name of the .cfg configuration file to use for_ConfigAdmin service. Provided file will be used to initialize ConfigAdmin configuration before Blueprint_container is loaded.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,config,admin,service,provided,file,will,be,used,to,initialize,config,admin,configuration,before,blueprint,container,is,loaded,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String[] loadConfigAdminConfigurationFile();1544618083;Override this method and provide the name of the .cfg configuration file to use for_ConfigAdmin service. Provided file will be used to initialize ConfigAdmin configuration before Blueprint_container is loaded.__@return the name of the path for the .cfg file to load, and the persistence-id of the property placeholder.;protected String[] loadConfigAdminConfigurationFile() {_        return null__    };override,this,method,and,provide,the,name,of,the,cfg,configuration,file,to,use,for,config,admin,service,provided,file,will,be,used,to,initialize,config,admin,configuration,before,blueprint,container,is,loaded,return,the,name,of,the,path,for,the,cfg,file,to,load,and,the,persistence,id,of,the,property,placeholder;protected,string,load,config,admin,configuration,file,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1327327884;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/myApp.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,my,app,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1327330106;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1327336123;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1327349321;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1327416359;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1329920108;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1334006191;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1334235350;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1334243189;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1335540090;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1335625139;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1337953843;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1339246630;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1340111803;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1342458052;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1345470544;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1352556719;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1360321077;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1360324485;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1360335319;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1360840554;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1363726640;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1364362255;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1364651477;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1368004799;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1373187183;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1373223799;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1373448419;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1378117940;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1379386731;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1381253992;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1385476973;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1405374721;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1431242312;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1437396697;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1437396697;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1437396697;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1437396697;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1437396697;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1437396698;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1437396698;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1442412776;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1449942375;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1449947902;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1456295809;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1456298245;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1456320648;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1456327396;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1458209138;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1461352384;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1461352968;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1486057633;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1498733069;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1498733823;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1524063209;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1528210046;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected String getBlueprintDescriptor();1544618083;Gets the bundle descriptor from the classpath._<p/>_Return the location(s) of the bundle descriptors from the classpath._Separate multiple locations by comma, or return a single location._<p/>_For example override this method and return <tt>OSGI-INF/blueprint/camel-context.xml</tt>__@return the location of the bundle descriptor file.;protected String getBlueprintDescriptor() {_        return null__    };gets,the,bundle,descriptor,from,the,classpath,p,return,the,location,s,of,the,bundle,descriptors,from,the,classpath,separate,multiple,locations,by,comma,or,return,a,single,location,p,for,example,override,this,method,and,return,tt,osgi,inf,blueprint,camel,context,xml,tt,return,the,location,of,the,bundle,descriptor,file;protected,string,get,blueprint,descriptor,return,null
CamelBlueprintTestSupport -> protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict);1431242312;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.List)};protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict) {_        return new KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>(name, new KeyValueHolder<Object, Dictionary>(service, dict))__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,list;protected,key,value,holder,string,key,value,holder,object,dictionary,as,key,value,service,string,name,object,service,dictionary,dict,return,new,key,value,holder,string,key,value,holder,object,dictionary,name,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict);1437396697;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.List)};protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict) {_        return new KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>(name, new KeyValueHolder<Object, Dictionary>(service, dict))__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,list;protected,key,value,holder,string,key,value,holder,object,dictionary,as,key,value,service,string,name,object,service,dictionary,dict,return,new,key,value,holder,string,key,value,holder,object,dictionary,name,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict);1437396697;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.List)};protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict) {_        return new KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>(name, new KeyValueHolder<Object, Dictionary>(service, dict))__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,list;protected,key,value,holder,string,key,value,holder,object,dictionary,as,key,value,service,string,name,object,service,dictionary,dict,return,new,key,value,holder,string,key,value,holder,object,dictionary,name,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict);1437396697;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.List)};protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict) {_        return new KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>(name, new KeyValueHolder<Object, Dictionary>(service, dict))__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,list;protected,key,value,holder,string,key,value,holder,object,dictionary,as,key,value,service,string,name,object,service,dictionary,dict,return,new,key,value,holder,string,key,value,holder,object,dictionary,name,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict);1437396697;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.List)};protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict) {_        return new KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>(name, new KeyValueHolder<Object, Dictionary>(service, dict))__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,list;protected,key,value,holder,string,key,value,holder,object,dictionary,as,key,value,service,string,name,object,service,dictionary,dict,return,new,key,value,holder,string,key,value,holder,object,dictionary,name,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict);1437396697;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.List)};protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict) {_        return new KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>(name, new KeyValueHolder<Object, Dictionary>(service, dict))__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,list;protected,key,value,holder,string,key,value,holder,object,dictionary,as,key,value,service,string,name,object,service,dictionary,dict,return,new,key,value,holder,string,key,value,holder,object,dictionary,name,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict);1437396698;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.List)};protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict) {_        return new KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>(name, new KeyValueHolder<Object, Dictionary>(service, dict))__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,list;protected,key,value,holder,string,key,value,holder,object,dictionary,as,key,value,service,string,name,object,service,dictionary,dict,return,new,key,value,holder,string,key,value,holder,object,dictionary,name,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict);1437396698;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.List)};protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict) {_        return new KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>(name, new KeyValueHolder<Object, Dictionary>(service, dict))__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,list;protected,key,value,holder,string,key,value,holder,object,dictionary,as,key,value,service,string,name,object,service,dictionary,dict,return,new,key,value,holder,string,key,value,holder,object,dictionary,name,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict);1442412776;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.List)};protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict) {_        return new KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>(name, new KeyValueHolder<Object, Dictionary>(service, dict))__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,list;protected,key,value,holder,string,key,value,holder,object,dictionary,as,key,value,service,string,name,object,service,dictionary,dict,return,new,key,value,holder,string,key,value,holder,object,dictionary,name,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict);1449942375;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.List)};protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict) {_        return new KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>(name, new KeyValueHolder<Object, Dictionary>(service, dict))__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,list;protected,key,value,holder,string,key,value,holder,object,dictionary,as,key,value,service,string,name,object,service,dictionary,dict,return,new,key,value,holder,string,key,value,holder,object,dictionary,name,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict);1449947902;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.List)};protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict) {_        return new KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>(name, new KeyValueHolder<Object, Dictionary>(service, dict))__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,list;protected,key,value,holder,string,key,value,holder,object,dictionary,as,key,value,service,string,name,object,service,dictionary,dict,return,new,key,value,holder,string,key,value,holder,object,dictionary,name,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict);1456295809;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.List)};protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict) {_        return new KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>(name, new KeyValueHolder<Object, Dictionary>(service, dict))__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,list;protected,key,value,holder,string,key,value,holder,object,dictionary,as,key,value,service,string,name,object,service,dictionary,dict,return,new,key,value,holder,string,key,value,holder,object,dictionary,name,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict);1456298245;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.List)};protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict) {_        return new KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>(name, new KeyValueHolder<Object, Dictionary>(service, dict))__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,list;protected,key,value,holder,string,key,value,holder,object,dictionary,as,key,value,service,string,name,object,service,dictionary,dict,return,new,key,value,holder,string,key,value,holder,object,dictionary,name,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict);1456320648;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.List)};protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict) {_        return new KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>(name, new KeyValueHolder<Object, Dictionary>(service, dict))__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,list;protected,key,value,holder,string,key,value,holder,object,dictionary,as,key,value,service,string,name,object,service,dictionary,dict,return,new,key,value,holder,string,key,value,holder,object,dictionary,name,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict);1456327396;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.List)};protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict) {_        return new KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>(name, new KeyValueHolder<Object, Dictionary>(service, dict))__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,list;protected,key,value,holder,string,key,value,holder,object,dictionary,as,key,value,service,string,name,object,service,dictionary,dict,return,new,key,value,holder,string,key,value,holder,object,dictionary,name,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict);1458209138;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.List)};protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict) {_        return new KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>(name, new KeyValueHolder<Object, Dictionary>(service, dict))__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,list;protected,key,value,holder,string,key,value,holder,object,dictionary,as,key,value,service,string,name,object,service,dictionary,dict,return,new,key,value,holder,string,key,value,holder,object,dictionary,name,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict);1461352384;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.List)};protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict) {_        return new KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>(name, new KeyValueHolder<Object, Dictionary>(service, dict))__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,list;protected,key,value,holder,string,key,value,holder,object,dictionary,as,key,value,service,string,name,object,service,dictionary,dict,return,new,key,value,holder,string,key,value,holder,object,dictionary,name,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict);1461352968;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.List)};protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict) {_        return new KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>(name, new KeyValueHolder<Object, Dictionary>(service, dict))__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,list;protected,key,value,holder,string,key,value,holder,object,dictionary,as,key,value,service,string,name,object,service,dictionary,dict,return,new,key,value,holder,string,key,value,holder,object,dictionary,name,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict);1486057633;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.List)};protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict) {_        return new KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>(name, new KeyValueHolder<Object, Dictionary>(service, dict))__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,list;protected,key,value,holder,string,key,value,holder,object,dictionary,as,key,value,service,string,name,object,service,dictionary,dict,return,new,key,value,holder,string,key,value,holder,object,dictionary,name,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict);1498733069;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.List)};protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict) {_        return new KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>(name, new KeyValueHolder<Object, Dictionary>(service, dict))__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,list;protected,key,value,holder,string,key,value,holder,object,dictionary,as,key,value,service,string,name,object,service,dictionary,dict,return,new,key,value,holder,string,key,value,holder,object,dictionary,name,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict);1498733823;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.List)};protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict) {_        return new KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>(name, new KeyValueHolder<Object, Dictionary>(service, dict))__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,list;protected,key,value,holder,string,key,value,holder,object,dictionary,as,key,value,service,string,name,object,service,dictionary,dict,return,new,key,value,holder,string,key,value,holder,object,dictionary,name,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict);1524063209;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.List)};protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict) {_        return new KeyValueHolder<>(name, new KeyValueHolder<>(service, dict))__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,list;protected,key,value,holder,string,key,value,holder,object,dictionary,as,key,value,service,string,name,object,service,dictionary,dict,return,new,key,value,holder,name,new,key,value,holder,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict);1528210046;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.List)};protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict) {_        return new KeyValueHolder<>(name, new KeyValueHolder<>(service, dict))__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,list;protected,key,value,holder,string,key,value,holder,object,dictionary,as,key,value,service,string,name,object,service,dictionary,dict,return,new,key,value,holder,name,new,key,value,holder,service,dict
CamelBlueprintTestSupport -> protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict);1544618083;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.List)};protected KeyValueHolder<String, KeyValueHolder<Object, Dictionary>> asKeyValueService(String name, Object service, Dictionary dict) {_        return new KeyValueHolder<>(name, new KeyValueHolder<>(service, dict))__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,list;protected,key,value,holder,string,key,value,holder,object,dictionary,as,key,value,service,string,name,object,service,dictionary,dict,return,new,key,value,holder,name,new,key,value,holder,service,dict
CamelBlueprintTestSupport -> protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services);1431242312;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asKeyValueService(String, Object, Dictionary)}_to make it easy to add the services to the List.;protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,key,value,service,string,object,dictionary,to,make,it,easy,to,add,the,services,to,the,list;protected,void,add,services,on,startup,list,key,value,holder,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services);1437396697;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asKeyValueService(String, Object, Dictionary)}_to make it easy to add the services to the List.;protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,key,value,service,string,object,dictionary,to,make,it,easy,to,add,the,services,to,the,list;protected,void,add,services,on,startup,list,key,value,holder,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services);1437396697;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asKeyValueService(String, Object, Dictionary)}_to make it easy to add the services to the List.;protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,key,value,service,string,object,dictionary,to,make,it,easy,to,add,the,services,to,the,list;protected,void,add,services,on,startup,list,key,value,holder,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services);1437396697;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asKeyValueService(String, Object, Dictionary)}_to make it easy to add the services to the List.;protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,key,value,service,string,object,dictionary,to,make,it,easy,to,add,the,services,to,the,list;protected,void,add,services,on,startup,list,key,value,holder,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services);1437396697;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asKeyValueService(String, Object, Dictionary)}_to make it easy to add the services to the List.;protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,key,value,service,string,object,dictionary,to,make,it,easy,to,add,the,services,to,the,list;protected,void,add,services,on,startup,list,key,value,holder,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services);1437396697;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asKeyValueService(String, Object, Dictionary)}_to make it easy to add the services to the List.;protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,key,value,service,string,object,dictionary,to,make,it,easy,to,add,the,services,to,the,list;protected,void,add,services,on,startup,list,key,value,holder,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services);1437396698;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asKeyValueService(String, Object, Dictionary)}_to make it easy to add the services to the List.;protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,key,value,service,string,object,dictionary,to,make,it,easy,to,add,the,services,to,the,list;protected,void,add,services,on,startup,list,key,value,holder,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services);1437396698;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asKeyValueService(String, Object, Dictionary)}_to make it easy to add the services to the List.;protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,key,value,service,string,object,dictionary,to,make,it,easy,to,add,the,services,to,the,list;protected,void,add,services,on,startup,list,key,value,holder,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services);1442412776;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asKeyValueService(String, Object, Dictionary)}_to make it easy to add the services to the List.;protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,key,value,service,string,object,dictionary,to,make,it,easy,to,add,the,services,to,the,list;protected,void,add,services,on,startup,list,key,value,holder,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services);1449942375;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asKeyValueService(String, Object, Dictionary)}_to make it easy to add the services to the List.;protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,key,value,service,string,object,dictionary,to,make,it,easy,to,add,the,services,to,the,list;protected,void,add,services,on,startup,list,key,value,holder,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services);1449947902;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asKeyValueService(String, Object, Dictionary)}_to make it easy to add the services to the List.;protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,key,value,service,string,object,dictionary,to,make,it,easy,to,add,the,services,to,the,list;protected,void,add,services,on,startup,list,key,value,holder,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services);1456295809;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asKeyValueService(String, Object, Dictionary)}_to make it easy to add the services to the List.;protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,key,value,service,string,object,dictionary,to,make,it,easy,to,add,the,services,to,the,list;protected,void,add,services,on,startup,list,key,value,holder,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services);1456298245;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asKeyValueService(String, Object, Dictionary)}_to make it easy to add the services to the List.;protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,key,value,service,string,object,dictionary,to,make,it,easy,to,add,the,services,to,the,list;protected,void,add,services,on,startup,list,key,value,holder,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services);1456320648;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asKeyValueService(String, Object, Dictionary)}_to make it easy to add the services to the List.;protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,key,value,service,string,object,dictionary,to,make,it,easy,to,add,the,services,to,the,list;protected,void,add,services,on,startup,list,key,value,holder,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services);1456327396;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asKeyValueService(String, Object, Dictionary)}_to make it easy to add the services to the List.;protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,key,value,service,string,object,dictionary,to,make,it,easy,to,add,the,services,to,the,list;protected,void,add,services,on,startup,list,key,value,holder,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services);1458209138;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asKeyValueService(String, Object, Dictionary)}_to make it easy to add the services to the List.;protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,key,value,service,string,object,dictionary,to,make,it,easy,to,add,the,services,to,the,list;protected,void,add,services,on,startup,list,key,value,holder,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services);1461352384;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asKeyValueService(String, Object, Dictionary)}_to make it easy to add the services to the List.;protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,key,value,service,string,object,dictionary,to,make,it,easy,to,add,the,services,to,the,list;protected,void,add,services,on,startup,list,key,value,holder,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services);1461352968;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asKeyValueService(String, Object, Dictionary)}_to make it easy to add the services to the List.;protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,key,value,service,string,object,dictionary,to,make,it,easy,to,add,the,services,to,the,list;protected,void,add,services,on,startup,list,key,value,holder,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services);1486057633;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asKeyValueService(String, Object, Dictionary)}_to make it easy to add the services to the List.;protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,key,value,service,string,object,dictionary,to,make,it,easy,to,add,the,services,to,the,list;protected,void,add,services,on,startup,list,key,value,holder,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services);1498733069;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asKeyValueService(String, Object, Dictionary)}_to make it easy to add the services to the List.;protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,key,value,service,string,object,dictionary,to,make,it,easy,to,add,the,services,to,the,list;protected,void,add,services,on,startup,list,key,value,holder,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services);1498733823;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asKeyValueService(String, Object, Dictionary)}_to make it easy to add the services to the List.;protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,key,value,service,string,object,dictionary,to,make,it,easy,to,add,the,services,to,the,list;protected,void,add,services,on,startup,list,key,value,holder,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services);1524063209;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asKeyValueService(String, Object, Dictionary)}_to make it easy to add the services to the List.;protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,key,value,service,string,object,dictionary,to,make,it,easy,to,add,the,services,to,the,list;protected,void,add,services,on,startup,list,key,value,holder,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services);1528210046;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asKeyValueService(String, Object, Dictionary)}_to make it easy to add the services to the List.;protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,key,value,service,string,object,dictionary,to,make,it,easy,to,add,the,services,to,the,list;protected,void,add,services,on,startup,list,key,value,holder,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services);1544618083;Override this method to add services to be registered on startup._<p/>_You can use the builder methods {@link #asKeyValueService(String, Object, Dictionary)}_to make it easy to add the services to the List.;protected void addServicesOnStartup(List<KeyValueHolder<String, KeyValueHolder<Object, Dictionary>>> services) {_        _    };override,this,method,to,add,services,to,be,registered,on,startup,p,you,can,use,the,builder,methods,link,as,key,value,service,string,object,dictionary,to,make,it,easy,to,add,the,services,to,the,list;protected,void,add,services,on,startup,list,key,value,holder,string,key,value,holder,object,dictionary,services
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value);1385476973;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value) {_        Properties prop = new Properties()__        if (key != null && value != null) {_            prop.put(key, value)__        }_        return new KeyValueHolder<Object, Dictionary>(service, prop)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,string,key,string,value,properties,prop,new,properties,if,key,null,value,null,prop,put,key,value,return,new,key,value,holder,object,dictionary,service,prop
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value);1405374721;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value) {_        Properties prop = new Properties()__        if (key != null && value != null) {_            prop.put(key, value)__        }_        return new KeyValueHolder<Object, Dictionary>(service, prop)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,string,key,string,value,properties,prop,new,properties,if,key,null,value,null,prop,put,key,value,return,new,key,value,holder,object,dictionary,service,prop
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value);1431242312;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value) {_        Properties prop = new Properties()__        if (key != null && value != null) {_            prop.put(key, value)__        }_        return new KeyValueHolder<Object, Dictionary>(service, prop)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,string,key,string,value,properties,prop,new,properties,if,key,null,value,null,prop,put,key,value,return,new,key,value,holder,object,dictionary,service,prop
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value);1437396697;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value) {_        Properties prop = new Properties()__        if (key != null && value != null) {_            prop.put(key, value)__        }_        return new KeyValueHolder<Object, Dictionary>(service, prop)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,string,key,string,value,properties,prop,new,properties,if,key,null,value,null,prop,put,key,value,return,new,key,value,holder,object,dictionary,service,prop
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value);1437396697;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value) {_        Properties prop = new Properties()__        if (key != null && value != null) {_            prop.put(key, value)__        }_        return new KeyValueHolder<Object, Dictionary>(service, prop)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,string,key,string,value,properties,prop,new,properties,if,key,null,value,null,prop,put,key,value,return,new,key,value,holder,object,dictionary,service,prop
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value);1437396697;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value) {_        Properties prop = new Properties()__        if (key != null && value != null) {_            prop.put(key, value)__        }_        return new KeyValueHolder<Object, Dictionary>(service, prop)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,string,key,string,value,properties,prop,new,properties,if,key,null,value,null,prop,put,key,value,return,new,key,value,holder,object,dictionary,service,prop
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value);1437396697;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value) {_        Properties prop = new Properties()__        if (key != null && value != null) {_            prop.put(key, value)__        }_        return new KeyValueHolder<Object, Dictionary>(service, prop)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,string,key,string,value,properties,prop,new,properties,if,key,null,value,null,prop,put,key,value,return,new,key,value,holder,object,dictionary,service,prop
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value);1437396697;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value) {_        Properties prop = new Properties()__        if (key != null && value != null) {_            prop.put(key, value)__        }_        return new KeyValueHolder<Object, Dictionary>(service, prop)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,string,key,string,value,properties,prop,new,properties,if,key,null,value,null,prop,put,key,value,return,new,key,value,holder,object,dictionary,service,prop
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value);1437396698;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value) {_        Properties prop = new Properties()__        if (key != null && value != null) {_            prop.put(key, value)__        }_        return new KeyValueHolder<Object, Dictionary>(service, prop)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,string,key,string,value,properties,prop,new,properties,if,key,null,value,null,prop,put,key,value,return,new,key,value,holder,object,dictionary,service,prop
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value);1437396698;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value) {_        Properties prop = new Properties()__        if (key != null && value != null) {_            prop.put(key, value)__        }_        return new KeyValueHolder<Object, Dictionary>(service, prop)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,string,key,string,value,properties,prop,new,properties,if,key,null,value,null,prop,put,key,value,return,new,key,value,holder,object,dictionary,service,prop
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value);1442412776;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value) {_        Properties prop = new Properties()__        if (key != null && value != null) {_            prop.put(key, value)__        }_        return new KeyValueHolder<Object, Dictionary>(service, prop)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,string,key,string,value,properties,prop,new,properties,if,key,null,value,null,prop,put,key,value,return,new,key,value,holder,object,dictionary,service,prop
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value);1449942375;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value) {_        Properties prop = new Properties()__        if (key != null && value != null) {_            prop.put(key, value)__        }_        return new KeyValueHolder<Object, Dictionary>(service, prop)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,string,key,string,value,properties,prop,new,properties,if,key,null,value,null,prop,put,key,value,return,new,key,value,holder,object,dictionary,service,prop
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value);1449947902;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value) {_        Properties prop = new Properties()__        if (key != null && value != null) {_            prop.put(key, value)__        }_        return new KeyValueHolder<Object, Dictionary>(service, prop)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,string,key,string,value,properties,prop,new,properties,if,key,null,value,null,prop,put,key,value,return,new,key,value,holder,object,dictionary,service,prop
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value);1456295809;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value) {_        Properties prop = new Properties()__        if (key != null && value != null) {_            prop.put(key, value)__        }_        return new KeyValueHolder<Object, Dictionary>(service, prop)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,string,key,string,value,properties,prop,new,properties,if,key,null,value,null,prop,put,key,value,return,new,key,value,holder,object,dictionary,service,prop
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value);1456298245;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value) {_        Properties prop = new Properties()__        if (key != null && value != null) {_            prop.put(key, value)__        }_        return new KeyValueHolder<Object, Dictionary>(service, prop)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,string,key,string,value,properties,prop,new,properties,if,key,null,value,null,prop,put,key,value,return,new,key,value,holder,object,dictionary,service,prop
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value);1456320648;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value) {_        Properties prop = new Properties()__        if (key != null && value != null) {_            prop.put(key, value)__        }_        return new KeyValueHolder<Object, Dictionary>(service, prop)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,string,key,string,value,properties,prop,new,properties,if,key,null,value,null,prop,put,key,value,return,new,key,value,holder,object,dictionary,service,prop
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value);1456327396;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value) {_        Properties prop = new Properties()__        if (key != null && value != null) {_            prop.put(key, value)__        }_        return new KeyValueHolder<Object, Dictionary>(service, prop)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,string,key,string,value,properties,prop,new,properties,if,key,null,value,null,prop,put,key,value,return,new,key,value,holder,object,dictionary,service,prop
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value);1458209138;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value) {_        Properties prop = new Properties()__        if (key != null && value != null) {_            prop.put(key, value)__        }_        return new KeyValueHolder<Object, Dictionary>(service, prop)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,string,key,string,value,properties,prop,new,properties,if,key,null,value,null,prop,put,key,value,return,new,key,value,holder,object,dictionary,service,prop
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value);1461352384;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value) {_        Properties prop = new Properties()__        if (key != null && value != null) {_            prop.put(key, value)__        }_        return new KeyValueHolder<Object, Dictionary>(service, prop)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,string,key,string,value,properties,prop,new,properties,if,key,null,value,null,prop,put,key,value,return,new,key,value,holder,object,dictionary,service,prop
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value);1461352968;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value) {_        Properties prop = new Properties()__        if (key != null && value != null) {_            prop.put(key, value)__        }_        return new KeyValueHolder<Object, Dictionary>(service, prop)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,string,key,string,value,properties,prop,new,properties,if,key,null,value,null,prop,put,key,value,return,new,key,value,holder,object,dictionary,service,prop
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value);1486057633;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value) {_        Properties prop = new Properties()__        if (key != null && value != null) {_            prop.put(key, value)__        }_        return new KeyValueHolder<Object, Dictionary>(service, prop)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,string,key,string,value,properties,prop,new,properties,if,key,null,value,null,prop,put,key,value,return,new,key,value,holder,object,dictionary,service,prop
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value);1498733069;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value) {_        Properties prop = new Properties()__        if (key != null && value != null) {_            prop.put(key, value)__        }_        return new KeyValueHolder<Object, Dictionary>(service, prop)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,string,key,string,value,properties,prop,new,properties,if,key,null,value,null,prop,put,key,value,return,new,key,value,holder,object,dictionary,service,prop
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value);1498733823;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value) {_        Properties prop = new Properties()__        if (key != null && value != null) {_            prop.put(key, value)__        }_        return new KeyValueHolder<Object, Dictionary>(service, prop)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,string,key,string,value,properties,prop,new,properties,if,key,null,value,null,prop,put,key,value,return,new,key,value,holder,object,dictionary,service,prop
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value);1524063209;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value) {_        Properties prop = new Properties()__        if (key != null && value != null) {_            prop.put(key, value)__        }_        return new KeyValueHolder<>(service, prop)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,string,key,string,value,properties,prop,new,properties,if,key,null,value,null,prop,put,key,value,return,new,key,value,holder,service,prop
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value);1528210046;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value) {_        Properties prop = new Properties()__        if (key != null && value != null) {_            prop.put(key, value)__        }_        return new KeyValueHolder<>(service, prop)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,string,key,string,value,properties,prop,new,properties,if,key,null,value,null,prop,put,key,value,return,new,key,value,holder,service,prop
CamelBlueprintTestSupport -> protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value);1544618083;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};protected KeyValueHolder<Object, Dictionary> asService(Object service, String key, String value) {_        Properties prop = new Properties()__        if (key != null && value != null) {_            prop.put(key, value)__        }_        return new KeyValueHolder<>(service, prop)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;protected,key,value,holder,object,dictionary,as,service,object,service,string,key,string,value,properties,prop,new,properties,if,key,null,value,null,prop,put,key,value,return,new,key,value,holder,service,prop
CamelBlueprintTestSupport -> KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict);1378117940;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict) {_        return new KeyValueHolder<Object, Dictionary>(service, dict)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;key,value,holder,object,dictionary,as,service,object,service,dictionary,dict,return,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict);1379386731;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict) {_        return new KeyValueHolder<Object, Dictionary>(service, dict)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;key,value,holder,object,dictionary,as,service,object,service,dictionary,dict,return,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict);1381253992;Creates a holder for the given service, which make it easier to use {@link #addServicesOnStartup(java.util.Map)};KeyValueHolder<Object, Dictionary> asService(Object service, Dictionary dict) {_        return new KeyValueHolder<Object, Dictionary>(service, dict)__    };creates,a,holder,for,the,given,service,which,make,it,easier,to,use,link,add,services,on,startup,java,util,map;key,value,holder,object,dictionary,as,service,object,service,dictionary,dict,return,new,key,value,holder,object,dictionary,service,dict
CamelBlueprintTestSupport -> protected String getBundleFilter();1335540090;Gets filter expression of bundle descriptors. Modify this method if you wish to change_default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1335625139;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1337953843;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1339246630;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1340111803;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1342458052;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1345470544;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1352556719;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1360321077;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1360324485;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1360335319;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1360840554;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1363726640;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1364362255;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1364651477;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1368004799;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1373187183;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1373223799;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1373448419;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1378117940;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1379386731;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1381253992;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1385476973;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1405374721;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1431242312;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1437396697;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1437396697;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1437396697;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1437396697;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1437396697;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1437396698;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1437396698;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1442412776;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1449942375;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1449947902;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1456295809;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1456298245;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1456320648;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1456327396;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1458209138;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1461352384;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1461352968;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1486057633;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1498733069;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1498733823;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1524063209;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1528210046;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
CamelBlueprintTestSupport -> protected String getBundleFilter();1544618083;Gets filter expression of bundle descriptors._Modify this method if you wish to change default behavior.__@return filter expression for OSGi bundles.;protected String getBundleFilter() {_        return CamelBlueprintHelper.BUNDLE_FILTER__    };gets,filter,expression,of,bundle,descriptors,modify,this,method,if,you,wish,to,change,default,behavior,return,filter,expression,for,osgi,bundles;protected,string,get,bundle,filter,return,camel,blueprint,helper
