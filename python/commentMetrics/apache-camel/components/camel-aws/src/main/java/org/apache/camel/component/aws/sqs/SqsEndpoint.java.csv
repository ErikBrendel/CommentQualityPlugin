# id;timestamp;commentText;codeText;commentWords;codeWords
SqsEndpoint -> AmazonSQS createClient();1363645171;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        AmazonSQS client = new AmazonSQSClient(credentials)__        if (configuration.getAmazonSQSEndpoint() != null) {_            client.setEndpoint(configuration.getAmazonSQSEndpoint())__        }_        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,amazon,sqs,client,new,amazon,sqsclient,credentials,if,configuration,get,amazon,sqsendpoint,null,client,set,endpoint,configuration,get,amazon,sqsendpoint,return,client
SqsEndpoint -> AmazonSQS createClient();1376011636;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        AmazonSQS client = new AmazonSQSClient(credentials)__        if (configuration.getAmazonSQSEndpoint() != null) {_            client.setEndpoint(configuration.getAmazonSQSEndpoint())__        }_        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,amazon,sqs,client,new,amazon,sqsclient,credentials,if,configuration,get,amazon,sqsendpoint,null,client,set,endpoint,configuration,get,amazon,sqsendpoint,return,client
SqsEndpoint -> AmazonSQS createClient();1376549254;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        AmazonSQS client = new AmazonSQSClient(credentials)__        if (configuration.getAmazonSQSEndpoint() != null) {_            client.setEndpoint(configuration.getAmazonSQSEndpoint())__        }_        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,amazon,sqs,client,new,amazon,sqsclient,credentials,if,configuration,get,amazon,sqsendpoint,null,client,set,endpoint,configuration,get,amazon,sqsendpoint,return,client
SqsEndpoint -> AmazonSQS createClient();1376636313;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        AmazonSQS client = new AmazonSQSClient(credentials)__        if (configuration.getAmazonSQSEndpoint() != null) {_            client.setEndpoint(configuration.getAmazonSQSEndpoint())__        }_        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,amazon,sqs,client,new,amazon,sqsclient,credentials,if,configuration,get,amazon,sqsendpoint,null,client,set,endpoint,configuration,get,amazon,sqsendpoint,return,client
SqsEndpoint -> AmazonSQS createClient();1388443957;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        AmazonSQS client = new AmazonSQSClient(credentials)__        if (configuration.getAmazonSQSEndpoint() != null) {_            client.setEndpoint(configuration.getAmazonSQSEndpoint())__        }_        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,amazon,sqs,client,new,amazon,sqsclient,credentials,if,configuration,get,amazon,sqsendpoint,null,client,set,endpoint,configuration,get,amazon,sqsendpoint,return,client
SqsEndpoint -> AmazonSQS createClient();1389726752;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        AmazonSQS client = new AmazonSQSClient(credentials)__        if (configuration.getAmazonSQSEndpoint() != null) {_            client.setEndpoint(configuration.getAmazonSQSEndpoint())__        }_        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,amazon,sqs,client,new,amazon,sqsclient,credentials,if,configuration,get,amazon,sqsendpoint,null,client,set,endpoint,configuration,get,amazon,sqsendpoint,return,client
SqsEndpoint -> AmazonSQS createClient();1395076208;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        AmazonSQS client = new AmazonSQSClient(credentials)__        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,amazon,sqs,client,new,amazon,sqsclient,credentials,return,client
SqsEndpoint -> AmazonSQS createClient();1415211488;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        AmazonSQS client = new AmazonSQSClient(credentials)__        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,amazon,sqs,client,new,amazon,sqsclient,credentials,return,client
SqsEndpoint -> AmazonSQS createClient();1417615177;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        AmazonSQS client = new AmazonSQSClient(credentials)__        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,amazon,sqs,client,new,amazon,sqsclient,credentials,return,client
SqsEndpoint -> AmazonSQS createClient();1420554248;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        AmazonSQS client = new AmazonSQSClient(credentials)__        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,amazon,sqs,client,new,amazon,sqsclient,credentials,return,client
SqsEndpoint -> AmazonSQS createClient();1420759898;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        AmazonSQS client = new AmazonSQSClient(credentials)__        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,amazon,sqs,client,new,amazon,sqsclient,credentials,return,client
SqsEndpoint -> AmazonSQS createClient();1425140025;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        AmazonSQS client = new AmazonSQSClient(credentials)__        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,amazon,sqs,client,new,amazon,sqsclient,credentials,return,client
SqsEndpoint -> AmazonSQS createClient();1427402378;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        AmazonSQS client = new AmazonSQSClient(credentials)__        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,amazon,sqs,client,new,amazon,sqsclient,credentials,return,client
SqsEndpoint -> AmazonSQS createClient();1431086344;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        AmazonSQS client = new AmazonSQSClient(credentials)__        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,amazon,sqs,client,new,amazon,sqsclient,credentials,return,client
SqsEndpoint -> AmazonSQS createClient();1438357088;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AmazonSQS client = null__        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        if (ObjectHelper.isNotEmpty(configuration.getProxyHost()) && ObjectHelper.isNotEmpty(configuration.getProxyPort())) {_            ClientConfiguration clientConfiguration = new ClientConfiguration()__            clientConfiguration.setProxyHost(configuration.getProxyHost())__            clientConfiguration.setProxyPort(configuration.getProxyPort())__            client = new AmazonSQSClient(credentials, clientConfiguration)__        } else {_            client = new AmazonSQSClient(credentials)__        }_        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,amazon,sqs,client,null,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,if,object,helper,is,not,empty,configuration,get,proxy,host,object,helper,is,not,empty,configuration,get,proxy,port,client,configuration,client,configuration,new,client,configuration,client,configuration,set,proxy,host,configuration,get,proxy,host,client,configuration,set,proxy,port,configuration,get,proxy,port,client,new,amazon,sqsclient,credentials,client,configuration,else,client,new,amazon,sqsclient,credentials,return,client
SqsEndpoint -> AmazonSQS createClient();1439194111;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AmazonSQS client = null__        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        if (ObjectHelper.isNotEmpty(configuration.getProxyHost()) && ObjectHelper.isNotEmpty(configuration.getProxyPort())) {_            ClientConfiguration clientConfiguration = new ClientConfiguration()__            clientConfiguration.setProxyHost(configuration.getProxyHost())__            clientConfiguration.setProxyPort(configuration.getProxyPort())__            client = new AmazonSQSClient(credentials, clientConfiguration)__        } else {_            client = new AmazonSQSClient(credentials)__        }_        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,amazon,sqs,client,null,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,if,object,helper,is,not,empty,configuration,get,proxy,host,object,helper,is,not,empty,configuration,get,proxy,port,client,configuration,client,configuration,new,client,configuration,client,configuration,set,proxy,host,configuration,get,proxy,host,client,configuration,set,proxy,port,configuration,get,proxy,port,client,new,amazon,sqsclient,credentials,client,configuration,else,client,new,amazon,sqsclient,credentials,return,client
SqsEndpoint -> AmazonSQS createClient();1451237123;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AmazonSQS client = null__        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        if (ObjectHelper.isNotEmpty(configuration.getProxyHost()) && ObjectHelper.isNotEmpty(configuration.getProxyPort())) {_            ClientConfiguration clientConfiguration = new ClientConfiguration()__            clientConfiguration.setProxyHost(configuration.getProxyHost())__            clientConfiguration.setProxyPort(configuration.getProxyPort())__            client = new AmazonSQSClient(credentials, clientConfiguration)__        } else {_            client = new AmazonSQSClient(credentials)__        }_        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,amazon,sqs,client,null,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,if,object,helper,is,not,empty,configuration,get,proxy,host,object,helper,is,not,empty,configuration,get,proxy,port,client,configuration,client,configuration,new,client,configuration,client,configuration,set,proxy,host,configuration,get,proxy,host,client,configuration,set,proxy,port,configuration,get,proxy,port,client,new,amazon,sqsclient,credentials,client,configuration,else,client,new,amazon,sqsclient,credentials,return,client
SqsEndpoint -> AmazonSQS createClient();1451237124;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AmazonSQS client = null__        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        if (ObjectHelper.isNotEmpty(configuration.getProxyHost()) && ObjectHelper.isNotEmpty(configuration.getProxyPort())) {_            ClientConfiguration clientConfiguration = new ClientConfiguration()__            clientConfiguration.setProxyHost(configuration.getProxyHost())__            clientConfiguration.setProxyPort(configuration.getProxyPort())__            client = new AmazonSQSClient(credentials, clientConfiguration)__        } else {_            client = new AmazonSQSClient(credentials)__        }_        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,amazon,sqs,client,null,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,if,object,helper,is,not,empty,configuration,get,proxy,host,object,helper,is,not,empty,configuration,get,proxy,port,client,configuration,client,configuration,new,client,configuration,client,configuration,set,proxy,host,configuration,get,proxy,host,client,configuration,set,proxy,port,configuration,get,proxy,port,client,new,amazon,sqsclient,credentials,client,configuration,else,client,new,amazon,sqsclient,credentials,return,client
SqsEndpoint -> AmazonSQS createClient();1451410872;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AmazonSQS client = null__        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        if (ObjectHelper.isNotEmpty(configuration.getProxyHost()) && ObjectHelper.isNotEmpty(configuration.getProxyPort())) {_            ClientConfiguration clientConfiguration = new ClientConfiguration()__            clientConfiguration.setProxyHost(configuration.getProxyHost())__            clientConfiguration.setProxyPort(configuration.getProxyPort())__            client = new AmazonSQSClient(credentials, clientConfiguration)__        } else {_            client = new AmazonSQSClient(credentials)__        }_        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,amazon,sqs,client,null,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,if,object,helper,is,not,empty,configuration,get,proxy,host,object,helper,is,not,empty,configuration,get,proxy,port,client,configuration,client,configuration,new,client,configuration,client,configuration,set,proxy,host,configuration,get,proxy,host,client,configuration,set,proxy,port,configuration,get,proxy,port,client,new,amazon,sqsclient,credentials,client,configuration,else,client,new,amazon,sqsclient,credentials,return,client
SqsEndpoint -> AmazonSQS createClient();1460635929;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AmazonSQS client = null__        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        if (ObjectHelper.isNotEmpty(configuration.getProxyHost()) && ObjectHelper.isNotEmpty(configuration.getProxyPort())) {_            ClientConfiguration clientConfiguration = new ClientConfiguration()__            clientConfiguration.setProxyHost(configuration.getProxyHost())__            clientConfiguration.setProxyPort(configuration.getProxyPort())__            client = new AmazonSQSClient(credentials, clientConfiguration)__        } else {_            client = new AmazonSQSClient(credentials)__        }_        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,amazon,sqs,client,null,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,if,object,helper,is,not,empty,configuration,get,proxy,host,object,helper,is,not,empty,configuration,get,proxy,port,client,configuration,client,configuration,new,client,configuration,client,configuration,set,proxy,host,configuration,get,proxy,host,client,configuration,set,proxy,port,configuration,get,proxy,port,client,new,amazon,sqsclient,credentials,client,configuration,else,client,new,amazon,sqsclient,credentials,return,client
SqsEndpoint -> AmazonSQS createClient();1460636484;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AmazonSQS client = null__        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        if (ObjectHelper.isNotEmpty(configuration.getProxyHost()) && ObjectHelper.isNotEmpty(configuration.getProxyPort())) {_            ClientConfiguration clientConfiguration = new ClientConfiguration()__            clientConfiguration.setProxyHost(configuration.getProxyHost())__            clientConfiguration.setProxyPort(configuration.getProxyPort())__            client = new AmazonSQSClient(credentials, clientConfiguration)__        } else {_            client = new AmazonSQSClient(credentials)__        }_        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,amazon,sqs,client,null,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,if,object,helper,is,not,empty,configuration,get,proxy,host,object,helper,is,not,empty,configuration,get,proxy,port,client,configuration,client,configuration,new,client,configuration,client,configuration,set,proxy,host,configuration,get,proxy,host,client,configuration,set,proxy,port,configuration,get,proxy,port,client,new,amazon,sqsclient,credentials,client,configuration,else,client,new,amazon,sqsclient,credentials,return,client
SqsEndpoint -> AmazonSQS createClient();1484985735;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AmazonSQS client = null__        ClientConfiguration clientConfiguration = null__        boolean isClientConfigFound = false__        if (ObjectHelper.isNotEmpty(configuration.getProxyHost()) && ObjectHelper.isNotEmpty(configuration.getProxyPort())) {_            clientConfiguration = new ClientConfiguration()__            clientConfiguration.setProxyHost(configuration.getProxyHost())__            clientConfiguration.setProxyPort(configuration.getProxyPort())__            isClientConfigFound = true__        }_        if (configuration.getAccessKey() != null && configuration.getSecretKey() != null) {_            AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__            if (isClientConfigFound) {_                client = new AmazonSQSClient(credentials, clientConfiguration)__            } else {_                client = new AmazonSQSClient(credentials)__            }_        } else {_            if (isClientConfigFound) {_                client = new AmazonSQSClient()__            } else {_                client = new AmazonSQSClient(clientConfiguration)__            }_        }_        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,amazon,sqs,client,null,client,configuration,client,configuration,null,boolean,is,client,config,found,false,if,object,helper,is,not,empty,configuration,get,proxy,host,object,helper,is,not,empty,configuration,get,proxy,port,client,configuration,new,client,configuration,client,configuration,set,proxy,host,configuration,get,proxy,host,client,configuration,set,proxy,port,configuration,get,proxy,port,is,client,config,found,true,if,configuration,get,access,key,null,configuration,get,secret,key,null,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,if,is,client,config,found,client,new,amazon,sqsclient,credentials,client,configuration,else,client,new,amazon,sqsclient,credentials,else,if,is,client,config,found,client,new,amazon,sqsclient,else,client,new,amazon,sqsclient,client,configuration,return,client
SqsEndpoint -> AmazonSQS createClient();1486048238;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AmazonSQS client = null__        ClientConfiguration clientConfiguration = null__        boolean isClientConfigFound = false__        if (ObjectHelper.isNotEmpty(configuration.getProxyHost()) && ObjectHelper.isNotEmpty(configuration.getProxyPort())) {_            clientConfiguration = new ClientConfiguration()__            clientConfiguration.setProxyHost(configuration.getProxyHost())__            clientConfiguration.setProxyPort(configuration.getProxyPort())__            isClientConfigFound = true__        }_        if (configuration.getAccessKey() != null && configuration.getSecretKey() != null) {_            AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__            if (isClientConfigFound) {_                client = new AmazonSQSClient(credentials, clientConfiguration)__            } else {_                client = new AmazonSQSClient(credentials)__            }_        } else {_            if (isClientConfigFound) {_                client = new AmazonSQSClient()__            } else {_                client = new AmazonSQSClient(clientConfiguration)__            }_        }_        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,amazon,sqs,client,null,client,configuration,client,configuration,null,boolean,is,client,config,found,false,if,object,helper,is,not,empty,configuration,get,proxy,host,object,helper,is,not,empty,configuration,get,proxy,port,client,configuration,new,client,configuration,client,configuration,set,proxy,host,configuration,get,proxy,host,client,configuration,set,proxy,port,configuration,get,proxy,port,is,client,config,found,true,if,configuration,get,access,key,null,configuration,get,secret,key,null,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,if,is,client,config,found,client,new,amazon,sqsclient,credentials,client,configuration,else,client,new,amazon,sqsclient,credentials,else,if,is,client,config,found,client,new,amazon,sqsclient,else,client,new,amazon,sqsclient,client,configuration,return,client
SqsEndpoint -> AmazonSQS createClient();1490431914;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AmazonSQS client = null__        ClientConfiguration clientConfiguration = null__        boolean isClientConfigFound = false__        if (ObjectHelper.isNotEmpty(configuration.getProxyHost()) && ObjectHelper.isNotEmpty(configuration.getProxyPort())) {_            clientConfiguration = new ClientConfiguration()__            clientConfiguration.setProxyHost(configuration.getProxyHost())__            clientConfiguration.setProxyPort(configuration.getProxyPort())__            isClientConfigFound = true__        }_        if (configuration.getAccessKey() != null && configuration.getSecretKey() != null) {_            AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__            if (isClientConfigFound) {_                client = new AmazonSQSClient(credentials, clientConfiguration)__            } else {_                client = new AmazonSQSClient(credentials)__            }_        } else {_            if (isClientConfigFound) {_                client = new AmazonSQSClient()__            } else {_                client = new AmazonSQSClient(clientConfiguration)__            }_        }_        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,amazon,sqs,client,null,client,configuration,client,configuration,null,boolean,is,client,config,found,false,if,object,helper,is,not,empty,configuration,get,proxy,host,object,helper,is,not,empty,configuration,get,proxy,port,client,configuration,new,client,configuration,client,configuration,set,proxy,host,configuration,get,proxy,host,client,configuration,set,proxy,port,configuration,get,proxy,port,is,client,config,found,true,if,configuration,get,access,key,null,configuration,get,secret,key,null,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,if,is,client,config,found,client,new,amazon,sqsclient,credentials,client,configuration,else,client,new,amazon,sqsclient,credentials,else,if,is,client,config,found,client,new,amazon,sqsclient,else,client,new,amazon,sqsclient,client,configuration,return,client
SqsEndpoint -> AmazonSQS createClient();1503646409;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AmazonSQS client = null__        ClientConfiguration clientConfiguration = null__        boolean isClientConfigFound = false__        if (ObjectHelper.isNotEmpty(configuration.getProxyHost()) && ObjectHelper.isNotEmpty(configuration.getProxyPort())) {_            clientConfiguration = new ClientConfiguration()__            clientConfiguration.setProxyHost(configuration.getProxyHost())__            clientConfiguration.setProxyPort(configuration.getProxyPort())__            isClientConfigFound = true__        }_        if (configuration.getAccessKey() != null && configuration.getSecretKey() != null) {_            AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__            AWSCredentialsProvider credentialsProvider = new AWSStaticCredentialsProvider(credentials)__            if (isClientConfigFound) {_                client = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration).withCredentials(credentialsProvider).build()__            } else {_                client = AmazonSQSClientBuilder.standard().withCredentials(credentialsProvider).build()__            }_        } else {_            if (isClientConfigFound) {_                client = AmazonSQSClientBuilder.standard().build()__            } else {_                client = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration).build()__            }_        }_        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,amazon,sqs,client,null,client,configuration,client,configuration,null,boolean,is,client,config,found,false,if,object,helper,is,not,empty,configuration,get,proxy,host,object,helper,is,not,empty,configuration,get,proxy,port,client,configuration,new,client,configuration,client,configuration,set,proxy,host,configuration,get,proxy,host,client,configuration,set,proxy,port,configuration,get,proxy,port,is,client,config,found,true,if,configuration,get,access,key,null,configuration,get,secret,key,null,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,awscredentials,provider,credentials,provider,new,awsstatic,credentials,provider,credentials,if,is,client,config,found,client,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,with,credentials,credentials,provider,build,else,client,amazon,sqsclient,builder,standard,with,credentials,credentials,provider,build,else,if,is,client,config,found,client,amazon,sqsclient,builder,standard,build,else,client,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,build,return,client
SqsEndpoint -> AmazonSQS createClient();1504265552;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AmazonSQS client = null__        AmazonSQSClientBuilder clientBuilder = null__        ClientConfiguration clientConfiguration = null__        boolean isClientConfigFound = false__        if (ObjectHelper.isNotEmpty(configuration.getProxyHost()) && ObjectHelper.isNotEmpty(configuration.getProxyPort())) {_            clientConfiguration = new ClientConfiguration()__            clientConfiguration.setProxyHost(configuration.getProxyHost())__            clientConfiguration.setProxyPort(configuration.getProxyPort())__            isClientConfigFound = true__        }_        if (configuration.getAccessKey() != null && configuration.getSecretKey() != null) {_            AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__            AWSCredentialsProvider credentialsProvider = new AWSStaticCredentialsProvider(credentials)__            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration).withCredentials(credentialsProvider)__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withCredentials(credentialsProvider)__            }_        } else {_            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard()__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration)__            }_        }_        if (ObjectHelper.isNotEmpty(configuration.getAmazonSQSEndpoint()) && ObjectHelper.isNotEmpty(configuration.getRegion())) {_            EndpointConfiguration endpointConfiguration = new EndpointConfiguration(configuration.getAmazonSQSEndpoint(), configuration.getRegion())__            clientBuilder = clientBuilder.withEndpointConfiguration(endpointConfiguration)__        }_        client = clientBuilder.build()__        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,amazon,sqs,client,null,amazon,sqsclient,builder,client,builder,null,client,configuration,client,configuration,null,boolean,is,client,config,found,false,if,object,helper,is,not,empty,configuration,get,proxy,host,object,helper,is,not,empty,configuration,get,proxy,port,client,configuration,new,client,configuration,client,configuration,set,proxy,host,configuration,get,proxy,host,client,configuration,set,proxy,port,configuration,get,proxy,port,is,client,config,found,true,if,configuration,get,access,key,null,configuration,get,secret,key,null,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,awscredentials,provider,credentials,provider,new,awsstatic,credentials,provider,credentials,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,with,credentials,credentials,provider,else,client,builder,amazon,sqsclient,builder,standard,with,credentials,credentials,provider,else,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,else,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,if,object,helper,is,not,empty,configuration,get,amazon,sqsendpoint,object,helper,is,not,empty,configuration,get,region,endpoint,configuration,endpoint,configuration,new,endpoint,configuration,configuration,get,amazon,sqsendpoint,configuration,get,region,client,builder,client,builder,with,endpoint,configuration,endpoint,configuration,client,client,builder,build,return,client
SqsEndpoint -> AmazonSQS createClient();1512655542;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AmazonSQS client = null__        AmazonSQSClientBuilder clientBuilder = null__        ClientConfiguration clientConfiguration = null__        boolean isClientConfigFound = false__        if (ObjectHelper.isNotEmpty(configuration.getProxyHost()) && ObjectHelper.isNotEmpty(configuration.getProxyPort())) {_            clientConfiguration = new ClientConfiguration()__            clientConfiguration.setProxyHost(configuration.getProxyHost())__            clientConfiguration.setProxyPort(configuration.getProxyPort())__            isClientConfigFound = true__        }_        if (configuration.getAccessKey() != null && configuration.getSecretKey() != null) {_            AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__            AWSCredentialsProvider credentialsProvider = new AWSStaticCredentialsProvider(credentials)__            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration).withCredentials(credentialsProvider)__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withCredentials(credentialsProvider)__            }_        } else {_            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard()__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration)__            }_        }_        if (ObjectHelper.isNotEmpty(configuration.getAmazonSQSEndpoint()) && ObjectHelper.isNotEmpty(configuration.getRegion())) {_            EndpointConfiguration endpointConfiguration = new EndpointConfiguration(configuration.getAmazonSQSEndpoint(), configuration.getRegion())__            clientBuilder = clientBuilder.withEndpointConfiguration(endpointConfiguration)__        }_        client = clientBuilder.build()__        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,amazon,sqs,client,null,amazon,sqsclient,builder,client,builder,null,client,configuration,client,configuration,null,boolean,is,client,config,found,false,if,object,helper,is,not,empty,configuration,get,proxy,host,object,helper,is,not,empty,configuration,get,proxy,port,client,configuration,new,client,configuration,client,configuration,set,proxy,host,configuration,get,proxy,host,client,configuration,set,proxy,port,configuration,get,proxy,port,is,client,config,found,true,if,configuration,get,access,key,null,configuration,get,secret,key,null,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,awscredentials,provider,credentials,provider,new,awsstatic,credentials,provider,credentials,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,with,credentials,credentials,provider,else,client,builder,amazon,sqsclient,builder,standard,with,credentials,credentials,provider,else,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,else,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,if,object,helper,is,not,empty,configuration,get,amazon,sqsendpoint,object,helper,is,not,empty,configuration,get,region,endpoint,configuration,endpoint,configuration,new,endpoint,configuration,configuration,get,amazon,sqsendpoint,configuration,get,region,client,builder,client,builder,with,endpoint,configuration,endpoint,configuration,client,client,builder,build,return,client
SqsEndpoint -> AmazonSQS createClient();1517996299;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AmazonSQS client = null__        AmazonSQSClientBuilder clientBuilder = null__        ClientConfiguration clientConfiguration = null__        boolean isClientConfigFound = false__        if (ObjectHelper.isNotEmpty(configuration.getProxyHost()) && ObjectHelper.isNotEmpty(configuration.getProxyPort())) {_            clientConfiguration = new ClientConfiguration()__            clientConfiguration.setProxyHost(configuration.getProxyHost())__            clientConfiguration.setProxyPort(configuration.getProxyPort())__            isClientConfigFound = true__        }_        if (configuration.getAccessKey() != null && configuration.getSecretKey() != null) {_            AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__            AWSCredentialsProvider credentialsProvider = new AWSStaticCredentialsProvider(credentials)__            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration).withCredentials(credentialsProvider)__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withCredentials(credentialsProvider)__            }_        } else {_            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard()__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration)__            }_        }_        if (ObjectHelper.isNotEmpty(configuration.getRegion())) {_            clientBuilder = clientBuilder.withRegion(Regions.valueOf(configuration.getRegion()))__        }_        client = clientBuilder.build()__        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,amazon,sqs,client,null,amazon,sqsclient,builder,client,builder,null,client,configuration,client,configuration,null,boolean,is,client,config,found,false,if,object,helper,is,not,empty,configuration,get,proxy,host,object,helper,is,not,empty,configuration,get,proxy,port,client,configuration,new,client,configuration,client,configuration,set,proxy,host,configuration,get,proxy,host,client,configuration,set,proxy,port,configuration,get,proxy,port,is,client,config,found,true,if,configuration,get,access,key,null,configuration,get,secret,key,null,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,awscredentials,provider,credentials,provider,new,awsstatic,credentials,provider,credentials,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,with,credentials,credentials,provider,else,client,builder,amazon,sqsclient,builder,standard,with,credentials,credentials,provider,else,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,else,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,if,object,helper,is,not,empty,configuration,get,region,client,builder,client,builder,with,region,regions,value,of,configuration,get,region,client,client,builder,build,return,client
SqsEndpoint -> AmazonSQS createClient();1518684083;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AmazonSQS client = null__        AmazonSQSClientBuilder clientBuilder = null__        ClientConfiguration clientConfiguration = null__        boolean isClientConfigFound = false__        if (ObjectHelper.isNotEmpty(configuration.getProxyHost()) && ObjectHelper.isNotEmpty(configuration.getProxyPort())) {_            clientConfiguration = new ClientConfiguration()__            clientConfiguration.setProxyHost(configuration.getProxyHost())__            clientConfiguration.setProxyPort(configuration.getProxyPort())__            isClientConfigFound = true__        }_        if (configuration.getAccessKey() != null && configuration.getSecretKey() != null) {_            AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__            AWSCredentialsProvider credentialsProvider = new AWSStaticCredentialsProvider(credentials)__            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration).withCredentials(credentialsProvider)__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withCredentials(credentialsProvider)__            }_        } else {_            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard()__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration)__            }_        }_        if (ObjectHelper.isNotEmpty(configuration.getRegion())) {_            clientBuilder = clientBuilder.withRegion(Regions.valueOf(configuration.getRegion()))__        }_        client = clientBuilder.build()__        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,amazon,sqs,client,null,amazon,sqsclient,builder,client,builder,null,client,configuration,client,configuration,null,boolean,is,client,config,found,false,if,object,helper,is,not,empty,configuration,get,proxy,host,object,helper,is,not,empty,configuration,get,proxy,port,client,configuration,new,client,configuration,client,configuration,set,proxy,host,configuration,get,proxy,host,client,configuration,set,proxy,port,configuration,get,proxy,port,is,client,config,found,true,if,configuration,get,access,key,null,configuration,get,secret,key,null,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,awscredentials,provider,credentials,provider,new,awsstatic,credentials,provider,credentials,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,with,credentials,credentials,provider,else,client,builder,amazon,sqsclient,builder,standard,with,credentials,credentials,provider,else,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,else,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,if,object,helper,is,not,empty,configuration,get,region,client,builder,client,builder,with,region,regions,value,of,configuration,get,region,client,client,builder,build,return,client
SqsEndpoint -> AmazonSQS createClient();1521530281;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AmazonSQS client = null__        AmazonSQSClientBuilder clientBuilder = null__        ClientConfiguration clientConfiguration = null__        boolean isClientConfigFound = false__        if (ObjectHelper.isNotEmpty(configuration.getProxyHost()) && ObjectHelper.isNotEmpty(configuration.getProxyPort())) {_            clientConfiguration = new ClientConfiguration()__            clientConfiguration.setProxyHost(configuration.getProxyHost())__            clientConfiguration.setProxyPort(configuration.getProxyPort())__            isClientConfigFound = true__        }_        if (configuration.getAccessKey() != null && configuration.getSecretKey() != null) {_            AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__            AWSCredentialsProvider credentialsProvider = new AWSStaticCredentialsProvider(credentials)__            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration).withCredentials(credentialsProvider)__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withCredentials(credentialsProvider)__            }_        } else {_            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard()__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration)__            }_        }_        if (ObjectHelper.isNotEmpty(configuration.getRegion())) {_            clientBuilder = clientBuilder.withRegion(Regions.valueOf(configuration.getRegion()))__        }_        client = clientBuilder.build()__        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,amazon,sqs,client,null,amazon,sqsclient,builder,client,builder,null,client,configuration,client,configuration,null,boolean,is,client,config,found,false,if,object,helper,is,not,empty,configuration,get,proxy,host,object,helper,is,not,empty,configuration,get,proxy,port,client,configuration,new,client,configuration,client,configuration,set,proxy,host,configuration,get,proxy,host,client,configuration,set,proxy,port,configuration,get,proxy,port,is,client,config,found,true,if,configuration,get,access,key,null,configuration,get,secret,key,null,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,awscredentials,provider,credentials,provider,new,awsstatic,credentials,provider,credentials,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,with,credentials,credentials,provider,else,client,builder,amazon,sqsclient,builder,standard,with,credentials,credentials,provider,else,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,else,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,if,object,helper,is,not,empty,configuration,get,region,client,builder,client,builder,with,region,regions,value,of,configuration,get,region,client,client,builder,build,return,client
SqsEndpoint -> AmazonSQS createClient();1525346406;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AmazonSQS client = null__        AmazonSQSClientBuilder clientBuilder = null__        ClientConfiguration clientConfiguration = null__        boolean isClientConfigFound = false__        if (ObjectHelper.isNotEmpty(configuration.getProxyHost()) && ObjectHelper.isNotEmpty(configuration.getProxyPort())) {_            clientConfiguration = new ClientConfiguration()__            clientConfiguration.setProxyHost(configuration.getProxyHost())__            clientConfiguration.setProxyPort(configuration.getProxyPort())__            isClientConfigFound = true__        }_        if (configuration.getAccessKey() != null && configuration.getSecretKey() != null) {_            AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__            AWSCredentialsProvider credentialsProvider = new AWSStaticCredentialsProvider(credentials)__            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration).withCredentials(credentialsProvider)__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withCredentials(credentialsProvider)__            }_        } else {_            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard()__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration)__            }_        }_        if (ObjectHelper.isNotEmpty(configuration.getRegion())) {_            clientBuilder = clientBuilder.withRegion(Regions.valueOf(configuration.getRegion()))__        }_        client = clientBuilder.build()__        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,amazon,sqs,client,null,amazon,sqsclient,builder,client,builder,null,client,configuration,client,configuration,null,boolean,is,client,config,found,false,if,object,helper,is,not,empty,configuration,get,proxy,host,object,helper,is,not,empty,configuration,get,proxy,port,client,configuration,new,client,configuration,client,configuration,set,proxy,host,configuration,get,proxy,host,client,configuration,set,proxy,port,configuration,get,proxy,port,is,client,config,found,true,if,configuration,get,access,key,null,configuration,get,secret,key,null,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,awscredentials,provider,credentials,provider,new,awsstatic,credentials,provider,credentials,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,with,credentials,credentials,provider,else,client,builder,amazon,sqsclient,builder,standard,with,credentials,credentials,provider,else,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,else,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,if,object,helper,is,not,empty,configuration,get,region,client,builder,client,builder,with,region,regions,value,of,configuration,get,region,client,client,builder,build,return,client
SqsEndpoint -> AmazonSQS createClient();1525346406;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AmazonSQS client = null__        AmazonSQSClientBuilder clientBuilder = null__        ClientConfiguration clientConfiguration = null__        boolean isClientConfigFound = false__        if (ObjectHelper.isNotEmpty(configuration.getProxyHost()) && ObjectHelper.isNotEmpty(configuration.getProxyPort())) {_            clientConfiguration = new ClientConfiguration()__            clientConfiguration.setProxyHost(configuration.getProxyHost())__            clientConfiguration.setProxyPort(configuration.getProxyPort())__            isClientConfigFound = true__        }_        if (configuration.getAccessKey() != null && configuration.getSecretKey() != null) {_            AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__            AWSCredentialsProvider credentialsProvider = new AWSStaticCredentialsProvider(credentials)__            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration).withCredentials(credentialsProvider)__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withCredentials(credentialsProvider)__            }_        } else {_            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard()__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration)__            }_        }_        if (ObjectHelper.isNotEmpty(configuration.getRegion())) {_            clientBuilder = clientBuilder.withRegion(Regions.valueOf(configuration.getRegion()))__        }_        client = clientBuilder.build()__        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,amazon,sqs,client,null,amazon,sqsclient,builder,client,builder,null,client,configuration,client,configuration,null,boolean,is,client,config,found,false,if,object,helper,is,not,empty,configuration,get,proxy,host,object,helper,is,not,empty,configuration,get,proxy,port,client,configuration,new,client,configuration,client,configuration,set,proxy,host,configuration,get,proxy,host,client,configuration,set,proxy,port,configuration,get,proxy,port,is,client,config,found,true,if,configuration,get,access,key,null,configuration,get,secret,key,null,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,awscredentials,provider,credentials,provider,new,awsstatic,credentials,provider,credentials,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,with,credentials,credentials,provider,else,client,builder,amazon,sqsclient,builder,standard,with,credentials,credentials,provider,else,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,else,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,if,object,helper,is,not,empty,configuration,get,region,client,builder,client,builder,with,region,regions,value,of,configuration,get,region,client,client,builder,build,return,client
SqsEndpoint -> AmazonSQS createClient();1525873089;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AmazonSQS client = null__        AmazonSQSClientBuilder clientBuilder = null__        ClientConfiguration clientConfiguration = null__        boolean isClientConfigFound = false__        if (ObjectHelper.isNotEmpty(configuration.getProxyHost()) && ObjectHelper.isNotEmpty(configuration.getProxyPort())) {_            clientConfiguration = new ClientConfiguration()__            clientConfiguration.setProxyHost(configuration.getProxyHost())__            clientConfiguration.setProxyPort(configuration.getProxyPort())__            isClientConfigFound = true__        }_        if (configuration.getAccessKey() != null && configuration.getSecretKey() != null) {_            AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__            AWSCredentialsProvider credentialsProvider = new AWSStaticCredentialsProvider(credentials)__            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration).withCredentials(credentialsProvider)__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withCredentials(credentialsProvider)__            }_        } else {_            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard()__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration)__            }_        }_        if (ObjectHelper.isNotEmpty(configuration.getRegion())) {_            clientBuilder = clientBuilder.withRegion(Regions.valueOf(configuration.getRegion()))__        }_        client = clientBuilder.build()__        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,amazon,sqs,client,null,amazon,sqsclient,builder,client,builder,null,client,configuration,client,configuration,null,boolean,is,client,config,found,false,if,object,helper,is,not,empty,configuration,get,proxy,host,object,helper,is,not,empty,configuration,get,proxy,port,client,configuration,new,client,configuration,client,configuration,set,proxy,host,configuration,get,proxy,host,client,configuration,set,proxy,port,configuration,get,proxy,port,is,client,config,found,true,if,configuration,get,access,key,null,configuration,get,secret,key,null,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,awscredentials,provider,credentials,provider,new,awsstatic,credentials,provider,credentials,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,with,credentials,credentials,provider,else,client,builder,amazon,sqsclient,builder,standard,with,credentials,credentials,provider,else,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,else,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,if,object,helper,is,not,empty,configuration,get,region,client,builder,client,builder,with,region,regions,value,of,configuration,get,region,client,client,builder,build,return,client
SqsEndpoint -> AmazonSQS createClient();1537276637;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AmazonSQS client = null__        AmazonSQSClientBuilder clientBuilder = null__        ClientConfiguration clientConfiguration = null__        boolean isClientConfigFound = false__        if (ObjectHelper.isNotEmpty(configuration.getProxyHost()) && ObjectHelper.isNotEmpty(configuration.getProxyPort())) {_            clientConfiguration = new ClientConfiguration()__            clientConfiguration.setProxyHost(configuration.getProxyHost())__            clientConfiguration.setProxyPort(configuration.getProxyPort())__            isClientConfigFound = true__        }_        if (configuration.getAccessKey() != null && configuration.getSecretKey() != null) {_            AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__            AWSCredentialsProvider credentialsProvider = new AWSStaticCredentialsProvider(credentials)__            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration).withCredentials(credentialsProvider)__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withCredentials(credentialsProvider)__            }_        } else {_            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard()__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration)__            }_        }_        if (ObjectHelper.isNotEmpty(configuration.getRegion())) {_            clientBuilder = clientBuilder.withRegion(Regions.valueOf(configuration.getRegion()))__        }_        client = clientBuilder.build()__        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,amazon,sqs,client,null,amazon,sqsclient,builder,client,builder,null,client,configuration,client,configuration,null,boolean,is,client,config,found,false,if,object,helper,is,not,empty,configuration,get,proxy,host,object,helper,is,not,empty,configuration,get,proxy,port,client,configuration,new,client,configuration,client,configuration,set,proxy,host,configuration,get,proxy,host,client,configuration,set,proxy,port,configuration,get,proxy,port,is,client,config,found,true,if,configuration,get,access,key,null,configuration,get,secret,key,null,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,awscredentials,provider,credentials,provider,new,awsstatic,credentials,provider,credentials,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,with,credentials,credentials,provider,else,client,builder,amazon,sqsclient,builder,standard,with,credentials,credentials,provider,else,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,else,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,if,object,helper,is,not,empty,configuration,get,region,client,builder,client,builder,with,region,regions,value,of,configuration,get,region,client,client,builder,build,return,client
SqsEndpoint -> AmazonSQS createClient();1540108160;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AmazonSQS client = null__        AmazonSQSClientBuilder clientBuilder = null__        ClientConfiguration clientConfiguration = null__        boolean isClientConfigFound = false__        if (ObjectHelper.isNotEmpty(configuration.getProxyHost()) && ObjectHelper.isNotEmpty(configuration.getProxyPort())) {_            clientConfiguration = new ClientConfiguration()__            clientConfiguration.setProxyHost(configuration.getProxyHost())__            clientConfiguration.setProxyPort(configuration.getProxyPort())__            isClientConfigFound = true__        }_        if (configuration.getAccessKey() != null && configuration.getSecretKey() != null) {_            AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__            AWSCredentialsProvider credentialsProvider = new AWSStaticCredentialsProvider(credentials)__            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration).withCredentials(credentialsProvider)__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withCredentials(credentialsProvider)__            }_        } else {_            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard()__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration)__            }_        }_        if (ObjectHelper.isNotEmpty(configuration.getRegion())) {_            clientBuilder = clientBuilder.withRegion(Regions.valueOf(configuration.getRegion()))__        }_        client = clientBuilder.build()__        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,amazon,sqs,client,null,amazon,sqsclient,builder,client,builder,null,client,configuration,client,configuration,null,boolean,is,client,config,found,false,if,object,helper,is,not,empty,configuration,get,proxy,host,object,helper,is,not,empty,configuration,get,proxy,port,client,configuration,new,client,configuration,client,configuration,set,proxy,host,configuration,get,proxy,host,client,configuration,set,proxy,port,configuration,get,proxy,port,is,client,config,found,true,if,configuration,get,access,key,null,configuration,get,secret,key,null,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,awscredentials,provider,credentials,provider,new,awsstatic,credentials,provider,credentials,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,with,credentials,credentials,provider,else,client,builder,amazon,sqsclient,builder,standard,with,credentials,credentials,provider,else,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,else,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,if,object,helper,is,not,empty,configuration,get,region,client,builder,client,builder,with,region,regions,value,of,configuration,get,region,client,client,builder,build,return,client
SqsEndpoint -> AmazonSQS createClient();1540108163;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AmazonSQS client = null__        AmazonSQSClientBuilder clientBuilder = null__        ClientConfiguration clientConfiguration = null__        boolean isClientConfigFound = false__        if (ObjectHelper.isNotEmpty(configuration.getProxyHost()) && ObjectHelper.isNotEmpty(configuration.getProxyPort())) {_            clientConfiguration = new ClientConfiguration()__            clientConfiguration.setProxyHost(configuration.getProxyHost())__            clientConfiguration.setProxyPort(configuration.getProxyPort())__            isClientConfigFound = true__        }_        if (configuration.getAccessKey() != null && configuration.getSecretKey() != null) {_            AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__            AWSCredentialsProvider credentialsProvider = new AWSStaticCredentialsProvider(credentials)__            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration).withCredentials(credentialsProvider)__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withCredentials(credentialsProvider)__            }_        } else {_            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard()__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration)__            }_        }_        if (ObjectHelper.isNotEmpty(configuration.getRegion())) {_            clientBuilder = clientBuilder.withRegion(Regions.valueOf(configuration.getRegion()))__        }_        client = clientBuilder.build()__        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,amazon,sqs,client,null,amazon,sqsclient,builder,client,builder,null,client,configuration,client,configuration,null,boolean,is,client,config,found,false,if,object,helper,is,not,empty,configuration,get,proxy,host,object,helper,is,not,empty,configuration,get,proxy,port,client,configuration,new,client,configuration,client,configuration,set,proxy,host,configuration,get,proxy,host,client,configuration,set,proxy,port,configuration,get,proxy,port,is,client,config,found,true,if,configuration,get,access,key,null,configuration,get,secret,key,null,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,awscredentials,provider,credentials,provider,new,awsstatic,credentials,provider,credentials,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,with,credentials,credentials,provider,else,client,builder,amazon,sqsclient,builder,standard,with,credentials,credentials,provider,else,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,else,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,if,object,helper,is,not,empty,configuration,get,region,client,builder,client,builder,with,region,regions,value,of,configuration,get,region,client,client,builder,build,return,client
SqsEndpoint -> AmazonSQS createClient();1542010001;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AmazonSQS client = null__        AmazonSQSClientBuilder clientBuilder = null__        ClientConfiguration clientConfiguration = null__        boolean isClientConfigFound = false__        if (ObjectHelper.isNotEmpty(configuration.getProxyHost()) && ObjectHelper.isNotEmpty(configuration.getProxyPort())) {_            clientConfiguration = new ClientConfiguration()__            clientConfiguration.setProxyHost(configuration.getProxyHost())__            clientConfiguration.setProxyPort(configuration.getProxyPort())__            isClientConfigFound = true__        }_        if (configuration.getAccessKey() != null && configuration.getSecretKey() != null) {_            AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__            AWSCredentialsProvider credentialsProvider = new AWSStaticCredentialsProvider(credentials)__            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration).withCredentials(credentialsProvider)__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withCredentials(credentialsProvider)__            }_        } else {_            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard()__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration)__            }_        }_        if (ObjectHelper.isNotEmpty(configuration.getRegion())) {_            clientBuilder = clientBuilder.withRegion(Regions.valueOf(configuration.getRegion()))__        }_        client = clientBuilder.build()__        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,amazon,sqs,client,null,amazon,sqsclient,builder,client,builder,null,client,configuration,client,configuration,null,boolean,is,client,config,found,false,if,object,helper,is,not,empty,configuration,get,proxy,host,object,helper,is,not,empty,configuration,get,proxy,port,client,configuration,new,client,configuration,client,configuration,set,proxy,host,configuration,get,proxy,host,client,configuration,set,proxy,port,configuration,get,proxy,port,is,client,config,found,true,if,configuration,get,access,key,null,configuration,get,secret,key,null,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,awscredentials,provider,credentials,provider,new,awsstatic,credentials,provider,credentials,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,with,credentials,credentials,provider,else,client,builder,amazon,sqsclient,builder,standard,with,credentials,credentials,provider,else,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,else,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,if,object,helper,is,not,empty,configuration,get,region,client,builder,client,builder,with,region,regions,value,of,configuration,get,region,client,client,builder,build,return,client
SqsEndpoint -> AmazonSQS createClient();1544022795;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AmazonSQS client = null__        AmazonSQSClientBuilder clientBuilder = null__        ClientConfiguration clientConfiguration = null__        boolean isClientConfigFound = false__        if (ObjectHelper.isNotEmpty(configuration.getProxyHost()) && ObjectHelper.isNotEmpty(configuration.getProxyPort())) {_            clientConfiguration = new ClientConfiguration()__            clientConfiguration.setProxyHost(configuration.getProxyHost())__            clientConfiguration.setProxyPort(configuration.getProxyPort())__            isClientConfigFound = true__        }_        if (configuration.getAccessKey() != null && configuration.getSecretKey() != null) {_            AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__            AWSCredentialsProvider credentialsProvider = new AWSStaticCredentialsProvider(credentials)__            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration).withCredentials(credentialsProvider)__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withCredentials(credentialsProvider)__            }_        } else {_            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard()__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration)__            }_        }_        if (ObjectHelper.isNotEmpty(configuration.getRegion())) {_            clientBuilder = clientBuilder.withRegion(Regions.valueOf(configuration.getRegion()))__        }_        client = clientBuilder.build()__        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,amazon,sqs,client,null,amazon,sqsclient,builder,client,builder,null,client,configuration,client,configuration,null,boolean,is,client,config,found,false,if,object,helper,is,not,empty,configuration,get,proxy,host,object,helper,is,not,empty,configuration,get,proxy,port,client,configuration,new,client,configuration,client,configuration,set,proxy,host,configuration,get,proxy,host,client,configuration,set,proxy,port,configuration,get,proxy,port,is,client,config,found,true,if,configuration,get,access,key,null,configuration,get,secret,key,null,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,awscredentials,provider,credentials,provider,new,awsstatic,credentials,provider,credentials,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,with,credentials,credentials,provider,else,client,builder,amazon,sqsclient,builder,standard,with,credentials,credentials,provider,else,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,else,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,if,object,helper,is,not,empty,configuration,get,region,client,builder,client,builder,with,region,regions,value,of,configuration,get,region,client,client,builder,build,return,client
SqsEndpoint -> AmazonSQS createClient();1545381338;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AmazonSQS client = null__        AmazonSQSClientBuilder clientBuilder = null__        ClientConfiguration clientConfiguration = null__        boolean isClientConfigFound = false__        if (ObjectHelper.isNotEmpty(configuration.getProxyHost()) && ObjectHelper.isNotEmpty(configuration.getProxyPort())) {_            clientConfiguration = new ClientConfiguration()__            clientConfiguration.setProxyHost(configuration.getProxyHost())__            clientConfiguration.setProxyPort(configuration.getProxyPort())__            isClientConfigFound = true__        }_        if (configuration.getAccessKey() != null && configuration.getSecretKey() != null) {_            AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__            AWSCredentialsProvider credentialsProvider = new AWSStaticCredentialsProvider(credentials)__            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration).withCredentials(credentialsProvider)__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withCredentials(credentialsProvider)__            }_        } else {_            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard()__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration)__            }_        }_        if (ObjectHelper.isNotEmpty(configuration.getRegion())) {_            clientBuilder = clientBuilder.withRegion(Regions.valueOf(configuration.getRegion()))__        }_        client = clientBuilder.build()__        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,amazon,sqs,client,null,amazon,sqsclient,builder,client,builder,null,client,configuration,client,configuration,null,boolean,is,client,config,found,false,if,object,helper,is,not,empty,configuration,get,proxy,host,object,helper,is,not,empty,configuration,get,proxy,port,client,configuration,new,client,configuration,client,configuration,set,proxy,host,configuration,get,proxy,host,client,configuration,set,proxy,port,configuration,get,proxy,port,is,client,config,found,true,if,configuration,get,access,key,null,configuration,get,secret,key,null,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,awscredentials,provider,credentials,provider,new,awsstatic,credentials,provider,credentials,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,with,credentials,credentials,provider,else,client,builder,amazon,sqsclient,builder,standard,with,credentials,credentials,provider,else,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,else,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,if,object,helper,is,not,empty,configuration,get,region,client,builder,client,builder,with,region,regions,value,of,configuration,get,region,client,client,builder,build,return,client
SqsEndpoint -> AmazonSQS createClient();1547240981;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AmazonSQS client = null__        AmazonSQSClientBuilder clientBuilder = null__        ClientConfiguration clientConfiguration = null__        boolean isClientConfigFound = false__        if (ObjectHelper.isNotEmpty(configuration.getProxyHost()) && ObjectHelper.isNotEmpty(configuration.getProxyPort())) {_            clientConfiguration = new ClientConfiguration()__            clientConfiguration.setProxyHost(configuration.getProxyHost())__            clientConfiguration.setProxyPort(configuration.getProxyPort())__            isClientConfigFound = true__        }_        if (configuration.getAccessKey() != null && configuration.getSecretKey() != null) {_            AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__            AWSCredentialsProvider credentialsProvider = new AWSStaticCredentialsProvider(credentials)__            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration).withCredentials(credentialsProvider)__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withCredentials(credentialsProvider)__            }_        } else {_            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard()__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration)__            }_        }_        if (ObjectHelper.isNotEmpty(configuration.getRegion())) {_            clientBuilder = clientBuilder.withRegion(Regions.valueOf(configuration.getRegion()))__        }_        client = clientBuilder.build()__        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,amazon,sqs,client,null,amazon,sqsclient,builder,client,builder,null,client,configuration,client,configuration,null,boolean,is,client,config,found,false,if,object,helper,is,not,empty,configuration,get,proxy,host,object,helper,is,not,empty,configuration,get,proxy,port,client,configuration,new,client,configuration,client,configuration,set,proxy,host,configuration,get,proxy,host,client,configuration,set,proxy,port,configuration,get,proxy,port,is,client,config,found,true,if,configuration,get,access,key,null,configuration,get,secret,key,null,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,awscredentials,provider,credentials,provider,new,awsstatic,credentials,provider,credentials,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,with,credentials,credentials,provider,else,client,builder,amazon,sqsclient,builder,standard,with,credentials,credentials,provider,else,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,else,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,if,object,helper,is,not,empty,configuration,get,region,client,builder,client,builder,with,region,regions,value,of,configuration,get,region,client,client,builder,build,return,client
SqsEndpoint -> AmazonSQS createClient();1547480087;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQS createClient() {_        AmazonSQS client = null__        AmazonSQSClientBuilder clientBuilder = null__        ClientConfiguration clientConfiguration = null__        boolean isClientConfigFound = false__        if (ObjectHelper.isNotEmpty(configuration.getProxyHost()) && ObjectHelper.isNotEmpty(configuration.getProxyPort())) {_            clientConfiguration = new ClientConfiguration()__            clientConfiguration.setProxyHost(configuration.getProxyHost())__            clientConfiguration.setProxyPort(configuration.getProxyPort())__            isClientConfigFound = true__        }_        if (configuration.getAccessKey() != null && configuration.getSecretKey() != null) {_            AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__            AWSCredentialsProvider credentialsProvider = new AWSStaticCredentialsProvider(credentials)__            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration).withCredentials(credentialsProvider)__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withCredentials(credentialsProvider)__            }_        } else {_            if (isClientConfigFound) {_                clientBuilder = AmazonSQSClientBuilder.standard()__            } else {_                clientBuilder = AmazonSQSClientBuilder.standard().withClientConfiguration(clientConfiguration)__            }_        }_        if (ObjectHelper.isNotEmpty(configuration.getRegion())) {_            clientBuilder = clientBuilder.withRegion(Regions.valueOf(configuration.getRegion()))__        }_        client = clientBuilder.build()__        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqs,create,client,amazon,sqs,client,null,amazon,sqsclient,builder,client,builder,null,client,configuration,client,configuration,null,boolean,is,client,config,found,false,if,object,helper,is,not,empty,configuration,get,proxy,host,object,helper,is,not,empty,configuration,get,proxy,port,client,configuration,new,client,configuration,client,configuration,set,proxy,host,configuration,get,proxy,host,client,configuration,set,proxy,port,configuration,get,proxy,port,is,client,config,found,true,if,configuration,get,access,key,null,configuration,get,secret,key,null,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,awscredentials,provider,credentials,provider,new,awsstatic,credentials,provider,credentials,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,with,credentials,credentials,provider,else,client,builder,amazon,sqsclient,builder,standard,with,credentials,credentials,provider,else,if,is,client,config,found,client,builder,amazon,sqsclient,builder,standard,else,client,builder,amazon,sqsclient,builder,standard,with,client,configuration,client,configuration,if,object,helper,is,not,empty,configuration,get,region,client,builder,client,builder,with,region,regions,value,of,configuration,get,region,client,client,builder,build,return,client
SqsEndpoint -> AmazonSQSClient createClient();1294212870;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQSClient createClient() {_        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        return new AmazonSQSClient(credentials)__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqsclient,create,client,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,return,new,amazon,sqsclient,credentials
SqsEndpoint -> AmazonSQSClient createClient();1296234419;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQSClient createClient() {_        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        return new AmazonSQSClient(credentials)__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqsclient,create,client,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,return,new,amazon,sqsclient,credentials
SqsEndpoint -> AmazonSQSClient createClient();1296546062;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQSClient createClient() {_        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        return new AmazonSQSClient(credentials)__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqsclient,create,client,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,return,new,amazon,sqsclient,credentials
SqsEndpoint -> AmazonSQSClient createClient();1297975937;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQSClient createClient() {_        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        return new AmazonSQSClient(credentials)__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqsclient,create,client,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,return,new,amazon,sqsclient,credentials
SqsEndpoint -> AmazonSQSClient createClient();1300744323;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQSClient createClient() {_        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        return new AmazonSQSClient(credentials)__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqsclient,create,client,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,return,new,amazon,sqsclient,credentials
SqsEndpoint -> AmazonSQSClient createClient();1303067631;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQSClient createClient() {_        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        AmazonSQSClient client = new AmazonSQSClient(credentials)__        if (configuration.getAmazonSQSEndpoint() != null) {_            client.setEndpoint(configuration.getAmazonSQSEndpoint())__        }_        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqsclient,create,client,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,amazon,sqsclient,client,new,amazon,sqsclient,credentials,if,configuration,get,amazon,sqsendpoint,null,client,set,endpoint,configuration,get,amazon,sqsendpoint,return,client
SqsEndpoint -> AmazonSQSClient createClient();1305474445;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQSClient createClient() {_        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        AmazonSQSClient client = new AmazonSQSClient(credentials)__        if (configuration.getAmazonSQSEndpoint() != null) {_            client.setEndpoint(configuration.getAmazonSQSEndpoint())__        }_        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqsclient,create,client,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,amazon,sqsclient,client,new,amazon,sqsclient,credentials,if,configuration,get,amazon,sqsendpoint,null,client,set,endpoint,configuration,get,amazon,sqsendpoint,return,client
SqsEndpoint -> AmazonSQSClient createClient();1305513389;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQSClient createClient() {_        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        AmazonSQSClient client = new AmazonSQSClient(credentials)__        if (configuration.getAmazonSQSEndpoint() != null) {_            client.setEndpoint(configuration.getAmazonSQSEndpoint())__        }_        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqsclient,create,client,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,amazon,sqsclient,client,new,amazon,sqsclient,credentials,if,configuration,get,amazon,sqsendpoint,null,client,set,endpoint,configuration,get,amazon,sqsendpoint,return,client
SqsEndpoint -> AmazonSQSClient createClient();1323722534;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQSClient createClient() {_        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        AmazonSQSClient client = new AmazonSQSClient(credentials)__        if (configuration.getAmazonSQSEndpoint() != null) {_            client.setEndpoint(configuration.getAmazonSQSEndpoint())__        }_        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqsclient,create,client,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,amazon,sqsclient,client,new,amazon,sqsclient,credentials,if,configuration,get,amazon,sqsendpoint,null,client,set,endpoint,configuration,get,amazon,sqsendpoint,return,client
SqsEndpoint -> AmazonSQSClient createClient();1326561926;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQSClient createClient() {_        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        AmazonSQSClient client = new AmazonSQSClient(credentials)__        if (configuration.getAmazonSQSEndpoint() != null) {_            client.setEndpoint(configuration.getAmazonSQSEndpoint())__        }_        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqsclient,create,client,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,amazon,sqsclient,client,new,amazon,sqsclient,credentials,if,configuration,get,amazon,sqsendpoint,null,client,set,endpoint,configuration,get,amazon,sqsendpoint,return,client
SqsEndpoint -> AmazonSQSClient createClient();1345575944;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQSClient createClient() {_        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        AmazonSQSClient client = new AmazonSQSClient(credentials)__        if (configuration.getAmazonSQSEndpoint() != null) {_            client.setEndpoint(configuration.getAmazonSQSEndpoint())__        }_        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqsclient,create,client,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,amazon,sqsclient,client,new,amazon,sqsclient,credentials,if,configuration,get,amazon,sqsendpoint,null,client,set,endpoint,configuration,get,amazon,sqsendpoint,return,client
SqsEndpoint -> AmazonSQSClient createClient();1346874909;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQSClient createClient() {_        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        AmazonSQSClient client = new AmazonSQSClient(credentials)__        if (configuration.getAmazonSQSEndpoint() != null) {_            client.setEndpoint(configuration.getAmazonSQSEndpoint())__        }_        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqsclient,create,client,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,amazon,sqsclient,client,new,amazon,sqsclient,credentials,if,configuration,get,amazon,sqsendpoint,null,client,set,endpoint,configuration,get,amazon,sqsendpoint,return,client
SqsEndpoint -> AmazonSQSClient createClient();1348086048;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQSClient createClient() {_        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        AmazonSQSClient client = new AmazonSQSClient(credentials)__        if (configuration.getAmazonSQSEndpoint() != null) {_            client.setEndpoint(configuration.getAmazonSQSEndpoint())__        }_        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqsclient,create,client,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,amazon,sqsclient,client,new,amazon,sqsclient,credentials,if,configuration,get,amazon,sqsendpoint,null,client,set,endpoint,configuration,get,amazon,sqsendpoint,return,client
SqsEndpoint -> AmazonSQSClient createClient();1352545120;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQSClient createClient() {_        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        AmazonSQSClient client = new AmazonSQSClient(credentials)__        if (configuration.getAmazonSQSEndpoint() != null) {_            client.setEndpoint(configuration.getAmazonSQSEndpoint())__        }_        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqsclient,create,client,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,amazon,sqsclient,client,new,amazon,sqsclient,credentials,if,configuration,get,amazon,sqsendpoint,null,client,set,endpoint,configuration,get,amazon,sqsendpoint,return,client
SqsEndpoint -> AmazonSQSClient createClient();1353020951;Provide the possibility to override this method for an mock implementation_@return AmazonSQSClient;AmazonSQSClient createClient() {_        AWSCredentials credentials = new BasicAWSCredentials(configuration.getAccessKey(), configuration.getSecretKey())__        AmazonSQSClient client = new AmazonSQSClient(credentials)__        if (configuration.getAmazonSQSEndpoint() != null) {_            client.setEndpoint(configuration.getAmazonSQSEndpoint())__        }_        return client__    };provide,the,possibility,to,override,this,method,for,an,mock,implementation,return,amazon,sqsclient;amazon,sqsclient,create,client,awscredentials,credentials,new,basic,awscredentials,configuration,get,access,key,configuration,get,secret,key,amazon,sqsclient,client,new,amazon,sqsclient,credentials,if,configuration,get,amazon,sqsendpoint,null,client,set,endpoint,configuration,get,amazon,sqsendpoint,return,client
SqsEndpoint -> public void setMaxMessagesPerPoll(int maxMessagesPerPoll);1431086344;Gets the maximum number of messages as a limit to poll at each polling._<p/>_Is default unlimited, but use 0 or negative number to disable it as unlimited.;public void setMaxMessagesPerPoll(int maxMessagesPerPoll) {_        this.maxMessagesPerPoll = maxMessagesPerPoll__    };gets,the,maximum,number,of,messages,as,a,limit,to,poll,at,each,polling,p,is,default,unlimited,but,use,0,or,negative,number,to,disable,it,as,unlimited;public,void,set,max,messages,per,poll,int,max,messages,per,poll,this,max,messages,per,poll,max,messages,per,poll
SqsEndpoint -> public void setMaxMessagesPerPoll(int maxMessagesPerPoll);1438357088;Gets the maximum number of messages as a limit to poll at each polling._<p/>_Is default unlimited, but use 0 or negative number to disable it as unlimited.;public void setMaxMessagesPerPoll(int maxMessagesPerPoll) {_        this.maxMessagesPerPoll = maxMessagesPerPoll__    };gets,the,maximum,number,of,messages,as,a,limit,to,poll,at,each,polling,p,is,default,unlimited,but,use,0,or,negative,number,to,disable,it,as,unlimited;public,void,set,max,messages,per,poll,int,max,messages,per,poll,this,max,messages,per,poll,max,messages,per,poll
SqsEndpoint -> public void setMaxMessagesPerPoll(int maxMessagesPerPoll);1439194111;Gets the maximum number of messages as a limit to poll at each polling._<p/>_Is default unlimited, but use 0 or negative number to disable it as unlimited.;public void setMaxMessagesPerPoll(int maxMessagesPerPoll) {_        this.maxMessagesPerPoll = maxMessagesPerPoll__    };gets,the,maximum,number,of,messages,as,a,limit,to,poll,at,each,polling,p,is,default,unlimited,but,use,0,or,negative,number,to,disable,it,as,unlimited;public,void,set,max,messages,per,poll,int,max,messages,per,poll,this,max,messages,per,poll,max,messages,per,poll
SqsEndpoint -> public void setMaxMessagesPerPoll(int maxMessagesPerPoll);1451237123;Gets the maximum number of messages as a limit to poll at each polling._<p/>_Is default unlimited, but use 0 or negative number to disable it as unlimited.;public void setMaxMessagesPerPoll(int maxMessagesPerPoll) {_        this.maxMessagesPerPoll = maxMessagesPerPoll__    };gets,the,maximum,number,of,messages,as,a,limit,to,poll,at,each,polling,p,is,default,unlimited,but,use,0,or,negative,number,to,disable,it,as,unlimited;public,void,set,max,messages,per,poll,int,max,messages,per,poll,this,max,messages,per,poll,max,messages,per,poll
SqsEndpoint -> public void setMaxMessagesPerPoll(int maxMessagesPerPoll);1451237124;Gets the maximum number of messages as a limit to poll at each polling._<p/>_Is default unlimited, but use 0 or negative number to disable it as unlimited.;public void setMaxMessagesPerPoll(int maxMessagesPerPoll) {_        this.maxMessagesPerPoll = maxMessagesPerPoll__    };gets,the,maximum,number,of,messages,as,a,limit,to,poll,at,each,polling,p,is,default,unlimited,but,use,0,or,negative,number,to,disable,it,as,unlimited;public,void,set,max,messages,per,poll,int,max,messages,per,poll,this,max,messages,per,poll,max,messages,per,poll
SqsEndpoint -> public void setMaxMessagesPerPoll(int maxMessagesPerPoll);1451410872;Gets the maximum number of messages as a limit to poll at each polling._<p/>_Is default unlimited, but use 0 or negative number to disable it as unlimited.;public void setMaxMessagesPerPoll(int maxMessagesPerPoll) {_        this.maxMessagesPerPoll = maxMessagesPerPoll__    };gets,the,maximum,number,of,messages,as,a,limit,to,poll,at,each,polling,p,is,default,unlimited,but,use,0,or,negative,number,to,disable,it,as,unlimited;public,void,set,max,messages,per,poll,int,max,messages,per,poll,this,max,messages,per,poll,max,messages,per,poll
SqsEndpoint -> public void setMaxMessagesPerPoll(int maxMessagesPerPoll);1460635929;Gets the maximum number of messages as a limit to poll at each polling._<p/>_Is default unlimited, but use 0 or negative number to disable it as unlimited.;public void setMaxMessagesPerPoll(int maxMessagesPerPoll) {_        this.maxMessagesPerPoll = maxMessagesPerPoll__    };gets,the,maximum,number,of,messages,as,a,limit,to,poll,at,each,polling,p,is,default,unlimited,but,use,0,or,negative,number,to,disable,it,as,unlimited;public,void,set,max,messages,per,poll,int,max,messages,per,poll,this,max,messages,per,poll,max,messages,per,poll
SqsEndpoint -> public void setMaxMessagesPerPoll(int maxMessagesPerPoll);1460636484;Gets the maximum number of messages as a limit to poll at each polling._<p/>_Is default unlimited, but use 0 or negative number to disable it as unlimited.;public void setMaxMessagesPerPoll(int maxMessagesPerPoll) {_        this.maxMessagesPerPoll = maxMessagesPerPoll__    };gets,the,maximum,number,of,messages,as,a,limit,to,poll,at,each,polling,p,is,default,unlimited,but,use,0,or,negative,number,to,disable,it,as,unlimited;public,void,set,max,messages,per,poll,int,max,messages,per,poll,this,max,messages,per,poll,max,messages,per,poll
SqsEndpoint -> public void setMaxMessagesPerPoll(int maxMessagesPerPoll);1484985735;Gets the maximum number of messages as a limit to poll at each polling._<p/>_Is default unlimited, but use 0 or negative number to disable it as unlimited.;public void setMaxMessagesPerPoll(int maxMessagesPerPoll) {_        this.maxMessagesPerPoll = maxMessagesPerPoll__    };gets,the,maximum,number,of,messages,as,a,limit,to,poll,at,each,polling,p,is,default,unlimited,but,use,0,or,negative,number,to,disable,it,as,unlimited;public,void,set,max,messages,per,poll,int,max,messages,per,poll,this,max,messages,per,poll,max,messages,per,poll
SqsEndpoint -> public void setMaxMessagesPerPoll(int maxMessagesPerPoll);1486048238;Gets the maximum number of messages as a limit to poll at each polling._<p/>_Is default unlimited, but use 0 or negative number to disable it as unlimited.;public void setMaxMessagesPerPoll(int maxMessagesPerPoll) {_        this.maxMessagesPerPoll = maxMessagesPerPoll__    };gets,the,maximum,number,of,messages,as,a,limit,to,poll,at,each,polling,p,is,default,unlimited,but,use,0,or,negative,number,to,disable,it,as,unlimited;public,void,set,max,messages,per,poll,int,max,messages,per,poll,this,max,messages,per,poll,max,messages,per,poll
SqsEndpoint -> public void setMaxMessagesPerPoll(int maxMessagesPerPoll);1490431914;Gets the maximum number of messages as a limit to poll at each polling._<p/>_Is default unlimited, but use 0 or negative number to disable it as unlimited.;public void setMaxMessagesPerPoll(int maxMessagesPerPoll) {_        this.maxMessagesPerPoll = maxMessagesPerPoll__    };gets,the,maximum,number,of,messages,as,a,limit,to,poll,at,each,polling,p,is,default,unlimited,but,use,0,or,negative,number,to,disable,it,as,unlimited;public,void,set,max,messages,per,poll,int,max,messages,per,poll,this,max,messages,per,poll,max,messages,per,poll
SqsEndpoint -> public void setMaxMessagesPerPoll(int maxMessagesPerPoll);1503646409;Gets the maximum number of messages as a limit to poll at each polling._<p/>_Is default unlimited, but use 0 or negative number to disable it as unlimited.;public void setMaxMessagesPerPoll(int maxMessagesPerPoll) {_        this.maxMessagesPerPoll = maxMessagesPerPoll__    };gets,the,maximum,number,of,messages,as,a,limit,to,poll,at,each,polling,p,is,default,unlimited,but,use,0,or,negative,number,to,disable,it,as,unlimited;public,void,set,max,messages,per,poll,int,max,messages,per,poll,this,max,messages,per,poll,max,messages,per,poll
SqsEndpoint -> public void setMaxMessagesPerPoll(int maxMessagesPerPoll);1504265552;Gets the maximum number of messages as a limit to poll at each polling._<p/>_Is default unlimited, but use 0 or negative number to disable it as unlimited.;public void setMaxMessagesPerPoll(int maxMessagesPerPoll) {_        this.maxMessagesPerPoll = maxMessagesPerPoll__    };gets,the,maximum,number,of,messages,as,a,limit,to,poll,at,each,polling,p,is,default,unlimited,but,use,0,or,negative,number,to,disable,it,as,unlimited;public,void,set,max,messages,per,poll,int,max,messages,per,poll,this,max,messages,per,poll,max,messages,per,poll
SqsEndpoint -> public void setMaxMessagesPerPoll(int maxMessagesPerPoll);1512655542;Gets the maximum number of messages as a limit to poll at each polling._<p/>_Is default unlimited, but use 0 or negative number to disable it as unlimited.;public void setMaxMessagesPerPoll(int maxMessagesPerPoll) {_        this.maxMessagesPerPoll = maxMessagesPerPoll__    };gets,the,maximum,number,of,messages,as,a,limit,to,poll,at,each,polling,p,is,default,unlimited,but,use,0,or,negative,number,to,disable,it,as,unlimited;public,void,set,max,messages,per,poll,int,max,messages,per,poll,this,max,messages,per,poll,max,messages,per,poll
SqsEndpoint -> public void setMaxMessagesPerPoll(int maxMessagesPerPoll);1517996299;Gets the maximum number of messages as a limit to poll at each polling._<p/>_Is default unlimited, but use 0 or negative number to disable it as unlimited.;public void setMaxMessagesPerPoll(int maxMessagesPerPoll) {_        this.maxMessagesPerPoll = maxMessagesPerPoll__    };gets,the,maximum,number,of,messages,as,a,limit,to,poll,at,each,polling,p,is,default,unlimited,but,use,0,or,negative,number,to,disable,it,as,unlimited;public,void,set,max,messages,per,poll,int,max,messages,per,poll,this,max,messages,per,poll,max,messages,per,poll
SqsEndpoint -> public void setMaxMessagesPerPoll(int maxMessagesPerPoll);1518684083;Gets the maximum number of messages as a limit to poll at each polling._<p/>_Is default unlimited, but use 0 or negative number to disable it as unlimited.;public void setMaxMessagesPerPoll(int maxMessagesPerPoll) {_        this.maxMessagesPerPoll = maxMessagesPerPoll__    };gets,the,maximum,number,of,messages,as,a,limit,to,poll,at,each,polling,p,is,default,unlimited,but,use,0,or,negative,number,to,disable,it,as,unlimited;public,void,set,max,messages,per,poll,int,max,messages,per,poll,this,max,messages,per,poll,max,messages,per,poll
SqsEndpoint -> public void setMaxMessagesPerPoll(int maxMessagesPerPoll);1521530281;Gets the maximum number of messages as a limit to poll at each polling._<p/>_Is default unlimited, but use 0 or negative number to disable it as unlimited.;public void setMaxMessagesPerPoll(int maxMessagesPerPoll) {_        this.maxMessagesPerPoll = maxMessagesPerPoll__    };gets,the,maximum,number,of,messages,as,a,limit,to,poll,at,each,polling,p,is,default,unlimited,but,use,0,or,negative,number,to,disable,it,as,unlimited;public,void,set,max,messages,per,poll,int,max,messages,per,poll,this,max,messages,per,poll,max,messages,per,poll
SqsEndpoint -> public void setMaxMessagesPerPoll(int maxMessagesPerPoll);1525346406;Gets the maximum number of messages as a limit to poll at each polling._<p/>_Is default unlimited, but use 0 or negative number to disable it as unlimited.;public void setMaxMessagesPerPoll(int maxMessagesPerPoll) {_        this.maxMessagesPerPoll = maxMessagesPerPoll__    };gets,the,maximum,number,of,messages,as,a,limit,to,poll,at,each,polling,p,is,default,unlimited,but,use,0,or,negative,number,to,disable,it,as,unlimited;public,void,set,max,messages,per,poll,int,max,messages,per,poll,this,max,messages,per,poll,max,messages,per,poll
SqsEndpoint -> public void setMaxMessagesPerPoll(int maxMessagesPerPoll);1525346406;Gets the maximum number of messages as a limit to poll at each polling._<p/>_Is default unlimited, but use 0 or negative number to disable it as unlimited.;public void setMaxMessagesPerPoll(int maxMessagesPerPoll) {_        this.maxMessagesPerPoll = maxMessagesPerPoll__    };gets,the,maximum,number,of,messages,as,a,limit,to,poll,at,each,polling,p,is,default,unlimited,but,use,0,or,negative,number,to,disable,it,as,unlimited;public,void,set,max,messages,per,poll,int,max,messages,per,poll,this,max,messages,per,poll,max,messages,per,poll
SqsEndpoint -> public void setMaxMessagesPerPoll(int maxMessagesPerPoll);1525873089;Gets the maximum number of messages as a limit to poll at each polling._<p/>_Is default unlimited, but use 0 or negative number to disable it as unlimited.;public void setMaxMessagesPerPoll(int maxMessagesPerPoll) {_        this.maxMessagesPerPoll = maxMessagesPerPoll__    };gets,the,maximum,number,of,messages,as,a,limit,to,poll,at,each,polling,p,is,default,unlimited,but,use,0,or,negative,number,to,disable,it,as,unlimited;public,void,set,max,messages,per,poll,int,max,messages,per,poll,this,max,messages,per,poll,max,messages,per,poll
SqsEndpoint -> public void setMaxMessagesPerPoll(int maxMessagesPerPoll);1537276637;Gets the maximum number of messages as a limit to poll at each polling._<p/>_Is default unlimited, but use 0 or negative number to disable it as unlimited.;public void setMaxMessagesPerPoll(int maxMessagesPerPoll) {_        this.maxMessagesPerPoll = maxMessagesPerPoll__    };gets,the,maximum,number,of,messages,as,a,limit,to,poll,at,each,polling,p,is,default,unlimited,but,use,0,or,negative,number,to,disable,it,as,unlimited;public,void,set,max,messages,per,poll,int,max,messages,per,poll,this,max,messages,per,poll,max,messages,per,poll
SqsEndpoint -> public void setMaxMessagesPerPoll(int maxMessagesPerPoll);1540108160;Gets the maximum number of messages as a limit to poll at each polling._<p/>_Is default unlimited, but use 0 or negative number to disable it as unlimited.;public void setMaxMessagesPerPoll(int maxMessagesPerPoll) {_        this.maxMessagesPerPoll = maxMessagesPerPoll__    };gets,the,maximum,number,of,messages,as,a,limit,to,poll,at,each,polling,p,is,default,unlimited,but,use,0,or,negative,number,to,disable,it,as,unlimited;public,void,set,max,messages,per,poll,int,max,messages,per,poll,this,max,messages,per,poll,max,messages,per,poll
SqsEndpoint -> public void setMaxMessagesPerPoll(int maxMessagesPerPoll);1540108163;Gets the maximum number of messages as a limit to poll at each polling._<p/>_Is default unlimited, but use 0 or negative number to disable it as unlimited.;public void setMaxMessagesPerPoll(int maxMessagesPerPoll) {_        this.maxMessagesPerPoll = maxMessagesPerPoll__    };gets,the,maximum,number,of,messages,as,a,limit,to,poll,at,each,polling,p,is,default,unlimited,but,use,0,or,negative,number,to,disable,it,as,unlimited;public,void,set,max,messages,per,poll,int,max,messages,per,poll,this,max,messages,per,poll,max,messages,per,poll
SqsEndpoint -> public void setMaxMessagesPerPoll(int maxMessagesPerPoll);1542010001;Gets the maximum number of messages as a limit to poll at each polling._<p/>_Is default unlimited, but use 0 or negative number to disable it as unlimited.;public void setMaxMessagesPerPoll(int maxMessagesPerPoll) {_        this.maxMessagesPerPoll = maxMessagesPerPoll__    };gets,the,maximum,number,of,messages,as,a,limit,to,poll,at,each,polling,p,is,default,unlimited,but,use,0,or,negative,number,to,disable,it,as,unlimited;public,void,set,max,messages,per,poll,int,max,messages,per,poll,this,max,messages,per,poll,max,messages,per,poll
SqsEndpoint -> public void setMaxMessagesPerPoll(int maxMessagesPerPoll);1544022795;Gets the maximum number of messages as a limit to poll at each polling._<p/>_Is default unlimited, but use 0 or negative number to disable it as unlimited.;public void setMaxMessagesPerPoll(int maxMessagesPerPoll) {_        this.maxMessagesPerPoll = maxMessagesPerPoll__    };gets,the,maximum,number,of,messages,as,a,limit,to,poll,at,each,polling,p,is,default,unlimited,but,use,0,or,negative,number,to,disable,it,as,unlimited;public,void,set,max,messages,per,poll,int,max,messages,per,poll,this,max,messages,per,poll,max,messages,per,poll
SqsEndpoint -> public void setMaxMessagesPerPoll(int maxMessagesPerPoll);1545381338;Gets the maximum number of messages as a limit to poll at each polling._<p/>_Is default unlimited, but use 0 or negative number to disable it as unlimited.;public void setMaxMessagesPerPoll(int maxMessagesPerPoll) {_        this.maxMessagesPerPoll = maxMessagesPerPoll__    };gets,the,maximum,number,of,messages,as,a,limit,to,poll,at,each,polling,p,is,default,unlimited,but,use,0,or,negative,number,to,disable,it,as,unlimited;public,void,set,max,messages,per,poll,int,max,messages,per,poll,this,max,messages,per,poll,max,messages,per,poll
SqsEndpoint -> public void setMaxMessagesPerPoll(int maxMessagesPerPoll);1547240981;Gets the maximum number of messages as a limit to poll at each polling._<p/>_Is default unlimited, but use 0 or negative number to disable it as unlimited.;public void setMaxMessagesPerPoll(int maxMessagesPerPoll) {_        this.maxMessagesPerPoll = maxMessagesPerPoll__    };gets,the,maximum,number,of,messages,as,a,limit,to,poll,at,each,polling,p,is,default,unlimited,but,use,0,or,negative,number,to,disable,it,as,unlimited;public,void,set,max,messages,per,poll,int,max,messages,per,poll,this,max,messages,per,poll,max,messages,per,poll
SqsEndpoint -> public void setMaxMessagesPerPoll(int maxMessagesPerPoll);1547480087;Gets the maximum number of messages as a limit to poll at each polling._<p/>_Is default unlimited, but use 0 or negative number to disable it as unlimited.;public void setMaxMessagesPerPoll(int maxMessagesPerPoll) {_        this.maxMessagesPerPoll = maxMessagesPerPoll__    };gets,the,maximum,number,of,messages,as,a,limit,to,poll,at,each,polling,p,is,default,unlimited,but,use,0,or,negative,number,to,disable,it,as,unlimited;public,void,set,max,messages,per,poll,int,max,messages,per,poll,this,max,messages,per,poll,max,messages,per,poll
SqsEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy strategy);1431086344;To use a custom HeaderFilterStrategy to map headers to/from Camel.;public void setHeaderFilterStrategy(HeaderFilterStrategy strategy) {_        this.headerFilterStrategy = strategy__    };to,use,a,custom,header,filter,strategy,to,map,headers,to,from,camel;public,void,set,header,filter,strategy,header,filter,strategy,strategy,this,header,filter,strategy,strategy
SqsEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy strategy);1438357088;To use a custom HeaderFilterStrategy to map headers to/from Camel.;public void setHeaderFilterStrategy(HeaderFilterStrategy strategy) {_        this.headerFilterStrategy = strategy__    };to,use,a,custom,header,filter,strategy,to,map,headers,to,from,camel;public,void,set,header,filter,strategy,header,filter,strategy,strategy,this,header,filter,strategy,strategy
SqsEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy strategy);1439194111;To use a custom HeaderFilterStrategy to map headers to/from Camel.;public void setHeaderFilterStrategy(HeaderFilterStrategy strategy) {_        this.headerFilterStrategy = strategy__    };to,use,a,custom,header,filter,strategy,to,map,headers,to,from,camel;public,void,set,header,filter,strategy,header,filter,strategy,strategy,this,header,filter,strategy,strategy
SqsEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy strategy);1451237123;To use a custom HeaderFilterStrategy to map headers to/from Camel.;public void setHeaderFilterStrategy(HeaderFilterStrategy strategy) {_        this.headerFilterStrategy = strategy__    };to,use,a,custom,header,filter,strategy,to,map,headers,to,from,camel;public,void,set,header,filter,strategy,header,filter,strategy,strategy,this,header,filter,strategy,strategy
SqsEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy strategy);1451237124;To use a custom HeaderFilterStrategy to map headers to/from Camel.;public void setHeaderFilterStrategy(HeaderFilterStrategy strategy) {_        this.headerFilterStrategy = strategy__    };to,use,a,custom,header,filter,strategy,to,map,headers,to,from,camel;public,void,set,header,filter,strategy,header,filter,strategy,strategy,this,header,filter,strategy,strategy
SqsEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy strategy);1451410872;To use a custom HeaderFilterStrategy to map headers to/from Camel.;public void setHeaderFilterStrategy(HeaderFilterStrategy strategy) {_        this.headerFilterStrategy = strategy__    };to,use,a,custom,header,filter,strategy,to,map,headers,to,from,camel;public,void,set,header,filter,strategy,header,filter,strategy,strategy,this,header,filter,strategy,strategy
SqsEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy strategy);1460635929;To use a custom HeaderFilterStrategy to map headers to/from Camel.;public void setHeaderFilterStrategy(HeaderFilterStrategy strategy) {_        this.headerFilterStrategy = strategy__    };to,use,a,custom,header,filter,strategy,to,map,headers,to,from,camel;public,void,set,header,filter,strategy,header,filter,strategy,strategy,this,header,filter,strategy,strategy
SqsEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy strategy);1460636484;To use a custom HeaderFilterStrategy to map headers to/from Camel.;public void setHeaderFilterStrategy(HeaderFilterStrategy strategy) {_        this.headerFilterStrategy = strategy__    };to,use,a,custom,header,filter,strategy,to,map,headers,to,from,camel;public,void,set,header,filter,strategy,header,filter,strategy,strategy,this,header,filter,strategy,strategy
SqsEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy strategy);1484985735;To use a custom HeaderFilterStrategy to map headers to/from Camel.;public void setHeaderFilterStrategy(HeaderFilterStrategy strategy) {_        this.headerFilterStrategy = strategy__    };to,use,a,custom,header,filter,strategy,to,map,headers,to,from,camel;public,void,set,header,filter,strategy,header,filter,strategy,strategy,this,header,filter,strategy,strategy
SqsEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy strategy);1486048238;To use a custom HeaderFilterStrategy to map headers to/from Camel.;public void setHeaderFilterStrategy(HeaderFilterStrategy strategy) {_        this.headerFilterStrategy = strategy__    };to,use,a,custom,header,filter,strategy,to,map,headers,to,from,camel;public,void,set,header,filter,strategy,header,filter,strategy,strategy,this,header,filter,strategy,strategy
SqsEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy strategy);1490431914;To use a custom HeaderFilterStrategy to map headers to/from Camel.;public void setHeaderFilterStrategy(HeaderFilterStrategy strategy) {_        this.headerFilterStrategy = strategy__    };to,use,a,custom,header,filter,strategy,to,map,headers,to,from,camel;public,void,set,header,filter,strategy,header,filter,strategy,strategy,this,header,filter,strategy,strategy
SqsEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy strategy);1503646409;To use a custom HeaderFilterStrategy to map headers to/from Camel.;public void setHeaderFilterStrategy(HeaderFilterStrategy strategy) {_        this.headerFilterStrategy = strategy__    };to,use,a,custom,header,filter,strategy,to,map,headers,to,from,camel;public,void,set,header,filter,strategy,header,filter,strategy,strategy,this,header,filter,strategy,strategy
SqsEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy strategy);1504265552;To use a custom HeaderFilterStrategy to map headers to/from Camel.;public void setHeaderFilterStrategy(HeaderFilterStrategy strategy) {_        this.headerFilterStrategy = strategy__    };to,use,a,custom,header,filter,strategy,to,map,headers,to,from,camel;public,void,set,header,filter,strategy,header,filter,strategy,strategy,this,header,filter,strategy,strategy
SqsEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy strategy);1512655542;To use a custom HeaderFilterStrategy to map headers to/from Camel.;public void setHeaderFilterStrategy(HeaderFilterStrategy strategy) {_        this.headerFilterStrategy = strategy__    };to,use,a,custom,header,filter,strategy,to,map,headers,to,from,camel;public,void,set,header,filter,strategy,header,filter,strategy,strategy,this,header,filter,strategy,strategy
SqsEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy strategy);1517996299;To use a custom HeaderFilterStrategy to map headers to/from Camel.;public void setHeaderFilterStrategy(HeaderFilterStrategy strategy) {_        this.headerFilterStrategy = strategy__    };to,use,a,custom,header,filter,strategy,to,map,headers,to,from,camel;public,void,set,header,filter,strategy,header,filter,strategy,strategy,this,header,filter,strategy,strategy
SqsEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy strategy);1518684083;To use a custom HeaderFilterStrategy to map headers to/from Camel.;public void setHeaderFilterStrategy(HeaderFilterStrategy strategy) {_        this.headerFilterStrategy = strategy__    };to,use,a,custom,header,filter,strategy,to,map,headers,to,from,camel;public,void,set,header,filter,strategy,header,filter,strategy,strategy,this,header,filter,strategy,strategy
SqsEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy strategy);1521530281;To use a custom HeaderFilterStrategy to map headers to/from Camel.;public void setHeaderFilterStrategy(HeaderFilterStrategy strategy) {_        this.headerFilterStrategy = strategy__    };to,use,a,custom,header,filter,strategy,to,map,headers,to,from,camel;public,void,set,header,filter,strategy,header,filter,strategy,strategy,this,header,filter,strategy,strategy
SqsEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy strategy);1525346406;To use a custom HeaderFilterStrategy to map headers to/from Camel.;public void setHeaderFilterStrategy(HeaderFilterStrategy strategy) {_        this.headerFilterStrategy = strategy__    };to,use,a,custom,header,filter,strategy,to,map,headers,to,from,camel;public,void,set,header,filter,strategy,header,filter,strategy,strategy,this,header,filter,strategy,strategy
SqsEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy strategy);1525346406;To use a custom HeaderFilterStrategy to map headers to/from Camel.;public void setHeaderFilterStrategy(HeaderFilterStrategy strategy) {_        this.headerFilterStrategy = strategy__    };to,use,a,custom,header,filter,strategy,to,map,headers,to,from,camel;public,void,set,header,filter,strategy,header,filter,strategy,strategy,this,header,filter,strategy,strategy
SqsEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy strategy);1525873089;To use a custom HeaderFilterStrategy to map headers to/from Camel.;public void setHeaderFilterStrategy(HeaderFilterStrategy strategy) {_        this.headerFilterStrategy = strategy__    };to,use,a,custom,header,filter,strategy,to,map,headers,to,from,camel;public,void,set,header,filter,strategy,header,filter,strategy,strategy,this,header,filter,strategy,strategy
SqsEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy strategy);1537276637;To use a custom HeaderFilterStrategy to map headers to/from Camel.;public void setHeaderFilterStrategy(HeaderFilterStrategy strategy) {_        this.headerFilterStrategy = strategy__    };to,use,a,custom,header,filter,strategy,to,map,headers,to,from,camel;public,void,set,header,filter,strategy,header,filter,strategy,strategy,this,header,filter,strategy,strategy
SqsEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy strategy);1540108160;To use a custom HeaderFilterStrategy to map headers to/from Camel.;public void setHeaderFilterStrategy(HeaderFilterStrategy strategy) {_        this.headerFilterStrategy = strategy__    };to,use,a,custom,header,filter,strategy,to,map,headers,to,from,camel;public,void,set,header,filter,strategy,header,filter,strategy,strategy,this,header,filter,strategy,strategy
SqsEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy strategy);1540108163;To use a custom HeaderFilterStrategy to map headers to/from Camel.;public void setHeaderFilterStrategy(HeaderFilterStrategy strategy) {_        this.headerFilterStrategy = strategy__    };to,use,a,custom,header,filter,strategy,to,map,headers,to,from,camel;public,void,set,header,filter,strategy,header,filter,strategy,strategy,this,header,filter,strategy,strategy
SqsEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy strategy);1542010001;To use a custom HeaderFilterStrategy to map headers to/from Camel.;public void setHeaderFilterStrategy(HeaderFilterStrategy strategy) {_        this.headerFilterStrategy = strategy__    };to,use,a,custom,header,filter,strategy,to,map,headers,to,from,camel;public,void,set,header,filter,strategy,header,filter,strategy,strategy,this,header,filter,strategy,strategy
SqsEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy strategy);1544022795;To use a custom HeaderFilterStrategy to map headers to/from Camel.;public void setHeaderFilterStrategy(HeaderFilterStrategy strategy) {_        this.headerFilterStrategy = strategy__    };to,use,a,custom,header,filter,strategy,to,map,headers,to,from,camel;public,void,set,header,filter,strategy,header,filter,strategy,strategy,this,header,filter,strategy,strategy
SqsEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy strategy);1545381338;To use a custom HeaderFilterStrategy to map headers to/from Camel.;public void setHeaderFilterStrategy(HeaderFilterStrategy strategy) {_        this.headerFilterStrategy = strategy__    };to,use,a,custom,header,filter,strategy,to,map,headers,to,from,camel;public,void,set,header,filter,strategy,header,filter,strategy,strategy,this,header,filter,strategy,strategy
SqsEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy strategy);1547240981;To use a custom HeaderFilterStrategy to map headers to/from Camel.;public void setHeaderFilterStrategy(HeaderFilterStrategy strategy) {_        this.headerFilterStrategy = strategy__    };to,use,a,custom,header,filter,strategy,to,map,headers,to,from,camel;public,void,set,header,filter,strategy,header,filter,strategy,strategy,this,header,filter,strategy,strategy
SqsEndpoint -> public void setHeaderFilterStrategy(HeaderFilterStrategy strategy);1547480087;To use a custom HeaderFilterStrategy to map headers to/from Camel.;public void setHeaderFilterStrategy(HeaderFilterStrategy strategy) {_        this.headerFilterStrategy = strategy__    };to,use,a,custom,header,filter,strategy,to,map,headers,to,from,camel;public,void,set,header,filter,strategy,header,filter,strategy,strategy,this,header,filter,strategy,strategy
