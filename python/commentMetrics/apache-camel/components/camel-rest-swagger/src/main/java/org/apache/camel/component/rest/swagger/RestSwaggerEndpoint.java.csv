# id;timestamp;commentText;codeText;commentWords;codeWords
RestSwaggerEndpoint -> static Swagger loadSpecificationFrom(final CamelContext camelContext, final URI uri) throws IOException;1489699700;Loads the Swagger definition model from the given path. Tries to resolve_the resource using Camel's resource loading support, if it fails uses_Swagger's resource loading support instead.__@param uri URI of the specification_@param camelContext context to use_@return the specification_@throws IOException;static Swagger loadSpecificationFrom(final CamelContext camelContext, final URI uri) throws IOException {_        final ObjectMapper mapper = Json.mapper()___        final SwaggerParser swaggerParser = new SwaggerParser()___        final String uriAsString = uri.toString()___        try (InputStream stream = ResourceHelper.resolveMandatoryResourceAsInputStream(camelContext, uriAsString)) {_            final JsonNode node = mapper.readTree(stream)___            return swaggerParser.read(node)__        } catch (final IOException e) {_            _            final Swagger swagger = swaggerParser.read(uriAsString)___            if (swagger != null) {_                return swagger__            }__            throw new IllegalArgumentException("The given Swagger specification could not be loaded from `" + uri_                + "`. Tried loading using Camel's resource resolution and using Swagger's own resource resolution."_                + " Swagger tends to swallow exceptions while parsing, try specifying Java system property `debugParser`"_                + " (e.g. `-DdebugParser=true`), the exception that occured when loading using Camel's resource"_                + " loader follows", e)__        }_    };loads,the,swagger,definition,model,from,the,given,path,tries,to,resolve,the,resource,using,camel,s,resource,loading,support,if,it,fails,uses,swagger,s,resource,loading,support,instead,param,uri,uri,of,the,specification,param,camel,context,context,to,use,return,the,specification,throws,ioexception;static,swagger,load,specification,from,final,camel,context,camel,context,final,uri,uri,throws,ioexception,final,object,mapper,mapper,json,mapper,final,swagger,parser,swagger,parser,new,swagger,parser,final,string,uri,as,string,uri,to,string,try,input,stream,stream,resource,helper,resolve,mandatory,resource,as,input,stream,camel,context,uri,as,string,final,json,node,node,mapper,read,tree,stream,return,swagger,parser,read,node,catch,final,ioexception,e,final,swagger,swagger,swagger,parser,read,uri,as,string,if,swagger,null,return,swagger,throw,new,illegal,argument,exception,the,given,swagger,specification,could,not,be,loaded,from,uri,tried,loading,using,camel,s,resource,resolution,and,using,swagger,s,own,resource,resolution,swagger,tends,to,swallow,exceptions,while,parsing,try,specifying,java,system,property,debug,parser,e,g,ddebug,parser,true,the,exception,that,occured,when,loading,using,camel,s,resource,loader,follows,e
RestSwaggerEndpoint -> static Swagger loadSpecificationFrom(final CamelContext camelContext, final URI uri) throws IOException;1490219074;Loads the Swagger definition model from the given path. Tries to resolve_the resource using Camel's resource loading support, if it fails uses_Swagger's resource loading support instead.__@param uri URI of the specification_@param camelContext context to use_@return the specification_@throws IOException;static Swagger loadSpecificationFrom(final CamelContext camelContext, final URI uri) throws IOException {_        final ObjectMapper mapper = Json.mapper()___        final SwaggerParser swaggerParser = new SwaggerParser()___        final String uriAsString = uri.toString()___        try (InputStream stream = ResourceHelper.resolveMandatoryResourceAsInputStream(camelContext, uriAsString)) {_            final JsonNode node = mapper.readTree(stream)___            return swaggerParser.read(node)__        } catch (final IOException e) {_            _            final Swagger swagger = swaggerParser.read(uriAsString)___            if (swagger != null) {_                return swagger__            }__            throw new IllegalArgumentException("The given Swagger specification could not be loaded from `" + uri_                + "`. Tried loading using Camel's resource resolution and using Swagger's own resource resolution."_                + " Swagger tends to swallow exceptions while parsing, try specifying Java system property `debugParser`"_                + " (e.g. `-DdebugParser=true`), the exception that occured when loading using Camel's resource"_                + " loader follows", e)__        }_    };loads,the,swagger,definition,model,from,the,given,path,tries,to,resolve,the,resource,using,camel,s,resource,loading,support,if,it,fails,uses,swagger,s,resource,loading,support,instead,param,uri,uri,of,the,specification,param,camel,context,context,to,use,return,the,specification,throws,ioexception;static,swagger,load,specification,from,final,camel,context,camel,context,final,uri,uri,throws,ioexception,final,object,mapper,mapper,json,mapper,final,swagger,parser,swagger,parser,new,swagger,parser,final,string,uri,as,string,uri,to,string,try,input,stream,stream,resource,helper,resolve,mandatory,resource,as,input,stream,camel,context,uri,as,string,final,json,node,node,mapper,read,tree,stream,return,swagger,parser,read,node,catch,final,ioexception,e,final,swagger,swagger,swagger,parser,read,uri,as,string,if,swagger,null,return,swagger,throw,new,illegal,argument,exception,the,given,swagger,specification,could,not,be,loaded,from,uri,tried,loading,using,camel,s,resource,resolution,and,using,swagger,s,own,resource,resolution,swagger,tends,to,swallow,exceptions,while,parsing,try,specifying,java,system,property,debug,parser,e,g,ddebug,parser,true,the,exception,that,occured,when,loading,using,camel,s,resource,loader,follows,e
RestSwaggerEndpoint -> static Swagger loadSpecificationFrom(final CamelContext camelContext, final URI uri) throws IOException;1490786464;Loads the Swagger definition model from the given path. Tries to resolve_the resource using Camel's resource loading support, if it fails uses_Swagger's resource loading support instead.__@param uri URI of the specification_@param camelContext context to use_@return the specification_@throws IOException;static Swagger loadSpecificationFrom(final CamelContext camelContext, final URI uri) throws IOException {_        final ObjectMapper mapper = Json.mapper()___        final SwaggerParser swaggerParser = new SwaggerParser()___        final String uriAsString = uri.toString()___        try (InputStream stream = ResourceHelper.resolveMandatoryResourceAsInputStream(camelContext, uriAsString)) {_            final JsonNode node = mapper.readTree(stream)___            return swaggerParser.read(node)__        } catch (final IOException e) {_            _            final Swagger swagger = swaggerParser.read(uriAsString)___            if (swagger != null) {_                return swagger__            }__            throw new IllegalArgumentException("The given Swagger specification could not be loaded from `" + uri_                + "`. Tried loading using Camel's resource resolution and using Swagger's own resource resolution."_                + " Swagger tends to swallow exceptions while parsing, try specifying Java system property `debugParser`"_                + " (e.g. `-DdebugParser=true`), the exception that occured when loading using Camel's resource"_                + " loader follows", e)__        }_    };loads,the,swagger,definition,model,from,the,given,path,tries,to,resolve,the,resource,using,camel,s,resource,loading,support,if,it,fails,uses,swagger,s,resource,loading,support,instead,param,uri,uri,of,the,specification,param,camel,context,context,to,use,return,the,specification,throws,ioexception;static,swagger,load,specification,from,final,camel,context,camel,context,final,uri,uri,throws,ioexception,final,object,mapper,mapper,json,mapper,final,swagger,parser,swagger,parser,new,swagger,parser,final,string,uri,as,string,uri,to,string,try,input,stream,stream,resource,helper,resolve,mandatory,resource,as,input,stream,camel,context,uri,as,string,final,json,node,node,mapper,read,tree,stream,return,swagger,parser,read,node,catch,final,ioexception,e,final,swagger,swagger,swagger,parser,read,uri,as,string,if,swagger,null,return,swagger,throw,new,illegal,argument,exception,the,given,swagger,specification,could,not,be,loaded,from,uri,tried,loading,using,camel,s,resource,resolution,and,using,swagger,s,own,resource,resolution,swagger,tends,to,swallow,exceptions,while,parsing,try,specifying,java,system,property,debug,parser,e,g,ddebug,parser,true,the,exception,that,occured,when,loading,using,camel,s,resource,loader,follows,e
RestSwaggerEndpoint -> static Swagger loadSpecificationFrom(final CamelContext camelContext, final URI uri) throws IOException;1509403510;Loads the Swagger definition model from the given path. Tries to resolve_the resource using Camel's resource loading support, if it fails uses_Swagger's resource loading support instead.__@param uri URI of the specification_@param camelContext context to use_@return the specification_@throws IOException;static Swagger loadSpecificationFrom(final CamelContext camelContext, final URI uri) throws IOException {_        final ObjectMapper mapper = Json.mapper()___        final SwaggerParser swaggerParser = new SwaggerParser()___        final String uriAsString = uri.toString()___        try (InputStream stream = ResourceHelper.resolveMandatoryResourceAsInputStream(camelContext, uriAsString)) {_            final JsonNode node = mapper.readTree(stream)___            return swaggerParser.read(node)__        } catch (final IOException e) {_            _            final Swagger swagger = swaggerParser.read(uriAsString)___            if (swagger != null) {_                return swagger__            }__            throw new IllegalArgumentException("The given Swagger specification could not be loaded from `" + uri_                + "`. Tried loading using Camel's resource resolution and using Swagger's own resource resolution."_                + " Swagger tends to swallow exceptions while parsing, try specifying Java system property `debugParser`"_                + " (e.g. `-DdebugParser=true`), the exception that occured when loading using Camel's resource"_                + " loader follows", e)__        }_    };loads,the,swagger,definition,model,from,the,given,path,tries,to,resolve,the,resource,using,camel,s,resource,loading,support,if,it,fails,uses,swagger,s,resource,loading,support,instead,param,uri,uri,of,the,specification,param,camel,context,context,to,use,return,the,specification,throws,ioexception;static,swagger,load,specification,from,final,camel,context,camel,context,final,uri,uri,throws,ioexception,final,object,mapper,mapper,json,mapper,final,swagger,parser,swagger,parser,new,swagger,parser,final,string,uri,as,string,uri,to,string,try,input,stream,stream,resource,helper,resolve,mandatory,resource,as,input,stream,camel,context,uri,as,string,final,json,node,node,mapper,read,tree,stream,return,swagger,parser,read,node,catch,final,ioexception,e,final,swagger,swagger,swagger,parser,read,uri,as,string,if,swagger,null,return,swagger,throw,new,illegal,argument,exception,the,given,swagger,specification,could,not,be,loaded,from,uri,tried,loading,using,camel,s,resource,resolution,and,using,swagger,s,own,resource,resolution,swagger,tends,to,swallow,exceptions,while,parsing,try,specifying,java,system,property,debug,parser,e,g,ddebug,parser,true,the,exception,that,occured,when,loading,using,camel,s,resource,loader,follows,e
RestSwaggerEndpoint -> static Swagger loadSpecificationFrom(final CamelContext camelContext, final URI uri) throws IOException;1534935277;Loads the Swagger definition model from the given path. Tries to resolve_the resource using Camel's resource loading support, if it fails uses_Swagger's resource loading support instead.__@param uri URI of the specification_@param camelContext context to use_@return the specification_@throws IOException;static Swagger loadSpecificationFrom(final CamelContext camelContext, final URI uri) throws IOException {_        final ObjectMapper mapper = Json.mapper()___        final SwaggerParser swaggerParser = new SwaggerParser()___        final String uriAsString = uri.toString()___        try (InputStream stream = ResourceHelper.resolveMandatoryResourceAsInputStream(camelContext, uriAsString)) {_            final JsonNode node = mapper.readTree(stream)___            return swaggerParser.read(node)__        } catch (final IOException e) {_            _            final Swagger swagger = swaggerParser.read(uriAsString)___            if (swagger != null) {_                return swagger__            }__            throw new IllegalArgumentException("The given Swagger specification could not be loaded from `" + uri_                + "`. Tried loading using Camel's resource resolution and using Swagger's own resource resolution."_                + " Swagger tends to swallow exceptions while parsing, try specifying Java system property `debugParser`"_                + " (e.g. `-DdebugParser=true`), the exception that occured when loading using Camel's resource"_                + " loader follows", e)__        }_    };loads,the,swagger,definition,model,from,the,given,path,tries,to,resolve,the,resource,using,camel,s,resource,loading,support,if,it,fails,uses,swagger,s,resource,loading,support,instead,param,uri,uri,of,the,specification,param,camel,context,context,to,use,return,the,specification,throws,ioexception;static,swagger,load,specification,from,final,camel,context,camel,context,final,uri,uri,throws,ioexception,final,object,mapper,mapper,json,mapper,final,swagger,parser,swagger,parser,new,swagger,parser,final,string,uri,as,string,uri,to,string,try,input,stream,stream,resource,helper,resolve,mandatory,resource,as,input,stream,camel,context,uri,as,string,final,json,node,node,mapper,read,tree,stream,return,swagger,parser,read,node,catch,final,ioexception,e,final,swagger,swagger,swagger,parser,read,uri,as,string,if,swagger,null,return,swagger,throw,new,illegal,argument,exception,the,given,swagger,specification,could,not,be,loaded,from,uri,tried,loading,using,camel,s,resource,resolution,and,using,swagger,s,own,resource,resolution,swagger,tends,to,swallow,exceptions,while,parsing,try,specifying,java,system,property,debug,parser,e,g,ddebug,parser,true,the,exception,that,occured,when,loading,using,camel,s,resource,loader,follows,e
RestSwaggerEndpoint -> static Swagger loadSpecificationFrom(final CamelContext camelContext, final URI uri) throws IOException;1540108160;Loads the Swagger definition model from the given path. Tries to resolve_the resource using Camel's resource loading support, if it fails uses_Swagger's resource loading support instead.__@param uri URI of the specification_@param camelContext context to use_@return the specification_@throws IOException;static Swagger loadSpecificationFrom(final CamelContext camelContext, final URI uri) throws IOException {_        final ObjectMapper mapper = Json.mapper()___        final SwaggerParser swaggerParser = new SwaggerParser()___        final String uriAsString = uri.toString()___        try (InputStream stream = ResourceHelper.resolveMandatoryResourceAsInputStream(camelContext, uriAsString)) {_            final JsonNode node = mapper.readTree(stream)___            return swaggerParser.read(node)__        } catch (final IOException e) {_            _            final Swagger swagger = swaggerParser.read(uriAsString)___            if (swagger != null) {_                return swagger__            }__            throw new IllegalArgumentException("The given Swagger specification could not be loaded from `" + uri_                + "`. Tried loading using Camel's resource resolution and using Swagger's own resource resolution."_                + " Swagger tends to swallow exceptions while parsing, try specifying Java system property `debugParser`"_                + " (e.g. `-DdebugParser=true`), the exception that occured when loading using Camel's resource"_                + " loader follows", e)__        }_    };loads,the,swagger,definition,model,from,the,given,path,tries,to,resolve,the,resource,using,camel,s,resource,loading,support,if,it,fails,uses,swagger,s,resource,loading,support,instead,param,uri,uri,of,the,specification,param,camel,context,context,to,use,return,the,specification,throws,ioexception;static,swagger,load,specification,from,final,camel,context,camel,context,final,uri,uri,throws,ioexception,final,object,mapper,mapper,json,mapper,final,swagger,parser,swagger,parser,new,swagger,parser,final,string,uri,as,string,uri,to,string,try,input,stream,stream,resource,helper,resolve,mandatory,resource,as,input,stream,camel,context,uri,as,string,final,json,node,node,mapper,read,tree,stream,return,swagger,parser,read,node,catch,final,ioexception,e,final,swagger,swagger,swagger,parser,read,uri,as,string,if,swagger,null,return,swagger,throw,new,illegal,argument,exception,the,given,swagger,specification,could,not,be,loaded,from,uri,tried,loading,using,camel,s,resource,resolution,and,using,swagger,s,own,resource,resolution,swagger,tends,to,swallow,exceptions,while,parsing,try,specifying,java,system,property,debug,parser,e,g,ddebug,parser,true,the,exception,that,occured,when,loading,using,camel,s,resource,loader,follows,e
RestSwaggerEndpoint -> static Swagger loadSpecificationFrom(final CamelContext camelContext, final URI uri) throws IOException;1540108163;Loads the Swagger definition model from the given path. Tries to resolve_the resource using Camel's resource loading support, if it fails uses_Swagger's resource loading support instead.__@param uri URI of the specification_@param camelContext context to use_@return the specification_@throws IOException;static Swagger loadSpecificationFrom(final CamelContext camelContext, final URI uri) throws IOException {_        final ObjectMapper mapper = Json.mapper()___        final SwaggerParser swaggerParser = new SwaggerParser()___        final String uriAsString = uri.toString()___        try (InputStream stream = ResourceHelper.resolveMandatoryResourceAsInputStream(camelContext, uriAsString)) {_            final JsonNode node = mapper.readTree(stream)___            return swaggerParser.read(node)__        } catch (final IOException e) {_            _            final Swagger swagger = swaggerParser.read(uriAsString)___            if (swagger != null) {_                return swagger__            }__            throw new IllegalArgumentException("The given Swagger specification could not be loaded from `" + uri_                + "`. Tried loading using Camel's resource resolution and using Swagger's own resource resolution."_                + " Swagger tends to swallow exceptions while parsing, try specifying Java system property `debugParser`"_                + " (e.g. `-DdebugParser=true`), the exception that occured when loading using Camel's resource"_                + " loader follows", e)__        }_    };loads,the,swagger,definition,model,from,the,given,path,tries,to,resolve,the,resource,using,camel,s,resource,loading,support,if,it,fails,uses,swagger,s,resource,loading,support,instead,param,uri,uri,of,the,specification,param,camel,context,context,to,use,return,the,specification,throws,ioexception;static,swagger,load,specification,from,final,camel,context,camel,context,final,uri,uri,throws,ioexception,final,object,mapper,mapper,json,mapper,final,swagger,parser,swagger,parser,new,swagger,parser,final,string,uri,as,string,uri,to,string,try,input,stream,stream,resource,helper,resolve,mandatory,resource,as,input,stream,camel,context,uri,as,string,final,json,node,node,mapper,read,tree,stream,return,swagger,parser,read,node,catch,final,ioexception,e,final,swagger,swagger,swagger,parser,read,uri,as,string,if,swagger,null,return,swagger,throw,new,illegal,argument,exception,the,given,swagger,specification,could,not,be,loaded,from,uri,tried,loading,using,camel,s,resource,resolution,and,using,swagger,s,own,resource,resolution,swagger,tends,to,swallow,exceptions,while,parsing,try,specifying,java,system,property,debug,parser,e,g,ddebug,parser,true,the,exception,that,occured,when,loading,using,camel,s,resource,loader,follows,e
RestSwaggerEndpoint -> static Swagger loadSpecificationFrom(final CamelContext camelContext, final URI uri) throws IOException;1547240981;Loads the Swagger definition model from the given path. Tries to resolve_the resource using Camel's resource loading support, if it fails uses_Swagger's resource loading support instead.__@param uri URI of the specification_@param camelContext context to use_@return the specification_@throws IOException;static Swagger loadSpecificationFrom(final CamelContext camelContext, final URI uri) throws IOException {_        final ObjectMapper mapper = Json.mapper()___        final SwaggerParser swaggerParser = new SwaggerParser()___        final String uriAsString = uri.toString()___        try (InputStream stream = ResourceHelper.resolveMandatoryResourceAsInputStream(camelContext, uriAsString)) {_            final JsonNode node = mapper.readTree(stream)___            return swaggerParser.read(node)__        } catch (final IOException e) {_            _            final Swagger swagger = swaggerParser.read(uriAsString)___            if (swagger != null) {_                return swagger__            }__            throw new IllegalArgumentException("The given Swagger specification could not be loaded from `" + uri_                + "`. Tried loading using Camel's resource resolution and using Swagger's own resource resolution."_                + " Swagger tends to swallow exceptions while parsing, try specifying Java system property `debugParser`"_                + " (e.g. `-DdebugParser=true`), the exception that occured when loading using Camel's resource"_                + " loader follows", e)__        }_    };loads,the,swagger,definition,model,from,the,given,path,tries,to,resolve,the,resource,using,camel,s,resource,loading,support,if,it,fails,uses,swagger,s,resource,loading,support,instead,param,uri,uri,of,the,specification,param,camel,context,context,to,use,return,the,specification,throws,ioexception;static,swagger,load,specification,from,final,camel,context,camel,context,final,uri,uri,throws,ioexception,final,object,mapper,mapper,json,mapper,final,swagger,parser,swagger,parser,new,swagger,parser,final,string,uri,as,string,uri,to,string,try,input,stream,stream,resource,helper,resolve,mandatory,resource,as,input,stream,camel,context,uri,as,string,final,json,node,node,mapper,read,tree,stream,return,swagger,parser,read,node,catch,final,ioexception,e,final,swagger,swagger,swagger,parser,read,uri,as,string,if,swagger,null,return,swagger,throw,new,illegal,argument,exception,the,given,swagger,specification,could,not,be,loaded,from,uri,tried,loading,using,camel,s,resource,resolution,and,using,swagger,s,own,resource,resolution,swagger,tends,to,swallow,exceptions,while,parsing,try,specifying,java,system,property,debug,parser,e,g,ddebug,parser,true,the,exception,that,occured,when,loading,using,camel,s,resource,loader,follows,e
RestSwaggerEndpoint -> static Swagger loadSpecificationFrom(final CamelContext camelContext, final URI uri) throws IOException;1548235648;Loads the Swagger definition model from the given path. Tries to resolve_the resource using Camel's resource loading support, if it fails uses_Swagger's resource loading support instead.__@param uri URI of the specification_@param camelContext context to use_@return the specification_@throws IOException;static Swagger loadSpecificationFrom(final CamelContext camelContext, final URI uri) throws IOException {_        final ObjectMapper mapper = Json.mapper()___        final SwaggerParser swaggerParser = new SwaggerParser()___        final String uriAsString = uri.toString()___        try (InputStream stream = ResourceHelper.resolveMandatoryResourceAsInputStream(camelContext, uriAsString)) {_            final JsonNode node = mapper.readTree(stream)___            return swaggerParser.read(node)__        } catch (final IOException e) {_            _            final Swagger swagger = swaggerParser.read(uriAsString)___            if (swagger != null) {_                return swagger__            }__            throw new IllegalArgumentException("The given Swagger specification could not be loaded from `" + uri_                + "`. Tried loading using Camel's resource resolution and using Swagger's own resource resolution."_                + " Swagger tends to swallow exceptions while parsing, try specifying Java system property `debugParser`"_                + " (e.g. `-DdebugParser=true`), the exception that occured when loading using Camel's resource"_                + " loader follows", e)__        }_    };loads,the,swagger,definition,model,from,the,given,path,tries,to,resolve,the,resource,using,camel,s,resource,loading,support,if,it,fails,uses,swagger,s,resource,loading,support,instead,param,uri,uri,of,the,specification,param,camel,context,context,to,use,return,the,specification,throws,ioexception;static,swagger,load,specification,from,final,camel,context,camel,context,final,uri,uri,throws,ioexception,final,object,mapper,mapper,json,mapper,final,swagger,parser,swagger,parser,new,swagger,parser,final,string,uri,as,string,uri,to,string,try,input,stream,stream,resource,helper,resolve,mandatory,resource,as,input,stream,camel,context,uri,as,string,final,json,node,node,mapper,read,tree,stream,return,swagger,parser,read,node,catch,final,ioexception,e,final,swagger,swagger,swagger,parser,read,uri,as,string,if,swagger,null,return,swagger,throw,new,illegal,argument,exception,the,given,swagger,specification,could,not,be,loaded,from,uri,tried,loading,using,camel,s,resource,resolution,and,using,swagger,s,own,resource,resolution,swagger,tends,to,swallow,exceptions,while,parsing,try,specifying,java,system,property,debug,parser,e,g,ddebug,parser,true,the,exception,that,occured,when,loading,using,camel,s,resource,loader,follows,e
RestSwaggerEndpoint -> static Swagger loadSpecificationFrom(final CamelContext camelContext, final URI uri) throws IOException;1549961004;Loads the Swagger definition model from the given path. Tries to resolve_the resource using Camel's resource loading support, if it fails uses_Swagger's resource loading support instead.__@param uri URI of the specification_@param camelContext context to use_@return the specification_@throws IOException;static Swagger loadSpecificationFrom(final CamelContext camelContext, final URI uri) throws IOException {_        final ObjectMapper mapper = Json.mapper()___        final SwaggerParser swaggerParser = new SwaggerParser()___        final String uriAsString = uri.toString()___        try (InputStream stream = ResourceHelper.resolveMandatoryResourceAsInputStream(camelContext, uriAsString)) {_            final JsonNode node = mapper.readTree(stream)___            return swaggerParser.read(node)__        } catch (Exception e) {_            _            final Swagger swagger = swaggerParser.read(uriAsString)___            if (swagger != null) {_                return swagger__            }__            throw new IllegalArgumentException("The given Swagger specification could not be loaded from `" + uri_                + "`. Tried loading using Camel's resource resolution and using Swagger's own resource resolution."_                + " Swagger tends to swallow exceptions while parsing, try specifying Java system property `debugParser`"_                + " (e.g. `-DdebugParser=true`), the exception that occurred when loading using Camel's resource"_                + " loader follows", e)__        }_    };loads,the,swagger,definition,model,from,the,given,path,tries,to,resolve,the,resource,using,camel,s,resource,loading,support,if,it,fails,uses,swagger,s,resource,loading,support,instead,param,uri,uri,of,the,specification,param,camel,context,context,to,use,return,the,specification,throws,ioexception;static,swagger,load,specification,from,final,camel,context,camel,context,final,uri,uri,throws,ioexception,final,object,mapper,mapper,json,mapper,final,swagger,parser,swagger,parser,new,swagger,parser,final,string,uri,as,string,uri,to,string,try,input,stream,stream,resource,helper,resolve,mandatory,resource,as,input,stream,camel,context,uri,as,string,final,json,node,node,mapper,read,tree,stream,return,swagger,parser,read,node,catch,exception,e,final,swagger,swagger,swagger,parser,read,uri,as,string,if,swagger,null,return,swagger,throw,new,illegal,argument,exception,the,given,swagger,specification,could,not,be,loaded,from,uri,tried,loading,using,camel,s,resource,resolution,and,using,swagger,s,own,resource,resolution,swagger,tends,to,swallow,exceptions,while,parsing,try,specifying,java,system,property,debug,parser,e,g,ddebug,parser,true,the,exception,that,occurred,when,loading,using,camel,s,resource,loader,follows,e
RestSwaggerEndpoint -> static Swagger loadSpecificationFrom(final CamelContext camelContext, final URI uri) throws IOException;1550064455;Loads the Swagger definition model from the given path. Tries to resolve_the resource using Camel's resource loading support, if it fails uses_Swagger's resource loading support instead.__@param uri URI of the specification_@param camelContext context to use_@return the specification_@throws IOException;static Swagger loadSpecificationFrom(final CamelContext camelContext, final URI uri) throws IOException {_        final ObjectMapper mapper = Json.mapper()___        final SwaggerParser swaggerParser = new SwaggerParser()___        final String uriAsString = uri.toString()___        try (InputStream stream = ResourceHelper.resolveMandatoryResourceAsInputStream(camelContext, uriAsString)) {_            final JsonNode node = mapper.readTree(stream)___            return swaggerParser.read(node)__        } catch (final Exception e) {_            _            final Swagger swagger = swaggerParser.read(uriAsString)___            if (swagger != null) {_                return swagger__            }__            throw new IllegalArgumentException("The given Swagger specification could not be loaded from `" + uri_                + "`. Tried loading using Camel's resource resolution and using Swagger's own resource resolution."_                + " Swagger tends to swallow exceptions while parsing, try specifying Java system property `debugParser`"_                + " (e.g. `-DdebugParser=true`), the exception that occurred when loading using Camel's resource"_                + " loader follows", e)__        }_    };loads,the,swagger,definition,model,from,the,given,path,tries,to,resolve,the,resource,using,camel,s,resource,loading,support,if,it,fails,uses,swagger,s,resource,loading,support,instead,param,uri,uri,of,the,specification,param,camel,context,context,to,use,return,the,specification,throws,ioexception;static,swagger,load,specification,from,final,camel,context,camel,context,final,uri,uri,throws,ioexception,final,object,mapper,mapper,json,mapper,final,swagger,parser,swagger,parser,new,swagger,parser,final,string,uri,as,string,uri,to,string,try,input,stream,stream,resource,helper,resolve,mandatory,resource,as,input,stream,camel,context,uri,as,string,final,json,node,node,mapper,read,tree,stream,return,swagger,parser,read,node,catch,final,exception,e,final,swagger,swagger,swagger,parser,read,uri,as,string,if,swagger,null,return,swagger,throw,new,illegal,argument,exception,the,given,swagger,specification,could,not,be,loaded,from,uri,tried,loading,using,camel,s,resource,resolution,and,using,swagger,s,own,resource,resolution,swagger,tends,to,swallow,exceptions,while,parsing,try,specifying,java,system,property,debug,parser,e,g,ddebug,parser,true,the,exception,that,occurred,when,loading,using,camel,s,resource,loader,follows,e
