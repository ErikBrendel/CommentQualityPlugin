commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public StubEndpoint getEndpoint() {     return (StubEndpoint) super.getEndpoint(). }
false;public;2;20;;@Override public boolean process(Exchange exchange, AsyncCallback callback) {     AsyncCallback cb = callback.     QueueReference queueReference = getEndpoint().getQueueReference().     boolean empty = queueReference == null || !queueReference.hasConsumers().     // if no consumers then use InOnly mode     final ExchangePattern pattern = exchange.getPattern().     if (empty && pattern != ExchangePattern.InOnly) {         exchange.setPattern(ExchangePattern.InOnly).         cb = doneSync -> {             // and restore the old pattern after processing             exchange.setPattern(pattern).             callback.done(doneSync).         }.     }     return super.process(exchange, cb). }
