commented;modifiers;parameterAmount;loc;comment;code
false;public,static;2;30;;@Converter public static // Camel could use this method to convert the String into a List OIDList toOIDList(String s, Exchange exchange) {     try {         OIDList list = new OIDList().         if (s != null && s.contains(",")) {             // seems to be a comma separated oid list             StringTokenizer strTok = new StringTokenizer(s, ",").             while (strTok.hasMoreTokens()) {                 String tok = strTok.nextToken().                 if (tok != null && tok.trim().length() > 0) {                     list.add(new OID(tok.trim())).                 } else {                 // empty token - skip                 }             }         } else if (s != null) {             // maybe a single oid             list.add(new OID(s.trim())).         }         return list.     } catch (Throwable e) {         // new OID(...) will throw NumberFormatException if it's not a valid OID         return null.     } }
false;private,static;3;7;;private static void entryAppend(StringBuilder sb, String tag, String value) {     sb.append(ENTRY_TAG_OPEN).     sb.append("<" + tag + ">").     sb.append(value).     sb.append("</" + tag + ">").     sb.append(ENTRY_TAG_CLOSE). }
true;public,static;1;41;/**  * Converts the given snmp pdu to a String body.  *  * @param pdu       the snmp pdu  * @return  the text content  */ ;/**  * Converts the given snmp pdu to a String body.  *  * @param pdu       the snmp pdu  * @return  the text content  */ @Converter public static String toString(PDU pdu) {     // the output buffer     StringBuilder sb = new StringBuilder().     // prepare the header     if (pdu.getType() == PDU.V1TRAP) {         sb.append("<" + SNMP_TAG + " messageType=\"v1\">").     } else {         sb.append(SNMP_TAG_OPEN).     }     // Extract SNMPv1 specific variables     if (pdu.getType() == PDU.V1TRAP) {         PDUv1 v1pdu = (PDUv1) pdu.         entryAppend(sb, "enterprise", v1pdu.getEnterprise().toString()).         entryAppend(sb, "agent-addr", v1pdu.getAgentAddress().toString()).         entryAppend(sb, "generic-trap", Integer.toString(v1pdu.getGenericTrap())).         entryAppend(sb, "specific-trap", Integer.toString(v1pdu.getSpecificTrap())).         entryAppend(sb, "time-stamp", Long.toString(v1pdu.getTimestamp())).     }     // now loop all variables of the response     for (Object o : pdu.getVariableBindings()) {         VariableBinding b = (VariableBinding) o.         sb.append(ENTRY_TAG_OPEN).         sb.append(OID_TAG_OPEN).         sb.append(b.getOid().toString()).         sb.append(OID_TAG_CLOSE).         sb.append(VALUE_TAG_OPEN).         sb.append(StringHelper.xmlEncode(b.getVariable().toString())).         sb.append(VALUE_TAG_CLOSE).         sb.append(ENTRY_TAG_CLOSE).     }     // prepare the footer     sb.append(SNMP_TAG_CLOSE).     return sb.toString(). }
