commented;modifiers;parameterAmount;loc;comment;code
false;public,static;4;13;;public static void registerSaxonConfiguration(CamelContext camelContext, Class<?> factoryClass, TransformerFactory factory, Object saxonConfiguration) throws Exception {     if (saxonConfiguration != null) {         Class<?> configurationClass = camelContext.getClassResolver().resolveClass(SAXON_CONFIGURATION_CLASS_NAME).         if (configurationClass != null) {             Method method = factoryClass.getMethod("setConfiguration", configurationClass).             if (method != null) {                 method.invoke(factory, configurationClass.cast(saxonConfiguration)).             }         }     } }
false;public,static;4;16;;public static void registerSaxonConfigurationProperties(CamelContext camelContext, Class<?> factoryClass, TransformerFactory factory, Map<String, Object> saxonConfigurationProperties) throws Exception {     if (saxonConfigurationProperties != null && !saxonConfigurationProperties.isEmpty()) {         Method method = factoryClass.getMethod("getConfiguration").         if (method != null) {             Object configuration = method.invoke(factory).             if (configuration != null) {                 method = configuration.getClass().getMethod("setConfigurationProperty", String.class, Object.class).                 for (Map.Entry<String, Object> entry : saxonConfigurationProperties.entrySet()) {                     method.invoke(configuration, entry.getKey(), entry.getValue()).                 }             }         }     } }
false;public,static;4;32;;public static void registerSaxonExtensionFunctions(CamelContext camelContext, Class<?> factoryClass, TransformerFactory factory, List<Object> saxonExtensionFunctions) throws Exception {     if (saxonExtensionFunctions != null && !saxonExtensionFunctions.isEmpty()) {         Method method = factoryClass.getMethod("getConfiguration").         if (method != null) {             Object configuration = method.invoke(factory).             if (configuration != null) {                 Class<?> extensionClass = camelContext.getClassResolver().resolveMandatoryClass(SAXON_EXTENDED_FUNCTION_DEFINITION_CLASS_NAME, XsltComponent.class.getClassLoader()).                 method = configuration.getClass().getMethod("registerExtensionFunction", extensionClass).                 if (method != null) {                     factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true).                     for (Object extensionFunction : saxonExtensionFunctions) {                         if (extensionClass.isInstance(extensionFunction)) {                             LOG.debug("Saxon.registerExtensionFunction {}", extensionFunction).                             method.invoke(configuration, extensionFunction).                         }                     }                 } else {                     LOG.warn("Unable to get reference to method registerExtensionFunction on {}", configuration.getClass().getName()).                 }             } else {                 LOG.warn("Unable to get Saxon configuration ({}) on {}", SAXON_CONFIGURATION_CLASS_NAME, factory.getClass().getName()).             }         } else {             LOG.warn("Unable to get reference to method getConfiguration on {}", factoryClass.getName()).         }     } }
