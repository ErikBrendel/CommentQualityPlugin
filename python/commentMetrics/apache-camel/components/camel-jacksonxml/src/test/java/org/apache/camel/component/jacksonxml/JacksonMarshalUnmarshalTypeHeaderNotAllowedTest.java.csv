commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testUnmarshalPojo() throws Exception {     MockEndpoint mock = getMockEndpoint("mock:reversePojo").     mock.expectedMessageCount(1).     String json = "<pojo name=\"Camel\"/>".     template.sendBodyAndHeader("direct:backPojo", json, JacksonXMLConstants.UNMARSHAL_TYPE, TestPojo.class.getName()).     assertMockEndpointsSatisfied(). }
false;public;0;7;;@Override public void configure() throws Exception {     JacksonXMLDataFormat format = new JacksonXMLDataFormat().     from("direct:backPojo").unmarshal(format).to("mock:reversePojo"). }
false;protected;0;13;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             JacksonXMLDataFormat format = new JacksonXMLDataFormat().             from("direct:backPojo").unmarshal(format).to("mock:reversePojo").         }     }. }
