commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public void process(Exchange exchange) throws Exception {     exchange.getIn().setBody(in). }
false;public;0;16;;@Test public void testYes() throws Exception {     final Map<String, Object> in = new HashMap<>().     in.put("name", "Camel").     Exchange out = template.request("direct:yes", new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             exchange.getIn().setBody(in).         }     }).     assertNotNull(out).     assertTrue(out.hasOut()).     assertEquals("application/xml", out.getOut().getHeader(Exchange.CONTENT_TYPE)). }
false;public;1;4;;@Override public void process(Exchange exchange) throws Exception {     exchange.getIn().setBody(in). }
false;public;0;16;;@Test public void testYes2() throws Exception {     final Map<String, Object> in = new HashMap<>().     in.put("name", "Camel").     Exchange out = template.request("direct:yes2", new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             exchange.getIn().setBody(in).         }     }).     assertNotNull(out).     assertTrue(out.hasOut()).     assertEquals("application/xml", out.getOut().getHeader(Exchange.CONTENT_TYPE)). }
false;public;1;4;;@Override public void process(Exchange exchange) throws Exception {     exchange.getIn().setBody(in). }
false;public;0;16;;@Test public void testNo() throws Exception {     final Map<String, Object> in = new HashMap<>().     in.put("name", "Camel").     Exchange out = template.request("direct:no", new Processor() {          @Override         public void process(Exchange exchange) throws Exception {             exchange.getIn().setBody(in).         }     }).     assertNotNull(out).     assertTrue(out.hasOut()).     assertNull(out.getOut().getHeader(Exchange.CONTENT_TYPE)). }
false;public;0;11;;@Override public void configure() throws Exception {     JacksonXMLDataFormat format = new JacksonXMLDataFormat().     from("direct:yes").marshal(format).     from("direct:yes2").marshal().jacksonxml().     JacksonXMLDataFormat formatNoHeader = new JacksonXMLDataFormat().     formatNoHeader.setContentTypeHeader(false).     from("direct:no").marshal(formatNoHeader). }
false;protected;0;17;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             JacksonXMLDataFormat format = new JacksonXMLDataFormat().             from("direct:yes").marshal(format).             from("direct:yes2").marshal().jacksonxml().             JacksonXMLDataFormat formatNoHeader = new JacksonXMLDataFormat().             formatNoHeader.setContentTypeHeader(false).             from("direct:no").marshal(formatNoHeader).         }     }. }
