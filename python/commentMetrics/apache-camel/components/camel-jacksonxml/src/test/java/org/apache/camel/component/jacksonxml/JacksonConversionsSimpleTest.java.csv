commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public boolean isUseRouteBuilder() {     return false. }
false;protected;0;7;;@Override protected CamelContext createCamelContext() throws Exception {     CamelContext context = super.createCamelContext().     // enable jackson type converter by setting this property on CamelContext     context.getGlobalOptions().put(JacksonXMLConstants.ENABLE_TYPE_CONVERTER, "true").     return context. }
false;public;0;9;;@Test public void shouldNotConvertMapToString() {     Exchange exchange = new DefaultExchange(context).     Map<String, String> body = new HashMap<>().     Object convertedObject = context.getTypeConverter().convertTo(String.class, exchange, body).     // will do a toString which is an empty map     assertEquals(body.toString(), convertedObject). }
false;public;0;7;;@Test public void shouldNotConvertMapToNumber() {     Exchange exchange = new DefaultExchange(context).     Object convertedObject = context.getTypeConverter().convertTo(Long.class, exchange, new HashMap<String, String>()).     assertNull(convertedObject). }
false;public;0;7;;@Test public void shouldNotConvertMapToPrimitive() {     Exchange exchange = new DefaultExchange(context).     Object convertedObject = context.getTypeConverter().convertTo(long.class, exchange, new HashMap<String, String>()).     assertNull(convertedObject). }
