commented;modifiers;parameterAmount;loc;comment;code
false;public;0;18;;@Test public void testMarshalAndUnmarshalPojoWithView() throws Exception {     TestPojoView in = new TestPojoView().     MockEndpoint mock = getMockEndpoint("mock:reversePojoAgeView").     mock.expectedMessageCount(1).     mock.message(0).body().isInstanceOf(TestPojoView.class).     mock.message(0).body().isEqualTo(in).     Object marshalled = template.requestBody("direct:inPojoAgeView", in).     String marshalledAsString = context.getTypeConverter().convertTo(String.class, marshalled).     assertEquals("<TestPojoView><age>30</age><height>190</height></TestPojoView>", marshalledAsString).     template.sendBody("direct:backPojoAgeView", marshalled).     mock.assertIsSatisfied(). }
false;public;0;18;;@Test public void testMarshalAndUnmarshalPojoWithAnotherView() throws Exception {     TestPojoView in = new TestPojoView().     MockEndpoint mock = getMockEndpoint("mock:reversePojoWeightView").     mock.expectedMessageCount(1).     mock.message(0).body().isInstanceOf(TestPojoView.class).     mock.message(0).body().isEqualTo(in).     Object marshalled = template.requestBody("direct:inPojoWeightView", in).     String marshalledAsString = context.getTypeConverter().convertTo(String.class, marshalled).     assertEquals("<TestPojoView><height>190</height><weight>70</weight></TestPojoView>", marshalledAsString).     template.sendBody("direct:backPojoWeightView", marshalled).     mock.assertIsSatisfied(). }
false;public;0;11;;@Override public void configure() throws Exception {     // START SNIPPET: format     from("direct:inPojoAgeView").marshal().jacksonxml(TestPojoView.class, Views.Age.class).     // END SNIPPET: format     from("direct:backPojoAgeView").unmarshal().jacksonxml(TestPojoView.class).to("mock:reversePojoAgeView").     from("direct:inPojoWeightView").marshal().jacksonxml(TestPojoView.class, Views.Weight.class).     from("direct:backPojoWeightView").unmarshal().jacksonxml(TestPojoView.class).to("mock:reversePojoWeightView"). }
false;protected;0;17;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             // START SNIPPET: format             from("direct:inPojoAgeView").marshal().jacksonxml(TestPojoView.class, Views.Age.class).             // END SNIPPET: format             from("direct:backPojoAgeView").unmarshal().jacksonxml(TestPojoView.class).to("mock:reversePojoAgeView").             from("direct:inPojoWeightView").marshal().jacksonxml(TestPojoView.class, Views.Weight.class).             from("direct:backPojoWeightView").unmarshal().jacksonxml(TestPojoView.class).to("mock:reversePojoWeightView").         }     }. }
