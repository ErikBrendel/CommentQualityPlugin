commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Test public void parseUriTest() {     final ConnectionSettingsFactory factory = BeanstalkComponent.getConnectionSettingsFactory().     assertEquals("Full URI", new ConnectionSettings("host.domain.tld", 11300, "someTube"), factory.parseUri("host.domain.tld:11300/someTube")).     assertEquals("No port", new ConnectionSettings("host.domain.tld", Client.DEFAULT_PORT, "someTube"), factory.parseUri("host.domain.tld/someTube")).     assertEquals("Only tube", new ConnectionSettings(Client.DEFAULT_HOST, Client.DEFAULT_PORT, "someTube"), factory.parseUri("someTube")). }
false;public;0;8;;@Test public void parseTubesTest() {     final ConnectionSettingsFactory factory = BeanstalkComponent.getConnectionSettingsFactory().     assertArrayEquals("Full URI", new String[] { "tube1", "tube2" }, factory.parseUri("host:90/tube1+tube2").tubes).     assertArrayEquals("No port", new String[] { "tube1", "tube2" }, factory.parseUri("host/tube1+tube2").tubes).     assertArrayEquals("Only tubes", new String[] { "tube1", "tube2" }, factory.parseUri("tube1+tube2").tubes).     assertArrayEquals("Empty URI", new String[0], factory.parseUri("").tubes). }
false;public;0;5;;@Test(expected = IllegalArgumentException.class) public void notValidHost() {     final ConnectionSettingsFactory factory = BeanstalkComponent.getConnectionSettingsFactory().     fail(String.format("Calling on not valid URI must raise exception, but got result %s", factory.parseUri("not_valid?host/tube?"))). }
false;public;0;4;;@Before public void setUp() {     BeanstalkComponent.setConnectionSettingsFactory(new ConnectionSettingsFactory()). }
