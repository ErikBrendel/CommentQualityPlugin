commented;modifiers;parameterAmount;loc;comment;code
false;public;0;17;;@Test public void testPut() throws InterruptedException, IOException {     resultEndpoint.expectedMessageCount(1).     resultEndpoint.allMessages().header(Headers.JOB_ID).isNotNull().     direct.sendBody(testMessage).     resultEndpoint.assertIsSatisfied().     final Long jobId = resultEndpoint.getReceivedExchanges().get(0).getIn().getHeader(Headers.JOB_ID, Long.class).     assertNotNull("Job ID in 'In' message", jobId).     final Job job = reader.reserve(5).     assertNotNull("Beanstalk client got message", job).     assertEquals("Job body from the server", testMessage, new String(job.getData())).     assertEquals("Job ID from the server", jobId.longValue(), job.getJobId()).     reader.delete(jobId). }
false;public;1;3;;public void process(Exchange exchange) {     exchange.getIn().setBody(testMessage). }
false;public;0;21;;@Test public void testOut() throws InterruptedException, IOException {     final Endpoint endpoint = context.getEndpoint("beanstalk:" + tubeName).     final Exchange exchange = template.send(endpoint, ExchangePattern.InOut, new Processor() {          public void process(Exchange exchange) {             exchange.getIn().setBody(testMessage).         }     }).     final Message out = exchange.getOut().     assertNotNull("Out message", out).     final Long jobId = out.getHeader(Headers.JOB_ID, Long.class).     assertNotNull("Job ID in 'Out' message", jobId).     final Job job = reader.reserve(5).     assertNotNull("Beanstalk client got message", job).     assertEquals("Job body from the server", testMessage, new String(job.getData())).     assertEquals("Job ID from the server", jobId.longValue(), job.getJobId()).     reader.delete(jobId). }
false;public;0;18;;@Test public void testDelay() throws InterruptedException, IOException {     final byte[] testBytes = new byte[0].     resultEndpoint.expectedMessageCount(1).     resultEndpoint.allMessages().header(Headers.JOB_ID).isNotNull().     resultEndpoint.expectedBodiesReceived(testBytes).     direct.sendBodyAndHeader(testBytes, Headers.DELAY, 10).     resultEndpoint.assertIsSatisfied().     final Long jobId = resultEndpoint.getReceivedExchanges().get(0).getIn().getHeader(Headers.JOB_ID, Long.class).     assertNotNull("Job ID in message", jobId).     final Job job = reader.reserve(0).     assertNull("Beanstalk client has no message", job).     reader.delete(jobId). }
false;public;0;4;;@Override public void configure() {     from("direct:start").to("beanstalk:" + tubeName + "?jobPriority=1000&jobTimeToRun=5").to("mock:result"). }
false;protected;0;9;;@Override protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          @Override         public void configure() {             from("direct:start").to("beanstalk:" + tubeName + "?jobPriority=1000&jobTimeToRun=5").to("mock:result").         }     }. }
