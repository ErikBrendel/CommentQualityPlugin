commented;modifiers;parameterAmount;loc;comment;code
false;public,static;1;3;;public static ConnectionSettings mockConn(final Client client) {     return new MockConnectionSettings(client). }
false;public;1;4;;@Override public ConnectionSettings parseUri(String uri) {     return new MockConnectionSettings(client). }
false;public,static;1;8;;public static void mockComponent(final Client client) {     BeanstalkComponent.setConnectionSettingsFactory(new ConnectionSettingsFactory() {          @Override         public ConnectionSettings parseUri(String uri) {             return new MockConnectionSettings(client).         }     }). }
false;public,static;0;3;;public static void revertComponent() {     BeanstalkComponent.setConnectionSettingsFactory(ConnectionSettingsFactory.DEFAULT). }
false;public,static;3;5;;public static BeanstalkEndpoint getEndpoint(String uri, CamelContext context, Client client) throws Exception {     BeanstalkEndpoint endpoint = new BeanstalkEndpoint(uri, context.getComponent("beanstalk"), mockConn(client), "").     context.addEndpoint(uri, endpoint).     return endpoint. }
false;public,static;1;13;;public static byte[] stringToBytes(final String s) throws IOException {     final ByteArrayOutputStream byteOS = new ByteArrayOutputStream().     final DataOutputStream dataStream = new DataOutputStream(byteOS).     try {         dataStream.writeBytes(s).         dataStream.flush().         return byteOS.toByteArray().     } finally {         dataStream.close().         byteOS.close().     } }
false;public;1;4;;@Override public Client newReadingClient(boolean useBlockIO) {     return client. }
false;public;0;4;;@Override public Client newWritingClient() {     return client. }
