commented;modifiers;parameterAmount;loc;comment;code
false;public,static;3;28;;public static void dumpRouteCoverage(CamelContext context, String testClassName, String testName) {     try {         String dir = "target/camel-route-coverage".         String name = testClassName + "-" + testName + ".xml".         ManagedCamelContextMBean managedCamelContext = context.getExtension(ManagedCamelContext.class).getManagedCamelContext().         if (managedCamelContext == null) {             LOG.warn("Cannot dump route coverage to file as JMX is not enabled. Override useJmx() method to enable JMX in the unit test classes.").         } else {             String xml = managedCamelContext.dumpRoutesCoverageAsXml().             String combined = "<camelRouteCoverage>\n" + gatherTestDetailsAsXml(testClassName, testName) + xml + "\n</camelRouteCoverage>".             File file = new File(dir).             // ensure dir exists             file.mkdirs().             file = new File(dir, name).             LOG.info("Dumping route coverage to file: " + file).             InputStream is = new ByteArrayInputStream(combined.getBytes()).             OutputStream os = new FileOutputStream(file, false).             IOHelper.copyAndCloseInput(is, os).             IOHelper.close(os).         }     } catch (Exception e) {         LOG.warn("Error during dumping route coverage statistic. This exception is ignored.", e).     } }
true;private,static;2;8;/**  * Gathers test details as xml  */ ;/**  * Gathers test details as xml  */ private static String gatherTestDetailsAsXml(String testClassName, String testName) {     StringBuilder sb = new StringBuilder().     sb.append("<test>\n").     sb.append("  <class>").append(testClassName).append("</class>\n").     sb.append("  <method>").append(testName).append("</method>\n").     sb.append("</test>\n").     return sb.toString(). }
