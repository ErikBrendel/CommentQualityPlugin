commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Test public void consumerTest() throws Exception {     // 3 blocks + DONE exchange     mockResult.expectedMinimumMessageCount(4).     mockError.expectedMessageCount(0).     MockEndpoint.assertIsSatisfied(context). }
false;public;0;10;;public void configure() {     errorHandler(deadLetterChannel("mock:error")).     from("web3j://" + getUrl() + OPERATION.toLowerCase() + "=" + REPLAY_BLOCKS_OBSERVABLE + "&" + "fromBlock=0&" + "toBlock=2&" + "fullTransactionObjects=false").to("mock:result"). }
false;protected;0;15;;@Override protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          public void configure() {             errorHandler(deadLetterChannel("mock:error")).             from("web3j://" + getUrl() + OPERATION.toLowerCase() + "=" + REPLAY_BLOCKS_OBSERVABLE + "&" + "fromBlock=0&" + "toBlock=2&" + "fullTransactionObjects=false").to("mock:result").         }     }. }
