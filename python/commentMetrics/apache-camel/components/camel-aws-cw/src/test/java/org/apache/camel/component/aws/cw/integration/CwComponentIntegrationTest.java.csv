commented;modifiers;parameterAmount;loc;comment;code
false;public;1;5;;public void process(Exchange exchange) throws Exception {     exchange.getIn().setHeader(CwConstants.METRIC_NAME, "ExchangesCompleted").     exchange.getIn().setHeader(CwConstants.METRIC_VALUE, "2.0").     exchange.getIn().setHeader(CwConstants.METRIC_UNIT, "Count"). }
false;public;0;14;;@Test public void sendInOnly() throws Exception {     mock.expectedMessageCount(1).     template.send("direct:start", ExchangePattern.InOnly, new Processor() {          public void process(Exchange exchange) throws Exception {             exchange.getIn().setHeader(CwConstants.METRIC_NAME, "ExchangesCompleted").             exchange.getIn().setHeader(CwConstants.METRIC_VALUE, "2.0").             exchange.getIn().setHeader(CwConstants.METRIC_UNIT, "Count").         }     }).     assertMockEndpointsSatisfied(). }
false;public;0;6;;@Override public void configure() throws Exception {     from("direct:start").to("aws-cw://http://camel.apache.org/aws-cw?accessKey=XXX&secretKey=XXX").to("mock:result"). }
false;protected;0;10;;protected RouteBuilder createRouteBuilder() throws Exception {     return new RouteBuilder() {          @Override         public void configure() throws Exception {             from("direct:start").to("aws-cw://http://camel.apache.org/aws-cw?accessKey=XXX&secretKey=XXX").to("mock:result").         }     }. }
