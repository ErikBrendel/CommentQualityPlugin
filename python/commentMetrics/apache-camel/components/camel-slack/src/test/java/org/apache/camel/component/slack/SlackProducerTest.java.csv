commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void testSlackMessage() throws Exception {     errors.expectedMessageCount(0).     template.sendBody(test, "Hello from Camel!").     assertMockEndpointsSatisfied(). }
false;public;0;8;;@Test public void testSlackError() throws Exception {     errors.expectedMessageCount(1).     template.sendBody(error, "Error from Camel!").     assertMockEndpointsSatisfied(). }
false;public;0;13;;@Override public void configure() {     SlackComponent slack = new SlackComponent().     slack.setWebhookUrl(System.getProperty("SLACK_HOOK", "https://hooks.slack.com/services/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")).     context.addComponent("slack", slack).     onException(Exception.class).handled(true).to(errors).     final String slacUser = System.getProperty("SLACK_USER", "CamelTest").     from(test).to(String.format("slack:#general?iconEmoji=:camel:&username=%s", slacUser)).     from(error).to(String.format("slack:#badchannel?iconEmoji=:camel:&username=%s", slack)). }
false;protected;0;18;;@Override protected RouteBuilder createRouteBuilder() {     return new RouteBuilder() {          @Override         public void configure() {             SlackComponent slack = new SlackComponent().             slack.setWebhookUrl(System.getProperty("SLACK_HOOK", "https://hooks.slack.com/services/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")).             context.addComponent("slack", slack).             onException(Exception.class).handled(true).to(errors).             final String slacUser = System.getProperty("SLACK_USER", "CamelTest").             from(test).to(String.format("slack:#general?iconEmoji=:camel:&username=%s", slacUser)).             from(error).to(String.format("slack:#badchannel?iconEmoji=:camel:&username=%s", slack)).         }     }. }
