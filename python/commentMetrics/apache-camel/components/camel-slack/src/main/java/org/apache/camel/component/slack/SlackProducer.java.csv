# id;timestamp;commentText;codeText;commentWords;codeWords
SlackProducer -> public SlackProducer(SlackEndpoint endpoint);1433141712;Constuctor__@param endpoint a SlackEndpoint;public SlackProducer(SlackEndpoint endpoint) {_        super(endpoint)__        this.slackEndpoint = endpoint__    };constuctor,param,endpoint,a,slack,endpoint;public,slack,producer,slack,endpoint,endpoint,super,endpoint,this,slack,endpoint,endpoint
SlackProducer -> public SlackProducer(SlackEndpoint endpoint);1433141713;Constuctor__@param endpoint a SlackEndpoint;public SlackProducer(SlackEndpoint endpoint) {_        super(endpoint)__        this.slackEndpoint = endpoint__    };constuctor,param,endpoint,a,slack,endpoint;public,slack,producer,slack,endpoint,endpoint,super,endpoint,this,slack,endpoint,endpoint
SlackProducer -> public String asJson(SlackMessage message);1433142374;Returns a JSON string to be posted to the Slack API__@return JSON string;public String asJson(SlackMessage message) {_        Map<String, String> jsonMap = new HashMap<String, String>()___        _        jsonMap.put("text", message.getText())__        jsonMap.put("channel", message.getChannel())__        jsonMap.put("username", message.getUsername())__        jsonMap.put("icon_url", message.getIconUrl())__        jsonMap.put("icon_emoji", message.getIconEmoji())___        _        JSONObject jsonObject = new JSONObject(jsonMap)___        _        return JSONObject.toJSONString(jsonObject)__    };returns,a,json,string,to,be,posted,to,the,slack,api,return,json,string;public,string,as,json,slack,message,message,map,string,string,json,map,new,hash,map,string,string,json,map,put,text,message,get,text,json,map,put,channel,message,get,channel,json,map,put,username,message,get,username,json,map,put,message,get,icon,url,json,map,put,message,get,icon,emoji,jsonobject,json,object,new,jsonobject,json,map,return,jsonobject,to,jsonstring,json,object
SlackProducer -> public String asJson(SlackMessage message);1439042176;Returns a JSON string to be posted to the Slack API__@return JSON string;public String asJson(SlackMessage message) {_        Map<String, String> jsonMap = new HashMap<String, String>()___        _        jsonMap.put("text", message.getText())__        jsonMap.put("channel", message.getChannel())__        jsonMap.put("username", message.getUsername())__        jsonMap.put("icon_url", message.getIconUrl())__        jsonMap.put("icon_emoji", message.getIconEmoji())___        _        JSONObject jsonObject = new JSONObject(jsonMap)___        _        return JSONObject.toJSONString(jsonObject)__    };returns,a,json,string,to,be,posted,to,the,slack,api,return,json,string;public,string,as,json,slack,message,message,map,string,string,json,map,new,hash,map,string,string,json,map,put,text,message,get,text,json,map,put,channel,message,get,channel,json,map,put,username,message,get,username,json,map,put,message,get,icon,url,json,map,put,message,get,icon,emoji,jsonobject,json,object,new,jsonobject,json,map,return,jsonobject,to,jsonstring,json,object
SlackProducer -> public String asJson(SlackMessage message);1474187231;Returns a JSON string to be posted to the Slack API__@return JSON string;public String asJson(SlackMessage message) {_        Map<String, Object> jsonMap = new HashMap<>()___        _        jsonMap.put("text", message.getText())__        jsonMap.put("channel", message.getChannel())__        jsonMap.put("username", message.getUsername())__        jsonMap.put("icon_url", message.getIconUrl())__        jsonMap.put("icon_emoji", message.getIconEmoji())___        List<SlackMessage.Attachment> attachments = message.getAttachments()__        if (attachments != null && !attachments.isEmpty()) {_            buildAttachmentJson(jsonMap, attachments)__        }__        _        JSONObject jsonObject = new JSONObject(jsonMap)___        _        return JSONObject.toJSONString(jsonObject)__    };returns,a,json,string,to,be,posted,to,the,slack,api,return,json,string;public,string,as,json,slack,message,message,map,string,object,json,map,new,hash,map,json,map,put,text,message,get,text,json,map,put,channel,message,get,channel,json,map,put,username,message,get,username,json,map,put,message,get,icon,url,json,map,put,message,get,icon,emoji,list,slack,message,attachment,attachments,message,get,attachments,if,attachments,null,attachments,is,empty,build,attachment,json,json,map,attachments,jsonobject,json,object,new,jsonobject,json,map,return,jsonobject,to,jsonstring,json,object
SlackProducer -> public String asJson(SlackMessage message);1474187403;Returns a JSON string to be posted to the Slack API__@return JSON string;public String asJson(SlackMessage message) {_        Map<String, Object> jsonMap = new HashMap<>()___        _        jsonMap.put("text", message.getText())__        jsonMap.put("channel", message.getChannel())__        jsonMap.put("username", message.getUsername())__        jsonMap.put("icon_url", message.getIconUrl())__        jsonMap.put("icon_emoji", message.getIconEmoji())___        List<SlackMessage.Attachment> attachments = message.getAttachments()__        if (attachments != null && !attachments.isEmpty()) {_            buildAttachmentJson(jsonMap, attachments)__        }__        _        JSONObject jsonObject = new JSONObject(jsonMap)___        _        return JSONObject.toJSONString(jsonObject)__    };returns,a,json,string,to,be,posted,to,the,slack,api,return,json,string;public,string,as,json,slack,message,message,map,string,object,json,map,new,hash,map,json,map,put,text,message,get,text,json,map,put,channel,message,get,channel,json,map,put,username,message,get,username,json,map,put,message,get,icon,url,json,map,put,message,get,icon,emoji,list,slack,message,attachment,attachments,message,get,attachments,if,attachments,null,attachments,is,empty,build,attachment,json,json,map,attachments,jsonobject,json,object,new,jsonobject,json,map,return,jsonobject,to,jsonstring,json,object
SlackProducer -> public String asJson(SlackMessage message);1518534707;Returns a JSON string to be posted to the Slack API__@return JSON string;public String asJson(SlackMessage message) {_        Map<String, Object> jsonMap = new HashMap<>()___        _        jsonMap.put("text", message.getText())__        jsonMap.put("channel", message.getChannel())__        jsonMap.put("username", message.getUsername())__        jsonMap.put("icon_url", message.getIconUrl())__        jsonMap.put("icon_emoji", message.getIconEmoji())___        List<SlackMessage.Attachment> attachments = message.getAttachments()__        if (attachments != null && !attachments.isEmpty()) {_            buildAttachmentJson(jsonMap, attachments)__        }__        _        JSONObject jsonObject = new JSONObject(jsonMap)___        _        return JSONObject.toJSONString(jsonObject)__    };returns,a,json,string,to,be,posted,to,the,slack,api,return,json,string;public,string,as,json,slack,message,message,map,string,object,json,map,new,hash,map,json,map,put,text,message,get,text,json,map,put,channel,message,get,channel,json,map,put,username,message,get,username,json,map,put,message,get,icon,url,json,map,put,message,get,icon,emoji,list,slack,message,attachment,attachments,message,get,attachments,if,attachments,null,attachments,is,empty,build,attachment,json,json,map,attachments,jsonobject,json,object,new,jsonobject,json,map,return,jsonobject,to,jsonstring,json,object
SlackProducer -> public String asJson(SlackMessage message);1540108163;Returns a JSON string to be posted to the Slack API__@return JSON string;public String asJson(SlackMessage message) {_        Map<String, Object> jsonMap = new HashMap<>()___        _        jsonMap.put("text", message.getText())__        jsonMap.put("channel", message.getChannel())__        jsonMap.put("username", message.getUsername())__        jsonMap.put("icon_url", message.getIconUrl())__        jsonMap.put("icon_emoji", message.getIconEmoji())___        List<SlackMessage.Attachment> attachments = message.getAttachments()__        if (attachments != null && !attachments.isEmpty()) {_            buildAttachmentJson(jsonMap, attachments)__        }__        _        JSONObject jsonObject = new JSONObject(jsonMap)___        _        return JSONObject.toJSONString(jsonObject)__    };returns,a,json,string,to,be,posted,to,the,slack,api,return,json,string;public,string,as,json,slack,message,message,map,string,object,json,map,new,hash,map,json,map,put,text,message,get,text,json,map,put,channel,message,get,channel,json,map,put,username,message,get,username,json,map,put,message,get,icon,url,json,map,put,message,get,icon,emoji,list,slack,message,attachment,attachments,message,get,attachments,if,attachments,null,attachments,is,empty,build,attachment,json,json,map,attachments,jsonobject,json,object,new,jsonobject,json,map,return,jsonobject,to,jsonstring,json,object
SlackProducer -> public String asJson(SlackMessage message);1549371821;Returns a JSON string to be posted to the Slack API__@return JSON string;public String asJson(SlackMessage message) {_        Map<String, Object> jsonMap = new HashMap<>()___        _        jsonMap.put("text", message.getText())__        jsonMap.put("channel", message.getChannel())__        jsonMap.put("username", message.getUsername())__        jsonMap.put("icon_url", message.getIconUrl())__        jsonMap.put("icon_emoji", message.getIconEmoji())___        List<SlackMessage.Attachment> attachments = message.getAttachments()__        if (attachments != null && !attachments.isEmpty()) {_            buildAttachmentJson(jsonMap, attachments)__        }__        _        return new JsonObject(jsonMap).toJson()__    };returns,a,json,string,to,be,posted,to,the,slack,api,return,json,string;public,string,as,json,slack,message,message,map,string,object,json,map,new,hash,map,json,map,put,text,message,get,text,json,map,put,channel,message,get,channel,json,map,put,username,message,get,username,json,map,put,message,get,icon,url,json,map,put,message,get,icon,emoji,list,slack,message,attachment,attachments,message,get,attachments,if,attachments,null,attachments,is,empty,build,attachment,json,json,map,attachments,return,new,json,object,json,map,to,json
